/**
 * Personnel Data
 * API for reading and writing personnel data incl. data about attendances and absences
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AbsencePeriodsResponseAllOfDataCertificate from './AbsencePeriodsResponseAllOfDataCertificate';
import AbsencePeriodsResponseAllOfDataEmployee from './AbsencePeriodsResponseAllOfDataEmployee';
import AbsencePeriodsResponseAllOfDataTimeOffType from './AbsencePeriodsResponseAllOfDataTimeOffType';

/**
 * The AbsencePeriodsResponseAllOfDataAttributes model module.
 * @module model/AbsencePeriodsResponseAllOfDataAttributes
 * @version 1.0
 */
class AbsencePeriodsResponseAllOfDataAttributes {
    /**
     * Constructs a new <code>AbsencePeriodsResponseAllOfDataAttributes</code>.
     * @alias module:model/AbsencePeriodsResponseAllOfDataAttributes
     */
    constructor() { 
        
        AbsencePeriodsResponseAllOfDataAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AbsencePeriodsResponseAllOfDataAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AbsencePeriodsResponseAllOfDataAttributes} obj Optional instance to populate.
     * @return {module:model/AbsencePeriodsResponseAllOfDataAttributes} The populated <code>AbsencePeriodsResponseAllOfDataAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AbsencePeriodsResponseAllOfDataAttributes();

            if (data.hasOwnProperty('certificate')) {
                obj['certificate'] = AbsencePeriodsResponseAllOfDataCertificate.constructFromObject(data['certificate']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('days_count')) {
                obj['days_count'] = ApiClient.convertToType(data['days_count'], 'Number');
            }
            if (data.hasOwnProperty('employee')) {
                obj['employee'] = AbsencePeriodsResponseAllOfDataEmployee.constructFromObject(data['employee']);
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('half_day_end')) {
                obj['half_day_end'] = ApiClient.convertToType(data['half_day_end'], 'Number');
            }
            if (data.hasOwnProperty('half_day_start')) {
                obj['half_day_start'] = ApiClient.convertToType(data['half_day_start'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('time_off_type')) {
                obj['time_off_type'] = AbsencePeriodsResponseAllOfDataTimeOffType.constructFromObject(data['time_off_type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AbsencePeriodsResponseAllOfDataAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AbsencePeriodsResponseAllOfDataAttributes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `certificate`
        if (data['certificate']) { // data not null
          AbsencePeriodsResponseAllOfDataCertificate.validateJSON(data['certificate']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `employee`
        if (data['employee']) { // data not null
          AbsencePeriodsResponseAllOfDataEmployee.validateJSON(data['employee']);
        }
        // ensure the json data is a string
        if (data['end_date'] && !(typeof data['end_date'] === 'string' || data['end_date'] instanceof String)) {
            throw new Error("Expected the field `end_date` to be a primitive type in the JSON string but got " + data['end_date']);
        }
        // ensure the json data is a string
        if (data['start_date'] && !(typeof data['start_date'] === 'string' || data['start_date'] instanceof String)) {
            throw new Error("Expected the field `start_date` to be a primitive type in the JSON string but got " + data['start_date']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `time_off_type`
        if (data['time_off_type']) { // data not null
          AbsencePeriodsResponseAllOfDataTimeOffType.validateJSON(data['time_off_type']);
        }

        return true;
    }


}



/**
 * @member {module:model/AbsencePeriodsResponseAllOfDataCertificate} certificate
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['certificate'] = undefined;

/**
 * @member {String} created_at
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['created_at'] = undefined;

/**
 * @member {Number} days_count
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['days_count'] = undefined;

/**
 * @member {module:model/AbsencePeriodsResponseAllOfDataEmployee} employee
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['employee'] = undefined;

/**
 * @member {String} end_date
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['end_date'] = undefined;

/**
 * @member {Number} half_day_end
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['half_day_end'] = undefined;

/**
 * @member {Number} half_day_start
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['half_day_start'] = undefined;

/**
 * @member {Number} id
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['id'] = undefined;

/**
 * @member {String} start_date
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['start_date'] = undefined;

/**
 * @member {String} status
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['status'] = undefined;

/**
 * @member {module:model/AbsencePeriodsResponseAllOfDataTimeOffType} time_off_type
 */
AbsencePeriodsResponseAllOfDataAttributes.prototype['time_off_type'] = undefined;






export default AbsencePeriodsResponseAllOfDataAttributes;

