# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AbsenceEntitlementValueInnerAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlement: float=None, id: int=None, name: str=None):
        """AbsenceEntitlementValueInnerAttributes - a model defined in OpenAPI

        :param entitlement: The entitlement of this AbsenceEntitlementValueInnerAttributes.
        :param id: The id of this AbsenceEntitlementValueInnerAttributes.
        :param name: The name of this AbsenceEntitlementValueInnerAttributes.
        """
        self.openapi_types = {
            'entitlement': float,
            'id': int,
            'name': str
        }

        self.attribute_map = {
            'entitlement': 'entitlement',
            'id': 'id',
            'name': 'name'
        }

        self._entitlement = entitlement
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AbsenceEntitlementValueInnerAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AbsenceEntitlement_value_inner_attributes of this AbsenceEntitlementValueInnerAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlement(self):
        """Gets the entitlement of this AbsenceEntitlementValueInnerAttributes.


        :return: The entitlement of this AbsenceEntitlementValueInnerAttributes.
        :rtype: float
        """
        return self._entitlement

    @entitlement.setter
    def entitlement(self, entitlement):
        """Sets the entitlement of this AbsenceEntitlementValueInnerAttributes.


        :param entitlement: The entitlement of this AbsenceEntitlementValueInnerAttributes.
        :type entitlement: float
        """

        self._entitlement = entitlement

    @property
    def id(self):
        """Gets the id of this AbsenceEntitlementValueInnerAttributes.


        :return: The id of this AbsenceEntitlementValueInnerAttributes.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AbsenceEntitlementValueInnerAttributes.


        :param id: The id of this AbsenceEntitlementValueInnerAttributes.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AbsenceEntitlementValueInnerAttributes.


        :return: The name of this AbsenceEntitlementValueInnerAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AbsenceEntitlementValueInnerAttributes.


        :param name: The name of this AbsenceEntitlementValueInnerAttributes.
        :type name: str
        """

        self._name = name
