# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateTimeOffPeriodRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, employee_id: int=None, end_date: date=None, half_day_end: bool=None, half_day_start: bool=None, start_date: date=None, time_off_type_id: int=None):
        """CreateTimeOffPeriodRequest - a model defined in OpenAPI

        :param comment: The comment of this CreateTimeOffPeriodRequest.
        :param employee_id: The employee_id of this CreateTimeOffPeriodRequest.
        :param end_date: The end_date of this CreateTimeOffPeriodRequest.
        :param half_day_end: The half_day_end of this CreateTimeOffPeriodRequest.
        :param half_day_start: The half_day_start of this CreateTimeOffPeriodRequest.
        :param start_date: The start_date of this CreateTimeOffPeriodRequest.
        :param time_off_type_id: The time_off_type_id of this CreateTimeOffPeriodRequest.
        """
        self.openapi_types = {
            'comment': str,
            'employee_id': int,
            'end_date': date,
            'half_day_end': bool,
            'half_day_start': bool,
            'start_date': date,
            'time_off_type_id': int
        }

        self.attribute_map = {
            'comment': 'comment',
            'employee_id': 'employee_id',
            'end_date': 'end_date',
            'half_day_end': 'half_day_end',
            'half_day_start': 'half_day_start',
            'start_date': 'start_date',
            'time_off_type_id': 'time_off_type_id'
        }

        self._comment = comment
        self._employee_id = employee_id
        self._end_date = end_date
        self._half_day_end = half_day_end
        self._half_day_start = half_day_start
        self._start_date = start_date
        self._time_off_type_id = time_off_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTimeOffPeriodRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTimeOffPeriodRequest of this CreateTimeOffPeriodRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this CreateTimeOffPeriodRequest.

        Optional comment

        :return: The comment of this CreateTimeOffPeriodRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CreateTimeOffPeriodRequest.

        Optional comment

        :param comment: The comment of this CreateTimeOffPeriodRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def employee_id(self):
        """Gets the employee_id of this CreateTimeOffPeriodRequest.

        Employee identifier

        :return: The employee_id of this CreateTimeOffPeriodRequest.
        :rtype: int
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this CreateTimeOffPeriodRequest.

        Employee identifier

        :param employee_id: The employee_id of this CreateTimeOffPeriodRequest.
        :type employee_id: int
        """
        if employee_id is None:
            raise ValueError("Invalid value for `employee_id`, must not be `None`")

        self._employee_id = employee_id

    @property
    def end_date(self):
        """Gets the end_date of this CreateTimeOffPeriodRequest.

        Absence end date as YYYY-MM-DD

        :return: The end_date of this CreateTimeOffPeriodRequest.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this CreateTimeOffPeriodRequest.

        Absence end date as YYYY-MM-DD

        :param end_date: The end_date of this CreateTimeOffPeriodRequest.
        :type end_date: date
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")

        self._end_date = end_date

    @property
    def half_day_end(self):
        """Gets the half_day_end of this CreateTimeOffPeriodRequest.

        Weather the end date is a half-day off

        :return: The half_day_end of this CreateTimeOffPeriodRequest.
        :rtype: bool
        """
        return self._half_day_end

    @half_day_end.setter
    def half_day_end(self, half_day_end):
        """Sets the half_day_end of this CreateTimeOffPeriodRequest.

        Weather the end date is a half-day off

        :param half_day_end: The half_day_end of this CreateTimeOffPeriodRequest.
        :type half_day_end: bool
        """
        if half_day_end is None:
            raise ValueError("Invalid value for `half_day_end`, must not be `None`")

        self._half_day_end = half_day_end

    @property
    def half_day_start(self):
        """Gets the half_day_start of this CreateTimeOffPeriodRequest.

        Weather the start date is a half-day off

        :return: The half_day_start of this CreateTimeOffPeriodRequest.
        :rtype: bool
        """
        return self._half_day_start

    @half_day_start.setter
    def half_day_start(self, half_day_start):
        """Sets the half_day_start of this CreateTimeOffPeriodRequest.

        Weather the start date is a half-day off

        :param half_day_start: The half_day_start of this CreateTimeOffPeriodRequest.
        :type half_day_start: bool
        """
        if half_day_start is None:
            raise ValueError("Invalid value for `half_day_start`, must not be `None`")

        self._half_day_start = half_day_start

    @property
    def start_date(self):
        """Gets the start_date of this CreateTimeOffPeriodRequest.

        Absence start date as YYYY-MM-DD

        :return: The start_date of this CreateTimeOffPeriodRequest.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this CreateTimeOffPeriodRequest.

        Absence start date as YYYY-MM-DD

        :param start_date: The start_date of this CreateTimeOffPeriodRequest.
        :type start_date: date
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")

        self._start_date = start_date

    @property
    def time_off_type_id(self):
        """Gets the time_off_type_id of this CreateTimeOffPeriodRequest.

        Time-off type identifier

        :return: The time_off_type_id of this CreateTimeOffPeriodRequest.
        :rtype: int
        """
        return self._time_off_type_id

    @time_off_type_id.setter
    def time_off_type_id(self, time_off_type_id):
        """Sets the time_off_type_id of this CreateTimeOffPeriodRequest.

        Time-off type identifier

        :param time_off_type_id: The time_off_type_id of this CreateTimeOffPeriodRequest.
        :type time_off_type_id: int
        """
        if time_off_type_id is None:
            raise ValueError("Invalid value for `time_off_type_id`, must not be `None`")

        self._time_off_type_id = time_off_type_id
