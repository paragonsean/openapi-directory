/**
 * Deep Art Effects
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-02-10T16:24:46Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadResponse model module.
 * @module model/UploadResponse
 * @version 2017-02-10T16:24:46Z
 */
class UploadResponse {
    /**
     * Constructs a new <code>UploadResponse</code>.
     * @alias module:model/UploadResponse
     */
    constructor() { 
        
        UploadResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadResponse} obj Optional instance to populate.
     * @return {module:model/UploadResponse} The populated <code>UploadResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadResponse();

            if (data.hasOwnProperty('submissionId')) {
                obj['submissionId'] = ApiClient.convertToType(data['submissionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['submissionId'] && !(typeof data['submissionId'] === 'string' || data['submissionId'] instanceof String)) {
            throw new Error("Expected the field `submissionId` to be a primitive type in the JSON string but got " + data['submissionId']);
        }

        return true;
    }


}



/**
 * @member {String} submissionId
 */
UploadResponse.prototype['submissionId'] = undefined;






export default UploadResponse;

