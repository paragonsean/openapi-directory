/**
 * Deep Art Effects
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-02-10T16:24:46Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Result from '../model/Result';
import Styles from '../model/Styles';
import UploadRequest from '../model/UploadRequest';
import UploadResponse from '../model/UploadResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2017-02-10T16:24:46Z
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the noauthResultGet operation.
     * @callback module:api/DefaultApi~noauthResultGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Result} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [submissionId] 
     * @param {module:api/DefaultApi~noauthResultGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Result}
     */
    noauthResultGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'submissionId': opts['submissionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Result;
      return this.apiClient.callApi(
        '/noauth/result', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the noauthStylesGet operation.
     * @callback module:api/DefaultApi~noauthStylesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Styles} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/DefaultApi~noauthStylesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Styles}
     */
    noauthStylesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Styles;
      return this.apiClient.callApi(
        '/noauth/styles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the noauthUploadPost operation.
     * @callback module:api/DefaultApi~noauthUploadPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UploadResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/UploadRequest} uploadRequest 
     * @param {module:api/DefaultApi~noauthUploadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UploadResponse}
     */
    noauthUploadPost(uploadRequest, callback) {
      let postBody = uploadRequest;
      // verify the required parameter 'uploadRequest' is set
      if (uploadRequest === undefined || uploadRequest === null) {
        throw new Error("Missing the required parameter 'uploadRequest' when calling noauthUploadPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UploadResponse;
      return this.apiClient.callApi(
        '/noauth/upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
