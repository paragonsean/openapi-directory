/*
 * They Said So Quotes API
 *  They Said So Quotes API offers a complete feature rich REST API access to its quotes platform.  This is the documentation for the world famous [quotes API](https://theysaidso.com/api).  If you are a subscriber and you are trying this from a console you can use Bearer token with your api key as the token. You can test and play with the API right here on this web page. Please note recently we closed downs public access without api key to prevent abuse. The public routes are still available to use free of charge but requires a api token. You can get one for free at our website. For using the private end points and subscribing to the API please visit [https://theysaidso.com/api](https://theysaidso.com/api).
 *
 * The version of the OpenAPI document: 5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.QODResponse;
import org.openapitools.client.model.QuoteResponse;
import org.openapitools.client.model.SuccessResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PrivateQodApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PrivateQodApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PrivateQodApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for qodGet_0
     * @param category QOD Category (Used in public QOD only) (optional)
     * @param language Language of the QOD. The language must be supported in our QOD system. (optional, default to en)
     * @param id QOD defition id (Used in private QOD only) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call qodGet_0Call(String category, String language, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/qod";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (category != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("category", category));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call qodGet_0ValidateBeforeCall(String category, String language, String id, final ApiCallback _callback) throws ApiException {
        return qodGet_0Call(category, language, id, _callback);

    }

    /**
     * 
     * Gets &#x60;Quote of the Day&#x60; (QOD). Optional &#x60;category&#x60; param determines the category of returned quote of the day 
     * @param category QOD Category (Used in public QOD only) (optional)
     * @param language Language of the QOD. The language must be supported in our QOD system. (optional, default to en)
     * @param id QOD defition id (Used in private QOD only) (optional)
     * @return QODResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
     </table>
     */
    public QODResponse qodGet_0(String category, String language, String id) throws ApiException {
        ApiResponse<QODResponse> localVarResp = qodGet_0WithHttpInfo(category, language, id);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets &#x60;Quote of the Day&#x60; (QOD). Optional &#x60;category&#x60; param determines the category of returned quote of the day 
     * @param category QOD Category (Used in public QOD only) (optional)
     * @param language Language of the QOD. The language must be supported in our QOD system. (optional, default to en)
     * @param id QOD defition id (Used in private QOD only) (optional)
     * @return ApiResponse&lt;QODResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<QODResponse> qodGet_0WithHttpInfo(String category, String language, String id) throws ApiException {
        okhttp3.Call localVarCall = qodGet_0ValidateBeforeCall(category, language, id, null);
        Type localVarReturnType = new TypeToken<QODResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets &#x60;Quote of the Day&#x60; (QOD). Optional &#x60;category&#x60; param determines the category of returned quote of the day 
     * @param category QOD Category (Used in public QOD only) (optional)
     * @param language Language of the QOD. The language must be supported in our QOD system. (optional, default to en)
     * @param id QOD defition id (Used in private QOD only) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call qodGet_0Async(String category, String language, String id, final ApiCallback<QODResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = qodGet_0ValidateBeforeCall(category, language, id, _callback);
        Type localVarReturnType = new TypeToken<QODResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for qodPatch
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call qodPatchCall(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/qod";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (repeatAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("repeat_after", repeatAfter));
        }

        if (authors != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("authors", authors));
        }

        if (title != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("title", title));
        }

        if (_private != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("private", _private));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        if (sfw != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sfw", sfw));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call qodPatchValidateBeforeCall(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'title' is set
        if (title == null) {
            throw new ApiException("Missing the required parameter 'title' when calling qodPatch(Async)");
        }

        return qodPatchCall(title, repeatAfter, authors, _private, language, sfw, _callback);

    }

    /**
     * 
     * Update an existing private &#x60;Quote of the Day&#x60; definition. 
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @return QuoteResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public QuoteResponse qodPatch(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw) throws ApiException {
        ApiResponse<QuoteResponse> localVarResp = qodPatchWithHttpInfo(title, repeatAfter, authors, _private, language, sfw);
        return localVarResp.getData();
    }

    /**
     * 
     * Update an existing private &#x60;Quote of the Day&#x60; definition. 
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @return ApiResponse&lt;QuoteResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<QuoteResponse> qodPatchWithHttpInfo(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw) throws ApiException {
        okhttp3.Call localVarCall = qodPatchValidateBeforeCall(title, repeatAfter, authors, _private, language, sfw, null);
        Type localVarReturnType = new TypeToken<QuoteResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update an existing private &#x60;Quote of the Day&#x60; definition. 
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call qodPatchAsync(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw, final ApiCallback<QuoteResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = qodPatchValidateBeforeCall(title, repeatAfter, authors, _private, language, sfw, _callback);
        Type localVarReturnType = new TypeToken<QuoteResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for qodPut
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call qodPutCall(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/qod";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (repeatAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("repeat_after", repeatAfter));
        }

        if (authors != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("authors", authors));
        }

        if (title != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("title", title));
        }

        if (_private != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("private", _private));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        if (sfw != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sfw", sfw));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call qodPutValidateBeforeCall(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'title' is set
        if (title == null) {
            throw new ApiException("Missing the required parameter 'title' when calling qodPut(Async)");
        }

        return qodPutCall(title, repeatAfter, authors, _private, language, sfw, _callback);

    }

    /**
     * 
     * Create a private &#x60;Quote of the Day&#x60; service.  
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @return SuccessResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public SuccessResponse qodPut(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw) throws ApiException {
        ApiResponse<SuccessResponse> localVarResp = qodPutWithHttpInfo(title, repeatAfter, authors, _private, language, sfw);
        return localVarResp.getData();
    }

    /**
     * 
     * Create a private &#x60;Quote of the Day&#x60; service.  
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @return ApiResponse&lt;SuccessResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SuccessResponse> qodPutWithHttpInfo(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw) throws ApiException {
        okhttp3.Call localVarCall = qodPutValidateBeforeCall(title, repeatAfter, authors, _private, language, sfw, null);
        Type localVarReturnType = new TypeToken<SuccessResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create a private &#x60;Quote of the Day&#x60; service.  
     * @param title Title of the Quote of the day category (required)
     * @param repeatAfter How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here. (optional, default to 30)
     * @param authors Comma seperated author names. Quotes will be chosen from one of these authors. (optional)
     * @param _private Should apply the filters to the private collection. Default is public quotes in the platform. (optional, default to false)
     * @param language Quotes language. (optional, default to en)
     * @param sfw Consider only quotes marked as \&quot;sfw\&quot; (Safe for work). (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200  response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> 400  response </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403  No access response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call qodPutAsync(String title, Integer repeatAfter, List authors, Boolean _private, String language, Boolean sfw, final ApiCallback<SuccessResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = qodPutValidateBeforeCall(title, repeatAfter, authors, _private, language, sfw, _callback);
        Type localVarReturnType = new TypeToken<SuccessResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
