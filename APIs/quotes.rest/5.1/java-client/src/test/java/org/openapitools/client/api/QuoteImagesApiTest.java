/*
 * They Said So Quotes API
 *  They Said So Quotes API offers a complete feature rich REST API access to its quotes platform.  This is the documentation for the world famous [quotes API](https://theysaidso.com/api).  If you are a subscriber and you are trying this from a console you can use Bearer token with your api key as the token. You can test and play with the API right here on this web page. Please note recently we closed downs public access without api key to prevent abuse. The public routes are still available to use free of charge but requires a api token. You can get one for free at our website. For using the private end points and subscribing to the API please visit [https://theysaidso.com/api](https://theysaidso.com/api).
 *
 * The version of the OpenAPI document: 5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QuoteImagesApi
 */
@Disabled
public class QuoteImagesApiTest {

    private final QuoteImagesApi api = new QuoteImagesApi();

    /**
     * Delete a background image file. The user needs to be the owner of the background image to be able to delete it. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageBackgroundDeleteTest() throws ApiException {
        String id = null;
        api.quoteImageBackgroundDelete(id);
        // TODO: test validations
    }

    /**
     * Lists background images in your private collection.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageBackgroundListGetTest() throws ApiException {
        Integer start = null;
        api.quoteImageBackgroundListGet(start);
        // TODO: test validations
    }

    /**
     * Add an image for use later as a quote background image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageBackgroundPostTest() throws ApiException {
        File image = null;
        String tags = null;
        api.quoteImageBackgroundPost(image, tags);
        // TODO: test validations
    }

    /**
     * Searches for a background image with a given tag.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageBackgroundSearchGetTest() throws ApiException {
        String query = null;
        api.quoteImageBackgroundSearchGet(query);
        // TODO: test validations
    }

    /**
     * Add a tag to a given Image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageBackgroundTagsAddPostTest() throws ApiException {
        String id = null;
        String tags = null;
        api.quoteImageBackgroundTagsAddPost(id, tags);
        // TODO: test validations
    }

    /**
     * Remove a tag from a given Image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageBackgroundTagsRemovePostTest() throws ApiException {
        String id = null;
        String tags = null;
        api.quoteImageBackgroundTagsRemovePost(id, tags);
        // TODO: test validations
    }

    /**
     * Delete a quote image. The user needs to be the owner of the quote image to be able to delete it. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageDeleteTest() throws ApiException {
        String id = null;
        api.quoteImageDelete(id);
        // TODO: test validations
    }

    /**
     * Delete a font file. The user needs to be the owner of the font to be able to delete it. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageFontDeleteTest() throws ApiException {
        String id = null;
        api.quoteImageFontDelete(id);
        // TODO: test validations
    }

    /**
     * Lists background images in your private collection.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageFontListGetTest() throws ApiException {
        Integer start = null;
        api.quoteImageFontListGet(start);
        // TODO: test validations
    }

    /**
     * Add a font file for use later in creating a quote image. This is essentially a &#x60;PUT&#x60; but not many clients handle PUT with binary stream i.e. a file, gracefully.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageFontPostTest() throws ApiException {
        File font = null;
        String tags = null;
        api.quoteImageFontPost(font, tags);
        // TODO: test validations
    }

    /**
     * Searches for a font with a given tag.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageFontSearchGetTest() throws ApiException {
        String query = null;
        api.quoteImageFontSearchGet(query);
        // TODO: test validations
    }

    /**
     * Add a tag to a given font.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageFontTagsAddPostTest() throws ApiException {
        String id = null;
        String tags = null;
        api.quoteImageFontTagsAddPost(id, tags);
        // TODO: test validations
    }

    /**
     * Remove a tag from a given Font.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageFontTagsRemovePostTest() throws ApiException {
        String id = null;
        String tags = null;
        api.quoteImageFontTagsRemovePost(id, tags);
        // TODO: test validations
    }

    /**
     * Gets a Quote image for a given id. Response can be an image file as a binary or a base64 encoded contents wrapped in json. &#x60;TODO&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageGetTest() throws ApiException {
        String id = null;
        Boolean binary = null;
        api.quoteImageGet(id, binary);
        // TODO: test validations
    }

    /**
     * Create a new quote image for a given quote. Choose background colors/images , choose different font styles and generate a beautiful quote image. Did you just had a feeling of being a god or what?! 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImagePutTest() throws ApiException {
        String quoteId = null;
        String bgimageId = null;
        String bgColor = null;
        String fontId = null;
        String textColor = null;
        String textSize = null;
        String halign = null;
        String valign = null;
        Integer width = null;
        Integer height = null;
        Boolean branding = null;
        Boolean includeTransparentLayer = null;
        api.quoteImagePut(quoteId, bgimageId, bgColor, fontId, textColor, textSize, halign, valign, width, height, branding, includeTransparentLayer);
        // TODO: test validations
    }

    /**
     * Gets a Random Quote image. Optional &#x60;category&#x60; param determines the category of quote used in the image. Optional &#x60;author&#x60; param gets the quote image of a given author.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteImageSearchGetTest() throws ApiException {
        String category = null;
        String author = null;
        Boolean _private = null;
        api.quoteImageSearchGet(category, author, _private);
        // TODO: test validations
    }

}
