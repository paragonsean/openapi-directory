/*
 * They Said So Quotes API
 *  They Said So Quotes API offers a complete feature rich REST API access to its quotes platform.  This is the documentation for the world famous [quotes API](https://theysaidso.com/api).  If you are a subscriber and you are trying this from a console you can use Bearer token with your api key as the token. You can test and play with the API right here on this web page. Please note recently we closed downs public access without api key to prevent abuse. The public routes are still available to use free of charge but requires a api token. You can get one for free at our website. For using the private end points and subscribing to the API please visit [https://theysaidso.com/api](https://theysaidso.com/api).
 *
 * The version of the OpenAPI document: 5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.QuoteResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrivateQuotesApi
 */
@Disabled
public class PrivateQuotesApiTest {

    private final PrivateQuotesApi api = new PrivateQuotesApi();

    /**
     * Delete a quote. The user needs to be the owner of the quote to be able to delete it. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteDeleteTest() throws ApiException {
        String id = null;
        api.quoteDelete(id);
        // TODO: test validations
    }

    /**
     * Gets a &#x60;Quote&#x60; with a given &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteGet_0Test() throws ApiException {
        String id = null;
        QuoteResponse response = api.quoteGet_0(id);
        // TODO: test validations
    }

    /**
     * Get the list of quotes in your private collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteListGetTest() throws ApiException {
        Integer start = null;
        Integer limit = null;
        api.quoteListGet(start, limit);
        // TODO: test validations
    }

    /**
     * Update a quote
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quotePatchTest() throws ApiException {
        String id = null;
        String quote = null;
        String author = null;
        String language = null;
        String tags = null;
        api.quotePatch(id, quote, author, language, tags);
        // TODO: test validations
    }

    /**
     * Add a new quote to your private collection. Same as &#39;PUT&#39; but added since some clients don&#39;t handle PUT well.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quotePostTest() throws ApiException {
        String quote = null;
        String author = null;
        String tags = null;
        String language = null;
        api.quotePost(quote, author, tags, language);
        // TODO: test validations
    }

    /**
     * Add a new quote to your private collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quotePutTest() throws ApiException {
        String quote = null;
        String author = null;
        String tags = null;
        String language = null;
        api.quotePut(quote, author, tags, language);
        // TODO: test validations
    }

    /**
     * Add a tag to a given Quote.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteTagsAddPostTest() throws ApiException {
        String id = null;
        String tags = null;
        api.quoteTagsAddPost(id, tags);
        // TODO: test validations
    }

    /**
     * Remove a tag from a given quote.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void quoteTagsRemovePostTest() throws ApiException {
        String id = null;
        String tags = null;
        api.quoteTagsRemovePost(id, tags);
        // TODO: test validations
    }

}
