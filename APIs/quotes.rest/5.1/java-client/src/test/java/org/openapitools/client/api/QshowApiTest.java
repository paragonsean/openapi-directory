/*
 * They Said So Quotes API
 *  They Said So Quotes API offers a complete feature rich REST API access to its quotes platform.  This is the documentation for the world famous [quotes API](https://theysaidso.com/api).  If you are a subscriber and you are trying this from a console you can use Bearer token with your api key as the token. You can test and play with the API right here on this web page. Please note recently we closed downs public access without api key to prevent abuse. The public routes are still available to use free of charge but requires a api token. You can get one for free at our website. For using the private end points and subscribing to the API please visit [https://theysaidso.com/api](https://theysaidso.com/api).
 *
 * The version of the OpenAPI document: 5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QshowApi
 */
@Disabled
public class QshowApiTest {

    private final QshowApi api = new QshowApi();

    /**
     * Delete a qshow. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowDeleteTest() throws ApiException {
        String id = null;
        api.qshowDelete(id);
        // TODO: test validations
    }

    /**
     * Gets a details about a qshow. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowGetTest() throws ApiException {
        String id = null;
        api.qshowGet(id);
        // TODO: test validations
    }

    /**
     * Get the list of Qshows in They Said So platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowListGetTest() throws ApiException {
        Integer start = null;
        Boolean _public = null;
        api.qshowListGet(start, _public);
        // TODO: test validations
    }

    /**
     * Update an existing qshow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowPatchTest() throws ApiException {
        String id = null;
        String title = null;
        String description = null;
        List<String> tags = null;
        api.qshowPatch(id, title, description, tags);
        // TODO: test validations
    }

    /**
     * Create and add a new qshow to your private collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowPutTest() throws ApiException {
        String title = null;
        String description = null;
        List<String> tags = null;
        api.qshowPut(title, description, tags);
        // TODO: test validations
    }

    /**
     * Add a quote to a given Qshow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowQuotesAddPostTest() throws ApiException {
        String id = null;
        String quoteid = null;
        api.qshowQuotesAddPost(id, quoteid);
        // TODO: test validations
    }

    /**
     * Get the quotes in a given Qshow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowQuotesGetTest() throws ApiException {
        String id = null;
        api.qshowQuotesGet(id);
        // TODO: test validations
    }

    /**
     * Remove a quote to a given Qshow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qshowQuotesRemovePostTest() throws ApiException {
        String id = null;
        String quoteid = null;
        api.qshowQuotesRemovePost(id, quoteid);
        // TODO: test validations
    }

}
