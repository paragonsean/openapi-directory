/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BrowserJsonResponse from './model/BrowserJsonResponse';
import InfoResponse from './model/InfoResponse';
import InputImage from './model/InputImage';
import SearchData from './model/SearchData';
import SearchItem from './model/SearchItem';
import SearchResults from './model/SearchResults';
import FaceCheckAPIApi from './api/FaceCheckAPIApi';


/**
* Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck&#39;s REST API is hassle-free and easy to use. For code examples visit &lt;a href&#x3D;&#39;https://facecheck.id/Face-Search/API&#39;&gt;https://facecheck.id/Face-Search/API&lt;/a&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FacialRecognitionReverseImageFaceSearchApi = require('index'); // See note below*.
* var xxxSvc = new FacialRecognitionReverseImageFaceSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FacialRecognitionReverseImageFaceSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FacialRecognitionReverseImageFaceSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FacialRecognitionReverseImageFaceSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.02
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BrowserJsonResponse model constructor.
     * @property {module:model/BrowserJsonResponse}
     */
    BrowserJsonResponse,

    /**
     * The InfoResponse model constructor.
     * @property {module:model/InfoResponse}
     */
    InfoResponse,

    /**
     * The InputImage model constructor.
     * @property {module:model/InputImage}
     */
    InputImage,

    /**
     * The SearchData model constructor.
     * @property {module:model/SearchData}
     */
    SearchData,

    /**
     * The SearchItem model constructor.
     * @property {module:model/SearchItem}
     */
    SearchItem,

    /**
     * The SearchResults model constructor.
     * @property {module:model/SearchResults}
     */
    SearchResults,

    /**
    * The FaceCheckAPIApi service constructor.
    * @property {module:api/FaceCheckAPIApi}
    */
    FaceCheckAPIApi
};
