/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchItem model module.
 * @module model/SearchItem
 * @version v1.02
 */
class SearchItem {
    /**
     * Constructs a new <code>SearchItem</code>.
     * @alias module:model/SearchItem
     */
    constructor() { 
        
        SearchItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchItem} obj Optional instance to populate.
     * @return {module:model/SearchItem} The populated <code>SearchItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchItem();

            if (data.hasOwnProperty('base64')) {
                obj['base64'] = ApiClient.convertToType(data['base64'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'Number');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('indexDB')) {
                obj['indexDB'] = ApiClient.convertToType(data['indexDB'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('seen')) {
                obj['seen'] = ApiClient.convertToType(data['seen'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base64'] && !(typeof data['base64'] === 'string' || data['base64'] instanceof String)) {
            throw new Error("Expected the field `base64` to be a primitive type in the JSON string but got " + data['base64']);
        }
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} base64
 */
SearchItem.prototype['base64'] = undefined;

/**
 * @member {Number} group
 */
SearchItem.prototype['group'] = undefined;

/**
 * @member {String} guid
 */
SearchItem.prototype['guid'] = undefined;

/**
 * @member {Number} index
 */
SearchItem.prototype['index'] = undefined;

/**
 * @member {Number} indexDB
 */
SearchItem.prototype['indexDB'] = undefined;

/**
 * @member {Number} score
 */
SearchItem.prototype['score'] = undefined;

/**
 * @member {Number} seen
 */
SearchItem.prototype['seen'] = undefined;

/**
 * @member {String} url
 */
SearchItem.prototype['url'] = undefined;






export default SearchItem;

