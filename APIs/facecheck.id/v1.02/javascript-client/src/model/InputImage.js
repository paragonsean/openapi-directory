/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InputImage model module.
 * @module model/InputImage
 * @version v1.02
 */
class InputImage {
    /**
     * Constructs a new <code>InputImage</code>.
     * @alias module:model/InputImage
     */
    constructor() { 
        
        InputImage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InputImage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputImage} obj Optional instance to populate.
     * @return {module:model/InputImage} The populated <code>InputImage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputImage();

            if (data.hasOwnProperty('base64')) {
                obj['base64'] = ApiClient.convertToType(data['base64'], 'String');
            }
            if (data.hasOwnProperty('id_pic')) {
                obj['id_pic'] = ApiClient.convertToType(data['id_pic'], 'String');
            }
            if (data.hasOwnProperty('svg_anim')) {
                obj['svg_anim'] = ApiClient.convertToType(data['svg_anim'], 'String');
            }
            if (data.hasOwnProperty('url_source')) {
                obj['url_source'] = ApiClient.convertToType(data['url_source'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputImage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputImage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base64'] && !(typeof data['base64'] === 'string' || data['base64'] instanceof String)) {
            throw new Error("Expected the field `base64` to be a primitive type in the JSON string but got " + data['base64']);
        }
        // ensure the json data is a string
        if (data['id_pic'] && !(typeof data['id_pic'] === 'string' || data['id_pic'] instanceof String)) {
            throw new Error("Expected the field `id_pic` to be a primitive type in the JSON string but got " + data['id_pic']);
        }
        // ensure the json data is a string
        if (data['svg_anim'] && !(typeof data['svg_anim'] === 'string' || data['svg_anim'] instanceof String)) {
            throw new Error("Expected the field `svg_anim` to be a primitive type in the JSON string but got " + data['svg_anim']);
        }
        // ensure the json data is a string
        if (data['url_source'] && !(typeof data['url_source'] === 'string' || data['url_source'] instanceof String)) {
            throw new Error("Expected the field `url_source` to be a primitive type in the JSON string but got " + data['url_source']);
        }

        return true;
    }


}



/**
 * @member {String} base64
 */
InputImage.prototype['base64'] = undefined;

/**
 * @member {String} id_pic
 */
InputImage.prototype['id_pic'] = undefined;

/**
 * @member {String} svg_anim
 */
InputImage.prototype['svg_anim'] = undefined;

/**
 * @member {String} url_source
 */
InputImage.prototype['url_source'] = undefined;






export default InputImage;

