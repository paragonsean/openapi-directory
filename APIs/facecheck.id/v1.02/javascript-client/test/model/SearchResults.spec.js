/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FacialRecognitionReverseImageFaceSearchApi);
  }
}(this, function(expect, FacialRecognitionReverseImageFaceSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchResults', function() {
    it('should create an instance of SearchResults', function() {
      // uncomment below and update the code to test SearchResults
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be.a(FacialRecognitionReverseImageFaceSearchApi.SearchResults);
    });

    it('should have the property demo (base name: "demo")', function() {
      // uncomment below and update the code to test the property demo
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property facePerSec (base name: "face_per_sec")', function() {
      // uncomment below and update the code to test the property facePerSec
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property freeRam (base name: "freeRam")', function() {
      // uncomment below and update the code to test the property freeRam
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property imagesInBundle (base name: "images_in_bundle")', function() {
      // uncomment below and update the code to test the property imagesInBundle
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property maxScore (base name: "max_score")', function() {
      // uncomment below and update the code to test the property maxScore
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property performance (base name: "performance")', function() {
      // uncomment below and update the code to test the property performance
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property scanedTillIndex (base name: "scaned_till_index")', function() {
      // uncomment below and update the code to test the property scanedTillIndex
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property searchedFaces (base name: "searchedFaces")', function() {
      // uncomment below and update the code to test the property searchedFaces
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property tookSeconds (base name: "tookSeconds")', function() {
      // uncomment below and update the code to test the property tookSeconds
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property tookSecondsDownload (base name: "tookSecondsDownload")', function() {
      // uncomment below and update the code to test the property tookSecondsDownload
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

    it('should have the property tookSecondsQueue (base name: "tookSecondsQueue")', function() {
      // uncomment below and update the code to test the property tookSecondsQueue
      //var instance = new FacialRecognitionReverseImageFaceSearchApi.SearchResults();
      //expect(instance).to.be();
    });

  });

}));
