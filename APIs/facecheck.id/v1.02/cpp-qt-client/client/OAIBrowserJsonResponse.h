/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBrowserJsonResponse.h
 *
 * 
 */

#ifndef OAIBrowserJsonResponse_H
#define OAIBrowserJsonResponse_H

#include <QJsonObject>

#include "OAIInputImage.h"
#include "OAISearch_Results.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInputImage;
class OAISearch_Results;

class OAIBrowserJsonResponse : public OAIObject {
public:
    OAIBrowserJsonResponse();
    OAIBrowserJsonResponse(QString json);
    ~OAIBrowserJsonResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    bool isHasEmptyImages() const;
    void setHasEmptyImages(const bool &has_empty_images);
    bool is_has_empty_images_Set() const;
    bool is_has_empty_images_Valid() const;

    QString getIdSearch() const;
    void setIdSearch(const QString &id_search);
    bool is_id_search_Set() const;
    bool is_id_search_Valid() const;

    QList<OAIInputImage> getInput() const;
    void setInput(const QList<OAIInputImage> &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAISearch_Results getOutput() const;
    void setOutput(const OAISearch_Results &output);
    bool is_output_Set() const;
    bool is_output_Valid() const;

    qint32 getProgress() const;
    void setProgress(const qint32 &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    bool m_has_empty_images;
    bool m_has_empty_images_isSet;
    bool m_has_empty_images_isValid;

    QString m_id_search;
    bool m_id_search_isSet;
    bool m_id_search_isValid;

    QList<OAIInputImage> m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAISearch_Results m_output;
    bool m_output_isSet;
    bool m_output_isValid;

    qint32 m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBrowserJsonResponse)

#endif // OAIBrowserJsonResponse_H
