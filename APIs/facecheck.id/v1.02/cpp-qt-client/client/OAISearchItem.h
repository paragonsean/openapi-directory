/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchItem.h
 *
 * 
 */

#ifndef OAISearchItem_H
#define OAISearchItem_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchItem : public OAIObject {
public:
    OAISearchItem();
    OAISearchItem(QString json);
    ~OAISearchItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBase64() const;
    void setBase64(const QString &base64);
    bool is_base64_Set() const;
    bool is_base64_Valid() const;

    qint32 getGroup() const;
    void setGroup(const qint32 &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    qint64 getIndexDb() const;
    void setIndexDb(const qint64 &index_db);
    bool is_index_db_Set() const;
    bool is_index_db_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    qint64 getSeen() const;
    void setSeen(const qint64 &seen);
    bool is_seen_Set() const;
    bool is_seen_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base64;
    bool m_base64_isSet;
    bool m_base64_isValid;

    qint32 m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    qint64 m_index_db;
    bool m_index_db_isSet;
    bool m_index_db_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    qint64 m_seen;
    bool m_seen_isSet;
    bool m_seen_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchItem)

#endif // OAISearchItem_H
