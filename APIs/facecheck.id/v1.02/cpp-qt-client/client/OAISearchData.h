/**
 * Facial Recognition Reverse Image Face Search API
 * Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>
 *
 * The version of the OpenAPI document: v1.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchData.h
 *
 * 
 */

#ifndef OAISearchData_H
#define OAISearchData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchData : public OAIObject {
public:
    OAISearchData();
    OAISearchData(QString json);
    ~OAISearchData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDemo() const;
    void setDemo(const bool &demo);
    bool is_demo_Set() const;
    bool is_demo_Valid() const;

    QString getIdCaptcha() const;
    void setIdCaptcha(const QString &id_captcha);
    bool is_id_captcha_Set() const;
    bool is_id_captcha_Valid() const;

    QString getIdSearch() const;
    void setIdSearch(const QString &id_search);
    bool is_id_search_Set() const;
    bool is_id_search_Valid() const;

    bool isStatusOnly() const;
    void setStatusOnly(const bool &status_only);
    bool is_status_only_Set() const;
    bool is_status_only_Valid() const;

    bool isWithProgress() const;
    void setWithProgress(const bool &with_progress);
    bool is_with_progress_Set() const;
    bool is_with_progress_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_demo;
    bool m_demo_isSet;
    bool m_demo_isValid;

    QString m_id_captcha;
    bool m_id_captcha_isSet;
    bool m_id_captcha_isValid;

    QString m_id_search;
    bool m_id_search_isSet;
    bool m_id_search_isValid;

    bool m_status_only;
    bool m_status_only_isSet;
    bool m_status_only_isValid;

    bool m_with_progress;
    bool m_with_progress_isSet;
    bool m_with_progress_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchData)

#endif // OAISearchData_H
