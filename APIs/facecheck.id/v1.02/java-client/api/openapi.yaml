openapi: 3.0.1
info:
  contact:
    url: https://FaceCheck.ID
  description: "Let your users search the Internet by face! Integrate FaceCheck facial\
    \ search seamlessly with your app, website or software platform. \r\nFaceCheck's\
    \ REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>"
  title: Facial Recognition Reverse Image Face Search API
  version: v1.02
  x-logo:
    url: https://facecheck.id/img/favicon.svg
  x-origin:
  - format: openapi
    url: https://facecheck.id/Swagger/v1/swagger.json
    version: "3.0"
  x-providerName: facecheck.id
servers:
- url: /
security:
- Bearer: []
paths:
  /api/delete_pic:
    post:
      parameters:
      - explode: true
        in: query
        name: id_search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: id_pic
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserJsonResponse'
          description: Success
      summary: Remove an image from a search request
      tags:
      - FaceCheckAPI
      x-accepts:
      - application/json
  /api/info:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
          description: Success
      summary: "Returns remaining search credits, search engine online status, and\
        \ number of indexed faces"
      tags:
      - FaceCheckAPI
      x-accepts:
      - application/json
  /api/search:
    post:
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SearchData'
          application/json:
            schema:
              $ref: '#/components/schemas/SearchData'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserJsonResponse'
          description: Success
      tags:
      - FaceCheckAPI
      x-content-type: application/*+json
      x-accepts:
      - application/json
  /api/upload_pic:
    post:
      requestBody:
        content:
          multipart/form-data:
            encoding:
              id_search:
                style: form
              images:
                style: form
            schema:
              $ref: '#/components/schemas/_api_upload_pic_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserJsonResponse'
          description: Success
      tags:
      - FaceCheckAPI
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
components:
  schemas:
    BrowserJsonResponse:
      additionalProperties: false
      example:
        output:
          freeRam: 6.027456183070403
          tookSeconds: 7.386281948385884
          tookSecondsQueue: 1.0246457001441578
          face_per_sec: 0
          tookSecondsDownload: 1.2315135367772556
          images_in_bundle: 1
          performance: performance
          max_score: 3
          scaned_till_index: 2
          demo: true
          items:
          - score: 7
            indexDB: 2
            base64: base64
            guid: guid
            index: 5
            seen: 9
            url: url
            group: 5
          - score: 7
            indexDB: 2
            base64: base64
            guid: guid
            index: 5
            seen: 9
            url: url
            group: 5
          searchedFaces: 4
        input:
        - url_source: url_source
          base64: base64
          id_pic: id_pic
          svg_anim: svg_anim
        - url_source: url_source
          base64: base64
          id_pic: id_pic
          svg_anim: svg_anim
        code: code
        progress: 1
        hasEmptyImages: true
        error: error
        message: message
        id_search: id_search
      properties:
        code:
          nullable: true
          type: string
        error:
          nullable: true
          type: string
        hasEmptyImages:
          readOnly: true
          type: boolean
        id_search:
          nullable: true
          type: string
        input:
          items:
            $ref: '#/components/schemas/InputImage'
          nullable: true
          type: array
        message:
          nullable: true
          type: string
        output:
          $ref: '#/components/schemas/Search_Results'
        progress:
          format: int32
          nullable: true
          type: integer
      type: object
    InfoResponse:
      additionalProperties: false
      example:
        has_credits_to_search: true
        is_online: true
        faces: 212417831
        remaining_credits: 12987
      properties:
        faces:
          example: 212417831
          format: int32
          nullable: true
          type: integer
        has_credits_to_search:
          example: true
          type: boolean
        is_online:
          example: true
          type: boolean
        remaining_credits:
          example: 12987
          format: int32
          type: integer
      type: object
    InputImage:
      additionalProperties: false
      example:
        url_source: url_source
        base64: base64
        id_pic: id_pic
        svg_anim: svg_anim
      properties:
        base64:
          nullable: true
          type: string
        id_pic:
          nullable: true
          type: string
        svg_anim:
          nullable: true
          type: string
        url_source:
          nullable: true
          type: string
      type: object
    SearchData:
      additionalProperties: false
      example:
        with_progress: true
        status_only: false
        demo: false
        id_search: 3vdi8t-s_8DAAA7D5E784616
        id_captcha: id_captcha
      properties:
        demo:
          description: "true = searches only the first 100,000 faces, good for testing/debugging"
          example: false
          nullable: true
          type: boolean
        id_captcha:
          description: captcha is not used
          nullable: true
          type: string
          example: null
        id_search:
          description: ""
          example: 3vdi8t-s_8DAAA7D5E784616
          nullable: true
          type: string
        status_only:
          description: true = don't submit a new search
          example: false
          nullable: true
          type: boolean
        with_progress:
          description: true = return imediately with a progress. False waits until
            search is finished.
          nullable: true
          type: boolean
      type: object
    SearchItem:
      additionalProperties: false
      example:
        score: 7
        indexDB: 2
        base64: base64
        guid: guid
        index: 5
        seen: 9
        url: url
        group: 5
      properties:
        base64:
          nullable: true
          type: string
        group:
          format: int32
          type: integer
        guid:
          nullable: true
          type: string
        index:
          format: int32
          type: integer
        indexDB:
          format: int64
          type: integer
        score:
          format: int32
          type: integer
        seen:
          format: int64
          nullable: true
          type: integer
        url:
          nullable: true
          type: string
      type: object
    Search_Results:
      additionalProperties: false
      example:
        freeRam: 6.027456183070403
        tookSeconds: 7.386281948385884
        tookSecondsQueue: 1.0246457001441578
        face_per_sec: 0
        tookSecondsDownload: 1.2315135367772556
        images_in_bundle: 1
        performance: performance
        max_score: 3
        scaned_till_index: 2
        demo: true
        items:
        - score: 7
          indexDB: 2
          base64: base64
          guid: guid
          index: 5
          seen: 9
          url: url
          group: 5
        - score: 7
          indexDB: 2
          base64: base64
          guid: guid
          index: 5
          seen: 9
          url: url
          group: 5
        searchedFaces: 4
      properties:
        demo:
          nullable: true
          type: boolean
        face_per_sec:
          format: int32
          nullable: true
          readOnly: true
          type: integer
        freeRam:
          format: double
          nullable: true
          type: number
        images_in_bundle:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/SearchItem'
          nullable: true
          type: array
        max_score:
          format: int32
          readOnly: true
          type: integer
        performance:
          nullable: true
          readOnly: true
          type: string
        scaned_till_index:
          format: int32
          type: integer
        searchedFaces:
          format: int32
          nullable: true
          type: integer
        tookSeconds:
          format: double
          nullable: true
          type: number
        tookSecondsDownload:
          format: double
          nullable: true
          type: number
        tookSecondsQueue:
          format: double
          nullable: true
          type: number
      type: object
    _api_upload_pic_post_request:
      properties:
        id_search:
          type: string
        images:
          items:
            format: binary
            type: string
          type: array
      type: object
  securitySchemes:
    Bearer:
      description: Put **_ONLY_** your JWT Bearer token on textbox below!
      in: header
      name: Authorization
      type: apiKey

