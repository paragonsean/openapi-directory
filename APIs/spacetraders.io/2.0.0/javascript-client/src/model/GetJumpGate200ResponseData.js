/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetJumpGate200ResponseDataConnectedSystemsInner from './GetJumpGate200ResponseDataConnectedSystemsInner';

/**
 * The GetJumpGate200ResponseData model module.
 * @module model/GetJumpGate200ResponseData
 * @version 2.0.0
 */
class GetJumpGate200ResponseData {
    /**
     * Constructs a new <code>GetJumpGate200ResponseData</code>.
     * 
     * @alias module:model/GetJumpGate200ResponseData
     * @param connectedSystems {Array.<module:model/GetJumpGate200ResponseDataConnectedSystemsInner>} The systems within range of the gate that have a corresponding gate.
     * @param jumpRange {Number} The maximum jump range of the gate.
     */
    constructor(connectedSystems, jumpRange) { 
        
        GetJumpGate200ResponseData.initialize(this, connectedSystems, jumpRange);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectedSystems, jumpRange) { 
        obj['connectedSystems'] = connectedSystems;
        obj['jumpRange'] = jumpRange;
    }

    /**
     * Constructs a <code>GetJumpGate200ResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetJumpGate200ResponseData} obj Optional instance to populate.
     * @return {module:model/GetJumpGate200ResponseData} The populated <code>GetJumpGate200ResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetJumpGate200ResponseData();

            if (data.hasOwnProperty('connectedSystems')) {
                obj['connectedSystems'] = ApiClient.convertToType(data['connectedSystems'], [GetJumpGate200ResponseDataConnectedSystemsInner]);
            }
            if (data.hasOwnProperty('factionSymbol')) {
                obj['factionSymbol'] = ApiClient.convertToType(data['factionSymbol'], 'String');
            }
            if (data.hasOwnProperty('jumpRange')) {
                obj['jumpRange'] = ApiClient.convertToType(data['jumpRange'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetJumpGate200ResponseData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetJumpGate200ResponseData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetJumpGate200ResponseData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['connectedSystems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['connectedSystems'])) {
                throw new Error("Expected the field `connectedSystems` to be an array in the JSON data but got " + data['connectedSystems']);
            }
            // validate the optional field `connectedSystems` (array)
            for (const item of data['connectedSystems']) {
                GetJumpGate200ResponseDataConnectedSystemsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['factionSymbol'] && !(typeof data['factionSymbol'] === 'string' || data['factionSymbol'] instanceof String)) {
            throw new Error("Expected the field `factionSymbol` to be a primitive type in the JSON string but got " + data['factionSymbol']);
        }

        return true;
    }


}

GetJumpGate200ResponseData.RequiredProperties = ["connectedSystems", "jumpRange"];

/**
 * The systems within range of the gate that have a corresponding gate.
 * @member {Array.<module:model/GetJumpGate200ResponseDataConnectedSystemsInner>} connectedSystems
 */
GetJumpGate200ResponseData.prototype['connectedSystems'] = undefined;

/**
 * The symbol of the faction that owns the gate.
 * @member {String} factionSymbol
 */
GetJumpGate200ResponseData.prototype['factionSymbol'] = undefined;

/**
 * The maximum jump range of the gate.
 * @member {Number} jumpRange
 */
GetJumpGate200ResponseData.prototype['jumpRange'] = undefined;






export default GetJumpGate200ResponseData;

