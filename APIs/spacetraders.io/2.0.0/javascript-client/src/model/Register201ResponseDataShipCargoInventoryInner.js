/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Register201ResponseDataShipCargoInventoryInner model module.
 * @module model/Register201ResponseDataShipCargoInventoryInner
 * @version 2.0.0
 */
class Register201ResponseDataShipCargoInventoryInner {
    /**
     * Constructs a new <code>Register201ResponseDataShipCargoInventoryInner</code>.
     * The type of cargo item and the number of units.
     * @alias module:model/Register201ResponseDataShipCargoInventoryInner
     * @param description {String} The description of the cargo item type.
     * @param name {String} The name of the cargo item type.
     * @param symbol {String} The unique identifier of the cargo item type.
     * @param units {Number} The number of units of the cargo item.
     */
    constructor(description, name, symbol, units) { 
        
        Register201ResponseDataShipCargoInventoryInner.initialize(this, description, name, symbol, units);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, name, symbol, units) { 
        obj['description'] = description;
        obj['name'] = name;
        obj['symbol'] = symbol;
        obj['units'] = units;
    }

    /**
     * Constructs a <code>Register201ResponseDataShipCargoInventoryInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Register201ResponseDataShipCargoInventoryInner} obj Optional instance to populate.
     * @return {module:model/Register201ResponseDataShipCargoInventoryInner} The populated <code>Register201ResponseDataShipCargoInventoryInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Register201ResponseDataShipCargoInventoryInner();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Register201ResponseDataShipCargoInventoryInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Register201ResponseDataShipCargoInventoryInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Register201ResponseDataShipCargoInventoryInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['symbol'] && !(typeof data['symbol'] === 'string' || data['symbol'] instanceof String)) {
            throw new Error("Expected the field `symbol` to be a primitive type in the JSON string but got " + data['symbol']);
        }

        return true;
    }


}

Register201ResponseDataShipCargoInventoryInner.RequiredProperties = ["description", "name", "symbol", "units"];

/**
 * The description of the cargo item type.
 * @member {String} description
 */
Register201ResponseDataShipCargoInventoryInner.prototype['description'] = undefined;

/**
 * The name of the cargo item type.
 * @member {String} name
 */
Register201ResponseDataShipCargoInventoryInner.prototype['name'] = undefined;

/**
 * The unique identifier of the cargo item type.
 * @member {String} symbol
 */
Register201ResponseDataShipCargoInventoryInner.prototype['symbol'] = undefined;

/**
 * The number of units of the cargo item.
 * @member {Number} units
 */
Register201ResponseDataShipCargoInventoryInner.prototype['units'] = undefined;






export default Register201ResponseDataShipCargoInventoryInner;

