/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegister_201_response_data_ship.h
 *
 * A ship
 */

#ifndef OAIRegister_201_response_data_ship_H
#define OAIRegister_201_response_data_ship_H

#include <QJsonObject>

#include "OAIRegister_201_response_data_ship_cargo.h"
#include "OAIRegister_201_response_data_ship_crew.h"
#include "OAIRegister_201_response_data_ship_engine.h"
#include "OAIRegister_201_response_data_ship_frame.h"
#include "OAIRegister_201_response_data_ship_fuel.h"
#include "OAIRegister_201_response_data_ship_modules_inner.h"
#include "OAIRegister_201_response_data_ship_mounts_inner.h"
#include "OAIRegister_201_response_data_ship_nav.h"
#include "OAIRegister_201_response_data_ship_reactor.h"
#include "OAIRegister_201_response_data_ship_registration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegister_201_response_data_ship_cargo;
class OAIRegister_201_response_data_ship_crew;
class OAIRegister_201_response_data_ship_engine;
class OAIRegister_201_response_data_ship_frame;
class OAIRegister_201_response_data_ship_fuel;
class OAIRegister_201_response_data_ship_modules_inner;
class OAIRegister_201_response_data_ship_mounts_inner;
class OAIRegister_201_response_data_ship_nav;
class OAIRegister_201_response_data_ship_reactor;
class OAIRegister_201_response_data_ship_registration;

class OAIRegister_201_response_data_ship : public OAIObject {
public:
    OAIRegister_201_response_data_ship();
    OAIRegister_201_response_data_ship(QString json);
    ~OAIRegister_201_response_data_ship() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRegister_201_response_data_ship_cargo getCargo() const;
    void setCargo(const OAIRegister_201_response_data_ship_cargo &cargo);
    bool is_cargo_Set() const;
    bool is_cargo_Valid() const;

    OAIRegister_201_response_data_ship_crew getCrew() const;
    void setCrew(const OAIRegister_201_response_data_ship_crew &crew);
    bool is_crew_Set() const;
    bool is_crew_Valid() const;

    OAIRegister_201_response_data_ship_engine getEngine() const;
    void setEngine(const OAIRegister_201_response_data_ship_engine &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    OAIRegister_201_response_data_ship_frame getFrame() const;
    void setFrame(const OAIRegister_201_response_data_ship_frame &frame);
    bool is_frame_Set() const;
    bool is_frame_Valid() const;

    OAIRegister_201_response_data_ship_fuel getFuel() const;
    void setFuel(const OAIRegister_201_response_data_ship_fuel &fuel);
    bool is_fuel_Set() const;
    bool is_fuel_Valid() const;

    QList<OAIRegister_201_response_data_ship_modules_inner> getModules() const;
    void setModules(const QList<OAIRegister_201_response_data_ship_modules_inner> &modules);
    bool is_modules_Set() const;
    bool is_modules_Valid() const;

    QList<OAIRegister_201_response_data_ship_mounts_inner> getMounts() const;
    void setMounts(const QList<OAIRegister_201_response_data_ship_mounts_inner> &mounts);
    bool is_mounts_Set() const;
    bool is_mounts_Valid() const;

    OAIRegister_201_response_data_ship_nav getNav() const;
    void setNav(const OAIRegister_201_response_data_ship_nav &nav);
    bool is_nav_Set() const;
    bool is_nav_Valid() const;

    OAIRegister_201_response_data_ship_reactor getReactor() const;
    void setReactor(const OAIRegister_201_response_data_ship_reactor &reactor);
    bool is_reactor_Set() const;
    bool is_reactor_Valid() const;

    OAIRegister_201_response_data_ship_registration getRegistration() const;
    void setRegistration(const OAIRegister_201_response_data_ship_registration &registration);
    bool is_registration_Set() const;
    bool is_registration_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRegister_201_response_data_ship_cargo m_cargo;
    bool m_cargo_isSet;
    bool m_cargo_isValid;

    OAIRegister_201_response_data_ship_crew m_crew;
    bool m_crew_isSet;
    bool m_crew_isValid;

    OAIRegister_201_response_data_ship_engine m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    OAIRegister_201_response_data_ship_frame m_frame;
    bool m_frame_isSet;
    bool m_frame_isValid;

    OAIRegister_201_response_data_ship_fuel m_fuel;
    bool m_fuel_isSet;
    bool m_fuel_isValid;

    QList<OAIRegister_201_response_data_ship_modules_inner> m_modules;
    bool m_modules_isSet;
    bool m_modules_isValid;

    QList<OAIRegister_201_response_data_ship_mounts_inner> m_mounts;
    bool m_mounts_isSet;
    bool m_mounts_isValid;

    OAIRegister_201_response_data_ship_nav m_nav;
    bool m_nav_isSet;
    bool m_nav_isValid;

    OAIRegister_201_response_data_ship_reactor m_reactor;
    bool m_reactor_isSet;
    bool m_reactor_isValid;

    OAIRegister_201_response_data_ship_registration m_registration;
    bool m_registration_isSet;
    bool m_registration_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegister_201_response_data_ship)

#endif // OAIRegister_201_response_data_ship_H
