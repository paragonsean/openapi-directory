/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegister_201_response_data.h
 *
 * 
 */

#ifndef OAIRegister_201_response_data_H
#define OAIRegister_201_response_data_H

#include <QJsonObject>

#include "OAIRegister_201_response_data_agent.h"
#include "OAIRegister_201_response_data_contract.h"
#include "OAIRegister_201_response_data_faction.h"
#include "OAIRegister_201_response_data_ship.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegister_201_response_data_agent;
class OAIRegister_201_response_data_contract;
class OAIRegister_201_response_data_faction;
class OAIRegister_201_response_data_ship;

class OAIRegister_201_response_data : public OAIObject {
public:
    OAIRegister_201_response_data();
    OAIRegister_201_response_data(QString json);
    ~OAIRegister_201_response_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRegister_201_response_data_agent getAgent() const;
    void setAgent(const OAIRegister_201_response_data_agent &agent);
    bool is_agent_Set() const;
    bool is_agent_Valid() const;

    OAIRegister_201_response_data_contract getContract() const;
    void setContract(const OAIRegister_201_response_data_contract &contract);
    bool is_contract_Set() const;
    bool is_contract_Valid() const;

    OAIRegister_201_response_data_faction getFaction() const;
    void setFaction(const OAIRegister_201_response_data_faction &faction);
    bool is_faction_Set() const;
    bool is_faction_Valid() const;

    OAIRegister_201_response_data_ship getShip() const;
    void setShip(const OAIRegister_201_response_data_ship &ship);
    bool is_ship_Set() const;
    bool is_ship_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRegister_201_response_data_agent m_agent;
    bool m_agent_isSet;
    bool m_agent_isValid;

    OAIRegister_201_response_data_contract m_contract;
    bool m_contract_isSet;
    bool m_contract_isValid;

    OAIRegister_201_response_data_faction m_faction;
    bool m_faction_isSet;
    bool m_faction_isValid;

    OAIRegister_201_response_data_ship m_ship;
    bool m_ship_isSet;
    bool m_ship_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegister_201_response_data)

#endif // OAIRegister_201_response_data_H
