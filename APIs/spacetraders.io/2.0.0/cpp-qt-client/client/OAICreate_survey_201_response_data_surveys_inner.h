/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreate_survey_201_response_data_surveys_inner.h
 *
 * A resource survey of a waypoint, detailing a specific extraction location and the types of resources that can be found there.
 */

#ifndef OAICreate_survey_201_response_data_surveys_inner_H
#define OAICreate_survey_201_response_data_surveys_inner_H

#include <QJsonObject>

#include "OAICreate_survey_201_response_data_surveys_inner_deposits_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreate_survey_201_response_data_surveys_inner_deposits_inner;

class OAICreate_survey_201_response_data_surveys_inner : public OAIObject {
public:
    OAICreate_survey_201_response_data_surveys_inner();
    OAICreate_survey_201_response_data_surveys_inner(QString json);
    ~OAICreate_survey_201_response_data_surveys_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICreate_survey_201_response_data_surveys_inner_deposits_inner> getDeposits() const;
    void setDeposits(const QList<OAICreate_survey_201_response_data_surveys_inner_deposits_inner> &deposits);
    bool is_deposits_Set() const;
    bool is_deposits_Valid() const;

    QDateTime getExpiration() const;
    void setExpiration(const QDateTime &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    QString getSignature() const;
    void setSignature(const QString &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICreate_survey_201_response_data_surveys_inner_deposits_inner> m_deposits;
    bool m_deposits_isSet;
    bool m_deposits_isValid;

    QDateTime m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    QString m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreate_survey_201_response_data_surveys_inner)

#endif // OAICreate_survey_201_response_data_surveys_inner_H
