/*
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The chart of a system or waypoint, which makes the location visible to other agents.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:00:30.174611-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSystemWaypoints200ResponseDataInnerChart {
  public static final String SERIALIZED_NAME_SUBMITTED_BY = "submittedBy";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_BY)
  private String submittedBy;

  public static final String SERIALIZED_NAME_SUBMITTED_ON = "submittedOn";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_ON)
  private OffsetDateTime submittedOn;

  public static final String SERIALIZED_NAME_WAYPOINT_SYMBOL = "waypointSymbol";
  @SerializedName(SERIALIZED_NAME_WAYPOINT_SYMBOL)
  private String waypointSymbol;

  public GetSystemWaypoints200ResponseDataInnerChart() {
  }

  public GetSystemWaypoints200ResponseDataInnerChart submittedBy(String submittedBy) {
    this.submittedBy = submittedBy;
    return this;
  }

  /**
   * Get submittedBy
   * @return submittedBy
   */
  @javax.annotation.Nullable
  public String getSubmittedBy() {
    return submittedBy;
  }

  public void setSubmittedBy(String submittedBy) {
    this.submittedBy = submittedBy;
  }


  public GetSystemWaypoints200ResponseDataInnerChart submittedOn(OffsetDateTime submittedOn) {
    this.submittedOn = submittedOn;
    return this;
  }

  /**
   * Get submittedOn
   * @return submittedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSubmittedOn() {
    return submittedOn;
  }

  public void setSubmittedOn(OffsetDateTime submittedOn) {
    this.submittedOn = submittedOn;
  }


  public GetSystemWaypoints200ResponseDataInnerChart waypointSymbol(String waypointSymbol) {
    this.waypointSymbol = waypointSymbol;
    return this;
  }

  /**
   * Get waypointSymbol
   * @return waypointSymbol
   */
  @javax.annotation.Nullable
  public String getWaypointSymbol() {
    return waypointSymbol;
  }

  public void setWaypointSymbol(String waypointSymbol) {
    this.waypointSymbol = waypointSymbol;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSystemWaypoints200ResponseDataInnerChart getSystemWaypoints200ResponseDataInnerChart = (GetSystemWaypoints200ResponseDataInnerChart) o;
    return Objects.equals(this.submittedBy, getSystemWaypoints200ResponseDataInnerChart.submittedBy) &&
        Objects.equals(this.submittedOn, getSystemWaypoints200ResponseDataInnerChart.submittedOn) &&
        Objects.equals(this.waypointSymbol, getSystemWaypoints200ResponseDataInnerChart.waypointSymbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(submittedBy, submittedOn, waypointSymbol);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSystemWaypoints200ResponseDataInnerChart {\n");
    sb.append("    submittedBy: ").append(toIndentedString(submittedBy)).append("\n");
    sb.append("    submittedOn: ").append(toIndentedString(submittedOn)).append("\n");
    sb.append("    waypointSymbol: ").append(toIndentedString(waypointSymbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("submittedBy");
    openapiFields.add("submittedOn");
    openapiFields.add("waypointSymbol");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSystemWaypoints200ResponseDataInnerChart
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSystemWaypoints200ResponseDataInnerChart.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSystemWaypoints200ResponseDataInnerChart is not found in the empty JSON string", GetSystemWaypoints200ResponseDataInnerChart.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSystemWaypoints200ResponseDataInnerChart.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSystemWaypoints200ResponseDataInnerChart` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("submittedBy") != null && !jsonObj.get("submittedBy").isJsonNull()) && !jsonObj.get("submittedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `submittedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("submittedBy").toString()));
      }
      if ((jsonObj.get("waypointSymbol") != null && !jsonObj.get("waypointSymbol").isJsonNull()) && !jsonObj.get("waypointSymbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `waypointSymbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("waypointSymbol").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSystemWaypoints200ResponseDataInnerChart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSystemWaypoints200ResponseDataInnerChart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSystemWaypoints200ResponseDataInnerChart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSystemWaypoints200ResponseDataInnerChart.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSystemWaypoints200ResponseDataInnerChart>() {
           @Override
           public void write(JsonWriter out, GetSystemWaypoints200ResponseDataInnerChart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSystemWaypoints200ResponseDataInnerChart read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSystemWaypoints200ResponseDataInnerChart given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSystemWaypoints200ResponseDataInnerChart
   * @throws IOException if the JSON string is invalid with respect to GetSystemWaypoints200ResponseDataInnerChart
   */
  public static GetSystemWaypoints200ResponseDataInnerChart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSystemWaypoints200ResponseDataInnerChart.class);
  }

  /**
   * Convert an instance of GetSystemWaypoints200ResponseDataInnerChart to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

