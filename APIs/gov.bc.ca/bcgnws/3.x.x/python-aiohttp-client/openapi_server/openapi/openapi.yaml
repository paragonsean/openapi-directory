openapi: 3.0.0
info:
  contact:
    email: geographical.names@gov.bc.ca
    name: BC Geographical Names Office
    url: https://www2.gov.bc.ca/gov/content?id=A3C60F17CE934B1ABFA366F28C66E370
  description: "This REST API provides searchable access to information about geographical\
    \ names in the province of British Columbia, including name status and details\
    \ about the corresponding geographic feature. \n\nPlease note that you may experience\
    \ issues when submitting requests to the delivery or test environment if using\
    \ this [OpenAPI specification](https://github.com/bcgov/api-specs) in other API\
    \ console viewers."
  license:
    name: Crown Copyright
    url: https://www2.gov.bc.ca/gov/content?id=1AAACC9C65754E4D89A118B875E0FBDA
  title: BC Geographical Names Web Service - REST API
  version: 3.x.x
  x-apisguru-categories:
  - open_data
  x-logo:
    url: https://avatars1.githubusercontent.com/u/916280?v=3&s=200
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: openapi
    url: https://raw.githubusercontent.com/bcgov/api-specs/master/bcgnws/bcgnws.json
    version: "3.0"
  x-providerName: gov.bc.ca
  x-serviceName: bcgnws
servers:
- description: Production
  url: https://apps.gov.bc.ca/pub/bcgnws
- description: Test
  url: https://test.apps.gov.bc.ca/pub/bcgnws
- description: Delivery
  url: https://delivery.apps.gov.bc.ca/pub/bcgnws
tags:
- name: search
- name: name
- name: feature
- name: feature taxonomy
- name: name authority
paths:
  /featureCategories:
    get:
      description: "Gets a list of all feature categories used by the BC Geographical\
        \ Names Information System (BCGNIS).  Note: there are three levels of classification\
        \ in the BCGNIS feature taxonomy: classes, categories and types.  A type is\
        \ a subset of a category, and a category is a subset of a class."
      operationId: feature_categories_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          type: string
        style: form
      responses:
        "200":
          description: A list of feature categories
      summary: Get all feature categories
      tags:
      - feature taxonomy
      x-openapi-router-controller: openapi_server.controllers.feature_taxonomy_controller
  /featureClasses:
    get:
      description: "Gets a list of all feature classes used by the BC Geographical\
        \ Names Information System (BCGNIS).  Note: there are three levels of classification\
        \ in the BCGNIS feature taxonomy: classes, categories and types.  A type is\
        \ a subset of a category, and a category is a subset of a class."
      operationId: feature_classes_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          type: string
        style: form
      responses:
        "200":
          description: A list of feature classes
      summary: Get all feature classes
      tags:
      - feature taxonomy
      x-openapi-router-controller: openapi_server.controllers.feature_taxonomy_controller
  /featureTypes:
    get:
      description: "Gets a list of all feature types used by the BC Geographical Names\
        \ Information System (BCGNIS).  Note: there are three levels of classification\
        \ in the BCGNIS feature taxonomy: classes, categories and types.  A type is\
        \ a subset of a category, and a category is a subset of a class."
      operationId: feature_types_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          type: string
        style: form
      responses:
        "200":
          description: A list of feature types
      summary: Get all feature types
      tags:
      - feature taxonomy
      x-openapi-router-controller: openapi_server.controllers.feature_taxonomy_controller
  /features/{featureId}:
    get:
      description: Get information about the geographical feature with the specified
        featureId.
      operationId: features_feature_id_get
      parameters:
      - description: The unique identifier for a feature
        example: 8879
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Information about the feature with the specified featureId
            (XML format only)
        "404":
          description: The feature with the given featureId doesn't exist
      summary: Get a feature by its featureId
      tags:
      - feature
      x-openapi-router-controller: openapi_server.controllers.feature_controller
  /nameAuthorities:
    get:
      description: Gets a list of all name authorities responsible for naming decisions
        of the geographical names in the BC Geographical Names Information System
        (BCGNIS)
      operationId: name_authorities_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          type: string
        style: form
      responses:
        "200":
          description: A list of name authorities
      summary: Get all name authorities
      tags:
      - name authority
      x-openapi-router-controller: openapi_server.controllers.name_authority_controller
  /names/changes:
    get:
      description: Search for information about geographical names which have changed
        most recently within a specified time window.  Changes may include status
        cupdates and metadata corrections.
      operationId: names_changes_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: Defines the earliest date (YYYY-MM-DD format) of the change time
          window for the search
        example: 2017-01-01
        explode: true
        in: query
        name: fromDate
        required: true
        schema:
          type: integer
        style: form
      - description: Defines the latest date (YYYY-MM-DD format) of the change time
          window for the search
        example: 2017-06-30
        explode: true
        in: query
        name: toDate
        required: true
        schema:
          type: integer
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: name
          enum:
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: Search for names with metadata changes in a given period
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/decisions/recent:
    get:
      description: Search for information about geographical names affected by naming
        'decisions' made by the BC Geographical Names Office (naming authority) within
        the last X days.
      operationId: names_decisions_recent_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: The number of days used to define the time window of naming decisions
          to search.  The number is interpreted as searching for 'names affected by
          decisions within the last X days'.
        example: "30"
        explode: true
        in: query
        name: days
        required: true
        schema:
          default: 30
          type: integer
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: name
          enum:
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: Search for names affected by recent naming decision
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/decisions/year:
    get:
      description: Search for information about geographical names affected by naming
        'decisions' made by the BC Geographical Names Office (naming authority) in
        a given year.
      operationId: names_decisions_year_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: The year in which to search for names affected by naming decisions'.
        example: "2007"
        explode: true
        in: query
        name: year
        required: true
        schema:
          type: integer
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: name
          enum:
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: Search for names affected by naming decisions in a given year
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/inside:
    get:
      description: Search for information about geographical names that correspond
        to features within a geographic bounding box.  Various options and filter
        parameters are available to refine the search.
      operationId: names_inside_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: "A geographic bounding box defining the search area.  Must be\
          \ specified as a string of the form 'minLongitude,minLatitude,maxLongitude,maxLatitude'\
          \ (WGS84). e.g. -119,49,-118,50"
        example: "-119,49,-118,50"
        explode: true
        in: query
        name: bbox
        required: true
        schema:
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: name
          enum:
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: Search in a geographic area
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/near:
    get:
      description: Search for information about geographical names that correspond
        to features within a geographic area defined by a centre point and a radius.  Various
        options and filter parameters are available to refine the search.
      operationId: names_near_get
      parameters:
      - description: The format of the output.
        example: "-119,49,-118,50"
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: "A geographic coordinate specifying the centre point of the search\
          \ area.  Must be specified as a string of the form 'longitude,latitude'\
          \ (WGS84).  e.g. -120,51"
        example: "-120,51"
        explode: true
        in: query
        name: featurePoint
        required: true
        schema:
          type: string
        style: form
      - description: A radius (in kilometres) around the centre point.
        explode: true
        in: query
        name: distance
        required: true
        schema:
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: name
          enum:
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: Search near to a geographic point
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/notOfficial/search:
    get:
      description: Search for information about unofficial geographical names by the
        text of the name itself.  Various options and filter parameters are available
        to refine the search.
      operationId: names_not_official_search_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: A filter to search based on the the text of the name itself.  Use
          the asterisk (*) as a wildcard character.  For example 'vancouv*'
        example: Victoria
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: "If the 'name' parameter is specified, 'exactSpelling' specifies\
          \ whether to include only names that exactly match the search text (exactSpelling=1),\
          \ or whether to also include names with similar spellings (exactSpelling=0)"
        explode: true
        in: query
        name: exactSpelling
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: relevance
          enum:
          - relevance
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: "Search by name, limit to unofficial names only"
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/official/search:
    get:
      description: Search for information about official geographical names by the
        text of the name itself.  Various options and filter parameters are available
        to refine the search.
      operationId: names_official_search_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: A filter to search based on the the text of the name itself.  Use
          the asterisk (*) as a wildcard character.  For example 'vancouv*'
        example: Victoria
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: "If the 'name' parameter is specified, 'exactSpelling' specifies\
          \ whether to include only names that exactly match the search text (exactSpelling=1),\
          \ or whether to also include names with similar spellings (exactSpelling=0)"
        explode: true
        in: query
        name: exactSpelling
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: relevance
          enum:
          - relevance
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: "Search by name, limit to official names only"
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/search:
    get:
      description: Search for information about geographical names by the text of
        the name itself.  The response will include both official and unofficial names.  Various
        options and filter parameters are available to refine the search.
      operationId: names_search_get
      parameters:
      - description: The format of the output.
        example: json
        explode: true
        in: query
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          type: string
        style: form
      - description: A filter to search based on the the text of the name itself.  Use
          the asterisk (*) as a wildcard character.  For example 'vancouv*'
        example: Victoria
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: "If the 'name' parameter is specified, 'exactSpelling' specifies\
          \ whether to include only names that exactly match the search text (exactSpelling=1),\
          \ or whether to also include names with similar spellings (exactSpelling=0)"
        explode: true
        in: query
        name: exactSpelling
        required: false
        schema:
          default: 0
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'class'  The value of this parameter should be a 'featureClassCode'\
          \ value returned by the /featureClasses resource, or an asterisk (*) to\
          \ request that all feature classes be included."
        explode: true
        in: query
        name: featureClass
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'category'  The value of this parameter should be a 'featureCategoryCode'\
          \ value returned by the /featureCategories resource, or an asterisk (*)\
          \ to request that all feature categories be included."
        explode: true
        in: query
        name: featureCategory
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: "A filter to limit the search to names associated with features\
          \ of a certain 'type'  The value of this parameter should be a 'featureTypeCode'\
          \ value returned by the /featureTypes resource, or an asterisk (*) to request\
          \ that all feature types be included"
        explode: true
        in: query
        name: featureType
        required: false
        schema:
          default: '*'
          type: string
        style: form
      - description: The distance to move the accessPoint away from the curb and towards
          the inside of the parcel (in metres). Ignored if locationDescriptor not
          set to accessPoint.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: relevance
          enum:
          - relevance
          - name
          - featureType
          - decisionDate
          type: string
        style: form
      - description: The EPSG code of the spatial reference system (SRS) to use for
          output geometries.
        explode: true
        in: query
        name: outputSRS
        required: false
        schema:
          default: 4326
          enum:
          - 4326
          - 4269
          - 3005
          - 3857
          - 26907
          - 26908
          - 26909
          - 26910
          - 26911
          type: integer
        style: form
      - description: A flag to indicate whether to embed the corresponding 'feature'
          into each matching name
        explode: true
        in: query
        name: embed
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: "A flag indicating whether to include with each matching name\
          \ a succinct list of attributes (summary), or a comprehensive list of attributes\
          \ (detail)"
        explode: true
        in: query
        name: outputStyle
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detail
          type: string
        style: form
      - description: The number of search results to return (1-200)
        explode: true
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: The index of the first record to be returned (>= 1)
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          description: A list of names matching the search criteria
        "400":
          description: A required parameter is missing or invalid
      summary: Search by name
      tags:
      - search
      - name
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /names/{nameId}.{outputFormat}:
    get:
      description: Get information about the geographical name with the specified
        nameId.
      operationId: names_name_id_output_format_get
      parameters:
      - description: The unique identifier for a name
        example: 22474
        explode: false
        in: path
        name: nameId
        required: true
        schema:
          type: integer
        style: simple
      - description: The format of the output.
        example: json
        explode: false
        in: path
        name: outputFormat
        required: true
        schema:
          default: json
          enum:
          - json
          - xml
          - kml
          - csv
          - html
          type: string
        style: simple
      responses:
        "200":
          description: Information about the name with the specified nameId
        "404":
          description: "The name with the given nameId doesn't exist, or the output\
            \ format is invalid."
      summary: Get a name by its nameId
      tags:
      - name
      x-openapi-router-controller: openapi_server.controllers.name_controller
components:
  schemas: {}
