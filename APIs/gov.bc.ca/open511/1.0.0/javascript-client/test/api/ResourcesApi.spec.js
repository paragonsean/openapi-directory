/**
 * DriveBC's Open511 API
 * This API is DriveBC's implementation of the Open511 specification.  It provides information about known road events (traffic accidents, construction, etc.) in British Columbia, Canada.  Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs) in other API console viewers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TRANBMClientRelations@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DriveBcsOpen511Api);
  }
}(this, function(expect, DriveBcsOpen511Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DriveBcsOpen511Api.ResourcesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ResourcesApi', function() {
    describe('areasGet', function() {
      it('should call areasGet successfully', function(done) {
        //uncomment below and update the code to test areasGet
        //instance.areasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsGet', function() {
      it('should call eventsGet successfully', function(done) {
        //uncomment below and update the code to test eventsGet
        //instance.eventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jurisdictionGet', function() {
      it('should call jurisdictionGet successfully', function(done) {
        //uncomment below and update the code to test jurisdictionGet
        //instance.jurisdictionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jurisdictiongeographyGet', function() {
      it('should call jurisdictiongeographyGet successfully', function(done) {
        //uncomment below and update the code to test jurisdictiongeographyGet
        //instance.jurisdictiongeographyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
