/*
 * Geocoder REST API
 * This API represents address cleaning, correction, completion, geocoding, reverse geocoding, and proximity resources for intersection addresses, physical addresses and their occupants in British Columbia. Please read our [data collection notice](https://github.com/bcgov/api-specs/blob/master/COLLECTION_NOTICE.md#collection-notice).    Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs) in other API console viewers.   [API keys](https://api.gov.bc.ca/devportal/api-directory/273) are unique and can be acquired with a GitHub or IDIR account.    **Notification:** If you have applications or web pages that link to the BC Address Geocoder you must use the following URL.    *https://geocoder.api.gov.bc.ca*    Please note that the following URLs were deprecated in September 2018 [More Details](https://www2.gov.bc.ca/gov/content?id=103ADC5A956842828554238DEF28D6E5).    - http://apps.gov.bc.ca/pub/geocoder   - https://apps.gov.bc.ca/pub/geocoder \\ \\  
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SitesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public SitesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SitesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addressesOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Civic or intersection address as a single string. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#addressString target&#x3D;\&quot;_blank\&quot;&gt;addressString&lt;/a&gt; (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to true)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetQualifier target&#x3D;\&quot;_blank\&quot;&gt;streetQualifier&lt;/a&gt; (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#localityName target&#x3D;\&quot;_blank\&quot;&gt;localityName&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching sites or intersections and their physical locations. See &lt;a href&#x3D;&#39;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#resource-representations-in-http-responses&#39; target&#x3D;\&quot;_blank\&quot;&gt;addresses response&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addressesOutputFormatGetCall(String outputFormat, String addressString, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/addresses.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (addressString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("addressString", addressString));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (interpolation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("interpolation", interpolation));
        }

        if (echo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("echo", echo));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (autoComplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("autoComplete", autoComplete));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (minScore != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minScore", minScore));
        }

        if (matchPrecision != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("matchPrecision", matchPrecision));
        }

        if (matchPrecisionNot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("matchPrecisionNot", matchPrecisionNot));
        }

        if (siteName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("siteName", siteName));
        }

        if (unitDesignator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("unitDesignator", unitDesignator));
        }

        if (unitNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("unitNumber", unitNumber));
        }

        if (unitNumberSuffix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("unitNumberSuffix", unitNumberSuffix));
        }

        if (civicNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("civicNumber", civicNumber));
        }

        if (civicNumberSuffix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("civicNumberSuffix", civicNumberSuffix));
        }

        if (streetName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetName", streetName));
        }

        if (streetType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetType", streetType));
        }

        if (streetDirection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetDirection", streetDirection));
        }

        if (streetQualifier != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetQualifier", streetQualifier));
        }

        if (localityName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("localityName", localityName));
        }

        if (provinceCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("provinceCode", provinceCode));
        }

        if (localities != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("localities", localities));
        }

        if (notLocalities != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notLocalities", notLocalities));
        }

        if (bbox != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bbox", bbox));
        }

        if (centre != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("centre", centre));
        }

        if (maxDistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxDistance", maxDistance));
        }

        if (extrapolate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("extrapolate", extrapolate));
        }

        if (parcelPoint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("parcelPoint", parcelPoint));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addressesOutputFormatGetValidateBeforeCall(String outputFormat, String addressString, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling addressesOutputFormatGet(Async)");
        }

        return addressesOutputFormatGetCall(outputFormat, addressString, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint, _callback);

    }

    /**
     * Geocode an address
     * Represents the set of geocoded and standardized sites and intersections whose address best matches a given query address.
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Civic or intersection address as a single string. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#addressString target&#x3D;\&quot;_blank\&quot;&gt;addressString&lt;/a&gt; (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to true)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetQualifier target&#x3D;\&quot;_blank\&quot;&gt;streetQualifier&lt;/a&gt; (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#localityName target&#x3D;\&quot;_blank\&quot;&gt;localityName&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching sites or intersections and their physical locations. See &lt;a href&#x3D;&#39;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#resource-representations-in-http-responses&#39; target&#x3D;\&quot;_blank\&quot;&gt;addresses response&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void addressesOutputFormatGet(String outputFormat, String addressString, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint) throws ApiException {
        addressesOutputFormatGetWithHttpInfo(outputFormat, addressString, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint);
    }

    /**
     * Geocode an address
     * Represents the set of geocoded and standardized sites and intersections whose address best matches a given query address.
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Civic or intersection address as a single string. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#addressString target&#x3D;\&quot;_blank\&quot;&gt;addressString&lt;/a&gt; (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to true)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetQualifier target&#x3D;\&quot;_blank\&quot;&gt;streetQualifier&lt;/a&gt; (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#localityName target&#x3D;\&quot;_blank\&quot;&gt;localityName&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching sites or intersections and their physical locations. See &lt;a href&#x3D;&#39;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#resource-representations-in-http-responses&#39; target&#x3D;\&quot;_blank\&quot;&gt;addresses response&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> addressesOutputFormatGetWithHttpInfo(String outputFormat, String addressString, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint) throws ApiException {
        okhttp3.Call localVarCall = addressesOutputFormatGetValidateBeforeCall(outputFormat, addressString, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Geocode an address (asynchronously)
     * Represents the set of geocoded and standardized sites and intersections whose address best matches a given query address.
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Civic or intersection address as a single string. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#addressString target&#x3D;\&quot;_blank\&quot;&gt;addressString&lt;/a&gt; (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to true)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetQualifier target&#x3D;\&quot;_blank\&quot;&gt;streetQualifier&lt;/a&gt; (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#localityName target&#x3D;\&quot;_blank\&quot;&gt;localityName&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching sites or intersections and their physical locations. See &lt;a href&#x3D;&#39;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#resource-representations-in-http-responses&#39; target&#x3D;\&quot;_blank\&quot;&gt;addresses response&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addressesOutputFormatGetAsync(String outputFormat, String addressString, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = addressesOutputFormatGetValidateBeforeCall(outputFormat, addressString, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for sitesNearOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesNearOutputFormatGetCall(String outputFormat, String point, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sites/near.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (point != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("point", point));
        }

        if (maxDistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxDistance", maxDistance));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (excludeUnits != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("excludeUnits", excludeUnits));
        }

        if (onlyCivic != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("onlyCivic", onlyCivic));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sitesNearOutputFormatGetValidateBeforeCall(String outputFormat, String point, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling sitesNearOutputFormatGet(Async)");
        }

        // verify the required parameter 'point' is set
        if (point == null) {
            throw new ApiException("Missing the required parameter 'point' when calling sitesNearOutputFormatGet(Async)");
        }

        return sitesNearOutputFormatGetCall(outputFormat, point, maxDistance, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, _callback);

    }

    /**
     * Find sites near to a geographic point
     * Represents sites near a given point in the order of closest to farthest
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void sitesNearOutputFormatGet(String outputFormat, String point, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic) throws ApiException {
        sitesNearOutputFormatGetWithHttpInfo(outputFormat, point, maxDistance, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic);
    }

    /**
     * Find sites near to a geographic point
     * Represents sites near a given point in the order of closest to farthest
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> sitesNearOutputFormatGetWithHttpInfo(String outputFormat, String point, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic) throws ApiException {
        okhttp3.Call localVarCall = sitesNearOutputFormatGetValidateBeforeCall(outputFormat, point, maxDistance, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Find sites near to a geographic point (asynchronously)
     * Represents sites near a given point in the order of closest to farthest
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesNearOutputFormatGetAsync(String outputFormat, String point, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = sitesNearOutputFormatGetValidateBeforeCall(outputFormat, point, maxDistance, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for sitesNearestOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point Centre point of search. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#point target&#x3D;\&quot;_blank\&quot;&gt;point&lt;/a&gt; (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesNearestOutputFormatGetCall(String outputFormat, String point, Integer maxDistance, Integer outputSRS, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sites/nearest.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (point != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("point", point));
        }

        if (maxDistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxDistance", maxDistance));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (excludeUnits != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("excludeUnits", excludeUnits));
        }

        if (onlyCivic != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("onlyCivic", onlyCivic));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sitesNearestOutputFormatGetValidateBeforeCall(String outputFormat, String point, Integer maxDistance, Integer outputSRS, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling sitesNearestOutputFormatGet(Async)");
        }

        // verify the required parameter 'point' is set
        if (point == null) {
            throw new ApiException("Missing the required parameter 'point' when calling sitesNearestOutputFormatGet(Async)");
        }

        return sitesNearestOutputFormatGetCall(outputFormat, point, maxDistance, outputSRS, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, _callback);

    }

    /**
     * Find the site nearest to a geographic point
     * Represents the site nearest a given point
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point Centre point of search. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#point target&#x3D;\&quot;_blank\&quot;&gt;point&lt;/a&gt; (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void sitesNearestOutputFormatGet(String outputFormat, String point, Integer maxDistance, Integer outputSRS, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic) throws ApiException {
        sitesNearestOutputFormatGetWithHttpInfo(outputFormat, point, maxDistance, outputSRS, locationDescriptor, setBack, brief, excludeUnits, onlyCivic);
    }

    /**
     * Find the site nearest to a geographic point
     * Represents the site nearest a given point
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point Centre point of search. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#point target&#x3D;\&quot;_blank\&quot;&gt;point&lt;/a&gt; (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> sitesNearestOutputFormatGetWithHttpInfo(String outputFormat, String point, Integer maxDistance, Integer outputSRS, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic) throws ApiException {
        okhttp3.Call localVarCall = sitesNearestOutputFormatGetValidateBeforeCall(outputFormat, point, maxDistance, outputSRS, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Find the site nearest to a geographic point (asynchronously)
     * Represents the site nearest a given point
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point Centre point of search. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#point target&#x3D;\&quot;_blank\&quot;&gt;point&lt;/a&gt; (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesNearestOutputFormatGetAsync(String outputFormat, String point, Integer maxDistance, Integer outputSRS, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = sitesNearestOutputFormatGetValidateBeforeCall(outputFormat, point, maxDistance, outputSRS, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for sitesSiteIDOutputFormatGet
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The site with the requested siteID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesSiteIDOutputFormatGetCall(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sites/{siteID}.{outputFormat}"
            .replace("{" + "siteID" + "}", localVarApiClient.escapeString(siteID.toString()))
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sitesSiteIDOutputFormatGetValidateBeforeCall(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'siteID' is set
        if (siteID == null) {
            throw new ApiException("Missing the required parameter 'siteID' when calling sitesSiteIDOutputFormatGet(Async)");
        }

        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling sitesSiteIDOutputFormatGet(Async)");
        }

        return sitesSiteIDOutputFormatGetCall(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack, _callback);

    }

    /**
     * Get a site by its unique ID
     * Represents an individual site
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The site with the requested siteID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void sitesSiteIDOutputFormatGet(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        sitesSiteIDOutputFormatGetWithHttpInfo(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack);
    }

    /**
     * Get a site by its unique ID
     * Represents an individual site
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The site with the requested siteID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> sitesSiteIDOutputFormatGetWithHttpInfo(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        okhttp3.Call localVarCall = sitesSiteIDOutputFormatGetValidateBeforeCall(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Get a site by its unique ID (asynchronously)
     * Represents an individual site
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The site with the requested siteID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesSiteIDOutputFormatGetAsync(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = sitesSiteIDOutputFormatGetValidateBeforeCall(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for sitesSiteIDSubsitesOutputFormatGet
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all subsites of a given site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesSiteIDSubsitesOutputFormatGetCall(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sites/{siteID}/subsites.{outputFormat}"
            .replace("{" + "siteID" + "}", localVarApiClient.escapeString(siteID.toString()))
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sitesSiteIDSubsitesOutputFormatGetValidateBeforeCall(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'siteID' is set
        if (siteID == null) {
            throw new ApiException("Missing the required parameter 'siteID' when calling sitesSiteIDSubsitesOutputFormatGet(Async)");
        }

        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling sitesSiteIDSubsitesOutputFormatGet(Async)");
        }

        return sitesSiteIDSubsitesOutputFormatGetCall(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack, _callback);

    }

    /**
     * Represents all subsites of a given site
     * Represents all subsites of a given site
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all subsites of a given site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void sitesSiteIDSubsitesOutputFormatGet(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        sitesSiteIDSubsitesOutputFormatGetWithHttpInfo(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack);
    }

    /**
     * Represents all subsites of a given site
     * Represents all subsites of a given site
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all subsites of a given site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> sitesSiteIDSubsitesOutputFormatGetWithHttpInfo(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        okhttp3.Call localVarCall = sitesSiteIDSubsitesOutputFormatGetValidateBeforeCall(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Represents all subsites of a given site (asynchronously)
     * Represents all subsites of a given site
     * @param siteID A unique, but not immutable, site identifier. (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all subsites of a given site in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesSiteIDSubsitesOutputFormatGetAsync(String siteID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = sitesSiteIDSubsitesOutputFormatGetValidateBeforeCall(siteID, outputFormat, outputSRS, locationDescriptor, brief, setBack, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for sitesWithinOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites within a given area. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesWithinOutputFormatGetCall(String outputFormat, String bbox, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sites/within.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (bbox != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bbox", bbox));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (excludeUnits != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("excludeUnits", excludeUnits));
        }

        if (onlyCivic != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("onlyCivic", onlyCivic));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sitesWithinOutputFormatGetValidateBeforeCall(String outputFormat, String bbox, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling sitesWithinOutputFormatGet(Async)");
        }

        // verify the required parameter 'bbox' is set
        if (bbox == null) {
            throw new ApiException("Missing the required parameter 'bbox' when calling sitesWithinOutputFormatGet(Async)");
        }

        return sitesWithinOutputFormatGetCall(outputFormat, bbox, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, _callback);

    }

    /**
     * Find sites in a geographic area
     * Represents sites within a given area
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites within a given area. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void sitesWithinOutputFormatGet(String outputFormat, String bbox, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic) throws ApiException {
        sitesWithinOutputFormatGetWithHttpInfo(outputFormat, bbox, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic);
    }

    /**
     * Find sites in a geographic area
     * Represents sites within a given area
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites within a given area. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> sitesWithinOutputFormatGetWithHttpInfo(String outputFormat, String bbox, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic) throws ApiException {
        okhttp3.Call localVarCall = sitesWithinOutputFormatGetValidateBeforeCall(outputFormat, bbox, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Find sites in a geographic area (asynchronously)
     * Represents sites within a given area
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param excludeUnits If true, excludes sites that are units of a parent site (optional, default to false)
     * @param onlyCivic If true, excludes sites without a civic address (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected sites within a given area. Each site in the response document is structured as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sitesWithinOutputFormatGetAsync(String outputFormat, String bbox, Integer outputSRS, Integer maxResults, String locationDescriptor, Integer setBack, Boolean brief, Boolean excludeUnits, Boolean onlyCivic, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = sitesWithinOutputFormatGetValidateBeforeCall(outputFormat, bbox, outputSRS, maxResults, locationDescriptor, setBack, brief, excludeUnits, onlyCivic, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
