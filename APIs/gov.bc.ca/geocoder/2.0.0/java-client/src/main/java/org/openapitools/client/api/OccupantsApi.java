/*
 * Geocoder REST API
 * This API represents address cleaning, correction, completion, geocoding, reverse geocoding, and proximity resources for intersection addresses, physical addresses and their occupants in British Columbia. Please read our [data collection notice](https://github.com/bcgov/api-specs/blob/master/COLLECTION_NOTICE.md#collection-notice).    Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs) in other API console viewers.   [API keys](https://api.gov.bc.ca/devportal/api-directory/273) are unique and can be acquired with a GitHub or IDIR account.    **Notification:** If you have applications or web pages that link to the BC Address Geocoder you must use the following URL.    *https://geocoder.api.gov.bc.ca*    Please note that the following URLs were deprecated in September 2018 [More Details](https://www2.gov.bc.ca/gov/content?id=103ADC5A956842828554238DEF28D6E5).    - http://apps.gov.bc.ca/pub/geocoder   - https://apps.gov.bc.ca/pub/geocoder \\ \\  
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OccupantsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public OccupantsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OccupantsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for occupantsAddressesOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Occupant name OR Occupant name ** address (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to false)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional, default to OCCUPANT)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier The qualifier of a street name (e.g., the Bridge in Johnson St Bridge) (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching occupants, sites, and their physical locations. Response document will contain one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#about-query-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;About Query Representation&lt;/a&gt; and one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; for each matching occupant. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsAddressesOutputFormatGetCall(String outputFormat, String addressString, String tags, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/occupants/addresses.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (addressString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("addressString", addressString));
        }

        if (tags != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tags", tags));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (interpolation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("interpolation", interpolation));
        }

        if (echo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("echo", echo));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (autoComplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("autoComplete", autoComplete));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (minScore != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minScore", minScore));
        }

        if (matchPrecision != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("matchPrecision", matchPrecision));
        }

        if (matchPrecisionNot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("matchPrecisionNot", matchPrecisionNot));
        }

        if (siteName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("siteName", siteName));
        }

        if (unitDesignator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("unitDesignator", unitDesignator));
        }

        if (unitNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("unitNumber", unitNumber));
        }

        if (unitNumberSuffix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("unitNumberSuffix", unitNumberSuffix));
        }

        if (civicNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("civicNumber", civicNumber));
        }

        if (civicNumberSuffix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("civicNumberSuffix", civicNumberSuffix));
        }

        if (streetName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetName", streetName));
        }

        if (streetType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetType", streetType));
        }

        if (streetDirection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetDirection", streetDirection));
        }

        if (streetQualifier != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("streetQualifier", streetQualifier));
        }

        if (localityName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("localityName", localityName));
        }

        if (provinceCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("provinceCode", provinceCode));
        }

        if (localities != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("localities", localities));
        }

        if (notLocalities != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notLocalities", notLocalities));
        }

        if (bbox != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bbox", bbox));
        }

        if (centre != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("centre", centre));
        }

        if (maxDistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxDistance", maxDistance));
        }

        if (extrapolate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("extrapolate", extrapolate));
        }

        if (parcelPoint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("parcelPoint", parcelPoint));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call occupantsAddressesOutputFormatGetValidateBeforeCall(String outputFormat, String addressString, String tags, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling occupantsAddressesOutputFormatGet(Async)");
        }

        return occupantsAddressesOutputFormatGetCall(outputFormat, addressString, tags, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint, _callback);

    }

    /**
     * Geocode an address and identify site occupants
     * Represents the set of occupants whose addresses best match a given query address. Every occupant has an associated site which has a standardized address and a coordinate location on the Earth.
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Occupant name OR Occupant name ** address (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to false)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional, default to OCCUPANT)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier The qualifier of a street name (e.g., the Bridge in Johnson St Bridge) (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching occupants, sites, and their physical locations. Response document will contain one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#about-query-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;About Query Representation&lt;/a&gt; and one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; for each matching occupant. </td><td>  -  </td></tr>
     </table>
     */
    public void occupantsAddressesOutputFormatGet(String outputFormat, String addressString, String tags, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint) throws ApiException {
        occupantsAddressesOutputFormatGetWithHttpInfo(outputFormat, addressString, tags, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint);
    }

    /**
     * Geocode an address and identify site occupants
     * Represents the set of occupants whose addresses best match a given query address. Every occupant has an associated site which has a standardized address and a coordinate location on the Earth.
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Occupant name OR Occupant name ** address (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to false)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional, default to OCCUPANT)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier The qualifier of a street name (e.g., the Bridge in Johnson St Bridge) (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching occupants, sites, and their physical locations. Response document will contain one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#about-query-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;About Query Representation&lt;/a&gt; and one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; for each matching occupant. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> occupantsAddressesOutputFormatGetWithHttpInfo(String outputFormat, String addressString, String tags, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint) throws ApiException {
        okhttp3.Call localVarCall = occupantsAddressesOutputFormatGetValidateBeforeCall(outputFormat, addressString, tags, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Geocode an address and identify site occupants (asynchronously)
     * Represents the set of occupants whose addresses best match a given query address. Every occupant has an associated site which has a standardized address and a coordinate location on the Earth.
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param addressString Occupant name OR Occupant name ** address (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param interpolation accessPoint interpolation method. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target&#x3D;\&quot;_blank\&quot;&gt;interpolation&lt;/a&gt; (optional, default to adaptive)
     * @param echo If true, include unmatched address details such as site name in results. (optional, default to false)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param autoComplete If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param minScore The minimum score required for a match to be returned. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target&#x3D;\&quot;_blank\&quot;&gt;minScore&lt;/a&gt; (optional, default to 1)
     * @param matchPrecision Example: street,locality.  A comma separated list of individual match precision levels to include in results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target&#x3D;\&quot;_blank\&quot;&gt;matchPrecision&lt;/a&gt; (optional, default to OCCUPANT)
     * @param matchPrecisionNot Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target&#x3D;\&quot;_blank\&quot;&gt;matchPrecisionNot&lt;/a&gt; (optional)
     * @param siteName A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target&#x3D;\&quot;_blank\&quot;&gt;siteName&lt;/a&gt; (optional)
     * @param unitDesignator The type of unit within a house or building. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target&#x3D;\&quot;_blank\&quot;&gt;unitDesignator&lt;/a&gt; (optional)
     * @param unitNumber The number of the unit, suite, or apartment within a house or building. (optional)
     * @param unitNumberSuffix A letter that follows the unit number as in Unit 1A or Suite 302B. (optional)
     * @param civicNumber The official number assigned to a site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target&#x3D;\&quot;_blank\&quot;&gt;civicNumber&lt;/a&gt; (optional)
     * @param civicNumberSuffix A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target&#x3D;\&quot;_blank\&quot;&gt;civicNumberSuffix&lt;/a&gt; (optional)
     * @param streetName The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target&#x3D;\&quot;_blank\&quot;&gt;streetName&lt;/a&gt; (optional)
     * @param streetType The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target&#x3D;\&quot;_blank\&quot;&gt;streetType&lt;/a&gt; (optional)
     * @param streetDirection The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param streetQualifier The qualifier of a street name (e.g., the Bridge in Johnson St Bridge) (optional)
     * @param localityName The name of the locality assigned to a given site by an address authority. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target&#x3D;\&quot;_blank\&quot;&gt;streetDirection&lt;/a&gt; (optional)
     * @param provinceCode The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC. (optional, default to BC)
     * @param localities A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo (optional)
     * @param notLocalities A comma-separated list of localities to exclude from the search. (optional)
     * @param bbox Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (optional)
     * @param centre Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with &#39;maxDistance&#39;. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target&#x3D;&#39;_blank&#39;&gt;centre&lt;/a&gt; (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param extrapolate If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target&#x3D;\&quot;_blank\&quot;&gt;extrapolate&lt;/a&gt; (optional)
     * @param parcelPoint The coordinates of a point (x,y) known to be inside the parcel containing a given address. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target&#x3D;\&quot;_blank\&quot;&gt;parcelPoint&lt;/a&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of matching occupants, sites, and their physical locations. Response document will contain one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#about-query-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;About Query Representation&lt;/a&gt; and one &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; for each matching occupant. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsAddressesOutputFormatGetAsync(String outputFormat, String addressString, String tags, String locationDescriptor, Integer maxResults, String interpolation, Boolean echo, Boolean brief, Boolean autoComplete, Integer setBack, Integer outputSRS, Integer minScore, String matchPrecision, String matchPrecisionNot, String siteName, String unitDesignator, String unitNumber, String unitNumberSuffix, String civicNumber, String civicNumberSuffix, String streetName, String streetType, String streetDirection, String streetQualifier, String localityName, String provinceCode, String localities, String notLocalities, String bbox, String centre, BigDecimal maxDistance, Boolean extrapolate, String parcelPoint, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = occupantsAddressesOutputFormatGetValidateBeforeCall(outputFormat, addressString, tags, locationDescriptor, maxResults, interpolation, echo, brief, autoComplete, setBack, outputSRS, minScore, matchPrecision, matchPrecisionNot, siteName, unitDesignator, unitNumber, unitNumberSuffix, civicNumber, civicNumberSuffix, streetName, streetType, streetDirection, streetQualifier, localityName, provinceCode, localities, notLocalities, bbox, centre, maxDistance, extrapolate, parcelPoint, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for occupantsNearOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsNearOutputFormatGetCall(String outputFormat, String point, String tags, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/occupants/near.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (point != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("point", point));
        }

        if (tags != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tags", tags));
        }

        if (maxDistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxDistance", maxDistance));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call occupantsNearOutputFormatGetValidateBeforeCall(String outputFormat, String point, String tags, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling occupantsNearOutputFormatGet(Async)");
        }

        // verify the required parameter 'point' is set
        if (point == null) {
            throw new ApiException("Missing the required parameter 'point' when calling occupantsNearOutputFormatGet(Async)");
        }

        return occupantsNearOutputFormatGetCall(outputFormat, point, tags, maxDistance, outputSRS, maxResults, locationDescriptor, brief, setBack, _callback);

    }

    /**
     * Find occupants of sites near to a geographic point
     * Represents occupants near a given point in order of closest to farthest
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void occupantsNearOutputFormatGet(String outputFormat, String point, String tags, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        occupantsNearOutputFormatGetWithHttpInfo(outputFormat, point, tags, maxDistance, outputSRS, maxResults, locationDescriptor, brief, setBack);
    }

    /**
     * Find occupants of sites near to a geographic point
     * Represents occupants near a given point in order of closest to farthest
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> occupantsNearOutputFormatGetWithHttpInfo(String outputFormat, String point, String tags, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        okhttp3.Call localVarCall = occupantsNearOutputFormatGetValidateBeforeCall(outputFormat, point, tags, maxDistance, outputSRS, maxResults, locationDescriptor, brief, setBack, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Find occupants of sites near to a geographic point (asynchronously)
     * Represents occupants near a given point in order of closest to farthest
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 1)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsNearOutputFormatGetAsync(String outputFormat, String point, String tags, Integer maxDistance, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = occupantsNearOutputFormatGetValidateBeforeCall(outputFormat, point, tags, maxDistance, outputSRS, maxResults, locationDescriptor, brief, setBack, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for occupantsNearestOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest occupant in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsNearestOutputFormatGetCall(String outputFormat, String point, Integer maxDistance, String tags, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/occupants/nearest.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (point != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("point", point));
        }

        if (maxDistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxDistance", maxDistance));
        }

        if (tags != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tags", tags));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call occupantsNearestOutputFormatGetValidateBeforeCall(String outputFormat, String point, Integer maxDistance, String tags, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling occupantsNearestOutputFormatGet(Async)");
        }

        // verify the required parameter 'point' is set
        if (point == null) {
            throw new ApiException("Missing the required parameter 'point' when calling occupantsNearestOutputFormatGet(Async)");
        }

        return occupantsNearestOutputFormatGetCall(outputFormat, point, maxDistance, tags, outputSRS, locationDescriptor, brief, setBack, _callback);

    }

    /**
     * Find occupants of the site nearest to a geographic point
     * Represents the closest occupant to a given point
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest occupant in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void occupantsNearestOutputFormatGet(String outputFormat, String point, Integer maxDistance, String tags, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        occupantsNearestOutputFormatGetWithHttpInfo(outputFormat, point, maxDistance, tags, outputSRS, locationDescriptor, brief, setBack);
    }

    /**
     * Find occupants of the site nearest to a geographic point
     * Represents the closest occupant to a given point
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest occupant in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> occupantsNearestOutputFormatGetWithHttpInfo(String outputFormat, String point, Integer maxDistance, String tags, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        okhttp3.Call localVarCall = occupantsNearestOutputFormatGetValidateBeforeCall(outputFormat, point, maxDistance, tags, outputSRS, locationDescriptor, brief, setBack, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Find occupants of the site nearest to a geographic point (asynchronously)
     * Represents the closest occupant to a given point
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param point The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the &#39;outputSRS&#39; parameter. (required)
     * @param maxDistance The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited. (optional)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The nearest occupant in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsNearestOutputFormatGetAsync(String outputFormat, String point, Integer maxDistance, String tags, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = occupantsNearestOutputFormatGetValidateBeforeCall(outputFormat, point, maxDistance, tags, outputSRS, locationDescriptor, brief, setBack, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for occupantsOccupantIDOutputFormatGet
     * @param occupantID Occupant identifier (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The occupant with the requested occupantID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsOccupantIDOutputFormatGetCall(String occupantID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/occupants/{occupantID}.{outputFormat}"
            .replace("{" + "occupantID" + "}", localVarApiClient.escapeString(occupantID.toString()))
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call occupantsOccupantIDOutputFormatGetValidateBeforeCall(String occupantID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'occupantID' is set
        if (occupantID == null) {
            throw new ApiException("Missing the required parameter 'occupantID' when calling occupantsOccupantIDOutputFormatGet(Async)");
        }

        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling occupantsOccupantIDOutputFormatGet(Async)");
        }

        return occupantsOccupantIDOutputFormatGetCall(occupantID, outputFormat, outputSRS, locationDescriptor, brief, setBack, _callback);

    }

    /**
     * Get an occupant (of a site) by its unique ID
     * Represents an individual occupant
     * @param occupantID Occupant identifier (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The occupant with the requested occupantID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void occupantsOccupantIDOutputFormatGet(String occupantID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        occupantsOccupantIDOutputFormatGetWithHttpInfo(occupantID, outputFormat, outputSRS, locationDescriptor, brief, setBack);
    }

    /**
     * Get an occupant (of a site) by its unique ID
     * Represents an individual occupant
     * @param occupantID Occupant identifier (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The occupant with the requested occupantID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> occupantsOccupantIDOutputFormatGetWithHttpInfo(String occupantID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        okhttp3.Call localVarCall = occupantsOccupantIDOutputFormatGetValidateBeforeCall(occupantID, outputFormat, outputSRS, locationDescriptor, brief, setBack, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Get an occupant (of a site) by its unique ID (asynchronously)
     * Represents an individual occupant
     * @param occupantID Occupant identifier (required)
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The occupant with the requested occupantID in &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsOccupantIDOutputFormatGetAsync(String occupantID, String outputFormat, Integer outputSRS, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = occupantsOccupantIDOutputFormatGetValidateBeforeCall(occupantID, outputFormat, outputSRS, locationDescriptor, brief, setBack, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for occupantsWithinOutputFormatGet
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 200)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants within the given area. Each occupant is returned in a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsWithinOutputFormatGetCall(String outputFormat, String bbox, String tags, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/occupants/within.{outputFormat}"
            .replace("{" + "outputFormat" + "}", localVarApiClient.escapeString(outputFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (bbox != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bbox", bbox));
        }

        if (tags != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tags", tags));
        }

        if (outputSRS != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("outputSRS", outputSRS));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (locationDescriptor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("locationDescriptor", locationDescriptor));
        }

        if (brief != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("brief", brief));
        }

        if (setBack != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("setBack", setBack));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call occupantsWithinOutputFormatGetValidateBeforeCall(String outputFormat, String bbox, String tags, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'outputFormat' is set
        if (outputFormat == null) {
            throw new ApiException("Missing the required parameter 'outputFormat' when calling occupantsWithinOutputFormatGet(Async)");
        }

        // verify the required parameter 'bbox' is set
        if (bbox == null) {
            throw new ApiException("Missing the required parameter 'bbox' when calling occupantsWithinOutputFormatGet(Async)");
        }

        return occupantsWithinOutputFormatGetCall(outputFormat, bbox, tags, outputSRS, maxResults, locationDescriptor, brief, setBack, _callback);

    }

    /**
     * Find occupants of sites in a geographic area
     * Represents all occupants within a given area
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 200)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants within the given area. Each occupant is returned in a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public void occupantsWithinOutputFormatGet(String outputFormat, String bbox, String tags, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        occupantsWithinOutputFormatGetWithHttpInfo(outputFormat, bbox, tags, outputSRS, maxResults, locationDescriptor, brief, setBack);
    }

    /**
     * Find occupants of sites in a geographic area
     * Represents all occupants within a given area
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 200)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants within the given area. Each occupant is returned in a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> occupantsWithinOutputFormatGetWithHttpInfo(String outputFormat, String bbox, String tags, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack) throws ApiException {
        okhttp3.Call localVarCall = occupantsWithinOutputFormatGetValidateBeforeCall(outputFormat, bbox, tags, outputSRS, maxResults, locationDescriptor, brief, setBack, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Find occupants of sites in a geographic area (asynchronously)
     * Represents all occupants within a given area
     * @param outputFormat Results format. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target&#x3D;\&quot;_blank\&quot;&gt;outputFormat&lt;/a&gt;.   Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS&#x3D;4326) (required)
     * @param bbox A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target&#x3D;\&quot;_blank\&quot;&gt;bbox&lt;/a&gt; (required)
     * @param tags Example: schools;courts;employment&lt;br&gt;A list of tags separated by semicolons. (optional)
     * @param outputSRS The EPSG code of the spatial reference system (SRS) to use for output geometries. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target&#x3D;\&quot;_blank\&quot;&gt;outputSRS&lt;/a&gt; (optional, default to 4326)
     * @param maxResults The maximum number of search results to return. (optional, default to 200)
     * @param locationDescriptor Describes the nature of the address location. See &lt;a href&#x3D;https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target&#x3D;\&quot;_blank\&quot;&gt;locationDescriptor&lt;/a&gt; (optional, default to any)
     * @param brief If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats. (optional, default to false)
     * @param setBack The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of selected occupants within the given area. Each occupant is returned in a &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Site Address Representation&lt;/a&gt; plus &lt;a href&#x3D;\&quot;https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Occupant Representation&lt;/a&gt; </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call occupantsWithinOutputFormatGetAsync(String outputFormat, String bbox, String tags, Integer outputSRS, Integer maxResults, String locationDescriptor, Boolean brief, Integer setBack, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = occupantsWithinOutputFormatGetValidateBeforeCall(outputFormat, bbox, tags, outputSRS, maxResults, locationDescriptor, brief, setBack, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
