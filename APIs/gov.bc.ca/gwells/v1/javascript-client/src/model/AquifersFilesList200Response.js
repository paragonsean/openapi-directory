/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AquifersFilesList200ResponsePrivateInner from './AquifersFilesList200ResponsePrivateInner';

/**
 * The AquifersFilesList200Response model module.
 * @module model/AquifersFilesList200Response
 * @version v1
 */
class AquifersFilesList200Response {
    /**
     * Constructs a new <code>AquifersFilesList200Response</code>.
     * @alias module:model/AquifersFilesList200Response
     */
    constructor() { 
        
        AquifersFilesList200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AquifersFilesList200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AquifersFilesList200Response} obj Optional instance to populate.
     * @return {module:model/AquifersFilesList200Response} The populated <code>AquifersFilesList200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AquifersFilesList200Response();

            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], [AquifersFilesList200ResponsePrivateInner]);
            }
            if (data.hasOwnProperty('public')) {
                obj['public'] = ApiClient.convertToType(data['public'], [AquifersFilesList200ResponsePrivateInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AquifersFilesList200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AquifersFilesList200Response</code>.
     */
    static validateJSON(data) {
        if (data['private']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['private'])) {
                throw new Error("Expected the field `private` to be an array in the JSON data but got " + data['private']);
            }
            // validate the optional field `private` (array)
            for (const item of data['private']) {
                AquifersFilesList200ResponsePrivateInner.validateJSON(item);
            };
        }
        if (data['public']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['public'])) {
                throw new Error("Expected the field `public` to be an array in the JSON data but got " + data['public']);
            }
            // validate the optional field `public` (array)
            for (const item of data['public']) {
                AquifersFilesList200ResponsePrivateInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AquifersFilesList200ResponsePrivateInner>} private
 */
AquifersFilesList200Response.prototype['private'] = undefined;

/**
 * @member {Array.<module:model/AquifersFilesList200ResponsePrivateInner>} public
 */
AquifersFilesList200Response.prototype['public'] = undefined;






export default AquifersFilesList200Response;

