/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WellList model module.
 * @module model/WellList
 * @version v1
 */
class WellList {
    /**
     * Constructs a new <code>WellList</code>.
     * @alias module:model/WellList
     * @param ownerFullName {String} 
     */
    constructor(ownerFullName) { 
        
        WellList.initialize(this, ownerFullName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ownerFullName) { 
        obj['owner_full_name'] = ownerFullName;
    }

    /**
     * Constructs a <code>WellList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WellList} obj Optional instance to populate.
     * @return {module:model/WellList} The populated <code>WellList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WellList();

            if (data.hasOwnProperty('alteration_end_date')) {
                obj['alteration_end_date'] = ApiClient.convertToType(data['alteration_end_date'], 'Date');
            }
            if (data.hasOwnProperty('alternative_specs_submitted')) {
                obj['alternative_specs_submitted'] = ApiClient.convertToType(data['alternative_specs_submitted'], 'Boolean');
            }
            if (data.hasOwnProperty('analytic_solution_type')) {
                obj['analytic_solution_type'] = ApiClient.convertToType(data['analytic_solution_type'], 'Number');
            }
            if (data.hasOwnProperty('aquifer')) {
                obj['aquifer'] = ApiClient.convertToType(data['aquifer'], 'Number');
            }
            if (data.hasOwnProperty('aquifer_vulnerability_index')) {
                obj['aquifer_vulnerability_index'] = ApiClient.convertToType(data['aquifer_vulnerability_index'], 'Number');
            }
            if (data.hasOwnProperty('artesian_flow')) {
                obj['artesian_flow'] = ApiClient.convertToType(data['artesian_flow'], 'Number');
            }
            if (data.hasOwnProperty('artesian_pressure')) {
                obj['artesian_pressure'] = ApiClient.convertToType(data['artesian_pressure'], 'Number');
            }
            if (data.hasOwnProperty('backfill_depth')) {
                obj['backfill_depth'] = ApiClient.convertToType(data['backfill_depth'], 'Number');
            }
            if (data.hasOwnProperty('backfill_material')) {
                obj['backfill_material'] = ApiClient.convertToType(data['backfill_material'], 'String');
            }
            if (data.hasOwnProperty('backfill_type')) {
                obj['backfill_type'] = ApiClient.convertToType(data['backfill_type'], 'String');
            }
            if (data.hasOwnProperty('bcgs_id')) {
                obj['bcgs_id'] = ApiClient.convertToType(data['bcgs_id'], 'Number');
            }
            if (data.hasOwnProperty('bedrock_depth')) {
                obj['bedrock_depth'] = ApiClient.convertToType(data['bedrock_depth'], 'Number');
            }
            if (data.hasOwnProperty('boundary_effect')) {
                obj['boundary_effect'] = ApiClient.convertToType(data['boundary_effect'], 'Number');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('construction_end_date')) {
                obj['construction_end_date'] = ApiClient.convertToType(data['construction_end_date'], 'Date');
            }
            if (data.hasOwnProperty('construction_start_date')) {
                obj['construction_start_date'] = ApiClient.convertToType(data['construction_start_date'], 'Date');
            }
            if (data.hasOwnProperty('coordinate_acquisition_code')) {
                obj['coordinate_acquisition_code'] = ApiClient.convertToType(data['coordinate_acquisition_code'], 'String');
            }
            if (data.hasOwnProperty('decommission_details')) {
                obj['decommission_details'] = ApiClient.convertToType(data['decommission_details'], 'String');
            }
            if (data.hasOwnProperty('decommission_end_date')) {
                obj['decommission_end_date'] = ApiClient.convertToType(data['decommission_end_date'], 'Date');
            }
            if (data.hasOwnProperty('decommission_method')) {
                obj['decommission_method'] = ApiClient.convertToType(data['decommission_method'], 'String');
            }
            if (data.hasOwnProperty('decommission_reason')) {
                obj['decommission_reason'] = ApiClient.convertToType(data['decommission_reason'], 'String');
            }
            if (data.hasOwnProperty('decommission_start_date')) {
                obj['decommission_start_date'] = ApiClient.convertToType(data['decommission_start_date'], 'Date');
            }
            if (data.hasOwnProperty('development_hours')) {
                obj['development_hours'] = ApiClient.convertToType(data['development_hours'], 'Number');
            }
            if (data.hasOwnProperty('development_method')) {
                obj['development_method'] = ApiClient.convertToType(data['development_method'], 'String');
            }
            if (data.hasOwnProperty('development_notes')) {
                obj['development_notes'] = ApiClient.convertToType(data['development_notes'], 'String');
            }
            if (data.hasOwnProperty('diameter')) {
                obj['diameter'] = ApiClient.convertToType(data['diameter'], 'String');
            }
            if (data.hasOwnProperty('drawdown')) {
                obj['drawdown'] = ApiClient.convertToType(data['drawdown'], 'Number');
            }
            if (data.hasOwnProperty('drilling_company')) {
                obj['drilling_company'] = ApiClient.convertToType(data['drilling_company'], 'String');
            }
            if (data.hasOwnProperty('drilling_method')) {
                obj['drilling_method'] = ApiClient.convertToType(data['drilling_method'], 'String');
            }
            if (data.hasOwnProperty('ems')) {
                obj['ems'] = ApiClient.convertToType(data['ems'], 'String');
            }
            if (data.hasOwnProperty('filter_pack_from')) {
                obj['filter_pack_from'] = ApiClient.convertToType(data['filter_pack_from'], 'Number');
            }
            if (data.hasOwnProperty('filter_pack_material')) {
                obj['filter_pack_material'] = ApiClient.convertToType(data['filter_pack_material'], 'String');
            }
            if (data.hasOwnProperty('filter_pack_material_size')) {
                obj['filter_pack_material_size'] = ApiClient.convertToType(data['filter_pack_material_size'], 'String');
            }
            if (data.hasOwnProperty('filter_pack_thickness')) {
                obj['filter_pack_thickness'] = ApiClient.convertToType(data['filter_pack_thickness'], 'Number');
            }
            if (data.hasOwnProperty('filter_pack_to')) {
                obj['filter_pack_to'] = ApiClient.convertToType(data['filter_pack_to'], 'Number');
            }
            if (data.hasOwnProperty('final_casing_stick_up')) {
                obj['final_casing_stick_up'] = ApiClient.convertToType(data['final_casing_stick_up'], 'Number');
            }
            if (data.hasOwnProperty('finished_well_depth')) {
                obj['finished_well_depth'] = ApiClient.convertToType(data['finished_well_depth'], 'Number');
            }
            if (data.hasOwnProperty('ground_elevation')) {
                obj['ground_elevation'] = ApiClient.convertToType(data['ground_elevation'], 'Number');
            }
            if (data.hasOwnProperty('ground_elevation_method')) {
                obj['ground_elevation_method'] = ApiClient.convertToType(data['ground_elevation_method'], 'String');
            }
            if (data.hasOwnProperty('hydraulic_conductivity')) {
                obj['hydraulic_conductivity'] = ApiClient.convertToType(data['hydraulic_conductivity'], 'String');
            }
            if (data.hasOwnProperty('hydro_fracturing_performed')) {
                obj['hydro_fracturing_performed'] = ApiClient.convertToType(data['hydro_fracturing_performed'], 'Boolean');
            }
            if (data.hasOwnProperty('hydro_fracturing_yield_increase')) {
                obj['hydro_fracturing_yield_increase'] = ApiClient.convertToType(data['hydro_fracturing_yield_increase'], 'Number');
            }
            if (data.hasOwnProperty('id_plate_attached_by')) {
                obj['id_plate_attached_by'] = ApiClient.convertToType(data['id_plate_attached_by'], 'String');
            }
            if (data.hasOwnProperty('identification_plate_number')) {
                obj['identification_plate_number'] = ApiClient.convertToType(data['identification_plate_number'], 'Number');
            }
            if (data.hasOwnProperty('intended_water_use')) {
                obj['intended_water_use'] = ApiClient.convertToType(data['intended_water_use'], 'String');
            }
            if (data.hasOwnProperty('land_district')) {
                obj['land_district'] = ApiClient.convertToType(data['land_district'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('legal_block')) {
                obj['legal_block'] = ApiClient.convertToType(data['legal_block'], 'String');
            }
            if (data.hasOwnProperty('legal_district_lot')) {
                obj['legal_district_lot'] = ApiClient.convertToType(data['legal_district_lot'], 'String');
            }
            if (data.hasOwnProperty('legal_lot')) {
                obj['legal_lot'] = ApiClient.convertToType(data['legal_lot'], 'String');
            }
            if (data.hasOwnProperty('legal_pid')) {
                obj['legal_pid'] = ApiClient.convertToType(data['legal_pid'], 'Number');
            }
            if (data.hasOwnProperty('legal_plan')) {
                obj['legal_plan'] = ApiClient.convertToType(data['legal_plan'], 'String');
            }
            if (data.hasOwnProperty('legal_range')) {
                obj['legal_range'] = ApiClient.convertToType(data['legal_range'], 'String');
            }
            if (data.hasOwnProperty('legal_section')) {
                obj['legal_section'] = ApiClient.convertToType(data['legal_section'], 'String');
            }
            if (data.hasOwnProperty('legal_township')) {
                obj['legal_township'] = ApiClient.convertToType(data['legal_township'], 'String');
            }
            if (data.hasOwnProperty('licenced_status')) {
                obj['licenced_status'] = ApiClient.convertToType(data['licenced_status'], 'String');
            }
            if (data.hasOwnProperty('liner_diameter')) {
                obj['liner_diameter'] = ApiClient.convertToType(data['liner_diameter'], 'Number');
            }
            if (data.hasOwnProperty('liner_from')) {
                obj['liner_from'] = ApiClient.convertToType(data['liner_from'], 'Number');
            }
            if (data.hasOwnProperty('liner_material')) {
                obj['liner_material'] = ApiClient.convertToType(data['liner_material'], 'String');
            }
            if (data.hasOwnProperty('liner_thickness')) {
                obj['liner_thickness'] = ApiClient.convertToType(data['liner_thickness'], 'Number');
            }
            if (data.hasOwnProperty('liner_to')) {
                obj['liner_to'] = ApiClient.convertToType(data['liner_to'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('observation_well_number')) {
                obj['observation_well_number'] = ApiClient.convertToType(data['observation_well_number'], 'String');
            }
            if (data.hasOwnProperty('observation_well_status')) {
                obj['observation_well_status'] = ApiClient.convertToType(data['observation_well_status'], 'String');
            }
            if (data.hasOwnProperty('other_drilling_method')) {
                obj['other_drilling_method'] = ApiClient.convertToType(data['other_drilling_method'], 'String');
            }
            if (data.hasOwnProperty('other_screen_bottom')) {
                obj['other_screen_bottom'] = ApiClient.convertToType(data['other_screen_bottom'], 'String');
            }
            if (data.hasOwnProperty('other_screen_material')) {
                obj['other_screen_material'] = ApiClient.convertToType(data['other_screen_material'], 'String');
            }
            if (data.hasOwnProperty('owner_full_name')) {
                obj['owner_full_name'] = ApiClient.convertToType(data['owner_full_name'], 'String');
            }
            if (data.hasOwnProperty('recommended_pump_depth')) {
                obj['recommended_pump_depth'] = ApiClient.convertToType(data['recommended_pump_depth'], 'Number');
            }
            if (data.hasOwnProperty('recommended_pump_rate')) {
                obj['recommended_pump_rate'] = ApiClient.convertToType(data['recommended_pump_rate'], 'Number');
            }
            if (data.hasOwnProperty('screen_bottom')) {
                obj['screen_bottom'] = ApiClient.convertToType(data['screen_bottom'], 'String');
            }
            if (data.hasOwnProperty('screen_information')) {
                obj['screen_information'] = ApiClient.convertToType(data['screen_information'], 'String');
            }
            if (data.hasOwnProperty('screen_intake_method')) {
                obj['screen_intake_method'] = ApiClient.convertToType(data['screen_intake_method'], 'String');
            }
            if (data.hasOwnProperty('screen_material')) {
                obj['screen_material'] = ApiClient.convertToType(data['screen_material'], 'String');
            }
            if (data.hasOwnProperty('screen_opening')) {
                obj['screen_opening'] = ApiClient.convertToType(data['screen_opening'], 'String');
            }
            if (data.hasOwnProperty('screen_type')) {
                obj['screen_type'] = ApiClient.convertToType(data['screen_type'], 'String');
            }
            if (data.hasOwnProperty('sealant_material')) {
                obj['sealant_material'] = ApiClient.convertToType(data['sealant_material'], 'String');
            }
            if (data.hasOwnProperty('specific_storage')) {
                obj['specific_storage'] = ApiClient.convertToType(data['specific_storage'], 'String');
            }
            if (data.hasOwnProperty('specific_yield')) {
                obj['specific_yield'] = ApiClient.convertToType(data['specific_yield'], 'Number');
            }
            if (data.hasOwnProperty('static_level_before_test')) {
                obj['static_level_before_test'] = ApiClient.convertToType(data['static_level_before_test'], 'Number');
            }
            if (data.hasOwnProperty('static_water_level')) {
                obj['static_water_level'] = ApiClient.convertToType(data['static_water_level'], 'Number');
            }
            if (data.hasOwnProperty('storativity')) {
                obj['storativity'] = ApiClient.convertToType(data['storativity'], 'Number');
            }
            if (data.hasOwnProperty('street_address')) {
                obj['street_address'] = ApiClient.convertToType(data['street_address'], 'String');
            }
            if (data.hasOwnProperty('surface_seal_depth')) {
                obj['surface_seal_depth'] = ApiClient.convertToType(data['surface_seal_depth'], 'Number');
            }
            if (data.hasOwnProperty('surface_seal_length')) {
                obj['surface_seal_length'] = ApiClient.convertToType(data['surface_seal_length'], 'Number');
            }
            if (data.hasOwnProperty('surface_seal_material')) {
                obj['surface_seal_material'] = ApiClient.convertToType(data['surface_seal_material'], 'String');
            }
            if (data.hasOwnProperty('surface_seal_method')) {
                obj['surface_seal_method'] = ApiClient.convertToType(data['surface_seal_method'], 'String');
            }
            if (data.hasOwnProperty('surface_seal_thickness')) {
                obj['surface_seal_thickness'] = ApiClient.convertToType(data['surface_seal_thickness'], 'Number');
            }
            if (data.hasOwnProperty('testing_duration')) {
                obj['testing_duration'] = ApiClient.convertToType(data['testing_duration'], 'Number');
            }
            if (data.hasOwnProperty('testing_method')) {
                obj['testing_method'] = ApiClient.convertToType(data['testing_method'], 'String');
            }
            if (data.hasOwnProperty('total_depth_drilled')) {
                obj['total_depth_drilled'] = ApiClient.convertToType(data['total_depth_drilled'], 'Number');
            }
            if (data.hasOwnProperty('transmissivity')) {
                obj['transmissivity'] = ApiClient.convertToType(data['transmissivity'], 'Number');
            }
            if (data.hasOwnProperty('utm_easting')) {
                obj['utm_easting'] = ApiClient.convertToType(data['utm_easting'], 'Number');
            }
            if (data.hasOwnProperty('utm_northing')) {
                obj['utm_northing'] = ApiClient.convertToType(data['utm_northing'], 'Number');
            }
            if (data.hasOwnProperty('utm_zone_code')) {
                obj['utm_zone_code'] = ApiClient.convertToType(data['utm_zone_code'], 'String');
            }
            if (data.hasOwnProperty('water_quality_characteristics')) {
                obj['water_quality_characteristics'] = ApiClient.convertToType(data['water_quality_characteristics'], ['String']);
            }
            if (data.hasOwnProperty('water_quality_colour')) {
                obj['water_quality_colour'] = ApiClient.convertToType(data['water_quality_colour'], 'String');
            }
            if (data.hasOwnProperty('water_quality_odour')) {
                obj['water_quality_odour'] = ApiClient.convertToType(data['water_quality_odour'], 'String');
            }
            if (data.hasOwnProperty('water_supply_system_name')) {
                obj['water_supply_system_name'] = ApiClient.convertToType(data['water_supply_system_name'], 'String');
            }
            if (data.hasOwnProperty('water_supply_system_well_name')) {
                obj['water_supply_system_well_name'] = ApiClient.convertToType(data['water_supply_system_well_name'], 'String');
            }
            if (data.hasOwnProperty('well_cap_type')) {
                obj['well_cap_type'] = ApiClient.convertToType(data['well_cap_type'], 'String');
            }
            if (data.hasOwnProperty('well_class')) {
                obj['well_class'] = ApiClient.convertToType(data['well_class'], 'String');
            }
            if (data.hasOwnProperty('well_disinfected')) {
                obj['well_disinfected'] = ApiClient.convertToType(data['well_disinfected'], 'Boolean');
            }
            if (data.hasOwnProperty('well_guid')) {
                obj['well_guid'] = ApiClient.convertToType(data['well_guid'], 'String');
            }
            if (data.hasOwnProperty('well_identification_plate_attached')) {
                obj['well_identification_plate_attached'] = ApiClient.convertToType(data['well_identification_plate_attached'], 'String');
            }
            if (data.hasOwnProperty('well_location_description')) {
                obj['well_location_description'] = ApiClient.convertToType(data['well_location_description'], 'String');
            }
            if (data.hasOwnProperty('well_orientation')) {
                obj['well_orientation'] = ApiClient.convertToType(data['well_orientation'], 'Boolean');
            }
            if (data.hasOwnProperty('well_status')) {
                obj['well_status'] = ApiClient.convertToType(data['well_status'], 'String');
            }
            if (data.hasOwnProperty('well_subclass')) {
                obj['well_subclass'] = ApiClient.convertToType(data['well_subclass'], 'String');
            }
            if (data.hasOwnProperty('well_tag_number')) {
                obj['well_tag_number'] = ApiClient.convertToType(data['well_tag_number'], 'Number');
            }
            if (data.hasOwnProperty('well_yield')) {
                obj['well_yield'] = ApiClient.convertToType(data['well_yield'], 'Number');
            }
            if (data.hasOwnProperty('well_yield_unit')) {
                obj['well_yield_unit'] = ApiClient.convertToType(data['well_yield_unit'], 'String');
            }
            if (data.hasOwnProperty('yield_estimation_duration')) {
                obj['yield_estimation_duration'] = ApiClient.convertToType(data['yield_estimation_duration'], 'Number');
            }
            if (data.hasOwnProperty('yield_estimation_method')) {
                obj['yield_estimation_method'] = ApiClient.convertToType(data['yield_estimation_method'], 'String');
            }
            if (data.hasOwnProperty('yield_estimation_rate')) {
                obj['yield_estimation_rate'] = ApiClient.convertToType(data['yield_estimation_rate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WellList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WellList</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WellList.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['analytic_solution_type'] && !(typeof data['analytic_solution_type'] === 'string' || data['analytic_solution_type'] instanceof String)) {
            throw new Error("Expected the field `analytic_solution_type` to be a primitive type in the JSON string but got " + data['analytic_solution_type']);
        }
        // ensure the json data is a string
        if (data['aquifer_vulnerability_index'] && !(typeof data['aquifer_vulnerability_index'] === 'string' || data['aquifer_vulnerability_index'] instanceof String)) {
            throw new Error("Expected the field `aquifer_vulnerability_index` to be a primitive type in the JSON string but got " + data['aquifer_vulnerability_index']);
        }
        // ensure the json data is a string
        if (data['artesian_flow'] && !(typeof data['artesian_flow'] === 'string' || data['artesian_flow'] instanceof String)) {
            throw new Error("Expected the field `artesian_flow` to be a primitive type in the JSON string but got " + data['artesian_flow']);
        }
        // ensure the json data is a string
        if (data['artesian_pressure'] && !(typeof data['artesian_pressure'] === 'string' || data['artesian_pressure'] instanceof String)) {
            throw new Error("Expected the field `artesian_pressure` to be a primitive type in the JSON string but got " + data['artesian_pressure']);
        }
        // ensure the json data is a string
        if (data['backfill_depth'] && !(typeof data['backfill_depth'] === 'string' || data['backfill_depth'] instanceof String)) {
            throw new Error("Expected the field `backfill_depth` to be a primitive type in the JSON string but got " + data['backfill_depth']);
        }
        // ensure the json data is a string
        if (data['backfill_material'] && !(typeof data['backfill_material'] === 'string' || data['backfill_material'] instanceof String)) {
            throw new Error("Expected the field `backfill_material` to be a primitive type in the JSON string but got " + data['backfill_material']);
        }
        // ensure the json data is a string
        if (data['backfill_type'] && !(typeof data['backfill_type'] === 'string' || data['backfill_type'] instanceof String)) {
            throw new Error("Expected the field `backfill_type` to be a primitive type in the JSON string but got " + data['backfill_type']);
        }
        // ensure the json data is a string
        if (data['bedrock_depth'] && !(typeof data['bedrock_depth'] === 'string' || data['bedrock_depth'] instanceof String)) {
            throw new Error("Expected the field `bedrock_depth` to be a primitive type in the JSON string but got " + data['bedrock_depth']);
        }
        // ensure the json data is a string
        if (data['boundary_effect'] && !(typeof data['boundary_effect'] === 'string' || data['boundary_effect'] instanceof String)) {
            throw new Error("Expected the field `boundary_effect` to be a primitive type in the JSON string but got " + data['boundary_effect']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['coordinate_acquisition_code'] && !(typeof data['coordinate_acquisition_code'] === 'string' || data['coordinate_acquisition_code'] instanceof String)) {
            throw new Error("Expected the field `coordinate_acquisition_code` to be a primitive type in the JSON string but got " + data['coordinate_acquisition_code']);
        }
        // ensure the json data is a string
        if (data['decommission_details'] && !(typeof data['decommission_details'] === 'string' || data['decommission_details'] instanceof String)) {
            throw new Error("Expected the field `decommission_details` to be a primitive type in the JSON string but got " + data['decommission_details']);
        }
        // ensure the json data is a string
        if (data['decommission_method'] && !(typeof data['decommission_method'] === 'string' || data['decommission_method'] instanceof String)) {
            throw new Error("Expected the field `decommission_method` to be a primitive type in the JSON string but got " + data['decommission_method']);
        }
        // ensure the json data is a string
        if (data['decommission_reason'] && !(typeof data['decommission_reason'] === 'string' || data['decommission_reason'] instanceof String)) {
            throw new Error("Expected the field `decommission_reason` to be a primitive type in the JSON string but got " + data['decommission_reason']);
        }
        // ensure the json data is a string
        if (data['development_hours'] && !(typeof data['development_hours'] === 'string' || data['development_hours'] instanceof String)) {
            throw new Error("Expected the field `development_hours` to be a primitive type in the JSON string but got " + data['development_hours']);
        }
        // ensure the json data is a string
        if (data['development_method'] && !(typeof data['development_method'] === 'string' || data['development_method'] instanceof String)) {
            throw new Error("Expected the field `development_method` to be a primitive type in the JSON string but got " + data['development_method']);
        }
        // ensure the json data is a string
        if (data['development_notes'] && !(typeof data['development_notes'] === 'string' || data['development_notes'] instanceof String)) {
            throw new Error("Expected the field `development_notes` to be a primitive type in the JSON string but got " + data['development_notes']);
        }
        // ensure the json data is a string
        if (data['diameter'] && !(typeof data['diameter'] === 'string' || data['diameter'] instanceof String)) {
            throw new Error("Expected the field `diameter` to be a primitive type in the JSON string but got " + data['diameter']);
        }
        // ensure the json data is a string
        if (data['drawdown'] && !(typeof data['drawdown'] === 'string' || data['drawdown'] instanceof String)) {
            throw new Error("Expected the field `drawdown` to be a primitive type in the JSON string but got " + data['drawdown']);
        }
        // ensure the json data is a string
        if (data['drilling_company'] && !(typeof data['drilling_company'] === 'string' || data['drilling_company'] instanceof String)) {
            throw new Error("Expected the field `drilling_company` to be a primitive type in the JSON string but got " + data['drilling_company']);
        }
        // ensure the json data is a string
        if (data['drilling_method'] && !(typeof data['drilling_method'] === 'string' || data['drilling_method'] instanceof String)) {
            throw new Error("Expected the field `drilling_method` to be a primitive type in the JSON string but got " + data['drilling_method']);
        }
        // ensure the json data is a string
        if (data['ems'] && !(typeof data['ems'] === 'string' || data['ems'] instanceof String)) {
            throw new Error("Expected the field `ems` to be a primitive type in the JSON string but got " + data['ems']);
        }
        // ensure the json data is a string
        if (data['filter_pack_from'] && !(typeof data['filter_pack_from'] === 'string' || data['filter_pack_from'] instanceof String)) {
            throw new Error("Expected the field `filter_pack_from` to be a primitive type in the JSON string but got " + data['filter_pack_from']);
        }
        // ensure the json data is a string
        if (data['filter_pack_material'] && !(typeof data['filter_pack_material'] === 'string' || data['filter_pack_material'] instanceof String)) {
            throw new Error("Expected the field `filter_pack_material` to be a primitive type in the JSON string but got " + data['filter_pack_material']);
        }
        // ensure the json data is a string
        if (data['filter_pack_material_size'] && !(typeof data['filter_pack_material_size'] === 'string' || data['filter_pack_material_size'] instanceof String)) {
            throw new Error("Expected the field `filter_pack_material_size` to be a primitive type in the JSON string but got " + data['filter_pack_material_size']);
        }
        // ensure the json data is a string
        if (data['filter_pack_thickness'] && !(typeof data['filter_pack_thickness'] === 'string' || data['filter_pack_thickness'] instanceof String)) {
            throw new Error("Expected the field `filter_pack_thickness` to be a primitive type in the JSON string but got " + data['filter_pack_thickness']);
        }
        // ensure the json data is a string
        if (data['filter_pack_to'] && !(typeof data['filter_pack_to'] === 'string' || data['filter_pack_to'] instanceof String)) {
            throw new Error("Expected the field `filter_pack_to` to be a primitive type in the JSON string but got " + data['filter_pack_to']);
        }
        // ensure the json data is a string
        if (data['final_casing_stick_up'] && !(typeof data['final_casing_stick_up'] === 'string' || data['final_casing_stick_up'] instanceof String)) {
            throw new Error("Expected the field `final_casing_stick_up` to be a primitive type in the JSON string but got " + data['final_casing_stick_up']);
        }
        // ensure the json data is a string
        if (data['finished_well_depth'] && !(typeof data['finished_well_depth'] === 'string' || data['finished_well_depth'] instanceof String)) {
            throw new Error("Expected the field `finished_well_depth` to be a primitive type in the JSON string but got " + data['finished_well_depth']);
        }
        // ensure the json data is a string
        if (data['ground_elevation'] && !(typeof data['ground_elevation'] === 'string' || data['ground_elevation'] instanceof String)) {
            throw new Error("Expected the field `ground_elevation` to be a primitive type in the JSON string but got " + data['ground_elevation']);
        }
        // ensure the json data is a string
        if (data['ground_elevation_method'] && !(typeof data['ground_elevation_method'] === 'string' || data['ground_elevation_method'] instanceof String)) {
            throw new Error("Expected the field `ground_elevation_method` to be a primitive type in the JSON string but got " + data['ground_elevation_method']);
        }
        // ensure the json data is a string
        if (data['hydraulic_conductivity'] && !(typeof data['hydraulic_conductivity'] === 'string' || data['hydraulic_conductivity'] instanceof String)) {
            throw new Error("Expected the field `hydraulic_conductivity` to be a primitive type in the JSON string but got " + data['hydraulic_conductivity']);
        }
        // ensure the json data is a string
        if (data['hydro_fracturing_yield_increase'] && !(typeof data['hydro_fracturing_yield_increase'] === 'string' || data['hydro_fracturing_yield_increase'] instanceof String)) {
            throw new Error("Expected the field `hydro_fracturing_yield_increase` to be a primitive type in the JSON string but got " + data['hydro_fracturing_yield_increase']);
        }
        // ensure the json data is a string
        if (data['id_plate_attached_by'] && !(typeof data['id_plate_attached_by'] === 'string' || data['id_plate_attached_by'] instanceof String)) {
            throw new Error("Expected the field `id_plate_attached_by` to be a primitive type in the JSON string but got " + data['id_plate_attached_by']);
        }
        // ensure the json data is a string
        if (data['intended_water_use'] && !(typeof data['intended_water_use'] === 'string' || data['intended_water_use'] instanceof String)) {
            throw new Error("Expected the field `intended_water_use` to be a primitive type in the JSON string but got " + data['intended_water_use']);
        }
        // ensure the json data is a string
        if (data['land_district'] && !(typeof data['land_district'] === 'string' || data['land_district'] instanceof String)) {
            throw new Error("Expected the field `land_district` to be a primitive type in the JSON string but got " + data['land_district']);
        }
        // ensure the json data is a string
        if (data['latitude'] && !(typeof data['latitude'] === 'string' || data['latitude'] instanceof String)) {
            throw new Error("Expected the field `latitude` to be a primitive type in the JSON string but got " + data['latitude']);
        }
        // ensure the json data is a string
        if (data['legal_block'] && !(typeof data['legal_block'] === 'string' || data['legal_block'] instanceof String)) {
            throw new Error("Expected the field `legal_block` to be a primitive type in the JSON string but got " + data['legal_block']);
        }
        // ensure the json data is a string
        if (data['legal_district_lot'] && !(typeof data['legal_district_lot'] === 'string' || data['legal_district_lot'] instanceof String)) {
            throw new Error("Expected the field `legal_district_lot` to be a primitive type in the JSON string but got " + data['legal_district_lot']);
        }
        // ensure the json data is a string
        if (data['legal_lot'] && !(typeof data['legal_lot'] === 'string' || data['legal_lot'] instanceof String)) {
            throw new Error("Expected the field `legal_lot` to be a primitive type in the JSON string but got " + data['legal_lot']);
        }
        // ensure the json data is a string
        if (data['legal_plan'] && !(typeof data['legal_plan'] === 'string' || data['legal_plan'] instanceof String)) {
            throw new Error("Expected the field `legal_plan` to be a primitive type in the JSON string but got " + data['legal_plan']);
        }
        // ensure the json data is a string
        if (data['legal_range'] && !(typeof data['legal_range'] === 'string' || data['legal_range'] instanceof String)) {
            throw new Error("Expected the field `legal_range` to be a primitive type in the JSON string but got " + data['legal_range']);
        }
        // ensure the json data is a string
        if (data['legal_section'] && !(typeof data['legal_section'] === 'string' || data['legal_section'] instanceof String)) {
            throw new Error("Expected the field `legal_section` to be a primitive type in the JSON string but got " + data['legal_section']);
        }
        // ensure the json data is a string
        if (data['legal_township'] && !(typeof data['legal_township'] === 'string' || data['legal_township'] instanceof String)) {
            throw new Error("Expected the field `legal_township` to be a primitive type in the JSON string but got " + data['legal_township']);
        }
        // ensure the json data is a string
        if (data['licenced_status'] && !(typeof data['licenced_status'] === 'string' || data['licenced_status'] instanceof String)) {
            throw new Error("Expected the field `licenced_status` to be a primitive type in the JSON string but got " + data['licenced_status']);
        }
        // ensure the json data is a string
        if (data['liner_diameter'] && !(typeof data['liner_diameter'] === 'string' || data['liner_diameter'] instanceof String)) {
            throw new Error("Expected the field `liner_diameter` to be a primitive type in the JSON string but got " + data['liner_diameter']);
        }
        // ensure the json data is a string
        if (data['liner_from'] && !(typeof data['liner_from'] === 'string' || data['liner_from'] instanceof String)) {
            throw new Error("Expected the field `liner_from` to be a primitive type in the JSON string but got " + data['liner_from']);
        }
        // ensure the json data is a string
        if (data['liner_material'] && !(typeof data['liner_material'] === 'string' || data['liner_material'] instanceof String)) {
            throw new Error("Expected the field `liner_material` to be a primitive type in the JSON string but got " + data['liner_material']);
        }
        // ensure the json data is a string
        if (data['liner_thickness'] && !(typeof data['liner_thickness'] === 'string' || data['liner_thickness'] instanceof String)) {
            throw new Error("Expected the field `liner_thickness` to be a primitive type in the JSON string but got " + data['liner_thickness']);
        }
        // ensure the json data is a string
        if (data['liner_to'] && !(typeof data['liner_to'] === 'string' || data['liner_to'] instanceof String)) {
            throw new Error("Expected the field `liner_to` to be a primitive type in the JSON string but got " + data['liner_to']);
        }
        // ensure the json data is a string
        if (data['longitude'] && !(typeof data['longitude'] === 'string' || data['longitude'] instanceof String)) {
            throw new Error("Expected the field `longitude` to be a primitive type in the JSON string but got " + data['longitude']);
        }
        // ensure the json data is a string
        if (data['observation_well_number'] && !(typeof data['observation_well_number'] === 'string' || data['observation_well_number'] instanceof String)) {
            throw new Error("Expected the field `observation_well_number` to be a primitive type in the JSON string but got " + data['observation_well_number']);
        }
        // ensure the json data is a string
        if (data['observation_well_status'] && !(typeof data['observation_well_status'] === 'string' || data['observation_well_status'] instanceof String)) {
            throw new Error("Expected the field `observation_well_status` to be a primitive type in the JSON string but got " + data['observation_well_status']);
        }
        // ensure the json data is a string
        if (data['other_drilling_method'] && !(typeof data['other_drilling_method'] === 'string' || data['other_drilling_method'] instanceof String)) {
            throw new Error("Expected the field `other_drilling_method` to be a primitive type in the JSON string but got " + data['other_drilling_method']);
        }
        // ensure the json data is a string
        if (data['other_screen_bottom'] && !(typeof data['other_screen_bottom'] === 'string' || data['other_screen_bottom'] instanceof String)) {
            throw new Error("Expected the field `other_screen_bottom` to be a primitive type in the JSON string but got " + data['other_screen_bottom']);
        }
        // ensure the json data is a string
        if (data['other_screen_material'] && !(typeof data['other_screen_material'] === 'string' || data['other_screen_material'] instanceof String)) {
            throw new Error("Expected the field `other_screen_material` to be a primitive type in the JSON string but got " + data['other_screen_material']);
        }
        // ensure the json data is a string
        if (data['owner_full_name'] && !(typeof data['owner_full_name'] === 'string' || data['owner_full_name'] instanceof String)) {
            throw new Error("Expected the field `owner_full_name` to be a primitive type in the JSON string but got " + data['owner_full_name']);
        }
        // ensure the json data is a string
        if (data['recommended_pump_depth'] && !(typeof data['recommended_pump_depth'] === 'string' || data['recommended_pump_depth'] instanceof String)) {
            throw new Error("Expected the field `recommended_pump_depth` to be a primitive type in the JSON string but got " + data['recommended_pump_depth']);
        }
        // ensure the json data is a string
        if (data['recommended_pump_rate'] && !(typeof data['recommended_pump_rate'] === 'string' || data['recommended_pump_rate'] instanceof String)) {
            throw new Error("Expected the field `recommended_pump_rate` to be a primitive type in the JSON string but got " + data['recommended_pump_rate']);
        }
        // ensure the json data is a string
        if (data['screen_bottom'] && !(typeof data['screen_bottom'] === 'string' || data['screen_bottom'] instanceof String)) {
            throw new Error("Expected the field `screen_bottom` to be a primitive type in the JSON string but got " + data['screen_bottom']);
        }
        // ensure the json data is a string
        if (data['screen_information'] && !(typeof data['screen_information'] === 'string' || data['screen_information'] instanceof String)) {
            throw new Error("Expected the field `screen_information` to be a primitive type in the JSON string but got " + data['screen_information']);
        }
        // ensure the json data is a string
        if (data['screen_intake_method'] && !(typeof data['screen_intake_method'] === 'string' || data['screen_intake_method'] instanceof String)) {
            throw new Error("Expected the field `screen_intake_method` to be a primitive type in the JSON string but got " + data['screen_intake_method']);
        }
        // ensure the json data is a string
        if (data['screen_material'] && !(typeof data['screen_material'] === 'string' || data['screen_material'] instanceof String)) {
            throw new Error("Expected the field `screen_material` to be a primitive type in the JSON string but got " + data['screen_material']);
        }
        // ensure the json data is a string
        if (data['screen_opening'] && !(typeof data['screen_opening'] === 'string' || data['screen_opening'] instanceof String)) {
            throw new Error("Expected the field `screen_opening` to be a primitive type in the JSON string but got " + data['screen_opening']);
        }
        // ensure the json data is a string
        if (data['screen_type'] && !(typeof data['screen_type'] === 'string' || data['screen_type'] instanceof String)) {
            throw new Error("Expected the field `screen_type` to be a primitive type in the JSON string but got " + data['screen_type']);
        }
        // ensure the json data is a string
        if (data['sealant_material'] && !(typeof data['sealant_material'] === 'string' || data['sealant_material'] instanceof String)) {
            throw new Error("Expected the field `sealant_material` to be a primitive type in the JSON string but got " + data['sealant_material']);
        }
        // ensure the json data is a string
        if (data['specific_storage'] && !(typeof data['specific_storage'] === 'string' || data['specific_storage'] instanceof String)) {
            throw new Error("Expected the field `specific_storage` to be a primitive type in the JSON string but got " + data['specific_storage']);
        }
        // ensure the json data is a string
        if (data['specific_yield'] && !(typeof data['specific_yield'] === 'string' || data['specific_yield'] instanceof String)) {
            throw new Error("Expected the field `specific_yield` to be a primitive type in the JSON string but got " + data['specific_yield']);
        }
        // ensure the json data is a string
        if (data['static_level_before_test'] && !(typeof data['static_level_before_test'] === 'string' || data['static_level_before_test'] instanceof String)) {
            throw new Error("Expected the field `static_level_before_test` to be a primitive type in the JSON string but got " + data['static_level_before_test']);
        }
        // ensure the json data is a string
        if (data['static_water_level'] && !(typeof data['static_water_level'] === 'string' || data['static_water_level'] instanceof String)) {
            throw new Error("Expected the field `static_water_level` to be a primitive type in the JSON string but got " + data['static_water_level']);
        }
        // ensure the json data is a string
        if (data['storativity'] && !(typeof data['storativity'] === 'string' || data['storativity'] instanceof String)) {
            throw new Error("Expected the field `storativity` to be a primitive type in the JSON string but got " + data['storativity']);
        }
        // ensure the json data is a string
        if (data['street_address'] && !(typeof data['street_address'] === 'string' || data['street_address'] instanceof String)) {
            throw new Error("Expected the field `street_address` to be a primitive type in the JSON string but got " + data['street_address']);
        }
        // ensure the json data is a string
        if (data['surface_seal_depth'] && !(typeof data['surface_seal_depth'] === 'string' || data['surface_seal_depth'] instanceof String)) {
            throw new Error("Expected the field `surface_seal_depth` to be a primitive type in the JSON string but got " + data['surface_seal_depth']);
        }
        // ensure the json data is a string
        if (data['surface_seal_length'] && !(typeof data['surface_seal_length'] === 'string' || data['surface_seal_length'] instanceof String)) {
            throw new Error("Expected the field `surface_seal_length` to be a primitive type in the JSON string but got " + data['surface_seal_length']);
        }
        // ensure the json data is a string
        if (data['surface_seal_material'] && !(typeof data['surface_seal_material'] === 'string' || data['surface_seal_material'] instanceof String)) {
            throw new Error("Expected the field `surface_seal_material` to be a primitive type in the JSON string but got " + data['surface_seal_material']);
        }
        // ensure the json data is a string
        if (data['surface_seal_method'] && !(typeof data['surface_seal_method'] === 'string' || data['surface_seal_method'] instanceof String)) {
            throw new Error("Expected the field `surface_seal_method` to be a primitive type in the JSON string but got " + data['surface_seal_method']);
        }
        // ensure the json data is a string
        if (data['surface_seal_thickness'] && !(typeof data['surface_seal_thickness'] === 'string' || data['surface_seal_thickness'] instanceof String)) {
            throw new Error("Expected the field `surface_seal_thickness` to be a primitive type in the JSON string but got " + data['surface_seal_thickness']);
        }
        // ensure the json data is a string
        if (data['testing_method'] && !(typeof data['testing_method'] === 'string' || data['testing_method'] instanceof String)) {
            throw new Error("Expected the field `testing_method` to be a primitive type in the JSON string but got " + data['testing_method']);
        }
        // ensure the json data is a string
        if (data['total_depth_drilled'] && !(typeof data['total_depth_drilled'] === 'string' || data['total_depth_drilled'] instanceof String)) {
            throw new Error("Expected the field `total_depth_drilled` to be a primitive type in the JSON string but got " + data['total_depth_drilled']);
        }
        // ensure the json data is a string
        if (data['transmissivity'] && !(typeof data['transmissivity'] === 'string' || data['transmissivity'] instanceof String)) {
            throw new Error("Expected the field `transmissivity` to be a primitive type in the JSON string but got " + data['transmissivity']);
        }
        // ensure the json data is a string
        if (data['utm_zone_code'] && !(typeof data['utm_zone_code'] === 'string' || data['utm_zone_code'] instanceof String)) {
            throw new Error("Expected the field `utm_zone_code` to be a primitive type in the JSON string but got " + data['utm_zone_code']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['water_quality_characteristics'])) {
            throw new Error("Expected the field `water_quality_characteristics` to be an array in the JSON data but got " + data['water_quality_characteristics']);
        }
        // ensure the json data is a string
        if (data['water_quality_colour'] && !(typeof data['water_quality_colour'] === 'string' || data['water_quality_colour'] instanceof String)) {
            throw new Error("Expected the field `water_quality_colour` to be a primitive type in the JSON string but got " + data['water_quality_colour']);
        }
        // ensure the json data is a string
        if (data['water_quality_odour'] && !(typeof data['water_quality_odour'] === 'string' || data['water_quality_odour'] instanceof String)) {
            throw new Error("Expected the field `water_quality_odour` to be a primitive type in the JSON string but got " + data['water_quality_odour']);
        }
        // ensure the json data is a string
        if (data['water_supply_system_name'] && !(typeof data['water_supply_system_name'] === 'string' || data['water_supply_system_name'] instanceof String)) {
            throw new Error("Expected the field `water_supply_system_name` to be a primitive type in the JSON string but got " + data['water_supply_system_name']);
        }
        // ensure the json data is a string
        if (data['water_supply_system_well_name'] && !(typeof data['water_supply_system_well_name'] === 'string' || data['water_supply_system_well_name'] instanceof String)) {
            throw new Error("Expected the field `water_supply_system_well_name` to be a primitive type in the JSON string but got " + data['water_supply_system_well_name']);
        }
        // ensure the json data is a string
        if (data['well_cap_type'] && !(typeof data['well_cap_type'] === 'string' || data['well_cap_type'] instanceof String)) {
            throw new Error("Expected the field `well_cap_type` to be a primitive type in the JSON string but got " + data['well_cap_type']);
        }
        // ensure the json data is a string
        if (data['well_class'] && !(typeof data['well_class'] === 'string' || data['well_class'] instanceof String)) {
            throw new Error("Expected the field `well_class` to be a primitive type in the JSON string but got " + data['well_class']);
        }
        // ensure the json data is a string
        if (data['well_guid'] && !(typeof data['well_guid'] === 'string' || data['well_guid'] instanceof String)) {
            throw new Error("Expected the field `well_guid` to be a primitive type in the JSON string but got " + data['well_guid']);
        }
        // ensure the json data is a string
        if (data['well_identification_plate_attached'] && !(typeof data['well_identification_plate_attached'] === 'string' || data['well_identification_plate_attached'] instanceof String)) {
            throw new Error("Expected the field `well_identification_plate_attached` to be a primitive type in the JSON string but got " + data['well_identification_plate_attached']);
        }
        // ensure the json data is a string
        if (data['well_location_description'] && !(typeof data['well_location_description'] === 'string' || data['well_location_description'] instanceof String)) {
            throw new Error("Expected the field `well_location_description` to be a primitive type in the JSON string but got " + data['well_location_description']);
        }
        // ensure the json data is a string
        if (data['well_status'] && !(typeof data['well_status'] === 'string' || data['well_status'] instanceof String)) {
            throw new Error("Expected the field `well_status` to be a primitive type in the JSON string but got " + data['well_status']);
        }
        // ensure the json data is a string
        if (data['well_subclass'] && !(typeof data['well_subclass'] === 'string' || data['well_subclass'] instanceof String)) {
            throw new Error("Expected the field `well_subclass` to be a primitive type in the JSON string but got " + data['well_subclass']);
        }
        // ensure the json data is a string
        if (data['well_yield'] && !(typeof data['well_yield'] === 'string' || data['well_yield'] instanceof String)) {
            throw new Error("Expected the field `well_yield` to be a primitive type in the JSON string but got " + data['well_yield']);
        }
        // ensure the json data is a string
        if (data['well_yield_unit'] && !(typeof data['well_yield_unit'] === 'string' || data['well_yield_unit'] instanceof String)) {
            throw new Error("Expected the field `well_yield_unit` to be a primitive type in the JSON string but got " + data['well_yield_unit']);
        }
        // ensure the json data is a string
        if (data['yield_estimation_duration'] && !(typeof data['yield_estimation_duration'] === 'string' || data['yield_estimation_duration'] instanceof String)) {
            throw new Error("Expected the field `yield_estimation_duration` to be a primitive type in the JSON string but got " + data['yield_estimation_duration']);
        }
        // ensure the json data is a string
        if (data['yield_estimation_method'] && !(typeof data['yield_estimation_method'] === 'string' || data['yield_estimation_method'] instanceof String)) {
            throw new Error("Expected the field `yield_estimation_method` to be a primitive type in the JSON string but got " + data['yield_estimation_method']);
        }
        // ensure the json data is a string
        if (data['yield_estimation_rate'] && !(typeof data['yield_estimation_rate'] === 'string' || data['yield_estimation_rate'] instanceof String)) {
            throw new Error("Expected the field `yield_estimation_rate` to be a primitive type in the JSON string but got " + data['yield_estimation_rate']);
        }

        return true;
    }


}

WellList.RequiredProperties = ["owner_full_name"];

/**
 * @member {Date} alteration_end_date
 */
WellList.prototype['alteration_end_date'] = undefined;

/**
 * @member {Boolean} alternative_specs_submitted
 */
WellList.prototype['alternative_specs_submitted'] = undefined;

/**
 * @member {Number} analytic_solution_type
 */
WellList.prototype['analytic_solution_type'] = undefined;

/**
 * @member {Number} aquifer
 */
WellList.prototype['aquifer'] = undefined;

/**
 * @member {Number} aquifer_vulnerability_index
 */
WellList.prototype['aquifer_vulnerability_index'] = undefined;

/**
 * @member {Number} artesian_flow
 */
WellList.prototype['artesian_flow'] = undefined;

/**
 * @member {Number} artesian_pressure
 */
WellList.prototype['artesian_pressure'] = undefined;

/**
 * @member {Number} backfill_depth
 */
WellList.prototype['backfill_depth'] = undefined;

/**
 * @member {String} backfill_material
 */
WellList.prototype['backfill_material'] = undefined;

/**
 * @member {String} backfill_type
 */
WellList.prototype['backfill_type'] = undefined;

/**
 * @member {Number} bcgs_id
 */
WellList.prototype['bcgs_id'] = undefined;

/**
 * @member {Number} bedrock_depth
 */
WellList.prototype['bedrock_depth'] = undefined;

/**
 * @member {Number} boundary_effect
 */
WellList.prototype['boundary_effect'] = undefined;

/**
 * @member {String} city
 */
WellList.prototype['city'] = undefined;

/**
 * @member {String} comments
 */
WellList.prototype['comments'] = undefined;

/**
 * @member {Date} construction_end_date
 */
WellList.prototype['construction_end_date'] = undefined;

/**
 * @member {Date} construction_start_date
 */
WellList.prototype['construction_start_date'] = undefined;

/**
 * @member {String} coordinate_acquisition_code
 */
WellList.prototype['coordinate_acquisition_code'] = undefined;

/**
 * @member {String} decommission_details
 */
WellList.prototype['decommission_details'] = undefined;

/**
 * @member {Date} decommission_end_date
 */
WellList.prototype['decommission_end_date'] = undefined;

/**
 * @member {String} decommission_method
 */
WellList.prototype['decommission_method'] = undefined;

/**
 * @member {String} decommission_reason
 */
WellList.prototype['decommission_reason'] = undefined;

/**
 * @member {Date} decommission_start_date
 */
WellList.prototype['decommission_start_date'] = undefined;

/**
 * @member {Number} development_hours
 */
WellList.prototype['development_hours'] = undefined;

/**
 * @member {String} development_method
 */
WellList.prototype['development_method'] = undefined;

/**
 * @member {String} development_notes
 */
WellList.prototype['development_notes'] = undefined;

/**
 * @member {String} diameter
 */
WellList.prototype['diameter'] = undefined;

/**
 * @member {Number} drawdown
 */
WellList.prototype['drawdown'] = undefined;

/**
 * @member {String} drilling_company
 */
WellList.prototype['drilling_company'] = undefined;

/**
 * @member {String} drilling_method
 */
WellList.prototype['drilling_method'] = undefined;

/**
 * @member {String} ems
 */
WellList.prototype['ems'] = undefined;

/**
 * @member {Number} filter_pack_from
 */
WellList.prototype['filter_pack_from'] = undefined;

/**
 * @member {String} filter_pack_material
 */
WellList.prototype['filter_pack_material'] = undefined;

/**
 * @member {String} filter_pack_material_size
 */
WellList.prototype['filter_pack_material_size'] = undefined;

/**
 * @member {Number} filter_pack_thickness
 */
WellList.prototype['filter_pack_thickness'] = undefined;

/**
 * @member {Number} filter_pack_to
 */
WellList.prototype['filter_pack_to'] = undefined;

/**
 * @member {Number} final_casing_stick_up
 */
WellList.prototype['final_casing_stick_up'] = undefined;

/**
 * @member {Number} finished_well_depth
 */
WellList.prototype['finished_well_depth'] = undefined;

/**
 * @member {Number} ground_elevation
 */
WellList.prototype['ground_elevation'] = undefined;

/**
 * @member {String} ground_elevation_method
 */
WellList.prototype['ground_elevation_method'] = undefined;

/**
 * @member {String} hydraulic_conductivity
 */
WellList.prototype['hydraulic_conductivity'] = undefined;

/**
 * @member {Boolean} hydro_fracturing_performed
 */
WellList.prototype['hydro_fracturing_performed'] = undefined;

/**
 * @member {Number} hydro_fracturing_yield_increase
 */
WellList.prototype['hydro_fracturing_yield_increase'] = undefined;

/**
 * @member {String} id_plate_attached_by
 */
WellList.prototype['id_plate_attached_by'] = undefined;

/**
 * @member {Number} identification_plate_number
 */
WellList.prototype['identification_plate_number'] = undefined;

/**
 * @member {String} intended_water_use
 */
WellList.prototype['intended_water_use'] = undefined;

/**
 * @member {String} land_district
 */
WellList.prototype['land_district'] = undefined;

/**
 * @member {Number} latitude
 */
WellList.prototype['latitude'] = undefined;

/**
 * @member {String} legal_block
 */
WellList.prototype['legal_block'] = undefined;

/**
 * @member {String} legal_district_lot
 */
WellList.prototype['legal_district_lot'] = undefined;

/**
 * @member {String} legal_lot
 */
WellList.prototype['legal_lot'] = undefined;

/**
 * @member {Number} legal_pid
 */
WellList.prototype['legal_pid'] = undefined;

/**
 * @member {String} legal_plan
 */
WellList.prototype['legal_plan'] = undefined;

/**
 * @member {String} legal_range
 */
WellList.prototype['legal_range'] = undefined;

/**
 * @member {String} legal_section
 */
WellList.prototype['legal_section'] = undefined;

/**
 * @member {String} legal_township
 */
WellList.prototype['legal_township'] = undefined;

/**
 * @member {String} licenced_status
 */
WellList.prototype['licenced_status'] = undefined;

/**
 * @member {Number} liner_diameter
 */
WellList.prototype['liner_diameter'] = undefined;

/**
 * @member {Number} liner_from
 */
WellList.prototype['liner_from'] = undefined;

/**
 * @member {String} liner_material
 */
WellList.prototype['liner_material'] = undefined;

/**
 * @member {Number} liner_thickness
 */
WellList.prototype['liner_thickness'] = undefined;

/**
 * @member {Number} liner_to
 */
WellList.prototype['liner_to'] = undefined;

/**
 * @member {Number} longitude
 */
WellList.prototype['longitude'] = undefined;

/**
 * @member {String} observation_well_number
 */
WellList.prototype['observation_well_number'] = undefined;

/**
 * @member {String} observation_well_status
 */
WellList.prototype['observation_well_status'] = undefined;

/**
 * @member {String} other_drilling_method
 */
WellList.prototype['other_drilling_method'] = undefined;

/**
 * @member {String} other_screen_bottom
 */
WellList.prototype['other_screen_bottom'] = undefined;

/**
 * @member {String} other_screen_material
 */
WellList.prototype['other_screen_material'] = undefined;

/**
 * @member {String} owner_full_name
 */
WellList.prototype['owner_full_name'] = undefined;

/**
 * @member {Number} recommended_pump_depth
 */
WellList.prototype['recommended_pump_depth'] = undefined;

/**
 * @member {Number} recommended_pump_rate
 */
WellList.prototype['recommended_pump_rate'] = undefined;

/**
 * @member {String} screen_bottom
 */
WellList.prototype['screen_bottom'] = undefined;

/**
 * @member {String} screen_information
 */
WellList.prototype['screen_information'] = undefined;

/**
 * @member {String} screen_intake_method
 */
WellList.prototype['screen_intake_method'] = undefined;

/**
 * @member {String} screen_material
 */
WellList.prototype['screen_material'] = undefined;

/**
 * @member {String} screen_opening
 */
WellList.prototype['screen_opening'] = undefined;

/**
 * @member {String} screen_type
 */
WellList.prototype['screen_type'] = undefined;

/**
 * @member {String} sealant_material
 */
WellList.prototype['sealant_material'] = undefined;

/**
 * @member {String} specific_storage
 */
WellList.prototype['specific_storage'] = undefined;

/**
 * @member {Number} specific_yield
 */
WellList.prototype['specific_yield'] = undefined;

/**
 * @member {Number} static_level_before_test
 */
WellList.prototype['static_level_before_test'] = undefined;

/**
 * @member {Number} static_water_level
 */
WellList.prototype['static_water_level'] = undefined;

/**
 * @member {Number} storativity
 */
WellList.prototype['storativity'] = undefined;

/**
 * @member {String} street_address
 */
WellList.prototype['street_address'] = undefined;

/**
 * @member {Number} surface_seal_depth
 */
WellList.prototype['surface_seal_depth'] = undefined;

/**
 * @member {Number} surface_seal_length
 */
WellList.prototype['surface_seal_length'] = undefined;

/**
 * @member {String} surface_seal_material
 */
WellList.prototype['surface_seal_material'] = undefined;

/**
 * @member {String} surface_seal_method
 */
WellList.prototype['surface_seal_method'] = undefined;

/**
 * @member {Number} surface_seal_thickness
 */
WellList.prototype['surface_seal_thickness'] = undefined;

/**
 * @member {Number} testing_duration
 */
WellList.prototype['testing_duration'] = undefined;

/**
 * @member {String} testing_method
 */
WellList.prototype['testing_method'] = undefined;

/**
 * @member {Number} total_depth_drilled
 */
WellList.prototype['total_depth_drilled'] = undefined;

/**
 * @member {Number} transmissivity
 */
WellList.prototype['transmissivity'] = undefined;

/**
 * @member {Number} utm_easting
 */
WellList.prototype['utm_easting'] = undefined;

/**
 * @member {Number} utm_northing
 */
WellList.prototype['utm_northing'] = undefined;

/**
 * @member {String} utm_zone_code
 */
WellList.prototype['utm_zone_code'] = undefined;

/**
 * @member {Array.<String>} water_quality_characteristics
 */
WellList.prototype['water_quality_characteristics'] = undefined;

/**
 * @member {String} water_quality_colour
 */
WellList.prototype['water_quality_colour'] = undefined;

/**
 * @member {String} water_quality_odour
 */
WellList.prototype['water_quality_odour'] = undefined;

/**
 * @member {String} water_supply_system_name
 */
WellList.prototype['water_supply_system_name'] = undefined;

/**
 * @member {String} water_supply_system_well_name
 */
WellList.prototype['water_supply_system_well_name'] = undefined;

/**
 * @member {String} well_cap_type
 */
WellList.prototype['well_cap_type'] = undefined;

/**
 * @member {String} well_class
 */
WellList.prototype['well_class'] = undefined;

/**
 * @member {Boolean} well_disinfected
 */
WellList.prototype['well_disinfected'] = undefined;

/**
 * @member {String} well_guid
 */
WellList.prototype['well_guid'] = undefined;

/**
 * @member {String} well_identification_plate_attached
 */
WellList.prototype['well_identification_plate_attached'] = undefined;

/**
 * @member {String} well_location_description
 */
WellList.prototype['well_location_description'] = undefined;

/**
 * @member {Boolean} well_orientation
 */
WellList.prototype['well_orientation'] = undefined;

/**
 * @member {String} well_status
 */
WellList.prototype['well_status'] = undefined;

/**
 * @member {String} well_subclass
 */
WellList.prototype['well_subclass'] = undefined;

/**
 * @member {Number} well_tag_number
 */
WellList.prototype['well_tag_number'] = undefined;

/**
 * @member {Number} well_yield
 */
WellList.prototype['well_yield'] = undefined;

/**
 * @member {String} well_yield_unit
 */
WellList.prototype['well_yield_unit'] = undefined;

/**
 * @member {Number} yield_estimation_duration
 */
WellList.prototype['yield_estimation_duration'] = undefined;

/**
 * @member {String} yield_estimation_method
 */
WellList.prototype['yield_estimation_method'] = undefined;

/**
 * @member {Number} yield_estimation_rate
 */
WellList.prototype['yield_estimation_rate'] = undefined;






export default WellList;

