/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GroundwaterWellsAquifersAndRegistryApi);
  }
}(this, function(expect, GroundwaterWellsAquifersAndRegistryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Aquifer', function() {
    it('should create an instance of Aquifer', function() {
      // uncomment below and update the code to test Aquifer
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be.a(GroundwaterWellsAquifersAndRegistryApi.Aquifer);
    });

    it('should have the property aquiferId (base name: "aquifer_id")', function() {
      // uncomment below and update the code to test the property aquiferId
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property aquiferName (base name: "aquifer_name")', function() {
      // uncomment below and update the code to test the property aquiferName
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property area (base name: "area")', function() {
      // uncomment below and update the code to test the property area
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property demand (base name: "demand")', function() {
      // uncomment below and update the code to test the property demand
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property demandDescription (base name: "demand_description")', function() {
      // uncomment below and update the code to test the property demandDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property knownWaterUse (base name: "known_water_use")', function() {
      // uncomment below and update the code to test the property knownWaterUse
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property knownWaterUseDescription (base name: "known_water_use_description")', function() {
      // uncomment below and update the code to test the property knownWaterUseDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property lithoStratographicUnit (base name: "litho_stratographic_unit")', function() {
      // uncomment below and update the code to test the property lithoStratographicUnit
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property locationDescription (base name: "location_description")', function() {
      // uncomment below and update the code to test the property locationDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property mappingYear (base name: "mapping_year")', function() {
      // uncomment below and update the code to test the property mappingYear
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property material (base name: "material")', function() {
      // uncomment below and update the code to test the property material
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property materialDescription (base name: "material_description")', function() {
      // uncomment below and update the code to test the property materialDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property productivity (base name: "productivity")', function() {
      // uncomment below and update the code to test the property productivity
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property productivityDescription (base name: "productivity_description")', function() {
      // uncomment below and update the code to test the property productivityDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property qualityConcern (base name: "quality_concern")', function() {
      // uncomment below and update the code to test the property qualityConcern
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property qualityConcernDescription (base name: "quality_concern_description")', function() {
      // uncomment below and update the code to test the property qualityConcernDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property subtype (base name: "subtype")', function() {
      // uncomment below and update the code to test the property subtype
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property subtypeDescription (base name: "subtype_description")', function() {
      // uncomment below and update the code to test the property subtypeDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property vulnerability (base name: "vulnerability")', function() {
      // uncomment below and update the code to test the property vulnerability
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

    it('should have the property vulnerabilityDescription (base name: "vulnerability_description")', function() {
      // uncomment below and update the code to test the property vulnerabilityDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.Aquifer();
      //expect(instance).to.be();
    });

  });

}));
