/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GroundwaterWellsAquifersAndRegistryApi);
  }
}(this, function(expect, GroundwaterWellsAquifersAndRegistryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WellDetail', function() {
    it('should create an instance of WellDetail', function() {
      // uncomment below and update the code to test WellDetail
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be.a(GroundwaterWellsAquifersAndRegistryApi.WellDetail);
    });

    it('should have the property alterationEndDate (base name: "alteration_end_date")', function() {
      // uncomment below and update the code to test the property alterationEndDate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property alternativeSpecsSubmitted (base name: "alternative_specs_submitted")', function() {
      // uncomment below and update the code to test the property alternativeSpecsSubmitted
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property analyticSolutionType (base name: "analytic_solution_type")', function() {
      // uncomment below and update the code to test the property analyticSolutionType
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property aquifer (base name: "aquifer")', function() {
      // uncomment below and update the code to test the property aquifer
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property aquiferVulnerabilityIndex (base name: "aquifer_vulnerability_index")', function() {
      // uncomment below and update the code to test the property aquiferVulnerabilityIndex
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property artesianFlow (base name: "artesian_flow")', function() {
      // uncomment below and update the code to test the property artesianFlow
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property artesianPressure (base name: "artesian_pressure")', function() {
      // uncomment below and update the code to test the property artesianPressure
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property backfillDepth (base name: "backfill_depth")', function() {
      // uncomment below and update the code to test the property backfillDepth
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property backfillMaterial (base name: "backfill_material")', function() {
      // uncomment below and update the code to test the property backfillMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property backfillType (base name: "backfill_type")', function() {
      // uncomment below and update the code to test the property backfillType
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property bcgsId (base name: "bcgs_id")', function() {
      // uncomment below and update the code to test the property bcgsId
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property bedrockDepth (base name: "bedrock_depth")', function() {
      // uncomment below and update the code to test the property bedrockDepth
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property boundaryEffect (base name: "boundary_effect")', function() {
      // uncomment below and update the code to test the property boundaryEffect
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property casingSet (base name: "casing_set")', function() {
      // uncomment below and update the code to test the property casingSet
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property companyOfPersonResponsible (base name: "company_of_person_responsible")', function() {
      // uncomment below and update the code to test the property companyOfPersonResponsible
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property constructionEndDate (base name: "construction_end_date")', function() {
      // uncomment below and update the code to test the property constructionEndDate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property constructionStartDate (base name: "construction_start_date")', function() {
      // uncomment below and update the code to test the property constructionStartDate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property coordinateAcquisitionCode (base name: "coordinate_acquisition_code")', function() {
      // uncomment below and update the code to test the property coordinateAcquisitionCode
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property decommissionDescriptionSet (base name: "decommission_description_set")', function() {
      // uncomment below and update the code to test the property decommissionDescriptionSet
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property decommissionDetails (base name: "decommission_details")', function() {
      // uncomment below and update the code to test the property decommissionDetails
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property decommissionEndDate (base name: "decommission_end_date")', function() {
      // uncomment below and update the code to test the property decommissionEndDate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property decommissionMethod (base name: "decommission_method")', function() {
      // uncomment below and update the code to test the property decommissionMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property decommissionReason (base name: "decommission_reason")', function() {
      // uncomment below and update the code to test the property decommissionReason
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property decommissionStartDate (base name: "decommission_start_date")', function() {
      // uncomment below and update the code to test the property decommissionStartDate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property developmentHours (base name: "development_hours")', function() {
      // uncomment below and update the code to test the property developmentHours
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property developmentMethod (base name: "development_method")', function() {
      // uncomment below and update the code to test the property developmentMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property developmentNotes (base name: "development_notes")', function() {
      // uncomment below and update the code to test the property developmentNotes
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property diameter (base name: "diameter")', function() {
      // uncomment below and update the code to test the property diameter
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property drawdown (base name: "drawdown")', function() {
      // uncomment below and update the code to test the property drawdown
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property drillingCompany (base name: "drilling_company")', function() {
      // uncomment below and update the code to test the property drillingCompany
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property drillingMethod (base name: "drilling_method")', function() {
      // uncomment below and update the code to test the property drillingMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property ems (base name: "ems")', function() {
      // uncomment below and update the code to test the property ems
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property filterPackFrom (base name: "filter_pack_from")', function() {
      // uncomment below and update the code to test the property filterPackFrom
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property filterPackMaterial (base name: "filter_pack_material")', function() {
      // uncomment below and update the code to test the property filterPackMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property filterPackMaterialSize (base name: "filter_pack_material_size")', function() {
      // uncomment below and update the code to test the property filterPackMaterialSize
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property filterPackThickness (base name: "filter_pack_thickness")', function() {
      // uncomment below and update the code to test the property filterPackThickness
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property filterPackTo (base name: "filter_pack_to")', function() {
      // uncomment below and update the code to test the property filterPackTo
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property finalCasingStickUp (base name: "final_casing_stick_up")', function() {
      // uncomment below and update the code to test the property finalCasingStickUp
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property finishedWellDepth (base name: "finished_well_depth")', function() {
      // uncomment below and update the code to test the property finishedWellDepth
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property groundElevation (base name: "ground_elevation")', function() {
      // uncomment below and update the code to test the property groundElevation
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property groundElevationMethod (base name: "ground_elevation_method")', function() {
      // uncomment below and update the code to test the property groundElevationMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property hydraulicConductivity (base name: "hydraulic_conductivity")', function() {
      // uncomment below and update the code to test the property hydraulicConductivity
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property hydroFracturingPerformed (base name: "hydro_fracturing_performed")', function() {
      // uncomment below and update the code to test the property hydroFracturingPerformed
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property hydroFracturingYieldIncrease (base name: "hydro_fracturing_yield_increase")', function() {
      // uncomment below and update the code to test the property hydroFracturingYieldIncrease
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property idPlateAttachedBy (base name: "id_plate_attached_by")', function() {
      // uncomment below and update the code to test the property idPlateAttachedBy
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property identificationPlateNumber (base name: "identification_plate_number")', function() {
      // uncomment below and update the code to test the property identificationPlateNumber
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property intendedWaterUse (base name: "intended_water_use")', function() {
      // uncomment below and update the code to test the property intendedWaterUse
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property landDistrict (base name: "land_district")', function() {
      // uncomment below and update the code to test the property landDistrict
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalBlock (base name: "legal_block")', function() {
      // uncomment below and update the code to test the property legalBlock
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalDistrictLot (base name: "legal_district_lot")', function() {
      // uncomment below and update the code to test the property legalDistrictLot
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalLot (base name: "legal_lot")', function() {
      // uncomment below and update the code to test the property legalLot
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalPid (base name: "legal_pid")', function() {
      // uncomment below and update the code to test the property legalPid
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalPlan (base name: "legal_plan")', function() {
      // uncomment below and update the code to test the property legalPlan
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalRange (base name: "legal_range")', function() {
      // uncomment below and update the code to test the property legalRange
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalSection (base name: "legal_section")', function() {
      // uncomment below and update the code to test the property legalSection
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property legalTownship (base name: "legal_township")', function() {
      // uncomment below and update the code to test the property legalTownship
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property licencedStatus (base name: "licenced_status")', function() {
      // uncomment below and update the code to test the property licencedStatus
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property linerDiameter (base name: "liner_diameter")', function() {
      // uncomment below and update the code to test the property linerDiameter
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property linerFrom (base name: "liner_from")', function() {
      // uncomment below and update the code to test the property linerFrom
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property linerMaterial (base name: "liner_material")', function() {
      // uncomment below and update the code to test the property linerMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property linerThickness (base name: "liner_thickness")', function() {
      // uncomment below and update the code to test the property linerThickness
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property linerTo (base name: "liner_to")', function() {
      // uncomment below and update the code to test the property linerTo
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property linerperforationSet (base name: "linerperforation_set")', function() {
      // uncomment below and update the code to test the property linerperforationSet
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property lithologydescriptionSet (base name: "lithologydescription_set")', function() {
      // uncomment below and update the code to test the property lithologydescriptionSet
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property observationWellNumber (base name: "observation_well_number")', function() {
      // uncomment below and update the code to test the property observationWellNumber
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property observationWellStatus (base name: "observation_well_status")', function() {
      // uncomment below and update the code to test the property observationWellStatus
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property otherDrillingMethod (base name: "other_drilling_method")', function() {
      // uncomment below and update the code to test the property otherDrillingMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property otherScreenBottom (base name: "other_screen_bottom")', function() {
      // uncomment below and update the code to test the property otherScreenBottom
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property otherScreenMaterial (base name: "other_screen_material")', function() {
      // uncomment below and update the code to test the property otherScreenMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property ownerFullName (base name: "owner_full_name")', function() {
      // uncomment below and update the code to test the property ownerFullName
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property personResponsible (base name: "person_responsible")', function() {
      // uncomment below and update the code to test the property personResponsible
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property recommendedPumpDepth (base name: "recommended_pump_depth")', function() {
      // uncomment below and update the code to test the property recommendedPumpDepth
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property recommendedPumpRate (base name: "recommended_pump_rate")', function() {
      // uncomment below and update the code to test the property recommendedPumpRate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenBottom (base name: "screen_bottom")', function() {
      // uncomment below and update the code to test the property screenBottom
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenInformation (base name: "screen_information")', function() {
      // uncomment below and update the code to test the property screenInformation
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenIntakeMethod (base name: "screen_intake_method")', function() {
      // uncomment below and update the code to test the property screenIntakeMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenMaterial (base name: "screen_material")', function() {
      // uncomment below and update the code to test the property screenMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenOpening (base name: "screen_opening")', function() {
      // uncomment below and update the code to test the property screenOpening
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenSet (base name: "screen_set")', function() {
      // uncomment below and update the code to test the property screenSet
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property screenType (base name: "screen_type")', function() {
      // uncomment below and update the code to test the property screenType
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property sealantMaterial (base name: "sealant_material")', function() {
      // uncomment below and update the code to test the property sealantMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property specificStorage (base name: "specific_storage")', function() {
      // uncomment below and update the code to test the property specificStorage
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property specificYield (base name: "specific_yield")', function() {
      // uncomment below and update the code to test the property specificYield
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property staticLevelBeforeTest (base name: "static_level_before_test")', function() {
      // uncomment below and update the code to test the property staticLevelBeforeTest
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property staticWaterLevel (base name: "static_water_level")', function() {
      // uncomment below and update the code to test the property staticWaterLevel
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property storativity (base name: "storativity")', function() {
      // uncomment below and update the code to test the property storativity
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property streetAddress (base name: "street_address")', function() {
      // uncomment below and update the code to test the property streetAddress
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property surfaceSealDepth (base name: "surface_seal_depth")', function() {
      // uncomment below and update the code to test the property surfaceSealDepth
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property surfaceSealLength (base name: "surface_seal_length")', function() {
      // uncomment below and update the code to test the property surfaceSealLength
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property surfaceSealMaterial (base name: "surface_seal_material")', function() {
      // uncomment below and update the code to test the property surfaceSealMaterial
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property surfaceSealMethod (base name: "surface_seal_method")', function() {
      // uncomment below and update the code to test the property surfaceSealMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property surfaceSealThickness (base name: "surface_seal_thickness")', function() {
      // uncomment below and update the code to test the property surfaceSealThickness
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property testingDuration (base name: "testing_duration")', function() {
      // uncomment below and update the code to test the property testingDuration
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property testingMethod (base name: "testing_method")', function() {
      // uncomment below and update the code to test the property testingMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property totalDepthDrilled (base name: "total_depth_drilled")', function() {
      // uncomment below and update the code to test the property totalDepthDrilled
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property transmissivity (base name: "transmissivity")', function() {
      // uncomment below and update the code to test the property transmissivity
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property utmEasting (base name: "utm_easting")', function() {
      // uncomment below and update the code to test the property utmEasting
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property utmNorthing (base name: "utm_northing")', function() {
      // uncomment below and update the code to test the property utmNorthing
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property utmZoneCode (base name: "utm_zone_code")', function() {
      // uncomment below and update the code to test the property utmZoneCode
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property waterQualityCharacteristics (base name: "water_quality_characteristics")', function() {
      // uncomment below and update the code to test the property waterQualityCharacteristics
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property waterQualityColour (base name: "water_quality_colour")', function() {
      // uncomment below and update the code to test the property waterQualityColour
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property waterQualityOdour (base name: "water_quality_odour")', function() {
      // uncomment below and update the code to test the property waterQualityOdour
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property waterSupplySystemName (base name: "water_supply_system_name")', function() {
      // uncomment below and update the code to test the property waterSupplySystemName
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property waterSupplySystemWellName (base name: "water_supply_system_well_name")', function() {
      // uncomment below and update the code to test the property waterSupplySystemWellName
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property well (base name: "well")', function() {
      // uncomment below and update the code to test the property well
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellCapType (base name: "well_cap_type")', function() {
      // uncomment below and update the code to test the property wellCapType
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellClass (base name: "well_class")', function() {
      // uncomment below and update the code to test the property wellClass
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellDisinfected (base name: "well_disinfected")', function() {
      // uncomment below and update the code to test the property wellDisinfected
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellGuid (base name: "well_guid")', function() {
      // uncomment below and update the code to test the property wellGuid
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellIdentificationPlateAttached (base name: "well_identification_plate_attached")', function() {
      // uncomment below and update the code to test the property wellIdentificationPlateAttached
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellLocationDescription (base name: "well_location_description")', function() {
      // uncomment below and update the code to test the property wellLocationDescription
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellOrientation (base name: "well_orientation")', function() {
      // uncomment below and update the code to test the property wellOrientation
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellStatus (base name: "well_status")', function() {
      // uncomment below and update the code to test the property wellStatus
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellSubclass (base name: "well_subclass")', function() {
      // uncomment below and update the code to test the property wellSubclass
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellTagNumber (base name: "well_tag_number")', function() {
      // uncomment below and update the code to test the property wellTagNumber
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellYield (base name: "well_yield")', function() {
      // uncomment below and update the code to test the property wellYield
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property wellYieldUnit (base name: "well_yield_unit")', function() {
      // uncomment below and update the code to test the property wellYieldUnit
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property yieldEstimationDuration (base name: "yield_estimation_duration")', function() {
      // uncomment below and update the code to test the property yieldEstimationDuration
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property yieldEstimationMethod (base name: "yield_estimation_method")', function() {
      // uncomment below and update the code to test the property yieldEstimationMethod
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

    it('should have the property yieldEstimationRate (base name: "yield_estimation_rate")', function() {
      // uncomment below and update the code to test the property yieldEstimationRate
      //var instance = new GroundwaterWellsAquifersAndRegistryApi.WellDetail();
      //expect(instance).to.be();
    });

  });

}));
