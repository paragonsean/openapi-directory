# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization import Organization
from openapi_server import util


class CityList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization: Organization=None):
        """CityList - a model defined in OpenAPI

        :param organization: The organization of this CityList.
        """
        self.openapi_types = {
            'organization': Organization
        }

        self.attribute_map = {
            'organization': 'organization'
        }

        self._organization = organization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CityList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CityList of this CityList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization(self):
        """Gets the organization of this CityList.


        :return: The organization of this CityList.
        :rtype: Organization
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this CityList.


        :param organization: The organization of this CityList.
        :type organization: Organization
        """
        if organization is None:
            raise ValueError("Invalid value for `organization`, must not be `None`")

        self._organization = organization
