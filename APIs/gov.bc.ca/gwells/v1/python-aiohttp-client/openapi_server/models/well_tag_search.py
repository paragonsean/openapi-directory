# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WellTagSearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, owner_full_name: str=None, well_tag_number: int=None):
        """WellTagSearch - a model defined in OpenAPI

        :param owner_full_name: The owner_full_name of this WellTagSearch.
        :param well_tag_number: The well_tag_number of this WellTagSearch.
        """
        self.openapi_types = {
            'owner_full_name': str,
            'well_tag_number': int
        }

        self.attribute_map = {
            'owner_full_name': 'owner_full_name',
            'well_tag_number': 'well_tag_number'
        }

        self._owner_full_name = owner_full_name
        self._well_tag_number = well_tag_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WellTagSearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WellTagSearch of this WellTagSearch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def owner_full_name(self):
        """Gets the owner_full_name of this WellTagSearch.


        :return: The owner_full_name of this WellTagSearch.
        :rtype: str
        """
        return self._owner_full_name

    @owner_full_name.setter
    def owner_full_name(self, owner_full_name):
        """Sets the owner_full_name of this WellTagSearch.


        :param owner_full_name: The owner_full_name of this WellTagSearch.
        :type owner_full_name: str
        """
        if owner_full_name is None:
            raise ValueError("Invalid value for `owner_full_name`, must not be `None`")
        if owner_full_name is not None and len(owner_full_name) > 200:
            raise ValueError("Invalid value for `owner_full_name`, length must be less than or equal to `200`")

        self._owner_full_name = owner_full_name

    @property
    def well_tag_number(self):
        """Gets the well_tag_number of this WellTagSearch.


        :return: The well_tag_number of this WellTagSearch.
        :rtype: int
        """
        return self._well_tag_number

    @well_tag_number.setter
    def well_tag_number(self, well_tag_number):
        """Sets the well_tag_number of this WellTagSearch.


        :param well_tag_number: The well_tag_number of this WellTagSearch.
        :type well_tag_number: int
        """

        self._well_tag_number = well_tag_number
