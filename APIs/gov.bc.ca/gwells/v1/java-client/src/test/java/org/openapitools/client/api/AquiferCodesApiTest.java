/*
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AquiferCodesDemandList200Response;
import org.openapitools.client.model.AquiferCodesMaterialsList200Response;
import org.openapitools.client.model.AquiferCodesProductivityList200Response;
import org.openapitools.client.model.AquiferCodesQualityConcernsList200Response;
import org.openapitools.client.model.AquiferCodesSubtypesList200Response;
import org.openapitools.client.model.AquiferCodesVulnerabilityList200Response;
import org.openapitools.client.model.AquiferCodesWaterUseList200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AquiferCodesApi
 */
@Disabled
public class AquiferCodesApiTest {

    private final AquiferCodesApi api = new AquiferCodesApi();

    /**
     * return a list of aquifer demand codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesDemandListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesDemandList200Response response = api.aquiferCodesDemandList(limit, offset);
        // TODO: test validations
    }

    /**
     * return a list of aquifer material codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesMaterialsListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesMaterialsList200Response response = api.aquiferCodesMaterialsList(limit, offset);
        // TODO: test validations
    }

    /**
     * return a list of aquifer productivity codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesProductivityListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesProductivityList200Response response = api.aquiferCodesProductivityList(limit, offset);
        // TODO: test validations
    }

    /**
     * return a list of quality concern codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesQualityConcernsListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesQualityConcernsList200Response response = api.aquiferCodesQualityConcernsList(limit, offset);
        // TODO: test validations
    }

    /**
     * return a list of aquifer subtype codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesSubtypesListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesSubtypesList200Response response = api.aquiferCodesSubtypesList(limit, offset);
        // TODO: test validations
    }

    /**
     * return a list of aquifer vulnerability codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesVulnerabilityListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesVulnerabilityList200Response response = api.aquiferCodesVulnerabilityList(limit, offset);
        // TODO: test validations
    }

    /**
     * return a list of water use codes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aquiferCodesWaterUseListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AquiferCodesWaterUseList200Response response = api.aquiferCodesWaterUseList(limit, offset);
        // TODO: test validations
    }

}
