/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPersonBasic.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPersonBasic::OAIPersonBasic(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPersonBasic::OAIPersonBasic() {
    this->initializeModel();
}

OAIPersonBasic::~OAIPersonBasic() {}

void OAIPersonBasic::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_person_guid_isSet = false;
    m_person_guid_isValid = false;
}

void OAIPersonBasic::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPersonBasic::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_person_guid_isValid = ::OpenAPI::fromJsonValue(m_person_guid, json[QString("person_guid")]);
    m_person_guid_isSet = !json[QString("person_guid")].isNull() && m_person_guid_isValid;
}

QString OAIPersonBasic::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPersonBasic::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_person_guid_isSet) {
        obj.insert(QString("person_guid"), ::OpenAPI::toJsonValue(m_person_guid));
    }
    return obj;
}

QString OAIPersonBasic::getName() const {
    return m_name;
}
void OAIPersonBasic::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPersonBasic::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPersonBasic::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPersonBasic::getPersonGuid() const {
    return m_person_guid;
}
void OAIPersonBasic::setPersonGuid(const QString &person_guid) {
    m_person_guid = person_guid;
    m_person_guid_isSet = true;
}

bool OAIPersonBasic::is_person_guid_Set() const{
    return m_person_guid_isSet;
}

bool OAIPersonBasic::is_person_guid_Valid() const{
    return m_person_guid_isValid;
}

bool OAIPersonBasic::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_person_guid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPersonBasic::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
