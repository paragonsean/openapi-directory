/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAquifer.h
 *
 * 
 */

#ifndef OAIAquifer_H
#define OAIAquifer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAquifer : public OAIObject {
public:
    OAIAquifer();
    OAIAquifer(QString json);
    ~OAIAquifer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAquiferId() const;
    void setAquiferId(const qint32 &aquifer_id);
    bool is_aquifer_id_Set() const;
    bool is_aquifer_id_Valid() const;

    QString getAquiferName() const;
    void setAquiferName(const QString &aquifer_name);
    bool is_aquifer_name_Set() const;
    bool is_aquifer_name_Valid() const;

    QString getArea() const;
    void setArea(const QString &area);
    bool is_area_Set() const;
    bool is_area_Valid() const;

    QString getDemand() const;
    void setDemand(const QString &demand);
    bool is_demand_Set() const;
    bool is_demand_Valid() const;

    QString getDemandDescription() const;
    void setDemandDescription(const QString &demand_description);
    bool is_demand_description_Set() const;
    bool is_demand_description_Valid() const;

    QString getKnownWaterUse() const;
    void setKnownWaterUse(const QString &known_water_use);
    bool is_known_water_use_Set() const;
    bool is_known_water_use_Valid() const;

    QString getKnownWaterUseDescription() const;
    void setKnownWaterUseDescription(const QString &known_water_use_description);
    bool is_known_water_use_description_Set() const;
    bool is_known_water_use_description_Valid() const;

    QString getLithoStratographicUnit() const;
    void setLithoStratographicUnit(const QString &litho_stratographic_unit);
    bool is_litho_stratographic_unit_Set() const;
    bool is_litho_stratographic_unit_Valid() const;

    QString getLocationDescription() const;
    void setLocationDescription(const QString &location_description);
    bool is_location_description_Set() const;
    bool is_location_description_Valid() const;

    qint32 getMappingYear() const;
    void setMappingYear(const qint32 &mapping_year);
    bool is_mapping_year_Set() const;
    bool is_mapping_year_Valid() const;

    QString getMaterial() const;
    void setMaterial(const QString &material);
    bool is_material_Set() const;
    bool is_material_Valid() const;

    QString getMaterialDescription() const;
    void setMaterialDescription(const QString &material_description);
    bool is_material_description_Set() const;
    bool is_material_description_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getProductivity() const;
    void setProductivity(const QString &productivity);
    bool is_productivity_Set() const;
    bool is_productivity_Valid() const;

    QString getProductivityDescription() const;
    void setProductivityDescription(const QString &productivity_description);
    bool is_productivity_description_Set() const;
    bool is_productivity_description_Valid() const;

    QString getQualityConcern() const;
    void setQualityConcern(const QString &quality_concern);
    bool is_quality_concern_Set() const;
    bool is_quality_concern_Valid() const;

    QString getQualityConcernDescription() const;
    void setQualityConcernDescription(const QString &quality_concern_description);
    bool is_quality_concern_description_Set() const;
    bool is_quality_concern_description_Valid() const;

    QString getSubtype() const;
    void setSubtype(const QString &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QString getSubtypeDescription() const;
    void setSubtypeDescription(const QString &subtype_description);
    bool is_subtype_description_Set() const;
    bool is_subtype_description_Valid() const;

    QString getVulnerability() const;
    void setVulnerability(const QString &vulnerability);
    bool is_vulnerability_Set() const;
    bool is_vulnerability_Valid() const;

    QString getVulnerabilityDescription() const;
    void setVulnerabilityDescription(const QString &vulnerability_description);
    bool is_vulnerability_description_Set() const;
    bool is_vulnerability_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_aquifer_id;
    bool m_aquifer_id_isSet;
    bool m_aquifer_id_isValid;

    QString m_aquifer_name;
    bool m_aquifer_name_isSet;
    bool m_aquifer_name_isValid;

    QString m_area;
    bool m_area_isSet;
    bool m_area_isValid;

    QString m_demand;
    bool m_demand_isSet;
    bool m_demand_isValid;

    QString m_demand_description;
    bool m_demand_description_isSet;
    bool m_demand_description_isValid;

    QString m_known_water_use;
    bool m_known_water_use_isSet;
    bool m_known_water_use_isValid;

    QString m_known_water_use_description;
    bool m_known_water_use_description_isSet;
    bool m_known_water_use_description_isValid;

    QString m_litho_stratographic_unit;
    bool m_litho_stratographic_unit_isSet;
    bool m_litho_stratographic_unit_isValid;

    QString m_location_description;
    bool m_location_description_isSet;
    bool m_location_description_isValid;

    qint32 m_mapping_year;
    bool m_mapping_year_isSet;
    bool m_mapping_year_isValid;

    QString m_material;
    bool m_material_isSet;
    bool m_material_isValid;

    QString m_material_description;
    bool m_material_description_isSet;
    bool m_material_description_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_productivity;
    bool m_productivity_isSet;
    bool m_productivity_isValid;

    QString m_productivity_description;
    bool m_productivity_description_isSet;
    bool m_productivity_description_isValid;

    QString m_quality_concern;
    bool m_quality_concern_isSet;
    bool m_quality_concern_isValid;

    QString m_quality_concern_description;
    bool m_quality_concern_description_isSet;
    bool m_quality_concern_description_isValid;

    QString m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QString m_subtype_description;
    bool m_subtype_description_isSet;
    bool m_subtype_description_isValid;

    QString m_vulnerability;
    bool m_vulnerability_isSet;
    bool m_vulnerability_isValid;

    QString m_vulnerability_description;
    bool m_vulnerability_description_isSet;
    bool m_vulnerability_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAquifer)

#endif // OAIAquifer_H
