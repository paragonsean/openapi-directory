/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISurvey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISurvey::OAISurvey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISurvey::OAISurvey() {
    this->initializeModel();
}

OAISurvey::~OAISurvey() {}

void OAISurvey::initializeModel() {

    m_survey_guid_isSet = false;
    m_survey_guid_isValid = false;

    m_survey_introduction_text_isSet = false;
    m_survey_introduction_text_isValid = false;

    m_survey_link_isSet = false;
    m_survey_link_isValid = false;

    m_survey_page_isSet = false;
    m_survey_page_isValid = false;
}

void OAISurvey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISurvey::fromJsonObject(QJsonObject json) {

    m_survey_guid_isValid = ::OpenAPI::fromJsonValue(m_survey_guid, json[QString("survey_guid")]);
    m_survey_guid_isSet = !json[QString("survey_guid")].isNull() && m_survey_guid_isValid;

    m_survey_introduction_text_isValid = ::OpenAPI::fromJsonValue(m_survey_introduction_text, json[QString("survey_introduction_text")]);
    m_survey_introduction_text_isSet = !json[QString("survey_introduction_text")].isNull() && m_survey_introduction_text_isValid;

    m_survey_link_isValid = ::OpenAPI::fromJsonValue(m_survey_link, json[QString("survey_link")]);
    m_survey_link_isSet = !json[QString("survey_link")].isNull() && m_survey_link_isValid;

    m_survey_page_isValid = ::OpenAPI::fromJsonValue(m_survey_page, json[QString("survey_page")]);
    m_survey_page_isSet = !json[QString("survey_page")].isNull() && m_survey_page_isValid;
}

QString OAISurvey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISurvey::asJsonObject() const {
    QJsonObject obj;
    if (m_survey_guid_isSet) {
        obj.insert(QString("survey_guid"), ::OpenAPI::toJsonValue(m_survey_guid));
    }
    if (m_survey_introduction_text_isSet) {
        obj.insert(QString("survey_introduction_text"), ::OpenAPI::toJsonValue(m_survey_introduction_text));
    }
    if (m_survey_link_isSet) {
        obj.insert(QString("survey_link"), ::OpenAPI::toJsonValue(m_survey_link));
    }
    if (m_survey_page_isSet) {
        obj.insert(QString("survey_page"), ::OpenAPI::toJsonValue(m_survey_page));
    }
    return obj;
}

QString OAISurvey::getSurveyGuid() const {
    return m_survey_guid;
}
void OAISurvey::setSurveyGuid(const QString &survey_guid) {
    m_survey_guid = survey_guid;
    m_survey_guid_isSet = true;
}

bool OAISurvey::is_survey_guid_Set() const{
    return m_survey_guid_isSet;
}

bool OAISurvey::is_survey_guid_Valid() const{
    return m_survey_guid_isValid;
}

QString OAISurvey::getSurveyIntroductionText() const {
    return m_survey_introduction_text;
}
void OAISurvey::setSurveyIntroductionText(const QString &survey_introduction_text) {
    m_survey_introduction_text = survey_introduction_text;
    m_survey_introduction_text_isSet = true;
}

bool OAISurvey::is_survey_introduction_text_Set() const{
    return m_survey_introduction_text_isSet;
}

bool OAISurvey::is_survey_introduction_text_Valid() const{
    return m_survey_introduction_text_isValid;
}

QString OAISurvey::getSurveyLink() const {
    return m_survey_link;
}
void OAISurvey::setSurveyLink(const QString &survey_link) {
    m_survey_link = survey_link;
    m_survey_link_isSet = true;
}

bool OAISurvey::is_survey_link_Set() const{
    return m_survey_link_isSet;
}

bool OAISurvey::is_survey_link_Valid() const{
    return m_survey_link_isValid;
}

QString OAISurvey::getSurveyPage() const {
    return m_survey_page;
}
void OAISurvey::setSurveyPage(const QString &survey_page) {
    m_survey_page = survey_page;
    m_survey_page_isSet = true;
}

bool OAISurvey::is_survey_page_Set() const{
    return m_survey_page_isSet;
}

bool OAISurvey::is_survey_page_Valid() const{
    return m_survey_page_isValid;
}

bool OAISurvey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_survey_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_survey_introduction_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_survey_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_survey_page_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISurvey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
