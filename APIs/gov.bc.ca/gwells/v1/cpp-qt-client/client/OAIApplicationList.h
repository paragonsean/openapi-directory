/**
 * Groundwater Wells, Aquifers and Registry API
 * The groundwater wells, aquifers and registry API contains information related to groundwater wells and aquifers as well as a register of qualified well drillers and well pump installers registered to operate in B.C.
 *
 * The version of the OpenAPI document: v1
 * Contact: groundwater@gov.bc.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationList.h
 *
 * 
 */

#ifndef OAIApplicationList_H
#define OAIApplicationList_H

#include <QJsonObject>

#include "OAIApplicationStatusCode.h"
#include "OAIQualification.h"
#include "OAISubactivity.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationStatusCode;
class OAIQualification;
class OAISubactivity;

class OAIApplicationList : public OAIObject {
public:
    OAIApplicationList();
    OAIApplicationList(QString json);
    ~OAIApplicationList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertAuthority() const;
    void setCertAuthority(const QString &cert_authority);
    bool is_cert_authority_Set() const;
    bool is_cert_authority_Valid() const;

    QString getCertificate() const;
    void setCertificate(const QString &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    OAIApplicationStatusCode getCurrentStatus() const;
    void setCurrentStatus(const OAIApplicationStatusCode &current_status);
    bool is_current_status_Set() const;
    bool is_current_status_Valid() const;

    QString getDisplayStatus() const;
    void setDisplayStatus(const QString &display_status);
    bool is_display_status_Set() const;
    bool is_display_status_Valid() const;

    QList<OAIQualification> getQualifications() const;
    void setQualifications(const QList<OAIQualification> &qualifications);
    bool is_qualifications_Set() const;
    bool is_qualifications_Valid() const;

    QDate getRemovalDate() const;
    void setRemovalDate(const QDate &removal_date);
    bool is_removal_date_Set() const;
    bool is_removal_date_Valid() const;

    OAISubactivity getSubactivity() const;
    void setSubactivity(const OAISubactivity &subactivity);
    bool is_subactivity_Set() const;
    bool is_subactivity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cert_authority;
    bool m_cert_authority_isSet;
    bool m_cert_authority_isValid;

    QString m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    OAIApplicationStatusCode m_current_status;
    bool m_current_status_isSet;
    bool m_current_status_isValid;

    QString m_display_status;
    bool m_display_status_isSet;
    bool m_display_status_isValid;

    QList<OAIQualification> m_qualifications;
    bool m_qualifications_isSet;
    bool m_qualifications_isValid;

    QDate m_removal_date;
    bool m_removal_date_isSet;
    bool m_removal_date_isValid;

    OAISubactivity m_subactivity;
    bool m_subactivity_isSet;
    bool m_subactivity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationList)

#endif // OAIApplicationList_H
