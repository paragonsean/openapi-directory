/**
 * GeoMark Web Service REST API
 * The Geomark Web Service allows you to create and share geographic areas of interest over the web in a variety of formats and coordinate systems. This service is especially helpful when you need to share an area of interest with people who require that the data be in a different format, or they use different mapping software.   Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs/tree/master/geomark) in other API console viewers.
 *
 * The version of the OpenAPI document: 4.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BoundingBoxApi from './api/BoundingBoxApi';
import CreateApi from './api/CreateApi';
import FeatureApi from './api/FeatureApi';
import InfoApi from './api/InfoApi';
import PartsApi from './api/PartsApi';
import PointApi from './api/PointApi';


/**
* The Geomark Web Service allows you to create and share geographic areas of interest over the web in a variety of formats and coordinate systems. This service is especially helpful when you need to share an area of interest with people who require that the data be in a different format, or they use different mapping software.   Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs/tree/master/geomark) in other API console viewers..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GeoMarkWebServiceRestApi = require('index'); // See note below*.
* var xxxSvc = new GeoMarkWebServiceRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GeoMarkWebServiceRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GeoMarkWebServiceRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GeoMarkWebServiceRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4.1.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
    * The BoundingBoxApi service constructor.
    * @property {module:api/BoundingBoxApi}
    */
    BoundingBoxApi,

    /**
    * The CreateApi service constructor.
    * @property {module:api/CreateApi}
    */
    CreateApi,

    /**
    * The FeatureApi service constructor.
    * @property {module:api/FeatureApi}
    */
    FeatureApi,

    /**
    * The InfoApi service constructor.
    * @property {module:api/InfoApi}
    */
    InfoApi,

    /**
    * The PartsApi service constructor.
    * @property {module:api/PartsApi}
    */
    PartsApi,

    /**
    * The PointApi service constructor.
    * @property {module:api/PointApi}
    */
    PointApi
};
