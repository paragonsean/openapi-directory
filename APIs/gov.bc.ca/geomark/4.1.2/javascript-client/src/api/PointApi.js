/**
 * GeoMark Web Service REST API
 * The Geomark Web Service allows you to create and share geographic areas of interest over the web in a variety of formats and coordinate systems. This service is especially helpful when you need to share an area of interest with people who require that the data be in a different format, or they use different mapping software.   Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs/tree/master/geomark) in other API console viewers.
 *
 * The version of the OpenAPI document: 4.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Point service.
* @module api/PointApi
* @version 4.1.2
*/
export default class PointApi {

    /**
    * Constructs a new PointApi. 
    * @alias module:api/PointApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the geomarksGeomarkIdPointFileFormatExtensionGet operation.
     * @callback module:api/PointApi~geomarksGeomarkIdPointFileFormatExtensionGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a single spatial point representative of the geomark.
     * The geomark point resource returns a single spatial feature with a single Point and the geomark attribution.  The point geometry will be created from the first geometry part of the Geomark. Point geomarks will return the first Point part in the geomark.  LineString geomarks will return the first coordinate of the first LineString part in the geomark. Polygon geomarks will return the centroid or another point inside the first Polygon part in the geomark. The geometry and attribution can be downloaded as a spatial download file format in a supported coordinate system. The download files can then be used in a desktop GIS application (e.g. ArcMap), Google Earth or a web mapping application.
     * @param {String} geomarkId The unique identifier for the geomark.
     * @param {module:model/String} fileFormatExtension The file format name extension used to represent the geomark download.
     * @param {Object} opts Optional parameters
     * @param {module:model/Number} [srid = 4326)] The srid of the coordinate system the geometry should be converted to.
     * @param {module:api/PointApi~geomarksGeomarkIdPointFileFormatExtensionGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    geomarksGeomarkIdPointFileFormatExtensionGet(geomarkId, fileFormatExtension, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'geomarkId' is set
      if (geomarkId === undefined || geomarkId === null) {
        throw new Error("Missing the required parameter 'geomarkId' when calling geomarksGeomarkIdPointFileFormatExtensionGet");
      }
      // verify the required parameter 'fileFormatExtension' is set
      if (fileFormatExtension === undefined || fileFormatExtension === null) {
        throw new Error("Missing the required parameter 'fileFormatExtension' when calling geomarksGeomarkIdPointFileFormatExtensionGet");
      }

      let pathParams = {
        'geomarkId': geomarkId,
        'fileFormatExtension': fileFormatExtension
      };
      let queryParams = {
        'srid': opts['srid']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/geomarks/{geomarkId}/point.{fileFormatExtension}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
