/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AllowedActions;
import org.openapitools.client.model.EnabledOrganizations;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ActionsEnterprisePermissions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:07:55.498988-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActionsEnterprisePermissions {
  public static final String SERIALIZED_NAME_ALLOWED_ACTIONS = "allowed_actions";
  @SerializedName(SERIALIZED_NAME_ALLOWED_ACTIONS)
  private AllowedActions allowedActions;

  public static final String SERIALIZED_NAME_ENABLED_ORGANIZATIONS = "enabled_organizations";
  @SerializedName(SERIALIZED_NAME_ENABLED_ORGANIZATIONS)
  private EnabledOrganizations enabledOrganizations;

  public static final String SERIALIZED_NAME_SELECTED_ACTIONS_URL = "selected_actions_url";
  @SerializedName(SERIALIZED_NAME_SELECTED_ACTIONS_URL)
  private String selectedActionsUrl;

  public static final String SERIALIZED_NAME_SELECTED_ORGANIZATIONS_URL = "selected_organizations_url";
  @SerializedName(SERIALIZED_NAME_SELECTED_ORGANIZATIONS_URL)
  private String selectedOrganizationsUrl;

  public ActionsEnterprisePermissions() {
  }

  public ActionsEnterprisePermissions allowedActions(AllowedActions allowedActions) {
    this.allowedActions = allowedActions;
    return this;
  }

  /**
   * Get allowedActions
   * @return allowedActions
   */
  @javax.annotation.Nullable
  public AllowedActions getAllowedActions() {
    return allowedActions;
  }

  public void setAllowedActions(AllowedActions allowedActions) {
    this.allowedActions = allowedActions;
  }


  public ActionsEnterprisePermissions enabledOrganizations(EnabledOrganizations enabledOrganizations) {
    this.enabledOrganizations = enabledOrganizations;
    return this;
  }

  /**
   * Get enabledOrganizations
   * @return enabledOrganizations
   */
  @javax.annotation.Nonnull
  public EnabledOrganizations getEnabledOrganizations() {
    return enabledOrganizations;
  }

  public void setEnabledOrganizations(EnabledOrganizations enabledOrganizations) {
    this.enabledOrganizations = enabledOrganizations;
  }


  public ActionsEnterprisePermissions selectedActionsUrl(String selectedActionsUrl) {
    this.selectedActionsUrl = selectedActionsUrl;
    return this;
  }

  /**
   * The API URL to use to get or set the actions that are allowed to run, when &#x60;allowed_actions&#x60; is set to &#x60;selected&#x60;.
   * @return selectedActionsUrl
   */
  @javax.annotation.Nullable
  public String getSelectedActionsUrl() {
    return selectedActionsUrl;
  }

  public void setSelectedActionsUrl(String selectedActionsUrl) {
    this.selectedActionsUrl = selectedActionsUrl;
  }


  public ActionsEnterprisePermissions selectedOrganizationsUrl(String selectedOrganizationsUrl) {
    this.selectedOrganizationsUrl = selectedOrganizationsUrl;
    return this;
  }

  /**
   * The API URL to use to get or set the selected organizations that are allowed to run GitHub Actions, when &#x60;enabled_organizations&#x60; is set to &#x60;selected&#x60;.
   * @return selectedOrganizationsUrl
   */
  @javax.annotation.Nullable
  public String getSelectedOrganizationsUrl() {
    return selectedOrganizationsUrl;
  }

  public void setSelectedOrganizationsUrl(String selectedOrganizationsUrl) {
    this.selectedOrganizationsUrl = selectedOrganizationsUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionsEnterprisePermissions actionsEnterprisePermissions = (ActionsEnterprisePermissions) o;
    return Objects.equals(this.allowedActions, actionsEnterprisePermissions.allowedActions) &&
        Objects.equals(this.enabledOrganizations, actionsEnterprisePermissions.enabledOrganizations) &&
        Objects.equals(this.selectedActionsUrl, actionsEnterprisePermissions.selectedActionsUrl) &&
        Objects.equals(this.selectedOrganizationsUrl, actionsEnterprisePermissions.selectedOrganizationsUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedActions, enabledOrganizations, selectedActionsUrl, selectedOrganizationsUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionsEnterprisePermissions {\n");
    sb.append("    allowedActions: ").append(toIndentedString(allowedActions)).append("\n");
    sb.append("    enabledOrganizations: ").append(toIndentedString(enabledOrganizations)).append("\n");
    sb.append("    selectedActionsUrl: ").append(toIndentedString(selectedActionsUrl)).append("\n");
    sb.append("    selectedOrganizationsUrl: ").append(toIndentedString(selectedOrganizationsUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowed_actions");
    openapiFields.add("enabled_organizations");
    openapiFields.add("selected_actions_url");
    openapiFields.add("selected_organizations_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("enabled_organizations");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActionsEnterprisePermissions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActionsEnterprisePermissions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActionsEnterprisePermissions is not found in the empty JSON string", ActionsEnterprisePermissions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActionsEnterprisePermissions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActionsEnterprisePermissions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ActionsEnterprisePermissions.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `allowed_actions`
      if (jsonObj.get("allowed_actions") != null && !jsonObj.get("allowed_actions").isJsonNull()) {
        AllowedActions.validateJsonElement(jsonObj.get("allowed_actions"));
      }
      // validate the required field `enabled_organizations`
      EnabledOrganizations.validateJsonElement(jsonObj.get("enabled_organizations"));
      if ((jsonObj.get("selected_actions_url") != null && !jsonObj.get("selected_actions_url").isJsonNull()) && !jsonObj.get("selected_actions_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selected_actions_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selected_actions_url").toString()));
      }
      if ((jsonObj.get("selected_organizations_url") != null && !jsonObj.get("selected_organizations_url").isJsonNull()) && !jsonObj.get("selected_organizations_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selected_organizations_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selected_organizations_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActionsEnterprisePermissions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActionsEnterprisePermissions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActionsEnterprisePermissions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActionsEnterprisePermissions.class));

       return (TypeAdapter<T>) new TypeAdapter<ActionsEnterprisePermissions>() {
           @Override
           public void write(JsonWriter out, ActionsEnterprisePermissions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActionsEnterprisePermissions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActionsEnterprisePermissions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActionsEnterprisePermissions
   * @throws IOException if the JSON string is invalid with respect to ActionsEnterprisePermissions
   */
  public static ActionsEnterprisePermissions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActionsEnterprisePermissions.class);
  }

  /**
   * Convert an instance of ActionsEnterprisePermissions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

