/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReposCreateDeploymentStatusRequest model module.
 * @module model/ReposCreateDeploymentStatusRequest
 * @version 1.1.4
 */
class ReposCreateDeploymentStatusRequest {
    /**
     * Constructs a new <code>ReposCreateDeploymentStatusRequest</code>.
     * @alias module:model/ReposCreateDeploymentStatusRequest
     * @param state {module:model/ReposCreateDeploymentStatusRequest.StateEnum} The state of the status. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.
     */
    constructor(state) { 
        
        ReposCreateDeploymentStatusRequest.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['description'] = '';
        obj['environment_url'] = '';
        obj['log_url'] = '';
        obj['state'] = state;
        obj['target_url'] = '';
    }

    /**
     * Constructs a <code>ReposCreateDeploymentStatusRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReposCreateDeploymentStatusRequest} obj Optional instance to populate.
     * @return {module:model/ReposCreateDeploymentStatusRequest} The populated <code>ReposCreateDeploymentStatusRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReposCreateDeploymentStatusRequest();

            if (data.hasOwnProperty('auto_inactive')) {
                obj['auto_inactive'] = ApiClient.convertToType(data['auto_inactive'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('environment_url')) {
                obj['environment_url'] = ApiClient.convertToType(data['environment_url'], 'String');
            }
            if (data.hasOwnProperty('log_url')) {
                obj['log_url'] = ApiClient.convertToType(data['log_url'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('target_url')) {
                obj['target_url'] = ApiClient.convertToType(data['target_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReposCreateDeploymentStatusRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReposCreateDeploymentStatusRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReposCreateDeploymentStatusRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        // ensure the json data is a string
        if (data['environment_url'] && !(typeof data['environment_url'] === 'string' || data['environment_url'] instanceof String)) {
            throw new Error("Expected the field `environment_url` to be a primitive type in the JSON string but got " + data['environment_url']);
        }
        // ensure the json data is a string
        if (data['log_url'] && !(typeof data['log_url'] === 'string' || data['log_url'] instanceof String)) {
            throw new Error("Expected the field `log_url` to be a primitive type in the JSON string but got " + data['log_url']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['target_url'] && !(typeof data['target_url'] === 'string' || data['target_url'] instanceof String)) {
            throw new Error("Expected the field `target_url` to be a primitive type in the JSON string but got " + data['target_url']);
        }

        return true;
    }


}

ReposCreateDeploymentStatusRequest.RequiredProperties = ["state"];

/**
 * Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type.
 * @member {Boolean} auto_inactive
 */
ReposCreateDeploymentStatusRequest.prototype['auto_inactive'] = undefined;

/**
 * A short description of the status. The maximum description length is 140 characters.
 * @member {String} description
 * @default ''
 */
ReposCreateDeploymentStatusRequest.prototype['description'] = '';

/**
 * Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`.
 * @member {module:model/ReposCreateDeploymentStatusRequest.EnvironmentEnum} environment
 */
ReposCreateDeploymentStatusRequest.prototype['environment'] = undefined;

/**
 * Sets the URL for accessing your environment. Default: `\"\"`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type.
 * @member {String} environment_url
 * @default ''
 */
ReposCreateDeploymentStatusRequest.prototype['environment_url'] = '';

/**
 * The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type.
 * @member {String} log_url
 * @default ''
 */
ReposCreateDeploymentStatusRequest.prototype['log_url'] = '';

/**
 * The state of the status. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.
 * @member {module:model/ReposCreateDeploymentStatusRequest.StateEnum} state
 */
ReposCreateDeploymentStatusRequest.prototype['state'] = undefined;

/**
 * The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.
 * @member {String} target_url
 * @default ''
 */
ReposCreateDeploymentStatusRequest.prototype['target_url'] = '';





/**
 * Allowed values for the <code>environment</code> property.
 * @enum {String}
 * @readonly
 */
ReposCreateDeploymentStatusRequest['EnvironmentEnum'] = {

    /**
     * value: "production"
     * @const
     */
    "production": "production",

    /**
     * value: "staging"
     * @const
     */
    "staging": "staging",

    /**
     * value: "qa"
     * @const
     */
    "qa": "qa"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ReposCreateDeploymentStatusRequest['StateEnum'] = {

    /**
     * value: "error"
     * @const
     */
    "error": "error",

    /**
     * value: "failure"
     * @const
     */
    "failure": "failure",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "in_progress"
     * @const
     */
    "in_progress": "in_progress",

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "success"
     * @const
     */
    "success": "success"
};



export default ReposCreateDeploymentStatusRequest;

