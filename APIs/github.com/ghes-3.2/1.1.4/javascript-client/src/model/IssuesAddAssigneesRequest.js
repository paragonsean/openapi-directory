/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssuesAddAssigneesRequest model module.
 * @module model/IssuesAddAssigneesRequest
 * @version 1.1.4
 */
class IssuesAddAssigneesRequest {
    /**
     * Constructs a new <code>IssuesAddAssigneesRequest</code>.
     * @alias module:model/IssuesAddAssigneesRequest
     */
    constructor() { 
        
        IssuesAddAssigneesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssuesAddAssigneesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuesAddAssigneesRequest} obj Optional instance to populate.
     * @return {module:model/IssuesAddAssigneesRequest} The populated <code>IssuesAddAssigneesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuesAddAssigneesRequest();

            if (data.hasOwnProperty('assignees')) {
                obj['assignees'] = ApiClient.convertToType(data['assignees'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuesAddAssigneesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuesAddAssigneesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['assignees'])) {
            throw new Error("Expected the field `assignees` to be an array in the JSON data but got " + data['assignees']);
        }

        return true;
    }


}



/**
 * Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._
 * @member {Array.<String>} assignees
 */
IssuesAddAssigneesRequest.prototype['assignees'] = undefined;






export default IssuesAddAssigneesRequest;

