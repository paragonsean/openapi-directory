/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Root model module.
 * @module model/Root
 * @version 1.1.4
 */
class Root {
    /**
     * Constructs a new <code>Root</code>.
     * @alias module:model/Root
     * @param authorizationsUrl {String} 
     * @param codeSearchUrl {String} 
     * @param commitSearchUrl {String} 
     * @param currentUserAuthorizationsHtmlUrl {String} 
     * @param currentUserRepositoriesUrl {String} 
     * @param currentUserUrl {String} 
     * @param emailsUrl {String} 
     * @param emojisUrl {String} 
     * @param eventsUrl {String} 
     * @param feedsUrl {String} 
     * @param followersUrl {String} 
     * @param followingUrl {String} 
     * @param gistsUrl {String} 
     * @param hubUrl {String} 
     * @param issueSearchUrl {String} 
     * @param issuesUrl {String} 
     * @param keysUrl {String} 
     * @param labelSearchUrl {String} 
     * @param notificationsUrl {String} 
     * @param organizationRepositoriesUrl {String} 
     * @param organizationTeamsUrl {String} 
     * @param organizationUrl {String} 
     * @param publicGistsUrl {String} 
     * @param rateLimitUrl {String} 
     * @param repositorySearchUrl {String} 
     * @param repositoryUrl {String} 
     * @param starredGistsUrl {String} 
     * @param starredUrl {String} 
     * @param userOrganizationsUrl {String} 
     * @param userRepositoriesUrl {String} 
     * @param userSearchUrl {String} 
     * @param userUrl {String} 
     */
    constructor(authorizationsUrl, codeSearchUrl, commitSearchUrl, currentUserAuthorizationsHtmlUrl, currentUserRepositoriesUrl, currentUserUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl, keysUrl, labelSearchUrl, notificationsUrl, organizationRepositoriesUrl, organizationTeamsUrl, organizationUrl, publicGistsUrl, rateLimitUrl, repositorySearchUrl, repositoryUrl, starredGistsUrl, starredUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl, userUrl) { 
        
        Root.initialize(this, authorizationsUrl, codeSearchUrl, commitSearchUrl, currentUserAuthorizationsHtmlUrl, currentUserRepositoriesUrl, currentUserUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl, keysUrl, labelSearchUrl, notificationsUrl, organizationRepositoriesUrl, organizationTeamsUrl, organizationUrl, publicGistsUrl, rateLimitUrl, repositorySearchUrl, repositoryUrl, starredGistsUrl, starredUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl, userUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authorizationsUrl, codeSearchUrl, commitSearchUrl, currentUserAuthorizationsHtmlUrl, currentUserRepositoriesUrl, currentUserUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl, keysUrl, labelSearchUrl, notificationsUrl, organizationRepositoriesUrl, organizationTeamsUrl, organizationUrl, publicGistsUrl, rateLimitUrl, repositorySearchUrl, repositoryUrl, starredGistsUrl, starredUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl, userUrl) { 
        obj['authorizations_url'] = authorizationsUrl;
        obj['code_search_url'] = codeSearchUrl;
        obj['commit_search_url'] = commitSearchUrl;
        obj['current_user_authorizations_html_url'] = currentUserAuthorizationsHtmlUrl;
        obj['current_user_repositories_url'] = currentUserRepositoriesUrl;
        obj['current_user_url'] = currentUserUrl;
        obj['emails_url'] = emailsUrl;
        obj['emojis_url'] = emojisUrl;
        obj['events_url'] = eventsUrl;
        obj['feeds_url'] = feedsUrl;
        obj['followers_url'] = followersUrl;
        obj['following_url'] = followingUrl;
        obj['gists_url'] = gistsUrl;
        obj['hub_url'] = hubUrl;
        obj['issue_search_url'] = issueSearchUrl;
        obj['issues_url'] = issuesUrl;
        obj['keys_url'] = keysUrl;
        obj['label_search_url'] = labelSearchUrl;
        obj['notifications_url'] = notificationsUrl;
        obj['organization_repositories_url'] = organizationRepositoriesUrl;
        obj['organization_teams_url'] = organizationTeamsUrl;
        obj['organization_url'] = organizationUrl;
        obj['public_gists_url'] = publicGistsUrl;
        obj['rate_limit_url'] = rateLimitUrl;
        obj['repository_search_url'] = repositorySearchUrl;
        obj['repository_url'] = repositoryUrl;
        obj['starred_gists_url'] = starredGistsUrl;
        obj['starred_url'] = starredUrl;
        obj['user_organizations_url'] = userOrganizationsUrl;
        obj['user_repositories_url'] = userRepositoriesUrl;
        obj['user_search_url'] = userSearchUrl;
        obj['user_url'] = userUrl;
    }

    /**
     * Constructs a <code>Root</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Root} obj Optional instance to populate.
     * @return {module:model/Root} The populated <code>Root</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Root();

            if (data.hasOwnProperty('authorizations_url')) {
                obj['authorizations_url'] = ApiClient.convertToType(data['authorizations_url'], 'String');
            }
            if (data.hasOwnProperty('code_search_url')) {
                obj['code_search_url'] = ApiClient.convertToType(data['code_search_url'], 'String');
            }
            if (data.hasOwnProperty('commit_search_url')) {
                obj['commit_search_url'] = ApiClient.convertToType(data['commit_search_url'], 'String');
            }
            if (data.hasOwnProperty('current_user_authorizations_html_url')) {
                obj['current_user_authorizations_html_url'] = ApiClient.convertToType(data['current_user_authorizations_html_url'], 'String');
            }
            if (data.hasOwnProperty('current_user_repositories_url')) {
                obj['current_user_repositories_url'] = ApiClient.convertToType(data['current_user_repositories_url'], 'String');
            }
            if (data.hasOwnProperty('current_user_url')) {
                obj['current_user_url'] = ApiClient.convertToType(data['current_user_url'], 'String');
            }
            if (data.hasOwnProperty('emails_url')) {
                obj['emails_url'] = ApiClient.convertToType(data['emails_url'], 'String');
            }
            if (data.hasOwnProperty('emojis_url')) {
                obj['emojis_url'] = ApiClient.convertToType(data['emojis_url'], 'String');
            }
            if (data.hasOwnProperty('events_url')) {
                obj['events_url'] = ApiClient.convertToType(data['events_url'], 'String');
            }
            if (data.hasOwnProperty('feeds_url')) {
                obj['feeds_url'] = ApiClient.convertToType(data['feeds_url'], 'String');
            }
            if (data.hasOwnProperty('followers_url')) {
                obj['followers_url'] = ApiClient.convertToType(data['followers_url'], 'String');
            }
            if (data.hasOwnProperty('following_url')) {
                obj['following_url'] = ApiClient.convertToType(data['following_url'], 'String');
            }
            if (data.hasOwnProperty('gists_url')) {
                obj['gists_url'] = ApiClient.convertToType(data['gists_url'], 'String');
            }
            if (data.hasOwnProperty('hub_url')) {
                obj['hub_url'] = ApiClient.convertToType(data['hub_url'], 'String');
            }
            if (data.hasOwnProperty('issue_search_url')) {
                obj['issue_search_url'] = ApiClient.convertToType(data['issue_search_url'], 'String');
            }
            if (data.hasOwnProperty('issues_url')) {
                obj['issues_url'] = ApiClient.convertToType(data['issues_url'], 'String');
            }
            if (data.hasOwnProperty('keys_url')) {
                obj['keys_url'] = ApiClient.convertToType(data['keys_url'], 'String');
            }
            if (data.hasOwnProperty('label_search_url')) {
                obj['label_search_url'] = ApiClient.convertToType(data['label_search_url'], 'String');
            }
            if (data.hasOwnProperty('notifications_url')) {
                obj['notifications_url'] = ApiClient.convertToType(data['notifications_url'], 'String');
            }
            if (data.hasOwnProperty('organization_repositories_url')) {
                obj['organization_repositories_url'] = ApiClient.convertToType(data['organization_repositories_url'], 'String');
            }
            if (data.hasOwnProperty('organization_teams_url')) {
                obj['organization_teams_url'] = ApiClient.convertToType(data['organization_teams_url'], 'String');
            }
            if (data.hasOwnProperty('organization_url')) {
                obj['organization_url'] = ApiClient.convertToType(data['organization_url'], 'String');
            }
            if (data.hasOwnProperty('public_gists_url')) {
                obj['public_gists_url'] = ApiClient.convertToType(data['public_gists_url'], 'String');
            }
            if (data.hasOwnProperty('rate_limit_url')) {
                obj['rate_limit_url'] = ApiClient.convertToType(data['rate_limit_url'], 'String');
            }
            if (data.hasOwnProperty('repository_search_url')) {
                obj['repository_search_url'] = ApiClient.convertToType(data['repository_search_url'], 'String');
            }
            if (data.hasOwnProperty('repository_url')) {
                obj['repository_url'] = ApiClient.convertToType(data['repository_url'], 'String');
            }
            if (data.hasOwnProperty('starred_gists_url')) {
                obj['starred_gists_url'] = ApiClient.convertToType(data['starred_gists_url'], 'String');
            }
            if (data.hasOwnProperty('starred_url')) {
                obj['starred_url'] = ApiClient.convertToType(data['starred_url'], 'String');
            }
            if (data.hasOwnProperty('topic_search_url')) {
                obj['topic_search_url'] = ApiClient.convertToType(data['topic_search_url'], 'String');
            }
            if (data.hasOwnProperty('user_organizations_url')) {
                obj['user_organizations_url'] = ApiClient.convertToType(data['user_organizations_url'], 'String');
            }
            if (data.hasOwnProperty('user_repositories_url')) {
                obj['user_repositories_url'] = ApiClient.convertToType(data['user_repositories_url'], 'String');
            }
            if (data.hasOwnProperty('user_search_url')) {
                obj['user_search_url'] = ApiClient.convertToType(data['user_search_url'], 'String');
            }
            if (data.hasOwnProperty('user_url')) {
                obj['user_url'] = ApiClient.convertToType(data['user_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Root</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Root</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Root.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['authorizations_url'] && !(typeof data['authorizations_url'] === 'string' || data['authorizations_url'] instanceof String)) {
            throw new Error("Expected the field `authorizations_url` to be a primitive type in the JSON string but got " + data['authorizations_url']);
        }
        // ensure the json data is a string
        if (data['code_search_url'] && !(typeof data['code_search_url'] === 'string' || data['code_search_url'] instanceof String)) {
            throw new Error("Expected the field `code_search_url` to be a primitive type in the JSON string but got " + data['code_search_url']);
        }
        // ensure the json data is a string
        if (data['commit_search_url'] && !(typeof data['commit_search_url'] === 'string' || data['commit_search_url'] instanceof String)) {
            throw new Error("Expected the field `commit_search_url` to be a primitive type in the JSON string but got " + data['commit_search_url']);
        }
        // ensure the json data is a string
        if (data['current_user_authorizations_html_url'] && !(typeof data['current_user_authorizations_html_url'] === 'string' || data['current_user_authorizations_html_url'] instanceof String)) {
            throw new Error("Expected the field `current_user_authorizations_html_url` to be a primitive type in the JSON string but got " + data['current_user_authorizations_html_url']);
        }
        // ensure the json data is a string
        if (data['current_user_repositories_url'] && !(typeof data['current_user_repositories_url'] === 'string' || data['current_user_repositories_url'] instanceof String)) {
            throw new Error("Expected the field `current_user_repositories_url` to be a primitive type in the JSON string but got " + data['current_user_repositories_url']);
        }
        // ensure the json data is a string
        if (data['current_user_url'] && !(typeof data['current_user_url'] === 'string' || data['current_user_url'] instanceof String)) {
            throw new Error("Expected the field `current_user_url` to be a primitive type in the JSON string but got " + data['current_user_url']);
        }
        // ensure the json data is a string
        if (data['emails_url'] && !(typeof data['emails_url'] === 'string' || data['emails_url'] instanceof String)) {
            throw new Error("Expected the field `emails_url` to be a primitive type in the JSON string but got " + data['emails_url']);
        }
        // ensure the json data is a string
        if (data['emojis_url'] && !(typeof data['emojis_url'] === 'string' || data['emojis_url'] instanceof String)) {
            throw new Error("Expected the field `emojis_url` to be a primitive type in the JSON string but got " + data['emojis_url']);
        }
        // ensure the json data is a string
        if (data['events_url'] && !(typeof data['events_url'] === 'string' || data['events_url'] instanceof String)) {
            throw new Error("Expected the field `events_url` to be a primitive type in the JSON string but got " + data['events_url']);
        }
        // ensure the json data is a string
        if (data['feeds_url'] && !(typeof data['feeds_url'] === 'string' || data['feeds_url'] instanceof String)) {
            throw new Error("Expected the field `feeds_url` to be a primitive type in the JSON string but got " + data['feeds_url']);
        }
        // ensure the json data is a string
        if (data['followers_url'] && !(typeof data['followers_url'] === 'string' || data['followers_url'] instanceof String)) {
            throw new Error("Expected the field `followers_url` to be a primitive type in the JSON string but got " + data['followers_url']);
        }
        // ensure the json data is a string
        if (data['following_url'] && !(typeof data['following_url'] === 'string' || data['following_url'] instanceof String)) {
            throw new Error("Expected the field `following_url` to be a primitive type in the JSON string but got " + data['following_url']);
        }
        // ensure the json data is a string
        if (data['gists_url'] && !(typeof data['gists_url'] === 'string' || data['gists_url'] instanceof String)) {
            throw new Error("Expected the field `gists_url` to be a primitive type in the JSON string but got " + data['gists_url']);
        }
        // ensure the json data is a string
        if (data['hub_url'] && !(typeof data['hub_url'] === 'string' || data['hub_url'] instanceof String)) {
            throw new Error("Expected the field `hub_url` to be a primitive type in the JSON string but got " + data['hub_url']);
        }
        // ensure the json data is a string
        if (data['issue_search_url'] && !(typeof data['issue_search_url'] === 'string' || data['issue_search_url'] instanceof String)) {
            throw new Error("Expected the field `issue_search_url` to be a primitive type in the JSON string but got " + data['issue_search_url']);
        }
        // ensure the json data is a string
        if (data['issues_url'] && !(typeof data['issues_url'] === 'string' || data['issues_url'] instanceof String)) {
            throw new Error("Expected the field `issues_url` to be a primitive type in the JSON string but got " + data['issues_url']);
        }
        // ensure the json data is a string
        if (data['keys_url'] && !(typeof data['keys_url'] === 'string' || data['keys_url'] instanceof String)) {
            throw new Error("Expected the field `keys_url` to be a primitive type in the JSON string but got " + data['keys_url']);
        }
        // ensure the json data is a string
        if (data['label_search_url'] && !(typeof data['label_search_url'] === 'string' || data['label_search_url'] instanceof String)) {
            throw new Error("Expected the field `label_search_url` to be a primitive type in the JSON string but got " + data['label_search_url']);
        }
        // ensure the json data is a string
        if (data['notifications_url'] && !(typeof data['notifications_url'] === 'string' || data['notifications_url'] instanceof String)) {
            throw new Error("Expected the field `notifications_url` to be a primitive type in the JSON string but got " + data['notifications_url']);
        }
        // ensure the json data is a string
        if (data['organization_repositories_url'] && !(typeof data['organization_repositories_url'] === 'string' || data['organization_repositories_url'] instanceof String)) {
            throw new Error("Expected the field `organization_repositories_url` to be a primitive type in the JSON string but got " + data['organization_repositories_url']);
        }
        // ensure the json data is a string
        if (data['organization_teams_url'] && !(typeof data['organization_teams_url'] === 'string' || data['organization_teams_url'] instanceof String)) {
            throw new Error("Expected the field `organization_teams_url` to be a primitive type in the JSON string but got " + data['organization_teams_url']);
        }
        // ensure the json data is a string
        if (data['organization_url'] && !(typeof data['organization_url'] === 'string' || data['organization_url'] instanceof String)) {
            throw new Error("Expected the field `organization_url` to be a primitive type in the JSON string but got " + data['organization_url']);
        }
        // ensure the json data is a string
        if (data['public_gists_url'] && !(typeof data['public_gists_url'] === 'string' || data['public_gists_url'] instanceof String)) {
            throw new Error("Expected the field `public_gists_url` to be a primitive type in the JSON string but got " + data['public_gists_url']);
        }
        // ensure the json data is a string
        if (data['rate_limit_url'] && !(typeof data['rate_limit_url'] === 'string' || data['rate_limit_url'] instanceof String)) {
            throw new Error("Expected the field `rate_limit_url` to be a primitive type in the JSON string but got " + data['rate_limit_url']);
        }
        // ensure the json data is a string
        if (data['repository_search_url'] && !(typeof data['repository_search_url'] === 'string' || data['repository_search_url'] instanceof String)) {
            throw new Error("Expected the field `repository_search_url` to be a primitive type in the JSON string but got " + data['repository_search_url']);
        }
        // ensure the json data is a string
        if (data['repository_url'] && !(typeof data['repository_url'] === 'string' || data['repository_url'] instanceof String)) {
            throw new Error("Expected the field `repository_url` to be a primitive type in the JSON string but got " + data['repository_url']);
        }
        // ensure the json data is a string
        if (data['starred_gists_url'] && !(typeof data['starred_gists_url'] === 'string' || data['starred_gists_url'] instanceof String)) {
            throw new Error("Expected the field `starred_gists_url` to be a primitive type in the JSON string but got " + data['starred_gists_url']);
        }
        // ensure the json data is a string
        if (data['starred_url'] && !(typeof data['starred_url'] === 'string' || data['starred_url'] instanceof String)) {
            throw new Error("Expected the field `starred_url` to be a primitive type in the JSON string but got " + data['starred_url']);
        }
        // ensure the json data is a string
        if (data['topic_search_url'] && !(typeof data['topic_search_url'] === 'string' || data['topic_search_url'] instanceof String)) {
            throw new Error("Expected the field `topic_search_url` to be a primitive type in the JSON string but got " + data['topic_search_url']);
        }
        // ensure the json data is a string
        if (data['user_organizations_url'] && !(typeof data['user_organizations_url'] === 'string' || data['user_organizations_url'] instanceof String)) {
            throw new Error("Expected the field `user_organizations_url` to be a primitive type in the JSON string but got " + data['user_organizations_url']);
        }
        // ensure the json data is a string
        if (data['user_repositories_url'] && !(typeof data['user_repositories_url'] === 'string' || data['user_repositories_url'] instanceof String)) {
            throw new Error("Expected the field `user_repositories_url` to be a primitive type in the JSON string but got " + data['user_repositories_url']);
        }
        // ensure the json data is a string
        if (data['user_search_url'] && !(typeof data['user_search_url'] === 'string' || data['user_search_url'] instanceof String)) {
            throw new Error("Expected the field `user_search_url` to be a primitive type in the JSON string but got " + data['user_search_url']);
        }
        // ensure the json data is a string
        if (data['user_url'] && !(typeof data['user_url'] === 'string' || data['user_url'] instanceof String)) {
            throw new Error("Expected the field `user_url` to be a primitive type in the JSON string but got " + data['user_url']);
        }

        return true;
    }


}

Root.RequiredProperties = ["authorizations_url", "code_search_url", "commit_search_url", "current_user_authorizations_html_url", "current_user_repositories_url", "current_user_url", "emails_url", "emojis_url", "events_url", "feeds_url", "followers_url", "following_url", "gists_url", "hub_url", "issue_search_url", "issues_url", "keys_url", "label_search_url", "notifications_url", "organization_repositories_url", "organization_teams_url", "organization_url", "public_gists_url", "rate_limit_url", "repository_search_url", "repository_url", "starred_gists_url", "starred_url", "user_organizations_url", "user_repositories_url", "user_search_url", "user_url"];

/**
 * @member {String} authorizations_url
 */
Root.prototype['authorizations_url'] = undefined;

/**
 * @member {String} code_search_url
 */
Root.prototype['code_search_url'] = undefined;

/**
 * @member {String} commit_search_url
 */
Root.prototype['commit_search_url'] = undefined;

/**
 * @member {String} current_user_authorizations_html_url
 */
Root.prototype['current_user_authorizations_html_url'] = undefined;

/**
 * @member {String} current_user_repositories_url
 */
Root.prototype['current_user_repositories_url'] = undefined;

/**
 * @member {String} current_user_url
 */
Root.prototype['current_user_url'] = undefined;

/**
 * @member {String} emails_url
 */
Root.prototype['emails_url'] = undefined;

/**
 * @member {String} emojis_url
 */
Root.prototype['emojis_url'] = undefined;

/**
 * @member {String} events_url
 */
Root.prototype['events_url'] = undefined;

/**
 * @member {String} feeds_url
 */
Root.prototype['feeds_url'] = undefined;

/**
 * @member {String} followers_url
 */
Root.prototype['followers_url'] = undefined;

/**
 * @member {String} following_url
 */
Root.prototype['following_url'] = undefined;

/**
 * @member {String} gists_url
 */
Root.prototype['gists_url'] = undefined;

/**
 * @member {String} hub_url
 */
Root.prototype['hub_url'] = undefined;

/**
 * @member {String} issue_search_url
 */
Root.prototype['issue_search_url'] = undefined;

/**
 * @member {String} issues_url
 */
Root.prototype['issues_url'] = undefined;

/**
 * @member {String} keys_url
 */
Root.prototype['keys_url'] = undefined;

/**
 * @member {String} label_search_url
 */
Root.prototype['label_search_url'] = undefined;

/**
 * @member {String} notifications_url
 */
Root.prototype['notifications_url'] = undefined;

/**
 * @member {String} organization_repositories_url
 */
Root.prototype['organization_repositories_url'] = undefined;

/**
 * @member {String} organization_teams_url
 */
Root.prototype['organization_teams_url'] = undefined;

/**
 * @member {String} organization_url
 */
Root.prototype['organization_url'] = undefined;

/**
 * @member {String} public_gists_url
 */
Root.prototype['public_gists_url'] = undefined;

/**
 * @member {String} rate_limit_url
 */
Root.prototype['rate_limit_url'] = undefined;

/**
 * @member {String} repository_search_url
 */
Root.prototype['repository_search_url'] = undefined;

/**
 * @member {String} repository_url
 */
Root.prototype['repository_url'] = undefined;

/**
 * @member {String} starred_gists_url
 */
Root.prototype['starred_gists_url'] = undefined;

/**
 * @member {String} starred_url
 */
Root.prototype['starred_url'] = undefined;

/**
 * @member {String} topic_search_url
 */
Root.prototype['topic_search_url'] = undefined;

/**
 * @member {String} user_organizations_url
 */
Root.prototype['user_organizations_url'] = undefined;

/**
 * @member {String} user_repositories_url
 */
Root.prototype['user_repositories_url'] = undefined;

/**
 * @member {String} user_search_url
 */
Root.prototype['user_search_url'] = undefined;

/**
 * @member {String} user_url
 */
Root.prototype['user_url'] = undefined;






export default Root;

