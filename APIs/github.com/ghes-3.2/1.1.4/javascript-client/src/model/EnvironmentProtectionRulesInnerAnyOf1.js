/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvironmentProtectionRulesInnerAnyOf1ReviewersInner from './EnvironmentProtectionRulesInnerAnyOf1ReviewersInner';

/**
 * The EnvironmentProtectionRulesInnerAnyOf1 model module.
 * @module model/EnvironmentProtectionRulesInnerAnyOf1
 * @version 1.1.4
 */
class EnvironmentProtectionRulesInnerAnyOf1 {
    /**
     * Constructs a new <code>EnvironmentProtectionRulesInnerAnyOf1</code>.
     * @alias module:model/EnvironmentProtectionRulesInnerAnyOf1
     * @param id {Number} 
     * @param nodeId {String} 
     * @param type {String} 
     */
    constructor(id, nodeId, type) { 
        
        EnvironmentProtectionRulesInnerAnyOf1.initialize(this, id, nodeId, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, nodeId, type) { 
        obj['id'] = id;
        obj['node_id'] = nodeId;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>EnvironmentProtectionRulesInnerAnyOf1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentProtectionRulesInnerAnyOf1} obj Optional instance to populate.
     * @return {module:model/EnvironmentProtectionRulesInnerAnyOf1} The populated <code>EnvironmentProtectionRulesInnerAnyOf1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentProtectionRulesInnerAnyOf1();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('reviewers')) {
                obj['reviewers'] = ApiClient.convertToType(data['reviewers'], [EnvironmentProtectionRulesInnerAnyOf1ReviewersInner]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentProtectionRulesInnerAnyOf1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentProtectionRulesInnerAnyOf1</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnvironmentProtectionRulesInnerAnyOf1.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }
        if (data['reviewers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reviewers'])) {
                throw new Error("Expected the field `reviewers` to be an array in the JSON data but got " + data['reviewers']);
            }
            // validate the optional field `reviewers` (array)
            for (const item of data['reviewers']) {
                EnvironmentProtectionRulesInnerAnyOf1ReviewersInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

EnvironmentProtectionRulesInnerAnyOf1.RequiredProperties = ["id", "node_id", "type"];

/**
 * @member {Number} id
 */
EnvironmentProtectionRulesInnerAnyOf1.prototype['id'] = undefined;

/**
 * @member {String} node_id
 */
EnvironmentProtectionRulesInnerAnyOf1.prototype['node_id'] = undefined;

/**
 * The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
 * @member {Array.<module:model/EnvironmentProtectionRulesInnerAnyOf1ReviewersInner>} reviewers
 */
EnvironmentProtectionRulesInnerAnyOf1.prototype['reviewers'] = undefined;

/**
 * @member {String} type
 */
EnvironmentProtectionRulesInnerAnyOf1.prototype['type'] = undefined;






export default EnvironmentProtectionRulesInnerAnyOf1;

