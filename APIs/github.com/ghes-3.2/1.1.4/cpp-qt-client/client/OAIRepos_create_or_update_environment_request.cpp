/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepos_create_or_update_environment_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepos_create_or_update_environment_request::OAIRepos_create_or_update_environment_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepos_create_or_update_environment_request::OAIRepos_create_or_update_environment_request() {
    this->initializeModel();
}

OAIRepos_create_or_update_environment_request::~OAIRepos_create_or_update_environment_request() {}

void OAIRepos_create_or_update_environment_request::initializeModel() {

    m_deployment_branch_policy_isSet = false;
    m_deployment_branch_policy_isValid = false;

    m_reviewers_isSet = false;
    m_reviewers_isValid = false;

    m_wait_timer_isSet = false;
    m_wait_timer_isValid = false;
}

void OAIRepos_create_or_update_environment_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepos_create_or_update_environment_request::fromJsonObject(QJsonObject json) {

    m_deployment_branch_policy_isValid = ::OpenAPI::fromJsonValue(m_deployment_branch_policy, json[QString("deployment_branch_policy")]);
    m_deployment_branch_policy_isSet = !json[QString("deployment_branch_policy")].isNull() && m_deployment_branch_policy_isValid;

    m_reviewers_isValid = ::OpenAPI::fromJsonValue(m_reviewers, json[QString("reviewers")]);
    m_reviewers_isSet = !json[QString("reviewers")].isNull() && m_reviewers_isValid;

    m_wait_timer_isValid = ::OpenAPI::fromJsonValue(m_wait_timer, json[QString("wait_timer")]);
    m_wait_timer_isSet = !json[QString("wait_timer")].isNull() && m_wait_timer_isValid;
}

QString OAIRepos_create_or_update_environment_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepos_create_or_update_environment_request::asJsonObject() const {
    QJsonObject obj;
    if (m_deployment_branch_policy.isSet()) {
        obj.insert(QString("deployment_branch_policy"), ::OpenAPI::toJsonValue(m_deployment_branch_policy));
    }
    if (m_reviewers.size() > 0) {
        obj.insert(QString("reviewers"), ::OpenAPI::toJsonValue(m_reviewers));
    }
    if (m_wait_timer_isSet) {
        obj.insert(QString("wait_timer"), ::OpenAPI::toJsonValue(m_wait_timer));
    }
    return obj;
}

OAIDeployment_branch_policy_settings OAIRepos_create_or_update_environment_request::getDeploymentBranchPolicy() const {
    return m_deployment_branch_policy;
}
void OAIRepos_create_or_update_environment_request::setDeploymentBranchPolicy(const OAIDeployment_branch_policy_settings &deployment_branch_policy) {
    m_deployment_branch_policy = deployment_branch_policy;
    m_deployment_branch_policy_isSet = true;
}

bool OAIRepos_create_or_update_environment_request::is_deployment_branch_policy_Set() const{
    return m_deployment_branch_policy_isSet;
}

bool OAIRepos_create_or_update_environment_request::is_deployment_branch_policy_Valid() const{
    return m_deployment_branch_policy_isValid;
}

QList<OAIRepos_create_or_update_environment_request_reviewers_inner> OAIRepos_create_or_update_environment_request::getReviewers() const {
    return m_reviewers;
}
void OAIRepos_create_or_update_environment_request::setReviewers(const QList<OAIRepos_create_or_update_environment_request_reviewers_inner> &reviewers) {
    m_reviewers = reviewers;
    m_reviewers_isSet = true;
}

bool OAIRepos_create_or_update_environment_request::is_reviewers_Set() const{
    return m_reviewers_isSet;
}

bool OAIRepos_create_or_update_environment_request::is_reviewers_Valid() const{
    return m_reviewers_isValid;
}

qint32 OAIRepos_create_or_update_environment_request::getWaitTimer() const {
    return m_wait_timer;
}
void OAIRepos_create_or_update_environment_request::setWaitTimer(const qint32 &wait_timer) {
    m_wait_timer = wait_timer;
    m_wait_timer_isSet = true;
}

bool OAIRepos_create_or_update_environment_request::is_wait_timer_Set() const{
    return m_wait_timer_isSet;
}

bool OAIRepos_create_or_update_environment_request::is_wait_timer_Valid() const{
    return m_wait_timer_isValid;
}

bool OAIRepos_create_or_update_environment_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployment_branch_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviewers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_wait_timer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepos_create_or_update_environment_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
