/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeams_create_discussion_comment_in_org_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeams_create_discussion_comment_in_org_request::OAITeams_create_discussion_comment_in_org_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeams_create_discussion_comment_in_org_request::OAITeams_create_discussion_comment_in_org_request() {
    this->initializeModel();
}

OAITeams_create_discussion_comment_in_org_request::~OAITeams_create_discussion_comment_in_org_request() {}

void OAITeams_create_discussion_comment_in_org_request::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;
}

void OAITeams_create_discussion_comment_in_org_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeams_create_discussion_comment_in_org_request::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;
}

QString OAITeams_create_discussion_comment_in_org_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeams_create_discussion_comment_in_org_request::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    return obj;
}

QString OAITeams_create_discussion_comment_in_org_request::getBody() const {
    return m_body;
}
void OAITeams_create_discussion_comment_in_org_request::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAITeams_create_discussion_comment_in_org_request::is_body_Set() const{
    return m_body_isSet;
}

bool OAITeams_create_discussion_comment_in_org_request::is_body_Valid() const{
    return m_body_isValid;
}

bool OAITeams_create_discussion_comment_in_org_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeams_create_discussion_comment_in_org_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_body_isValid && true;
}

} // namespace OpenAPI
