/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_hook_overview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_hook_overview::OAIEnterprise_hook_overview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_hook_overview::OAIEnterprise_hook_overview() {
    this->initializeModel();
}

OAIEnterprise_hook_overview::~OAIEnterprise_hook_overview() {}

void OAIEnterprise_hook_overview::initializeModel() {

    m_active_hooks_isSet = false;
    m_active_hooks_isValid = false;

    m_inactive_hooks_isSet = false;
    m_inactive_hooks_isValid = false;

    m_total_hooks_isSet = false;
    m_total_hooks_isValid = false;
}

void OAIEnterprise_hook_overview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_hook_overview::fromJsonObject(QJsonObject json) {

    m_active_hooks_isValid = ::OpenAPI::fromJsonValue(m_active_hooks, json[QString("active_hooks")]);
    m_active_hooks_isSet = !json[QString("active_hooks")].isNull() && m_active_hooks_isValid;

    m_inactive_hooks_isValid = ::OpenAPI::fromJsonValue(m_inactive_hooks, json[QString("inactive_hooks")]);
    m_inactive_hooks_isSet = !json[QString("inactive_hooks")].isNull() && m_inactive_hooks_isValid;

    m_total_hooks_isValid = ::OpenAPI::fromJsonValue(m_total_hooks, json[QString("total_hooks")]);
    m_total_hooks_isSet = !json[QString("total_hooks")].isNull() && m_total_hooks_isValid;
}

QString OAIEnterprise_hook_overview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_hook_overview::asJsonObject() const {
    QJsonObject obj;
    if (m_active_hooks_isSet) {
        obj.insert(QString("active_hooks"), ::OpenAPI::toJsonValue(m_active_hooks));
    }
    if (m_inactive_hooks_isSet) {
        obj.insert(QString("inactive_hooks"), ::OpenAPI::toJsonValue(m_inactive_hooks));
    }
    if (m_total_hooks_isSet) {
        obj.insert(QString("total_hooks"), ::OpenAPI::toJsonValue(m_total_hooks));
    }
    return obj;
}

qint32 OAIEnterprise_hook_overview::getActiveHooks() const {
    return m_active_hooks;
}
void OAIEnterprise_hook_overview::setActiveHooks(const qint32 &active_hooks) {
    m_active_hooks = active_hooks;
    m_active_hooks_isSet = true;
}

bool OAIEnterprise_hook_overview::is_active_hooks_Set() const{
    return m_active_hooks_isSet;
}

bool OAIEnterprise_hook_overview::is_active_hooks_Valid() const{
    return m_active_hooks_isValid;
}

qint32 OAIEnterprise_hook_overview::getInactiveHooks() const {
    return m_inactive_hooks;
}
void OAIEnterprise_hook_overview::setInactiveHooks(const qint32 &inactive_hooks) {
    m_inactive_hooks = inactive_hooks;
    m_inactive_hooks_isSet = true;
}

bool OAIEnterprise_hook_overview::is_inactive_hooks_Set() const{
    return m_inactive_hooks_isSet;
}

bool OAIEnterprise_hook_overview::is_inactive_hooks_Valid() const{
    return m_inactive_hooks_isValid;
}

qint32 OAIEnterprise_hook_overview::getTotalHooks() const {
    return m_total_hooks;
}
void OAIEnterprise_hook_overview::setTotalHooks(const qint32 &total_hooks) {
    m_total_hooks = total_hooks;
    m_total_hooks_isSet = true;
}

bool OAIEnterprise_hook_overview::is_total_hooks_Set() const{
    return m_total_hooks_isSet;
}

bool OAIEnterprise_hook_overview::is_total_hooks_Valid() const{
    return m_total_hooks_isValid;
}

bool OAIEnterprise_hook_overview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_hooks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inactive_hooks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_hooks_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_hook_overview::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_active_hooks_isValid && m_inactive_hooks_isValid && m_total_hooks_isValid && true;
}

} // namespace OpenAPI
