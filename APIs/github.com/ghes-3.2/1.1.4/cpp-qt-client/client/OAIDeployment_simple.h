/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeployment_simple.h
 *
 * A deployment created as the result of an Actions check run from a workflow that references an environment
 */

#ifndef OAIDeployment_simple_H
#define OAIDeployment_simple_H

#include <QJsonObject>

#include "OAINullable_integration.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINullable_integration;

class OAIDeployment_simple : public OAIObject {
public:
    OAIDeployment_simple();
    OAIDeployment_simple(QString json);
    ~OAIDeployment_simple() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEnvironment() const;
    void setEnvironment(const QString &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getOriginalEnvironment() const;
    void setOriginalEnvironment(const QString &original_environment);
    bool is_original_environment_Set() const;
    bool is_original_environment_Valid() const;

    OAINullable_integration getPerformedViaGithubApp() const;
    void setPerformedViaGithubApp(const OAINullable_integration &performed_via_github_app);
    bool is_performed_via_github_app_Set() const;
    bool is_performed_via_github_app_Valid() const;

    bool isProductionEnvironment() const;
    void setProductionEnvironment(const bool &production_environment);
    bool is_production_environment_Set() const;
    bool is_production_environment_Valid() const;

    QString getRepositoryUrl() const;
    void setRepositoryUrl(const QString &repository_url);
    bool is_repository_url_Set() const;
    bool is_repository_url_Valid() const;

    QString getStatusesUrl() const;
    void setStatusesUrl(const QString &statuses_url);
    bool is_statuses_url_Set() const;
    bool is_statuses_url_Valid() const;

    QString getTask() const;
    void setTask(const QString &task);
    bool is_task_Set() const;
    bool is_task_Valid() const;

    bool isTransientEnvironment() const;
    void setTransientEnvironment(const bool &transient_environment);
    bool is_transient_environment_Set() const;
    bool is_transient_environment_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_original_environment;
    bool m_original_environment_isSet;
    bool m_original_environment_isValid;

    OAINullable_integration m_performed_via_github_app;
    bool m_performed_via_github_app_isSet;
    bool m_performed_via_github_app_isValid;

    bool m_production_environment;
    bool m_production_environment_isSet;
    bool m_production_environment_isValid;

    QString m_repository_url;
    bool m_repository_url_isSet;
    bool m_repository_url_isValid;

    QString m_statuses_url;
    bool m_statuses_url_isSet;
    bool m_statuses_url_isValid;

    QString m_task;
    bool m_task_isSet;
    bool m_task_isValid;

    bool m_transient_environment;
    bool m_transient_environment_isSet;
    bool m_transient_environment_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeployment_simple)

#endif // OAIDeployment_simple_H
