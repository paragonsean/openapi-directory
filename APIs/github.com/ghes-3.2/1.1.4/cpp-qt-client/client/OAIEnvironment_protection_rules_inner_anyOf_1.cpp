/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironment_protection_rules_inner_anyOf_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironment_protection_rules_inner_anyOf_1::OAIEnvironment_protection_rules_inner_anyOf_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironment_protection_rules_inner_anyOf_1::OAIEnvironment_protection_rules_inner_anyOf_1() {
    this->initializeModel();
}

OAIEnvironment_protection_rules_inner_anyOf_1::~OAIEnvironment_protection_rules_inner_anyOf_1() {}

void OAIEnvironment_protection_rules_inner_anyOf_1::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_node_id_isSet = false;
    m_node_id_isValid = false;

    m_reviewers_isSet = false;
    m_reviewers_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIEnvironment_protection_rules_inner_anyOf_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironment_protection_rules_inner_anyOf_1::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_node_id_isValid = ::OpenAPI::fromJsonValue(m_node_id, json[QString("node_id")]);
    m_node_id_isSet = !json[QString("node_id")].isNull() && m_node_id_isValid;

    m_reviewers_isValid = ::OpenAPI::fromJsonValue(m_reviewers, json[QString("reviewers")]);
    m_reviewers_isSet = !json[QString("reviewers")].isNull() && m_reviewers_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironment_protection_rules_inner_anyOf_1::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_node_id_isSet) {
        obj.insert(QString("node_id"), ::OpenAPI::toJsonValue(m_node_id));
    }
    if (m_reviewers.size() > 0) {
        obj.insert(QString("reviewers"), ::OpenAPI::toJsonValue(m_reviewers));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

qint32 OAIEnvironment_protection_rules_inner_anyOf_1::getId() const {
    return m_id;
}
void OAIEnvironment_protection_rules_inner_anyOf_1::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1::getNodeId() const {
    return m_node_id;
}
void OAIEnvironment_protection_rules_inner_anyOf_1::setNodeId(const QString &node_id) {
    m_node_id = node_id;
    m_node_id_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_node_id_Set() const{
    return m_node_id_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_node_id_Valid() const{
    return m_node_id_isValid;
}

QList<OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner> OAIEnvironment_protection_rules_inner_anyOf_1::getReviewers() const {
    return m_reviewers;
}
void OAIEnvironment_protection_rules_inner_anyOf_1::setReviewers(const QList<OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner> &reviewers) {
    m_reviewers = reviewers;
    m_reviewers_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_reviewers_Set() const{
    return m_reviewers_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_reviewers_Valid() const{
    return m_reviewers_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1::getType() const {
    return m_type;
}
void OAIEnvironment_protection_rules_inner_anyOf_1::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_type_Set() const{
    return m_type_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviewers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_node_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
