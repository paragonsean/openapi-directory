/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer() {
    this->initializeModel();
}

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::~OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer() {}

void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::initializeModel() {

    m_avatar_url_isSet = false;
    m_avatar_url_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_events_url_isSet = false;
    m_events_url_isValid = false;

    m_followers_url_isSet = false;
    m_followers_url_isValid = false;

    m_following_url_isSet = false;
    m_following_url_isValid = false;

    m_gists_url_isSet = false;
    m_gists_url_isValid = false;

    m_gravatar_id_isSet = false;
    m_gravatar_id_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_login_isSet = false;
    m_login_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_node_id_isSet = false;
    m_node_id_isValid = false;

    m_organizations_url_isSet = false;
    m_organizations_url_isValid = false;

    m_received_events_url_isSet = false;
    m_received_events_url_isValid = false;

    m_repos_url_isSet = false;
    m_repos_url_isValid = false;

    m_site_admin_isSet = false;
    m_site_admin_isValid = false;

    m_starred_at_isSet = false;
    m_starred_at_isValid = false;

    m_starred_url_isSet = false;
    m_starred_url_isValid = false;

    m_subscriptions_url_isSet = false;
    m_subscriptions_url_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_members_url_isSet = false;
    m_members_url_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_permission_isSet = false;
    m_permission_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_privacy_isSet = false;
    m_privacy_isValid = false;

    m_repositories_url_isSet = false;
    m_repositories_url_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;
}

void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::fromJsonObject(QJsonObject json) {

    m_avatar_url_isValid = ::OpenAPI::fromJsonValue(m_avatar_url, json[QString("avatar_url")]);
    m_avatar_url_isSet = !json[QString("avatar_url")].isNull() && m_avatar_url_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_events_url_isValid = ::OpenAPI::fromJsonValue(m_events_url, json[QString("events_url")]);
    m_events_url_isSet = !json[QString("events_url")].isNull() && m_events_url_isValid;

    m_followers_url_isValid = ::OpenAPI::fromJsonValue(m_followers_url, json[QString("followers_url")]);
    m_followers_url_isSet = !json[QString("followers_url")].isNull() && m_followers_url_isValid;

    m_following_url_isValid = ::OpenAPI::fromJsonValue(m_following_url, json[QString("following_url")]);
    m_following_url_isSet = !json[QString("following_url")].isNull() && m_following_url_isValid;

    m_gists_url_isValid = ::OpenAPI::fromJsonValue(m_gists_url, json[QString("gists_url")]);
    m_gists_url_isSet = !json[QString("gists_url")].isNull() && m_gists_url_isValid;

    m_gravatar_id_isValid = ::OpenAPI::fromJsonValue(m_gravatar_id, json[QString("gravatar_id")]);
    m_gravatar_id_isSet = !json[QString("gravatar_id")].isNull() && m_gravatar_id_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_login_isValid = ::OpenAPI::fromJsonValue(m_login, json[QString("login")]);
    m_login_isSet = !json[QString("login")].isNull() && m_login_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_node_id_isValid = ::OpenAPI::fromJsonValue(m_node_id, json[QString("node_id")]);
    m_node_id_isSet = !json[QString("node_id")].isNull() && m_node_id_isValid;

    m_organizations_url_isValid = ::OpenAPI::fromJsonValue(m_organizations_url, json[QString("organizations_url")]);
    m_organizations_url_isSet = !json[QString("organizations_url")].isNull() && m_organizations_url_isValid;

    m_received_events_url_isValid = ::OpenAPI::fromJsonValue(m_received_events_url, json[QString("received_events_url")]);
    m_received_events_url_isSet = !json[QString("received_events_url")].isNull() && m_received_events_url_isValid;

    m_repos_url_isValid = ::OpenAPI::fromJsonValue(m_repos_url, json[QString("repos_url")]);
    m_repos_url_isSet = !json[QString("repos_url")].isNull() && m_repos_url_isValid;

    m_site_admin_isValid = ::OpenAPI::fromJsonValue(m_site_admin, json[QString("site_admin")]);
    m_site_admin_isSet = !json[QString("site_admin")].isNull() && m_site_admin_isValid;

    m_starred_at_isValid = ::OpenAPI::fromJsonValue(m_starred_at, json[QString("starred_at")]);
    m_starred_at_isSet = !json[QString("starred_at")].isNull() && m_starred_at_isValid;

    m_starred_url_isValid = ::OpenAPI::fromJsonValue(m_starred_url, json[QString("starred_url")]);
    m_starred_url_isSet = !json[QString("starred_url")].isNull() && m_starred_url_isValid;

    m_subscriptions_url_isValid = ::OpenAPI::fromJsonValue(m_subscriptions_url, json[QString("subscriptions_url")]);
    m_subscriptions_url_isSet = !json[QString("subscriptions_url")].isNull() && m_subscriptions_url_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_members_url_isValid = ::OpenAPI::fromJsonValue(m_members_url, json[QString("members_url")]);
    m_members_url_isSet = !json[QString("members_url")].isNull() && m_members_url_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_permission_isValid = ::OpenAPI::fromJsonValue(m_permission, json[QString("permission")]);
    m_permission_isSet = !json[QString("permission")].isNull() && m_permission_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_privacy_isValid = ::OpenAPI::fromJsonValue(m_privacy, json[QString("privacy")]);
    m_privacy_isSet = !json[QString("privacy")].isNull() && m_privacy_isValid;

    m_repositories_url_isValid = ::OpenAPI::fromJsonValue(m_repositories_url, json[QString("repositories_url")]);
    m_repositories_url_isSet = !json[QString("repositories_url")].isNull() && m_repositories_url_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::asJsonObject() const {
    QJsonObject obj;
    if (m_avatar_url_isSet) {
        obj.insert(QString("avatar_url"), ::OpenAPI::toJsonValue(m_avatar_url));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_events_url_isSet) {
        obj.insert(QString("events_url"), ::OpenAPI::toJsonValue(m_events_url));
    }
    if (m_followers_url_isSet) {
        obj.insert(QString("followers_url"), ::OpenAPI::toJsonValue(m_followers_url));
    }
    if (m_following_url_isSet) {
        obj.insert(QString("following_url"), ::OpenAPI::toJsonValue(m_following_url));
    }
    if (m_gists_url_isSet) {
        obj.insert(QString("gists_url"), ::OpenAPI::toJsonValue(m_gists_url));
    }
    if (m_gravatar_id_isSet) {
        obj.insert(QString("gravatar_id"), ::OpenAPI::toJsonValue(m_gravatar_id));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_login_isSet) {
        obj.insert(QString("login"), ::OpenAPI::toJsonValue(m_login));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_node_id_isSet) {
        obj.insert(QString("node_id"), ::OpenAPI::toJsonValue(m_node_id));
    }
    if (m_organizations_url_isSet) {
        obj.insert(QString("organizations_url"), ::OpenAPI::toJsonValue(m_organizations_url));
    }
    if (m_received_events_url_isSet) {
        obj.insert(QString("received_events_url"), ::OpenAPI::toJsonValue(m_received_events_url));
    }
    if (m_repos_url_isSet) {
        obj.insert(QString("repos_url"), ::OpenAPI::toJsonValue(m_repos_url));
    }
    if (m_site_admin_isSet) {
        obj.insert(QString("site_admin"), ::OpenAPI::toJsonValue(m_site_admin));
    }
    if (m_starred_at_isSet) {
        obj.insert(QString("starred_at"), ::OpenAPI::toJsonValue(m_starred_at));
    }
    if (m_starred_url_isSet) {
        obj.insert(QString("starred_url"), ::OpenAPI::toJsonValue(m_starred_url));
    }
    if (m_subscriptions_url_isSet) {
        obj.insert(QString("subscriptions_url"), ::OpenAPI::toJsonValue(m_subscriptions_url));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_members_url_isSet) {
        obj.insert(QString("members_url"), ::OpenAPI::toJsonValue(m_members_url));
    }
    if (m_parent.isSet()) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_permission_isSet) {
        obj.insert(QString("permission"), ::OpenAPI::toJsonValue(m_permission));
    }
    if (m_permissions.isSet()) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_privacy_isSet) {
        obj.insert(QString("privacy"), ::OpenAPI::toJsonValue(m_privacy));
    }
    if (m_repositories_url_isSet) {
        obj.insert(QString("repositories_url"), ::OpenAPI::toJsonValue(m_repositories_url));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    return obj;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getAvatarUrl() const {
    return m_avatar_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setAvatarUrl(const QString &avatar_url) {
    m_avatar_url = avatar_url;
    m_avatar_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_avatar_url_Set() const{
    return m_avatar_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_avatar_url_Valid() const{
    return m_avatar_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getEmail() const {
    return m_email;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_email_Set() const{
    return m_email_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getEventsUrl() const {
    return m_events_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setEventsUrl(const QString &events_url) {
    m_events_url = events_url;
    m_events_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_events_url_Set() const{
    return m_events_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_events_url_Valid() const{
    return m_events_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getFollowersUrl() const {
    return m_followers_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setFollowersUrl(const QString &followers_url) {
    m_followers_url = followers_url;
    m_followers_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_followers_url_Set() const{
    return m_followers_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_followers_url_Valid() const{
    return m_followers_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getFollowingUrl() const {
    return m_following_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setFollowingUrl(const QString &following_url) {
    m_following_url = following_url;
    m_following_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_following_url_Set() const{
    return m_following_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_following_url_Valid() const{
    return m_following_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getGistsUrl() const {
    return m_gists_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setGistsUrl(const QString &gists_url) {
    m_gists_url = gists_url;
    m_gists_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_gists_url_Set() const{
    return m_gists_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_gists_url_Valid() const{
    return m_gists_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getGravatarId() const {
    return m_gravatar_id;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setGravatarId(const QString &gravatar_id) {
    m_gravatar_id = gravatar_id;
    m_gravatar_id_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_gravatar_id_Set() const{
    return m_gravatar_id_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_gravatar_id_Valid() const{
    return m_gravatar_id_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getHtmlUrl() const {
    return m_html_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_html_url_Valid() const{
    return m_html_url_isValid;
}

qint32 OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getId() const {
    return m_id;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getLogin() const {
    return m_login;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setLogin(const QString &login) {
    m_login = login;
    m_login_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_login_Set() const{
    return m_login_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_login_Valid() const{
    return m_login_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getName() const {
    return m_name;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getNodeId() const {
    return m_node_id;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setNodeId(const QString &node_id) {
    m_node_id = node_id;
    m_node_id_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_node_id_Set() const{
    return m_node_id_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_node_id_Valid() const{
    return m_node_id_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getOrganizationsUrl() const {
    return m_organizations_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setOrganizationsUrl(const QString &organizations_url) {
    m_organizations_url = organizations_url;
    m_organizations_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_organizations_url_Set() const{
    return m_organizations_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_organizations_url_Valid() const{
    return m_organizations_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getReceivedEventsUrl() const {
    return m_received_events_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setReceivedEventsUrl(const QString &received_events_url) {
    m_received_events_url = received_events_url;
    m_received_events_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_received_events_url_Set() const{
    return m_received_events_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_received_events_url_Valid() const{
    return m_received_events_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getReposUrl() const {
    return m_repos_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setReposUrl(const QString &repos_url) {
    m_repos_url = repos_url;
    m_repos_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_repos_url_Set() const{
    return m_repos_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_repos_url_Valid() const{
    return m_repos_url_isValid;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::isSiteAdmin() const {
    return m_site_admin;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setSiteAdmin(const bool &site_admin) {
    m_site_admin = site_admin;
    m_site_admin_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_site_admin_Set() const{
    return m_site_admin_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_site_admin_Valid() const{
    return m_site_admin_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getStarredAt() const {
    return m_starred_at;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setStarredAt(const QString &starred_at) {
    m_starred_at = starred_at;
    m_starred_at_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_starred_at_Set() const{
    return m_starred_at_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_starred_at_Valid() const{
    return m_starred_at_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getStarredUrl() const {
    return m_starred_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setStarredUrl(const QString &starred_url) {
    m_starred_url = starred_url;
    m_starred_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_starred_url_Set() const{
    return m_starred_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_starred_url_Valid() const{
    return m_starred_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getSubscriptionsUrl() const {
    return m_subscriptions_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setSubscriptionsUrl(const QString &subscriptions_url) {
    m_subscriptions_url = subscriptions_url;
    m_subscriptions_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_subscriptions_url_Set() const{
    return m_subscriptions_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_subscriptions_url_Valid() const{
    return m_subscriptions_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getType() const {
    return m_type;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_type_Set() const{
    return m_type_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getUrl() const {
    return m_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_url_Set() const{
    return m_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getDescription() const {
    return m_description;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_description_Set() const{
    return m_description_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getMembersUrl() const {
    return m_members_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setMembersUrl(const QString &members_url) {
    m_members_url = members_url;
    m_members_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_members_url_Set() const{
    return m_members_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_members_url_Valid() const{
    return m_members_url_isValid;
}

OAINullable_team_simple OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getParent() const {
    return m_parent;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setParent(const OAINullable_team_simple &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getPermission() const {
    return m_permission;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setPermission(const QString &permission) {
    m_permission = permission;
    m_permission_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_permission_Set() const{
    return m_permission_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_permission_Valid() const{
    return m_permission_isValid;
}

OAITeam_permissions OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getPermissions() const {
    return m_permissions;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setPermissions(const OAITeam_permissions &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_permissions_Valid() const{
    return m_permissions_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getPrivacy() const {
    return m_privacy;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setPrivacy(const QString &privacy) {
    m_privacy = privacy;
    m_privacy_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_privacy_Set() const{
    return m_privacy_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_privacy_Valid() const{
    return m_privacy_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getRepositoriesUrl() const {
    return m_repositories_url;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setRepositoriesUrl(const QString &repositories_url) {
    m_repositories_url = repositories_url;
    m_repositories_url_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_repositories_url_Set() const{
    return m_repositories_url_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_repositories_url_Valid() const{
    return m_repositories_url_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::getSlug() const {
    return m_slug;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::is_slug_Valid() const{
    return m_slug_isValid;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avatar_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_events_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_followers_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_following_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gists_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gravatar_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organizations_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_received_events_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repos_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_admin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_starred_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_starred_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscriptions_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_members_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repositories_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_avatar_url_isValid && m_events_url_isValid && m_followers_url_isValid && m_following_url_isValid && m_gists_url_isValid && m_gravatar_id_isValid && m_html_url_isValid && m_id_isValid && m_login_isValid && m_name_isValid && m_node_id_isValid && m_organizations_url_isValid && m_received_events_url_isValid && m_repos_url_isValid && m_site_admin_isValid && m_starred_url_isValid && m_subscriptions_url_isValid && m_type_isValid && m_url_isValid && m_description_isValid && m_members_url_isValid && m_parent_isValid && m_permission_isValid && m_repositories_url_isValid && m_slug_isValid && true;
}

} // namespace OpenAPI
