/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivate_user.h
 *
 * Private User
 */

#ifndef OAIPrivate_user_H
#define OAIPrivate_user_H

#include <QJsonObject>

#include "OAILdap_mapping_user_plan.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILdap_mapping_user_plan;

class OAIPrivate_user : public OAIObject {
public:
    OAIPrivate_user();
    OAIPrivate_user(QString json);
    ~OAIPrivate_user() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    QString getBio() const;
    void setBio(const QString &bio);
    bool is_bio_Set() const;
    bool is_bio_Valid() const;

    QString getBlog() const;
    void setBlog(const QString &blog);
    bool is_blog_Set() const;
    bool is_blog_Valid() const;

    bool isBusinessPlus() const;
    void setBusinessPlus(const bool &business_plus);
    bool is_business_plus_Set() const;
    bool is_business_plus_Valid() const;

    qint32 getCollaborators() const;
    void setCollaborators(const qint32 &collaborators);
    bool is_collaborators_Set() const;
    bool is_collaborators_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getDiskUsage() const;
    void setDiskUsage(const qint32 &disk_usage);
    bool is_disk_usage_Set() const;
    bool is_disk_usage_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getEventsUrl() const;
    void setEventsUrl(const QString &events_url);
    bool is_events_url_Set() const;
    bool is_events_url_Valid() const;

    qint32 getFollowers() const;
    void setFollowers(const qint32 &followers);
    bool is_followers_Set() const;
    bool is_followers_Valid() const;

    QString getFollowersUrl() const;
    void setFollowersUrl(const QString &followers_url);
    bool is_followers_url_Set() const;
    bool is_followers_url_Valid() const;

    qint32 getFollowing() const;
    void setFollowing(const qint32 &following);
    bool is_following_Set() const;
    bool is_following_Valid() const;

    QString getFollowingUrl() const;
    void setFollowingUrl(const QString &following_url);
    bool is_following_url_Set() const;
    bool is_following_url_Valid() const;

    QString getGistsUrl() const;
    void setGistsUrl(const QString &gists_url);
    bool is_gists_url_Set() const;
    bool is_gists_url_Valid() const;

    QString getGravatarId() const;
    void setGravatarId(const QString &gravatar_id);
    bool is_gravatar_id_Set() const;
    bool is_gravatar_id_Valid() const;

    bool isHireable() const;
    void setHireable(const bool &hireable);
    bool is_hireable_Set() const;
    bool is_hireable_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLdapDn() const;
    void setLdapDn(const QString &ldap_dn);
    bool is_ldap_dn_Set() const;
    bool is_ldap_dn_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getLogin() const;
    void setLogin(const QString &login);
    bool is_login_Set() const;
    bool is_login_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getOrganizationsUrl() const;
    void setOrganizationsUrl(const QString &organizations_url);
    bool is_organizations_url_Set() const;
    bool is_organizations_url_Valid() const;

    qint32 getOwnedPrivateRepos() const;
    void setOwnedPrivateRepos(const qint32 &owned_private_repos);
    bool is_owned_private_repos_Set() const;
    bool is_owned_private_repos_Valid() const;

    OAILdap_mapping_user_plan getPlan() const;
    void setPlan(const OAILdap_mapping_user_plan &plan);
    bool is_plan_Set() const;
    bool is_plan_Valid() const;

    qint32 getPrivateGists() const;
    void setPrivateGists(const qint32 &private_gists);
    bool is_private_gists_Set() const;
    bool is_private_gists_Valid() const;

    qint32 getPublicGists() const;
    void setPublicGists(const qint32 &public_gists);
    bool is_public_gists_Set() const;
    bool is_public_gists_Valid() const;

    qint32 getPublicRepos() const;
    void setPublicRepos(const qint32 &public_repos);
    bool is_public_repos_Set() const;
    bool is_public_repos_Valid() const;

    QString getReceivedEventsUrl() const;
    void setReceivedEventsUrl(const QString &received_events_url);
    bool is_received_events_url_Set() const;
    bool is_received_events_url_Valid() const;

    QString getReposUrl() const;
    void setReposUrl(const QString &repos_url);
    bool is_repos_url_Set() const;
    bool is_repos_url_Valid() const;

    bool isSiteAdmin() const;
    void setSiteAdmin(const bool &site_admin);
    bool is_site_admin_Set() const;
    bool is_site_admin_Valid() const;

    QString getStarredUrl() const;
    void setStarredUrl(const QString &starred_url);
    bool is_starred_url_Set() const;
    bool is_starred_url_Valid() const;

    QString getSubscriptionsUrl() const;
    void setSubscriptionsUrl(const QString &subscriptions_url);
    bool is_subscriptions_url_Set() const;
    bool is_subscriptions_url_Valid() const;

    QDateTime getSuspendedAt() const;
    void setSuspendedAt(const QDateTime &suspended_at);
    bool is_suspended_at_Set() const;
    bool is_suspended_at_Valid() const;

    qint32 getTotalPrivateRepos() const;
    void setTotalPrivateRepos(const qint32 &total_private_repos);
    bool is_total_private_repos_Set() const;
    bool is_total_private_repos_Valid() const;

    QString getTwitterUsername() const;
    void setTwitterUsername(const QString &twitter_username);
    bool is_twitter_username_Set() const;
    bool is_twitter_username_Valid() const;

    bool isTwoFactorAuthentication() const;
    void setTwoFactorAuthentication(const bool &two_factor_authentication);
    bool is_two_factor_authentication_Set() const;
    bool is_two_factor_authentication_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    QString m_bio;
    bool m_bio_isSet;
    bool m_bio_isValid;

    QString m_blog;
    bool m_blog_isSet;
    bool m_blog_isValid;

    bool m_business_plus;
    bool m_business_plus_isSet;
    bool m_business_plus_isValid;

    qint32 m_collaborators;
    bool m_collaborators_isSet;
    bool m_collaborators_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_disk_usage;
    bool m_disk_usage_isSet;
    bool m_disk_usage_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_events_url;
    bool m_events_url_isSet;
    bool m_events_url_isValid;

    qint32 m_followers;
    bool m_followers_isSet;
    bool m_followers_isValid;

    QString m_followers_url;
    bool m_followers_url_isSet;
    bool m_followers_url_isValid;

    qint32 m_following;
    bool m_following_isSet;
    bool m_following_isValid;

    QString m_following_url;
    bool m_following_url_isSet;
    bool m_following_url_isValid;

    QString m_gists_url;
    bool m_gists_url_isSet;
    bool m_gists_url_isValid;

    QString m_gravatar_id;
    bool m_gravatar_id_isSet;
    bool m_gravatar_id_isValid;

    bool m_hireable;
    bool m_hireable_isSet;
    bool m_hireable_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_ldap_dn;
    bool m_ldap_dn_isSet;
    bool m_ldap_dn_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_login;
    bool m_login_isSet;
    bool m_login_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_organizations_url;
    bool m_organizations_url_isSet;
    bool m_organizations_url_isValid;

    qint32 m_owned_private_repos;
    bool m_owned_private_repos_isSet;
    bool m_owned_private_repos_isValid;

    OAILdap_mapping_user_plan m_plan;
    bool m_plan_isSet;
    bool m_plan_isValid;

    qint32 m_private_gists;
    bool m_private_gists_isSet;
    bool m_private_gists_isValid;

    qint32 m_public_gists;
    bool m_public_gists_isSet;
    bool m_public_gists_isValid;

    qint32 m_public_repos;
    bool m_public_repos_isSet;
    bool m_public_repos_isValid;

    QString m_received_events_url;
    bool m_received_events_url_isSet;
    bool m_received_events_url_isValid;

    QString m_repos_url;
    bool m_repos_url_isSet;
    bool m_repos_url_isValid;

    bool m_site_admin;
    bool m_site_admin_isSet;
    bool m_site_admin_isValid;

    QString m_starred_url;
    bool m_starred_url_isSet;
    bool m_starred_url_isValid;

    QString m_subscriptions_url;
    bool m_subscriptions_url_isSet;
    bool m_subscriptions_url_isValid;

    QDateTime m_suspended_at;
    bool m_suspended_at_isSet;
    bool m_suspended_at_isValid;

    qint32 m_total_private_repos;
    bool m_total_private_repos_isSet;
    bool m_total_private_repos_isValid;

    QString m_twitter_username;
    bool m_twitter_username_isSet;
    bool m_twitter_username_isValid;

    bool m_two_factor_authentication;
    bool m_two_factor_authentication_isSet;
    bool m_two_factor_authentication_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivate_user)

#endif // OAIPrivate_user_H
