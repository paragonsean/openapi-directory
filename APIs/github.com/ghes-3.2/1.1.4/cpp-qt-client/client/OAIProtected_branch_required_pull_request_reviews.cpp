/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtected_branch_required_pull_request_reviews.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtected_branch_required_pull_request_reviews::OAIProtected_branch_required_pull_request_reviews(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtected_branch_required_pull_request_reviews::OAIProtected_branch_required_pull_request_reviews() {
    this->initializeModel();
}

OAIProtected_branch_required_pull_request_reviews::~OAIProtected_branch_required_pull_request_reviews() {}

void OAIProtected_branch_required_pull_request_reviews::initializeModel() {

    m_dismiss_stale_reviews_isSet = false;
    m_dismiss_stale_reviews_isValid = false;

    m_dismissal_restrictions_isSet = false;
    m_dismissal_restrictions_isValid = false;

    m_require_code_owner_reviews_isSet = false;
    m_require_code_owner_reviews_isValid = false;

    m_required_approving_review_count_isSet = false;
    m_required_approving_review_count_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIProtected_branch_required_pull_request_reviews::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtected_branch_required_pull_request_reviews::fromJsonObject(QJsonObject json) {

    m_dismiss_stale_reviews_isValid = ::OpenAPI::fromJsonValue(m_dismiss_stale_reviews, json[QString("dismiss_stale_reviews")]);
    m_dismiss_stale_reviews_isSet = !json[QString("dismiss_stale_reviews")].isNull() && m_dismiss_stale_reviews_isValid;

    m_dismissal_restrictions_isValid = ::OpenAPI::fromJsonValue(m_dismissal_restrictions, json[QString("dismissal_restrictions")]);
    m_dismissal_restrictions_isSet = !json[QString("dismissal_restrictions")].isNull() && m_dismissal_restrictions_isValid;

    m_require_code_owner_reviews_isValid = ::OpenAPI::fromJsonValue(m_require_code_owner_reviews, json[QString("require_code_owner_reviews")]);
    m_require_code_owner_reviews_isSet = !json[QString("require_code_owner_reviews")].isNull() && m_require_code_owner_reviews_isValid;

    m_required_approving_review_count_isValid = ::OpenAPI::fromJsonValue(m_required_approving_review_count, json[QString("required_approving_review_count")]);
    m_required_approving_review_count_isSet = !json[QString("required_approving_review_count")].isNull() && m_required_approving_review_count_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIProtected_branch_required_pull_request_reviews::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtected_branch_required_pull_request_reviews::asJsonObject() const {
    QJsonObject obj;
    if (m_dismiss_stale_reviews_isSet) {
        obj.insert(QString("dismiss_stale_reviews"), ::OpenAPI::toJsonValue(m_dismiss_stale_reviews));
    }
    if (m_dismissal_restrictions.isSet()) {
        obj.insert(QString("dismissal_restrictions"), ::OpenAPI::toJsonValue(m_dismissal_restrictions));
    }
    if (m_require_code_owner_reviews_isSet) {
        obj.insert(QString("require_code_owner_reviews"), ::OpenAPI::toJsonValue(m_require_code_owner_reviews));
    }
    if (m_required_approving_review_count_isSet) {
        obj.insert(QString("required_approving_review_count"), ::OpenAPI::toJsonValue(m_required_approving_review_count));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

bool OAIProtected_branch_required_pull_request_reviews::isDismissStaleReviews() const {
    return m_dismiss_stale_reviews;
}
void OAIProtected_branch_required_pull_request_reviews::setDismissStaleReviews(const bool &dismiss_stale_reviews) {
    m_dismiss_stale_reviews = dismiss_stale_reviews;
    m_dismiss_stale_reviews_isSet = true;
}

bool OAIProtected_branch_required_pull_request_reviews::is_dismiss_stale_reviews_Set() const{
    return m_dismiss_stale_reviews_isSet;
}

bool OAIProtected_branch_required_pull_request_reviews::is_dismiss_stale_reviews_Valid() const{
    return m_dismiss_stale_reviews_isValid;
}

OAIProtected_branch_required_pull_request_reviews_dismissal_restrictions OAIProtected_branch_required_pull_request_reviews::getDismissalRestrictions() const {
    return m_dismissal_restrictions;
}
void OAIProtected_branch_required_pull_request_reviews::setDismissalRestrictions(const OAIProtected_branch_required_pull_request_reviews_dismissal_restrictions &dismissal_restrictions) {
    m_dismissal_restrictions = dismissal_restrictions;
    m_dismissal_restrictions_isSet = true;
}

bool OAIProtected_branch_required_pull_request_reviews::is_dismissal_restrictions_Set() const{
    return m_dismissal_restrictions_isSet;
}

bool OAIProtected_branch_required_pull_request_reviews::is_dismissal_restrictions_Valid() const{
    return m_dismissal_restrictions_isValid;
}

bool OAIProtected_branch_required_pull_request_reviews::isRequireCodeOwnerReviews() const {
    return m_require_code_owner_reviews;
}
void OAIProtected_branch_required_pull_request_reviews::setRequireCodeOwnerReviews(const bool &require_code_owner_reviews) {
    m_require_code_owner_reviews = require_code_owner_reviews;
    m_require_code_owner_reviews_isSet = true;
}

bool OAIProtected_branch_required_pull_request_reviews::is_require_code_owner_reviews_Set() const{
    return m_require_code_owner_reviews_isSet;
}

bool OAIProtected_branch_required_pull_request_reviews::is_require_code_owner_reviews_Valid() const{
    return m_require_code_owner_reviews_isValid;
}

qint32 OAIProtected_branch_required_pull_request_reviews::getRequiredApprovingReviewCount() const {
    return m_required_approving_review_count;
}
void OAIProtected_branch_required_pull_request_reviews::setRequiredApprovingReviewCount(const qint32 &required_approving_review_count) {
    m_required_approving_review_count = required_approving_review_count;
    m_required_approving_review_count_isSet = true;
}

bool OAIProtected_branch_required_pull_request_reviews::is_required_approving_review_count_Set() const{
    return m_required_approving_review_count_isSet;
}

bool OAIProtected_branch_required_pull_request_reviews::is_required_approving_review_count_Valid() const{
    return m_required_approving_review_count_isValid;
}

QString OAIProtected_branch_required_pull_request_reviews::getUrl() const {
    return m_url;
}
void OAIProtected_branch_required_pull_request_reviews::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIProtected_branch_required_pull_request_reviews::is_url_Set() const{
    return m_url_isSet;
}

bool OAIProtected_branch_required_pull_request_reviews::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIProtected_branch_required_pull_request_reviews::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dismiss_stale_reviews_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dismissal_restrictions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_code_owner_reviews_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_approving_review_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtected_branch_required_pull_request_reviews::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_url_isValid && true;
}

} // namespace OpenAPI
