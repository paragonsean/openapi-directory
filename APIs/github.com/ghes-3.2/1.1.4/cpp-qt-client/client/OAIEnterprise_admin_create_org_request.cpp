/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_admin_create_org_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_admin_create_org_request::OAIEnterprise_admin_create_org_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_admin_create_org_request::OAIEnterprise_admin_create_org_request() {
    this->initializeModel();
}

OAIEnterprise_admin_create_org_request::~OAIEnterprise_admin_create_org_request() {}

void OAIEnterprise_admin_create_org_request::initializeModel() {

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_login_isSet = false;
    m_login_isValid = false;

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;
}

void OAIEnterprise_admin_create_org_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_admin_create_org_request::fromJsonObject(QJsonObject json) {

    m_admin_isValid = ::OpenAPI::fromJsonValue(m_admin, json[QString("admin")]);
    m_admin_isSet = !json[QString("admin")].isNull() && m_admin_isValid;

    m_login_isValid = ::OpenAPI::fromJsonValue(m_login, json[QString("login")]);
    m_login_isSet = !json[QString("login")].isNull() && m_login_isValid;

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("profile_name")]);
    m_profile_name_isSet = !json[QString("profile_name")].isNull() && m_profile_name_isValid;
}

QString OAIEnterprise_admin_create_org_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_admin_create_org_request::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_isSet) {
        obj.insert(QString("admin"), ::OpenAPI::toJsonValue(m_admin));
    }
    if (m_login_isSet) {
        obj.insert(QString("login"), ::OpenAPI::toJsonValue(m_login));
    }
    if (m_profile_name_isSet) {
        obj.insert(QString("profile_name"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    return obj;
}

QString OAIEnterprise_admin_create_org_request::getAdmin() const {
    return m_admin;
}
void OAIEnterprise_admin_create_org_request::setAdmin(const QString &admin) {
    m_admin = admin;
    m_admin_isSet = true;
}

bool OAIEnterprise_admin_create_org_request::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIEnterprise_admin_create_org_request::is_admin_Valid() const{
    return m_admin_isValid;
}

QString OAIEnterprise_admin_create_org_request::getLogin() const {
    return m_login;
}
void OAIEnterprise_admin_create_org_request::setLogin(const QString &login) {
    m_login = login;
    m_login_isSet = true;
}

bool OAIEnterprise_admin_create_org_request::is_login_Set() const{
    return m_login_isSet;
}

bool OAIEnterprise_admin_create_org_request::is_login_Valid() const{
    return m_login_isValid;
}

QString OAIEnterprise_admin_create_org_request::getProfileName() const {
    return m_profile_name;
}
void OAIEnterprise_admin_create_org_request::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAIEnterprise_admin_create_org_request::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAIEnterprise_admin_create_org_request::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

bool OAIEnterprise_admin_create_org_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_admin_create_org_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_admin_isValid && m_login_isValid && true;
}

} // namespace OpenAPI
