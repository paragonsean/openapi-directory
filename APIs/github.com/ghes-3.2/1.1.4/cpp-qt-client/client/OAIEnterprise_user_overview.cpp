/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_user_overview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_user_overview::OAIEnterprise_user_overview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_user_overview::OAIEnterprise_user_overview() {
    this->initializeModel();
}

OAIEnterprise_user_overview::~OAIEnterprise_user_overview() {}

void OAIEnterprise_user_overview::initializeModel() {

    m_admin_users_isSet = false;
    m_admin_users_isValid = false;

    m_suspended_users_isSet = false;
    m_suspended_users_isValid = false;

    m_total_users_isSet = false;
    m_total_users_isValid = false;
}

void OAIEnterprise_user_overview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_user_overview::fromJsonObject(QJsonObject json) {

    m_admin_users_isValid = ::OpenAPI::fromJsonValue(m_admin_users, json[QString("admin_users")]);
    m_admin_users_isSet = !json[QString("admin_users")].isNull() && m_admin_users_isValid;

    m_suspended_users_isValid = ::OpenAPI::fromJsonValue(m_suspended_users, json[QString("suspended_users")]);
    m_suspended_users_isSet = !json[QString("suspended_users")].isNull() && m_suspended_users_isValid;

    m_total_users_isValid = ::OpenAPI::fromJsonValue(m_total_users, json[QString("total_users")]);
    m_total_users_isSet = !json[QString("total_users")].isNull() && m_total_users_isValid;
}

QString OAIEnterprise_user_overview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_user_overview::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_users_isSet) {
        obj.insert(QString("admin_users"), ::OpenAPI::toJsonValue(m_admin_users));
    }
    if (m_suspended_users_isSet) {
        obj.insert(QString("suspended_users"), ::OpenAPI::toJsonValue(m_suspended_users));
    }
    if (m_total_users_isSet) {
        obj.insert(QString("total_users"), ::OpenAPI::toJsonValue(m_total_users));
    }
    return obj;
}

qint32 OAIEnterprise_user_overview::getAdminUsers() const {
    return m_admin_users;
}
void OAIEnterprise_user_overview::setAdminUsers(const qint32 &admin_users) {
    m_admin_users = admin_users;
    m_admin_users_isSet = true;
}

bool OAIEnterprise_user_overview::is_admin_users_Set() const{
    return m_admin_users_isSet;
}

bool OAIEnterprise_user_overview::is_admin_users_Valid() const{
    return m_admin_users_isValid;
}

qint32 OAIEnterprise_user_overview::getSuspendedUsers() const {
    return m_suspended_users;
}
void OAIEnterprise_user_overview::setSuspendedUsers(const qint32 &suspended_users) {
    m_suspended_users = suspended_users;
    m_suspended_users_isSet = true;
}

bool OAIEnterprise_user_overview::is_suspended_users_Set() const{
    return m_suspended_users_isSet;
}

bool OAIEnterprise_user_overview::is_suspended_users_Valid() const{
    return m_suspended_users_isValid;
}

qint32 OAIEnterprise_user_overview::getTotalUsers() const {
    return m_total_users;
}
void OAIEnterprise_user_overview::setTotalUsers(const qint32 &total_users) {
    m_total_users = total_users;
    m_total_users_isSet = true;
}

bool OAIEnterprise_user_overview::is_total_users_Set() const{
    return m_total_users_isSet;
}

bool OAIEnterprise_user_overview::is_total_users_Valid() const{
    return m_total_users_isValid;
}

bool OAIEnterprise_user_overview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspended_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_users_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_user_overview::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_admin_users_isValid && m_suspended_users_isValid && m_total_users_isValid && true;
}

} // namespace OpenAPI
