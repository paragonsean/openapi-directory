# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UsersCreateGpgKeyForAuthenticatedUserRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, armored_public_key: str=None):
        """UsersCreateGpgKeyForAuthenticatedUserRequest - a model defined in OpenAPI

        :param armored_public_key: The armored_public_key of this UsersCreateGpgKeyForAuthenticatedUserRequest.
        """
        self.openapi_types = {
            'armored_public_key': str
        }

        self.attribute_map = {
            'armored_public_key': 'armored_public_key'
        }

        self._armored_public_key = armored_public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersCreateGpgKeyForAuthenticatedUserRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The users_create_gpg_key_for_authenticated_user_request of this UsersCreateGpgKeyForAuthenticatedUserRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def armored_public_key(self):
        """Gets the armored_public_key of this UsersCreateGpgKeyForAuthenticatedUserRequest.

        A GPG key in ASCII-armored format.

        :return: The armored_public_key of this UsersCreateGpgKeyForAuthenticatedUserRequest.
        :rtype: str
        """
        return self._armored_public_key

    @armored_public_key.setter
    def armored_public_key(self, armored_public_key):
        """Sets the armored_public_key of this UsersCreateGpgKeyForAuthenticatedUserRequest.

        A GPG key in ASCII-armored format.

        :param armored_public_key: The armored_public_key of this UsersCreateGpgKeyForAuthenticatedUserRequest.
        :type armored_public_key: str
        """
        if armored_public_key is None:
            raise ValueError("Invalid value for `armored_public_key`, must not be `None`")

        self._armored_public_key = armored_public_key
