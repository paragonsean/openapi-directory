# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nullable_simple_user import NullableSimpleUser
from openapi_server.models.secret_scanning_alert_resolution import SecretScanningAlertResolution
from openapi_server.models.secret_scanning_alert_state import SecretScanningAlertState
from openapi_server import util


class SecretScanningAlert(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, html_url: str=None, locations_url: str=None, number: int=None, resolution: SecretScanningAlertResolution=None, resolved_at: datetime=None, resolved_by: NullableSimpleUser=None, secret: str=None, secret_type: str=None, state: SecretScanningAlertState=None, updated_at: datetime=None, url: str=None):
        """SecretScanningAlert - a model defined in OpenAPI

        :param created_at: The created_at of this SecretScanningAlert.
        :param html_url: The html_url of this SecretScanningAlert.
        :param locations_url: The locations_url of this SecretScanningAlert.
        :param number: The number of this SecretScanningAlert.
        :param resolution: The resolution of this SecretScanningAlert.
        :param resolved_at: The resolved_at of this SecretScanningAlert.
        :param resolved_by: The resolved_by of this SecretScanningAlert.
        :param secret: The secret of this SecretScanningAlert.
        :param secret_type: The secret_type of this SecretScanningAlert.
        :param state: The state of this SecretScanningAlert.
        :param updated_at: The updated_at of this SecretScanningAlert.
        :param url: The url of this SecretScanningAlert.
        """
        self.openapi_types = {
            'created_at': datetime,
            'html_url': str,
            'locations_url': str,
            'number': int,
            'resolution': SecretScanningAlertResolution,
            'resolved_at': datetime,
            'resolved_by': NullableSimpleUser,
            'secret': str,
            'secret_type': str,
            'state': SecretScanningAlertState,
            'updated_at': datetime,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'html_url': 'html_url',
            'locations_url': 'locations_url',
            'number': 'number',
            'resolution': 'resolution',
            'resolved_at': 'resolved_at',
            'resolved_by': 'resolved_by',
            'secret': 'secret',
            'secret_type': 'secret_type',
            'state': 'state',
            'updated_at': 'updated_at',
            'url': 'url'
        }

        self._created_at = created_at
        self._html_url = html_url
        self._locations_url = locations_url
        self._number = number
        self._resolution = resolution
        self._resolved_at = resolved_at
        self._resolved_by = resolved_by
        self._secret = secret
        self._secret_type = secret_type
        self._state = state
        self._updated_at = updated_at
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecretScanningAlert':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The secret-scanning-alert of this SecretScanningAlert.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this SecretScanningAlert.

        The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.

        :return: The created_at of this SecretScanningAlert.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SecretScanningAlert.

        The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.

        :param created_at: The created_at of this SecretScanningAlert.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def html_url(self):
        """Gets the html_url of this SecretScanningAlert.

        The GitHub URL of the alert resource.

        :return: The html_url of this SecretScanningAlert.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this SecretScanningAlert.

        The GitHub URL of the alert resource.

        :param html_url: The html_url of this SecretScanningAlert.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def locations_url(self):
        """Gets the locations_url of this SecretScanningAlert.

        The REST API URL of the code locations for this alert.

        :return: The locations_url of this SecretScanningAlert.
        :rtype: str
        """
        return self._locations_url

    @locations_url.setter
    def locations_url(self, locations_url):
        """Sets the locations_url of this SecretScanningAlert.

        The REST API URL of the code locations for this alert.

        :param locations_url: The locations_url of this SecretScanningAlert.
        :type locations_url: str
        """

        self._locations_url = locations_url

    @property
    def number(self):
        """Gets the number of this SecretScanningAlert.

        The security alert number.

        :return: The number of this SecretScanningAlert.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this SecretScanningAlert.

        The security alert number.

        :param number: The number of this SecretScanningAlert.
        :type number: int
        """

        self._number = number

    @property
    def resolution(self):
        """Gets the resolution of this SecretScanningAlert.


        :return: The resolution of this SecretScanningAlert.
        :rtype: SecretScanningAlertResolution
        """
        return self._resolution

    @resolution.setter
    def resolution(self, resolution):
        """Sets the resolution of this SecretScanningAlert.


        :param resolution: The resolution of this SecretScanningAlert.
        :type resolution: SecretScanningAlertResolution
        """

        self._resolution = resolution

    @property
    def resolved_at(self):
        """Gets the resolved_at of this SecretScanningAlert.

        The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.

        :return: The resolved_at of this SecretScanningAlert.
        :rtype: datetime
        """
        return self._resolved_at

    @resolved_at.setter
    def resolved_at(self, resolved_at):
        """Sets the resolved_at of this SecretScanningAlert.

        The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.

        :param resolved_at: The resolved_at of this SecretScanningAlert.
        :type resolved_at: datetime
        """

        self._resolved_at = resolved_at

    @property
    def resolved_by(self):
        """Gets the resolved_by of this SecretScanningAlert.


        :return: The resolved_by of this SecretScanningAlert.
        :rtype: NullableSimpleUser
        """
        return self._resolved_by

    @resolved_by.setter
    def resolved_by(self, resolved_by):
        """Sets the resolved_by of this SecretScanningAlert.


        :param resolved_by: The resolved_by of this SecretScanningAlert.
        :type resolved_by: NullableSimpleUser
        """

        self._resolved_by = resolved_by

    @property
    def secret(self):
        """Gets the secret of this SecretScanningAlert.

        The secret that was detected.

        :return: The secret of this SecretScanningAlert.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this SecretScanningAlert.

        The secret that was detected.

        :param secret: The secret of this SecretScanningAlert.
        :type secret: str
        """

        self._secret = secret

    @property
    def secret_type(self):
        """Gets the secret_type of this SecretScanningAlert.

        The type of secret that secret scanning detected.

        :return: The secret_type of this SecretScanningAlert.
        :rtype: str
        """
        return self._secret_type

    @secret_type.setter
    def secret_type(self, secret_type):
        """Sets the secret_type of this SecretScanningAlert.

        The type of secret that secret scanning detected.

        :param secret_type: The secret_type of this SecretScanningAlert.
        :type secret_type: str
        """

        self._secret_type = secret_type

    @property
    def state(self):
        """Gets the state of this SecretScanningAlert.


        :return: The state of this SecretScanningAlert.
        :rtype: SecretScanningAlertState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this SecretScanningAlert.


        :param state: The state of this SecretScanningAlert.
        :type state: SecretScanningAlertState
        """

        self._state = state

    @property
    def updated_at(self):
        """Gets the updated_at of this SecretScanningAlert.

        The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.

        :return: The updated_at of this SecretScanningAlert.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this SecretScanningAlert.

        The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.

        :param updated_at: The updated_at of this SecretScanningAlert.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this SecretScanningAlert.

        The REST API URL of the alert resource.

        :return: The url of this SecretScanningAlert.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this SecretScanningAlert.

        The REST API URL of the alert resource.

        :param url: The url of this SecretScanningAlert.
        :type url: str
        """

        self._url = url
