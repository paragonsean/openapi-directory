# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepositoryPreReceiveHook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_url: str=None, enforcement: str=None, id: int=None, name: str=None):
        """RepositoryPreReceiveHook - a model defined in OpenAPI

        :param configuration_url: The configuration_url of this RepositoryPreReceiveHook.
        :param enforcement: The enforcement of this RepositoryPreReceiveHook.
        :param id: The id of this RepositoryPreReceiveHook.
        :param name: The name of this RepositoryPreReceiveHook.
        """
        self.openapi_types = {
            'configuration_url': str,
            'enforcement': str,
            'id': int,
            'name': str
        }

        self.attribute_map = {
            'configuration_url': 'configuration_url',
            'enforcement': 'enforcement',
            'id': 'id',
            'name': 'name'
        }

        self._configuration_url = configuration_url
        self._enforcement = enforcement
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepositoryPreReceiveHook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repository-pre-receive-hook of this RepositoryPreReceiveHook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_url(self):
        """Gets the configuration_url of this RepositoryPreReceiveHook.


        :return: The configuration_url of this RepositoryPreReceiveHook.
        :rtype: str
        """
        return self._configuration_url

    @configuration_url.setter
    def configuration_url(self, configuration_url):
        """Sets the configuration_url of this RepositoryPreReceiveHook.


        :param configuration_url: The configuration_url of this RepositoryPreReceiveHook.
        :type configuration_url: str
        """

        self._configuration_url = configuration_url

    @property
    def enforcement(self):
        """Gets the enforcement of this RepositoryPreReceiveHook.


        :return: The enforcement of this RepositoryPreReceiveHook.
        :rtype: str
        """
        return self._enforcement

    @enforcement.setter
    def enforcement(self, enforcement):
        """Sets the enforcement of this RepositoryPreReceiveHook.


        :param enforcement: The enforcement of this RepositoryPreReceiveHook.
        :type enforcement: str
        """

        self._enforcement = enforcement

    @property
    def id(self):
        """Gets the id of this RepositoryPreReceiveHook.


        :return: The id of this RepositoryPreReceiveHook.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RepositoryPreReceiveHook.


        :param id: The id of this RepositoryPreReceiveHook.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this RepositoryPreReceiveHook.


        :return: The name of this RepositoryPreReceiveHook.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RepositoryPreReceiveHook.


        :param name: The name of this RepositoryPreReceiveHook.
        :type name: str
        """

        self._name = name
