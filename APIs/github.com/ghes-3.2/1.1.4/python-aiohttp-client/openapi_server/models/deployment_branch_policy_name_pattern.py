# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentBranchPolicyNamePattern(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None):
        """DeploymentBranchPolicyNamePattern - a model defined in OpenAPI

        :param name: The name of this DeploymentBranchPolicyNamePattern.
        """
        self.openapi_types = {
            'name': str
        }

        self.attribute_map = {
            'name': 'name'
        }

        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentBranchPolicyNamePattern':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The deployment-branch-policy-name-pattern of this DeploymentBranchPolicyNamePattern.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DeploymentBranchPolicyNamePattern.

        The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`. For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).

        :return: The name of this DeploymentBranchPolicyNamePattern.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeploymentBranchPolicyNamePattern.

        The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`. For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).

        :param name: The name of this DeploymentBranchPolicyNamePattern.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
