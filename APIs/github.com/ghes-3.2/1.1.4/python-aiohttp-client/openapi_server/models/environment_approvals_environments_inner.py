# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnvironmentApprovalsEnvironmentsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, html_url: str=None, id: int=None, name: str=None, node_id: str=None, updated_at: datetime=None, url: str=None):
        """EnvironmentApprovalsEnvironmentsInner - a model defined in OpenAPI

        :param created_at: The created_at of this EnvironmentApprovalsEnvironmentsInner.
        :param html_url: The html_url of this EnvironmentApprovalsEnvironmentsInner.
        :param id: The id of this EnvironmentApprovalsEnvironmentsInner.
        :param name: The name of this EnvironmentApprovalsEnvironmentsInner.
        :param node_id: The node_id of this EnvironmentApprovalsEnvironmentsInner.
        :param updated_at: The updated_at of this EnvironmentApprovalsEnvironmentsInner.
        :param url: The url of this EnvironmentApprovalsEnvironmentsInner.
        """
        self.openapi_types = {
            'created_at': datetime,
            'html_url': str,
            'id': int,
            'name': str,
            'node_id': str,
            'updated_at': datetime,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'html_url': 'html_url',
            'id': 'id',
            'name': 'name',
            'node_id': 'node_id',
            'updated_at': 'updated_at',
            'url': 'url'
        }

        self._created_at = created_at
        self._html_url = html_url
        self._id = id
        self._name = name
        self._node_id = node_id
        self._updated_at = updated_at
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentApprovalsEnvironmentsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The environment_approvals_environments_inner of this EnvironmentApprovalsEnvironmentsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this EnvironmentApprovalsEnvironmentsInner.

        The time that the environment was created, in ISO 8601 format.

        :return: The created_at of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this EnvironmentApprovalsEnvironmentsInner.

        The time that the environment was created, in ISO 8601 format.

        :param created_at: The created_at of this EnvironmentApprovalsEnvironmentsInner.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def html_url(self):
        """Gets the html_url of this EnvironmentApprovalsEnvironmentsInner.


        :return: The html_url of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this EnvironmentApprovalsEnvironmentsInner.


        :param html_url: The html_url of this EnvironmentApprovalsEnvironmentsInner.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def id(self):
        """Gets the id of this EnvironmentApprovalsEnvironmentsInner.

        The id of the environment.

        :return: The id of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EnvironmentApprovalsEnvironmentsInner.

        The id of the environment.

        :param id: The id of this EnvironmentApprovalsEnvironmentsInner.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this EnvironmentApprovalsEnvironmentsInner.

        The name of the environment.

        :return: The name of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EnvironmentApprovalsEnvironmentsInner.

        The name of the environment.

        :param name: The name of this EnvironmentApprovalsEnvironmentsInner.
        :type name: str
        """

        self._name = name

    @property
    def node_id(self):
        """Gets the node_id of this EnvironmentApprovalsEnvironmentsInner.


        :return: The node_id of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this EnvironmentApprovalsEnvironmentsInner.


        :param node_id: The node_id of this EnvironmentApprovalsEnvironmentsInner.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def updated_at(self):
        """Gets the updated_at of this EnvironmentApprovalsEnvironmentsInner.

        The time that the environment was last updated, in ISO 8601 format.

        :return: The updated_at of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this EnvironmentApprovalsEnvironmentsInner.

        The time that the environment was last updated, in ISO 8601 format.

        :param updated_at: The updated_at of this EnvironmentApprovalsEnvironmentsInner.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this EnvironmentApprovalsEnvironmentsInner.


        :return: The url of this EnvironmentApprovalsEnvironmentsInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this EnvironmentApprovalsEnvironmentsInner.


        :param url: The url of this EnvironmentApprovalsEnvironmentsInner.
        :type url: str
        """

        self._url = url
