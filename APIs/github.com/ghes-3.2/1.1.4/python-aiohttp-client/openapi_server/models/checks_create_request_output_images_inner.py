# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChecksCreateRequestOutputImagesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt: str=None, caption: str=None, image_url: str=None):
        """ChecksCreateRequestOutputImagesInner - a model defined in OpenAPI

        :param alt: The alt of this ChecksCreateRequestOutputImagesInner.
        :param caption: The caption of this ChecksCreateRequestOutputImagesInner.
        :param image_url: The image_url of this ChecksCreateRequestOutputImagesInner.
        """
        self.openapi_types = {
            'alt': str,
            'caption': str,
            'image_url': str
        }

        self.attribute_map = {
            'alt': 'alt',
            'caption': 'caption',
            'image_url': 'image_url'
        }

        self._alt = alt
        self._caption = caption
        self._image_url = image_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChecksCreateRequestOutputImagesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The checks_create_request_output_images_inner of this ChecksCreateRequestOutputImagesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt(self):
        """Gets the alt of this ChecksCreateRequestOutputImagesInner.

        The alternative text for the image.

        :return: The alt of this ChecksCreateRequestOutputImagesInner.
        :rtype: str
        """
        return self._alt

    @alt.setter
    def alt(self, alt):
        """Sets the alt of this ChecksCreateRequestOutputImagesInner.

        The alternative text for the image.

        :param alt: The alt of this ChecksCreateRequestOutputImagesInner.
        :type alt: str
        """
        if alt is None:
            raise ValueError("Invalid value for `alt`, must not be `None`")

        self._alt = alt

    @property
    def caption(self):
        """Gets the caption of this ChecksCreateRequestOutputImagesInner.

        A short image description.

        :return: The caption of this ChecksCreateRequestOutputImagesInner.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this ChecksCreateRequestOutputImagesInner.

        A short image description.

        :param caption: The caption of this ChecksCreateRequestOutputImagesInner.
        :type caption: str
        """

        self._caption = caption

    @property
    def image_url(self):
        """Gets the image_url of this ChecksCreateRequestOutputImagesInner.

        The full URL of the image.

        :return: The image_url of this ChecksCreateRequestOutputImagesInner.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ChecksCreateRequestOutputImagesInner.

        The full URL of the image.

        :param image_url: The image_url of this ChecksCreateRequestOutputImagesInner.
        :type image_url: str
        """
        if image_url is None:
            raise ValueError("Invalid value for `image_url`, must not be `None`")

        self._image_url = image_url
