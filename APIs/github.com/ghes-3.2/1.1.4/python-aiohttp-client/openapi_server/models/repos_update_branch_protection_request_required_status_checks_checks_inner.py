# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: int=None, context: str=None):
        """ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner - a model defined in OpenAPI

        :param app_id: The app_id of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        :param context: The context of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        """
        self.openapi_types = {
            'app_id': int,
            'context': str
        }

        self.attribute_map = {
            'app_id': 'app_id',
            'context': 'context'
        }

        self._app_id = app_id
        self._context = context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_update_branch_protection_request_required_status_checks_checks_inner of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.

        The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.

        :return: The app_id of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        :rtype: int
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.

        The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.

        :param app_id: The app_id of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        :type app_id: int
        """

        self._app_id = app_id

    @property
    def context(self):
        """Gets the context of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.

        The name of the required check

        :return: The context of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.

        The name of the required check

        :param context: The context of this ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner.
        :type context: str
        """
        if context is None:
            raise ValueError("Invalid value for `context`, must not be `None`")

        self._context = context
