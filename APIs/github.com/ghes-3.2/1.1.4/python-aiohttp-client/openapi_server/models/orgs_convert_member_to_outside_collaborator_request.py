# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrgsConvertMemberToOutsideCollaboratorRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _async: bool=False):
        """OrgsConvertMemberToOutsideCollaboratorRequest - a model defined in OpenAPI

        :param _async: The _async of this OrgsConvertMemberToOutsideCollaboratorRequest.
        """
        self.openapi_types = {
            '_async': bool
        }

        self.attribute_map = {
            '_async': 'async'
        }

        self.__async = _async

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrgsConvertMemberToOutsideCollaboratorRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The orgs_convert_member_to_outside_collaborator_request of this OrgsConvertMemberToOutsideCollaboratorRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _async(self):
        """Gets the _async of this OrgsConvertMemberToOutsideCollaboratorRequest.

        When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully queued.

        :return: The _async of this OrgsConvertMemberToOutsideCollaboratorRequest.
        :rtype: bool
        """
        return self.__async

    @_async.setter
    def _async(self, _async):
        """Sets the _async of this OrgsConvertMemberToOutsideCollaboratorRequest.

        When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully queued.

        :param _async: The _async of this OrgsConvertMemberToOutsideCollaboratorRequest.
        :type _async: bool
        """

        self.__async = _async
