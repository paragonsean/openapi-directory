# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterpriseSettingsEnterpriseCustomer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, name: str=None, public_key_data: str=None, secret_key_data: str=None, uuid: str=None):
        """EnterpriseSettingsEnterpriseCustomer - a model defined in OpenAPI

        :param email: The email of this EnterpriseSettingsEnterpriseCustomer.
        :param name: The name of this EnterpriseSettingsEnterpriseCustomer.
        :param public_key_data: The public_key_data of this EnterpriseSettingsEnterpriseCustomer.
        :param secret_key_data: The secret_key_data of this EnterpriseSettingsEnterpriseCustomer.
        :param uuid: The uuid of this EnterpriseSettingsEnterpriseCustomer.
        """
        self.openapi_types = {
            'email': str,
            'name': str,
            'public_key_data': str,
            'secret_key_data': str,
            'uuid': str
        }

        self.attribute_map = {
            'email': 'email',
            'name': 'name',
            'public_key_data': 'public_key_data',
            'secret_key_data': 'secret_key_data',
            'uuid': 'uuid'
        }

        self._email = email
        self._name = name
        self._public_key_data = public_key_data
        self._secret_key_data = secret_key_data
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseSettingsEnterpriseCustomer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise_settings_enterprise_customer of this EnterpriseSettingsEnterpriseCustomer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this EnterpriseSettingsEnterpriseCustomer.


        :return: The email of this EnterpriseSettingsEnterpriseCustomer.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this EnterpriseSettingsEnterpriseCustomer.


        :param email: The email of this EnterpriseSettingsEnterpriseCustomer.
        :type email: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this EnterpriseSettingsEnterpriseCustomer.


        :return: The name of this EnterpriseSettingsEnterpriseCustomer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EnterpriseSettingsEnterpriseCustomer.


        :param name: The name of this EnterpriseSettingsEnterpriseCustomer.
        :type name: str
        """

        self._name = name

    @property
    def public_key_data(self):
        """Gets the public_key_data of this EnterpriseSettingsEnterpriseCustomer.


        :return: The public_key_data of this EnterpriseSettingsEnterpriseCustomer.
        :rtype: str
        """
        return self._public_key_data

    @public_key_data.setter
    def public_key_data(self, public_key_data):
        """Sets the public_key_data of this EnterpriseSettingsEnterpriseCustomer.


        :param public_key_data: The public_key_data of this EnterpriseSettingsEnterpriseCustomer.
        :type public_key_data: str
        """

        self._public_key_data = public_key_data

    @property
    def secret_key_data(self):
        """Gets the secret_key_data of this EnterpriseSettingsEnterpriseCustomer.


        :return: The secret_key_data of this EnterpriseSettingsEnterpriseCustomer.
        :rtype: str
        """
        return self._secret_key_data

    @secret_key_data.setter
    def secret_key_data(self, secret_key_data):
        """Sets the secret_key_data of this EnterpriseSettingsEnterpriseCustomer.


        :param secret_key_data: The secret_key_data of this EnterpriseSettingsEnterpriseCustomer.
        :type secret_key_data: str
        """

        self._secret_key_data = secret_key_data

    @property
    def uuid(self):
        """Gets the uuid of this EnterpriseSettingsEnterpriseCustomer.


        :return: The uuid of this EnterpriseSettingsEnterpriseCustomer.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this EnterpriseSettingsEnterpriseCustomer.


        :param uuid: The uuid of this EnterpriseSettingsEnterpriseCustomer.
        :type uuid: str
        """

        self._uuid = uuid
