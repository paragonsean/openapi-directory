# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssuesRemoveAssigneesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignees: List[str]=None):
        """IssuesRemoveAssigneesRequest - a model defined in OpenAPI

        :param assignees: The assignees of this IssuesRemoveAssigneesRequest.
        """
        self.openapi_types = {
            'assignees': List[str]
        }

        self.attribute_map = {
            'assignees': 'assignees'
        }

        self._assignees = assignees

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssuesRemoveAssigneesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The issues_remove_assignees_request of this IssuesRemoveAssigneesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignees(self):
        """Gets the assignees of this IssuesRemoveAssigneesRequest.

        Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._

        :return: The assignees of this IssuesRemoveAssigneesRequest.
        :rtype: List[str]
        """
        return self._assignees

    @assignees.setter
    def assignees(self, assignees):
        """Sets the assignees of this IssuesRemoveAssigneesRequest.

        Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._

        :param assignees: The assignees of this IssuesRemoveAssigneesRequest.
        :type assignees: List[str]
        """

        self._assignees = assignees
