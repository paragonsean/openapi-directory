# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterpriseSettingsEnterpriseSaml(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate: str=None, certificate_path: str=None, disable_admin_demote: bool=None, idp_initiated_sso: bool=None, issuer: str=None, sso_url: str=None):
        """EnterpriseSettingsEnterpriseSaml - a model defined in OpenAPI

        :param certificate: The certificate of this EnterpriseSettingsEnterpriseSaml.
        :param certificate_path: The certificate_path of this EnterpriseSettingsEnterpriseSaml.
        :param disable_admin_demote: The disable_admin_demote of this EnterpriseSettingsEnterpriseSaml.
        :param idp_initiated_sso: The idp_initiated_sso of this EnterpriseSettingsEnterpriseSaml.
        :param issuer: The issuer of this EnterpriseSettingsEnterpriseSaml.
        :param sso_url: The sso_url of this EnterpriseSettingsEnterpriseSaml.
        """
        self.openapi_types = {
            'certificate': str,
            'certificate_path': str,
            'disable_admin_demote': bool,
            'idp_initiated_sso': bool,
            'issuer': str,
            'sso_url': str
        }

        self.attribute_map = {
            'certificate': 'certificate',
            'certificate_path': 'certificate_path',
            'disable_admin_demote': 'disable_admin_demote',
            'idp_initiated_sso': 'idp_initiated_sso',
            'issuer': 'issuer',
            'sso_url': 'sso_url'
        }

        self._certificate = certificate
        self._certificate_path = certificate_path
        self._disable_admin_demote = disable_admin_demote
        self._idp_initiated_sso = idp_initiated_sso
        self._issuer = issuer
        self._sso_url = sso_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseSettingsEnterpriseSaml':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise_settings_enterprise_saml of this EnterpriseSettingsEnterpriseSaml.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate(self):
        """Gets the certificate of this EnterpriseSettingsEnterpriseSaml.


        :return: The certificate of this EnterpriseSettingsEnterpriseSaml.
        :rtype: str
        """
        return self._certificate

    @certificate.setter
    def certificate(self, certificate):
        """Sets the certificate of this EnterpriseSettingsEnterpriseSaml.


        :param certificate: The certificate of this EnterpriseSettingsEnterpriseSaml.
        :type certificate: str
        """

        self._certificate = certificate

    @property
    def certificate_path(self):
        """Gets the certificate_path of this EnterpriseSettingsEnterpriseSaml.


        :return: The certificate_path of this EnterpriseSettingsEnterpriseSaml.
        :rtype: str
        """
        return self._certificate_path

    @certificate_path.setter
    def certificate_path(self, certificate_path):
        """Sets the certificate_path of this EnterpriseSettingsEnterpriseSaml.


        :param certificate_path: The certificate_path of this EnterpriseSettingsEnterpriseSaml.
        :type certificate_path: str
        """

        self._certificate_path = certificate_path

    @property
    def disable_admin_demote(self):
        """Gets the disable_admin_demote of this EnterpriseSettingsEnterpriseSaml.


        :return: The disable_admin_demote of this EnterpriseSettingsEnterpriseSaml.
        :rtype: bool
        """
        return self._disable_admin_demote

    @disable_admin_demote.setter
    def disable_admin_demote(self, disable_admin_demote):
        """Sets the disable_admin_demote of this EnterpriseSettingsEnterpriseSaml.


        :param disable_admin_demote: The disable_admin_demote of this EnterpriseSettingsEnterpriseSaml.
        :type disable_admin_demote: bool
        """

        self._disable_admin_demote = disable_admin_demote

    @property
    def idp_initiated_sso(self):
        """Gets the idp_initiated_sso of this EnterpriseSettingsEnterpriseSaml.


        :return: The idp_initiated_sso of this EnterpriseSettingsEnterpriseSaml.
        :rtype: bool
        """
        return self._idp_initiated_sso

    @idp_initiated_sso.setter
    def idp_initiated_sso(self, idp_initiated_sso):
        """Sets the idp_initiated_sso of this EnterpriseSettingsEnterpriseSaml.


        :param idp_initiated_sso: The idp_initiated_sso of this EnterpriseSettingsEnterpriseSaml.
        :type idp_initiated_sso: bool
        """

        self._idp_initiated_sso = idp_initiated_sso

    @property
    def issuer(self):
        """Gets the issuer of this EnterpriseSettingsEnterpriseSaml.


        :return: The issuer of this EnterpriseSettingsEnterpriseSaml.
        :rtype: str
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this EnterpriseSettingsEnterpriseSaml.


        :param issuer: The issuer of this EnterpriseSettingsEnterpriseSaml.
        :type issuer: str
        """

        self._issuer = issuer

    @property
    def sso_url(self):
        """Gets the sso_url of this EnterpriseSettingsEnterpriseSaml.


        :return: The sso_url of this EnterpriseSettingsEnterpriseSaml.
        :rtype: str
        """
        return self._sso_url

    @sso_url.setter
    def sso_url(self, sso_url):
        """Sets the sso_url of this EnterpriseSettingsEnterpriseSaml.


        :param sso_url: The sso_url of this EnterpriseSettingsEnterpriseSaml.
        :type sso_url: str
        """

        self._sso_url = sso_url
