# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CodeScanningAnalysisDeletion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirm_delete_url: str=None, next_analysis_url: str=None):
        """CodeScanningAnalysisDeletion - a model defined in OpenAPI

        :param confirm_delete_url: The confirm_delete_url of this CodeScanningAnalysisDeletion.
        :param next_analysis_url: The next_analysis_url of this CodeScanningAnalysisDeletion.
        """
        self.openapi_types = {
            'confirm_delete_url': str,
            'next_analysis_url': str
        }

        self.attribute_map = {
            'confirm_delete_url': 'confirm_delete_url',
            'next_analysis_url': 'next_analysis_url'
        }

        self._confirm_delete_url = confirm_delete_url
        self._next_analysis_url = next_analysis_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodeScanningAnalysisDeletion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The code-scanning-analysis-deletion of this CodeScanningAnalysisDeletion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirm_delete_url(self):
        """Gets the confirm_delete_url of this CodeScanningAnalysisDeletion.

        Next deletable analysis in chain, with last analysis deletion confirmation

        :return: The confirm_delete_url of this CodeScanningAnalysisDeletion.
        :rtype: str
        """
        return self._confirm_delete_url

    @confirm_delete_url.setter
    def confirm_delete_url(self, confirm_delete_url):
        """Sets the confirm_delete_url of this CodeScanningAnalysisDeletion.

        Next deletable analysis in chain, with last analysis deletion confirmation

        :param confirm_delete_url: The confirm_delete_url of this CodeScanningAnalysisDeletion.
        :type confirm_delete_url: str
        """
        if confirm_delete_url is None:
            raise ValueError("Invalid value for `confirm_delete_url`, must not be `None`")

        self._confirm_delete_url = confirm_delete_url

    @property
    def next_analysis_url(self):
        """Gets the next_analysis_url of this CodeScanningAnalysisDeletion.

        Next deletable analysis in chain, without last analysis deletion confirmation

        :return: The next_analysis_url of this CodeScanningAnalysisDeletion.
        :rtype: str
        """
        return self._next_analysis_url

    @next_analysis_url.setter
    def next_analysis_url(self, next_analysis_url):
        """Sets the next_analysis_url of this CodeScanningAnalysisDeletion.

        Next deletable analysis in chain, without last analysis deletion confirmation

        :param next_analysis_url: The next_analysis_url of this CodeScanningAnalysisDeletion.
        :type next_analysis_url: str
        """
        if next_analysis_url is None:
            raise ValueError("Invalid value for `next_analysis_url`, must not be `None`")

        self._next_analysis_url = next_analysis_url
