# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentBranchPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, node_id: str=None):
        """DeploymentBranchPolicy - a model defined in OpenAPI

        :param id: The id of this DeploymentBranchPolicy.
        :param name: The name of this DeploymentBranchPolicy.
        :param node_id: The node_id of this DeploymentBranchPolicy.
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'node_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'node_id': 'node_id'
        }

        self._id = id
        self._name = name
        self._node_id = node_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentBranchPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The deployment-branch-policy of this DeploymentBranchPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DeploymentBranchPolicy.

        The unique identifier of the branch policy.

        :return: The id of this DeploymentBranchPolicy.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeploymentBranchPolicy.

        The unique identifier of the branch policy.

        :param id: The id of this DeploymentBranchPolicy.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DeploymentBranchPolicy.

        The name pattern that branches must match in order to deploy to the environment.

        :return: The name of this DeploymentBranchPolicy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeploymentBranchPolicy.

        The name pattern that branches must match in order to deploy to the environment.

        :param name: The name of this DeploymentBranchPolicy.
        :type name: str
        """

        self._name = name

    @property
    def node_id(self):
        """Gets the node_id of this DeploymentBranchPolicy.


        :return: The node_id of this DeploymentBranchPolicy.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this DeploymentBranchPolicy.


        :param node_id: The node_id of this DeploymentBranchPolicy.
        :type node_id: str
        """

        self._node_id = node_id
