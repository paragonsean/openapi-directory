# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PullsCreateReplyForReviewCommentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None):
        """PullsCreateReplyForReviewCommentRequest - a model defined in OpenAPI

        :param body: The body of this PullsCreateReplyForReviewCommentRequest.
        """
        self.openapi_types = {
            'body': str
        }

        self.attribute_map = {
            'body': 'body'
        }

        self._body = body

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullsCreateReplyForReviewCommentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pulls_create_reply_for_review_comment_request of this PullsCreateReplyForReviewCommentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this PullsCreateReplyForReviewCommentRequest.

        The text of the review comment.

        :return: The body of this PullsCreateReplyForReviewCommentRequest.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this PullsCreateReplyForReviewCommentRequest.

        The text of the review comment.

        :param body: The body of this PullsCreateReplyForReviewCommentRequest.
        :type body: str
        """
        if body is None:
            raise ValueError("Invalid value for `body`, must not be `None`")

        self._body = body
