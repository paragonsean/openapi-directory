/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitHubV3RestApi);
  }
}(this, function(expect, GitHubV3RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitHubV3RestApi.OrganizationFull();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationFull', function() {
    it('should create an instance of OrganizationFull', function() {
      // uncomment below and update the code to test OrganizationFull
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be.a(GitHubV3RestApi.OrganizationFull);
    });

    it('should have the property avatarUrl (base name: "avatar_url")', function() {
      // uncomment below and update the code to test the property avatarUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property billingEmail (base name: "billing_email")', function() {
      // uncomment below and update the code to test the property billingEmail
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property blog (base name: "blog")', function() {
      // uncomment below and update the code to test the property blog
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property collaborators (base name: "collaborators")', function() {
      // uncomment below and update the code to test the property collaborators
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property defaultRepositoryPermission (base name: "default_repository_permission")', function() {
      // uncomment below and update the code to test the property defaultRepositoryPermission
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property diskUsage (base name: "disk_usage")', function() {
      // uncomment below and update the code to test the property diskUsage
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property eventsUrl (base name: "events_url")', function() {
      // uncomment below and update the code to test the property eventsUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property followers (base name: "followers")', function() {
      // uncomment below and update the code to test the property followers
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property following (base name: "following")', function() {
      // uncomment below and update the code to test the property following
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property hasOrganizationProjects (base name: "has_organization_projects")', function() {
      // uncomment below and update the code to test the property hasOrganizationProjects
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property hasRepositoryProjects (base name: "has_repository_projects")', function() {
      // uncomment below and update the code to test the property hasRepositoryProjects
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property hooksUrl (base name: "hooks_url")', function() {
      // uncomment below and update the code to test the property hooksUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property htmlUrl (base name: "html_url")', function() {
      // uncomment below and update the code to test the property htmlUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property issuesUrl (base name: "issues_url")', function() {
      // uncomment below and update the code to test the property issuesUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property login (base name: "login")', function() {
      // uncomment below and update the code to test the property login
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property membersAllowedRepositoryCreationType (base name: "members_allowed_repository_creation_type")', function() {
      // uncomment below and update the code to test the property membersAllowedRepositoryCreationType
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property membersCanCreatePages (base name: "members_can_create_pages")', function() {
      // uncomment below and update the code to test the property membersCanCreatePages
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property membersCanCreatePrivatePages (base name: "members_can_create_private_pages")', function() {
      // uncomment below and update the code to test the property membersCanCreatePrivatePages
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property membersCanCreatePublicPages (base name: "members_can_create_public_pages")', function() {
      // uncomment below and update the code to test the property membersCanCreatePublicPages
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property membersCanCreateRepositories (base name: "members_can_create_repositories")', function() {
      // uncomment below and update the code to test the property membersCanCreateRepositories
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property membersUrl (base name: "members_url")', function() {
      // uncomment below and update the code to test the property membersUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property nodeId (base name: "node_id")', function() {
      // uncomment below and update the code to test the property nodeId
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property ownedPrivateRepos (base name: "owned_private_repos")', function() {
      // uncomment below and update the code to test the property ownedPrivateRepos
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property plan (base name: "plan")', function() {
      // uncomment below and update the code to test the property plan
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property privateGists (base name: "private_gists")', function() {
      // uncomment below and update the code to test the property privateGists
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property publicGists (base name: "public_gists")', function() {
      // uncomment below and update the code to test the property publicGists
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property publicMembersUrl (base name: "public_members_url")', function() {
      // uncomment below and update the code to test the property publicMembersUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property publicRepos (base name: "public_repos")', function() {
      // uncomment below and update the code to test the property publicRepos
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property reposUrl (base name: "repos_url")', function() {
      // uncomment below and update the code to test the property reposUrl
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property totalPrivateRepos (base name: "total_private_repos")', function() {
      // uncomment below and update the code to test the property totalPrivateRepos
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property twoFactorRequirementEnabled (base name: "two_factor_requirement_enabled")', function() {
      // uncomment below and update the code to test the property twoFactorRequirementEnabled
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new GitHubV3RestApi.OrganizationFull();
      //expect(instance).to.be();
    });

  });

}));
