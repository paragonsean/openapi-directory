/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReposAddCollaboratorRequest model module.
 * @module model/ReposAddCollaboratorRequest
 * @version 1.1.4
 */
class ReposAddCollaboratorRequest {
    /**
     * Constructs a new <code>ReposAddCollaboratorRequest</code>.
     * @alias module:model/ReposAddCollaboratorRequest
     */
    constructor() { 
        
        ReposAddCollaboratorRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['permission'] = 'push';
    }

    /**
     * Constructs a <code>ReposAddCollaboratorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReposAddCollaboratorRequest} obj Optional instance to populate.
     * @return {module:model/ReposAddCollaboratorRequest} The populated <code>ReposAddCollaboratorRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReposAddCollaboratorRequest();

            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReposAddCollaboratorRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReposAddCollaboratorRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['permission'] && !(typeof data['permission'] === 'string' || data['permission'] instanceof String)) {
            throw new Error("Expected the field `permission` to be a primitive type in the JSON string but got " + data['permission']);
        }
        // ensure the json data is a string
        if (data['permissions'] && !(typeof data['permissions'] === 'string' || data['permissions'] instanceof String)) {
            throw new Error("Expected the field `permissions` to be a primitive type in the JSON string but got " + data['permissions']);
        }

        return true;
    }


}



/**
 * The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:   \\* `pull` - can pull, but not push to or administer this repository.   \\* `push` - can pull and push, but not administer this repository.   \\* `admin` - can pull, push and administer this repository.   \\* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.   \\* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.  \\* custom repository role name - Can assign a custom repository role if the owning organization has defined any.
 * @member {module:model/ReposAddCollaboratorRequest.PermissionEnum} permission
 * @default 'push'
 */
ReposAddCollaboratorRequest.prototype['permission'] = 'push';

/**
 * @member {String} permissions
 */
ReposAddCollaboratorRequest.prototype['permissions'] = undefined;





/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
ReposAddCollaboratorRequest['PermissionEnum'] = {

    /**
     * value: "pull"
     * @const
     */
    "pull": "pull",

    /**
     * value: "push"
     * @const
     */
    "push": "push",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "maintain"
     * @const
     */
    "maintain": "maintain",

    /**
     * value: "triage"
     * @const
     */
    "triage": "triage"
};



export default ReposAddCollaboratorRequest;

