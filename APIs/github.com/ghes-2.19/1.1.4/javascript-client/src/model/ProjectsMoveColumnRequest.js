/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectsMoveColumnRequest model module.
 * @module model/ProjectsMoveColumnRequest
 * @version 1.1.4
 */
class ProjectsMoveColumnRequest {
    /**
     * Constructs a new <code>ProjectsMoveColumnRequest</code>.
     * @alias module:model/ProjectsMoveColumnRequest
     * @param position {String} The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.
     */
    constructor(position) { 
        
        ProjectsMoveColumnRequest.initialize(this, position);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, position) { 
        obj['position'] = position;
    }

    /**
     * Constructs a <code>ProjectsMoveColumnRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectsMoveColumnRequest} obj Optional instance to populate.
     * @return {module:model/ProjectsMoveColumnRequest} The populated <code>ProjectsMoveColumnRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectsMoveColumnRequest();

            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectsMoveColumnRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectsMoveColumnRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProjectsMoveColumnRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }

        return true;
    }


}

ProjectsMoveColumnRequest.RequiredProperties = ["position"];

/**
 * The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.
 * @member {String} position
 */
ProjectsMoveColumnRequest.prototype['position'] = undefined;






export default ProjectsMoveColumnRequest;

