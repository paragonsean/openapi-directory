/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChecksCreateRequestActionsInner from './ChecksCreateRequestActionsInner';
import ChecksCreateRequestOneOf from './ChecksCreateRequestOneOf';
import ChecksCreateRequestOneOf1 from './ChecksCreateRequestOneOf1';
import ChecksCreateRequestOutput from './ChecksCreateRequestOutput';

/**
 * The ChecksCreateRequest model module.
 * @module model/ChecksCreateRequest
 * @version 1.1.4
 */
class ChecksCreateRequest {
    /**
     * Constructs a new <code>ChecksCreateRequest</code>.
     * @alias module:model/ChecksCreateRequest
     * @param {(module:model/ChecksCreateRequestOneOf|module:model/ChecksCreateRequestOneOf1)} instance The actual instance to initialize ChecksCreateRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ChecksCreateRequestOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ChecksCreateRequestOneOf.validateJSON(instance); // throw an exception if no match
                // create ChecksCreateRequestOneOf from JS object
                this.actualInstance = ChecksCreateRequestOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ChecksCreateRequestOneOf
            errorMessages.push("Failed to construct ChecksCreateRequestOneOf: " + err)
        }

        try {
            if (typeof instance === "ChecksCreateRequestOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ChecksCreateRequestOneOf1.validateJSON(instance); // throw an exception if no match
                // create ChecksCreateRequestOneOf1 from JS object
                this.actualInstance = ChecksCreateRequestOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ChecksCreateRequestOneOf1
            errorMessages.push("Failed to construct ChecksCreateRequestOneOf1: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ChecksCreateRequest` with oneOf schemas ChecksCreateRequestOneOf, ChecksCreateRequestOneOf1. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ChecksCreateRequest` with oneOf schemas ChecksCreateRequestOneOf, ChecksCreateRequestOneOf1. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ChecksCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChecksCreateRequest} obj Optional instance to populate.
     * @return {module:model/ChecksCreateRequest} The populated <code>ChecksCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ChecksCreateRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>ChecksCreateRequestOneOf</code>, <code>ChecksCreateRequestOneOf1</code>.
     * @return {(module:model/ChecksCreateRequestOneOf|module:model/ChecksCreateRequestOneOf1)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ChecksCreateRequestOneOf</code>, <code>ChecksCreateRequestOneOf1</code>.
     * @param {(module:model/ChecksCreateRequestOneOf|module:model/ChecksCreateRequestOneOf1)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ChecksCreateRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ChecksCreateRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ChecksCreateRequest} An instance of ChecksCreateRequest.
     */
    static fromJSON = function(json_string){
        return ChecksCreateRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/enterprise-server@2.19/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/enterprise-server@2.19/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.19/rest/reference/checks#check-runs-and-requested-actions).\" To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/enterprise-server@2.19/rest/reference/checks#check-runs-and-requested-actions).\"
 * @member {Array.<module:model/ChecksCreateRequestActionsInner>} actions
 */
ChecksCreateRequest.prototype['actions'] = undefined;

/**
 * The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} completed_at
 */
ChecksCreateRequest.prototype['completed_at'] = undefined;

/**
 * **Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.   **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.
 * @member {module:model/ChecksCreateRequest.ConclusionEnum} conclusion
 */
ChecksCreateRequest.prototype['conclusion'] = undefined;

/**
 * The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.
 * @member {String} details_url
 */
ChecksCreateRequest.prototype['details_url'] = undefined;

/**
 * A reference for the run on the integrator's system.
 * @member {String} external_id
 */
ChecksCreateRequest.prototype['external_id'] = undefined;

/**
 * The SHA of the commit.
 * @member {String} head_sha
 */
ChecksCreateRequest.prototype['head_sha'] = undefined;

/**
 * The name of the check. For example, \"code-coverage\".
 * @member {String} name
 */
ChecksCreateRequest.prototype['name'] = undefined;

/**
 * @member {module:model/ChecksCreateRequestOutput} output
 */
ChecksCreateRequest.prototype['output'] = undefined;

/**
 * The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} started_at
 */
ChecksCreateRequest.prototype['started_at'] = undefined;

/**
 * The current status. Can be one of `queued`, `in_progress`, or `completed`.
 * @member {module:model/ChecksCreateRequest.StatusEnum} status
 * @default 'queued'
 */
ChecksCreateRequest.prototype['status'] = 'queued';


ChecksCreateRequest.OneOf = ["ChecksCreateRequestOneOf", "ChecksCreateRequestOneOf1"];

export default ChecksCreateRequest;

