/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:08:39.483482-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner {
  public static final String SERIALIZED_NAME_AVATAR_URL = "avatar_url";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EVENTS_URL = "events_url";
  @SerializedName(SERIALIZED_NAME_EVENTS_URL)
  private String eventsUrl;

  public static final String SERIALIZED_NAME_HOOKS_URL = "hooks_url";
  @SerializedName(SERIALIZED_NAME_HOOKS_URL)
  private String hooksUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_ISSUES_URL = "issues_url";
  @SerializedName(SERIALIZED_NAME_ISSUES_URL)
  private String issuesUrl;

  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  private String login;

  public static final String SERIALIZED_NAME_MEMBERS_URL = "members_url";
  @SerializedName(SERIALIZED_NAME_MEMBERS_URL)
  private String membersUrl;

  public static final String SERIALIZED_NAME_NODE_ID = "node_id";
  @SerializedName(SERIALIZED_NAME_NODE_ID)
  private String nodeId;

  public static final String SERIALIZED_NAME_PUBLIC_MEMBERS_URL = "public_members_url";
  @SerializedName(SERIALIZED_NAME_PUBLIC_MEMBERS_URL)
  private String publicMembersUrl;

  public static final String SERIALIZED_NAME_REPOS_URL = "repos_url";
  @SerializedName(SERIALIZED_NAME_REPOS_URL)
  private String reposUrl;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner() {
  }

  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * Get avatarUrl
   * @return avatarUrl
   */
  @javax.annotation.Nullable
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner eventsUrl(String eventsUrl) {
    this.eventsUrl = eventsUrl;
    return this;
  }

  /**
   * Get eventsUrl
   * @return eventsUrl
   */
  @javax.annotation.Nullable
  public String getEventsUrl() {
    return eventsUrl;
  }

  public void setEventsUrl(String eventsUrl) {
    this.eventsUrl = eventsUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner hooksUrl(String hooksUrl) {
    this.hooksUrl = hooksUrl;
    return this;
  }

  /**
   * Get hooksUrl
   * @return hooksUrl
   */
  @javax.annotation.Nullable
  public String getHooksUrl() {
    return hooksUrl;
  }

  public void setHooksUrl(String hooksUrl) {
    this.hooksUrl = hooksUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner issuesUrl(String issuesUrl) {
    this.issuesUrl = issuesUrl;
    return this;
  }

  /**
   * Get issuesUrl
   * @return issuesUrl
   */
  @javax.annotation.Nullable
  public String getIssuesUrl() {
    return issuesUrl;
  }

  public void setIssuesUrl(String issuesUrl) {
    this.issuesUrl = issuesUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner login(String login) {
    this.login = login;
    return this;
  }

  /**
   * Get login
   * @return login
   */
  @javax.annotation.Nullable
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner membersUrl(String membersUrl) {
    this.membersUrl = membersUrl;
    return this;
  }

  /**
   * Get membersUrl
   * @return membersUrl
   */
  @javax.annotation.Nullable
  public String getMembersUrl() {
    return membersUrl;
  }

  public void setMembersUrl(String membersUrl) {
    this.membersUrl = membersUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

  /**
   * Get nodeId
   * @return nodeId
   */
  @javax.annotation.Nullable
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner publicMembersUrl(String publicMembersUrl) {
    this.publicMembersUrl = publicMembersUrl;
    return this;
  }

  /**
   * Get publicMembersUrl
   * @return publicMembersUrl
   */
  @javax.annotation.Nullable
  public String getPublicMembersUrl() {
    return publicMembersUrl;
  }

  public void setPublicMembersUrl(String publicMembersUrl) {
    this.publicMembersUrl = publicMembersUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner reposUrl(String reposUrl) {
    this.reposUrl = reposUrl;
    return this;
  }

  /**
   * Get reposUrl
   * @return reposUrl
   */
  @javax.annotation.Nullable
  public String getReposUrl() {
    return reposUrl;
  }

  public void setReposUrl(String reposUrl) {
    this.reposUrl = reposUrl;
  }


  public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner branchRestrictionPolicyRestrictionsInnerAppsInnerOwner = (BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner) o;
    return Objects.equals(this.avatarUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.avatarUrl) &&
        Objects.equals(this.description, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.description) &&
        Objects.equals(this.eventsUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.eventsUrl) &&
        Objects.equals(this.hooksUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.hooksUrl) &&
        Objects.equals(this.id, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.id) &&
        Objects.equals(this.issuesUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.issuesUrl) &&
        Objects.equals(this.login, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.login) &&
        Objects.equals(this.membersUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.membersUrl) &&
        Objects.equals(this.nodeId, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.nodeId) &&
        Objects.equals(this.publicMembersUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.publicMembersUrl) &&
        Objects.equals(this.reposUrl, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.reposUrl) &&
        Objects.equals(this.url, branchRestrictionPolicyRestrictionsInnerAppsInnerOwner.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avatarUrl, description, eventsUrl, hooksUrl, id, issuesUrl, login, membersUrl, nodeId, publicMembersUrl, reposUrl, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner {\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventsUrl: ").append(toIndentedString(eventsUrl)).append("\n");
    sb.append("    hooksUrl: ").append(toIndentedString(hooksUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issuesUrl: ").append(toIndentedString(issuesUrl)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    membersUrl: ").append(toIndentedString(membersUrl)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    publicMembersUrl: ").append(toIndentedString(publicMembersUrl)).append("\n");
    sb.append("    reposUrl: ").append(toIndentedString(reposUrl)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avatar_url");
    openapiFields.add("description");
    openapiFields.add("events_url");
    openapiFields.add("hooks_url");
    openapiFields.add("id");
    openapiFields.add("issues_url");
    openapiFields.add("login");
    openapiFields.add("members_url");
    openapiFields.add("node_id");
    openapiFields.add("public_members_url");
    openapiFields.add("repos_url");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner is not found in the empty JSON string", BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("avatar_url") != null && !jsonObj.get("avatar_url").isJsonNull()) && !jsonObj.get("avatar_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_url").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("events_url") != null && !jsonObj.get("events_url").isJsonNull()) && !jsonObj.get("events_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `events_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("events_url").toString()));
      }
      if ((jsonObj.get("hooks_url") != null && !jsonObj.get("hooks_url").isJsonNull()) && !jsonObj.get("hooks_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hooks_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hooks_url").toString()));
      }
      if ((jsonObj.get("issues_url") != null && !jsonObj.get("issues_url").isJsonNull()) && !jsonObj.get("issues_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issues_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issues_url").toString()));
      }
      if ((jsonObj.get("login") != null && !jsonObj.get("login").isJsonNull()) && !jsonObj.get("login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login").toString()));
      }
      if ((jsonObj.get("members_url") != null && !jsonObj.get("members_url").isJsonNull()) && !jsonObj.get("members_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `members_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("members_url").toString()));
      }
      if ((jsonObj.get("node_id") != null && !jsonObj.get("node_id").isJsonNull()) && !jsonObj.get("node_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `node_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("node_id").toString()));
      }
      if ((jsonObj.get("public_members_url") != null && !jsonObj.get("public_members_url").isJsonNull()) && !jsonObj.get("public_members_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `public_members_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("public_members_url").toString()));
      }
      if ((jsonObj.get("repos_url") != null && !jsonObj.get("repos_url").isJsonNull()) && !jsonObj.get("repos_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repos_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repos_url").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner.class));

       return (TypeAdapter<T>) new TypeAdapter<BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner>() {
           @Override
           public void write(JsonWriter out, BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner
   * @throws IOException if the JSON string is invalid with respect to BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner
   */
  public static BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner.class);
  }

  /**
   * Convert an instance of BranchRestrictionPolicyRestrictionsInnerAppsInnerOwner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

