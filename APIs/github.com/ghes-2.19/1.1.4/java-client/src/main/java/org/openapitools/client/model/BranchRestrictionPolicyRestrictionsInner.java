/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BranchRestrictionPolicyRestrictionsInnerAppsInner;
import org.openapitools.client.model.BranchRestrictionPolicyRestrictionsInnerTeamsInner;
import org.openapitools.client.model.BranchRestrictionPolicyRestrictionsInnerUsersInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BranchRestrictionPolicyRestrictionsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:08:39.483482-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BranchRestrictionPolicyRestrictionsInner {
  public static final String SERIALIZED_NAME_APPS = "apps";
  @SerializedName(SERIALIZED_NAME_APPS)
  private List<BranchRestrictionPolicyRestrictionsInnerAppsInner> apps = new ArrayList<>();

  public static final String SERIALIZED_NAME_APPS_URL = "apps_url";
  @SerializedName(SERIALIZED_NAME_APPS_URL)
  private String appsUrl;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private List<BranchRestrictionPolicyRestrictionsInnerTeamsInner> teams = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEAMS_URL = "teams_url";
  @SerializedName(SERIALIZED_NAME_TEAMS_URL)
  private String teamsUrl;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private List<BranchRestrictionPolicyRestrictionsInnerUsersInner> users = new ArrayList<>();

  public static final String SERIALIZED_NAME_USERS_URL = "users_url";
  @SerializedName(SERIALIZED_NAME_USERS_URL)
  private String usersUrl;

  public BranchRestrictionPolicyRestrictionsInner() {
  }

  public BranchRestrictionPolicyRestrictionsInner apps(List<BranchRestrictionPolicyRestrictionsInnerAppsInner> apps) {
    this.apps = apps;
    return this;
  }

  public BranchRestrictionPolicyRestrictionsInner addAppsItem(BranchRestrictionPolicyRestrictionsInnerAppsInner appsItem) {
    if (this.apps == null) {
      this.apps = new ArrayList<>();
    }
    this.apps.add(appsItem);
    return this;
  }

  /**
   * Get apps
   * @return apps
   */
  @javax.annotation.Nullable
  public List<BranchRestrictionPolicyRestrictionsInnerAppsInner> getApps() {
    return apps;
  }

  public void setApps(List<BranchRestrictionPolicyRestrictionsInnerAppsInner> apps) {
    this.apps = apps;
  }


  public BranchRestrictionPolicyRestrictionsInner appsUrl(String appsUrl) {
    this.appsUrl = appsUrl;
    return this;
  }

  /**
   * Get appsUrl
   * @return appsUrl
   */
  @javax.annotation.Nullable
  public String getAppsUrl() {
    return appsUrl;
  }

  public void setAppsUrl(String appsUrl) {
    this.appsUrl = appsUrl;
  }


  public BranchRestrictionPolicyRestrictionsInner teams(List<BranchRestrictionPolicyRestrictionsInnerTeamsInner> teams) {
    this.teams = teams;
    return this;
  }

  public BranchRestrictionPolicyRestrictionsInner addTeamsItem(BranchRestrictionPolicyRestrictionsInnerTeamsInner teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

  /**
   * Get teams
   * @return teams
   */
  @javax.annotation.Nullable
  public List<BranchRestrictionPolicyRestrictionsInnerTeamsInner> getTeams() {
    return teams;
  }

  public void setTeams(List<BranchRestrictionPolicyRestrictionsInnerTeamsInner> teams) {
    this.teams = teams;
  }


  public BranchRestrictionPolicyRestrictionsInner teamsUrl(String teamsUrl) {
    this.teamsUrl = teamsUrl;
    return this;
  }

  /**
   * Get teamsUrl
   * @return teamsUrl
   */
  @javax.annotation.Nullable
  public String getTeamsUrl() {
    return teamsUrl;
  }

  public void setTeamsUrl(String teamsUrl) {
    this.teamsUrl = teamsUrl;
  }


  public BranchRestrictionPolicyRestrictionsInner url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public BranchRestrictionPolicyRestrictionsInner users(List<BranchRestrictionPolicyRestrictionsInnerUsersInner> users) {
    this.users = users;
    return this;
  }

  public BranchRestrictionPolicyRestrictionsInner addUsersItem(BranchRestrictionPolicyRestrictionsInnerUsersInner usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * Get users
   * @return users
   */
  @javax.annotation.Nullable
  public List<BranchRestrictionPolicyRestrictionsInnerUsersInner> getUsers() {
    return users;
  }

  public void setUsers(List<BranchRestrictionPolicyRestrictionsInnerUsersInner> users) {
    this.users = users;
  }


  public BranchRestrictionPolicyRestrictionsInner usersUrl(String usersUrl) {
    this.usersUrl = usersUrl;
    return this;
  }

  /**
   * Get usersUrl
   * @return usersUrl
   */
  @javax.annotation.Nullable
  public String getUsersUrl() {
    return usersUrl;
  }

  public void setUsersUrl(String usersUrl) {
    this.usersUrl = usersUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BranchRestrictionPolicyRestrictionsInner branchRestrictionPolicyRestrictionsInner = (BranchRestrictionPolicyRestrictionsInner) o;
    return Objects.equals(this.apps, branchRestrictionPolicyRestrictionsInner.apps) &&
        Objects.equals(this.appsUrl, branchRestrictionPolicyRestrictionsInner.appsUrl) &&
        Objects.equals(this.teams, branchRestrictionPolicyRestrictionsInner.teams) &&
        Objects.equals(this.teamsUrl, branchRestrictionPolicyRestrictionsInner.teamsUrl) &&
        Objects.equals(this.url, branchRestrictionPolicyRestrictionsInner.url) &&
        Objects.equals(this.users, branchRestrictionPolicyRestrictionsInner.users) &&
        Objects.equals(this.usersUrl, branchRestrictionPolicyRestrictionsInner.usersUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apps, appsUrl, teams, teamsUrl, url, users, usersUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BranchRestrictionPolicyRestrictionsInner {\n");
    sb.append("    apps: ").append(toIndentedString(apps)).append("\n");
    sb.append("    appsUrl: ").append(toIndentedString(appsUrl)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    teamsUrl: ").append(toIndentedString(teamsUrl)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    usersUrl: ").append(toIndentedString(usersUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apps");
    openapiFields.add("apps_url");
    openapiFields.add("teams");
    openapiFields.add("teams_url");
    openapiFields.add("url");
    openapiFields.add("users");
    openapiFields.add("users_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BranchRestrictionPolicyRestrictionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BranchRestrictionPolicyRestrictionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BranchRestrictionPolicyRestrictionsInner is not found in the empty JSON string", BranchRestrictionPolicyRestrictionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BranchRestrictionPolicyRestrictionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BranchRestrictionPolicyRestrictionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("apps") != null && !jsonObj.get("apps").isJsonNull()) {
        JsonArray jsonArrayapps = jsonObj.getAsJsonArray("apps");
        if (jsonArrayapps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("apps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `apps` to be an array in the JSON string but got `%s`", jsonObj.get("apps").toString()));
          }

          // validate the optional field `apps` (array)
          for (int i = 0; i < jsonArrayapps.size(); i++) {
            BranchRestrictionPolicyRestrictionsInnerAppsInner.validateJsonElement(jsonArrayapps.get(i));
          };
        }
      }
      if ((jsonObj.get("apps_url") != null && !jsonObj.get("apps_url").isJsonNull()) && !jsonObj.get("apps_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apps_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apps_url").toString()));
      }
      if (jsonObj.get("teams") != null && !jsonObj.get("teams").isJsonNull()) {
        JsonArray jsonArrayteams = jsonObj.getAsJsonArray("teams");
        if (jsonArrayteams != null) {
          // ensure the json data is an array
          if (!jsonObj.get("teams").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `teams` to be an array in the JSON string but got `%s`", jsonObj.get("teams").toString()));
          }

          // validate the optional field `teams` (array)
          for (int i = 0; i < jsonArrayteams.size(); i++) {
            BranchRestrictionPolicyRestrictionsInnerTeamsInner.validateJsonElement(jsonArrayteams.get(i));
          };
        }
      }
      if ((jsonObj.get("teams_url") != null && !jsonObj.get("teams_url").isJsonNull()) && !jsonObj.get("teams_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `teams_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("teams_url").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (jsonObj.get("users") != null && !jsonObj.get("users").isJsonNull()) {
        JsonArray jsonArrayusers = jsonObj.getAsJsonArray("users");
        if (jsonArrayusers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `users` to be an array in the JSON string but got `%s`", jsonObj.get("users").toString()));
          }

          // validate the optional field `users` (array)
          for (int i = 0; i < jsonArrayusers.size(); i++) {
            BranchRestrictionPolicyRestrictionsInnerUsersInner.validateJsonElement(jsonArrayusers.get(i));
          };
        }
      }
      if ((jsonObj.get("users_url") != null && !jsonObj.get("users_url").isJsonNull()) && !jsonObj.get("users_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `users_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("users_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BranchRestrictionPolicyRestrictionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BranchRestrictionPolicyRestrictionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BranchRestrictionPolicyRestrictionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BranchRestrictionPolicyRestrictionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BranchRestrictionPolicyRestrictionsInner>() {
           @Override
           public void write(JsonWriter out, BranchRestrictionPolicyRestrictionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BranchRestrictionPolicyRestrictionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BranchRestrictionPolicyRestrictionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BranchRestrictionPolicyRestrictionsInner
   * @throws IOException if the JSON string is invalid with respect to BranchRestrictionPolicyRestrictionsInner
   */
  public static BranchRestrictionPolicyRestrictionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BranchRestrictionPolicyRestrictionsInner.class);
  }

  /**
   * Convert an instance of BranchRestrictionPolicyRestrictionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

