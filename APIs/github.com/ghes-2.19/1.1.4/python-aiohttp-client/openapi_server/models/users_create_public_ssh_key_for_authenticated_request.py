# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UsersCreatePublicSshKeyForAuthenticatedRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, title: str=None):
        """UsersCreatePublicSshKeyForAuthenticatedRequest - a model defined in OpenAPI

        :param key: The key of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        :param title: The title of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        """
        self.openapi_types = {
            'key': str,
            'title': str
        }

        self.attribute_map = {
            'key': 'key',
            'title': 'title'
        }

        self._key = key
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersCreatePublicSshKeyForAuthenticatedRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The users_create_public_ssh_key_for_authenticated_request of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this UsersCreatePublicSshKeyForAuthenticatedRequest.

        The public SSH key to add to your GitHub account.

        :return: The key of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UsersCreatePublicSshKeyForAuthenticatedRequest.

        The public SSH key to add to your GitHub account.

        :param key: The key of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")
        if key is not None and not re.search(r'^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) ', key):
            raise ValueError("Invalid value for `key`, must be a follow pattern or equal to `/^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) /`")

        self._key = key

    @property
    def title(self):
        """Gets the title of this UsersCreatePublicSshKeyForAuthenticatedRequest.

        A descriptive name for the new key.

        :return: The title of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this UsersCreatePublicSshKeyForAuthenticatedRequest.

        A descriptive name for the new key.

        :param title: The title of this UsersCreatePublicSshKeyForAuthenticatedRequest.
        :type title: str
        """

        self._title = title
