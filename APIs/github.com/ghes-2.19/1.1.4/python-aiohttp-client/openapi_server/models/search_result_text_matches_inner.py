# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_result_text_matches_inner_matches_inner import SearchResultTextMatchesInnerMatchesInner
from openapi_server import util


class SearchResultTextMatchesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fragment: str=None, matches: List[SearchResultTextMatchesInnerMatchesInner]=None, object_type: str=None, object_url: str=None, _property: str=None):
        """SearchResultTextMatchesInner - a model defined in OpenAPI

        :param fragment: The fragment of this SearchResultTextMatchesInner.
        :param matches: The matches of this SearchResultTextMatchesInner.
        :param object_type: The object_type of this SearchResultTextMatchesInner.
        :param object_url: The object_url of this SearchResultTextMatchesInner.
        :param _property: The _property of this SearchResultTextMatchesInner.
        """
        self.openapi_types = {
            'fragment': str,
            'matches': List[SearchResultTextMatchesInnerMatchesInner],
            'object_type': str,
            'object_url': str,
            '_property': str
        }

        self.attribute_map = {
            'fragment': 'fragment',
            'matches': 'matches',
            'object_type': 'object_type',
            'object_url': 'object_url',
            '_property': 'property'
        }

        self._fragment = fragment
        self._matches = matches
        self._object_type = object_type
        self._object_url = object_url
        self.__property = _property

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResultTextMatchesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The search_result_text_matches_inner of this SearchResultTextMatchesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fragment(self):
        """Gets the fragment of this SearchResultTextMatchesInner.


        :return: The fragment of this SearchResultTextMatchesInner.
        :rtype: str
        """
        return self._fragment

    @fragment.setter
    def fragment(self, fragment):
        """Sets the fragment of this SearchResultTextMatchesInner.


        :param fragment: The fragment of this SearchResultTextMatchesInner.
        :type fragment: str
        """

        self._fragment = fragment

    @property
    def matches(self):
        """Gets the matches of this SearchResultTextMatchesInner.


        :return: The matches of this SearchResultTextMatchesInner.
        :rtype: List[SearchResultTextMatchesInnerMatchesInner]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this SearchResultTextMatchesInner.


        :param matches: The matches of this SearchResultTextMatchesInner.
        :type matches: List[SearchResultTextMatchesInnerMatchesInner]
        """

        self._matches = matches

    @property
    def object_type(self):
        """Gets the object_type of this SearchResultTextMatchesInner.


        :return: The object_type of this SearchResultTextMatchesInner.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this SearchResultTextMatchesInner.


        :param object_type: The object_type of this SearchResultTextMatchesInner.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def object_url(self):
        """Gets the object_url of this SearchResultTextMatchesInner.


        :return: The object_url of this SearchResultTextMatchesInner.
        :rtype: str
        """
        return self._object_url

    @object_url.setter
    def object_url(self, object_url):
        """Sets the object_url of this SearchResultTextMatchesInner.


        :param object_url: The object_url of this SearchResultTextMatchesInner.
        :type object_url: str
        """

        self._object_url = object_url

    @property
    def _property(self):
        """Gets the _property of this SearchResultTextMatchesInner.


        :return: The _property of this SearchResultTextMatchesInner.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this SearchResultTextMatchesInner.


        :param _property: The _property of this SearchResultTextMatchesInner.
        :type _property: str
        """

        self.__property = _property
