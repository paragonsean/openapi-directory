# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChecksCreateRequestActionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, identifier: str=None, label: str=None):
        """ChecksCreateRequestActionsInner - a model defined in OpenAPI

        :param description: The description of this ChecksCreateRequestActionsInner.
        :param identifier: The identifier of this ChecksCreateRequestActionsInner.
        :param label: The label of this ChecksCreateRequestActionsInner.
        """
        self.openapi_types = {
            'description': str,
            'identifier': str,
            'label': str
        }

        self.attribute_map = {
            'description': 'description',
            'identifier': 'identifier',
            'label': 'label'
        }

        self._description = description
        self._identifier = identifier
        self._label = label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChecksCreateRequestActionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The checks_create_request_actions_inner of this ChecksCreateRequestActionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ChecksCreateRequestActionsInner.

        A short explanation of what this action would do. The maximum size is 40 characters.

        :return: The description of this ChecksCreateRequestActionsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChecksCreateRequestActionsInner.

        A short explanation of what this action would do. The maximum size is 40 characters.

        :param description: The description of this ChecksCreateRequestActionsInner.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")
        if description is not None and len(description) > 40:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `40`")

        self._description = description

    @property
    def identifier(self):
        """Gets the identifier of this ChecksCreateRequestActionsInner.

        A reference for the action on the integrator's system. The maximum size is 20 characters.

        :return: The identifier of this ChecksCreateRequestActionsInner.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this ChecksCreateRequestActionsInner.

        A reference for the action on the integrator's system. The maximum size is 20 characters.

        :param identifier: The identifier of this ChecksCreateRequestActionsInner.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")
        if identifier is not None and len(identifier) > 20:
            raise ValueError("Invalid value for `identifier`, length must be less than or equal to `20`")

        self._identifier = identifier

    @property
    def label(self):
        """Gets the label of this ChecksCreateRequestActionsInner.

        The text to be displayed on a button in the web UI. The maximum size is 20 characters.

        :return: The label of this ChecksCreateRequestActionsInner.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ChecksCreateRequestActionsInner.

        The text to be displayed on a button in the web UI. The maximum size is 20 characters.

        :param label: The label of this ChecksCreateRequestActionsInner.
        :type label: str
        """
        if label is None:
            raise ValueError("Invalid value for `label`, must not be `None`")
        if label is not None and len(label) > 20:
            raise ValueError("Invalid value for `label`, length must be less than or equal to `20`")

        self._label = label
