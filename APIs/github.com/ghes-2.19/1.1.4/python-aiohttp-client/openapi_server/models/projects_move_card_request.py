# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ProjectsMoveCardRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_id: int=None, position: str=None):
        """ProjectsMoveCardRequest - a model defined in OpenAPI

        :param column_id: The column_id of this ProjectsMoveCardRequest.
        :param position: The position of this ProjectsMoveCardRequest.
        """
        self.openapi_types = {
            'column_id': int,
            'position': str
        }

        self.attribute_map = {
            'column_id': 'column_id',
            'position': 'position'
        }

        self._column_id = column_id
        self._position = position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectsMoveCardRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The projects_move_card_request of this ProjectsMoveCardRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_id(self):
        """Gets the column_id of this ProjectsMoveCardRequest.

        The unique identifier of the column the card should be moved to

        :return: The column_id of this ProjectsMoveCardRequest.
        :rtype: int
        """
        return self._column_id

    @column_id.setter
    def column_id(self, column_id):
        """Sets the column_id of this ProjectsMoveCardRequest.

        The unique identifier of the column the card should be moved to

        :param column_id: The column_id of this ProjectsMoveCardRequest.
        :type column_id: int
        """

        self._column_id = column_id

    @property
    def position(self):
        """Gets the position of this ProjectsMoveCardRequest.

        The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified card.

        :return: The position of this ProjectsMoveCardRequest.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ProjectsMoveCardRequest.

        The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified card.

        :param position: The position of this ProjectsMoveCardRequest.
        :type position: str
        """
        if position is None:
            raise ValueError("Invalid value for `position`, must not be `None`")
        if position is not None and not re.search(r'^(?:top|bottom|after:\d+)$', position):
            raise ValueError("Invalid value for `position`, must be a follow pattern or equal to `/^(?:top|bottom|after:\d+)$/`")

        self._position = position
