# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReposCreateForkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization: str=None):
        """ReposCreateForkRequest - a model defined in OpenAPI

        :param organization: The organization of this ReposCreateForkRequest.
        """
        self.openapi_types = {
            'organization': str
        }

        self.attribute_map = {
            'organization': 'organization'
        }

        self._organization = organization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposCreateForkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_create_fork_request of this ReposCreateForkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization(self):
        """Gets the organization of this ReposCreateForkRequest.

        Optional parameter to specify the organization name if forking into an organization.

        :return: The organization of this ReposCreateForkRequest.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this ReposCreateForkRequest.

        Optional parameter to specify the organization name if forking into an organization.

        :param organization: The organization of this ReposCreateForkRequest.
        :type organization: str
        """

        self._organization = organization
