# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repository import Repository
from openapi_server import util


class StarredRepository(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repo: Repository=None, starred_at: datetime=None):
        """StarredRepository - a model defined in OpenAPI

        :param repo: The repo of this StarredRepository.
        :param starred_at: The starred_at of this StarredRepository.
        """
        self.openapi_types = {
            'repo': Repository,
            'starred_at': datetime
        }

        self.attribute_map = {
            'repo': 'repo',
            'starred_at': 'starred_at'
        }

        self._repo = repo
        self._starred_at = starred_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StarredRepository':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The starred-repository of this StarredRepository.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repo(self):
        """Gets the repo of this StarredRepository.


        :return: The repo of this StarredRepository.
        :rtype: Repository
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this StarredRepository.


        :param repo: The repo of this StarredRepository.
        :type repo: Repository
        """
        if repo is None:
            raise ValueError("Invalid value for `repo`, must not be `None`")

        self._repo = repo

    @property
    def starred_at(self):
        """Gets the starred_at of this StarredRepository.


        :return: The starred_at of this StarredRepository.
        :rtype: datetime
        """
        return self._starred_at

    @starred_at.setter
    def starred_at(self, starred_at):
        """Sets the starred_at of this StarredRepository.


        :param starred_at: The starred_at of this StarredRepository.
        :type starred_at: datetime
        """
        if starred_at is None:
            raise ValueError("Invalid value for `starred_at`, must not be `None`")

        self._starred_at = starred_at
