# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BranchProtectionRequiredStatusChecks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contexts: List[str]=None, contexts_url: str=None, enforcement_level: str=None, strict: bool=None, url: str=None):
        """BranchProtectionRequiredStatusChecks - a model defined in OpenAPI

        :param contexts: The contexts of this BranchProtectionRequiredStatusChecks.
        :param contexts_url: The contexts_url of this BranchProtectionRequiredStatusChecks.
        :param enforcement_level: The enforcement_level of this BranchProtectionRequiredStatusChecks.
        :param strict: The strict of this BranchProtectionRequiredStatusChecks.
        :param url: The url of this BranchProtectionRequiredStatusChecks.
        """
        self.openapi_types = {
            'contexts': List[str],
            'contexts_url': str,
            'enforcement_level': str,
            'strict': bool,
            'url': str
        }

        self.attribute_map = {
            'contexts': 'contexts',
            'contexts_url': 'contexts_url',
            'enforcement_level': 'enforcement_level',
            'strict': 'strict',
            'url': 'url'
        }

        self._contexts = contexts
        self._contexts_url = contexts_url
        self._enforcement_level = enforcement_level
        self._strict = strict
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BranchProtectionRequiredStatusChecks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The branch_protection_required_status_checks of this BranchProtectionRequiredStatusChecks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contexts(self):
        """Gets the contexts of this BranchProtectionRequiredStatusChecks.


        :return: The contexts of this BranchProtectionRequiredStatusChecks.
        :rtype: List[str]
        """
        return self._contexts

    @contexts.setter
    def contexts(self, contexts):
        """Sets the contexts of this BranchProtectionRequiredStatusChecks.


        :param contexts: The contexts of this BranchProtectionRequiredStatusChecks.
        :type contexts: List[str]
        """
        if contexts is None:
            raise ValueError("Invalid value for `contexts`, must not be `None`")

        self._contexts = contexts

    @property
    def contexts_url(self):
        """Gets the contexts_url of this BranchProtectionRequiredStatusChecks.


        :return: The contexts_url of this BranchProtectionRequiredStatusChecks.
        :rtype: str
        """
        return self._contexts_url

    @contexts_url.setter
    def contexts_url(self, contexts_url):
        """Sets the contexts_url of this BranchProtectionRequiredStatusChecks.


        :param contexts_url: The contexts_url of this BranchProtectionRequiredStatusChecks.
        :type contexts_url: str
        """

        self._contexts_url = contexts_url

    @property
    def enforcement_level(self):
        """Gets the enforcement_level of this BranchProtectionRequiredStatusChecks.


        :return: The enforcement_level of this BranchProtectionRequiredStatusChecks.
        :rtype: str
        """
        return self._enforcement_level

    @enforcement_level.setter
    def enforcement_level(self, enforcement_level):
        """Sets the enforcement_level of this BranchProtectionRequiredStatusChecks.


        :param enforcement_level: The enforcement_level of this BranchProtectionRequiredStatusChecks.
        :type enforcement_level: str
        """

        self._enforcement_level = enforcement_level

    @property
    def strict(self):
        """Gets the strict of this BranchProtectionRequiredStatusChecks.


        :return: The strict of this BranchProtectionRequiredStatusChecks.
        :rtype: bool
        """
        return self._strict

    @strict.setter
    def strict(self, strict):
        """Sets the strict of this BranchProtectionRequiredStatusChecks.


        :param strict: The strict of this BranchProtectionRequiredStatusChecks.
        :type strict: bool
        """

        self._strict = strict

    @property
    def url(self):
        """Gets the url of this BranchProtectionRequiredStatusChecks.


        :return: The url of this BranchProtectionRequiredStatusChecks.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this BranchProtectionRequiredStatusChecks.


        :param url: The url of this BranchProtectionRequiredStatusChecks.
        :type url: str
        """

        self._url = url
