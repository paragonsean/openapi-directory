# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commit_search_result_item_commit_tree import CommitSearchResultItemCommitTree
from openapi_server import util


class Tag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit: CommitSearchResultItemCommitTree=None, name: str=None, node_id: str=None, tarball_url: str=None, zipball_url: str=None):
        """Tag - a model defined in OpenAPI

        :param commit: The commit of this Tag.
        :param name: The name of this Tag.
        :param node_id: The node_id of this Tag.
        :param tarball_url: The tarball_url of this Tag.
        :param zipball_url: The zipball_url of this Tag.
        """
        self.openapi_types = {
            'commit': CommitSearchResultItemCommitTree,
            'name': str,
            'node_id': str,
            'tarball_url': str,
            'zipball_url': str
        }

        self.attribute_map = {
            'commit': 'commit',
            'name': 'name',
            'node_id': 'node_id',
            'tarball_url': 'tarball_url',
            'zipball_url': 'zipball_url'
        }

        self._commit = commit
        self._name = name
        self._node_id = node_id
        self._tarball_url = tarball_url
        self._zipball_url = zipball_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tag of this Tag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit(self):
        """Gets the commit of this Tag.


        :return: The commit of this Tag.
        :rtype: CommitSearchResultItemCommitTree
        """
        return self._commit

    @commit.setter
    def commit(self, commit):
        """Sets the commit of this Tag.


        :param commit: The commit of this Tag.
        :type commit: CommitSearchResultItemCommitTree
        """
        if commit is None:
            raise ValueError("Invalid value for `commit`, must not be `None`")

        self._commit = commit

    @property
    def name(self):
        """Gets the name of this Tag.


        :return: The name of this Tag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Tag.


        :param name: The name of this Tag.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def node_id(self):
        """Gets the node_id of this Tag.


        :return: The node_id of this Tag.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this Tag.


        :param node_id: The node_id of this Tag.
        :type node_id: str
        """
        if node_id is None:
            raise ValueError("Invalid value for `node_id`, must not be `None`")

        self._node_id = node_id

    @property
    def tarball_url(self):
        """Gets the tarball_url of this Tag.


        :return: The tarball_url of this Tag.
        :rtype: str
        """
        return self._tarball_url

    @tarball_url.setter
    def tarball_url(self, tarball_url):
        """Sets the tarball_url of this Tag.


        :param tarball_url: The tarball_url of this Tag.
        :type tarball_url: str
        """
        if tarball_url is None:
            raise ValueError("Invalid value for `tarball_url`, must not be `None`")

        self._tarball_url = tarball_url

    @property
    def zipball_url(self):
        """Gets the zipball_url of this Tag.


        :return: The zipball_url of this Tag.
        :rtype: str
        """
        return self._zipball_url

    @zipball_url.setter
    def zipball_url(self, zipball_url):
        """Sets the zipball_url of this Tag.


        :param zipball_url: The zipball_url of this Tag.
        :type zipball_url: str
        """
        if zipball_url is None:
            raise ValueError("Invalid value for `zipball_url`, must not be `None`")

        self._zipball_url = zipball_url
