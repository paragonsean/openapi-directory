/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContent_tree.h
 *
 * Content Tree
 */

#ifndef OAIContent_tree_H
#define OAIContent_tree_H

#include <QJsonObject>

#include "OAIContent_directory_inner.h"
#include "OAIContent_directory_inner__links.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContent_directory_inner__links;
class OAIContent_directory_inner;

class OAIContent_tree : public OAIObject {
public:
    OAIContent_tree();
    OAIContent_tree(QString json);
    ~OAIContent_tree() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContent_directory_inner__links getLinks() const;
    void setLinks(const OAIContent_directory_inner__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getDownloadUrl() const;
    void setDownloadUrl(const QString &download_url);
    bool is_download_url_Set() const;
    bool is_download_url_Valid() const;

    QList<OAIContent_directory_inner> getEntries() const;
    void setEntries(const QList<OAIContent_directory_inner> &entries);
    bool is_entries_Set() const;
    bool is_entries_Valid() const;

    QString getGitUrl() const;
    void setGitUrl(const QString &git_url);
    bool is_git_url_Set() const;
    bool is_git_url_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContent_directory_inner__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_download_url;
    bool m_download_url_isSet;
    bool m_download_url_isValid;

    QList<OAIContent_directory_inner> m_entries;
    bool m_entries_isSet;
    bool m_entries_isValid;

    QString m_git_url;
    bool m_git_url_isSet;
    bool m_git_url_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContent_tree)

#endif // OAIContent_tree_H
