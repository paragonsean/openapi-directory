/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_settings_enterprise_saml.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_settings_enterprise_saml::OAIEnterprise_settings_enterprise_saml(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_settings_enterprise_saml::OAIEnterprise_settings_enterprise_saml() {
    this->initializeModel();
}

OAIEnterprise_settings_enterprise_saml::~OAIEnterprise_settings_enterprise_saml() {}

void OAIEnterprise_settings_enterprise_saml::initializeModel() {

    m_certificate_isSet = false;
    m_certificate_isValid = false;

    m_certificate_path_isSet = false;
    m_certificate_path_isValid = false;

    m_disable_admin_demote_isSet = false;
    m_disable_admin_demote_isValid = false;

    m_idp_initiated_sso_isSet = false;
    m_idp_initiated_sso_isValid = false;

    m_issuer_isSet = false;
    m_issuer_isValid = false;

    m_sso_url_isSet = false;
    m_sso_url_isValid = false;
}

void OAIEnterprise_settings_enterprise_saml::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_settings_enterprise_saml::fromJsonObject(QJsonObject json) {

    m_certificate_isValid = ::OpenAPI::fromJsonValue(m_certificate, json[QString("certificate")]);
    m_certificate_isSet = !json[QString("certificate")].isNull() && m_certificate_isValid;

    m_certificate_path_isValid = ::OpenAPI::fromJsonValue(m_certificate_path, json[QString("certificate_path")]);
    m_certificate_path_isSet = !json[QString("certificate_path")].isNull() && m_certificate_path_isValid;

    m_disable_admin_demote_isValid = ::OpenAPI::fromJsonValue(m_disable_admin_demote, json[QString("disable_admin_demote")]);
    m_disable_admin_demote_isSet = !json[QString("disable_admin_demote")].isNull() && m_disable_admin_demote_isValid;

    m_idp_initiated_sso_isValid = ::OpenAPI::fromJsonValue(m_idp_initiated_sso, json[QString("idp_initiated_sso")]);
    m_idp_initiated_sso_isSet = !json[QString("idp_initiated_sso")].isNull() && m_idp_initiated_sso_isValid;

    m_issuer_isValid = ::OpenAPI::fromJsonValue(m_issuer, json[QString("issuer")]);
    m_issuer_isSet = !json[QString("issuer")].isNull() && m_issuer_isValid;

    m_sso_url_isValid = ::OpenAPI::fromJsonValue(m_sso_url, json[QString("sso_url")]);
    m_sso_url_isSet = !json[QString("sso_url")].isNull() && m_sso_url_isValid;
}

QString OAIEnterprise_settings_enterprise_saml::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_settings_enterprise_saml::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate_isSet) {
        obj.insert(QString("certificate"), ::OpenAPI::toJsonValue(m_certificate));
    }
    if (m_certificate_path_isSet) {
        obj.insert(QString("certificate_path"), ::OpenAPI::toJsonValue(m_certificate_path));
    }
    if (m_disable_admin_demote_isSet) {
        obj.insert(QString("disable_admin_demote"), ::OpenAPI::toJsonValue(m_disable_admin_demote));
    }
    if (m_idp_initiated_sso_isSet) {
        obj.insert(QString("idp_initiated_sso"), ::OpenAPI::toJsonValue(m_idp_initiated_sso));
    }
    if (m_issuer_isSet) {
        obj.insert(QString("issuer"), ::OpenAPI::toJsonValue(m_issuer));
    }
    if (m_sso_url_isSet) {
        obj.insert(QString("sso_url"), ::OpenAPI::toJsonValue(m_sso_url));
    }
    return obj;
}

QString OAIEnterprise_settings_enterprise_saml::getCertificate() const {
    return m_certificate;
}
void OAIEnterprise_settings_enterprise_saml::setCertificate(const QString &certificate) {
    m_certificate = certificate;
    m_certificate_isSet = true;
}

bool OAIEnterprise_settings_enterprise_saml::is_certificate_Set() const{
    return m_certificate_isSet;
}

bool OAIEnterprise_settings_enterprise_saml::is_certificate_Valid() const{
    return m_certificate_isValid;
}

QString OAIEnterprise_settings_enterprise_saml::getCertificatePath() const {
    return m_certificate_path;
}
void OAIEnterprise_settings_enterprise_saml::setCertificatePath(const QString &certificate_path) {
    m_certificate_path = certificate_path;
    m_certificate_path_isSet = true;
}

bool OAIEnterprise_settings_enterprise_saml::is_certificate_path_Set() const{
    return m_certificate_path_isSet;
}

bool OAIEnterprise_settings_enterprise_saml::is_certificate_path_Valid() const{
    return m_certificate_path_isValid;
}

bool OAIEnterprise_settings_enterprise_saml::isDisableAdminDemote() const {
    return m_disable_admin_demote;
}
void OAIEnterprise_settings_enterprise_saml::setDisableAdminDemote(const bool &disable_admin_demote) {
    m_disable_admin_demote = disable_admin_demote;
    m_disable_admin_demote_isSet = true;
}

bool OAIEnterprise_settings_enterprise_saml::is_disable_admin_demote_Set() const{
    return m_disable_admin_demote_isSet;
}

bool OAIEnterprise_settings_enterprise_saml::is_disable_admin_demote_Valid() const{
    return m_disable_admin_demote_isValid;
}

bool OAIEnterprise_settings_enterprise_saml::isIdpInitiatedSso() const {
    return m_idp_initiated_sso;
}
void OAIEnterprise_settings_enterprise_saml::setIdpInitiatedSso(const bool &idp_initiated_sso) {
    m_idp_initiated_sso = idp_initiated_sso;
    m_idp_initiated_sso_isSet = true;
}

bool OAIEnterprise_settings_enterprise_saml::is_idp_initiated_sso_Set() const{
    return m_idp_initiated_sso_isSet;
}

bool OAIEnterprise_settings_enterprise_saml::is_idp_initiated_sso_Valid() const{
    return m_idp_initiated_sso_isValid;
}

QString OAIEnterprise_settings_enterprise_saml::getIssuer() const {
    return m_issuer;
}
void OAIEnterprise_settings_enterprise_saml::setIssuer(const QString &issuer) {
    m_issuer = issuer;
    m_issuer_isSet = true;
}

bool OAIEnterprise_settings_enterprise_saml::is_issuer_Set() const{
    return m_issuer_isSet;
}

bool OAIEnterprise_settings_enterprise_saml::is_issuer_Valid() const{
    return m_issuer_isValid;
}

QString OAIEnterprise_settings_enterprise_saml::getSsoUrl() const {
    return m_sso_url;
}
void OAIEnterprise_settings_enterprise_saml::setSsoUrl(const QString &sso_url) {
    m_sso_url = sso_url;
    m_sso_url_isSet = true;
}

bool OAIEnterprise_settings_enterprise_saml::is_sso_url_Set() const{
    return m_sso_url_isSet;
}

bool OAIEnterprise_settings_enterprise_saml::is_sso_url_Valid() const{
    return m_sso_url_isValid;
}

bool OAIEnterprise_settings_enterprise_saml::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_certificate_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_admin_demote_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_idp_initiated_sso_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issuer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_settings_enterprise_saml::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
