/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommit_activity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommit_activity::OAICommit_activity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommit_activity::OAICommit_activity() {
    this->initializeModel();
}

OAICommit_activity::~OAICommit_activity() {}

void OAICommit_activity::initializeModel() {

    m_days_isSet = false;
    m_days_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_week_isSet = false;
    m_week_isValid = false;
}

void OAICommit_activity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommit_activity::fromJsonObject(QJsonObject json) {

    m_days_isValid = ::OpenAPI::fromJsonValue(m_days, json[QString("days")]);
    m_days_isSet = !json[QString("days")].isNull() && m_days_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_week_isValid = ::OpenAPI::fromJsonValue(m_week, json[QString("week")]);
    m_week_isSet = !json[QString("week")].isNull() && m_week_isValid;
}

QString OAICommit_activity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommit_activity::asJsonObject() const {
    QJsonObject obj;
    if (m_days.size() > 0) {
        obj.insert(QString("days"), ::OpenAPI::toJsonValue(m_days));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    if (m_week_isSet) {
        obj.insert(QString("week"), ::OpenAPI::toJsonValue(m_week));
    }
    return obj;
}

QList<qint32> OAICommit_activity::getDays() const {
    return m_days;
}
void OAICommit_activity::setDays(const QList<qint32> &days) {
    m_days = days;
    m_days_isSet = true;
}

bool OAICommit_activity::is_days_Set() const{
    return m_days_isSet;
}

bool OAICommit_activity::is_days_Valid() const{
    return m_days_isValid;
}

qint32 OAICommit_activity::getTotal() const {
    return m_total;
}
void OAICommit_activity::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAICommit_activity::is_total_Set() const{
    return m_total_isSet;
}

bool OAICommit_activity::is_total_Valid() const{
    return m_total_isValid;
}

qint32 OAICommit_activity::getWeek() const {
    return m_week;
}
void OAICommit_activity::setWeek(const qint32 &week) {
    m_week = week;
    m_week_isSet = true;
}

bool OAICommit_activity::is_week_Set() const{
    return m_week_isSet;
}

bool OAICommit_activity::is_week_Valid() const{
    return m_week_isValid;
}

bool OAICommit_activity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_week_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommit_activity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_days_isValid && m_total_isValid && m_week_isValid && true;
}

} // namespace OpenAPI
