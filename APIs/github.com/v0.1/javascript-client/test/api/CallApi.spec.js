/**
 * Eqivo API
 * Eqivo OpenApi Specification
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EqivoApi);
  }
}(this, function(expect, EqivoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EqivoApi.CallApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CallApi', function() {
    describe('v01BulkCallPost', function() {
      it('should call v01BulkCallPost successfully', function(done) {
        //uncomment below and update the code to test v01BulkCallPost
        //instance.v01BulkCallPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01CallPost', function() {
      it('should call v01CallPost successfully', function(done) {
        //uncomment below and update the code to test v01CallPost
        //instance.v01CallPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01CancelScheduledHangupPost', function() {
      it('should call v01CancelScheduledHangupPost successfully', function(done) {
        //uncomment below and update the code to test v01CancelScheduledHangupPost
        //instance.v01CancelScheduledHangupPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01CancelScheduledPlayPost', function() {
      it('should call v01CancelScheduledPlayPost successfully', function(done) {
        //uncomment below and update the code to test v01CancelScheduledPlayPost
        //instance.v01CancelScheduledPlayPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01GroupCallPost', function() {
      it('should call v01GroupCallPost successfully', function(done) {
        //uncomment below and update the code to test v01GroupCallPost
        //instance.v01GroupCallPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01HangupAllCallsPost', function() {
      it('should call v01HangupAllCallsPost successfully', function(done) {
        //uncomment below and update the code to test v01HangupAllCallsPost
        //instance.v01HangupAllCallsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01HangupCallPost', function() {
      it('should call v01HangupCallPost successfully', function(done) {
        //uncomment below and update the code to test v01HangupCallPost
        //instance.v01HangupCallPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01PlayPost', function() {
      it('should call v01PlayPost successfully', function(done) {
        //uncomment below and update the code to test v01PlayPost
        //instance.v01PlayPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01PlayStopPost', function() {
      it('should call v01PlayStopPost successfully', function(done) {
        //uncomment below and update the code to test v01PlayStopPost
        //instance.v01PlayStopPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01RecordStartPost', function() {
      it('should call v01RecordStartPost successfully', function(done) {
        //uncomment below and update the code to test v01RecordStartPost
        //instance.v01RecordStartPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01RecordStopPost', function() {
      it('should call v01RecordStopPost successfully', function(done) {
        //uncomment below and update the code to test v01RecordStopPost
        //instance.v01RecordStopPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01ScheduleHangupPost', function() {
      it('should call v01ScheduleHangupPost successfully', function(done) {
        //uncomment below and update the code to test v01ScheduleHangupPost
        //instance.v01ScheduleHangupPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01SchedulePlayPost', function() {
      it('should call v01SchedulePlayPost successfully', function(done) {
        //uncomment below and update the code to test v01SchedulePlayPost
        //instance.v01SchedulePlayPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01SendDigitsPost', function() {
      it('should call v01SendDigitsPost successfully', function(done) {
        //uncomment below and update the code to test v01SendDigitsPost
        //instance.v01SendDigitsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01SoundTouchPost', function() {
      it('should call v01SoundTouchPost successfully', function(done) {
        //uncomment below and update the code to test v01SoundTouchPost
        //instance.v01SoundTouchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01SoundTouchStopPost', function() {
      it('should call v01SoundTouchStopPost successfully', function(done) {
        //uncomment below and update the code to test v01SoundTouchStopPost
        //instance.v01SoundTouchStopPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v01TransferCallPost', function() {
      it('should call v01TransferCallPost successfully', function(done) {
        //uncomment below and update the code to test v01TransferCallPost
        //instance.v01TransferCallPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
