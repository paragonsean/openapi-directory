/**
 * Eqivo API
 * Eqivo OpenApi Specification
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupCallResponse model module.
 * @module model/GroupCallResponse
 * @version v0.1
 */
class GroupCallResponse {
    /**
     * Constructs a new <code>GroupCallResponse</code>.
     * @alias module:model/GroupCallResponse
     * @param message {module:model/GroupCallResponse.MessageEnum} Response message
     * @param requestUUID {String} Unique identifier of the Call request (UUIDv4)
     * @param restApiServer {String} API server which handled this request (an Eqivo extension)
     * @param success {Boolean} Whether the request was successful or not
     */
    constructor(message, requestUUID, restApiServer, success) { 
        
        GroupCallResponse.initialize(this, message, requestUUID, restApiServer, success);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, requestUUID, restApiServer, success) { 
        obj['Message'] = message;
        obj['RequestUUID'] = requestUUID;
        obj['RestApiServer'] = restApiServer;
        obj['Success'] = success;
    }

    /**
     * Constructs a <code>GroupCallResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupCallResponse} obj Optional instance to populate.
     * @return {module:model/GroupCallResponse} The populated <code>GroupCallResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupCallResponse();

            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('RequestUUID')) {
                obj['RequestUUID'] = ApiClient.convertToType(data['RequestUUID'], 'String');
            }
            if (data.hasOwnProperty('RestApiServer')) {
                obj['RestApiServer'] = ApiClient.convertToType(data['RestApiServer'], 'String');
            }
            if (data.hasOwnProperty('Success')) {
                obj['Success'] = ApiClient.convertToType(data['Success'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupCallResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupCallResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GroupCallResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }
        // ensure the json data is a string
        if (data['RequestUUID'] && !(typeof data['RequestUUID'] === 'string' || data['RequestUUID'] instanceof String)) {
            throw new Error("Expected the field `RequestUUID` to be a primitive type in the JSON string but got " + data['RequestUUID']);
        }
        // ensure the json data is a string
        if (data['RestApiServer'] && !(typeof data['RestApiServer'] === 'string' || data['RestApiServer'] instanceof String)) {
            throw new Error("Expected the field `RestApiServer` to be a primitive type in the JSON string but got " + data['RestApiServer']);
        }

        return true;
    }


}

GroupCallResponse.RequiredProperties = ["Message", "RequestUUID", "RestApiServer", "Success"];

/**
 * Response message
 * @member {module:model/GroupCallResponse.MessageEnum} Message
 */
GroupCallResponse.prototype['Message'] = undefined;

/**
 * Unique identifier of the Call request (UUIDv4)
 * @member {String} RequestUUID
 */
GroupCallResponse.prototype['RequestUUID'] = undefined;

/**
 * API server which handled this request (an Eqivo extension)
 * @member {String} RestApiServer
 */
GroupCallResponse.prototype['RestApiServer'] = undefined;

/**
 * Whether the request was successful or not
 * @member {Boolean} Success
 */
GroupCallResponse.prototype['Success'] = undefined;





/**
 * Allowed values for the <code>Message</code> property.
 * @enum {String}
 * @readonly
 */
GroupCallResponse['MessageEnum'] = {

    /**
     * value: "GroupCall Request Executed"
     * @const
     */
    "GroupCall Request Executed": "GroupCall Request Executed",

    /**
     * value: "Mandatory Parameters Missing"
     * @const
     */
    "Mandatory Parameters Missing": "Mandatory Parameters Missing",

    /**
     * value: "This Delimiter is not allowed"
     * @const
     */
    "This Delimiter is not allowed": "This Delimiter is not allowed",

    /**
     * value: "GroupCall should be used for at least 2 numbers"
     * @const
     */
    "GroupCall should be used for at least 2 numbers": "GroupCall should be used for at least 2 numbers",

    /**
     * value: "'To' parameter length does not match 'Gateways' Length"
     * @const
     */
    "&#39;To&#39; parameter length does not match &#39;Gateways&#39; Length": "'To' parameter length does not match 'Gateways' Length",

    /**
     * value: "AnswerUrl is not Valid"
     * @const
     */
    "AnswerUrl is not Valid": "AnswerUrl is not Valid",

    /**
     * value: "HangupUrl is not Valid"
     * @const
     */
    "HangupUrl is not Valid": "HangupUrl is not Valid",

    /**
     * value: "RingUrl is not Valid"
     * @const
     */
    "RingUrl is not Valid": "RingUrl is not Valid",

    /**
     * value: "ConfirmSound is not Valid"
     * @const
     */
    "ConfirmSound is not Valid": "ConfirmSound is not Valid",

    /**
     * value: "Unknown Core UUID"
     * @const
     */
    "Unknown Core UUID": "Unknown Core UUID",

    /**
     * value: "GroupCall Request Failed"
     * @const
     */
    "GroupCall Request Failed": "GroupCall Request Failed"
};



export default GroupCallResponse;

