# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_downstream_configuration: bool=None, enforcement: str=None):
        """EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest - a model defined in OpenAPI

        :param allow_downstream_configuration: The allow_downstream_configuration of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        :param enforcement: The enforcement of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        """
        self.openapi_types = {
            'allow_downstream_configuration': bool,
            'enforcement': str
        }

        self.attribute_map = {
            'allow_downstream_configuration': 'allow_downstream_configuration',
            'enforcement': 'enforcement'
        }

        self._allow_downstream_configuration = allow_downstream_configuration
        self._enforcement = enforcement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise_admin_update_pre_receive_hook_enforcement_for_org_request of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_downstream_configuration(self):
        """Gets the allow_downstream_configuration of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.

        Whether repositories can override enforcement.

        :return: The allow_downstream_configuration of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        :rtype: bool
        """
        return self._allow_downstream_configuration

    @allow_downstream_configuration.setter
    def allow_downstream_configuration(self, allow_downstream_configuration):
        """Sets the allow_downstream_configuration of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.

        Whether repositories can override enforcement.

        :param allow_downstream_configuration: The allow_downstream_configuration of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        :type allow_downstream_configuration: bool
        """

        self._allow_downstream_configuration = allow_downstream_configuration

    @property
    def enforcement(self):
        """Gets the enforcement of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.

        The state of enforcement for the hook on this repository.

        :return: The enforcement of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        :rtype: str
        """
        return self._enforcement

    @enforcement.setter
    def enforcement(self, enforcement):
        """Sets the enforcement of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.

        The state of enforcement for the hook on this repository.

        :param enforcement: The enforcement of this EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest.
        :type enforcement: str
        """

        self._enforcement = enforcement
