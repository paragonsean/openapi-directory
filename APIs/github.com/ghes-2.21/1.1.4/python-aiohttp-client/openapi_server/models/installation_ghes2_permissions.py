# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstallationGhes2Permissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checks: str=None, contents: str=None, deployments: str=None, issues: str=None, metadata: str=None, organization_administration: str=None, pull_requests: str=None, statuses: str=None):
        """InstallationGhes2Permissions - a model defined in OpenAPI

        :param checks: The checks of this InstallationGhes2Permissions.
        :param contents: The contents of this InstallationGhes2Permissions.
        :param deployments: The deployments of this InstallationGhes2Permissions.
        :param issues: The issues of this InstallationGhes2Permissions.
        :param metadata: The metadata of this InstallationGhes2Permissions.
        :param organization_administration: The organization_administration of this InstallationGhes2Permissions.
        :param pull_requests: The pull_requests of this InstallationGhes2Permissions.
        :param statuses: The statuses of this InstallationGhes2Permissions.
        """
        self.openapi_types = {
            'checks': str,
            'contents': str,
            'deployments': str,
            'issues': str,
            'metadata': str,
            'organization_administration': str,
            'pull_requests': str,
            'statuses': str
        }

        self.attribute_map = {
            'checks': 'checks',
            'contents': 'contents',
            'deployments': 'deployments',
            'issues': 'issues',
            'metadata': 'metadata',
            'organization_administration': 'organization_administration',
            'pull_requests': 'pull_requests',
            'statuses': 'statuses'
        }

        self._checks = checks
        self._contents = contents
        self._deployments = deployments
        self._issues = issues
        self._metadata = metadata
        self._organization_administration = organization_administration
        self._pull_requests = pull_requests
        self._statuses = statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstallationGhes2Permissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The installation_ghes_2_permissions of this InstallationGhes2Permissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checks(self):
        """Gets the checks of this InstallationGhes2Permissions.


        :return: The checks of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._checks

    @checks.setter
    def checks(self, checks):
        """Sets the checks of this InstallationGhes2Permissions.


        :param checks: The checks of this InstallationGhes2Permissions.
        :type checks: str
        """

        self._checks = checks

    @property
    def contents(self):
        """Gets the contents of this InstallationGhes2Permissions.


        :return: The contents of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this InstallationGhes2Permissions.


        :param contents: The contents of this InstallationGhes2Permissions.
        :type contents: str
        """

        self._contents = contents

    @property
    def deployments(self):
        """Gets the deployments of this InstallationGhes2Permissions.


        :return: The deployments of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._deployments

    @deployments.setter
    def deployments(self, deployments):
        """Sets the deployments of this InstallationGhes2Permissions.


        :param deployments: The deployments of this InstallationGhes2Permissions.
        :type deployments: str
        """

        self._deployments = deployments

    @property
    def issues(self):
        """Gets the issues of this InstallationGhes2Permissions.


        :return: The issues of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this InstallationGhes2Permissions.


        :param issues: The issues of this InstallationGhes2Permissions.
        :type issues: str
        """

        self._issues = issues

    @property
    def metadata(self):
        """Gets the metadata of this InstallationGhes2Permissions.


        :return: The metadata of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this InstallationGhes2Permissions.


        :param metadata: The metadata of this InstallationGhes2Permissions.
        :type metadata: str
        """

        self._metadata = metadata

    @property
    def organization_administration(self):
        """Gets the organization_administration of this InstallationGhes2Permissions.


        :return: The organization_administration of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._organization_administration

    @organization_administration.setter
    def organization_administration(self, organization_administration):
        """Sets the organization_administration of this InstallationGhes2Permissions.


        :param organization_administration: The organization_administration of this InstallationGhes2Permissions.
        :type organization_administration: str
        """

        self._organization_administration = organization_administration

    @property
    def pull_requests(self):
        """Gets the pull_requests of this InstallationGhes2Permissions.


        :return: The pull_requests of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._pull_requests

    @pull_requests.setter
    def pull_requests(self, pull_requests):
        """Sets the pull_requests of this InstallationGhes2Permissions.


        :param pull_requests: The pull_requests of this InstallationGhes2Permissions.
        :type pull_requests: str
        """

        self._pull_requests = pull_requests

    @property
    def statuses(self):
        """Gets the statuses of this InstallationGhes2Permissions.


        :return: The statuses of this InstallationGhes2Permissions.
        :rtype: str
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this InstallationGhes2Permissions.


        :param statuses: The statuses of this InstallationGhes2Permissions.
        :type statuses: str
        """

        self._statuses = statuses
