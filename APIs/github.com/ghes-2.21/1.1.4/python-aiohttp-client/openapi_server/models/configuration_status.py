# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_status_progress_inner import ConfigurationStatusProgressInner
from openapi_server import util


class ConfigurationStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, progress: List[ConfigurationStatusProgressInner]=None, status: str=None):
        """ConfigurationStatus - a model defined in OpenAPI

        :param progress: The progress of this ConfigurationStatus.
        :param status: The status of this ConfigurationStatus.
        """
        self.openapi_types = {
            'progress': List[ConfigurationStatusProgressInner],
            'status': str
        }

        self.attribute_map = {
            'progress': 'progress',
            'status': 'status'
        }

        self._progress = progress
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The configuration-status of this ConfigurationStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def progress(self):
        """Gets the progress of this ConfigurationStatus.


        :return: The progress of this ConfigurationStatus.
        :rtype: List[ConfigurationStatusProgressInner]
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this ConfigurationStatus.


        :param progress: The progress of this ConfigurationStatus.
        :type progress: List[ConfigurationStatusProgressInner]
        """

        self._progress = progress

    @property
    def status(self):
        """Gets the status of this ConfigurationStatus.


        :return: The status of this ConfigurationStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ConfigurationStatus.


        :param status: The status of this ConfigurationStatus.
        :type status: str
        """

        self._status = status
