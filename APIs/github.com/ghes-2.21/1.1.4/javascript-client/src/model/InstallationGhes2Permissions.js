/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstallationGhes2Permissions model module.
 * @module model/InstallationGhes2Permissions
 * @version 1.1.4
 */
class InstallationGhes2Permissions {
    /**
     * Constructs a new <code>InstallationGhes2Permissions</code>.
     * @alias module:model/InstallationGhes2Permissions
     */
    constructor() { 
        
        InstallationGhes2Permissions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstallationGhes2Permissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstallationGhes2Permissions} obj Optional instance to populate.
     * @return {module:model/InstallationGhes2Permissions} The populated <code>InstallationGhes2Permissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstallationGhes2Permissions();

            if (data.hasOwnProperty('checks')) {
                obj['checks'] = ApiClient.convertToType(data['checks'], 'String');
            }
            if (data.hasOwnProperty('contents')) {
                obj['contents'] = ApiClient.convertToType(data['contents'], 'String');
            }
            if (data.hasOwnProperty('deployments')) {
                obj['deployments'] = ApiClient.convertToType(data['deployments'], 'String');
            }
            if (data.hasOwnProperty('issues')) {
                obj['issues'] = ApiClient.convertToType(data['issues'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], 'String');
            }
            if (data.hasOwnProperty('organization_administration')) {
                obj['organization_administration'] = ApiClient.convertToType(data['organization_administration'], 'String');
            }
            if (data.hasOwnProperty('pull_requests')) {
                obj['pull_requests'] = ApiClient.convertToType(data['pull_requests'], 'String');
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstallationGhes2Permissions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstallationGhes2Permissions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['checks'] && !(typeof data['checks'] === 'string' || data['checks'] instanceof String)) {
            throw new Error("Expected the field `checks` to be a primitive type in the JSON string but got " + data['checks']);
        }
        // ensure the json data is a string
        if (data['contents'] && !(typeof data['contents'] === 'string' || data['contents'] instanceof String)) {
            throw new Error("Expected the field `contents` to be a primitive type in the JSON string but got " + data['contents']);
        }
        // ensure the json data is a string
        if (data['deployments'] && !(typeof data['deployments'] === 'string' || data['deployments'] instanceof String)) {
            throw new Error("Expected the field `deployments` to be a primitive type in the JSON string but got " + data['deployments']);
        }
        // ensure the json data is a string
        if (data['issues'] && !(typeof data['issues'] === 'string' || data['issues'] instanceof String)) {
            throw new Error("Expected the field `issues` to be a primitive type in the JSON string but got " + data['issues']);
        }
        // ensure the json data is a string
        if (data['metadata'] && !(typeof data['metadata'] === 'string' || data['metadata'] instanceof String)) {
            throw new Error("Expected the field `metadata` to be a primitive type in the JSON string but got " + data['metadata']);
        }
        // ensure the json data is a string
        if (data['organization_administration'] && !(typeof data['organization_administration'] === 'string' || data['organization_administration'] instanceof String)) {
            throw new Error("Expected the field `organization_administration` to be a primitive type in the JSON string but got " + data['organization_administration']);
        }
        // ensure the json data is a string
        if (data['pull_requests'] && !(typeof data['pull_requests'] === 'string' || data['pull_requests'] instanceof String)) {
            throw new Error("Expected the field `pull_requests` to be a primitive type in the JSON string but got " + data['pull_requests']);
        }
        // ensure the json data is a string
        if (data['statuses'] && !(typeof data['statuses'] === 'string' || data['statuses'] instanceof String)) {
            throw new Error("Expected the field `statuses` to be a primitive type in the JSON string but got " + data['statuses']);
        }

        return true;
    }


}



/**
 * @member {String} checks
 */
InstallationGhes2Permissions.prototype['checks'] = undefined;

/**
 * @member {String} contents
 */
InstallationGhes2Permissions.prototype['contents'] = undefined;

/**
 * @member {String} deployments
 */
InstallationGhes2Permissions.prototype['deployments'] = undefined;

/**
 * @member {String} issues
 */
InstallationGhes2Permissions.prototype['issues'] = undefined;

/**
 * @member {String} metadata
 */
InstallationGhes2Permissions.prototype['metadata'] = undefined;

/**
 * @member {String} organization_administration
 */
InstallationGhes2Permissions.prototype['organization_administration'] = undefined;

/**
 * @member {String} pull_requests
 */
InstallationGhes2Permissions.prototype['pull_requests'] = undefined;

/**
 * @member {String} statuses
 */
InstallationGhes2Permissions.prototype['statuses'] = undefined;






export default InstallationGhes2Permissions;

