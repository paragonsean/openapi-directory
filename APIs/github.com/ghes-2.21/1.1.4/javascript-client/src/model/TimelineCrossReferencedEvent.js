/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleUser from './SimpleUser';
import TimelineCrossReferencedEventSource from './TimelineCrossReferencedEventSource';

/**
 * The TimelineCrossReferencedEvent model module.
 * @module model/TimelineCrossReferencedEvent
 * @version 1.1.4
 */
class TimelineCrossReferencedEvent {
    /**
     * Constructs a new <code>TimelineCrossReferencedEvent</code>.
     * Timeline Cross Referenced Event
     * @alias module:model/TimelineCrossReferencedEvent
     * @param createdAt {Date} 
     * @param event {String} 
     * @param source {module:model/TimelineCrossReferencedEventSource} 
     * @param updatedAt {Date} 
     */
    constructor(createdAt, event, source, updatedAt) { 
        
        TimelineCrossReferencedEvent.initialize(this, createdAt, event, source, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, event, source, updatedAt) { 
        obj['created_at'] = createdAt;
        obj['event'] = event;
        obj['source'] = source;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>TimelineCrossReferencedEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimelineCrossReferencedEvent} obj Optional instance to populate.
     * @return {module:model/TimelineCrossReferencedEvent} The populated <code>TimelineCrossReferencedEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimelineCrossReferencedEvent();

            if (data.hasOwnProperty('actor')) {
                obj['actor'] = SimpleUser.constructFromObject(data['actor']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = TimelineCrossReferencedEventSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimelineCrossReferencedEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimelineCrossReferencedEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimelineCrossReferencedEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `actor`
        if (data['actor']) { // data not null
          SimpleUser.validateJSON(data['actor']);
        }
        // ensure the json data is a string
        if (data['event'] && !(typeof data['event'] === 'string' || data['event'] instanceof String)) {
            throw new Error("Expected the field `event` to be a primitive type in the JSON string but got " + data['event']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          TimelineCrossReferencedEventSource.validateJSON(data['source']);
        }

        return true;
    }


}

TimelineCrossReferencedEvent.RequiredProperties = ["created_at", "event", "source", "updated_at"];

/**
 * @member {module:model/SimpleUser} actor
 */
TimelineCrossReferencedEvent.prototype['actor'] = undefined;

/**
 * @member {Date} created_at
 */
TimelineCrossReferencedEvent.prototype['created_at'] = undefined;

/**
 * @member {String} event
 */
TimelineCrossReferencedEvent.prototype['event'] = undefined;

/**
 * @member {module:model/TimelineCrossReferencedEventSource} source
 */
TimelineCrossReferencedEvent.prototype['source'] = undefined;

/**
 * @member {Date} updated_at
 */
TimelineCrossReferencedEvent.prototype['updated_at'] = undefined;






export default TimelineCrossReferencedEvent;

