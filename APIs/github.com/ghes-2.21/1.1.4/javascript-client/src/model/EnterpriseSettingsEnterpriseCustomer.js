/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnterpriseSettingsEnterpriseCustomer model module.
 * @module model/EnterpriseSettingsEnterpriseCustomer
 * @version 1.1.4
 */
class EnterpriseSettingsEnterpriseCustomer {
    /**
     * Constructs a new <code>EnterpriseSettingsEnterpriseCustomer</code>.
     * @alias module:model/EnterpriseSettingsEnterpriseCustomer
     */
    constructor() { 
        
        EnterpriseSettingsEnterpriseCustomer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseSettingsEnterpriseCustomer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseSettingsEnterpriseCustomer} obj Optional instance to populate.
     * @return {module:model/EnterpriseSettingsEnterpriseCustomer} The populated <code>EnterpriseSettingsEnterpriseCustomer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseSettingsEnterpriseCustomer();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('public_key_data')) {
                obj['public_key_data'] = ApiClient.convertToType(data['public_key_data'], 'String');
            }
            if (data.hasOwnProperty('secret_key_data')) {
                obj['secret_key_data'] = ApiClient.convertToType(data['secret_key_data'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseSettingsEnterpriseCustomer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseSettingsEnterpriseCustomer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['public_key_data'] && !(typeof data['public_key_data'] === 'string' || data['public_key_data'] instanceof String)) {
            throw new Error("Expected the field `public_key_data` to be a primitive type in the JSON string but got " + data['public_key_data']);
        }
        // ensure the json data is a string
        if (data['secret_key_data'] && !(typeof data['secret_key_data'] === 'string' || data['secret_key_data'] instanceof String)) {
            throw new Error("Expected the field `secret_key_data` to be a primitive type in the JSON string but got " + data['secret_key_data']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}



/**
 * @member {String} email
 */
EnterpriseSettingsEnterpriseCustomer.prototype['email'] = undefined;

/**
 * @member {String} name
 */
EnterpriseSettingsEnterpriseCustomer.prototype['name'] = undefined;

/**
 * @member {String} public_key_data
 */
EnterpriseSettingsEnterpriseCustomer.prototype['public_key_data'] = undefined;

/**
 * @member {String} secret_key_data
 */
EnterpriseSettingsEnterpriseCustomer.prototype['secret_key_data'] = undefined;

/**
 * @member {String} uuid
 */
EnterpriseSettingsEnterpriseCustomer.prototype['uuid'] = undefined;






export default EnterpriseSettingsEnterpriseCustomer;

