/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaintenance_status.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaintenance_status::OAIMaintenance_status(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaintenance_status::OAIMaintenance_status() {
    this->initializeModel();
}

OAIMaintenance_status::~OAIMaintenance_status() {}

void OAIMaintenance_status::initializeModel() {

    m_connection_services_isSet = false;
    m_connection_services_isValid = false;

    m_scheduled_time_isSet = false;
    m_scheduled_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIMaintenance_status::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaintenance_status::fromJsonObject(QJsonObject json) {

    m_connection_services_isValid = ::OpenAPI::fromJsonValue(m_connection_services, json[QString("connection_services")]);
    m_connection_services_isSet = !json[QString("connection_services")].isNull() && m_connection_services_isValid;

    m_scheduled_time_isValid = ::OpenAPI::fromJsonValue(m_scheduled_time, json[QString("scheduled_time")]);
    m_scheduled_time_isSet = !json[QString("scheduled_time")].isNull() && m_scheduled_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIMaintenance_status::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaintenance_status::asJsonObject() const {
    QJsonObject obj;
    if (m_connection_services.size() > 0) {
        obj.insert(QString("connection_services"), ::OpenAPI::toJsonValue(m_connection_services));
    }
    if (m_scheduled_time_isSet) {
        obj.insert(QString("scheduled_time"), ::OpenAPI::toJsonValue(m_scheduled_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<OAIMaintenance_status_connection_services_inner> OAIMaintenance_status::getConnectionServices() const {
    return m_connection_services;
}
void OAIMaintenance_status::setConnectionServices(const QList<OAIMaintenance_status_connection_services_inner> &connection_services) {
    m_connection_services = connection_services;
    m_connection_services_isSet = true;
}

bool OAIMaintenance_status::is_connection_services_Set() const{
    return m_connection_services_isSet;
}

bool OAIMaintenance_status::is_connection_services_Valid() const{
    return m_connection_services_isValid;
}

QString OAIMaintenance_status::getScheduledTime() const {
    return m_scheduled_time;
}
void OAIMaintenance_status::setScheduledTime(const QString &scheduled_time) {
    m_scheduled_time = scheduled_time;
    m_scheduled_time_isSet = true;
}

bool OAIMaintenance_status::is_scheduled_time_Set() const{
    return m_scheduled_time_isSet;
}

bool OAIMaintenance_status::is_scheduled_time_Valid() const{
    return m_scheduled_time_isValid;
}

QString OAIMaintenance_status::getStatus() const {
    return m_status;
}
void OAIMaintenance_status::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIMaintenance_status::is_status_Set() const{
    return m_status_isSet;
}

bool OAIMaintenance_status::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIMaintenance_status::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connection_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaintenance_status::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
