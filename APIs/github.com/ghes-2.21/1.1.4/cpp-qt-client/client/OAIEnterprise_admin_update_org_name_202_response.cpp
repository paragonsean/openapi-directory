/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_admin_update_org_name_202_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_admin_update_org_name_202_response::OAIEnterprise_admin_update_org_name_202_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_admin_update_org_name_202_response::OAIEnterprise_admin_update_org_name_202_response() {
    this->initializeModel();
}

OAIEnterprise_admin_update_org_name_202_response::~OAIEnterprise_admin_update_org_name_202_response() {}

void OAIEnterprise_admin_update_org_name_202_response::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIEnterprise_admin_update_org_name_202_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_admin_update_org_name_202_response::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIEnterprise_admin_update_org_name_202_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_admin_update_org_name_202_response::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIEnterprise_admin_update_org_name_202_response::getMessage() const {
    return m_message;
}
void OAIEnterprise_admin_update_org_name_202_response::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIEnterprise_admin_update_org_name_202_response::is_message_Set() const{
    return m_message_isSet;
}

bool OAIEnterprise_admin_update_org_name_202_response::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIEnterprise_admin_update_org_name_202_response::getUrl() const {
    return m_url;
}
void OAIEnterprise_admin_update_org_name_202_response::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIEnterprise_admin_update_org_name_202_response::is_url_Set() const{
    return m_url_isSet;
}

bool OAIEnterprise_admin_update_org_name_202_response::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIEnterprise_admin_update_org_name_202_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_admin_update_org_name_202_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
