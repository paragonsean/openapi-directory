/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_milestone_overview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_milestone_overview::OAIEnterprise_milestone_overview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_milestone_overview::OAIEnterprise_milestone_overview() {
    this->initializeModel();
}

OAIEnterprise_milestone_overview::~OAIEnterprise_milestone_overview() {}

void OAIEnterprise_milestone_overview::initializeModel() {

    m_closed_milestones_isSet = false;
    m_closed_milestones_isValid = false;

    m_open_milestones_isSet = false;
    m_open_milestones_isValid = false;

    m_total_milestones_isSet = false;
    m_total_milestones_isValid = false;
}

void OAIEnterprise_milestone_overview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_milestone_overview::fromJsonObject(QJsonObject json) {

    m_closed_milestones_isValid = ::OpenAPI::fromJsonValue(m_closed_milestones, json[QString("closed_milestones")]);
    m_closed_milestones_isSet = !json[QString("closed_milestones")].isNull() && m_closed_milestones_isValid;

    m_open_milestones_isValid = ::OpenAPI::fromJsonValue(m_open_milestones, json[QString("open_milestones")]);
    m_open_milestones_isSet = !json[QString("open_milestones")].isNull() && m_open_milestones_isValid;

    m_total_milestones_isValid = ::OpenAPI::fromJsonValue(m_total_milestones, json[QString("total_milestones")]);
    m_total_milestones_isSet = !json[QString("total_milestones")].isNull() && m_total_milestones_isValid;
}

QString OAIEnterprise_milestone_overview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_milestone_overview::asJsonObject() const {
    QJsonObject obj;
    if (m_closed_milestones_isSet) {
        obj.insert(QString("closed_milestones"), ::OpenAPI::toJsonValue(m_closed_milestones));
    }
    if (m_open_milestones_isSet) {
        obj.insert(QString("open_milestones"), ::OpenAPI::toJsonValue(m_open_milestones));
    }
    if (m_total_milestones_isSet) {
        obj.insert(QString("total_milestones"), ::OpenAPI::toJsonValue(m_total_milestones));
    }
    return obj;
}

qint32 OAIEnterprise_milestone_overview::getClosedMilestones() const {
    return m_closed_milestones;
}
void OAIEnterprise_milestone_overview::setClosedMilestones(const qint32 &closed_milestones) {
    m_closed_milestones = closed_milestones;
    m_closed_milestones_isSet = true;
}

bool OAIEnterprise_milestone_overview::is_closed_milestones_Set() const{
    return m_closed_milestones_isSet;
}

bool OAIEnterprise_milestone_overview::is_closed_milestones_Valid() const{
    return m_closed_milestones_isValid;
}

qint32 OAIEnterprise_milestone_overview::getOpenMilestones() const {
    return m_open_milestones;
}
void OAIEnterprise_milestone_overview::setOpenMilestones(const qint32 &open_milestones) {
    m_open_milestones = open_milestones;
    m_open_milestones_isSet = true;
}

bool OAIEnterprise_milestone_overview::is_open_milestones_Set() const{
    return m_open_milestones_isSet;
}

bool OAIEnterprise_milestone_overview::is_open_milestones_Valid() const{
    return m_open_milestones_isValid;
}

qint32 OAIEnterprise_milestone_overview::getTotalMilestones() const {
    return m_total_milestones;
}
void OAIEnterprise_milestone_overview::setTotalMilestones(const qint32 &total_milestones) {
    m_total_milestones = total_milestones;
    m_total_milestones_isSet = true;
}

bool OAIEnterprise_milestone_overview::is_total_milestones_Set() const{
    return m_total_milestones_isSet;
}

bool OAIEnterprise_milestone_overview::is_total_milestones_Valid() const{
    return m_total_milestones_isValid;
}

bool OAIEnterprise_milestone_overview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_closed_milestones_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_milestones_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_milestones_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_milestone_overview::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_closed_milestones_isValid && m_open_milestones_isValid && m_total_milestones_isValid && true;
}

} // namespace OpenAPI
