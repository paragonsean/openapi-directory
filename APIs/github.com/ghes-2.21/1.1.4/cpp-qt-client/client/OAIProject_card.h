/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProject_card.h
 *
 * Project cards represent a scope of work.
 */

#ifndef OAIProject_card_H
#define OAIProject_card_H

#include <QJsonObject>

#include "OAINullable_simple_user.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINullable_simple_user;

class OAIProject_card : public OAIObject {
public:
    OAIProject_card();
    OAIProject_card(QString json);
    ~OAIProject_card() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isArchived() const;
    void setArchived(const bool &archived);
    bool is_archived_Set() const;
    bool is_archived_Valid() const;

    QString getColumnName() const;
    void setColumnName(const QString &column_name);
    bool is_column_name_Set() const;
    bool is_column_name_Valid() const;

    QString getColumnUrl() const;
    void setColumnUrl(const QString &column_url);
    bool is_column_url_Set() const;
    bool is_column_url_Valid() const;

    QString getContentUrl() const;
    void setContentUrl(const QString &content_url);
    bool is_content_url_Set() const;
    bool is_content_url_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAINullable_simple_user getCreator() const;
    void setCreator(const OAINullable_simple_user &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getProjectUrl() const;
    void setProjectUrl(const QString &project_url);
    bool is_project_url_Set() const;
    bool is_project_url_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_archived;
    bool m_archived_isSet;
    bool m_archived_isValid;

    QString m_column_name;
    bool m_column_name_isSet;
    bool m_column_name_isValid;

    QString m_column_url;
    bool m_column_url_isSet;
    bool m_column_url_isValid;

    QString m_content_url;
    bool m_content_url_isSet;
    bool m_content_url_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAINullable_simple_user m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_project_url;
    bool m_project_url_isSet;
    bool m_project_url_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProject_card)

#endif // OAIProject_card_H
