/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRate_limit_overview_resources.h
 *
 * 
 */

#ifndef OAIRate_limit_overview_resources_H
#define OAIRate_limit_overview_resources_H

#include <QJsonObject>

#include "OAIRate_limit.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRate_limit;

class OAIRate_limit_overview_resources : public OAIObject {
public:
    OAIRate_limit_overview_resources();
    OAIRate_limit_overview_resources(QString json);
    ~OAIRate_limit_overview_resources() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRate_limit getCodeScanningUpload() const;
    void setCodeScanningUpload(const OAIRate_limit &code_scanning_upload);
    bool is_code_scanning_upload_Set() const;
    bool is_code_scanning_upload_Valid() const;

    OAIRate_limit getCore() const;
    void setCore(const OAIRate_limit &core);
    bool is_core_Set() const;
    bool is_core_Valid() const;

    OAIRate_limit getGraphql() const;
    void setGraphql(const OAIRate_limit &graphql);
    bool is_graphql_Set() const;
    bool is_graphql_Valid() const;

    OAIRate_limit getIntegrationManifest() const;
    void setIntegrationManifest(const OAIRate_limit &integration_manifest);
    bool is_integration_manifest_Set() const;
    bool is_integration_manifest_Valid() const;

    OAIRate_limit getSearch() const;
    void setSearch(const OAIRate_limit &search);
    bool is_search_Set() const;
    bool is_search_Valid() const;

    OAIRate_limit getSourceImport() const;
    void setSourceImport(const OAIRate_limit &source_import);
    bool is_source_import_Set() const;
    bool is_source_import_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRate_limit m_code_scanning_upload;
    bool m_code_scanning_upload_isSet;
    bool m_code_scanning_upload_isValid;

    OAIRate_limit m_core;
    bool m_core_isSet;
    bool m_core_isValid;

    OAIRate_limit m_graphql;
    bool m_graphql_isSet;
    bool m_graphql_isValid;

    OAIRate_limit m_integration_manifest;
    bool m_integration_manifest_isSet;
    bool m_integration_manifest_isValid;

    OAIRate_limit m_search;
    bool m_search_isSet;
    bool m_search_isValid;

    OAIRate_limit m_source_import;
    bool m_source_import_isSet;
    bool m_source_import_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRate_limit_overview_resources)

#endif // OAIRate_limit_overview_resources_H
