/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMeta_root_200_response.h
 *
 * 
 */

#ifndef OAIMeta_root_200_response_H
#define OAIMeta_root_200_response_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMeta_root_200_response : public OAIObject {
public:
    OAIMeta_root_200_response();
    OAIMeta_root_200_response(QString json);
    ~OAIMeta_root_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationsUrl() const;
    void setAuthorizationsUrl(const QString &authorizations_url);
    bool is_authorizations_url_Set() const;
    bool is_authorizations_url_Valid() const;

    QString getCodeSearchUrl() const;
    void setCodeSearchUrl(const QString &code_search_url);
    bool is_code_search_url_Set() const;
    bool is_code_search_url_Valid() const;

    QString getCommitSearchUrl() const;
    void setCommitSearchUrl(const QString &commit_search_url);
    bool is_commit_search_url_Set() const;
    bool is_commit_search_url_Valid() const;

    QString getCurrentUserAuthorizationsHtmlUrl() const;
    void setCurrentUserAuthorizationsHtmlUrl(const QString &current_user_authorizations_html_url);
    bool is_current_user_authorizations_html_url_Set() const;
    bool is_current_user_authorizations_html_url_Valid() const;

    QString getCurrentUserRepositoriesUrl() const;
    void setCurrentUserRepositoriesUrl(const QString &current_user_repositories_url);
    bool is_current_user_repositories_url_Set() const;
    bool is_current_user_repositories_url_Valid() const;

    QString getCurrentUserUrl() const;
    void setCurrentUserUrl(const QString &current_user_url);
    bool is_current_user_url_Set() const;
    bool is_current_user_url_Valid() const;

    QString getEmailsUrl() const;
    void setEmailsUrl(const QString &emails_url);
    bool is_emails_url_Set() const;
    bool is_emails_url_Valid() const;

    QString getEmojisUrl() const;
    void setEmojisUrl(const QString &emojis_url);
    bool is_emojis_url_Set() const;
    bool is_emojis_url_Valid() const;

    QString getEventsUrl() const;
    void setEventsUrl(const QString &events_url);
    bool is_events_url_Set() const;
    bool is_events_url_Valid() const;

    QString getFeedsUrl() const;
    void setFeedsUrl(const QString &feeds_url);
    bool is_feeds_url_Set() const;
    bool is_feeds_url_Valid() const;

    QString getFollowersUrl() const;
    void setFollowersUrl(const QString &followers_url);
    bool is_followers_url_Set() const;
    bool is_followers_url_Valid() const;

    QString getFollowingUrl() const;
    void setFollowingUrl(const QString &following_url);
    bool is_following_url_Set() const;
    bool is_following_url_Valid() const;

    QString getGistsUrl() const;
    void setGistsUrl(const QString &gists_url);
    bool is_gists_url_Set() const;
    bool is_gists_url_Valid() const;

    QString getHubUrl() const;
    void setHubUrl(const QString &hub_url);
    bool is_hub_url_Set() const;
    bool is_hub_url_Valid() const;

    QString getIssueSearchUrl() const;
    void setIssueSearchUrl(const QString &issue_search_url);
    bool is_issue_search_url_Set() const;
    bool is_issue_search_url_Valid() const;

    QString getIssuesUrl() const;
    void setIssuesUrl(const QString &issues_url);
    bool is_issues_url_Set() const;
    bool is_issues_url_Valid() const;

    QString getKeysUrl() const;
    void setKeysUrl(const QString &keys_url);
    bool is_keys_url_Set() const;
    bool is_keys_url_Valid() const;

    QString getLabelSearchUrl() const;
    void setLabelSearchUrl(const QString &label_search_url);
    bool is_label_search_url_Set() const;
    bool is_label_search_url_Valid() const;

    QString getNotificationsUrl() const;
    void setNotificationsUrl(const QString &notifications_url);
    bool is_notifications_url_Set() const;
    bool is_notifications_url_Valid() const;

    QString getOrganizationRepositoriesUrl() const;
    void setOrganizationRepositoriesUrl(const QString &organization_repositories_url);
    bool is_organization_repositories_url_Set() const;
    bool is_organization_repositories_url_Valid() const;

    QString getOrganizationTeamsUrl() const;
    void setOrganizationTeamsUrl(const QString &organization_teams_url);
    bool is_organization_teams_url_Set() const;
    bool is_organization_teams_url_Valid() const;

    QString getOrganizationUrl() const;
    void setOrganizationUrl(const QString &organization_url);
    bool is_organization_url_Set() const;
    bool is_organization_url_Valid() const;

    QString getPublicGistsUrl() const;
    void setPublicGistsUrl(const QString &public_gists_url);
    bool is_public_gists_url_Set() const;
    bool is_public_gists_url_Valid() const;

    QString getRateLimitUrl() const;
    void setRateLimitUrl(const QString &rate_limit_url);
    bool is_rate_limit_url_Set() const;
    bool is_rate_limit_url_Valid() const;

    QString getRepositorySearchUrl() const;
    void setRepositorySearchUrl(const QString &repository_search_url);
    bool is_repository_search_url_Set() const;
    bool is_repository_search_url_Valid() const;

    QString getRepositoryUrl() const;
    void setRepositoryUrl(const QString &repository_url);
    bool is_repository_url_Set() const;
    bool is_repository_url_Valid() const;

    QString getStarredGistsUrl() const;
    void setStarredGistsUrl(const QString &starred_gists_url);
    bool is_starred_gists_url_Set() const;
    bool is_starred_gists_url_Valid() const;

    QString getStarredUrl() const;
    void setStarredUrl(const QString &starred_url);
    bool is_starred_url_Set() const;
    bool is_starred_url_Valid() const;

    QString getTopicSearchUrl() const;
    void setTopicSearchUrl(const QString &topic_search_url);
    bool is_topic_search_url_Set() const;
    bool is_topic_search_url_Valid() const;

    QString getUserOrganizationsUrl() const;
    void setUserOrganizationsUrl(const QString &user_organizations_url);
    bool is_user_organizations_url_Set() const;
    bool is_user_organizations_url_Valid() const;

    QString getUserRepositoriesUrl() const;
    void setUserRepositoriesUrl(const QString &user_repositories_url);
    bool is_user_repositories_url_Set() const;
    bool is_user_repositories_url_Valid() const;

    QString getUserSearchUrl() const;
    void setUserSearchUrl(const QString &user_search_url);
    bool is_user_search_url_Set() const;
    bool is_user_search_url_Valid() const;

    QString getUserUrl() const;
    void setUserUrl(const QString &user_url);
    bool is_user_url_Set() const;
    bool is_user_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorizations_url;
    bool m_authorizations_url_isSet;
    bool m_authorizations_url_isValid;

    QString m_code_search_url;
    bool m_code_search_url_isSet;
    bool m_code_search_url_isValid;

    QString m_commit_search_url;
    bool m_commit_search_url_isSet;
    bool m_commit_search_url_isValid;

    QString m_current_user_authorizations_html_url;
    bool m_current_user_authorizations_html_url_isSet;
    bool m_current_user_authorizations_html_url_isValid;

    QString m_current_user_repositories_url;
    bool m_current_user_repositories_url_isSet;
    bool m_current_user_repositories_url_isValid;

    QString m_current_user_url;
    bool m_current_user_url_isSet;
    bool m_current_user_url_isValid;

    QString m_emails_url;
    bool m_emails_url_isSet;
    bool m_emails_url_isValid;

    QString m_emojis_url;
    bool m_emojis_url_isSet;
    bool m_emojis_url_isValid;

    QString m_events_url;
    bool m_events_url_isSet;
    bool m_events_url_isValid;

    QString m_feeds_url;
    bool m_feeds_url_isSet;
    bool m_feeds_url_isValid;

    QString m_followers_url;
    bool m_followers_url_isSet;
    bool m_followers_url_isValid;

    QString m_following_url;
    bool m_following_url_isSet;
    bool m_following_url_isValid;

    QString m_gists_url;
    bool m_gists_url_isSet;
    bool m_gists_url_isValid;

    QString m_hub_url;
    bool m_hub_url_isSet;
    bool m_hub_url_isValid;

    QString m_issue_search_url;
    bool m_issue_search_url_isSet;
    bool m_issue_search_url_isValid;

    QString m_issues_url;
    bool m_issues_url_isSet;
    bool m_issues_url_isValid;

    QString m_keys_url;
    bool m_keys_url_isSet;
    bool m_keys_url_isValid;

    QString m_label_search_url;
    bool m_label_search_url_isSet;
    bool m_label_search_url_isValid;

    QString m_notifications_url;
    bool m_notifications_url_isSet;
    bool m_notifications_url_isValid;

    QString m_organization_repositories_url;
    bool m_organization_repositories_url_isSet;
    bool m_organization_repositories_url_isValid;

    QString m_organization_teams_url;
    bool m_organization_teams_url_isSet;
    bool m_organization_teams_url_isValid;

    QString m_organization_url;
    bool m_organization_url_isSet;
    bool m_organization_url_isValid;

    QString m_public_gists_url;
    bool m_public_gists_url_isSet;
    bool m_public_gists_url_isValid;

    QString m_rate_limit_url;
    bool m_rate_limit_url_isSet;
    bool m_rate_limit_url_isValid;

    QString m_repository_search_url;
    bool m_repository_search_url_isSet;
    bool m_repository_search_url_isValid;

    QString m_repository_url;
    bool m_repository_url_isSet;
    bool m_repository_url_isValid;

    QString m_starred_gists_url;
    bool m_starred_gists_url_isSet;
    bool m_starred_gists_url_isValid;

    QString m_starred_url;
    bool m_starred_url_isSet;
    bool m_starred_url_isValid;

    QString m_topic_search_url;
    bool m_topic_search_url_isSet;
    bool m_topic_search_url_isValid;

    QString m_user_organizations_url;
    bool m_user_organizations_url_isSet;
    bool m_user_organizations_url_isValid;

    QString m_user_repositories_url;
    bool m_user_repositories_url_isSet;
    bool m_user_repositories_url_isValid;

    QString m_user_search_url;
    bool m_user_search_url_isSet;
    bool m_user_search_url_isValid;

    QString m_user_url;
    bool m_user_url_isSet;
    bool m_user_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMeta_root_200_response)

#endif // OAIMeta_root_200_response_H
