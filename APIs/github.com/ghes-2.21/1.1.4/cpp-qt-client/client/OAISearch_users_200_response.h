/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearch_users_200_response.h
 *
 * 
 */

#ifndef OAISearch_users_200_response_H
#define OAISearch_users_200_response_H

#include <QJsonObject>

#include "OAIUser_search_result_item.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser_search_result_item;

class OAISearch_users_200_response : public OAIObject {
public:
    OAISearch_users_200_response();
    OAISearch_users_200_response(QString json);
    ~OAISearch_users_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIncompleteResults() const;
    void setIncompleteResults(const bool &incomplete_results);
    bool is_incomplete_results_Set() const;
    bool is_incomplete_results_Valid() const;

    QList<OAIUser_search_result_item> getItems() const;
    void setItems(const QList<OAIUser_search_result_item> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_incomplete_results;
    bool m_incomplete_results_isSet;
    bool m_incomplete_results_isValid;

    QList<OAIUser_search_result_item> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearch_users_200_response)

#endif // OAISearch_users_200_response_H
