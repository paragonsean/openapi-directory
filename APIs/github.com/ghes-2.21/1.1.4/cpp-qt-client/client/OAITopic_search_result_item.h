/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITopic_search_result_item.h
 *
 * Topic Search Result Item
 */

#ifndef OAITopic_search_result_item_H
#define OAITopic_search_result_item_H

#include <QJsonObject>

#include "OAISearch_result_text_matches_inner.h"
#include "OAITopic_search_result_item_aliases_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITopic_search_result_item_aliases_inner;
class OAISearch_result_text_matches_inner;

class OAITopic_search_result_item : public OAIObject {
public:
    OAITopic_search_result_item();
    OAITopic_search_result_item(QString json);
    ~OAITopic_search_result_item() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITopic_search_result_item_aliases_inner> getAliases() const;
    void setAliases(const QList<OAITopic_search_result_item_aliases_inner> &aliases);
    bool is_aliases_Set() const;
    bool is_aliases_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    bool isCurated() const;
    void setCurated(const bool &curated);
    bool is_curated_Set() const;
    bool is_curated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isFeatured() const;
    void setFeatured(const bool &featured);
    bool is_featured_Set() const;
    bool is_featured_Valid() const;

    QString getLogoUrl() const;
    void setLogoUrl(const QString &logo_url);
    bool is_logo_url_Set() const;
    bool is_logo_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAITopic_search_result_item_aliases_inner> getRelated() const;
    void setRelated(const QList<OAITopic_search_result_item_aliases_inner> &related);
    bool is_related_Set() const;
    bool is_related_Valid() const;

    QString getReleased() const;
    void setReleased(const QString &released);
    bool is_released_Set() const;
    bool is_released_Valid() const;

    qint32 getRepositoryCount() const;
    void setRepositoryCount(const qint32 &repository_count);
    bool is_repository_count_Set() const;
    bool is_repository_count_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    QList<OAISearch_result_text_matches_inner> getTextMatches() const;
    void setTextMatches(const QList<OAISearch_result_text_matches_inner> &text_matches);
    bool is_text_matches_Set() const;
    bool is_text_matches_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITopic_search_result_item_aliases_inner> m_aliases;
    bool m_aliases_isSet;
    bool m_aliases_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    bool m_curated;
    bool m_curated_isSet;
    bool m_curated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_featured;
    bool m_featured_isSet;
    bool m_featured_isValid;

    QString m_logo_url;
    bool m_logo_url_isSet;
    bool m_logo_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAITopic_search_result_item_aliases_inner> m_related;
    bool m_related_isSet;
    bool m_related_isValid;

    QString m_released;
    bool m_released_isSet;
    bool m_released_isValid;

    qint32 m_repository_count;
    bool m_repository_count_isSet;
    bool m_repository_count_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    QList<OAISearch_result_text_matches_inner> m_text_matches;
    bool m_text_matches_isSet;
    bool m_text_matches_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITopic_search_result_item)

#endif // OAITopic_search_result_item_H
