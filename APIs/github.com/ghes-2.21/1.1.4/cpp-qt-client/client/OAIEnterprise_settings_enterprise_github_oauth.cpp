/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_settings_enterprise_github_oauth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_settings_enterprise_github_oauth::OAIEnterprise_settings_enterprise_github_oauth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_settings_enterprise_github_oauth::OAIEnterprise_settings_enterprise_github_oauth() {
    this->initializeModel();
}

OAIEnterprise_settings_enterprise_github_oauth::~OAIEnterprise_settings_enterprise_github_oauth() {}

void OAIEnterprise_settings_enterprise_github_oauth::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_client_secret_isSet = false;
    m_client_secret_isValid = false;

    m_organization_name_isSet = false;
    m_organization_name_isValid = false;

    m_organization_team_isSet = false;
    m_organization_team_isValid = false;
}

void OAIEnterprise_settings_enterprise_github_oauth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_settings_enterprise_github_oauth::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("client_id")]);
    m_client_id_isSet = !json[QString("client_id")].isNull() && m_client_id_isValid;

    m_client_secret_isValid = ::OpenAPI::fromJsonValue(m_client_secret, json[QString("client_secret")]);
    m_client_secret_isSet = !json[QString("client_secret")].isNull() && m_client_secret_isValid;

    m_organization_name_isValid = ::OpenAPI::fromJsonValue(m_organization_name, json[QString("organization_name")]);
    m_organization_name_isSet = !json[QString("organization_name")].isNull() && m_organization_name_isValid;

    m_organization_team_isValid = ::OpenAPI::fromJsonValue(m_organization_team, json[QString("organization_team")]);
    m_organization_team_isSet = !json[QString("organization_team")].isNull() && m_organization_team_isValid;
}

QString OAIEnterprise_settings_enterprise_github_oauth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_settings_enterprise_github_oauth::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("client_id"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_client_secret_isSet) {
        obj.insert(QString("client_secret"), ::OpenAPI::toJsonValue(m_client_secret));
    }
    if (m_organization_name_isSet) {
        obj.insert(QString("organization_name"), ::OpenAPI::toJsonValue(m_organization_name));
    }
    if (m_organization_team_isSet) {
        obj.insert(QString("organization_team"), ::OpenAPI::toJsonValue(m_organization_team));
    }
    return obj;
}

QString OAIEnterprise_settings_enterprise_github_oauth::getClientId() const {
    return m_client_id;
}
void OAIEnterprise_settings_enterprise_github_oauth::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QString OAIEnterprise_settings_enterprise_github_oauth::getClientSecret() const {
    return m_client_secret;
}
void OAIEnterprise_settings_enterprise_github_oauth::setClientSecret(const QString &client_secret) {
    m_client_secret = client_secret;
    m_client_secret_isSet = true;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_client_secret_Set() const{
    return m_client_secret_isSet;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_client_secret_Valid() const{
    return m_client_secret_isValid;
}

QString OAIEnterprise_settings_enterprise_github_oauth::getOrganizationName() const {
    return m_organization_name;
}
void OAIEnterprise_settings_enterprise_github_oauth::setOrganizationName(const QString &organization_name) {
    m_organization_name = organization_name;
    m_organization_name_isSet = true;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_organization_name_Set() const{
    return m_organization_name_isSet;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_organization_name_Valid() const{
    return m_organization_name_isValid;
}

QString OAIEnterprise_settings_enterprise_github_oauth::getOrganizationTeam() const {
    return m_organization_team;
}
void OAIEnterprise_settings_enterprise_github_oauth::setOrganizationTeam(const QString &organization_team) {
    m_organization_team = organization_team;
    m_organization_team_isSet = true;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_organization_team_Set() const{
    return m_organization_team_isSet;
}

bool OAIEnterprise_settings_enterprise_github_oauth::is_organization_team_Valid() const{
    return m_organization_team_isValid;
}

bool OAIEnterprise_settings_enterprise_github_oauth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_team_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_settings_enterprise_github_oauth::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
