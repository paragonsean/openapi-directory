/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPulls_remove_requested_reviewers_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPulls_remove_requested_reviewers_request::OAIPulls_remove_requested_reviewers_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPulls_remove_requested_reviewers_request::OAIPulls_remove_requested_reviewers_request() {
    this->initializeModel();
}

OAIPulls_remove_requested_reviewers_request::~OAIPulls_remove_requested_reviewers_request() {}

void OAIPulls_remove_requested_reviewers_request::initializeModel() {

    m_reviewers_isSet = false;
    m_reviewers_isValid = false;

    m_team_reviewers_isSet = false;
    m_team_reviewers_isValid = false;
}

void OAIPulls_remove_requested_reviewers_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPulls_remove_requested_reviewers_request::fromJsonObject(QJsonObject json) {

    m_reviewers_isValid = ::OpenAPI::fromJsonValue(m_reviewers, json[QString("reviewers")]);
    m_reviewers_isSet = !json[QString("reviewers")].isNull() && m_reviewers_isValid;

    m_team_reviewers_isValid = ::OpenAPI::fromJsonValue(m_team_reviewers, json[QString("team_reviewers")]);
    m_team_reviewers_isSet = !json[QString("team_reviewers")].isNull() && m_team_reviewers_isValid;
}

QString OAIPulls_remove_requested_reviewers_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPulls_remove_requested_reviewers_request::asJsonObject() const {
    QJsonObject obj;
    if (m_reviewers.size() > 0) {
        obj.insert(QString("reviewers"), ::OpenAPI::toJsonValue(m_reviewers));
    }
    if (m_team_reviewers.size() > 0) {
        obj.insert(QString("team_reviewers"), ::OpenAPI::toJsonValue(m_team_reviewers));
    }
    return obj;
}

QList<QString> OAIPulls_remove_requested_reviewers_request::getReviewers() const {
    return m_reviewers;
}
void OAIPulls_remove_requested_reviewers_request::setReviewers(const QList<QString> &reviewers) {
    m_reviewers = reviewers;
    m_reviewers_isSet = true;
}

bool OAIPulls_remove_requested_reviewers_request::is_reviewers_Set() const{
    return m_reviewers_isSet;
}

bool OAIPulls_remove_requested_reviewers_request::is_reviewers_Valid() const{
    return m_reviewers_isValid;
}

QList<QString> OAIPulls_remove_requested_reviewers_request::getTeamReviewers() const {
    return m_team_reviewers;
}
void OAIPulls_remove_requested_reviewers_request::setTeamReviewers(const QList<QString> &team_reviewers) {
    m_team_reviewers = team_reviewers;
    m_team_reviewers_isSet = true;
}

bool OAIPulls_remove_requested_reviewers_request::is_team_reviewers_Set() const{
    return m_team_reviewers_isSet;
}

bool OAIPulls_remove_requested_reviewers_request::is_team_reviewers_Valid() const{
    return m_team_reviewers_isValid;
}

bool OAIPulls_remove_requested_reviewers_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reviewers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_reviewers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPulls_remove_requested_reviewers_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_reviewers_isValid && true;
}

} // namespace OpenAPI
