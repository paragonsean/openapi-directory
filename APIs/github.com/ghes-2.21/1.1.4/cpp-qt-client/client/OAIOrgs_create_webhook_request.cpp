/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrgs_create_webhook_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrgs_create_webhook_request::OAIOrgs_create_webhook_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrgs_create_webhook_request::OAIOrgs_create_webhook_request() {
    this->initializeModel();
}

OAIOrgs_create_webhook_request::~OAIOrgs_create_webhook_request() {}

void OAIOrgs_create_webhook_request::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_config_isSet = false;
    m_config_isValid = false;

    m_events_isSet = false;
    m_events_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIOrgs_create_webhook_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrgs_create_webhook_request::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;

    m_events_isValid = ::OpenAPI::fromJsonValue(m_events, json[QString("events")]);
    m_events_isSet = !json[QString("events")].isNull() && m_events_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIOrgs_create_webhook_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrgs_create_webhook_request::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_config.isSet()) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_events.size() > 0) {
        obj.insert(QString("events"), ::OpenAPI::toJsonValue(m_events));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

bool OAIOrgs_create_webhook_request::isActive() const {
    return m_active;
}
void OAIOrgs_create_webhook_request::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIOrgs_create_webhook_request::is_active_Set() const{
    return m_active_isSet;
}

bool OAIOrgs_create_webhook_request::is_active_Valid() const{
    return m_active_isValid;
}

OAIOrgs_create_webhook_request_config OAIOrgs_create_webhook_request::getConfig() const {
    return m_config;
}
void OAIOrgs_create_webhook_request::setConfig(const OAIOrgs_create_webhook_request_config &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIOrgs_create_webhook_request::is_config_Set() const{
    return m_config_isSet;
}

bool OAIOrgs_create_webhook_request::is_config_Valid() const{
    return m_config_isValid;
}

QList<QString> OAIOrgs_create_webhook_request::getEvents() const {
    return m_events;
}
void OAIOrgs_create_webhook_request::setEvents(const QList<QString> &events) {
    m_events = events;
    m_events_isSet = true;
}

bool OAIOrgs_create_webhook_request::is_events_Set() const{
    return m_events_isSet;
}

bool OAIOrgs_create_webhook_request::is_events_Valid() const{
    return m_events_isValid;
}

QString OAIOrgs_create_webhook_request::getName() const {
    return m_name;
}
void OAIOrgs_create_webhook_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOrgs_create_webhook_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrgs_create_webhook_request::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIOrgs_create_webhook_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_events.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrgs_create_webhook_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_config_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
