/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGists_get_403_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGists_get_403_response::OAIGists_get_403_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGists_get_403_response::OAIGists_get_403_response() {
    this->initializeModel();
}

OAIGists_get_403_response::~OAIGists_get_403_response() {}

void OAIGists_get_403_response::initializeModel() {

    m_block_isSet = false;
    m_block_isValid = false;

    m_documentation_url_isSet = false;
    m_documentation_url_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIGists_get_403_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGists_get_403_response::fromJsonObject(QJsonObject json) {

    m_block_isValid = ::OpenAPI::fromJsonValue(m_block, json[QString("block")]);
    m_block_isSet = !json[QString("block")].isNull() && m_block_isValid;

    m_documentation_url_isValid = ::OpenAPI::fromJsonValue(m_documentation_url, json[QString("documentation_url")]);
    m_documentation_url_isSet = !json[QString("documentation_url")].isNull() && m_documentation_url_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIGists_get_403_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGists_get_403_response::asJsonObject() const {
    QJsonObject obj;
    if (m_block.isSet()) {
        obj.insert(QString("block"), ::OpenAPI::toJsonValue(m_block));
    }
    if (m_documentation_url_isSet) {
        obj.insert(QString("documentation_url"), ::OpenAPI::toJsonValue(m_documentation_url));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

OAIGists_get_403_response_block OAIGists_get_403_response::getBlock() const {
    return m_block;
}
void OAIGists_get_403_response::setBlock(const OAIGists_get_403_response_block &block) {
    m_block = block;
    m_block_isSet = true;
}

bool OAIGists_get_403_response::is_block_Set() const{
    return m_block_isSet;
}

bool OAIGists_get_403_response::is_block_Valid() const{
    return m_block_isValid;
}

QString OAIGists_get_403_response::getDocumentationUrl() const {
    return m_documentation_url;
}
void OAIGists_get_403_response::setDocumentationUrl(const QString &documentation_url) {
    m_documentation_url = documentation_url;
    m_documentation_url_isSet = true;
}

bool OAIGists_get_403_response::is_documentation_url_Set() const{
    return m_documentation_url_isSet;
}

bool OAIGists_get_403_response::is_documentation_url_Valid() const{
    return m_documentation_url_isValid;
}

QString OAIGists_get_403_response::getMessage() const {
    return m_message;
}
void OAIGists_get_403_response::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGists_get_403_response::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGists_get_403_response::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIGists_get_403_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_documentation_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGists_get_403_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
