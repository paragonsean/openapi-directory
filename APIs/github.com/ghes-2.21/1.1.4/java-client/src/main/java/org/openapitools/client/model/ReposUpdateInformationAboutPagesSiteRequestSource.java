/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.client.model.ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory &#x60;/docs&#x60;. Possible values are &#x60;\&quot;gh-pages\&quot;&#x60;, &#x60;\&quot;master\&quot;&#x60;, and &#x60;\&quot;master /docs\&quot;&#x60;.
 */
@JsonAdapter(ReposUpdateInformationAboutPagesSiteRequestSource.Adapter.class)
public enum ReposUpdateInformationAboutPagesSiteRequestSource {
  
  GH_PAGES("gh-pages"),
  
  MASTER("master"),
  
  MASTER_DOCS("master /docs");

  private AnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf value;

  ReposUpdateInformationAboutPagesSiteRequestSource(AnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf value) {
    this.value = value;
  }

  public AnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ReposUpdateInformationAboutPagesSiteRequestSource fromValue(AnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf value) {
    for (ReposUpdateInformationAboutPagesSiteRequestSource b : ReposUpdateInformationAboutPagesSiteRequestSource.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ReposUpdateInformationAboutPagesSiteRequestSource> {
    @Override
    public void write(final JsonWriter jsonWriter, final ReposUpdateInformationAboutPagesSiteRequestSource enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ReposUpdateInformationAboutPagesSiteRequestSource read(final JsonReader jsonReader) throws IOException {
      AnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf value = jsonReader.nextAnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf();
      return ReposUpdateInformationAboutPagesSiteRequestSource.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    AnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf value = jsonElement.getAsAnyOfstringreposUpdateInformationAboutPagesSiteRequestSourceAnyOf();
    ReposUpdateInformationAboutPagesSiteRequestSource.fromValue(value);
  }
}

