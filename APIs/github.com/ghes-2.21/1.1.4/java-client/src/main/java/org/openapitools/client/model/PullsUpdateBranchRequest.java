/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PullsUpdateBranchRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:08:59.486661-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PullsUpdateBranchRequest {
  public static final String SERIALIZED_NAME_EXPECTED_HEAD_SHA = "expected_head_sha";
  @SerializedName(SERIALIZED_NAME_EXPECTED_HEAD_SHA)
  private String expectedHeadSha;

  public PullsUpdateBranchRequest() {
  }

  public PullsUpdateBranchRequest expectedHeadSha(String expectedHeadSha) {
    this.expectedHeadSha = expectedHeadSha;
    return this;
  }

  /**
   * The expected SHA of the pull request&#39;s HEAD ref. This is the most recent commit on the pull request&#39;s branch. If the expected SHA does not match the pull request&#39;s HEAD, you will receive a &#x60;422 Unprocessable Entity&#x60; status. You can use the \&quot;[List commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits)\&quot; endpoint to find the most recent commit SHA. Default: SHA of the pull request&#39;s current HEAD ref.
   * @return expectedHeadSha
   */
  @javax.annotation.Nullable
  public String getExpectedHeadSha() {
    return expectedHeadSha;
  }

  public void setExpectedHeadSha(String expectedHeadSha) {
    this.expectedHeadSha = expectedHeadSha;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PullsUpdateBranchRequest pullsUpdateBranchRequest = (PullsUpdateBranchRequest) o;
    return Objects.equals(this.expectedHeadSha, pullsUpdateBranchRequest.expectedHeadSha);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expectedHeadSha);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PullsUpdateBranchRequest {\n");
    sb.append("    expectedHeadSha: ").append(toIndentedString(expectedHeadSha)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("expected_head_sha");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PullsUpdateBranchRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PullsUpdateBranchRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PullsUpdateBranchRequest is not found in the empty JSON string", PullsUpdateBranchRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PullsUpdateBranchRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PullsUpdateBranchRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("expected_head_sha") != null && !jsonObj.get("expected_head_sha").isJsonNull()) && !jsonObj.get("expected_head_sha").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expected_head_sha` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expected_head_sha").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PullsUpdateBranchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PullsUpdateBranchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PullsUpdateBranchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PullsUpdateBranchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PullsUpdateBranchRequest>() {
           @Override
           public void write(JsonWriter out, PullsUpdateBranchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PullsUpdateBranchRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PullsUpdateBranchRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PullsUpdateBranchRequest
   * @throws IOException if the JSON string is invalid with respect to PullsUpdateBranchRequest
   */
  public static PullsUpdateBranchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PullsUpdateBranchRequest.class);
  }

  /**
   * Convert an instance of PullsUpdateBranchRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

