/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.OrganizationFullPlan;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OrganizationFull
 */
public class OrganizationFullTest {
    private final OrganizationFull model = new OrganizationFull();

    /**
     * Model tests for OrganizationFull
     */
    @Test
    public void testOrganizationFull() {
        // TODO: test OrganizationFull
    }

    /**
     * Test the property 'avatarUrl'
     */
    @Test
    public void avatarUrlTest() {
        // TODO: test avatarUrl
    }

    /**
     * Test the property 'billingEmail'
     */
    @Test
    public void billingEmailTest() {
        // TODO: test billingEmail
    }

    /**
     * Test the property 'blog'
     */
    @Test
    public void blogTest() {
        // TODO: test blog
    }

    /**
     * Test the property 'collaborators'
     */
    @Test
    public void collaboratorsTest() {
        // TODO: test collaborators
    }

    /**
     * Test the property 'company'
     */
    @Test
    public void companyTest() {
        // TODO: test company
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultRepositoryPermission'
     */
    @Test
    public void defaultRepositoryPermissionTest() {
        // TODO: test defaultRepositoryPermission
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'diskUsage'
     */
    @Test
    public void diskUsageTest() {
        // TODO: test diskUsage
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'eventsUrl'
     */
    @Test
    public void eventsUrlTest() {
        // TODO: test eventsUrl
    }

    /**
     * Test the property 'followers'
     */
    @Test
    public void followersTest() {
        // TODO: test followers
    }

    /**
     * Test the property 'following'
     */
    @Test
    public void followingTest() {
        // TODO: test following
    }

    /**
     * Test the property 'hasOrganizationProjects'
     */
    @Test
    public void hasOrganizationProjectsTest() {
        // TODO: test hasOrganizationProjects
    }

    /**
     * Test the property 'hasRepositoryProjects'
     */
    @Test
    public void hasRepositoryProjectsTest() {
        // TODO: test hasRepositoryProjects
    }

    /**
     * Test the property 'hooksUrl'
     */
    @Test
    public void hooksUrlTest() {
        // TODO: test hooksUrl
    }

    /**
     * Test the property 'htmlUrl'
     */
    @Test
    public void htmlUrlTest() {
        // TODO: test htmlUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isVerified'
     */
    @Test
    public void isVerifiedTest() {
        // TODO: test isVerified
    }

    /**
     * Test the property 'issuesUrl'
     */
    @Test
    public void issuesUrlTest() {
        // TODO: test issuesUrl
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'login'
     */
    @Test
    public void loginTest() {
        // TODO: test login
    }

    /**
     * Test the property 'membersAllowedRepositoryCreationType'
     */
    @Test
    public void membersAllowedRepositoryCreationTypeTest() {
        // TODO: test membersAllowedRepositoryCreationType
    }

    /**
     * Test the property 'membersCanCreateInternalRepositories'
     */
    @Test
    public void membersCanCreateInternalRepositoriesTest() {
        // TODO: test membersCanCreateInternalRepositories
    }

    /**
     * Test the property 'membersCanCreatePages'
     */
    @Test
    public void membersCanCreatePagesTest() {
        // TODO: test membersCanCreatePages
    }

    /**
     * Test the property 'membersCanCreatePrivatePages'
     */
    @Test
    public void membersCanCreatePrivatePagesTest() {
        // TODO: test membersCanCreatePrivatePages
    }

    /**
     * Test the property 'membersCanCreatePrivateRepositories'
     */
    @Test
    public void membersCanCreatePrivateRepositoriesTest() {
        // TODO: test membersCanCreatePrivateRepositories
    }

    /**
     * Test the property 'membersCanCreatePublicPages'
     */
    @Test
    public void membersCanCreatePublicPagesTest() {
        // TODO: test membersCanCreatePublicPages
    }

    /**
     * Test the property 'membersCanCreatePublicRepositories'
     */
    @Test
    public void membersCanCreatePublicRepositoriesTest() {
        // TODO: test membersCanCreatePublicRepositories
    }

    /**
     * Test the property 'membersCanCreateRepositories'
     */
    @Test
    public void membersCanCreateRepositoriesTest() {
        // TODO: test membersCanCreateRepositories
    }

    /**
     * Test the property 'membersUrl'
     */
    @Test
    public void membersUrlTest() {
        // TODO: test membersUrl
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeId'
     */
    @Test
    public void nodeIdTest() {
        // TODO: test nodeId
    }

    /**
     * Test the property 'ownedPrivateRepos'
     */
    @Test
    public void ownedPrivateReposTest() {
        // TODO: test ownedPrivateRepos
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'privateGists'
     */
    @Test
    public void privateGistsTest() {
        // TODO: test privateGists
    }

    /**
     * Test the property 'publicGists'
     */
    @Test
    public void publicGistsTest() {
        // TODO: test publicGists
    }

    /**
     * Test the property 'publicMembersUrl'
     */
    @Test
    public void publicMembersUrlTest() {
        // TODO: test publicMembersUrl
    }

    /**
     * Test the property 'publicRepos'
     */
    @Test
    public void publicReposTest() {
        // TODO: test publicRepos
    }

    /**
     * Test the property 'reposUrl'
     */
    @Test
    public void reposUrlTest() {
        // TODO: test reposUrl
    }

    /**
     * Test the property 'totalPrivateRepos'
     */
    @Test
    public void totalPrivateReposTest() {
        // TODO: test totalPrivateRepos
    }

    /**
     * Test the property 'twitterUsername'
     */
    @Test
    public void twitterUsernameTest() {
        // TODO: test twitterUsername
    }

    /**
     * Test the property 'twoFactorRequirementEnabled'
     */
    @Test
    public void twoFactorRequirementEnabledTest() {
        // TODO: test twoFactorRequirementEnabled
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

}
