/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BranchRestrictionPolicyAppsInnerPermissions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:08:22.800879-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BranchRestrictionPolicyAppsInnerPermissions {
  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private String contents;

  public static final String SERIALIZED_NAME_ISSUES = "issues";
  @SerializedName(SERIALIZED_NAME_ISSUES)
  private String issues;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_SINGLE_FILE = "single_file";
  @SerializedName(SERIALIZED_NAME_SINGLE_FILE)
  private String singleFile;

  public BranchRestrictionPolicyAppsInnerPermissions() {
  }

  public BranchRestrictionPolicyAppsInnerPermissions contents(String contents) {
    this.contents = contents;
    return this;
  }

  /**
   * Get contents
   * @return contents
   */
  @javax.annotation.Nullable
  public String getContents() {
    return contents;
  }

  public void setContents(String contents) {
    this.contents = contents;
  }


  public BranchRestrictionPolicyAppsInnerPermissions issues(String issues) {
    this.issues = issues;
    return this;
  }

  /**
   * Get issues
   * @return issues
   */
  @javax.annotation.Nullable
  public String getIssues() {
    return issues;
  }

  public void setIssues(String issues) {
    this.issues = issues;
  }


  public BranchRestrictionPolicyAppsInnerPermissions metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public BranchRestrictionPolicyAppsInnerPermissions singleFile(String singleFile) {
    this.singleFile = singleFile;
    return this;
  }

  /**
   * Get singleFile
   * @return singleFile
   */
  @javax.annotation.Nullable
  public String getSingleFile() {
    return singleFile;
  }

  public void setSingleFile(String singleFile) {
    this.singleFile = singleFile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BranchRestrictionPolicyAppsInnerPermissions branchRestrictionPolicyAppsInnerPermissions = (BranchRestrictionPolicyAppsInnerPermissions) o;
    return Objects.equals(this.contents, branchRestrictionPolicyAppsInnerPermissions.contents) &&
        Objects.equals(this.issues, branchRestrictionPolicyAppsInnerPermissions.issues) &&
        Objects.equals(this.metadata, branchRestrictionPolicyAppsInnerPermissions.metadata) &&
        Objects.equals(this.singleFile, branchRestrictionPolicyAppsInnerPermissions.singleFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contents, issues, metadata, singleFile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BranchRestrictionPolicyAppsInnerPermissions {\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    issues: ").append(toIndentedString(issues)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    singleFile: ").append(toIndentedString(singleFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contents");
    openapiFields.add("issues");
    openapiFields.add("metadata");
    openapiFields.add("single_file");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BranchRestrictionPolicyAppsInnerPermissions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BranchRestrictionPolicyAppsInnerPermissions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BranchRestrictionPolicyAppsInnerPermissions is not found in the empty JSON string", BranchRestrictionPolicyAppsInnerPermissions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BranchRestrictionPolicyAppsInnerPermissions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BranchRestrictionPolicyAppsInnerPermissions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contents") != null && !jsonObj.get("contents").isJsonNull()) && !jsonObj.get("contents").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contents` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contents").toString()));
      }
      if ((jsonObj.get("issues") != null && !jsonObj.get("issues").isJsonNull()) && !jsonObj.get("issues").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issues` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issues").toString()));
      }
      if ((jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) && !jsonObj.get("metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      if ((jsonObj.get("single_file") != null && !jsonObj.get("single_file").isJsonNull()) && !jsonObj.get("single_file").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `single_file` to be a primitive type in the JSON string but got `%s`", jsonObj.get("single_file").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BranchRestrictionPolicyAppsInnerPermissions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BranchRestrictionPolicyAppsInnerPermissions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BranchRestrictionPolicyAppsInnerPermissions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BranchRestrictionPolicyAppsInnerPermissions.class));

       return (TypeAdapter<T>) new TypeAdapter<BranchRestrictionPolicyAppsInnerPermissions>() {
           @Override
           public void write(JsonWriter out, BranchRestrictionPolicyAppsInnerPermissions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BranchRestrictionPolicyAppsInnerPermissions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BranchRestrictionPolicyAppsInnerPermissions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BranchRestrictionPolicyAppsInnerPermissions
   * @throws IOException if the JSON string is invalid with respect to BranchRestrictionPolicyAppsInnerPermissions
   */
  public static BranchRestrictionPolicyAppsInnerPermissions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BranchRestrictionPolicyAppsInnerPermissions.class);
  }

  /**
   * Convert an instance of BranchRestrictionPolicyAppsInnerPermissions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

