# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuditLogEventActorLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_name: str=None):
        """AuditLogEventActorLocation - a model defined in OpenAPI

        :param country_name: The country_name of this AuditLogEventActorLocation.
        """
        self.openapi_types = {
            'country_name': str
        }

        self.attribute_map = {
            'country_name': 'country_name'
        }

        self._country_name = country_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditLogEventActorLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The audit_log_event_actor_location of this AuditLogEventActorLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_name(self):
        """Gets the country_name of this AuditLogEventActorLocation.


        :return: The country_name of this AuditLogEventActorLocation.
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this AuditLogEventActorLocation.


        :param country_name: The country_name of this AuditLogEventActorLocation.
        :type country_name: str
        """

        self._country_name = country_name
