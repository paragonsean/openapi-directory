# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseGistFilesValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filename: str=None, language: str=None, raw_url: str=None, size: int=None, type: str=None):
        """BaseGistFilesValue - a model defined in OpenAPI

        :param filename: The filename of this BaseGistFilesValue.
        :param language: The language of this BaseGistFilesValue.
        :param raw_url: The raw_url of this BaseGistFilesValue.
        :param size: The size of this BaseGistFilesValue.
        :param type: The type of this BaseGistFilesValue.
        """
        self.openapi_types = {
            'filename': str,
            'language': str,
            'raw_url': str,
            'size': int,
            'type': str
        }

        self.attribute_map = {
            'filename': 'filename',
            'language': 'language',
            'raw_url': 'raw_url',
            'size': 'size',
            'type': 'type'
        }

        self._filename = filename
        self._language = language
        self._raw_url = raw_url
        self._size = size
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseGistFilesValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The base_gist_files_value of this BaseGistFilesValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self):
        """Gets the filename of this BaseGistFilesValue.


        :return: The filename of this BaseGistFilesValue.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this BaseGistFilesValue.


        :param filename: The filename of this BaseGistFilesValue.
        :type filename: str
        """

        self._filename = filename

    @property
    def language(self):
        """Gets the language of this BaseGistFilesValue.


        :return: The language of this BaseGistFilesValue.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this BaseGistFilesValue.


        :param language: The language of this BaseGistFilesValue.
        :type language: str
        """

        self._language = language

    @property
    def raw_url(self):
        """Gets the raw_url of this BaseGistFilesValue.


        :return: The raw_url of this BaseGistFilesValue.
        :rtype: str
        """
        return self._raw_url

    @raw_url.setter
    def raw_url(self, raw_url):
        """Sets the raw_url of this BaseGistFilesValue.


        :param raw_url: The raw_url of this BaseGistFilesValue.
        :type raw_url: str
        """

        self._raw_url = raw_url

    @property
    def size(self):
        """Gets the size of this BaseGistFilesValue.


        :return: The size of this BaseGistFilesValue.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this BaseGistFilesValue.


        :param size: The size of this BaseGistFilesValue.
        :type size: int
        """

        self._size = size

    @property
    def type(self):
        """Gets the type of this BaseGistFilesValue.


        :return: The type of this BaseGistFilesValue.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BaseGistFilesValue.


        :param type: The type of this BaseGistFilesValue.
        :type type: str
        """

        self._type = type
