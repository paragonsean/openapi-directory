/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommit_comparison.h
 *
 * Commit Comparison
 */

#ifndef OAICommit_comparison_H
#define OAICommit_comparison_H

#include <QJsonObject>

#include "OAICommit.h"
#include "OAIDiff_entry.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommit;
class OAIDiff_entry;

class OAICommit_comparison : public OAIObject {
public:
    OAICommit_comparison();
    OAICommit_comparison(QString json);
    ~OAICommit_comparison() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAheadBy() const;
    void setAheadBy(const qint32 &ahead_by);
    bool is_ahead_by_Set() const;
    bool is_ahead_by_Valid() const;

    OAICommit getBaseCommit() const;
    void setBaseCommit(const OAICommit &base_commit);
    bool is_base_commit_Set() const;
    bool is_base_commit_Valid() const;

    qint32 getBehindBy() const;
    void setBehindBy(const qint32 &behind_by);
    bool is_behind_by_Set() const;
    bool is_behind_by_Valid() const;

    QList<OAICommit> getCommits() const;
    void setCommits(const QList<OAICommit> &commits);
    bool is_commits_Set() const;
    bool is_commits_Valid() const;

    QString getDiffUrl() const;
    void setDiffUrl(const QString &diff_url);
    bool is_diff_url_Set() const;
    bool is_diff_url_Valid() const;

    QList<OAIDiff_entry> getFiles() const;
    void setFiles(const QList<OAIDiff_entry> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    OAICommit getMergeBaseCommit() const;
    void setMergeBaseCommit(const OAICommit &merge_base_commit);
    bool is_merge_base_commit_Set() const;
    bool is_merge_base_commit_Valid() const;

    QString getPatchUrl() const;
    void setPatchUrl(const QString &patch_url);
    bool is_patch_url_Set() const;
    bool is_patch_url_Valid() const;

    QString getPermalinkUrl() const;
    void setPermalinkUrl(const QString &permalink_url);
    bool is_permalink_url_Set() const;
    bool is_permalink_url_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTotalCommits() const;
    void setTotalCommits(const qint32 &total_commits);
    bool is_total_commits_Set() const;
    bool is_total_commits_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ahead_by;
    bool m_ahead_by_isSet;
    bool m_ahead_by_isValid;

    OAICommit m_base_commit;
    bool m_base_commit_isSet;
    bool m_base_commit_isValid;

    qint32 m_behind_by;
    bool m_behind_by_isSet;
    bool m_behind_by_isValid;

    QList<OAICommit> m_commits;
    bool m_commits_isSet;
    bool m_commits_isValid;

    QString m_diff_url;
    bool m_diff_url_isSet;
    bool m_diff_url_isValid;

    QList<OAIDiff_entry> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    OAICommit m_merge_base_commit;
    bool m_merge_base_commit_isSet;
    bool m_merge_base_commit_isValid;

    QString m_patch_url;
    bool m_patch_url_isSet;
    bool m_patch_url_isValid;

    QString m_permalink_url;
    bool m_permalink_url_isSet;
    bool m_permalink_url_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_total_commits;
    bool m_total_commits_isSet;
    bool m_total_commits_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommit_comparison)

#endif // OAICommit_comparison_H
