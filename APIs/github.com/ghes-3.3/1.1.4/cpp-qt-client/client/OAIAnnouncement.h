/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnouncement.h
 *
 * Enterprise global announcement
 */

#ifndef OAIAnnouncement_H
#define OAIAnnouncement_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnnouncement : public OAIObject {
public:
    OAIAnnouncement();
    OAIAnnouncement(QString json);
    ~OAIAnnouncement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnnouncement() const;
    void setAnnouncement(const QString &announcement);
    bool is_announcement_Set() const;
    bool is_announcement_Valid() const;

    QDateTime getExpiresAt() const;
    void setExpiresAt(const QDateTime &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_announcement;
    bool m_announcement_isSet;
    bool m_announcement_isValid;

    QDateTime m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnouncement)

#endif // OAIAnnouncement_H
