/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICode_scanning_analysis.h
 *
 * 
 */

#ifndef OAICode_scanning_analysis_H
#define OAICode_scanning_analysis_H

#include <QJsonObject>

#include "OAICode_scanning_analysis_tool.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICode_scanning_analysis_tool;

class OAICode_scanning_analysis : public OAIObject {
public:
    OAICode_scanning_analysis();
    OAICode_scanning_analysis(QString json);
    ~OAICode_scanning_analysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisKey() const;
    void setAnalysisKey(const QString &analysis_key);
    bool is_analysis_key_Set() const;
    bool is_analysis_key_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCommitSha() const;
    void setCommitSha(const QString &commit_sha);
    bool is_commit_sha_Set() const;
    bool is_commit_sha_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isDeletable() const;
    void setDeletable(const bool &deletable);
    bool is_deletable_Set() const;
    bool is_deletable_Valid() const;

    QString getEnvironment() const;
    void setEnvironment(const QString &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getRef() const;
    void setRef(const QString &ref);
    bool is_ref_Set() const;
    bool is_ref_Valid() const;

    qint32 getResultsCount() const;
    void setResultsCount(const qint32 &results_count);
    bool is_results_count_Set() const;
    bool is_results_count_Valid() const;

    qint32 getRulesCount() const;
    void setRulesCount(const qint32 &rules_count);
    bool is_rules_count_Set() const;
    bool is_rules_count_Valid() const;

    QString getSarifId() const;
    void setSarifId(const QString &sarif_id);
    bool is_sarif_id_Set() const;
    bool is_sarif_id_Valid() const;

    OAICode_scanning_analysis_tool getTool() const;
    void setTool(const OAICode_scanning_analysis_tool &tool);
    bool is_tool_Set() const;
    bool is_tool_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getWarning() const;
    void setWarning(const QString &warning);
    bool is_warning_Set() const;
    bool is_warning_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_key;
    bool m_analysis_key_isSet;
    bool m_analysis_key_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_commit_sha;
    bool m_commit_sha_isSet;
    bool m_commit_sha_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_deletable;
    bool m_deletable_isSet;
    bool m_deletable_isValid;

    QString m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_ref;
    bool m_ref_isSet;
    bool m_ref_isValid;

    qint32 m_results_count;
    bool m_results_count_isSet;
    bool m_results_count_isValid;

    qint32 m_rules_count;
    bool m_rules_count_isSet;
    bool m_rules_count_isValid;

    QString m_sarif_id;
    bool m_sarif_id_isSet;
    bool m_sarif_id_isValid;

    OAICode_scanning_analysis_tool m_tool;
    bool m_tool_isSet;
    bool m_tool_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_warning;
    bool m_warning_isSet;
    bool m_warning_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICode_scanning_analysis)

#endif // OAICode_scanning_analysis_H
