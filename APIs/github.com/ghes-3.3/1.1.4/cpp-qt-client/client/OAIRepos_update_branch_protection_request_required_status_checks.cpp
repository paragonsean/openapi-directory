/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepos_update_branch_protection_request_required_status_checks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepos_update_branch_protection_request_required_status_checks::OAIRepos_update_branch_protection_request_required_status_checks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepos_update_branch_protection_request_required_status_checks::OAIRepos_update_branch_protection_request_required_status_checks() {
    this->initializeModel();
}

OAIRepos_update_branch_protection_request_required_status_checks::~OAIRepos_update_branch_protection_request_required_status_checks() {}

void OAIRepos_update_branch_protection_request_required_status_checks::initializeModel() {

    m_checks_isSet = false;
    m_checks_isValid = false;

    m_contexts_isSet = false;
    m_contexts_isValid = false;

    m_strict_isSet = false;
    m_strict_isValid = false;
}

void OAIRepos_update_branch_protection_request_required_status_checks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepos_update_branch_protection_request_required_status_checks::fromJsonObject(QJsonObject json) {

    m_checks_isValid = ::OpenAPI::fromJsonValue(m_checks, json[QString("checks")]);
    m_checks_isSet = !json[QString("checks")].isNull() && m_checks_isValid;

    m_contexts_isValid = ::OpenAPI::fromJsonValue(m_contexts, json[QString("contexts")]);
    m_contexts_isSet = !json[QString("contexts")].isNull() && m_contexts_isValid;

    m_strict_isValid = ::OpenAPI::fromJsonValue(m_strict, json[QString("strict")]);
    m_strict_isSet = !json[QString("strict")].isNull() && m_strict_isValid;
}

QString OAIRepos_update_branch_protection_request_required_status_checks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepos_update_branch_protection_request_required_status_checks::asJsonObject() const {
    QJsonObject obj;
    if (m_checks.size() > 0) {
        obj.insert(QString("checks"), ::OpenAPI::toJsonValue(m_checks));
    }
    if (m_contexts.size() > 0) {
        obj.insert(QString("contexts"), ::OpenAPI::toJsonValue(m_contexts));
    }
    if (m_strict_isSet) {
        obj.insert(QString("strict"), ::OpenAPI::toJsonValue(m_strict));
    }
    return obj;
}

QList<OAIRepos_update_branch_protection_request_required_status_checks_checks_inner> OAIRepos_update_branch_protection_request_required_status_checks::getChecks() const {
    return m_checks;
}
void OAIRepos_update_branch_protection_request_required_status_checks::setChecks(const QList<OAIRepos_update_branch_protection_request_required_status_checks_checks_inner> &checks) {
    m_checks = checks;
    m_checks_isSet = true;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::is_checks_Set() const{
    return m_checks_isSet;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::is_checks_Valid() const{
    return m_checks_isValid;
}

QList<QString> OAIRepos_update_branch_protection_request_required_status_checks::getContexts() const {
    return m_contexts;
}
void OAIRepos_update_branch_protection_request_required_status_checks::setContexts(const QList<QString> &contexts) {
    m_contexts = contexts;
    m_contexts_isSet = true;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::is_contexts_Set() const{
    return m_contexts_isSet;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::is_contexts_Valid() const{
    return m_contexts_isValid;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::isStrict() const {
    return m_strict;
}
void OAIRepos_update_branch_protection_request_required_status_checks::setStrict(const bool &strict) {
    m_strict = strict;
    m_strict_isSet = true;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::is_strict_Set() const{
    return m_strict_isSet;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::is_strict_Valid() const{
    return m_strict_isValid;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contexts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_strict_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepos_update_branch_protection_request_required_status_checks::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_contexts_isValid && m_strict_isValid && true;
}

} // namespace OpenAPI
