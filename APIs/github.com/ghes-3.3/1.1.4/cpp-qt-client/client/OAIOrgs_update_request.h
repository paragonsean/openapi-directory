/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgs_update_request.h
 *
 * 
 */

#ifndef OAIOrgs_update_request_H
#define OAIOrgs_update_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgs_update_request : public OAIObject {
public:
    OAIOrgs_update_request();
    OAIOrgs_update_request(QString json);
    ~OAIOrgs_update_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBillingEmail() const;
    void setBillingEmail(const QString &billing_email);
    bool is_billing_email_Set() const;
    bool is_billing_email_Valid() const;

    QString getBlog() const;
    void setBlog(const QString &blog);
    bool is_blog_Set() const;
    bool is_blog_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getDefaultRepositoryPermission() const;
    void setDefaultRepositoryPermission(const QString &default_repository_permission);
    bool is_default_repository_permission_Set() const;
    bool is_default_repository_permission_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isHasOrganizationProjects() const;
    void setHasOrganizationProjects(const bool &has_organization_projects);
    bool is_has_organization_projects_Set() const;
    bool is_has_organization_projects_Valid() const;

    bool isHasRepositoryProjects() const;
    void setHasRepositoryProjects(const bool &has_repository_projects);
    bool is_has_repository_projects_Set() const;
    bool is_has_repository_projects_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getMembersAllowedRepositoryCreationType() const;
    void setMembersAllowedRepositoryCreationType(const QString &members_allowed_repository_creation_type);
    bool is_members_allowed_repository_creation_type_Set() const;
    bool is_members_allowed_repository_creation_type_Valid() const;

    bool isMembersCanCreateInternalRepositories() const;
    void setMembersCanCreateInternalRepositories(const bool &members_can_create_internal_repositories);
    bool is_members_can_create_internal_repositories_Set() const;
    bool is_members_can_create_internal_repositories_Valid() const;

    bool isMembersCanCreatePages() const;
    void setMembersCanCreatePages(const bool &members_can_create_pages);
    bool is_members_can_create_pages_Set() const;
    bool is_members_can_create_pages_Valid() const;

    bool isMembersCanCreatePrivateRepositories() const;
    void setMembersCanCreatePrivateRepositories(const bool &members_can_create_private_repositories);
    bool is_members_can_create_private_repositories_Set() const;
    bool is_members_can_create_private_repositories_Valid() const;

    bool isMembersCanCreatePublicRepositories() const;
    void setMembersCanCreatePublicRepositories(const bool &members_can_create_public_repositories);
    bool is_members_can_create_public_repositories_Set() const;
    bool is_members_can_create_public_repositories_Valid() const;

    bool isMembersCanCreateRepositories() const;
    void setMembersCanCreateRepositories(const bool &members_can_create_repositories);
    bool is_members_can_create_repositories_Set() const;
    bool is_members_can_create_repositories_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTwitterUsername() const;
    void setTwitterUsername(const QString &twitter_username);
    bool is_twitter_username_Set() const;
    bool is_twitter_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_billing_email;
    bool m_billing_email_isSet;
    bool m_billing_email_isValid;

    QString m_blog;
    bool m_blog_isSet;
    bool m_blog_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_default_repository_permission;
    bool m_default_repository_permission_isSet;
    bool m_default_repository_permission_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_has_organization_projects;
    bool m_has_organization_projects_isSet;
    bool m_has_organization_projects_isValid;

    bool m_has_repository_projects;
    bool m_has_repository_projects_isSet;
    bool m_has_repository_projects_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_members_allowed_repository_creation_type;
    bool m_members_allowed_repository_creation_type_isSet;
    bool m_members_allowed_repository_creation_type_isValid;

    bool m_members_can_create_internal_repositories;
    bool m_members_can_create_internal_repositories_isSet;
    bool m_members_can_create_internal_repositories_isValid;

    bool m_members_can_create_pages;
    bool m_members_can_create_pages_isSet;
    bool m_members_can_create_pages_isValid;

    bool m_members_can_create_private_repositories;
    bool m_members_can_create_private_repositories_isSet;
    bool m_members_can_create_private_repositories_isValid;

    bool m_members_can_create_public_repositories;
    bool m_members_can_create_public_repositories_isSet;
    bool m_members_can_create_public_repositories_isValid;

    bool m_members_can_create_repositories;
    bool m_members_can_create_repositories_isSet;
    bool m_members_can_create_repositories_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_twitter_username;
    bool m_twitter_username_isSet;
    bool m_twitter_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrgs_update_request)

#endif // OAIOrgs_update_request_H
