/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepos_generate_release_notes_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepos_generate_release_notes_request::OAIRepos_generate_release_notes_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepos_generate_release_notes_request::OAIRepos_generate_release_notes_request() {
    this->initializeModel();
}

OAIRepos_generate_release_notes_request::~OAIRepos_generate_release_notes_request() {}

void OAIRepos_generate_release_notes_request::initializeModel() {

    m_configuration_file_path_isSet = false;
    m_configuration_file_path_isValid = false;

    m_previous_tag_name_isSet = false;
    m_previous_tag_name_isValid = false;

    m_tag_name_isSet = false;
    m_tag_name_isValid = false;

    m_target_commitish_isSet = false;
    m_target_commitish_isValid = false;
}

void OAIRepos_generate_release_notes_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepos_generate_release_notes_request::fromJsonObject(QJsonObject json) {

    m_configuration_file_path_isValid = ::OpenAPI::fromJsonValue(m_configuration_file_path, json[QString("configuration_file_path")]);
    m_configuration_file_path_isSet = !json[QString("configuration_file_path")].isNull() && m_configuration_file_path_isValid;

    m_previous_tag_name_isValid = ::OpenAPI::fromJsonValue(m_previous_tag_name, json[QString("previous_tag_name")]);
    m_previous_tag_name_isSet = !json[QString("previous_tag_name")].isNull() && m_previous_tag_name_isValid;

    m_tag_name_isValid = ::OpenAPI::fromJsonValue(m_tag_name, json[QString("tag_name")]);
    m_tag_name_isSet = !json[QString("tag_name")].isNull() && m_tag_name_isValid;

    m_target_commitish_isValid = ::OpenAPI::fromJsonValue(m_target_commitish, json[QString("target_commitish")]);
    m_target_commitish_isSet = !json[QString("target_commitish")].isNull() && m_target_commitish_isValid;
}

QString OAIRepos_generate_release_notes_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepos_generate_release_notes_request::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_file_path_isSet) {
        obj.insert(QString("configuration_file_path"), ::OpenAPI::toJsonValue(m_configuration_file_path));
    }
    if (m_previous_tag_name_isSet) {
        obj.insert(QString("previous_tag_name"), ::OpenAPI::toJsonValue(m_previous_tag_name));
    }
    if (m_tag_name_isSet) {
        obj.insert(QString("tag_name"), ::OpenAPI::toJsonValue(m_tag_name));
    }
    if (m_target_commitish_isSet) {
        obj.insert(QString("target_commitish"), ::OpenAPI::toJsonValue(m_target_commitish));
    }
    return obj;
}

QString OAIRepos_generate_release_notes_request::getConfigurationFilePath() const {
    return m_configuration_file_path;
}
void OAIRepos_generate_release_notes_request::setConfigurationFilePath(const QString &configuration_file_path) {
    m_configuration_file_path = configuration_file_path;
    m_configuration_file_path_isSet = true;
}

bool OAIRepos_generate_release_notes_request::is_configuration_file_path_Set() const{
    return m_configuration_file_path_isSet;
}

bool OAIRepos_generate_release_notes_request::is_configuration_file_path_Valid() const{
    return m_configuration_file_path_isValid;
}

QString OAIRepos_generate_release_notes_request::getPreviousTagName() const {
    return m_previous_tag_name;
}
void OAIRepos_generate_release_notes_request::setPreviousTagName(const QString &previous_tag_name) {
    m_previous_tag_name = previous_tag_name;
    m_previous_tag_name_isSet = true;
}

bool OAIRepos_generate_release_notes_request::is_previous_tag_name_Set() const{
    return m_previous_tag_name_isSet;
}

bool OAIRepos_generate_release_notes_request::is_previous_tag_name_Valid() const{
    return m_previous_tag_name_isValid;
}

QString OAIRepos_generate_release_notes_request::getTagName() const {
    return m_tag_name;
}
void OAIRepos_generate_release_notes_request::setTagName(const QString &tag_name) {
    m_tag_name = tag_name;
    m_tag_name_isSet = true;
}

bool OAIRepos_generate_release_notes_request::is_tag_name_Set() const{
    return m_tag_name_isSet;
}

bool OAIRepos_generate_release_notes_request::is_tag_name_Valid() const{
    return m_tag_name_isValid;
}

QString OAIRepos_generate_release_notes_request::getTargetCommitish() const {
    return m_target_commitish;
}
void OAIRepos_generate_release_notes_request::setTargetCommitish(const QString &target_commitish) {
    m_target_commitish = target_commitish;
    m_target_commitish_isSet = true;
}

bool OAIRepos_generate_release_notes_request::is_target_commitish_Set() const{
    return m_target_commitish_isSet;
}

bool OAIRepos_generate_release_notes_request::is_target_commitish_Valid() const{
    return m_target_commitish_isValid;
}

bool OAIRepos_generate_release_notes_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_file_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_tag_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_commitish_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepos_generate_release_notes_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tag_name_isValid && true;
}

} // namespace OpenAPI
