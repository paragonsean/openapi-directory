/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGists_get_403_response_block.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGists_get_403_response_block::OAIGists_get_403_response_block(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGists_get_403_response_block::OAIGists_get_403_response_block() {
    this->initializeModel();
}

OAIGists_get_403_response_block::~OAIGists_get_403_response_block() {}

void OAIGists_get_403_response_block::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;
}

void OAIGists_get_403_response_block::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGists_get_403_response_block::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;
}

QString OAIGists_get_403_response_block::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGists_get_403_response_block::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    return obj;
}

QString OAIGists_get_403_response_block::getCreatedAt() const {
    return m_created_at;
}
void OAIGists_get_403_response_block::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGists_get_403_response_block::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGists_get_403_response_block::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGists_get_403_response_block::getHtmlUrl() const {
    return m_html_url;
}
void OAIGists_get_403_response_block::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAIGists_get_403_response_block::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAIGists_get_403_response_block::is_html_url_Valid() const{
    return m_html_url_isValid;
}

QString OAIGists_get_403_response_block::getReason() const {
    return m_reason;
}
void OAIGists_get_403_response_block::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAIGists_get_403_response_block::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAIGists_get_403_response_block::is_reason_Valid() const{
    return m_reason_isValid;
}

bool OAIGists_get_403_response_block::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGists_get_403_response_block::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
