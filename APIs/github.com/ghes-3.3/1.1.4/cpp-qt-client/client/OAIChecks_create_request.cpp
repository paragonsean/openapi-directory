/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChecks_create_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChecks_create_request::OAIChecks_create_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChecks_create_request::OAIChecks_create_request() {
    this->initializeModel();
}

OAIChecks_create_request::~OAIChecks_create_request() {}

void OAIChecks_create_request::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_completed_at_isSet = false;
    m_completed_at_isValid = false;

    m_conclusion_isSet = false;
    m_conclusion_isValid = false;

    m_details_url_isSet = false;
    m_details_url_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_head_sha_isSet = false;
    m_head_sha_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;

    m_started_at_isSet = false;
    m_started_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIChecks_create_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChecks_create_request::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_completed_at_isValid = ::OpenAPI::fromJsonValue(m_completed_at, json[QString("completed_at")]);
    m_completed_at_isSet = !json[QString("completed_at")].isNull() && m_completed_at_isValid;

    m_conclusion_isValid = ::OpenAPI::fromJsonValue(m_conclusion, json[QString("conclusion")]);
    m_conclusion_isSet = !json[QString("conclusion")].isNull() && m_conclusion_isValid;

    m_details_url_isValid = ::OpenAPI::fromJsonValue(m_details_url, json[QString("details_url")]);
    m_details_url_isSet = !json[QString("details_url")].isNull() && m_details_url_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("external_id")]);
    m_external_id_isSet = !json[QString("external_id")].isNull() && m_external_id_isValid;

    m_head_sha_isValid = ::OpenAPI::fromJsonValue(m_head_sha, json[QString("head_sha")]);
    m_head_sha_isSet = !json[QString("head_sha")].isNull() && m_head_sha_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("output")]);
    m_output_isSet = !json[QString("output")].isNull() && m_output_isValid;

    m_started_at_isValid = ::OpenAPI::fromJsonValue(m_started_at, json[QString("started_at")]);
    m_started_at_isSet = !json[QString("started_at")].isNull() && m_started_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIChecks_create_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChecks_create_request::asJsonObject() const {
    QJsonObject obj;
    if (m_actions.size() > 0) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_completed_at_isSet) {
        obj.insert(QString("completed_at"), ::OpenAPI::toJsonValue(m_completed_at));
    }
    if (m_conclusion_isSet) {
        obj.insert(QString("conclusion"), ::OpenAPI::toJsonValue(m_conclusion));
    }
    if (m_details_url_isSet) {
        obj.insert(QString("details_url"), ::OpenAPI::toJsonValue(m_details_url));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("external_id"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_head_sha_isSet) {
        obj.insert(QString("head_sha"), ::OpenAPI::toJsonValue(m_head_sha));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_output.isSet()) {
        obj.insert(QString("output"), ::OpenAPI::toJsonValue(m_output));
    }
    if (m_started_at_isSet) {
        obj.insert(QString("started_at"), ::OpenAPI::toJsonValue(m_started_at));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<OAIChecks_create_request_actions_inner> OAIChecks_create_request::getActions() const {
    return m_actions;
}
void OAIChecks_create_request::setActions(const QList<OAIChecks_create_request_actions_inner> &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIChecks_create_request::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIChecks_create_request::is_actions_Valid() const{
    return m_actions_isValid;
}

QDateTime OAIChecks_create_request::getCompletedAt() const {
    return m_completed_at;
}
void OAIChecks_create_request::setCompletedAt(const QDateTime &completed_at) {
    m_completed_at = completed_at;
    m_completed_at_isSet = true;
}

bool OAIChecks_create_request::is_completed_at_Set() const{
    return m_completed_at_isSet;
}

bool OAIChecks_create_request::is_completed_at_Valid() const{
    return m_completed_at_isValid;
}

QString OAIChecks_create_request::getConclusion() const {
    return m_conclusion;
}
void OAIChecks_create_request::setConclusion(const QString &conclusion) {
    m_conclusion = conclusion;
    m_conclusion_isSet = true;
}

bool OAIChecks_create_request::is_conclusion_Set() const{
    return m_conclusion_isSet;
}

bool OAIChecks_create_request::is_conclusion_Valid() const{
    return m_conclusion_isValid;
}

QString OAIChecks_create_request::getDetailsUrl() const {
    return m_details_url;
}
void OAIChecks_create_request::setDetailsUrl(const QString &details_url) {
    m_details_url = details_url;
    m_details_url_isSet = true;
}

bool OAIChecks_create_request::is_details_url_Set() const{
    return m_details_url_isSet;
}

bool OAIChecks_create_request::is_details_url_Valid() const{
    return m_details_url_isValid;
}

QString OAIChecks_create_request::getExternalId() const {
    return m_external_id;
}
void OAIChecks_create_request::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIChecks_create_request::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIChecks_create_request::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIChecks_create_request::getHeadSha() const {
    return m_head_sha;
}
void OAIChecks_create_request::setHeadSha(const QString &head_sha) {
    m_head_sha = head_sha;
    m_head_sha_isSet = true;
}

bool OAIChecks_create_request::is_head_sha_Set() const{
    return m_head_sha_isSet;
}

bool OAIChecks_create_request::is_head_sha_Valid() const{
    return m_head_sha_isValid;
}

QString OAIChecks_create_request::getName() const {
    return m_name;
}
void OAIChecks_create_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChecks_create_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChecks_create_request::is_name_Valid() const{
    return m_name_isValid;
}

OAIChecks_create_request_output OAIChecks_create_request::getOutput() const {
    return m_output;
}
void OAIChecks_create_request::setOutput(const OAIChecks_create_request_output &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIChecks_create_request::is_output_Set() const{
    return m_output_isSet;
}

bool OAIChecks_create_request::is_output_Valid() const{
    return m_output_isValid;
}

QDateTime OAIChecks_create_request::getStartedAt() const {
    return m_started_at;
}
void OAIChecks_create_request::setStartedAt(const QDateTime &started_at) {
    m_started_at = started_at;
    m_started_at_isSet = true;
}

bool OAIChecks_create_request::is_started_at_Set() const{
    return m_started_at_isSet;
}

bool OAIChecks_create_request::is_started_at_Valid() const{
    return m_started_at_isValid;
}

QString OAIChecks_create_request::getStatus() const {
    return m_status;
}
void OAIChecks_create_request::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIChecks_create_request::is_status_Set() const{
    return m_status_isSet;
}

bool OAIChecks_create_request::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIChecks_create_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conclusion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_details_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_head_sha_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_started_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChecks_create_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_head_sha_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
