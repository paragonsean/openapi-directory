/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_gist_overview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_gist_overview::OAIEnterprise_gist_overview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_gist_overview::OAIEnterprise_gist_overview() {
    this->initializeModel();
}

OAIEnterprise_gist_overview::~OAIEnterprise_gist_overview() {}

void OAIEnterprise_gist_overview::initializeModel() {

    m_private_gists_isSet = false;
    m_private_gists_isValid = false;

    m_public_gists_isSet = false;
    m_public_gists_isValid = false;

    m_total_gists_isSet = false;
    m_total_gists_isValid = false;
}

void OAIEnterprise_gist_overview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_gist_overview::fromJsonObject(QJsonObject json) {

    m_private_gists_isValid = ::OpenAPI::fromJsonValue(m_private_gists, json[QString("private_gists")]);
    m_private_gists_isSet = !json[QString("private_gists")].isNull() && m_private_gists_isValid;

    m_public_gists_isValid = ::OpenAPI::fromJsonValue(m_public_gists, json[QString("public_gists")]);
    m_public_gists_isSet = !json[QString("public_gists")].isNull() && m_public_gists_isValid;

    m_total_gists_isValid = ::OpenAPI::fromJsonValue(m_total_gists, json[QString("total_gists")]);
    m_total_gists_isSet = !json[QString("total_gists")].isNull() && m_total_gists_isValid;
}

QString OAIEnterprise_gist_overview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_gist_overview::asJsonObject() const {
    QJsonObject obj;
    if (m_private_gists_isSet) {
        obj.insert(QString("private_gists"), ::OpenAPI::toJsonValue(m_private_gists));
    }
    if (m_public_gists_isSet) {
        obj.insert(QString("public_gists"), ::OpenAPI::toJsonValue(m_public_gists));
    }
    if (m_total_gists_isSet) {
        obj.insert(QString("total_gists"), ::OpenAPI::toJsonValue(m_total_gists));
    }
    return obj;
}

qint32 OAIEnterprise_gist_overview::getPrivateGists() const {
    return m_private_gists;
}
void OAIEnterprise_gist_overview::setPrivateGists(const qint32 &private_gists) {
    m_private_gists = private_gists;
    m_private_gists_isSet = true;
}

bool OAIEnterprise_gist_overview::is_private_gists_Set() const{
    return m_private_gists_isSet;
}

bool OAIEnterprise_gist_overview::is_private_gists_Valid() const{
    return m_private_gists_isValid;
}

qint32 OAIEnterprise_gist_overview::getPublicGists() const {
    return m_public_gists;
}
void OAIEnterprise_gist_overview::setPublicGists(const qint32 &public_gists) {
    m_public_gists = public_gists;
    m_public_gists_isSet = true;
}

bool OAIEnterprise_gist_overview::is_public_gists_Set() const{
    return m_public_gists_isSet;
}

bool OAIEnterprise_gist_overview::is_public_gists_Valid() const{
    return m_public_gists_isValid;
}

qint32 OAIEnterprise_gist_overview::getTotalGists() const {
    return m_total_gists;
}
void OAIEnterprise_gist_overview::setTotalGists(const qint32 &total_gists) {
    m_total_gists = total_gists;
    m_total_gists_isSet = true;
}

bool OAIEnterprise_gist_overview::is_total_gists_Set() const{
    return m_total_gists_isSet;
}

bool OAIEnterprise_gist_overview::is_total_gists_Valid() const{
    return m_total_gists_isValid;
}

bool OAIEnterprise_gist_overview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_private_gists_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_gists_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_gists_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_gist_overview::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_private_gists_isValid && m_public_gists_isValid && m_total_gists_isValid && true;
}

} // namespace OpenAPI
