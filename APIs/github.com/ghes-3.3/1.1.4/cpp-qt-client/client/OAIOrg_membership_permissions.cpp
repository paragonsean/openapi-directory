/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrg_membership_permissions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrg_membership_permissions::OAIOrg_membership_permissions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrg_membership_permissions::OAIOrg_membership_permissions() {
    this->initializeModel();
}

OAIOrg_membership_permissions::~OAIOrg_membership_permissions() {}

void OAIOrg_membership_permissions::initializeModel() {

    m_can_create_repository_isSet = false;
    m_can_create_repository_isValid = false;
}

void OAIOrg_membership_permissions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrg_membership_permissions::fromJsonObject(QJsonObject json) {

    m_can_create_repository_isValid = ::OpenAPI::fromJsonValue(m_can_create_repository, json[QString("can_create_repository")]);
    m_can_create_repository_isSet = !json[QString("can_create_repository")].isNull() && m_can_create_repository_isValid;
}

QString OAIOrg_membership_permissions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrg_membership_permissions::asJsonObject() const {
    QJsonObject obj;
    if (m_can_create_repository_isSet) {
        obj.insert(QString("can_create_repository"), ::OpenAPI::toJsonValue(m_can_create_repository));
    }
    return obj;
}

bool OAIOrg_membership_permissions::isCanCreateRepository() const {
    return m_can_create_repository;
}
void OAIOrg_membership_permissions::setCanCreateRepository(const bool &can_create_repository) {
    m_can_create_repository = can_create_repository;
    m_can_create_repository_isSet = true;
}

bool OAIOrg_membership_permissions::is_can_create_repository_Set() const{
    return m_can_create_repository_isSet;
}

bool OAIOrg_membership_permissions::is_can_create_repository_Valid() const{
    return m_can_create_repository_isValid;
}

bool OAIOrg_membership_permissions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_create_repository_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrg_membership_permissions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_can_create_repository_isValid && true;
}

} // namespace OpenAPI
