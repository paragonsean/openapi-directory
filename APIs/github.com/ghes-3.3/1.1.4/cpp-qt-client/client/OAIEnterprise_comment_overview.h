/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnterprise_comment_overview.h
 *
 * 
 */

#ifndef OAIEnterprise_comment_overview_H
#define OAIEnterprise_comment_overview_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnterprise_comment_overview : public OAIObject {
public:
    OAIEnterprise_comment_overview();
    OAIEnterprise_comment_overview(QString json);
    ~OAIEnterprise_comment_overview() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotalCommitComments() const;
    void setTotalCommitComments(const qint32 &total_commit_comments);
    bool is_total_commit_comments_Set() const;
    bool is_total_commit_comments_Valid() const;

    qint32 getTotalGistComments() const;
    void setTotalGistComments(const qint32 &total_gist_comments);
    bool is_total_gist_comments_Set() const;
    bool is_total_gist_comments_Valid() const;

    qint32 getTotalIssueComments() const;
    void setTotalIssueComments(const qint32 &total_issue_comments);
    bool is_total_issue_comments_Set() const;
    bool is_total_issue_comments_Valid() const;

    qint32 getTotalPullRequestComments() const;
    void setTotalPullRequestComments(const qint32 &total_pull_request_comments);
    bool is_total_pull_request_comments_Set() const;
    bool is_total_pull_request_comments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total_commit_comments;
    bool m_total_commit_comments_isSet;
    bool m_total_commit_comments_isValid;

    qint32 m_total_gist_comments;
    bool m_total_gist_comments_isSet;
    bool m_total_gist_comments_isValid;

    qint32 m_total_issue_comments;
    bool m_total_issue_comments_isSet;
    bool m_total_issue_comments_isValid;

    qint32 m_total_pull_request_comments;
    bool m_total_pull_request_comments_isSet;
    bool m_total_pull_request_comments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnterprise_comment_overview)

#endif // OAIEnterprise_comment_overview_H
