/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TeamsUpdateLegacyRequest model module.
 * @module model/TeamsUpdateLegacyRequest
 * @version 1.1.4
 */
class TeamsUpdateLegacyRequest {
    /**
     * Constructs a new <code>TeamsUpdateLegacyRequest</code>.
     * @alias module:model/TeamsUpdateLegacyRequest
     * @param name {String} The name of the team.
     */
    constructor(name) { 
        
        TeamsUpdateLegacyRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
        obj['permission'] = 'pull';
    }

    /**
     * Constructs a <code>TeamsUpdateLegacyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamsUpdateLegacyRequest} obj Optional instance to populate.
     * @return {module:model/TeamsUpdateLegacyRequest} The populated <code>TeamsUpdateLegacyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamsUpdateLegacyRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent_team_id')) {
                obj['parent_team_id'] = ApiClient.convertToType(data['parent_team_id'], 'Number');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], 'String');
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = ApiClient.convertToType(data['privacy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamsUpdateLegacyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamsUpdateLegacyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TeamsUpdateLegacyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['permission'] && !(typeof data['permission'] === 'string' || data['permission'] instanceof String)) {
            throw new Error("Expected the field `permission` to be a primitive type in the JSON string but got " + data['permission']);
        }
        // ensure the json data is a string
        if (data['privacy'] && !(typeof data['privacy'] === 'string' || data['privacy'] instanceof String)) {
            throw new Error("Expected the field `privacy` to be a primitive type in the JSON string but got " + data['privacy']);
        }

        return true;
    }


}

TeamsUpdateLegacyRequest.RequiredProperties = ["name"];

/**
 * The description of the team.
 * @member {String} description
 */
TeamsUpdateLegacyRequest.prototype['description'] = undefined;

/**
 * The name of the team.
 * @member {String} name
 */
TeamsUpdateLegacyRequest.prototype['name'] = undefined;

/**
 * The ID of a team to set as the parent team.
 * @member {Number} parent_team_id
 */
TeamsUpdateLegacyRequest.prototype['parent_team_id'] = undefined;

/**
 * **Deprecated**. The permission that new repositories will be added to the team with when none is specified.
 * @member {module:model/TeamsUpdateLegacyRequest.PermissionEnum} permission
 * @default 'pull'
 */
TeamsUpdateLegacyRequest.prototype['permission'] = 'pull';

/**
 * The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:   **For a non-nested team:**    * `secret` - only visible to organization owners and members of this team.    * `closed` - visible to all members of this organization.   **For a parent or child team:**    * `closed` - visible to all members of this organization.
 * @member {module:model/TeamsUpdateLegacyRequest.PrivacyEnum} privacy
 */
TeamsUpdateLegacyRequest.prototype['privacy'] = undefined;





/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
TeamsUpdateLegacyRequest['PermissionEnum'] = {

    /**
     * value: "pull"
     * @const
     */
    "pull": "pull",

    /**
     * value: "push"
     * @const
     */
    "push": "push",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin"
};


/**
 * Allowed values for the <code>privacy</code> property.
 * @enum {String}
 * @readonly
 */
TeamsUpdateLegacyRequest['PrivacyEnum'] = {

    /**
     * value: "secret"
     * @const
     */
    "secret": "secret",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default TeamsUpdateLegacyRequest;

