/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidationError from './ValidationError';
import ValidationErrorSimple from './ValidationErrorSimple';

/**
 * The OrgsUpdate422Response model module.
 * @module model/OrgsUpdate422Response
 * @version 1.1.4
 */
class OrgsUpdate422Response {
    /**
     * Constructs a new <code>OrgsUpdate422Response</code>.
     * @alias module:model/OrgsUpdate422Response
     * @param {(module:model/ValidationError|module:model/ValidationErrorSimple)} instance The actual instance to initialize OrgsUpdate422Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ValidationError") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ValidationError.validateJSON(instance); // throw an exception if no match
                // create ValidationError from JS object
                this.actualInstance = ValidationError.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ValidationError
            errorMessages.push("Failed to construct ValidationError: " + err)
        }

        try {
            if (typeof instance === "ValidationErrorSimple") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ValidationErrorSimple.validateJSON(instance); // throw an exception if no match
                // create ValidationErrorSimple from JS object
                this.actualInstance = ValidationErrorSimple.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ValidationErrorSimple
            errorMessages.push("Failed to construct ValidationErrorSimple: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `OrgsUpdate422Response` with oneOf schemas ValidationError, ValidationErrorSimple. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `OrgsUpdate422Response` with oneOf schemas ValidationError, ValidationErrorSimple. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>OrgsUpdate422Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgsUpdate422Response} obj Optional instance to populate.
     * @return {module:model/OrgsUpdate422Response} The populated <code>OrgsUpdate422Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new OrgsUpdate422Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>ValidationError</code>, <code>ValidationErrorSimple</code>.
     * @return {(module:model/ValidationError|module:model/ValidationErrorSimple)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ValidationError</code>, <code>ValidationErrorSimple</code>.
     * @param {(module:model/ValidationError|module:model/ValidationErrorSimple)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = OrgsUpdate422Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of OrgsUpdate422Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/OrgsUpdate422Response} An instance of OrgsUpdate422Response.
     */
    static fromJSON = function(json_string){
        return OrgsUpdate422Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {String} documentation_url
 */
OrgsUpdate422Response.prototype['documentation_url'] = undefined;

/**
 * @member {Array.<String>} errors
 */
OrgsUpdate422Response.prototype['errors'] = undefined;

/**
 * @member {String} message
 */
OrgsUpdate422Response.prototype['message'] = undefined;


OrgsUpdate422Response.OneOf = ["ValidationError", "ValidationErrorSimple"];

export default OrgsUpdate422Response;

