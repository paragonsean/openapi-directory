/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnterpriseSettingsEnterpriseSmtp model module.
 * @module model/EnterpriseSettingsEnterpriseSmtp
 * @version 1.1.4
 */
class EnterpriseSettingsEnterpriseSmtp {
    /**
     * Constructs a new <code>EnterpriseSettingsEnterpriseSmtp</code>.
     * @alias module:model/EnterpriseSettingsEnterpriseSmtp
     */
    constructor() { 
        
        EnterpriseSettingsEnterpriseSmtp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseSettingsEnterpriseSmtp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseSettingsEnterpriseSmtp} obj Optional instance to populate.
     * @return {module:model/EnterpriseSettingsEnterpriseSmtp} The populated <code>EnterpriseSettingsEnterpriseSmtp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseSettingsEnterpriseSmtp();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = ApiClient.convertToType(data['authentication'], 'String');
            }
            if (data.hasOwnProperty('discard-to-noreply-address')) {
                obj['discard-to-noreply-address'] = ApiClient.convertToType(data['discard-to-noreply-address'], 'Boolean');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('enable_starttls_auto')) {
                obj['enable_starttls_auto'] = ApiClient.convertToType(data['enable_starttls_auto'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('noreply_address')) {
                obj['noreply_address'] = ApiClient.convertToType(data['noreply_address'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'String');
            }
            if (data.hasOwnProperty('support_address')) {
                obj['support_address'] = ApiClient.convertToType(data['support_address'], 'String');
            }
            if (data.hasOwnProperty('support_address_type')) {
                obj['support_address_type'] = ApiClient.convertToType(data['support_address_type'], 'String');
            }
            if (data.hasOwnProperty('user_name')) {
                obj['user_name'] = ApiClient.convertToType(data['user_name'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseSettingsEnterpriseSmtp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseSettingsEnterpriseSmtp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['authentication'] && !(typeof data['authentication'] === 'string' || data['authentication'] instanceof String)) {
            throw new Error("Expected the field `authentication` to be a primitive type in the JSON string but got " + data['authentication']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['noreply_address'] && !(typeof data['noreply_address'] === 'string' || data['noreply_address'] instanceof String)) {
            throw new Error("Expected the field `noreply_address` to be a primitive type in the JSON string but got " + data['noreply_address']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['port'] && !(typeof data['port'] === 'string' || data['port'] instanceof String)) {
            throw new Error("Expected the field `port` to be a primitive type in the JSON string but got " + data['port']);
        }
        // ensure the json data is a string
        if (data['support_address'] && !(typeof data['support_address'] === 'string' || data['support_address'] instanceof String)) {
            throw new Error("Expected the field `support_address` to be a primitive type in the JSON string but got " + data['support_address']);
        }
        // ensure the json data is a string
        if (data['support_address_type'] && !(typeof data['support_address_type'] === 'string' || data['support_address_type'] instanceof String)) {
            throw new Error("Expected the field `support_address_type` to be a primitive type in the JSON string but got " + data['support_address_type']);
        }
        // ensure the json data is a string
        if (data['user_name'] && !(typeof data['user_name'] === 'string' || data['user_name'] instanceof String)) {
            throw new Error("Expected the field `user_name` to be a primitive type in the JSON string but got " + data['user_name']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {String} address
 */
EnterpriseSettingsEnterpriseSmtp.prototype['address'] = undefined;

/**
 * @member {String} authentication
 */
EnterpriseSettingsEnterpriseSmtp.prototype['authentication'] = undefined;

/**
 * @member {Boolean} discard-to-noreply-address
 */
EnterpriseSettingsEnterpriseSmtp.prototype['discard-to-noreply-address'] = undefined;

/**
 * @member {String} domain
 */
EnterpriseSettingsEnterpriseSmtp.prototype['domain'] = undefined;

/**
 * @member {Boolean} enable_starttls_auto
 */
EnterpriseSettingsEnterpriseSmtp.prototype['enable_starttls_auto'] = undefined;

/**
 * @member {Boolean} enabled
 */
EnterpriseSettingsEnterpriseSmtp.prototype['enabled'] = undefined;

/**
 * @member {String} noreply_address
 */
EnterpriseSettingsEnterpriseSmtp.prototype['noreply_address'] = undefined;

/**
 * @member {String} password
 */
EnterpriseSettingsEnterpriseSmtp.prototype['password'] = undefined;

/**
 * @member {String} port
 */
EnterpriseSettingsEnterpriseSmtp.prototype['port'] = undefined;

/**
 * @member {String} support_address
 */
EnterpriseSettingsEnterpriseSmtp.prototype['support_address'] = undefined;

/**
 * @member {String} support_address_type
 */
EnterpriseSettingsEnterpriseSmtp.prototype['support_address_type'] = undefined;

/**
 * @member {String} user_name
 */
EnterpriseSettingsEnterpriseSmtp.prototype['user_name'] = undefined;

/**
 * @member {String} username
 */
EnterpriseSettingsEnterpriseSmtp.prototype['username'] = undefined;






export default EnterpriseSettingsEnterpriseSmtp;

