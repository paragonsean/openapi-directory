/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReviewDismissedIssueEventDismissedReview model module.
 * @module model/ReviewDismissedIssueEventDismissedReview
 * @version 1.1.4
 */
class ReviewDismissedIssueEventDismissedReview {
    /**
     * Constructs a new <code>ReviewDismissedIssueEventDismissedReview</code>.
     * @alias module:model/ReviewDismissedIssueEventDismissedReview
     * @param dismissalMessage {String} 
     * @param reviewId {Number} 
     * @param state {String} 
     */
    constructor(dismissalMessage, reviewId, state) { 
        
        ReviewDismissedIssueEventDismissedReview.initialize(this, dismissalMessage, reviewId, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dismissalMessage, reviewId, state) { 
        obj['dismissal_message'] = dismissalMessage;
        obj['review_id'] = reviewId;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>ReviewDismissedIssueEventDismissedReview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReviewDismissedIssueEventDismissedReview} obj Optional instance to populate.
     * @return {module:model/ReviewDismissedIssueEventDismissedReview} The populated <code>ReviewDismissedIssueEventDismissedReview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReviewDismissedIssueEventDismissedReview();

            if (data.hasOwnProperty('dismissal_commit_id')) {
                obj['dismissal_commit_id'] = ApiClient.convertToType(data['dismissal_commit_id'], 'String');
            }
            if (data.hasOwnProperty('dismissal_message')) {
                obj['dismissal_message'] = ApiClient.convertToType(data['dismissal_message'], 'String');
            }
            if (data.hasOwnProperty('review_id')) {
                obj['review_id'] = ApiClient.convertToType(data['review_id'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReviewDismissedIssueEventDismissedReview</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReviewDismissedIssueEventDismissedReview</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReviewDismissedIssueEventDismissedReview.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dismissal_commit_id'] && !(typeof data['dismissal_commit_id'] === 'string' || data['dismissal_commit_id'] instanceof String)) {
            throw new Error("Expected the field `dismissal_commit_id` to be a primitive type in the JSON string but got " + data['dismissal_commit_id']);
        }
        // ensure the json data is a string
        if (data['dismissal_message'] && !(typeof data['dismissal_message'] === 'string' || data['dismissal_message'] instanceof String)) {
            throw new Error("Expected the field `dismissal_message` to be a primitive type in the JSON string but got " + data['dismissal_message']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

ReviewDismissedIssueEventDismissedReview.RequiredProperties = ["dismissal_message", "review_id", "state"];

/**
 * @member {String} dismissal_commit_id
 */
ReviewDismissedIssueEventDismissedReview.prototype['dismissal_commit_id'] = undefined;

/**
 * @member {String} dismissal_message
 */
ReviewDismissedIssueEventDismissedReview.prototype['dismissal_message'] = undefined;

/**
 * @member {Number} review_id
 */
ReviewDismissedIssueEventDismissedReview.prototype['review_id'] = undefined;

/**
 * @member {String} state
 */
ReviewDismissedIssueEventDismissedReview.prototype['state'] = undefined;






export default ReviewDismissedIssueEventDismissedReview;

