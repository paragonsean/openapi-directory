/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CodeScanningAlertRuleSummary model module.
 * @module model/CodeScanningAlertRuleSummary
 * @version 1.1.4
 */
class CodeScanningAlertRuleSummary {
    /**
     * Constructs a new <code>CodeScanningAlertRuleSummary</code>.
     * @alias module:model/CodeScanningAlertRuleSummary
     */
    constructor() { 
        
        CodeScanningAlertRuleSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CodeScanningAlertRuleSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodeScanningAlertRuleSummary} obj Optional instance to populate.
     * @return {module:model/CodeScanningAlertRuleSummary} The populated <code>CodeScanningAlertRuleSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodeScanningAlertRuleSummary();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodeScanningAlertRuleSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodeScanningAlertRuleSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }

        return true;
    }


}



/**
 * A short description of the rule used to detect the alert.
 * @member {String} description
 */
CodeScanningAlertRuleSummary.prototype['description'] = undefined;

/**
 * A unique identifier for the rule used to detect the alert.
 * @member {String} id
 */
CodeScanningAlertRuleSummary.prototype['id'] = undefined;

/**
 * The name of the rule used to detect the alert.
 * @member {String} name
 */
CodeScanningAlertRuleSummary.prototype['name'] = undefined;

/**
 * The severity of the alert.
 * @member {module:model/CodeScanningAlertRuleSummary.SeverityEnum} severity
 */
CodeScanningAlertRuleSummary.prototype['severity'] = undefined;





/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
CodeScanningAlertRuleSummary['SeverityEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "note"
     * @const
     */
    "note": "note",

    /**
     * value: "warning"
     * @const
     */
    "warning": "warning",

    /**
     * value: "error"
     * @const
     */
    "error": "error"
};



export default CodeScanningAlertRuleSummary;

