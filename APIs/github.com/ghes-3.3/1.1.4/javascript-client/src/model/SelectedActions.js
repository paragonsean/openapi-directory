/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SelectedActions model module.
 * @module model/SelectedActions
 * @version 1.1.4
 */
class SelectedActions {
    /**
     * Constructs a new <code>SelectedActions</code>.
     * @alias module:model/SelectedActions
     * @param githubOwnedAllowed {Boolean} Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.
     * @param patternsAllowed {Array.<String>} Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/_*`.
     */
    constructor(githubOwnedAllowed, patternsAllowed) { 
        
        SelectedActions.initialize(this, githubOwnedAllowed, patternsAllowed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, githubOwnedAllowed, patternsAllowed) { 
        obj['github_owned_allowed'] = githubOwnedAllowed;
        obj['patterns_allowed'] = patternsAllowed;
    }

    /**
     * Constructs a <code>SelectedActions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SelectedActions} obj Optional instance to populate.
     * @return {module:model/SelectedActions} The populated <code>SelectedActions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SelectedActions();

            if (data.hasOwnProperty('github_owned_allowed')) {
                obj['github_owned_allowed'] = ApiClient.convertToType(data['github_owned_allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('patterns_allowed')) {
                obj['patterns_allowed'] = ApiClient.convertToType(data['patterns_allowed'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SelectedActions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SelectedActions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SelectedActions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['patterns_allowed'])) {
            throw new Error("Expected the field `patterns_allowed` to be an array in the JSON data but got " + data['patterns_allowed']);
        }

        return true;
    }


}

SelectedActions.RequiredProperties = ["github_owned_allowed", "patterns_allowed"];

/**
 * Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.
 * @member {Boolean} github_owned_allowed
 */
SelectedActions.prototype['github_owned_allowed'] = undefined;

/**
 * Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/_*`.
 * @member {Array.<String>} patterns_allowed
 */
SelectedActions.prototype['patterns_allowed'] = undefined;






export default SelectedActions;

