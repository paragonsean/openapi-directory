/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReposUpdateBranchProtectionRequestRequiredPullRequestReviews from './ReposUpdateBranchProtectionRequestRequiredPullRequestReviews';
import ReposUpdateBranchProtectionRequestRequiredStatusChecks from './ReposUpdateBranchProtectionRequestRequiredStatusChecks';
import ReposUpdateBranchProtectionRequestRestrictions from './ReposUpdateBranchProtectionRequestRestrictions';

/**
 * The ReposUpdateBranchProtectionRequest model module.
 * @module model/ReposUpdateBranchProtectionRequest
 * @version 1.1.4
 */
class ReposUpdateBranchProtectionRequest {
    /**
     * Constructs a new <code>ReposUpdateBranchProtectionRequest</code>.
     * @alias module:model/ReposUpdateBranchProtectionRequest
     * @param enforceAdmins {Boolean} Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.
     * @param requiredPullRequestReviews {module:model/ReposUpdateBranchProtectionRequestRequiredPullRequestReviews} 
     * @param requiredStatusChecks {module:model/ReposUpdateBranchProtectionRequestRequiredStatusChecks} 
     * @param restrictions {module:model/ReposUpdateBranchProtectionRequestRestrictions} 
     */
    constructor(enforceAdmins, requiredPullRequestReviews, requiredStatusChecks, restrictions) { 
        
        ReposUpdateBranchProtectionRequest.initialize(this, enforceAdmins, requiredPullRequestReviews, requiredStatusChecks, restrictions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enforceAdmins, requiredPullRequestReviews, requiredStatusChecks, restrictions) { 
        obj['enforce_admins'] = enforceAdmins;
        obj['required_pull_request_reviews'] = requiredPullRequestReviews;
        obj['required_status_checks'] = requiredStatusChecks;
        obj['restrictions'] = restrictions;
    }

    /**
     * Constructs a <code>ReposUpdateBranchProtectionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReposUpdateBranchProtectionRequest} obj Optional instance to populate.
     * @return {module:model/ReposUpdateBranchProtectionRequest} The populated <code>ReposUpdateBranchProtectionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReposUpdateBranchProtectionRequest();

            if (data.hasOwnProperty('allow_deletions')) {
                obj['allow_deletions'] = ApiClient.convertToType(data['allow_deletions'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_force_pushes')) {
                obj['allow_force_pushes'] = ApiClient.convertToType(data['allow_force_pushes'], 'Boolean');
            }
            if (data.hasOwnProperty('block_creations')) {
                obj['block_creations'] = ApiClient.convertToType(data['block_creations'], 'Boolean');
            }
            if (data.hasOwnProperty('contexts')) {
                obj['contexts'] = ApiClient.convertToType(data['contexts'], ['String']);
            }
            if (data.hasOwnProperty('enforce_admins')) {
                obj['enforce_admins'] = ApiClient.convertToType(data['enforce_admins'], 'Boolean');
            }
            if (data.hasOwnProperty('required_conversation_resolution')) {
                obj['required_conversation_resolution'] = ApiClient.convertToType(data['required_conversation_resolution'], 'Boolean');
            }
            if (data.hasOwnProperty('required_linear_history')) {
                obj['required_linear_history'] = ApiClient.convertToType(data['required_linear_history'], 'Boolean');
            }
            if (data.hasOwnProperty('required_pull_request_reviews')) {
                obj['required_pull_request_reviews'] = ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.constructFromObject(data['required_pull_request_reviews']);
            }
            if (data.hasOwnProperty('required_status_checks')) {
                obj['required_status_checks'] = ReposUpdateBranchProtectionRequestRequiredStatusChecks.constructFromObject(data['required_status_checks']);
            }
            if (data.hasOwnProperty('restrictions')) {
                obj['restrictions'] = ReposUpdateBranchProtectionRequestRestrictions.constructFromObject(data['restrictions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReposUpdateBranchProtectionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReposUpdateBranchProtectionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReposUpdateBranchProtectionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['contexts'])) {
            throw new Error("Expected the field `contexts` to be an array in the JSON data but got " + data['contexts']);
        }
        // validate the optional field `required_pull_request_reviews`
        if (data['required_pull_request_reviews']) { // data not null
          ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.validateJSON(data['required_pull_request_reviews']);
        }
        // validate the optional field `required_status_checks`
        if (data['required_status_checks']) { // data not null
          ReposUpdateBranchProtectionRequestRequiredStatusChecks.validateJSON(data['required_status_checks']);
        }
        // validate the optional field `restrictions`
        if (data['restrictions']) { // data not null
          ReposUpdateBranchProtectionRequestRestrictions.validateJSON(data['restrictions']);
        }

        return true;
    }


}

ReposUpdateBranchProtectionRequest.RequiredProperties = ["enforce_admins", "required_pull_request_reviews", "required_status_checks", "restrictions"];

/**
 * Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/enterprise-server@3.3/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.
 * @member {Boolean} allow_deletions
 */
ReposUpdateBranchProtectionRequest.prototype['allow_deletions'] = undefined;

/**
 * Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/enterprise-server@3.3/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"
 * @member {Boolean} allow_force_pushes
 */
ReposUpdateBranchProtectionRequest.prototype['allow_force_pushes'] = undefined;

/**
 * If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which create new branches, unless the push is initiated by a user, team, or app which has the ability to push. Set to `true` to restrict new branch creation. Default: `false`.
 * @member {Boolean} block_creations
 */
ReposUpdateBranchProtectionRequest.prototype['block_creations'] = undefined;

/**
 * The list of status checks to require in order to merge into this branch.
 * @member {Array.<String>} contexts
 */
ReposUpdateBranchProtectionRequest.prototype['contexts'] = undefined;

/**
 * Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.
 * @member {Boolean} enforce_admins
 */
ReposUpdateBranchProtectionRequest.prototype['enforce_admins'] = undefined;

/**
 * Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.
 * @member {Boolean} required_conversation_resolution
 */
ReposUpdateBranchProtectionRequest.prototype['required_conversation_resolution'] = undefined;

/**
 * Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://docs.github.com/enterprise-server@3.3/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation.
 * @member {Boolean} required_linear_history
 */
ReposUpdateBranchProtectionRequest.prototype['required_linear_history'] = undefined;

/**
 * @member {module:model/ReposUpdateBranchProtectionRequestRequiredPullRequestReviews} required_pull_request_reviews
 */
ReposUpdateBranchProtectionRequest.prototype['required_pull_request_reviews'] = undefined;

/**
 * @member {module:model/ReposUpdateBranchProtectionRequestRequiredStatusChecks} required_status_checks
 */
ReposUpdateBranchProtectionRequest.prototype['required_status_checks'] = undefined;

/**
 * @member {module:model/ReposUpdateBranchProtectionRequestRestrictions} restrictions
 */
ReposUpdateBranchProtectionRequest.prototype['restrictions'] = undefined;






export default ReposUpdateBranchProtectionRequest;

