/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BranchProtectionRequiredSignatures from './BranchProtectionRequiredSignatures';
import BranchRestrictionPolicy from './BranchRestrictionPolicy';
import ProtectedBranchAllowDeletions from './ProtectedBranchAllowDeletions';
import ProtectedBranchEnforceAdmins from './ProtectedBranchEnforceAdmins';
import ProtectedBranchRequiredConversationResolution from './ProtectedBranchRequiredConversationResolution';
import ProtectedBranchRequiredPullRequestReviews from './ProtectedBranchRequiredPullRequestReviews';
import StatusCheckPolicy from './StatusCheckPolicy';

/**
 * The ProtectedBranch model module.
 * @module model/ProtectedBranch
 * @version 1.1.4
 */
class ProtectedBranch {
    /**
     * Constructs a new <code>ProtectedBranch</code>.
     * Branch protections protect branches
     * @alias module:model/ProtectedBranch
     * @param url {String} 
     */
    constructor(url) { 
        
        ProtectedBranch.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['url'] = url;
    }

    /**
     * Constructs a <code>ProtectedBranch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProtectedBranch} obj Optional instance to populate.
     * @return {module:model/ProtectedBranch} The populated <code>ProtectedBranch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProtectedBranch();

            if (data.hasOwnProperty('allow_deletions')) {
                obj['allow_deletions'] = ProtectedBranchAllowDeletions.constructFromObject(data['allow_deletions']);
            }
            if (data.hasOwnProperty('allow_force_pushes')) {
                obj['allow_force_pushes'] = ProtectedBranchAllowDeletions.constructFromObject(data['allow_force_pushes']);
            }
            if (data.hasOwnProperty('block_creations')) {
                obj['block_creations'] = ProtectedBranchAllowDeletions.constructFromObject(data['block_creations']);
            }
            if (data.hasOwnProperty('enforce_admins')) {
                obj['enforce_admins'] = ProtectedBranchEnforceAdmins.constructFromObject(data['enforce_admins']);
            }
            if (data.hasOwnProperty('required_conversation_resolution')) {
                obj['required_conversation_resolution'] = ProtectedBranchRequiredConversationResolution.constructFromObject(data['required_conversation_resolution']);
            }
            if (data.hasOwnProperty('required_linear_history')) {
                obj['required_linear_history'] = ProtectedBranchAllowDeletions.constructFromObject(data['required_linear_history']);
            }
            if (data.hasOwnProperty('required_pull_request_reviews')) {
                obj['required_pull_request_reviews'] = ProtectedBranchRequiredPullRequestReviews.constructFromObject(data['required_pull_request_reviews']);
            }
            if (data.hasOwnProperty('required_signatures')) {
                obj['required_signatures'] = BranchProtectionRequiredSignatures.constructFromObject(data['required_signatures']);
            }
            if (data.hasOwnProperty('required_status_checks')) {
                obj['required_status_checks'] = StatusCheckPolicy.constructFromObject(data['required_status_checks']);
            }
            if (data.hasOwnProperty('restrictions')) {
                obj['restrictions'] = BranchRestrictionPolicy.constructFromObject(data['restrictions']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProtectedBranch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProtectedBranch</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProtectedBranch.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `allow_deletions`
        if (data['allow_deletions']) { // data not null
          ProtectedBranchAllowDeletions.validateJSON(data['allow_deletions']);
        }
        // validate the optional field `allow_force_pushes`
        if (data['allow_force_pushes']) { // data not null
          ProtectedBranchAllowDeletions.validateJSON(data['allow_force_pushes']);
        }
        // validate the optional field `block_creations`
        if (data['block_creations']) { // data not null
          ProtectedBranchAllowDeletions.validateJSON(data['block_creations']);
        }
        // validate the optional field `enforce_admins`
        if (data['enforce_admins']) { // data not null
          ProtectedBranchEnforceAdmins.validateJSON(data['enforce_admins']);
        }
        // validate the optional field `required_conversation_resolution`
        if (data['required_conversation_resolution']) { // data not null
          ProtectedBranchRequiredConversationResolution.validateJSON(data['required_conversation_resolution']);
        }
        // validate the optional field `required_linear_history`
        if (data['required_linear_history']) { // data not null
          ProtectedBranchAllowDeletions.validateJSON(data['required_linear_history']);
        }
        // validate the optional field `required_pull_request_reviews`
        if (data['required_pull_request_reviews']) { // data not null
          ProtectedBranchRequiredPullRequestReviews.validateJSON(data['required_pull_request_reviews']);
        }
        // validate the optional field `required_signatures`
        if (data['required_signatures']) { // data not null
          BranchProtectionRequiredSignatures.validateJSON(data['required_signatures']);
        }
        // validate the optional field `required_status_checks`
        if (data['required_status_checks']) { // data not null
          StatusCheckPolicy.validateJSON(data['required_status_checks']);
        }
        // validate the optional field `restrictions`
        if (data['restrictions']) { // data not null
          BranchRestrictionPolicy.validateJSON(data['restrictions']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

ProtectedBranch.RequiredProperties = ["url"];

/**
 * @member {module:model/ProtectedBranchAllowDeletions} allow_deletions
 */
ProtectedBranch.prototype['allow_deletions'] = undefined;

/**
 * @member {module:model/ProtectedBranchAllowDeletions} allow_force_pushes
 */
ProtectedBranch.prototype['allow_force_pushes'] = undefined;

/**
 * @member {module:model/ProtectedBranchAllowDeletions} block_creations
 */
ProtectedBranch.prototype['block_creations'] = undefined;

/**
 * @member {module:model/ProtectedBranchEnforceAdmins} enforce_admins
 */
ProtectedBranch.prototype['enforce_admins'] = undefined;

/**
 * @member {module:model/ProtectedBranchRequiredConversationResolution} required_conversation_resolution
 */
ProtectedBranch.prototype['required_conversation_resolution'] = undefined;

/**
 * @member {module:model/ProtectedBranchAllowDeletions} required_linear_history
 */
ProtectedBranch.prototype['required_linear_history'] = undefined;

/**
 * @member {module:model/ProtectedBranchRequiredPullRequestReviews} required_pull_request_reviews
 */
ProtectedBranch.prototype['required_pull_request_reviews'] = undefined;

/**
 * @member {module:model/BranchProtectionRequiredSignatures} required_signatures
 */
ProtectedBranch.prototype['required_signatures'] = undefined;

/**
 * @member {module:model/StatusCheckPolicy} required_status_checks
 */
ProtectedBranch.prototype['required_status_checks'] = undefined;

/**
 * @member {module:model/BranchRestrictionPolicy} restrictions
 */
ProtectedBranch.prototype['restrictions'] = undefined;

/**
 * @member {String} url
 */
ProtectedBranch.prototype['url'] = undefined;






export default ProtectedBranch;

