/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PullsUpdateRequest model module.
 * @module model/PullsUpdateRequest
 * @version 1.1.4
 */
class PullsUpdateRequest {
    /**
     * Constructs a new <code>PullsUpdateRequest</code>.
     * @alias module:model/PullsUpdateRequest
     */
    constructor() { 
        
        PullsUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PullsUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PullsUpdateRequest} obj Optional instance to populate.
     * @return {module:model/PullsUpdateRequest} The populated <code>PullsUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PullsUpdateRequest();

            if (data.hasOwnProperty('base')) {
                obj['base'] = ApiClient.convertToType(data['base'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('maintainer_can_modify')) {
                obj['maintainer_can_modify'] = ApiClient.convertToType(data['maintainer_can_modify'], 'Boolean');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PullsUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PullsUpdateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base'] && !(typeof data['base'] === 'string' || data['base'] instanceof String)) {
            throw new Error("Expected the field `base` to be a primitive type in the JSON string but got " + data['base']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.
 * @member {String} base
 */
PullsUpdateRequest.prototype['base'] = undefined;

/**
 * The contents of the pull request.
 * @member {String} body
 */
PullsUpdateRequest.prototype['body'] = undefined;

/**
 * Indicates whether [maintainers can modify](https://docs.github.com/enterprise-server@3.3/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
 * @member {Boolean} maintainer_can_modify
 */
PullsUpdateRequest.prototype['maintainer_can_modify'] = undefined;

/**
 * State of this Pull Request. Either `open` or `closed`.
 * @member {module:model/PullsUpdateRequest.StateEnum} state
 */
PullsUpdateRequest.prototype['state'] = undefined;

/**
 * The title of the pull request.
 * @member {String} title
 */
PullsUpdateRequest.prototype['title'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
PullsUpdateRequest['StateEnum'] = {

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default PullsUpdateRequest;

