/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReposSetStatusCheckContextsRequestOneOf from './ReposSetStatusCheckContextsRequestOneOf';

/**
 * The ReposSetStatusCheckContextsRequest model module.
 * @module model/ReposSetStatusCheckContextsRequest
 * @version 1.1.4
 */
class ReposSetStatusCheckContextsRequest {
    /**
     * Constructs a new <code>ReposSetStatusCheckContextsRequest</code>.
     * @alias module:model/ReposSetStatusCheckContextsRequest
     * @param {(module:model/ReposSetStatusCheckContextsRequestOneOf|module:model/[String])} instance The actual instance to initialize ReposSetStatusCheckContextsRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ReposSetStatusCheckContextsRequestOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ReposSetStatusCheckContextsRequestOneOf.validateJSON(instance); // throw an exception if no match
                // create ReposSetStatusCheckContextsRequestOneOf from JS object
                this.actualInstance = ReposSetStatusCheckContextsRequestOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ReposSetStatusCheckContextsRequestOneOf
            errorMessages.push("Failed to construct ReposSetStatusCheckContextsRequestOneOf: " + err)
        }

        // The name of the status checks
        try {
            // validate array data type
            if (!Array.isArray(instance)) {
                throw new Error("Invalid data type. Expecting array. Input: " + instance);
            }
            // validate array of string
            for (const item of instance) {
                if (!(typeof item === 'number' && item % 1 === 0)) {
                    throw new Error("Invalid array items. Must be string. Input: " + instance);
                }
            }
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into [String]
            errorMessages.push("Failed to construct [String]: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ReposSetStatusCheckContextsRequest` with oneOf schemas ReposSetStatusCheckContextsRequestOneOf, [String]. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ReposSetStatusCheckContextsRequest` with oneOf schemas ReposSetStatusCheckContextsRequestOneOf, [String]. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ReposSetStatusCheckContextsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReposSetStatusCheckContextsRequest} obj Optional instance to populate.
     * @return {module:model/ReposSetStatusCheckContextsRequest} The populated <code>ReposSetStatusCheckContextsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ReposSetStatusCheckContextsRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>ReposSetStatusCheckContextsRequestOneOf</code>, <code>[String]</code>.
     * @return {(module:model/ReposSetStatusCheckContextsRequestOneOf|module:model/[String])} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ReposSetStatusCheckContextsRequestOneOf</code>, <code>[String]</code>.
     * @param {(module:model/ReposSetStatusCheckContextsRequestOneOf|module:model/[String])} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ReposSetStatusCheckContextsRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ReposSetStatusCheckContextsRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ReposSetStatusCheckContextsRequest} An instance of ReposSetStatusCheckContextsRequest.
     */
    static fromJSON = function(json_string){
        return ReposSetStatusCheckContextsRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The name of the status checks
 * @member {Array.<String>} contexts
 */
ReposSetStatusCheckContextsRequest.prototype['contexts'] = undefined;


ReposSetStatusCheckContextsRequest.OneOf = ["ReposSetStatusCheckContextsRequestOneOf", "[String]"];

export default ReposSetStatusCheckContextsRequest;

