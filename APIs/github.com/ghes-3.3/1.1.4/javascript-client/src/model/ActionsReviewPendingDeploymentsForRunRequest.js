/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionsReviewPendingDeploymentsForRunRequest model module.
 * @module model/ActionsReviewPendingDeploymentsForRunRequest
 * @version 1.1.4
 */
class ActionsReviewPendingDeploymentsForRunRequest {
    /**
     * Constructs a new <code>ActionsReviewPendingDeploymentsForRunRequest</code>.
     * @alias module:model/ActionsReviewPendingDeploymentsForRunRequest
     * @param comment {String} A comment to accompany the deployment review
     * @param environmentIds {Array.<Number>} The list of environment ids to approve or reject
     * @param state {module:model/ActionsReviewPendingDeploymentsForRunRequest.StateEnum} Whether to approve or reject deployment to the specified environments.
     */
    constructor(comment, environmentIds, state) { 
        
        ActionsReviewPendingDeploymentsForRunRequest.initialize(this, comment, environmentIds, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, comment, environmentIds, state) { 
        obj['comment'] = comment;
        obj['environment_ids'] = environmentIds;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>ActionsReviewPendingDeploymentsForRunRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsReviewPendingDeploymentsForRunRequest} obj Optional instance to populate.
     * @return {module:model/ActionsReviewPendingDeploymentsForRunRequest} The populated <code>ActionsReviewPendingDeploymentsForRunRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsReviewPendingDeploymentsForRunRequest();

            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('environment_ids')) {
                obj['environment_ids'] = ApiClient.convertToType(data['environment_ids'], ['Number']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsReviewPendingDeploymentsForRunRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsReviewPendingDeploymentsForRunRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionsReviewPendingDeploymentsForRunRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['environment_ids'])) {
            throw new Error("Expected the field `environment_ids` to be an array in the JSON data but got " + data['environment_ids']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

ActionsReviewPendingDeploymentsForRunRequest.RequiredProperties = ["comment", "environment_ids", "state"];

/**
 * A comment to accompany the deployment review
 * @member {String} comment
 */
ActionsReviewPendingDeploymentsForRunRequest.prototype['comment'] = undefined;

/**
 * The list of environment ids to approve or reject
 * @member {Array.<Number>} environment_ids
 */
ActionsReviewPendingDeploymentsForRunRequest.prototype['environment_ids'] = undefined;

/**
 * Whether to approve or reject deployment to the specified environments.
 * @member {module:model/ActionsReviewPendingDeploymentsForRunRequest.StateEnum} state
 */
ActionsReviewPendingDeploymentsForRunRequest.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ActionsReviewPendingDeploymentsForRunRequest['StateEnum'] = {

    /**
     * value: "approved"
     * @const
     */
    "approved": "approved",

    /**
     * value: "rejected"
     * @const
     */
    "rejected": "rejected"
};



export default ActionsReviewPendingDeploymentsForRunRequest;

