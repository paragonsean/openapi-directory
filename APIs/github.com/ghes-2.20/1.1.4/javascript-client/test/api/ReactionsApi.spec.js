/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitHubV3RestApi);
  }
}(this, function(expect, GitHubV3RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitHubV3RestApi.ReactionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReactionsApi', function() {
    describe('reactionsCreateForCommitComment', function() {
      it('should call reactionsCreateForCommitComment successfully', function(done) {
        //uncomment below and update the code to test reactionsCreateForCommitComment
        //instance.reactionsCreateForCommitComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsCreateForIssue', function() {
      it('should call reactionsCreateForIssue successfully', function(done) {
        //uncomment below and update the code to test reactionsCreateForIssue
        //instance.reactionsCreateForIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsCreateForIssueComment', function() {
      it('should call reactionsCreateForIssueComment successfully', function(done) {
        //uncomment below and update the code to test reactionsCreateForIssueComment
        //instance.reactionsCreateForIssueComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsCreateForPullRequestReviewComment', function() {
      it('should call reactionsCreateForPullRequestReviewComment successfully', function(done) {
        //uncomment below and update the code to test reactionsCreateForPullRequestReviewComment
        //instance.reactionsCreateForPullRequestReviewComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsCreateForTeamDiscussion', function() {
      it('should call reactionsCreateForTeamDiscussion successfully', function(done) {
        //uncomment below and update the code to test reactionsCreateForTeamDiscussion
        //instance.reactionsCreateForTeamDiscussion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsCreateForTeamDiscussionComment', function() {
      it('should call reactionsCreateForTeamDiscussionComment successfully', function(done) {
        //uncomment below and update the code to test reactionsCreateForTeamDiscussionComment
        //instance.reactionsCreateForTeamDiscussionComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsDelete', function() {
      it('should call reactionsDelete successfully', function(done) {
        //uncomment below and update the code to test reactionsDelete
        //instance.reactionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsListForCommitComment', function() {
      it('should call reactionsListForCommitComment successfully', function(done) {
        //uncomment below and update the code to test reactionsListForCommitComment
        //instance.reactionsListForCommitComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsListForIssue', function() {
      it('should call reactionsListForIssue successfully', function(done) {
        //uncomment below and update the code to test reactionsListForIssue
        //instance.reactionsListForIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsListForIssueComment', function() {
      it('should call reactionsListForIssueComment successfully', function(done) {
        //uncomment below and update the code to test reactionsListForIssueComment
        //instance.reactionsListForIssueComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsListForPullRequestReviewComment', function() {
      it('should call reactionsListForPullRequestReviewComment successfully', function(done) {
        //uncomment below and update the code to test reactionsListForPullRequestReviewComment
        //instance.reactionsListForPullRequestReviewComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsListForTeamDiscussion', function() {
      it('should call reactionsListForTeamDiscussion successfully', function(done) {
        //uncomment below and update the code to test reactionsListForTeamDiscussion
        //instance.reactionsListForTeamDiscussion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactionsListForTeamDiscussionComment', function() {
      it('should call reactionsListForTeamDiscussionComment successfully', function(done) {
        //uncomment below and update the code to test reactionsListForTeamDiscussionComment
        //instance.reactionsListForTeamDiscussionComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
