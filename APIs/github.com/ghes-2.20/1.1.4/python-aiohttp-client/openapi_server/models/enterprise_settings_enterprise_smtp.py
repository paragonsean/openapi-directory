# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterpriseSettingsEnterpriseSmtp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, authentication: str=None, discard_to_noreply_address: bool=None, domain: str=None, enable_starttls_auto: bool=None, enabled: bool=None, noreply_address: str=None, password: str=None, port: str=None, support_address: str=None, support_address_type: str=None, user_name: str=None, username: str=None):
        """EnterpriseSettingsEnterpriseSmtp - a model defined in OpenAPI

        :param address: The address of this EnterpriseSettingsEnterpriseSmtp.
        :param authentication: The authentication of this EnterpriseSettingsEnterpriseSmtp.
        :param discard_to_noreply_address: The discard_to_noreply_address of this EnterpriseSettingsEnterpriseSmtp.
        :param domain: The domain of this EnterpriseSettingsEnterpriseSmtp.
        :param enable_starttls_auto: The enable_starttls_auto of this EnterpriseSettingsEnterpriseSmtp.
        :param enabled: The enabled of this EnterpriseSettingsEnterpriseSmtp.
        :param noreply_address: The noreply_address of this EnterpriseSettingsEnterpriseSmtp.
        :param password: The password of this EnterpriseSettingsEnterpriseSmtp.
        :param port: The port of this EnterpriseSettingsEnterpriseSmtp.
        :param support_address: The support_address of this EnterpriseSettingsEnterpriseSmtp.
        :param support_address_type: The support_address_type of this EnterpriseSettingsEnterpriseSmtp.
        :param user_name: The user_name of this EnterpriseSettingsEnterpriseSmtp.
        :param username: The username of this EnterpriseSettingsEnterpriseSmtp.
        """
        self.openapi_types = {
            'address': str,
            'authentication': str,
            'discard_to_noreply_address': bool,
            'domain': str,
            'enable_starttls_auto': bool,
            'enabled': bool,
            'noreply_address': str,
            'password': str,
            'port': str,
            'support_address': str,
            'support_address_type': str,
            'user_name': str,
            'username': str
        }

        self.attribute_map = {
            'address': 'address',
            'authentication': 'authentication',
            'discard_to_noreply_address': 'discard-to-noreply-address',
            'domain': 'domain',
            'enable_starttls_auto': 'enable_starttls_auto',
            'enabled': 'enabled',
            'noreply_address': 'noreply_address',
            'password': 'password',
            'port': 'port',
            'support_address': 'support_address',
            'support_address_type': 'support_address_type',
            'user_name': 'user_name',
            'username': 'username'
        }

        self._address = address
        self._authentication = authentication
        self._discard_to_noreply_address = discard_to_noreply_address
        self._domain = domain
        self._enable_starttls_auto = enable_starttls_auto
        self._enabled = enabled
        self._noreply_address = noreply_address
        self._password = password
        self._port = port
        self._support_address = support_address
        self._support_address_type = support_address_type
        self._user_name = user_name
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseSettingsEnterpriseSmtp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise_settings_enterprise_smtp of this EnterpriseSettingsEnterpriseSmtp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this EnterpriseSettingsEnterpriseSmtp.


        :return: The address of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this EnterpriseSettingsEnterpriseSmtp.


        :param address: The address of this EnterpriseSettingsEnterpriseSmtp.
        :type address: str
        """

        self._address = address

    @property
    def authentication(self):
        """Gets the authentication of this EnterpriseSettingsEnterpriseSmtp.


        :return: The authentication of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this EnterpriseSettingsEnterpriseSmtp.


        :param authentication: The authentication of this EnterpriseSettingsEnterpriseSmtp.
        :type authentication: str
        """

        self._authentication = authentication

    @property
    def discard_to_noreply_address(self):
        """Gets the discard_to_noreply_address of this EnterpriseSettingsEnterpriseSmtp.


        :return: The discard_to_noreply_address of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: bool
        """
        return self._discard_to_noreply_address

    @discard_to_noreply_address.setter
    def discard_to_noreply_address(self, discard_to_noreply_address):
        """Sets the discard_to_noreply_address of this EnterpriseSettingsEnterpriseSmtp.


        :param discard_to_noreply_address: The discard_to_noreply_address of this EnterpriseSettingsEnterpriseSmtp.
        :type discard_to_noreply_address: bool
        """

        self._discard_to_noreply_address = discard_to_noreply_address

    @property
    def domain(self):
        """Gets the domain of this EnterpriseSettingsEnterpriseSmtp.


        :return: The domain of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this EnterpriseSettingsEnterpriseSmtp.


        :param domain: The domain of this EnterpriseSettingsEnterpriseSmtp.
        :type domain: str
        """

        self._domain = domain

    @property
    def enable_starttls_auto(self):
        """Gets the enable_starttls_auto of this EnterpriseSettingsEnterpriseSmtp.


        :return: The enable_starttls_auto of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: bool
        """
        return self._enable_starttls_auto

    @enable_starttls_auto.setter
    def enable_starttls_auto(self, enable_starttls_auto):
        """Sets the enable_starttls_auto of this EnterpriseSettingsEnterpriseSmtp.


        :param enable_starttls_auto: The enable_starttls_auto of this EnterpriseSettingsEnterpriseSmtp.
        :type enable_starttls_auto: bool
        """

        self._enable_starttls_auto = enable_starttls_auto

    @property
    def enabled(self):
        """Gets the enabled of this EnterpriseSettingsEnterpriseSmtp.


        :return: The enabled of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this EnterpriseSettingsEnterpriseSmtp.


        :param enabled: The enabled of this EnterpriseSettingsEnterpriseSmtp.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def noreply_address(self):
        """Gets the noreply_address of this EnterpriseSettingsEnterpriseSmtp.


        :return: The noreply_address of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._noreply_address

    @noreply_address.setter
    def noreply_address(self, noreply_address):
        """Sets the noreply_address of this EnterpriseSettingsEnterpriseSmtp.


        :param noreply_address: The noreply_address of this EnterpriseSettingsEnterpriseSmtp.
        :type noreply_address: str
        """

        self._noreply_address = noreply_address

    @property
    def password(self):
        """Gets the password of this EnterpriseSettingsEnterpriseSmtp.


        :return: The password of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this EnterpriseSettingsEnterpriseSmtp.


        :param password: The password of this EnterpriseSettingsEnterpriseSmtp.
        :type password: str
        """

        self._password = password

    @property
    def port(self):
        """Gets the port of this EnterpriseSettingsEnterpriseSmtp.


        :return: The port of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this EnterpriseSettingsEnterpriseSmtp.


        :param port: The port of this EnterpriseSettingsEnterpriseSmtp.
        :type port: str
        """

        self._port = port

    @property
    def support_address(self):
        """Gets the support_address of this EnterpriseSettingsEnterpriseSmtp.


        :return: The support_address of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._support_address

    @support_address.setter
    def support_address(self, support_address):
        """Sets the support_address of this EnterpriseSettingsEnterpriseSmtp.


        :param support_address: The support_address of this EnterpriseSettingsEnterpriseSmtp.
        :type support_address: str
        """

        self._support_address = support_address

    @property
    def support_address_type(self):
        """Gets the support_address_type of this EnterpriseSettingsEnterpriseSmtp.


        :return: The support_address_type of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._support_address_type

    @support_address_type.setter
    def support_address_type(self, support_address_type):
        """Sets the support_address_type of this EnterpriseSettingsEnterpriseSmtp.


        :param support_address_type: The support_address_type of this EnterpriseSettingsEnterpriseSmtp.
        :type support_address_type: str
        """

        self._support_address_type = support_address_type

    @property
    def user_name(self):
        """Gets the user_name of this EnterpriseSettingsEnterpriseSmtp.


        :return: The user_name of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this EnterpriseSettingsEnterpriseSmtp.


        :param user_name: The user_name of this EnterpriseSettingsEnterpriseSmtp.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def username(self):
        """Gets the username of this EnterpriseSettingsEnterpriseSmtp.


        :return: The username of this EnterpriseSettingsEnterpriseSmtp.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this EnterpriseSettingsEnterpriseSmtp.


        :param username: The username of this EnterpriseSettingsEnterpriseSmtp.
        :type username: str
        """

        self._username = username
