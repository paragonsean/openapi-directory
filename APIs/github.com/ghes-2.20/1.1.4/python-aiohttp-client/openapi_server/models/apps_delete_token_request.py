# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppsDeleteTokenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None):
        """AppsDeleteTokenRequest - a model defined in OpenAPI

        :param access_token: The access_token of this AppsDeleteTokenRequest.
        """
        self.openapi_types = {
            'access_token': str
        }

        self.attribute_map = {
            'access_token': 'access_token'
        }

        self._access_token = access_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppsDeleteTokenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The apps_delete_token_request of this AppsDeleteTokenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this AppsDeleteTokenRequest.

        The OAuth access token used to authenticate to the GitHub API.

        :return: The access_token of this AppsDeleteTokenRequest.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this AppsDeleteTokenRequest.

        The OAuth access token used to authenticate to the GitHub API.

        :param access_token: The access_token of this AppsDeleteTokenRequest.
        :type access_token: str
        """
        if access_token is None:
            raise ValueError("Invalid value for `access_token`, must not be `None`")

        self._access_token = access_token
