# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SshKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, pretty_print: str=None):
        """SshKey - a model defined in OpenAPI

        :param key: The key of this SshKey.
        :param pretty_print: The pretty_print of this SshKey.
        """
        self.openapi_types = {
            'key': str,
            'pretty_print': str
        }

        self.attribute_map = {
            'key': 'key',
            'pretty_print': 'pretty-print'
        }

        self._key = key
        self._pretty_print = pretty_print

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ssh-key of this SshKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this SshKey.


        :return: The key of this SshKey.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SshKey.


        :param key: The key of this SshKey.
        :type key: str
        """

        self._key = key

    @property
    def pretty_print(self):
        """Gets the pretty_print of this SshKey.


        :return: The pretty_print of this SshKey.
        :rtype: str
        """
        return self._pretty_print

    @pretty_print.setter
    def pretty_print(self, pretty_print):
        """Sets the pretty_print of this SshKey.


        :param pretty_print: The pretty_print of this SshKey.
        :type pretty_print: str
        """

        self._pretty_print = pretty_print
