# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterprisePageOverview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_pages: int=None):
        """EnterprisePageOverview - a model defined in OpenAPI

        :param total_pages: The total_pages of this EnterprisePageOverview.
        """
        self.openapi_types = {
            'total_pages': int
        }

        self.attribute_map = {
            'total_pages': 'total_pages'
        }

        self._total_pages = total_pages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterprisePageOverview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise-page-overview of this EnterprisePageOverview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_pages(self):
        """Gets the total_pages of this EnterprisePageOverview.


        :return: The total_pages of this EnterprisePageOverview.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages):
        """Sets the total_pages of this EnterprisePageOverview.


        :param total_pages: The total_pages of this EnterprisePageOverview.
        :type total_pages: int
        """
        if total_pages is None:
            raise ValueError("Invalid value for `total_pages`, must not be `None`")

        self._total_pages = total_pages
