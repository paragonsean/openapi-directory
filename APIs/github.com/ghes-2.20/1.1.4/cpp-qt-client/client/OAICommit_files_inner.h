/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommit_files_inner.h
 *
 * 
 */

#ifndef OAICommit_files_inner_H
#define OAICommit_files_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommit_files_inner : public OAIObject {
public:
    OAICommit_files_inner();
    OAICommit_files_inner(QString json);
    ~OAICommit_files_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdditions() const;
    void setAdditions(const qint32 &additions);
    bool is_additions_Set() const;
    bool is_additions_Valid() const;

    QString getBlobUrl() const;
    void setBlobUrl(const QString &blob_url);
    bool is_blob_url_Set() const;
    bool is_blob_url_Valid() const;

    qint32 getChanges() const;
    void setChanges(const qint32 &changes);
    bool is_changes_Set() const;
    bool is_changes_Valid() const;

    QString getContentsUrl() const;
    void setContentsUrl(const QString &contents_url);
    bool is_contents_url_Set() const;
    bool is_contents_url_Valid() const;

    qint32 getDeletions() const;
    void setDeletions(const qint32 &deletions);
    bool is_deletions_Set() const;
    bool is_deletions_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QString getPatch() const;
    void setPatch(const QString &patch);
    bool is_patch_Set() const;
    bool is_patch_Valid() const;

    QString getPreviousFilename() const;
    void setPreviousFilename(const QString &previous_filename);
    bool is_previous_filename_Set() const;
    bool is_previous_filename_Valid() const;

    QString getRawUrl() const;
    void setRawUrl(const QString &raw_url);
    bool is_raw_url_Set() const;
    bool is_raw_url_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_additions;
    bool m_additions_isSet;
    bool m_additions_isValid;

    QString m_blob_url;
    bool m_blob_url_isSet;
    bool m_blob_url_isValid;

    qint32 m_changes;
    bool m_changes_isSet;
    bool m_changes_isValid;

    QString m_contents_url;
    bool m_contents_url_isSet;
    bool m_contents_url_isValid;

    qint32 m_deletions;
    bool m_deletions_isSet;
    bool m_deletions_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QString m_patch;
    bool m_patch_isSet;
    bool m_patch_isValid;

    QString m_previous_filename;
    bool m_previous_filename_isSet;
    bool m_previous_filename_isValid;

    QString m_raw_url;
    bool m_raw_url_isSet;
    bool m_raw_url_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommit_files_inner)

#endif // OAICommit_files_inner_H
