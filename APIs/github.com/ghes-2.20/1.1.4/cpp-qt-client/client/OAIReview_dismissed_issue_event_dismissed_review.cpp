/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReview_dismissed_issue_event_dismissed_review.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReview_dismissed_issue_event_dismissed_review::OAIReview_dismissed_issue_event_dismissed_review(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReview_dismissed_issue_event_dismissed_review::OAIReview_dismissed_issue_event_dismissed_review() {
    this->initializeModel();
}

OAIReview_dismissed_issue_event_dismissed_review::~OAIReview_dismissed_issue_event_dismissed_review() {}

void OAIReview_dismissed_issue_event_dismissed_review::initializeModel() {

    m_dismissal_commit_id_isSet = false;
    m_dismissal_commit_id_isValid = false;

    m_dismissal_message_isSet = false;
    m_dismissal_message_isValid = false;

    m_review_id_isSet = false;
    m_review_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIReview_dismissed_issue_event_dismissed_review::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReview_dismissed_issue_event_dismissed_review::fromJsonObject(QJsonObject json) {

    m_dismissal_commit_id_isValid = ::OpenAPI::fromJsonValue(m_dismissal_commit_id, json[QString("dismissal_commit_id")]);
    m_dismissal_commit_id_isSet = !json[QString("dismissal_commit_id")].isNull() && m_dismissal_commit_id_isValid;

    m_dismissal_message_isValid = ::OpenAPI::fromJsonValue(m_dismissal_message, json[QString("dismissal_message")]);
    m_dismissal_message_isSet = !json[QString("dismissal_message")].isNull() && m_dismissal_message_isValid;

    m_review_id_isValid = ::OpenAPI::fromJsonValue(m_review_id, json[QString("review_id")]);
    m_review_id_isSet = !json[QString("review_id")].isNull() && m_review_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIReview_dismissed_issue_event_dismissed_review::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReview_dismissed_issue_event_dismissed_review::asJsonObject() const {
    QJsonObject obj;
    if (m_dismissal_commit_id_isSet) {
        obj.insert(QString("dismissal_commit_id"), ::OpenAPI::toJsonValue(m_dismissal_commit_id));
    }
    if (m_dismissal_message_isSet) {
        obj.insert(QString("dismissal_message"), ::OpenAPI::toJsonValue(m_dismissal_message));
    }
    if (m_review_id_isSet) {
        obj.insert(QString("review_id"), ::OpenAPI::toJsonValue(m_review_id));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIReview_dismissed_issue_event_dismissed_review::getDismissalCommitId() const {
    return m_dismissal_commit_id;
}
void OAIReview_dismissed_issue_event_dismissed_review::setDismissalCommitId(const QString &dismissal_commit_id) {
    m_dismissal_commit_id = dismissal_commit_id;
    m_dismissal_commit_id_isSet = true;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_dismissal_commit_id_Set() const{
    return m_dismissal_commit_id_isSet;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_dismissal_commit_id_Valid() const{
    return m_dismissal_commit_id_isValid;
}

QString OAIReview_dismissed_issue_event_dismissed_review::getDismissalMessage() const {
    return m_dismissal_message;
}
void OAIReview_dismissed_issue_event_dismissed_review::setDismissalMessage(const QString &dismissal_message) {
    m_dismissal_message = dismissal_message;
    m_dismissal_message_isSet = true;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_dismissal_message_Set() const{
    return m_dismissal_message_isSet;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_dismissal_message_Valid() const{
    return m_dismissal_message_isValid;
}

qint32 OAIReview_dismissed_issue_event_dismissed_review::getReviewId() const {
    return m_review_id;
}
void OAIReview_dismissed_issue_event_dismissed_review::setReviewId(const qint32 &review_id) {
    m_review_id = review_id;
    m_review_id_isSet = true;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_review_id_Set() const{
    return m_review_id_isSet;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_review_id_Valid() const{
    return m_review_id_isValid;
}

QString OAIReview_dismissed_issue_event_dismissed_review::getState() const {
    return m_state;
}
void OAIReview_dismissed_issue_event_dismissed_review::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_state_Set() const{
    return m_state_isSet;
}

bool OAIReview_dismissed_issue_event_dismissed_review::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIReview_dismissed_issue_event_dismissed_review::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dismissal_commit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dismissal_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReview_dismissed_issue_event_dismissed_review::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dismissal_message_isValid && m_review_id_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
