/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeed.h
 *
 * Feed
 */

#ifndef OAIFeed_H
#define OAIFeed_H

#include <QJsonObject>

#include "OAIFeed__links.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeed__links;

class OAIFeed : public OAIObject {
public:
    OAIFeed();
    OAIFeed(QString json);
    ~OAIFeed() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFeed__links getLinks() const;
    void setLinks(const OAIFeed__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getCurrentUserActorUrl() const;
    void setCurrentUserActorUrl(const QString &current_user_actor_url);
    bool is_current_user_actor_url_Set() const;
    bool is_current_user_actor_url_Valid() const;

    QString getCurrentUserOrganizationUrl() const;
    void setCurrentUserOrganizationUrl(const QString &current_user_organization_url);
    bool is_current_user_organization_url_Set() const;
    bool is_current_user_organization_url_Valid() const;

    QList<QString> getCurrentUserOrganizationUrls() const;
    void setCurrentUserOrganizationUrls(const QList<QString> &current_user_organization_urls);
    bool is_current_user_organization_urls_Set() const;
    bool is_current_user_organization_urls_Valid() const;

    QString getCurrentUserPublicUrl() const;
    void setCurrentUserPublicUrl(const QString &current_user_public_url);
    bool is_current_user_public_url_Set() const;
    bool is_current_user_public_url_Valid() const;

    QString getCurrentUserUrl() const;
    void setCurrentUserUrl(const QString &current_user_url);
    bool is_current_user_url_Set() const;
    bool is_current_user_url_Valid() const;

    QString getTimelineUrl() const;
    void setTimelineUrl(const QString &timeline_url);
    bool is_timeline_url_Set() const;
    bool is_timeline_url_Valid() const;

    QString getUserUrl() const;
    void setUserUrl(const QString &user_url);
    bool is_user_url_Set() const;
    bool is_user_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFeed__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_current_user_actor_url;
    bool m_current_user_actor_url_isSet;
    bool m_current_user_actor_url_isValid;

    QString m_current_user_organization_url;
    bool m_current_user_organization_url_isSet;
    bool m_current_user_organization_url_isValid;

    QList<QString> m_current_user_organization_urls;
    bool m_current_user_organization_urls_isSet;
    bool m_current_user_organization_urls_isValid;

    QString m_current_user_public_url;
    bool m_current_user_public_url_isSet;
    bool m_current_user_public_url_isValid;

    QString m_current_user_url;
    bool m_current_user_url_isSet;
    bool m_current_user_url_isValid;

    QString m_timeline_url;
    bool m_timeline_url_isSet;
    bool m_timeline_url_isValid;

    QString m_user_url;
    bool m_user_url_isSet;
    bool m_user_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeed)

#endif // OAIFeed_H
