/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicense.h
 *
 * License
 */

#ifndef OAILicense_H
#define OAILicense_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILicense : public OAIObject {
public:
    OAILicense();
    OAILicense(QString json);
    ~OAILicense() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QList<QString> getConditions() const;
    void setConditions(const QList<QString> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFeatured() const;
    void setFeatured(const bool &featured);
    bool is_featured_Set() const;
    bool is_featured_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getImplementation() const;
    void setImplementation(const QString &implementation);
    bool is_implementation_Set() const;
    bool is_implementation_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QList<QString> getLimitations() const;
    void setLimitations(const QList<QString> &limitations);
    bool is_limitations_Set() const;
    bool is_limitations_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QList<QString> getPermissions() const;
    void setPermissions(const QList<QString> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getSpdxId() const;
    void setSpdxId(const QString &spdx_id);
    bool is_spdx_id_Set() const;
    bool is_spdx_id_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QList<QString> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_featured;
    bool m_featured_isSet;
    bool m_featured_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_implementation;
    bool m_implementation_isSet;
    bool m_implementation_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QList<QString> m_limitations;
    bool m_limitations_isSet;
    bool m_limitations_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QList<QString> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_spdx_id;
    bool m_spdx_id_isSet;
    bool m_spdx_id_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicense)

#endif // OAILicense_H
