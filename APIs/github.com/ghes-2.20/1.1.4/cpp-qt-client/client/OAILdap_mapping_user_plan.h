/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILdap_mapping_user_plan.h
 *
 * 
 */

#ifndef OAILdap_mapping_user_plan_H
#define OAILdap_mapping_user_plan_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILdap_mapping_user_plan : public OAIObject {
public:
    OAILdap_mapping_user_plan();
    OAILdap_mapping_user_plan(QString json);
    ~OAILdap_mapping_user_plan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCollaborators() const;
    void setCollaborators(const qint32 &collaborators);
    bool is_collaborators_Set() const;
    bool is_collaborators_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPrivateRepos() const;
    void setPrivateRepos(const qint32 &private_repos);
    bool is_private_repos_Set() const;
    bool is_private_repos_Valid() const;

    qint32 getSpace() const;
    void setSpace(const qint32 &space);
    bool is_space_Set() const;
    bool is_space_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_collaborators;
    bool m_collaborators_isSet;
    bool m_collaborators_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_private_repos;
    bool m_private_repos_isSet;
    bool m_private_repos_isValid;

    qint32 m_space;
    bool m_space_isSet;
    bool m_space_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILdap_mapping_user_plan)

#endif // OAILdap_mapping_user_plan_H
