/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChecks_update_request_output.h
 *
 * Check runs can accept a variety of data in the &#x60;output&#x60; object, including a &#x60;title&#x60; and &#x60;summary&#x60; and can optionally provide descriptive details about the run. See the [&#x60;output&#x60; object](https://docs.github.com/enterprise-server@2.20/rest/reference/checks#output-object-1) description.
 */

#ifndef OAIChecks_update_request_output_H
#define OAIChecks_update_request_output_H

#include <QJsonObject>

#include "OAIChecks_create_request_output_annotations_inner.h"
#include "OAIChecks_create_request_output_images_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChecks_create_request_output_annotations_inner;
class OAIChecks_create_request_output_images_inner;

class OAIChecks_update_request_output : public OAIObject {
public:
    OAIChecks_update_request_output();
    OAIChecks_update_request_output(QString json);
    ~OAIChecks_update_request_output() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIChecks_create_request_output_annotations_inner> getAnnotations() const;
    void setAnnotations(const QList<OAIChecks_create_request_output_annotations_inner> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QList<OAIChecks_create_request_output_images_inner> getImages() const;
    void setImages(const QList<OAIChecks_create_request_output_images_inner> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIChecks_create_request_output_annotations_inner> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QList<OAIChecks_create_request_output_images_inner> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChecks_update_request_output)

#endif // OAIChecks_update_request_output_H
