/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopic_search_result_item_aliases_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopic_search_result_item_aliases_inner::OAITopic_search_result_item_aliases_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopic_search_result_item_aliases_inner::OAITopic_search_result_item_aliases_inner() {
    this->initializeModel();
}

OAITopic_search_result_item_aliases_inner::~OAITopic_search_result_item_aliases_inner() {}

void OAITopic_search_result_item_aliases_inner::initializeModel() {

    m_topic_relation_isSet = false;
    m_topic_relation_isValid = false;
}

void OAITopic_search_result_item_aliases_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopic_search_result_item_aliases_inner::fromJsonObject(QJsonObject json) {

    m_topic_relation_isValid = ::OpenAPI::fromJsonValue(m_topic_relation, json[QString("topic_relation")]);
    m_topic_relation_isSet = !json[QString("topic_relation")].isNull() && m_topic_relation_isValid;
}

QString OAITopic_search_result_item_aliases_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopic_search_result_item_aliases_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_topic_relation.isSet()) {
        obj.insert(QString("topic_relation"), ::OpenAPI::toJsonValue(m_topic_relation));
    }
    return obj;
}

OAITopic_search_result_item_aliases_inner_topic_relation OAITopic_search_result_item_aliases_inner::getTopicRelation() const {
    return m_topic_relation;
}
void OAITopic_search_result_item_aliases_inner::setTopicRelation(const OAITopic_search_result_item_aliases_inner_topic_relation &topic_relation) {
    m_topic_relation = topic_relation;
    m_topic_relation_isSet = true;
}

bool OAITopic_search_result_item_aliases_inner::is_topic_relation_Set() const{
    return m_topic_relation_isSet;
}

bool OAITopic_search_result_item_aliases_inner::is_topic_relation_Valid() const{
    return m_topic_relation_isValid;
}

bool OAITopic_search_result_item_aliases_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_topic_relation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopic_search_result_item_aliases_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
