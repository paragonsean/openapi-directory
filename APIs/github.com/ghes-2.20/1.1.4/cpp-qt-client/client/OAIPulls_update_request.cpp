/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPulls_update_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPulls_update_request::OAIPulls_update_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPulls_update_request::OAIPulls_update_request() {
    this->initializeModel();
}

OAIPulls_update_request::~OAIPulls_update_request() {}

void OAIPulls_update_request::initializeModel() {

    m_base_isSet = false;
    m_base_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_maintainer_can_modify_isSet = false;
    m_maintainer_can_modify_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIPulls_update_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPulls_update_request::fromJsonObject(QJsonObject json) {

    m_base_isValid = ::OpenAPI::fromJsonValue(m_base, json[QString("base")]);
    m_base_isSet = !json[QString("base")].isNull() && m_base_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_maintainer_can_modify_isValid = ::OpenAPI::fromJsonValue(m_maintainer_can_modify, json[QString("maintainer_can_modify")]);
    m_maintainer_can_modify_isSet = !json[QString("maintainer_can_modify")].isNull() && m_maintainer_can_modify_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIPulls_update_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPulls_update_request::asJsonObject() const {
    QJsonObject obj;
    if (m_base_isSet) {
        obj.insert(QString("base"), ::OpenAPI::toJsonValue(m_base));
    }
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_maintainer_can_modify_isSet) {
        obj.insert(QString("maintainer_can_modify"), ::OpenAPI::toJsonValue(m_maintainer_can_modify));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIPulls_update_request::getBase() const {
    return m_base;
}
void OAIPulls_update_request::setBase(const QString &base) {
    m_base = base;
    m_base_isSet = true;
}

bool OAIPulls_update_request::is_base_Set() const{
    return m_base_isSet;
}

bool OAIPulls_update_request::is_base_Valid() const{
    return m_base_isValid;
}

QString OAIPulls_update_request::getBody() const {
    return m_body;
}
void OAIPulls_update_request::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIPulls_update_request::is_body_Set() const{
    return m_body_isSet;
}

bool OAIPulls_update_request::is_body_Valid() const{
    return m_body_isValid;
}

bool OAIPulls_update_request::isMaintainerCanModify() const {
    return m_maintainer_can_modify;
}
void OAIPulls_update_request::setMaintainerCanModify(const bool &maintainer_can_modify) {
    m_maintainer_can_modify = maintainer_can_modify;
    m_maintainer_can_modify_isSet = true;
}

bool OAIPulls_update_request::is_maintainer_can_modify_Set() const{
    return m_maintainer_can_modify_isSet;
}

bool OAIPulls_update_request::is_maintainer_can_modify_Valid() const{
    return m_maintainer_can_modify_isValid;
}

QString OAIPulls_update_request::getState() const {
    return m_state;
}
void OAIPulls_update_request::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIPulls_update_request::is_state_Set() const{
    return m_state_isSet;
}

bool OAIPulls_update_request::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIPulls_update_request::getTitle() const {
    return m_title;
}
void OAIPulls_update_request::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIPulls_update_request::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPulls_update_request::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIPulls_update_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintainer_can_modify_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPulls_update_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
