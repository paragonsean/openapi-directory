/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_admin_update_ldap_mapping_for_team_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_admin_update_ldap_mapping_for_team_request::OAIEnterprise_admin_update_ldap_mapping_for_team_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_admin_update_ldap_mapping_for_team_request::OAIEnterprise_admin_update_ldap_mapping_for_team_request() {
    this->initializeModel();
}

OAIEnterprise_admin_update_ldap_mapping_for_team_request::~OAIEnterprise_admin_update_ldap_mapping_for_team_request() {}

void OAIEnterprise_admin_update_ldap_mapping_for_team_request::initializeModel() {

    m_ldap_dn_isSet = false;
    m_ldap_dn_isValid = false;
}

void OAIEnterprise_admin_update_ldap_mapping_for_team_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_admin_update_ldap_mapping_for_team_request::fromJsonObject(QJsonObject json) {

    m_ldap_dn_isValid = ::OpenAPI::fromJsonValue(m_ldap_dn, json[QString("ldap_dn")]);
    m_ldap_dn_isSet = !json[QString("ldap_dn")].isNull() && m_ldap_dn_isValid;
}

QString OAIEnterprise_admin_update_ldap_mapping_for_team_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_admin_update_ldap_mapping_for_team_request::asJsonObject() const {
    QJsonObject obj;
    if (m_ldap_dn_isSet) {
        obj.insert(QString("ldap_dn"), ::OpenAPI::toJsonValue(m_ldap_dn));
    }
    return obj;
}

QString OAIEnterprise_admin_update_ldap_mapping_for_team_request::getLdapDn() const {
    return m_ldap_dn;
}
void OAIEnterprise_admin_update_ldap_mapping_for_team_request::setLdapDn(const QString &ldap_dn) {
    m_ldap_dn = ldap_dn;
    m_ldap_dn_isSet = true;
}

bool OAIEnterprise_admin_update_ldap_mapping_for_team_request::is_ldap_dn_Set() const{
    return m_ldap_dn_isSet;
}

bool OAIEnterprise_admin_update_ldap_mapping_for_team_request::is_ldap_dn_Valid() const{
    return m_ldap_dn_isValid;
}

bool OAIEnterprise_admin_update_ldap_mapping_for_team_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ldap_dn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_admin_update_ldap_mapping_for_team_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
