/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommit_search_result_item.h
 *
 * Commit Search Result Item
 */

#ifndef OAICommit_search_result_item_H
#define OAICommit_search_result_item_H

#include <QJsonObject>

#include "OAICommit_search_result_item_commit.h"
#include "OAICommit_search_result_item_parents_inner.h"
#include "OAIMinimal_repository.h"
#include "OAINullable_git_user.h"
#include "OAINullable_simple_user.h"
#include "OAISearch_result_text_matches_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINullable_simple_user;
class OAICommit_search_result_item_commit;
class OAINullable_git_user;
class OAICommit_search_result_item_parents_inner;
class OAIMinimal_repository;
class OAISearch_result_text_matches_inner;

class OAICommit_search_result_item : public OAIObject {
public:
    OAICommit_search_result_item();
    OAICommit_search_result_item(QString json);
    ~OAICommit_search_result_item() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINullable_simple_user getAuthor() const;
    void setAuthor(const OAINullable_simple_user &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getCommentsUrl() const;
    void setCommentsUrl(const QString &comments_url);
    bool is_comments_url_Set() const;
    bool is_comments_url_Valid() const;

    OAICommit_search_result_item_commit getCommit() const;
    void setCommit(const OAICommit_search_result_item_commit &commit);
    bool is_commit_Set() const;
    bool is_commit_Valid() const;

    OAINullable_git_user getCommitter() const;
    void setCommitter(const OAINullable_git_user &committer);
    bool is_committer_Set() const;
    bool is_committer_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QList<OAICommit_search_result_item_parents_inner> getParents() const;
    void setParents(const QList<OAICommit_search_result_item_parents_inner> &parents);
    bool is_parents_Set() const;
    bool is_parents_Valid() const;

    OAIMinimal_repository getRepository() const;
    void setRepository(const OAIMinimal_repository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    QList<OAISearch_result_text_matches_inner> getTextMatches() const;
    void setTextMatches(const QList<OAISearch_result_text_matches_inner> &text_matches);
    bool is_text_matches_Set() const;
    bool is_text_matches_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINullable_simple_user m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_comments_url;
    bool m_comments_url_isSet;
    bool m_comments_url_isValid;

    OAICommit_search_result_item_commit m_commit;
    bool m_commit_isSet;
    bool m_commit_isValid;

    OAINullable_git_user m_committer;
    bool m_committer_isSet;
    bool m_committer_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QList<OAICommit_search_result_item_parents_inner> m_parents;
    bool m_parents_isSet;
    bool m_parents_isValid;

    OAIMinimal_repository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    QList<OAISearch_result_text_matches_inner> m_text_matches;
    bool m_text_matches_isSet;
    bool m_text_matches_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommit_search_result_item)

#endif // OAICommit_search_result_item_H
