/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CollaboratorPermissions;
import org.openapitools.client.model.NullableLicenseSimple;
import org.openapitools.client.model.PullRequestBaseRepoOwner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PullRequestBaseRepo
 */
public class PullRequestBaseRepoTest {
    private final PullRequestBaseRepo model = new PullRequestBaseRepo();

    /**
     * Model tests for PullRequestBaseRepo
     */
    @Test
    public void testPullRequestBaseRepo() {
        // TODO: test PullRequestBaseRepo
    }

    /**
     * Test the property 'allowForking'
     */
    @Test
    public void allowForkingTest() {
        // TODO: test allowForking
    }

    /**
     * Test the property 'allowMergeCommit'
     */
    @Test
    public void allowMergeCommitTest() {
        // TODO: test allowMergeCommit
    }

    /**
     * Test the property 'allowRebaseMerge'
     */
    @Test
    public void allowRebaseMergeTest() {
        // TODO: test allowRebaseMerge
    }

    /**
     * Test the property 'allowSquashMerge'
     */
    @Test
    public void allowSquashMergeTest() {
        // TODO: test allowSquashMerge
    }

    /**
     * Test the property 'anonymousAccessEnabled'
     */
    @Test
    public void anonymousAccessEnabledTest() {
        // TODO: test anonymousAccessEnabled
    }

    /**
     * Test the property 'archiveUrl'
     */
    @Test
    public void archiveUrlTest() {
        // TODO: test archiveUrl
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'assigneesUrl'
     */
    @Test
    public void assigneesUrlTest() {
        // TODO: test assigneesUrl
    }

    /**
     * Test the property 'blobsUrl'
     */
    @Test
    public void blobsUrlTest() {
        // TODO: test blobsUrl
    }

    /**
     * Test the property 'branchesUrl'
     */
    @Test
    public void branchesUrlTest() {
        // TODO: test branchesUrl
    }

    /**
     * Test the property 'cloneUrl'
     */
    @Test
    public void cloneUrlTest() {
        // TODO: test cloneUrl
    }

    /**
     * Test the property 'collaboratorsUrl'
     */
    @Test
    public void collaboratorsUrlTest() {
        // TODO: test collaboratorsUrl
    }

    /**
     * Test the property 'commentsUrl'
     */
    @Test
    public void commentsUrlTest() {
        // TODO: test commentsUrl
    }

    /**
     * Test the property 'commitsUrl'
     */
    @Test
    public void commitsUrlTest() {
        // TODO: test commitsUrl
    }

    /**
     * Test the property 'compareUrl'
     */
    @Test
    public void compareUrlTest() {
        // TODO: test compareUrl
    }

    /**
     * Test the property 'contentsUrl'
     */
    @Test
    public void contentsUrlTest() {
        // TODO: test contentsUrl
    }

    /**
     * Test the property 'contributorsUrl'
     */
    @Test
    public void contributorsUrlTest() {
        // TODO: test contributorsUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultBranch'
     */
    @Test
    public void defaultBranchTest() {
        // TODO: test defaultBranch
    }

    /**
     * Test the property 'deploymentsUrl'
     */
    @Test
    public void deploymentsUrlTest() {
        // TODO: test deploymentsUrl
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'downloadsUrl'
     */
    @Test
    public void downloadsUrlTest() {
        // TODO: test downloadsUrl
    }

    /**
     * Test the property 'eventsUrl'
     */
    @Test
    public void eventsUrlTest() {
        // TODO: test eventsUrl
    }

    /**
     * Test the property 'fork'
     */
    @Test
    public void forkTest() {
        // TODO: test fork
    }

    /**
     * Test the property 'forks'
     */
    @Test
    public void forksTest() {
        // TODO: test forks
    }

    /**
     * Test the property 'forksCount'
     */
    @Test
    public void forksCountTest() {
        // TODO: test forksCount
    }

    /**
     * Test the property 'forksUrl'
     */
    @Test
    public void forksUrlTest() {
        // TODO: test forksUrl
    }

    /**
     * Test the property 'fullName'
     */
    @Test
    public void fullNameTest() {
        // TODO: test fullName
    }

    /**
     * Test the property 'gitCommitsUrl'
     */
    @Test
    public void gitCommitsUrlTest() {
        // TODO: test gitCommitsUrl
    }

    /**
     * Test the property 'gitRefsUrl'
     */
    @Test
    public void gitRefsUrlTest() {
        // TODO: test gitRefsUrl
    }

    /**
     * Test the property 'gitTagsUrl'
     */
    @Test
    public void gitTagsUrlTest() {
        // TODO: test gitTagsUrl
    }

    /**
     * Test the property 'gitUrl'
     */
    @Test
    public void gitUrlTest() {
        // TODO: test gitUrl
    }

    /**
     * Test the property 'hasDownloads'
     */
    @Test
    public void hasDownloadsTest() {
        // TODO: test hasDownloads
    }

    /**
     * Test the property 'hasIssues'
     */
    @Test
    public void hasIssuesTest() {
        // TODO: test hasIssues
    }

    /**
     * Test the property 'hasPages'
     */
    @Test
    public void hasPagesTest() {
        // TODO: test hasPages
    }

    /**
     * Test the property 'hasProjects'
     */
    @Test
    public void hasProjectsTest() {
        // TODO: test hasProjects
    }

    /**
     * Test the property 'hasWiki'
     */
    @Test
    public void hasWikiTest() {
        // TODO: test hasWiki
    }

    /**
     * Test the property 'homepage'
     */
    @Test
    public void homepageTest() {
        // TODO: test homepage
    }

    /**
     * Test the property 'hooksUrl'
     */
    @Test
    public void hooksUrlTest() {
        // TODO: test hooksUrl
    }

    /**
     * Test the property 'htmlUrl'
     */
    @Test
    public void htmlUrlTest() {
        // TODO: test htmlUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'issueCommentUrl'
     */
    @Test
    public void issueCommentUrlTest() {
        // TODO: test issueCommentUrl
    }

    /**
     * Test the property 'issueEventsUrl'
     */
    @Test
    public void issueEventsUrlTest() {
        // TODO: test issueEventsUrl
    }

    /**
     * Test the property 'issuesUrl'
     */
    @Test
    public void issuesUrlTest() {
        // TODO: test issuesUrl
    }

    /**
     * Test the property 'keysUrl'
     */
    @Test
    public void keysUrlTest() {
        // TODO: test keysUrl
    }

    /**
     * Test the property 'labelsUrl'
     */
    @Test
    public void labelsUrlTest() {
        // TODO: test labelsUrl
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'languagesUrl'
     */
    @Test
    public void languagesUrlTest() {
        // TODO: test languagesUrl
    }

    /**
     * Test the property 'license'
     */
    @Test
    public void licenseTest() {
        // TODO: test license
    }

    /**
     * Test the property 'masterBranch'
     */
    @Test
    public void masterBranchTest() {
        // TODO: test masterBranch
    }

    /**
     * Test the property 'mergesUrl'
     */
    @Test
    public void mergesUrlTest() {
        // TODO: test mergesUrl
    }

    /**
     * Test the property 'milestonesUrl'
     */
    @Test
    public void milestonesUrlTest() {
        // TODO: test milestonesUrl
    }

    /**
     * Test the property 'mirrorUrl'
     */
    @Test
    public void mirrorUrlTest() {
        // TODO: test mirrorUrl
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeId'
     */
    @Test
    public void nodeIdTest() {
        // TODO: test nodeId
    }

    /**
     * Test the property 'notificationsUrl'
     */
    @Test
    public void notificationsUrlTest() {
        // TODO: test notificationsUrl
    }

    /**
     * Test the property 'openIssues'
     */
    @Test
    public void openIssuesTest() {
        // TODO: test openIssues
    }

    /**
     * Test the property 'openIssuesCount'
     */
    @Test
    public void openIssuesCountTest() {
        // TODO: test openIssuesCount
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property '_private'
     */
    @Test
    public void _privateTest() {
        // TODO: test _private
    }

    /**
     * Test the property 'pullsUrl'
     */
    @Test
    public void pullsUrlTest() {
        // TODO: test pullsUrl
    }

    /**
     * Test the property 'pushedAt'
     */
    @Test
    public void pushedAtTest() {
        // TODO: test pushedAt
    }

    /**
     * Test the property 'releasesUrl'
     */
    @Test
    public void releasesUrlTest() {
        // TODO: test releasesUrl
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'sshUrl'
     */
    @Test
    public void sshUrlTest() {
        // TODO: test sshUrl
    }

    /**
     * Test the property 'stargazersCount'
     */
    @Test
    public void stargazersCountTest() {
        // TODO: test stargazersCount
    }

    /**
     * Test the property 'stargazersUrl'
     */
    @Test
    public void stargazersUrlTest() {
        // TODO: test stargazersUrl
    }

    /**
     * Test the property 'statusesUrl'
     */
    @Test
    public void statusesUrlTest() {
        // TODO: test statusesUrl
    }

    /**
     * Test the property 'subscribersUrl'
     */
    @Test
    public void subscribersUrlTest() {
        // TODO: test subscribersUrl
    }

    /**
     * Test the property 'subscriptionUrl'
     */
    @Test
    public void subscriptionUrlTest() {
        // TODO: test subscriptionUrl
    }

    /**
     * Test the property 'svnUrl'
     */
    @Test
    public void svnUrlTest() {
        // TODO: test svnUrl
    }

    /**
     * Test the property 'tagsUrl'
     */
    @Test
    public void tagsUrlTest() {
        // TODO: test tagsUrl
    }

    /**
     * Test the property 'teamsUrl'
     */
    @Test
    public void teamsUrlTest() {
        // TODO: test teamsUrl
    }

    /**
     * Test the property 'topics'
     */
    @Test
    public void topicsTest() {
        // TODO: test topics
    }

    /**
     * Test the property 'treesUrl'
     */
    @Test
    public void treesUrlTest() {
        // TODO: test treesUrl
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'watchers'
     */
    @Test
    public void watchersTest() {
        // TODO: test watchers
    }

    /**
     * Test the property 'watchersCount'
     */
    @Test
    public void watchersCountTest() {
        // TODO: test watchersCount
    }

}
