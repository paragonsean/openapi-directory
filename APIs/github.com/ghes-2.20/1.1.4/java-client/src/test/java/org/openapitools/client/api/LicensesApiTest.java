/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BasicError;
import org.openapitools.client.model.License;
import org.openapitools.client.model.LicenseContent;
import org.openapitools.client.model.LicenseSimple;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LicensesApi
 */
@Disabled
public class LicensesApiTest {

    private final LicensesApi api = new LicensesApi();

    /**
     * Get a license
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licensesGetTest() throws ApiException {
        String license = null;
        License response = api.licensesGet(license);
        // TODO: test validations
    }

    /**
     * Get all commonly used licenses
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licensesGetAllCommonlyUsedTest() throws ApiException {
        Boolean featured = null;
        Integer perPage = null;
        Integer page = null;
        List<LicenseSimple> response = api.licensesGetAllCommonlyUsed(featured, perPage, page);
        // TODO: test validations
    }

    /**
     * Get the license for a repository
     *
     * This method returns the contents of the repository&#39;s license file, if one is detected.  Similar to [Get repository content](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licensesGetForRepoTest() throws ApiException {
        String owner = null;
        String repo = null;
        LicenseContent response = api.licensesGetForRepo(owner, repo);
        // TODO: test validations
    }

}
