/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BranchProtectionAllowDeletions;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseAvatar;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseCas;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseCollectd;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseCustomer;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseGithubOauth;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseGithubSsl;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseLdap;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseLicense;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseMapping;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseNtp;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSaml;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSmtp;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSnmp;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSyslog;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EnterpriseSettingsEnterprise
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:07:30.453620-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnterpriseSettingsEnterprise {
  public static final String SERIALIZED_NAME_ADMIN_PASSWORD = "admin_password";
  @SerializedName(SERIALIZED_NAME_ADMIN_PASSWORD)
  private String adminPassword;

  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private String assets;

  public static final String SERIALIZED_NAME_AUTH_MODE = "auth_mode";
  @SerializedName(SERIALIZED_NAME_AUTH_MODE)
  private String authMode;

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private EnterpriseSettingsEnterpriseAvatar avatar;

  public static final String SERIALIZED_NAME_CAS = "cas";
  @SerializedName(SERIALIZED_NAME_CAS)
  private EnterpriseSettingsEnterpriseCas cas;

  public static final String SERIALIZED_NAME_COLLECTD = "collectd";
  @SerializedName(SERIALIZED_NAME_COLLECTD)
  private EnterpriseSettingsEnterpriseCollectd collectd;

  public static final String SERIALIZED_NAME_CONFIGURATION_ID = "configuration_id";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_ID)
  private Integer configurationId;

  public static final String SERIALIZED_NAME_CONFIGURATION_RUN_COUNT = "configuration_run_count";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_RUN_COUNT)
  private Integer configurationRunCount;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private EnterpriseSettingsEnterpriseCustomer customer;

  public static final String SERIALIZED_NAME_EXPIRE_SESSIONS = "expire_sessions";
  @SerializedName(SERIALIZED_NAME_EXPIRE_SESSIONS)
  private Boolean expireSessions;

  public static final String SERIALIZED_NAME_GITHUB_HOSTNAME = "github_hostname";
  @SerializedName(SERIALIZED_NAME_GITHUB_HOSTNAME)
  private String githubHostname;

  public static final String SERIALIZED_NAME_GITHUB_OAUTH = "github_oauth";
  @SerializedName(SERIALIZED_NAME_GITHUB_OAUTH)
  private EnterpriseSettingsEnterpriseGithubOauth githubOauth;

  public static final String SERIALIZED_NAME_GITHUB_SSL = "github_ssl";
  @SerializedName(SERIALIZED_NAME_GITHUB_SSL)
  private EnterpriseSettingsEnterpriseGithubSsl githubSsl;

  public static final String SERIALIZED_NAME_HTTP_PROXY = "http_proxy";
  @SerializedName(SERIALIZED_NAME_HTTP_PROXY)
  private String httpProxy;

  public static final String SERIALIZED_NAME_IDENTICONS_HOST = "identicons_host";
  @SerializedName(SERIALIZED_NAME_IDENTICONS_HOST)
  private String identiconsHost;

  public static final String SERIALIZED_NAME_LDAP = "ldap";
  @SerializedName(SERIALIZED_NAME_LDAP)
  private EnterpriseSettingsEnterpriseLdap ldap;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private EnterpriseSettingsEnterpriseLicense license;

  public static final String SERIALIZED_NAME_LOAD_BALANCER = "load_balancer";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER)
  private String loadBalancer;

  public static final String SERIALIZED_NAME_MAPPING = "mapping";
  @SerializedName(SERIALIZED_NAME_MAPPING)
  private EnterpriseSettingsEnterpriseMapping mapping;

  public static final String SERIALIZED_NAME_NTP = "ntp";
  @SerializedName(SERIALIZED_NAME_NTP)
  private EnterpriseSettingsEnterpriseNtp ntp;

  public static final String SERIALIZED_NAME_PAGES = "pages";
  @SerializedName(SERIALIZED_NAME_PAGES)
  private BranchProtectionAllowDeletions pages;

  public static final String SERIALIZED_NAME_PRIVATE_MODE = "private_mode";
  @SerializedName(SERIALIZED_NAME_PRIVATE_MODE)
  private Boolean privateMode;

  public static final String SERIALIZED_NAME_PUBLIC_PAGES = "public_pages";
  @SerializedName(SERIALIZED_NAME_PUBLIC_PAGES)
  private Boolean publicPages;

  public static final String SERIALIZED_NAME_SAML = "saml";
  @SerializedName(SERIALIZED_NAME_SAML)
  private EnterpriseSettingsEnterpriseSaml saml;

  public static final String SERIALIZED_NAME_SIGNUP_ENABLED = "signup_enabled";
  @SerializedName(SERIALIZED_NAME_SIGNUP_ENABLED)
  private Boolean signupEnabled;

  public static final String SERIALIZED_NAME_SMTP = "smtp";
  @SerializedName(SERIALIZED_NAME_SMTP)
  private EnterpriseSettingsEnterpriseSmtp smtp;

  public static final String SERIALIZED_NAME_SNMP = "snmp";
  @SerializedName(SERIALIZED_NAME_SNMP)
  private EnterpriseSettingsEnterpriseSnmp snmp;

  public static final String SERIALIZED_NAME_SUBDOMAIN_ISOLATION = "subdomain_isolation";
  @SerializedName(SERIALIZED_NAME_SUBDOMAIN_ISOLATION)
  private Boolean subdomainIsolation;

  public static final String SERIALIZED_NAME_SYSLOG = "syslog";
  @SerializedName(SERIALIZED_NAME_SYSLOG)
  private EnterpriseSettingsEnterpriseSyslog syslog;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public EnterpriseSettingsEnterprise() {
  }

  public EnterpriseSettingsEnterprise adminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
    return this;
  }

  /**
   * Get adminPassword
   * @return adminPassword
   */
  @javax.annotation.Nullable
  public String getAdminPassword() {
    return adminPassword;
  }

  public void setAdminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
  }


  public EnterpriseSettingsEnterprise assets(String assets) {
    this.assets = assets;
    return this;
  }

  /**
   * Get assets
   * @return assets
   */
  @javax.annotation.Nullable
  public String getAssets() {
    return assets;
  }

  public void setAssets(String assets) {
    this.assets = assets;
  }


  public EnterpriseSettingsEnterprise authMode(String authMode) {
    this.authMode = authMode;
    return this;
  }

  /**
   * Get authMode
   * @return authMode
   */
  @javax.annotation.Nullable
  public String getAuthMode() {
    return authMode;
  }

  public void setAuthMode(String authMode) {
    this.authMode = authMode;
  }


  public EnterpriseSettingsEnterprise avatar(EnterpriseSettingsEnterpriseAvatar avatar) {
    this.avatar = avatar;
    return this;
  }

  /**
   * Get avatar
   * @return avatar
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseAvatar getAvatar() {
    return avatar;
  }

  public void setAvatar(EnterpriseSettingsEnterpriseAvatar avatar) {
    this.avatar = avatar;
  }


  public EnterpriseSettingsEnterprise cas(EnterpriseSettingsEnterpriseCas cas) {
    this.cas = cas;
    return this;
  }

  /**
   * Get cas
   * @return cas
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseCas getCas() {
    return cas;
  }

  public void setCas(EnterpriseSettingsEnterpriseCas cas) {
    this.cas = cas;
  }


  public EnterpriseSettingsEnterprise collectd(EnterpriseSettingsEnterpriseCollectd collectd) {
    this.collectd = collectd;
    return this;
  }

  /**
   * Get collectd
   * @return collectd
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseCollectd getCollectd() {
    return collectd;
  }

  public void setCollectd(EnterpriseSettingsEnterpriseCollectd collectd) {
    this.collectd = collectd;
  }


  public EnterpriseSettingsEnterprise configurationId(Integer configurationId) {
    this.configurationId = configurationId;
    return this;
  }

  /**
   * Get configurationId
   * @return configurationId
   */
  @javax.annotation.Nullable
  public Integer getConfigurationId() {
    return configurationId;
  }

  public void setConfigurationId(Integer configurationId) {
    this.configurationId = configurationId;
  }


  public EnterpriseSettingsEnterprise configurationRunCount(Integer configurationRunCount) {
    this.configurationRunCount = configurationRunCount;
    return this;
  }

  /**
   * Get configurationRunCount
   * @return configurationRunCount
   */
  @javax.annotation.Nullable
  public Integer getConfigurationRunCount() {
    return configurationRunCount;
  }

  public void setConfigurationRunCount(Integer configurationRunCount) {
    this.configurationRunCount = configurationRunCount;
  }


  public EnterpriseSettingsEnterprise customer(EnterpriseSettingsEnterpriseCustomer customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(EnterpriseSettingsEnterpriseCustomer customer) {
    this.customer = customer;
  }


  public EnterpriseSettingsEnterprise expireSessions(Boolean expireSessions) {
    this.expireSessions = expireSessions;
    return this;
  }

  /**
   * Get expireSessions
   * @return expireSessions
   */
  @javax.annotation.Nullable
  public Boolean getExpireSessions() {
    return expireSessions;
  }

  public void setExpireSessions(Boolean expireSessions) {
    this.expireSessions = expireSessions;
  }


  public EnterpriseSettingsEnterprise githubHostname(String githubHostname) {
    this.githubHostname = githubHostname;
    return this;
  }

  /**
   * Get githubHostname
   * @return githubHostname
   */
  @javax.annotation.Nullable
  public String getGithubHostname() {
    return githubHostname;
  }

  public void setGithubHostname(String githubHostname) {
    this.githubHostname = githubHostname;
  }


  public EnterpriseSettingsEnterprise githubOauth(EnterpriseSettingsEnterpriseGithubOauth githubOauth) {
    this.githubOauth = githubOauth;
    return this;
  }

  /**
   * Get githubOauth
   * @return githubOauth
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseGithubOauth getGithubOauth() {
    return githubOauth;
  }

  public void setGithubOauth(EnterpriseSettingsEnterpriseGithubOauth githubOauth) {
    this.githubOauth = githubOauth;
  }


  public EnterpriseSettingsEnterprise githubSsl(EnterpriseSettingsEnterpriseGithubSsl githubSsl) {
    this.githubSsl = githubSsl;
    return this;
  }

  /**
   * Get githubSsl
   * @return githubSsl
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseGithubSsl getGithubSsl() {
    return githubSsl;
  }

  public void setGithubSsl(EnterpriseSettingsEnterpriseGithubSsl githubSsl) {
    this.githubSsl = githubSsl;
  }


  public EnterpriseSettingsEnterprise httpProxy(String httpProxy) {
    this.httpProxy = httpProxy;
    return this;
  }

  /**
   * Get httpProxy
   * @return httpProxy
   */
  @javax.annotation.Nullable
  public String getHttpProxy() {
    return httpProxy;
  }

  public void setHttpProxy(String httpProxy) {
    this.httpProxy = httpProxy;
  }


  public EnterpriseSettingsEnterprise identiconsHost(String identiconsHost) {
    this.identiconsHost = identiconsHost;
    return this;
  }

  /**
   * Get identiconsHost
   * @return identiconsHost
   */
  @javax.annotation.Nullable
  public String getIdenticonsHost() {
    return identiconsHost;
  }

  public void setIdenticonsHost(String identiconsHost) {
    this.identiconsHost = identiconsHost;
  }


  public EnterpriseSettingsEnterprise ldap(EnterpriseSettingsEnterpriseLdap ldap) {
    this.ldap = ldap;
    return this;
  }

  /**
   * Get ldap
   * @return ldap
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseLdap getLdap() {
    return ldap;
  }

  public void setLdap(EnterpriseSettingsEnterpriseLdap ldap) {
    this.ldap = ldap;
  }


  public EnterpriseSettingsEnterprise license(EnterpriseSettingsEnterpriseLicense license) {
    this.license = license;
    return this;
  }

  /**
   * Get license
   * @return license
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseLicense getLicense() {
    return license;
  }

  public void setLicense(EnterpriseSettingsEnterpriseLicense license) {
    this.license = license;
  }


  public EnterpriseSettingsEnterprise loadBalancer(String loadBalancer) {
    this.loadBalancer = loadBalancer;
    return this;
  }

  /**
   * Get loadBalancer
   * @return loadBalancer
   */
  @javax.annotation.Nullable
  public String getLoadBalancer() {
    return loadBalancer;
  }

  public void setLoadBalancer(String loadBalancer) {
    this.loadBalancer = loadBalancer;
  }


  public EnterpriseSettingsEnterprise mapping(EnterpriseSettingsEnterpriseMapping mapping) {
    this.mapping = mapping;
    return this;
  }

  /**
   * Get mapping
   * @return mapping
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseMapping getMapping() {
    return mapping;
  }

  public void setMapping(EnterpriseSettingsEnterpriseMapping mapping) {
    this.mapping = mapping;
  }


  public EnterpriseSettingsEnterprise ntp(EnterpriseSettingsEnterpriseNtp ntp) {
    this.ntp = ntp;
    return this;
  }

  /**
   * Get ntp
   * @return ntp
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseNtp getNtp() {
    return ntp;
  }

  public void setNtp(EnterpriseSettingsEnterpriseNtp ntp) {
    this.ntp = ntp;
  }


  public EnterpriseSettingsEnterprise pages(BranchProtectionAllowDeletions pages) {
    this.pages = pages;
    return this;
  }

  /**
   * Get pages
   * @return pages
   */
  @javax.annotation.Nullable
  public BranchProtectionAllowDeletions getPages() {
    return pages;
  }

  public void setPages(BranchProtectionAllowDeletions pages) {
    this.pages = pages;
  }


  public EnterpriseSettingsEnterprise privateMode(Boolean privateMode) {
    this.privateMode = privateMode;
    return this;
  }

  /**
   * Get privateMode
   * @return privateMode
   */
  @javax.annotation.Nullable
  public Boolean getPrivateMode() {
    return privateMode;
  }

  public void setPrivateMode(Boolean privateMode) {
    this.privateMode = privateMode;
  }


  public EnterpriseSettingsEnterprise publicPages(Boolean publicPages) {
    this.publicPages = publicPages;
    return this;
  }

  /**
   * Get publicPages
   * @return publicPages
   */
  @javax.annotation.Nullable
  public Boolean getPublicPages() {
    return publicPages;
  }

  public void setPublicPages(Boolean publicPages) {
    this.publicPages = publicPages;
  }


  public EnterpriseSettingsEnterprise saml(EnterpriseSettingsEnterpriseSaml saml) {
    this.saml = saml;
    return this;
  }

  /**
   * Get saml
   * @return saml
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseSaml getSaml() {
    return saml;
  }

  public void setSaml(EnterpriseSettingsEnterpriseSaml saml) {
    this.saml = saml;
  }


  public EnterpriseSettingsEnterprise signupEnabled(Boolean signupEnabled) {
    this.signupEnabled = signupEnabled;
    return this;
  }

  /**
   * Get signupEnabled
   * @return signupEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSignupEnabled() {
    return signupEnabled;
  }

  public void setSignupEnabled(Boolean signupEnabled) {
    this.signupEnabled = signupEnabled;
  }


  public EnterpriseSettingsEnterprise smtp(EnterpriseSettingsEnterpriseSmtp smtp) {
    this.smtp = smtp;
    return this;
  }

  /**
   * Get smtp
   * @return smtp
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseSmtp getSmtp() {
    return smtp;
  }

  public void setSmtp(EnterpriseSettingsEnterpriseSmtp smtp) {
    this.smtp = smtp;
  }


  public EnterpriseSettingsEnterprise snmp(EnterpriseSettingsEnterpriseSnmp snmp) {
    this.snmp = snmp;
    return this;
  }

  /**
   * Get snmp
   * @return snmp
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseSnmp getSnmp() {
    return snmp;
  }

  public void setSnmp(EnterpriseSettingsEnterpriseSnmp snmp) {
    this.snmp = snmp;
  }


  public EnterpriseSettingsEnterprise subdomainIsolation(Boolean subdomainIsolation) {
    this.subdomainIsolation = subdomainIsolation;
    return this;
  }

  /**
   * Get subdomainIsolation
   * @return subdomainIsolation
   */
  @javax.annotation.Nullable
  public Boolean getSubdomainIsolation() {
    return subdomainIsolation;
  }

  public void setSubdomainIsolation(Boolean subdomainIsolation) {
    this.subdomainIsolation = subdomainIsolation;
  }


  public EnterpriseSettingsEnterprise syslog(EnterpriseSettingsEnterpriseSyslog syslog) {
    this.syslog = syslog;
    return this;
  }

  /**
   * Get syslog
   * @return syslog
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseSyslog getSyslog() {
    return syslog;
  }

  public void setSyslog(EnterpriseSettingsEnterpriseSyslog syslog) {
    this.syslog = syslog;
  }


  public EnterpriseSettingsEnterprise timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseSettingsEnterprise enterpriseSettingsEnterprise = (EnterpriseSettingsEnterprise) o;
    return Objects.equals(this.adminPassword, enterpriseSettingsEnterprise.adminPassword) &&
        Objects.equals(this.assets, enterpriseSettingsEnterprise.assets) &&
        Objects.equals(this.authMode, enterpriseSettingsEnterprise.authMode) &&
        Objects.equals(this.avatar, enterpriseSettingsEnterprise.avatar) &&
        Objects.equals(this.cas, enterpriseSettingsEnterprise.cas) &&
        Objects.equals(this.collectd, enterpriseSettingsEnterprise.collectd) &&
        Objects.equals(this.configurationId, enterpriseSettingsEnterprise.configurationId) &&
        Objects.equals(this.configurationRunCount, enterpriseSettingsEnterprise.configurationRunCount) &&
        Objects.equals(this.customer, enterpriseSettingsEnterprise.customer) &&
        Objects.equals(this.expireSessions, enterpriseSettingsEnterprise.expireSessions) &&
        Objects.equals(this.githubHostname, enterpriseSettingsEnterprise.githubHostname) &&
        Objects.equals(this.githubOauth, enterpriseSettingsEnterprise.githubOauth) &&
        Objects.equals(this.githubSsl, enterpriseSettingsEnterprise.githubSsl) &&
        Objects.equals(this.httpProxy, enterpriseSettingsEnterprise.httpProxy) &&
        Objects.equals(this.identiconsHost, enterpriseSettingsEnterprise.identiconsHost) &&
        Objects.equals(this.ldap, enterpriseSettingsEnterprise.ldap) &&
        Objects.equals(this.license, enterpriseSettingsEnterprise.license) &&
        Objects.equals(this.loadBalancer, enterpriseSettingsEnterprise.loadBalancer) &&
        Objects.equals(this.mapping, enterpriseSettingsEnterprise.mapping) &&
        Objects.equals(this.ntp, enterpriseSettingsEnterprise.ntp) &&
        Objects.equals(this.pages, enterpriseSettingsEnterprise.pages) &&
        Objects.equals(this.privateMode, enterpriseSettingsEnterprise.privateMode) &&
        Objects.equals(this.publicPages, enterpriseSettingsEnterprise.publicPages) &&
        Objects.equals(this.saml, enterpriseSettingsEnterprise.saml) &&
        Objects.equals(this.signupEnabled, enterpriseSettingsEnterprise.signupEnabled) &&
        Objects.equals(this.smtp, enterpriseSettingsEnterprise.smtp) &&
        Objects.equals(this.snmp, enterpriseSettingsEnterprise.snmp) &&
        Objects.equals(this.subdomainIsolation, enterpriseSettingsEnterprise.subdomainIsolation) &&
        Objects.equals(this.syslog, enterpriseSettingsEnterprise.syslog) &&
        Objects.equals(this.timezone, enterpriseSettingsEnterprise.timezone);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminPassword, assets, authMode, avatar, cas, collectd, configurationId, configurationRunCount, customer, expireSessions, githubHostname, githubOauth, githubSsl, httpProxy, identiconsHost, ldap, license, loadBalancer, mapping, ntp, pages, privateMode, publicPages, saml, signupEnabled, smtp, snmp, subdomainIsolation, syslog, timezone);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseSettingsEnterprise {\n");
    sb.append("    adminPassword: ").append(toIndentedString(adminPassword)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    authMode: ").append(toIndentedString(authMode)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    cas: ").append(toIndentedString(cas)).append("\n");
    sb.append("    collectd: ").append(toIndentedString(collectd)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    configurationRunCount: ").append(toIndentedString(configurationRunCount)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    expireSessions: ").append(toIndentedString(expireSessions)).append("\n");
    sb.append("    githubHostname: ").append(toIndentedString(githubHostname)).append("\n");
    sb.append("    githubOauth: ").append(toIndentedString(githubOauth)).append("\n");
    sb.append("    githubSsl: ").append(toIndentedString(githubSsl)).append("\n");
    sb.append("    httpProxy: ").append(toIndentedString(httpProxy)).append("\n");
    sb.append("    identiconsHost: ").append(toIndentedString(identiconsHost)).append("\n");
    sb.append("    ldap: ").append(toIndentedString(ldap)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    loadBalancer: ").append(toIndentedString(loadBalancer)).append("\n");
    sb.append("    mapping: ").append(toIndentedString(mapping)).append("\n");
    sb.append("    ntp: ").append(toIndentedString(ntp)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    privateMode: ").append(toIndentedString(privateMode)).append("\n");
    sb.append("    publicPages: ").append(toIndentedString(publicPages)).append("\n");
    sb.append("    saml: ").append(toIndentedString(saml)).append("\n");
    sb.append("    signupEnabled: ").append(toIndentedString(signupEnabled)).append("\n");
    sb.append("    smtp: ").append(toIndentedString(smtp)).append("\n");
    sb.append("    snmp: ").append(toIndentedString(snmp)).append("\n");
    sb.append("    subdomainIsolation: ").append(toIndentedString(subdomainIsolation)).append("\n");
    sb.append("    syslog: ").append(toIndentedString(syslog)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("admin_password");
    openapiFields.add("assets");
    openapiFields.add("auth_mode");
    openapiFields.add("avatar");
    openapiFields.add("cas");
    openapiFields.add("collectd");
    openapiFields.add("configuration_id");
    openapiFields.add("configuration_run_count");
    openapiFields.add("customer");
    openapiFields.add("expire_sessions");
    openapiFields.add("github_hostname");
    openapiFields.add("github_oauth");
    openapiFields.add("github_ssl");
    openapiFields.add("http_proxy");
    openapiFields.add("identicons_host");
    openapiFields.add("ldap");
    openapiFields.add("license");
    openapiFields.add("load_balancer");
    openapiFields.add("mapping");
    openapiFields.add("ntp");
    openapiFields.add("pages");
    openapiFields.add("private_mode");
    openapiFields.add("public_pages");
    openapiFields.add("saml");
    openapiFields.add("signup_enabled");
    openapiFields.add("smtp");
    openapiFields.add("snmp");
    openapiFields.add("subdomain_isolation");
    openapiFields.add("syslog");
    openapiFields.add("timezone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnterpriseSettingsEnterprise
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnterpriseSettingsEnterprise.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnterpriseSettingsEnterprise is not found in the empty JSON string", EnterpriseSettingsEnterprise.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnterpriseSettingsEnterprise.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnterpriseSettingsEnterprise` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("admin_password") != null && !jsonObj.get("admin_password").isJsonNull()) && !jsonObj.get("admin_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `admin_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("admin_password").toString()));
      }
      if ((jsonObj.get("assets") != null && !jsonObj.get("assets").isJsonNull()) && !jsonObj.get("assets").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assets` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assets").toString()));
      }
      if ((jsonObj.get("auth_mode") != null && !jsonObj.get("auth_mode").isJsonNull()) && !jsonObj.get("auth_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auth_mode").toString()));
      }
      // validate the optional field `avatar`
      if (jsonObj.get("avatar") != null && !jsonObj.get("avatar").isJsonNull()) {
        EnterpriseSettingsEnterpriseAvatar.validateJsonElement(jsonObj.get("avatar"));
      }
      // validate the optional field `cas`
      if (jsonObj.get("cas") != null && !jsonObj.get("cas").isJsonNull()) {
        EnterpriseSettingsEnterpriseCas.validateJsonElement(jsonObj.get("cas"));
      }
      // validate the optional field `collectd`
      if (jsonObj.get("collectd") != null && !jsonObj.get("collectd").isJsonNull()) {
        EnterpriseSettingsEnterpriseCollectd.validateJsonElement(jsonObj.get("collectd"));
      }
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        EnterpriseSettingsEnterpriseCustomer.validateJsonElement(jsonObj.get("customer"));
      }
      if ((jsonObj.get("github_hostname") != null && !jsonObj.get("github_hostname").isJsonNull()) && !jsonObj.get("github_hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `github_hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("github_hostname").toString()));
      }
      // validate the optional field `github_oauth`
      if (jsonObj.get("github_oauth") != null && !jsonObj.get("github_oauth").isJsonNull()) {
        EnterpriseSettingsEnterpriseGithubOauth.validateJsonElement(jsonObj.get("github_oauth"));
      }
      // validate the optional field `github_ssl`
      if (jsonObj.get("github_ssl") != null && !jsonObj.get("github_ssl").isJsonNull()) {
        EnterpriseSettingsEnterpriseGithubSsl.validateJsonElement(jsonObj.get("github_ssl"));
      }
      if ((jsonObj.get("http_proxy") != null && !jsonObj.get("http_proxy").isJsonNull()) && !jsonObj.get("http_proxy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `http_proxy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("http_proxy").toString()));
      }
      if ((jsonObj.get("identicons_host") != null && !jsonObj.get("identicons_host").isJsonNull()) && !jsonObj.get("identicons_host").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identicons_host` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identicons_host").toString()));
      }
      // validate the optional field `ldap`
      if (jsonObj.get("ldap") != null && !jsonObj.get("ldap").isJsonNull()) {
        EnterpriseSettingsEnterpriseLdap.validateJsonElement(jsonObj.get("ldap"));
      }
      // validate the optional field `license`
      if (jsonObj.get("license") != null && !jsonObj.get("license").isJsonNull()) {
        EnterpriseSettingsEnterpriseLicense.validateJsonElement(jsonObj.get("license"));
      }
      if ((jsonObj.get("load_balancer") != null && !jsonObj.get("load_balancer").isJsonNull()) && !jsonObj.get("load_balancer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `load_balancer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("load_balancer").toString()));
      }
      // validate the optional field `mapping`
      if (jsonObj.get("mapping") != null && !jsonObj.get("mapping").isJsonNull()) {
        EnterpriseSettingsEnterpriseMapping.validateJsonElement(jsonObj.get("mapping"));
      }
      // validate the optional field `ntp`
      if (jsonObj.get("ntp") != null && !jsonObj.get("ntp").isJsonNull()) {
        EnterpriseSettingsEnterpriseNtp.validateJsonElement(jsonObj.get("ntp"));
      }
      // validate the optional field `pages`
      if (jsonObj.get("pages") != null && !jsonObj.get("pages").isJsonNull()) {
        BranchProtectionAllowDeletions.validateJsonElement(jsonObj.get("pages"));
      }
      // validate the optional field `saml`
      if (jsonObj.get("saml") != null && !jsonObj.get("saml").isJsonNull()) {
        EnterpriseSettingsEnterpriseSaml.validateJsonElement(jsonObj.get("saml"));
      }
      // validate the optional field `smtp`
      if (jsonObj.get("smtp") != null && !jsonObj.get("smtp").isJsonNull()) {
        EnterpriseSettingsEnterpriseSmtp.validateJsonElement(jsonObj.get("smtp"));
      }
      // validate the optional field `snmp`
      if (jsonObj.get("snmp") != null && !jsonObj.get("snmp").isJsonNull()) {
        EnterpriseSettingsEnterpriseSnmp.validateJsonElement(jsonObj.get("snmp"));
      }
      // validate the optional field `syslog`
      if (jsonObj.get("syslog") != null && !jsonObj.get("syslog").isJsonNull()) {
        EnterpriseSettingsEnterpriseSyslog.validateJsonElement(jsonObj.get("syslog"));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnterpriseSettingsEnterprise.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnterpriseSettingsEnterprise' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnterpriseSettingsEnterprise> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnterpriseSettingsEnterprise.class));

       return (TypeAdapter<T>) new TypeAdapter<EnterpriseSettingsEnterprise>() {
           @Override
           public void write(JsonWriter out, EnterpriseSettingsEnterprise value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnterpriseSettingsEnterprise read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnterpriseSettingsEnterprise given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnterpriseSettingsEnterprise
   * @throws IOException if the JSON string is invalid with respect to EnterpriseSettingsEnterprise
   */
  public static EnterpriseSettingsEnterprise fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnterpriseSettingsEnterprise.class);
  }

  /**
   * Convert an instance of EnterpriseSettingsEnterprise to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

