/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request() {
    this->initializeModel();
}

OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::~OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request() {}

void OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::initializeModel() {

    m_allows_public_repositories_isSet = false;
    m_allows_public_repositories_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_visibility_isSet = false;
    m_visibility_isValid = false;
}

void OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::fromJsonObject(QJsonObject json) {

    m_allows_public_repositories_isValid = ::OpenAPI::fromJsonValue(m_allows_public_repositories, json[QString("allows_public_repositories")]);
    m_allows_public_repositories_isSet = !json[QString("allows_public_repositories")].isNull() && m_allows_public_repositories_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("visibility")]);
    m_visibility_isSet = !json[QString("visibility")].isNull() && m_visibility_isValid;
}

QString OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::asJsonObject() const {
    QJsonObject obj;
    if (m_allows_public_repositories_isSet) {
        obj.insert(QString("allows_public_repositories"), ::OpenAPI::toJsonValue(m_allows_public_repositories));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_visibility_isSet) {
        obj.insert(QString("visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    return obj;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::isAllowsPublicRepositories() const {
    return m_allows_public_repositories;
}
void OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::setAllowsPublicRepositories(const bool &allows_public_repositories) {
    m_allows_public_repositories = allows_public_repositories;
    m_allows_public_repositories_isSet = true;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::is_allows_public_repositories_Set() const{
    return m_allows_public_repositories_isSet;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::is_allows_public_repositories_Valid() const{
    return m_allows_public_repositories_isValid;
}

QString OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::getName() const {
    return m_name;
}
void OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::getVisibility() const {
    return m_visibility;
}
void OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::setVisibility(const QString &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::is_visibility_Valid() const{
    return m_visibility_isValid;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allows_public_repositories_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visibility_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_admin_update_self_hosted_runner_group_for_enterprise_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
