/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPull_request_simple.h
 *
 * Pull Request Simple
 */

#ifndef OAIPull_request_simple_H
#define OAIPull_request_simple_H

#include <QJsonObject>

#include "OAIAuthor_association.h"
#include "OAINullable_milestone.h"
#include "OAINullable_simple_user.h"
#include "OAIPull_request__links.h"
#include "OAIPull_request_simple_base.h"
#include "OAIPull_request_simple_labels_inner.h"
#include "OAISimple_user.h"
#include "OAITeam.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPull_request__links;
class OAINullable_simple_user;
class OAISimple_user;
class OAIPull_request_simple_base;
class OAIPull_request_simple_labels_inner;
class OAINullable_milestone;
class OAITeam;

class OAIPull_request_simple : public OAIObject {
public:
    OAIPull_request_simple();
    OAIPull_request_simple(QString json);
    ~OAIPull_request_simple() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPull_request__links getLinks() const;
    void setLinks(const OAIPull_request__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getActiveLockReason() const;
    void setActiveLockReason(const QString &active_lock_reason);
    bool is_active_lock_reason_Set() const;
    bool is_active_lock_reason_Valid() const;

    OAINullable_simple_user getAssignee() const;
    void setAssignee(const OAINullable_simple_user &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    QList<OAISimple_user> getAssignees() const;
    void setAssignees(const QList<OAISimple_user> &assignees);
    bool is_assignees_Set() const;
    bool is_assignees_Valid() const;

    OAIAuthor_association getAuthorAssociation() const;
    void setAuthorAssociation(const OAIAuthor_association &author_association);
    bool is_author_association_Set() const;
    bool is_author_association_Valid() const;

    OAIPull_request_simple_base getBase() const;
    void setBase(const OAIPull_request_simple_base &base);
    bool is_base_Set() const;
    bool is_base_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QDateTime getClosedAt() const;
    void setClosedAt(const QDateTime &closed_at);
    bool is_closed_at_Set() const;
    bool is_closed_at_Valid() const;

    QString getCommentsUrl() const;
    void setCommentsUrl(const QString &comments_url);
    bool is_comments_url_Set() const;
    bool is_comments_url_Valid() const;

    QString getCommitsUrl() const;
    void setCommitsUrl(const QString &commits_url);
    bool is_commits_url_Set() const;
    bool is_commits_url_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDiffUrl() const;
    void setDiffUrl(const QString &diff_url);
    bool is_diff_url_Set() const;
    bool is_diff_url_Valid() const;

    bool isDraft() const;
    void setDraft(const bool &draft);
    bool is_draft_Set() const;
    bool is_draft_Valid() const;

    OAIPull_request_simple_base getHead() const;
    void setHead(const OAIPull_request_simple_base &head);
    bool is_head_Set() const;
    bool is_head_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIssueUrl() const;
    void setIssueUrl(const QString &issue_url);
    bool is_issue_url_Set() const;
    bool is_issue_url_Valid() const;

    QList<OAIPull_request_simple_labels_inner> getLabels() const;
    void setLabels(const QList<OAIPull_request_simple_labels_inner> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getMergeCommitSha() const;
    void setMergeCommitSha(const QString &merge_commit_sha);
    bool is_merge_commit_sha_Set() const;
    bool is_merge_commit_sha_Valid() const;

    QDateTime getMergedAt() const;
    void setMergedAt(const QDateTime &merged_at);
    bool is_merged_at_Set() const;
    bool is_merged_at_Valid() const;

    OAINullable_milestone getMilestone() const;
    void setMilestone(const OAINullable_milestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getPatchUrl() const;
    void setPatchUrl(const QString &patch_url);
    bool is_patch_url_Set() const;
    bool is_patch_url_Valid() const;

    QList<OAISimple_user> getRequestedReviewers() const;
    void setRequestedReviewers(const QList<OAISimple_user> &requested_reviewers);
    bool is_requested_reviewers_Set() const;
    bool is_requested_reviewers_Valid() const;

    QList<OAITeam> getRequestedTeams() const;
    void setRequestedTeams(const QList<OAITeam> &requested_teams);
    bool is_requested_teams_Set() const;
    bool is_requested_teams_Valid() const;

    QString getReviewCommentUrl() const;
    void setReviewCommentUrl(const QString &review_comment_url);
    bool is_review_comment_url_Set() const;
    bool is_review_comment_url_Valid() const;

    QString getReviewCommentsUrl() const;
    void setReviewCommentsUrl(const QString &review_comments_url);
    bool is_review_comments_url_Set() const;
    bool is_review_comments_url_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStatusesUrl() const;
    void setStatusesUrl(const QString &statuses_url);
    bool is_statuses_url_Set() const;
    bool is_statuses_url_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAINullable_simple_user getUser() const;
    void setUser(const OAINullable_simple_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPull_request__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_active_lock_reason;
    bool m_active_lock_reason_isSet;
    bool m_active_lock_reason_isValid;

    OAINullable_simple_user m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    QList<OAISimple_user> m_assignees;
    bool m_assignees_isSet;
    bool m_assignees_isValid;

    OAIAuthor_association m_author_association;
    bool m_author_association_isSet;
    bool m_author_association_isValid;

    OAIPull_request_simple_base m_base;
    bool m_base_isSet;
    bool m_base_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QDateTime m_closed_at;
    bool m_closed_at_isSet;
    bool m_closed_at_isValid;

    QString m_comments_url;
    bool m_comments_url_isSet;
    bool m_comments_url_isValid;

    QString m_commits_url;
    bool m_commits_url_isSet;
    bool m_commits_url_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_diff_url;
    bool m_diff_url_isSet;
    bool m_diff_url_isValid;

    bool m_draft;
    bool m_draft_isSet;
    bool m_draft_isValid;

    OAIPull_request_simple_base m_head;
    bool m_head_isSet;
    bool m_head_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_issue_url;
    bool m_issue_url_isSet;
    bool m_issue_url_isValid;

    QList<OAIPull_request_simple_labels_inner> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_merge_commit_sha;
    bool m_merge_commit_sha_isSet;
    bool m_merge_commit_sha_isValid;

    QDateTime m_merged_at;
    bool m_merged_at_isSet;
    bool m_merged_at_isValid;

    OAINullable_milestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_patch_url;
    bool m_patch_url_isSet;
    bool m_patch_url_isValid;

    QList<OAISimple_user> m_requested_reviewers;
    bool m_requested_reviewers_isSet;
    bool m_requested_reviewers_isValid;

    QList<OAITeam> m_requested_teams;
    bool m_requested_teams_isSet;
    bool m_requested_teams_isValid;

    QString m_review_comment_url;
    bool m_review_comment_url_isSet;
    bool m_review_comment_url_isValid;

    QString m_review_comments_url;
    bool m_review_comments_url_isSet;
    bool m_review_comments_url_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_statuses_url;
    bool m_statuses_url_isSet;
    bool m_statuses_url_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAINullable_simple_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPull_request_simple)

#endif // OAIPull_request_simple_H
