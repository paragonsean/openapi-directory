/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_settings_enterprise_snmp.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_settings_enterprise_snmp::OAIEnterprise_settings_enterprise_snmp(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_settings_enterprise_snmp::OAIEnterprise_settings_enterprise_snmp() {
    this->initializeModel();
}

OAIEnterprise_settings_enterprise_snmp::~OAIEnterprise_settings_enterprise_snmp() {}

void OAIEnterprise_settings_enterprise_snmp::initializeModel() {

    m_community_isSet = false;
    m_community_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIEnterprise_settings_enterprise_snmp::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_settings_enterprise_snmp::fromJsonObject(QJsonObject json) {

    m_community_isValid = ::OpenAPI::fromJsonValue(m_community, json[QString("community")]);
    m_community_isSet = !json[QString("community")].isNull() && m_community_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;
}

QString OAIEnterprise_settings_enterprise_snmp::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_settings_enterprise_snmp::asJsonObject() const {
    QJsonObject obj;
    if (m_community_isSet) {
        obj.insert(QString("community"), ::OpenAPI::toJsonValue(m_community));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

QString OAIEnterprise_settings_enterprise_snmp::getCommunity() const {
    return m_community;
}
void OAIEnterprise_settings_enterprise_snmp::setCommunity(const QString &community) {
    m_community = community;
    m_community_isSet = true;
}

bool OAIEnterprise_settings_enterprise_snmp::is_community_Set() const{
    return m_community_isSet;
}

bool OAIEnterprise_settings_enterprise_snmp::is_community_Valid() const{
    return m_community_isValid;
}

bool OAIEnterprise_settings_enterprise_snmp::isEnabled() const {
    return m_enabled;
}
void OAIEnterprise_settings_enterprise_snmp::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIEnterprise_settings_enterprise_snmp::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIEnterprise_settings_enterprise_snmp::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIEnterprise_settings_enterprise_snmp::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_community_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_settings_enterprise_snmp::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
