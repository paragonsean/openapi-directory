/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThread.h
 *
 * Thread
 */

#ifndef OAIThread_H
#define OAIThread_H

#include <QJsonObject>

#include "OAIMinimal_repository.h"
#include "OAIThread_subject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMinimal_repository;
class OAIThread_subject;

class OAIThread : public OAIObject {
public:
    OAIThread();
    OAIThread(QString json);
    ~OAIThread() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastReadAt() const;
    void setLastReadAt(const QString &last_read_at);
    bool is_last_read_at_Set() const;
    bool is_last_read_at_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAIMinimal_repository getRepository() const;
    void setRepository(const OAIMinimal_repository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    OAIThread_subject getSubject() const;
    void setSubject(const OAIThread_subject &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getSubscriptionUrl() const;
    void setSubscriptionUrl(const QString &subscription_url);
    bool is_subscription_url_Set() const;
    bool is_subscription_url_Valid() const;

    bool isUnread() const;
    void setUnread(const bool &unread);
    bool is_unread_Set() const;
    bool is_unread_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_read_at;
    bool m_last_read_at_isSet;
    bool m_last_read_at_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAIMinimal_repository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    OAIThread_subject m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_subscription_url;
    bool m_subscription_url_isSet;
    bool m_subscription_url_isValid;

    bool m_unread;
    bool m_unread_isSet;
    bool m_unread_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThread)

#endif // OAIThread_H
