/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICode_scanning_alert_items.h
 *
 * 
 */

#ifndef OAICode_scanning_alert_items_H
#define OAICode_scanning_alert_items_H

#include <QJsonObject>

#include "OAICode_scanning_alert_dismissed_reason.h"
#include "OAICode_scanning_alert_instance.h"
#include "OAICode_scanning_alert_rule_summary.h"
#include "OAICode_scanning_alert_state.h"
#include "OAICode_scanning_analysis_tool.h"
#include "OAINullable_simple_user.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINullable_simple_user;
class OAICode_scanning_alert_instance;
class OAICode_scanning_alert_rule_summary;
class OAICode_scanning_analysis_tool;

class OAICode_scanning_alert_items : public OAIObject {
public:
    OAICode_scanning_alert_items();
    OAICode_scanning_alert_items(QString json);
    ~OAICode_scanning_alert_items() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getDismissedAt() const;
    void setDismissedAt(const QDateTime &dismissed_at);
    bool is_dismissed_at_Set() const;
    bool is_dismissed_at_Valid() const;

    OAINullable_simple_user getDismissedBy() const;
    void setDismissedBy(const OAINullable_simple_user &dismissed_by);
    bool is_dismissed_by_Set() const;
    bool is_dismissed_by_Valid() const;

    OAICode_scanning_alert_dismissed_reason getDismissedReason() const;
    void setDismissedReason(const OAICode_scanning_alert_dismissed_reason &dismissed_reason);
    bool is_dismissed_reason_Set() const;
    bool is_dismissed_reason_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getInstancesUrl() const;
    void setInstancesUrl(const QString &instances_url);
    bool is_instances_url_Set() const;
    bool is_instances_url_Valid() const;

    OAICode_scanning_alert_instance getMostRecentInstance() const;
    void setMostRecentInstance(const OAICode_scanning_alert_instance &most_recent_instance);
    bool is_most_recent_instance_Set() const;
    bool is_most_recent_instance_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    OAICode_scanning_alert_rule_summary getRule() const;
    void setRule(const OAICode_scanning_alert_rule_summary &rule);
    bool is_rule_Set() const;
    bool is_rule_Valid() const;

    OAICode_scanning_alert_state getState() const;
    void setState(const OAICode_scanning_alert_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAICode_scanning_analysis_tool getTool() const;
    void setTool(const OAICode_scanning_analysis_tool &tool);
    bool is_tool_Set() const;
    bool is_tool_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_dismissed_at;
    bool m_dismissed_at_isSet;
    bool m_dismissed_at_isValid;

    OAINullable_simple_user m_dismissed_by;
    bool m_dismissed_by_isSet;
    bool m_dismissed_by_isValid;

    OAICode_scanning_alert_dismissed_reason m_dismissed_reason;
    bool m_dismissed_reason_isSet;
    bool m_dismissed_reason_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_instances_url;
    bool m_instances_url_isSet;
    bool m_instances_url_isValid;

    OAICode_scanning_alert_instance m_most_recent_instance;
    bool m_most_recent_instance_isSet;
    bool m_most_recent_instance_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    OAICode_scanning_alert_rule_summary m_rule;
    bool m_rule_isSet;
    bool m_rule_isValid;

    OAICode_scanning_alert_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAICode_scanning_analysis_tool m_tool;
    bool m_tool_isSet;
    bool m_tool_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICode_scanning_alert_items)

#endif // OAICode_scanning_alert_items_H
