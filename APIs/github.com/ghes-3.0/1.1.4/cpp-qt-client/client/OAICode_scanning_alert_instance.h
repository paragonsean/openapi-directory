/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICode_scanning_alert_instance.h
 *
 * 
 */

#ifndef OAICode_scanning_alert_instance_H
#define OAICode_scanning_alert_instance_H

#include <QJsonObject>

#include "OAICode_scanning_alert_classification.h"
#include "OAICode_scanning_alert_instance_message.h"
#include "OAICode_scanning_alert_location.h"
#include "OAICode_scanning_alert_state.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICode_scanning_alert_location;
class OAICode_scanning_alert_instance_message;

class OAICode_scanning_alert_instance : public OAIObject {
public:
    OAICode_scanning_alert_instance();
    OAICode_scanning_alert_instance(QString json);
    ~OAICode_scanning_alert_instance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisKey() const;
    void setAnalysisKey(const QString &analysis_key);
    bool is_analysis_key_Set() const;
    bool is_analysis_key_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<OAICode_scanning_alert_classification> getClassifications() const;
    void setClassifications(const QList<OAICode_scanning_alert_classification> &classifications);
    bool is_classifications_Set() const;
    bool is_classifications_Valid() const;

    QString getCommitSha() const;
    void setCommitSha(const QString &commit_sha);
    bool is_commit_sha_Set() const;
    bool is_commit_sha_Valid() const;

    QString getEnvironment() const;
    void setEnvironment(const QString &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    OAICode_scanning_alert_location getLocation() const;
    void setLocation(const OAICode_scanning_alert_location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAICode_scanning_alert_instance_message getMessage() const;
    void setMessage(const OAICode_scanning_alert_instance_message &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getRef() const;
    void setRef(const QString &ref);
    bool is_ref_Set() const;
    bool is_ref_Valid() const;

    OAICode_scanning_alert_state getState() const;
    void setState(const OAICode_scanning_alert_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_key;
    bool m_analysis_key_isSet;
    bool m_analysis_key_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<OAICode_scanning_alert_classification> m_classifications;
    bool m_classifications_isSet;
    bool m_classifications_isValid;

    QString m_commit_sha;
    bool m_commit_sha_isSet;
    bool m_commit_sha_isValid;

    QString m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    OAICode_scanning_alert_location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAICode_scanning_alert_instance_message m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_ref;
    bool m_ref_isSet;
    bool m_ref_isValid;

    OAICode_scanning_alert_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICode_scanning_alert_instance)

#endif // OAICode_scanning_alert_instance_H
