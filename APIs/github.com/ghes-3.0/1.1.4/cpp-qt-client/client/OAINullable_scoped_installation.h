/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINullable_scoped_installation.h
 *
 * 
 */

#ifndef OAINullable_scoped_installation_H
#define OAINullable_scoped_installation_H

#include <QJsonObject>

#include "OAIApp_permissions.h"
#include "OAISimple_user.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimple_user;
class OAIApp_permissions;

class OAINullable_scoped_installation : public OAIObject {
public:
    OAINullable_scoped_installation();
    OAINullable_scoped_installation(QString json);
    ~OAINullable_scoped_installation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimple_user getAccount() const;
    void setAccount(const OAISimple_user &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    bool isHasMultipleSingleFiles() const;
    void setHasMultipleSingleFiles(const bool &has_multiple_single_files);
    bool is_has_multiple_single_files_Set() const;
    bool is_has_multiple_single_files_Valid() const;

    OAIApp_permissions getPermissions() const;
    void setPermissions(const OAIApp_permissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getRepositoriesUrl() const;
    void setRepositoriesUrl(const QString &repositories_url);
    bool is_repositories_url_Set() const;
    bool is_repositories_url_Valid() const;

    QString getRepositorySelection() const;
    void setRepositorySelection(const QString &repository_selection);
    bool is_repository_selection_Set() const;
    bool is_repository_selection_Valid() const;

    QString getSingleFileName() const;
    void setSingleFileName(const QString &single_file_name);
    bool is_single_file_name_Set() const;
    bool is_single_file_name_Valid() const;

    QList<QString> getSingleFilePaths() const;
    void setSingleFilePaths(const QList<QString> &single_file_paths);
    bool is_single_file_paths_Set() const;
    bool is_single_file_paths_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimple_user m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    bool m_has_multiple_single_files;
    bool m_has_multiple_single_files_isSet;
    bool m_has_multiple_single_files_isValid;

    OAIApp_permissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_repositories_url;
    bool m_repositories_url_isSet;
    bool m_repositories_url_isValid;

    QString m_repository_selection;
    bool m_repository_selection_isSet;
    bool m_repository_selection_isValid;

    QString m_single_file_name;
    bool m_single_file_name_isSet;
    bool m_single_file_name_isValid;

    QList<QString> m_single_file_paths;
    bool m_single_file_paths_isSet;
    bool m_single_file_paths_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINullable_scoped_installation)

#endif // OAINullable_scoped_installation_H
