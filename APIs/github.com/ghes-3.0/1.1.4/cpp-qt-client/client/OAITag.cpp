/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITag::OAITag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITag::OAITag() {
    this->initializeModel();
}

OAITag::~OAITag() {}

void OAITag::initializeModel() {

    m_commit_isSet = false;
    m_commit_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_node_id_isSet = false;
    m_node_id_isValid = false;

    m_tarball_url_isSet = false;
    m_tarball_url_isValid = false;

    m_zipball_url_isSet = false;
    m_zipball_url_isValid = false;
}

void OAITag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITag::fromJsonObject(QJsonObject json) {

    m_commit_isValid = ::OpenAPI::fromJsonValue(m_commit, json[QString("commit")]);
    m_commit_isSet = !json[QString("commit")].isNull() && m_commit_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_node_id_isValid = ::OpenAPI::fromJsonValue(m_node_id, json[QString("node_id")]);
    m_node_id_isSet = !json[QString("node_id")].isNull() && m_node_id_isValid;

    m_tarball_url_isValid = ::OpenAPI::fromJsonValue(m_tarball_url, json[QString("tarball_url")]);
    m_tarball_url_isSet = !json[QString("tarball_url")].isNull() && m_tarball_url_isValid;

    m_zipball_url_isValid = ::OpenAPI::fromJsonValue(m_zipball_url, json[QString("zipball_url")]);
    m_zipball_url_isSet = !json[QString("zipball_url")].isNull() && m_zipball_url_isValid;
}

QString OAITag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITag::asJsonObject() const {
    QJsonObject obj;
    if (m_commit.isSet()) {
        obj.insert(QString("commit"), ::OpenAPI::toJsonValue(m_commit));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_node_id_isSet) {
        obj.insert(QString("node_id"), ::OpenAPI::toJsonValue(m_node_id));
    }
    if (m_tarball_url_isSet) {
        obj.insert(QString("tarball_url"), ::OpenAPI::toJsonValue(m_tarball_url));
    }
    if (m_zipball_url_isSet) {
        obj.insert(QString("zipball_url"), ::OpenAPI::toJsonValue(m_zipball_url));
    }
    return obj;
}

OAICommit_search_result_item_commit_tree OAITag::getCommit() const {
    return m_commit;
}
void OAITag::setCommit(const OAICommit_search_result_item_commit_tree &commit) {
    m_commit = commit;
    m_commit_isSet = true;
}

bool OAITag::is_commit_Set() const{
    return m_commit_isSet;
}

bool OAITag::is_commit_Valid() const{
    return m_commit_isValid;
}

QString OAITag::getName() const {
    return m_name;
}
void OAITag::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITag::is_name_Set() const{
    return m_name_isSet;
}

bool OAITag::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITag::getNodeId() const {
    return m_node_id;
}
void OAITag::setNodeId(const QString &node_id) {
    m_node_id = node_id;
    m_node_id_isSet = true;
}

bool OAITag::is_node_id_Set() const{
    return m_node_id_isSet;
}

bool OAITag::is_node_id_Valid() const{
    return m_node_id_isValid;
}

QString OAITag::getTarballUrl() const {
    return m_tarball_url;
}
void OAITag::setTarballUrl(const QString &tarball_url) {
    m_tarball_url = tarball_url;
    m_tarball_url_isSet = true;
}

bool OAITag::is_tarball_url_Set() const{
    return m_tarball_url_isSet;
}

bool OAITag::is_tarball_url_Valid() const{
    return m_tarball_url_isValid;
}

QString OAITag::getZipballUrl() const {
    return m_zipball_url;
}
void OAITag::setZipballUrl(const QString &zipball_url) {
    m_zipball_url = zipball_url;
    m_zipball_url_isSet = true;
}

bool OAITag::is_zipball_url_Set() const{
    return m_zipball_url_isSet;
}

bool OAITag::is_zipball_url_Valid() const{
    return m_zipball_url_isValid;
}

bool OAITag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tarball_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zipball_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITag::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_commit_isValid && m_name_isValid && m_node_id_isValid && m_tarball_url_isValid && m_zipball_url_isValid && true;
}

} // namespace OpenAPI
