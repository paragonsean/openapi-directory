/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeline_issue_events.h
 *
 * Timeline Event
 */

#ifndef OAITimeline_issue_events_H
#define OAITimeline_issue_events_H

#include <QJsonObject>

#include "OAIAdded_to_project_issue_event.h"
#include "OAIAdded_to_project_issue_event_project_card.h"
#include "OAIAuthor_association.h"
#include "OAICommit_comment.h"
#include "OAIConverted_note_to_issue_issue_event.h"
#include "OAIDemilestoned_issue_event.h"
#include "OAIDemilestoned_issue_event_milestone.h"
#include "OAIGit_commit_author.h"
#include "OAIGit_commit_parents_inner.h"
#include "OAIGit_commit_tree.h"
#include "OAIGit_commit_verification.h"
#include "OAILabeled_issue_event.h"
#include "OAILabeled_issue_event_label.h"
#include "OAILocked_issue_event.h"
#include "OAIMilestoned_issue_event.h"
#include "OAIMoved_column_in_project_issue_event.h"
#include "OAINullable_integration.h"
#include "OAIPull_request_review__links.h"
#include "OAIReaction_rollup.h"
#include "OAIRemoved_from_project_issue_event.h"
#include "OAIRenamed_issue_event.h"
#include "OAIRenamed_issue_event_rename.h"
#include "OAIReview_dismissed_issue_event.h"
#include "OAIReview_dismissed_issue_event_dismissed_review.h"
#include "OAIReview_request_removed_issue_event.h"
#include "OAIReview_requested_issue_event.h"
#include "OAISimple_user.h"
#include "OAIState_change_issue_event.h"
#include "OAITeam.h"
#include "OAITimeline_assigned_issue_event.h"
#include "OAITimeline_comment_event.h"
#include "OAITimeline_commit_commented_event.h"
#include "OAITimeline_committed_event.h"
#include "OAITimeline_cross_referenced_event.h"
#include "OAITimeline_cross_referenced_event_source.h"
#include "OAITimeline_line_commented_event.h"
#include "OAITimeline_reviewed_event.h"
#include "OAITimeline_unassigned_issue_event.h"
#include "OAIUnlabeled_issue_event.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimple_user;
class OAILabeled_issue_event_label;
class OAINullable_integration;
class OAIDemilestoned_issue_event_milestone;
class OAIRenamed_issue_event_rename;
class OAITeam;
class OAIReview_dismissed_issue_event_dismissed_review;
class OAIAdded_to_project_issue_event_project_card;
class OAIReaction_rollup;
class OAITimeline_cross_referenced_event_source;
class OAIGit_commit_author;
class OAIGit_commit_parents_inner;
class OAIGit_commit_tree;
class OAIGit_commit_verification;
class OAIPull_request_review__links;
class OAICommit_comment;

class OAITimeline_issue_events : public OAIObject {
public:
    OAITimeline_issue_events();
    OAITimeline_issue_events(QString json);
    ~OAITimeline_issue_events() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimple_user getActor() const;
    void setActor(const OAISimple_user &actor);
    bool is_actor_Set() const;
    bool is_actor_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QString getCommitUrl() const;
    void setCommitUrl(const QString &commit_url);
    bool is_commit_url_Set() const;
    bool is_commit_url_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getEvent() const;
    void setEvent(const QString &event);
    bool is_event_Set() const;
    bool is_event_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAILabeled_issue_event_label getLabel() const;
    void setLabel(const OAILabeled_issue_event_label &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    OAINullable_integration getPerformedViaGithubApp() const;
    void setPerformedViaGithubApp(const OAINullable_integration &performed_via_github_app);
    bool is_performed_via_github_app_Set() const;
    bool is_performed_via_github_app_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIDemilestoned_issue_event_milestone getMilestone() const;
    void setMilestone(const OAIDemilestoned_issue_event_milestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    OAIRenamed_issue_event_rename getRename() const;
    void setRename(const OAIRenamed_issue_event_rename &rename);
    bool is_rename_Set() const;
    bool is_rename_Valid() const;

    OAISimple_user getRequestedReviewer() const;
    void setRequestedReviewer(const OAISimple_user &requested_reviewer);
    bool is_requested_reviewer_Set() const;
    bool is_requested_reviewer_Valid() const;

    OAITeam getRequestedTeam() const;
    void setRequestedTeam(const OAITeam &requested_team);
    bool is_requested_team_Set() const;
    bool is_requested_team_Valid() const;

    OAISimple_user getReviewRequester() const;
    void setReviewRequester(const OAISimple_user &review_requester);
    bool is_review_requester_Set() const;
    bool is_review_requester_Valid() const;

    OAIReview_dismissed_issue_event_dismissed_review getDismissedReview() const;
    void setDismissedReview(const OAIReview_dismissed_issue_event_dismissed_review &dismissed_review);
    bool is_dismissed_review_Set() const;
    bool is_dismissed_review_Valid() const;

    QString getLockReason() const;
    void setLockReason(const QString &lock_reason);
    bool is_lock_reason_Set() const;
    bool is_lock_reason_Valid() const;

    OAIAdded_to_project_issue_event_project_card getProjectCard() const;
    void setProjectCard(const OAIAdded_to_project_issue_event_project_card &project_card);
    bool is_project_card_Set() const;
    bool is_project_card_Valid() const;

    OAIAuthor_association getAuthorAssociation() const;
    void setAuthorAssociation(const OAIAuthor_association &author_association);
    bool is_author_association_Set() const;
    bool is_author_association_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getBodyHtml() const;
    void setBodyHtml(const QString &body_html);
    bool is_body_html_Set() const;
    bool is_body_html_Valid() const;

    QString getBodyText() const;
    void setBodyText(const QString &body_text);
    bool is_body_text_Set() const;
    bool is_body_text_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getIssueUrl() const;
    void setIssueUrl(const QString &issue_url);
    bool is_issue_url_Set() const;
    bool is_issue_url_Valid() const;

    OAIReaction_rollup getReactions() const;
    void setReactions(const OAIReaction_rollup &reactions);
    bool is_reactions_Set() const;
    bool is_reactions_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAISimple_user getUser() const;
    void setUser(const OAISimple_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    OAITimeline_cross_referenced_event_source getSource() const;
    void setSource(const OAITimeline_cross_referenced_event_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIGit_commit_author getAuthor() const;
    void setAuthor(const OAIGit_commit_author &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIGit_commit_author getCommitter() const;
    void setCommitter(const OAIGit_commit_author &committer);
    bool is_committer_Set() const;
    bool is_committer_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<OAIGit_commit_parents_inner> getParents() const;
    void setParents(const QList<OAIGit_commit_parents_inner> &parents);
    bool is_parents_Set() const;
    bool is_parents_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    OAIGit_commit_tree getTree() const;
    void setTree(const OAIGit_commit_tree &tree);
    bool is_tree_Set() const;
    bool is_tree_Valid() const;

    OAIGit_commit_verification getVerification() const;
    void setVerification(const OAIGit_commit_verification &verification);
    bool is_verification_Set() const;
    bool is_verification_Valid() const;

    OAIPull_request_review__links getLinks() const;
    void setLinks(const OAIPull_request_review__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getPullRequestUrl() const;
    void setPullRequestUrl(const QString &pull_request_url);
    bool is_pull_request_url_Set() const;
    bool is_pull_request_url_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getSubmittedAt() const;
    void setSubmittedAt(const QDateTime &submitted_at);
    bool is_submitted_at_Set() const;
    bool is_submitted_at_Valid() const;

    QList<OAICommit_comment> getComments() const;
    void setComments(const QList<OAICommit_comment> &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    OAISimple_user getAssignee() const;
    void setAssignee(const OAISimple_user &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimple_user m_actor;
    bool m_actor_isSet;
    bool m_actor_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QString m_commit_url;
    bool m_commit_url_isSet;
    bool m_commit_url_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_event;
    bool m_event_isSet;
    bool m_event_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAILabeled_issue_event_label m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    OAINullable_integration m_performed_via_github_app;
    bool m_performed_via_github_app_isSet;
    bool m_performed_via_github_app_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIDemilestoned_issue_event_milestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    OAIRenamed_issue_event_rename m_rename;
    bool m_rename_isSet;
    bool m_rename_isValid;

    OAISimple_user m_requested_reviewer;
    bool m_requested_reviewer_isSet;
    bool m_requested_reviewer_isValid;

    OAITeam m_requested_team;
    bool m_requested_team_isSet;
    bool m_requested_team_isValid;

    OAISimple_user m_review_requester;
    bool m_review_requester_isSet;
    bool m_review_requester_isValid;

    OAIReview_dismissed_issue_event_dismissed_review m_dismissed_review;
    bool m_dismissed_review_isSet;
    bool m_dismissed_review_isValid;

    QString m_lock_reason;
    bool m_lock_reason_isSet;
    bool m_lock_reason_isValid;

    OAIAdded_to_project_issue_event_project_card m_project_card;
    bool m_project_card_isSet;
    bool m_project_card_isValid;

    OAIAuthor_association m_author_association;
    bool m_author_association_isSet;
    bool m_author_association_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_body_html;
    bool m_body_html_isSet;
    bool m_body_html_isValid;

    QString m_body_text;
    bool m_body_text_isSet;
    bool m_body_text_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_issue_url;
    bool m_issue_url_isSet;
    bool m_issue_url_isValid;

    OAIReaction_rollup m_reactions;
    bool m_reactions_isSet;
    bool m_reactions_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAISimple_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    OAITimeline_cross_referenced_event_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIGit_commit_author m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIGit_commit_author m_committer;
    bool m_committer_isSet;
    bool m_committer_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<OAIGit_commit_parents_inner> m_parents;
    bool m_parents_isSet;
    bool m_parents_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    OAIGit_commit_tree m_tree;
    bool m_tree_isSet;
    bool m_tree_isValid;

    OAIGit_commit_verification m_verification;
    bool m_verification_isSet;
    bool m_verification_isValid;

    OAIPull_request_review__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_pull_request_url;
    bool m_pull_request_url_isSet;
    bool m_pull_request_url_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_submitted_at;
    bool m_submitted_at_isSet;
    bool m_submitted_at_isValid;

    QList<OAICommit_comment> m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    OAISimple_user m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeline_issue_events)

#endif // OAITimeline_issue_events_H
