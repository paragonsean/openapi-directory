/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_settings_enterprise_syslog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_settings_enterprise_syslog::OAIEnterprise_settings_enterprise_syslog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_settings_enterprise_syslog::OAIEnterprise_settings_enterprise_syslog() {
    this->initializeModel();
}

OAIEnterprise_settings_enterprise_syslog::~OAIEnterprise_settings_enterprise_syslog() {}

void OAIEnterprise_settings_enterprise_syslog::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_protocol_name_isSet = false;
    m_protocol_name_isValid = false;

    m_server_isSet = false;
    m_server_isValid = false;
}

void OAIEnterprise_settings_enterprise_syslog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_settings_enterprise_syslog::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_protocol_name_isValid = ::OpenAPI::fromJsonValue(m_protocol_name, json[QString("protocol_name")]);
    m_protocol_name_isSet = !json[QString("protocol_name")].isNull() && m_protocol_name_isValid;

    m_server_isValid = ::OpenAPI::fromJsonValue(m_server, json[QString("server")]);
    m_server_isSet = !json[QString("server")].isNull() && m_server_isValid;
}

QString OAIEnterprise_settings_enterprise_syslog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_settings_enterprise_syslog::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_protocol_name_isSet) {
        obj.insert(QString("protocol_name"), ::OpenAPI::toJsonValue(m_protocol_name));
    }
    if (m_server_isSet) {
        obj.insert(QString("server"), ::OpenAPI::toJsonValue(m_server));
    }
    return obj;
}

bool OAIEnterprise_settings_enterprise_syslog::isEnabled() const {
    return m_enabled;
}
void OAIEnterprise_settings_enterprise_syslog::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIEnterprise_settings_enterprise_syslog::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIEnterprise_settings_enterprise_syslog::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIEnterprise_settings_enterprise_syslog::getProtocolName() const {
    return m_protocol_name;
}
void OAIEnterprise_settings_enterprise_syslog::setProtocolName(const QString &protocol_name) {
    m_protocol_name = protocol_name;
    m_protocol_name_isSet = true;
}

bool OAIEnterprise_settings_enterprise_syslog::is_protocol_name_Set() const{
    return m_protocol_name_isSet;
}

bool OAIEnterprise_settings_enterprise_syslog::is_protocol_name_Valid() const{
    return m_protocol_name_isValid;
}

QString OAIEnterprise_settings_enterprise_syslog::getServer() const {
    return m_server;
}
void OAIEnterprise_settings_enterprise_syslog::setServer(const QString &server) {
    m_server = server;
    m_server_isSet = true;
}

bool OAIEnterprise_settings_enterprise_syslog::is_server_Set() const{
    return m_server_isSet;
}

bool OAIEnterprise_settings_enterprise_syslog::is_server_Valid() const{
    return m_server_isValid;
}

bool OAIEnterprise_settings_enterprise_syslog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protocol_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_settings_enterprise_syslog::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
