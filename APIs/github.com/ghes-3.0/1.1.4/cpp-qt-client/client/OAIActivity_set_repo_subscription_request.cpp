/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivity_set_repo_subscription_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivity_set_repo_subscription_request::OAIActivity_set_repo_subscription_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivity_set_repo_subscription_request::OAIActivity_set_repo_subscription_request() {
    this->initializeModel();
}

OAIActivity_set_repo_subscription_request::~OAIActivity_set_repo_subscription_request() {}

void OAIActivity_set_repo_subscription_request::initializeModel() {

    m_ignored_isSet = false;
    m_ignored_isValid = false;

    m_subscribed_isSet = false;
    m_subscribed_isValid = false;
}

void OAIActivity_set_repo_subscription_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivity_set_repo_subscription_request::fromJsonObject(QJsonObject json) {

    m_ignored_isValid = ::OpenAPI::fromJsonValue(m_ignored, json[QString("ignored")]);
    m_ignored_isSet = !json[QString("ignored")].isNull() && m_ignored_isValid;

    m_subscribed_isValid = ::OpenAPI::fromJsonValue(m_subscribed, json[QString("subscribed")]);
    m_subscribed_isSet = !json[QString("subscribed")].isNull() && m_subscribed_isValid;
}

QString OAIActivity_set_repo_subscription_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivity_set_repo_subscription_request::asJsonObject() const {
    QJsonObject obj;
    if (m_ignored_isSet) {
        obj.insert(QString("ignored"), ::OpenAPI::toJsonValue(m_ignored));
    }
    if (m_subscribed_isSet) {
        obj.insert(QString("subscribed"), ::OpenAPI::toJsonValue(m_subscribed));
    }
    return obj;
}

bool OAIActivity_set_repo_subscription_request::isIgnored() const {
    return m_ignored;
}
void OAIActivity_set_repo_subscription_request::setIgnored(const bool &ignored) {
    m_ignored = ignored;
    m_ignored_isSet = true;
}

bool OAIActivity_set_repo_subscription_request::is_ignored_Set() const{
    return m_ignored_isSet;
}

bool OAIActivity_set_repo_subscription_request::is_ignored_Valid() const{
    return m_ignored_isValid;
}

bool OAIActivity_set_repo_subscription_request::isSubscribed() const {
    return m_subscribed;
}
void OAIActivity_set_repo_subscription_request::setSubscribed(const bool &subscribed) {
    m_subscribed = subscribed;
    m_subscribed_isSet = true;
}

bool OAIActivity_set_repo_subscription_request::is_subscribed_Set() const{
    return m_subscribed_isSet;
}

bool OAIActivity_set_repo_subscription_request::is_subscribed_Valid() const{
    return m_subscribed_isValid;
}

bool OAIActivity_set_repo_subscription_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ignored_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscribed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivity_set_repo_subscription_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
