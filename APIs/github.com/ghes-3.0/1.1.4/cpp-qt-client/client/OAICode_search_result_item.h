/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICode_search_result_item.h
 *
 * Code Search Result Item
 */

#ifndef OAICode_search_result_item_H
#define OAICode_search_result_item_H

#include <QJsonObject>

#include "OAIMinimal_repository.h"
#include "OAISearch_result_text_matches_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMinimal_repository;
class OAISearch_result_text_matches_inner;

class OAICode_search_result_item : public OAIObject {
public:
    OAICode_search_result_item();
    OAICode_search_result_item(QString json);
    ~OAICode_search_result_item() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFileSize() const;
    void setFileSize(const qint32 &file_size);
    bool is_file_size_Set() const;
    bool is_file_size_Valid() const;

    QString getGitUrl() const;
    void setGitUrl(const QString &git_url);
    bool is_git_url_Set() const;
    bool is_git_url_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QDateTime getLastModifiedAt() const;
    void setLastModifiedAt(const QDateTime &last_modified_at);
    bool is_last_modified_at_Set() const;
    bool is_last_modified_at_Valid() const;

    QList<QString> getLineNumbers() const;
    void setLineNumbers(const QList<QString> &line_numbers);
    bool is_line_numbers_Set() const;
    bool is_line_numbers_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIMinimal_repository getRepository() const;
    void setRepository(const OAIMinimal_repository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    QList<OAISearch_result_text_matches_inner> getTextMatches() const;
    void setTextMatches(const QList<OAISearch_result_text_matches_inner> &text_matches);
    bool is_text_matches_Set() const;
    bool is_text_matches_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_file_size;
    bool m_file_size_isSet;
    bool m_file_size_isValid;

    QString m_git_url;
    bool m_git_url_isSet;
    bool m_git_url_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QDateTime m_last_modified_at;
    bool m_last_modified_at_isSet;
    bool m_last_modified_at_isValid;

    QList<QString> m_line_numbers;
    bool m_line_numbers_isSet;
    bool m_line_numbers_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIMinimal_repository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    QList<OAISearch_result_text_matches_inner> m_text_matches;
    bool m_text_matches_isSet;
    bool m_text_matches_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICode_search_result_item)

#endif // OAICode_search_result_item_H
