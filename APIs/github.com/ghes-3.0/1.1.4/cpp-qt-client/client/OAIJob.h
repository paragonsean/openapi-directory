/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJob.h
 *
 * Information of a job execution in a workflow run
 */

#ifndef OAIJob_H
#define OAIJob_H

#include <QJsonObject>

#include "OAIJob_steps_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJob_steps_inner;

class OAIJob : public OAIObject {
public:
    OAIJob();
    OAIJob(QString json);
    ~OAIJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckRunUrl() const;
    void setCheckRunUrl(const QString &check_run_url);
    bool is_check_run_url_Set() const;
    bool is_check_run_url_Valid() const;

    QDateTime getCompletedAt() const;
    void setCompletedAt(const QDateTime &completed_at);
    bool is_completed_at_Set() const;
    bool is_completed_at_Valid() const;

    QString getConclusion() const;
    void setConclusion(const QString &conclusion);
    bool is_conclusion_Set() const;
    bool is_conclusion_Valid() const;

    QString getHeadSha() const;
    void setHeadSha(const QString &head_sha);
    bool is_head_sha_Set() const;
    bool is_head_sha_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    qint32 getRunAttempt() const;
    void setRunAttempt(const qint32 &run_attempt);
    bool is_run_attempt_Set() const;
    bool is_run_attempt_Valid() const;

    qint32 getRunId() const;
    void setRunId(const qint32 &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    QString getRunUrl() const;
    void setRunUrl(const QString &run_url);
    bool is_run_url_Set() const;
    bool is_run_url_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIJob_steps_inner> getSteps() const;
    void setSteps(const QList<OAIJob_steps_inner> &steps);
    bool is_steps_Set() const;
    bool is_steps_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_check_run_url;
    bool m_check_run_url_isSet;
    bool m_check_run_url_isValid;

    QDateTime m_completed_at;
    bool m_completed_at_isSet;
    bool m_completed_at_isValid;

    QString m_conclusion;
    bool m_conclusion_isSet;
    bool m_conclusion_isValid;

    QString m_head_sha;
    bool m_head_sha_isSet;
    bool m_head_sha_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    qint32 m_run_attempt;
    bool m_run_attempt_isSet;
    bool m_run_attempt_isValid;

    qint32 m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    QString m_run_url;
    bool m_run_url_isSet;
    bool m_run_url_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIJob_steps_inner> m_steps;
    bool m_steps_isSet;
    bool m_steps_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJob)

#endif // OAIJob_H
