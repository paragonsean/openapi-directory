/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BranchProtectionAllowDeletions from './BranchProtectionAllowDeletions';
import EnterpriseSettingsEnterpriseAvatar from './EnterpriseSettingsEnterpriseAvatar';
import EnterpriseSettingsEnterpriseCas from './EnterpriseSettingsEnterpriseCas';
import EnterpriseSettingsEnterpriseCollectd from './EnterpriseSettingsEnterpriseCollectd';
import EnterpriseSettingsEnterpriseCustomer from './EnterpriseSettingsEnterpriseCustomer';
import EnterpriseSettingsEnterpriseGithubOauth from './EnterpriseSettingsEnterpriseGithubOauth';
import EnterpriseSettingsEnterpriseGithubSsl from './EnterpriseSettingsEnterpriseGithubSsl';
import EnterpriseSettingsEnterpriseLdap from './EnterpriseSettingsEnterpriseLdap';
import EnterpriseSettingsEnterpriseLicense from './EnterpriseSettingsEnterpriseLicense';
import EnterpriseSettingsEnterpriseMapping from './EnterpriseSettingsEnterpriseMapping';
import EnterpriseSettingsEnterpriseNtp from './EnterpriseSettingsEnterpriseNtp';
import EnterpriseSettingsEnterpriseSaml from './EnterpriseSettingsEnterpriseSaml';
import EnterpriseSettingsEnterpriseSmtp from './EnterpriseSettingsEnterpriseSmtp';
import EnterpriseSettingsEnterpriseSnmp from './EnterpriseSettingsEnterpriseSnmp';
import EnterpriseSettingsEnterpriseSyslog from './EnterpriseSettingsEnterpriseSyslog';

/**
 * The EnterpriseSettingsEnterprise model module.
 * @module model/EnterpriseSettingsEnterprise
 * @version 1.1.4
 */
class EnterpriseSettingsEnterprise {
    /**
     * Constructs a new <code>EnterpriseSettingsEnterprise</code>.
     * @alias module:model/EnterpriseSettingsEnterprise
     */
    constructor() { 
        
        EnterpriseSettingsEnterprise.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseSettingsEnterprise</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseSettingsEnterprise} obj Optional instance to populate.
     * @return {module:model/EnterpriseSettingsEnterprise} The populated <code>EnterpriseSettingsEnterprise</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseSettingsEnterprise();

            if (data.hasOwnProperty('admin_password')) {
                obj['admin_password'] = ApiClient.convertToType(data['admin_password'], 'String');
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], 'String');
            }
            if (data.hasOwnProperty('auth_mode')) {
                obj['auth_mode'] = ApiClient.convertToType(data['auth_mode'], 'String');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = EnterpriseSettingsEnterpriseAvatar.constructFromObject(data['avatar']);
            }
            if (data.hasOwnProperty('cas')) {
                obj['cas'] = EnterpriseSettingsEnterpriseCas.constructFromObject(data['cas']);
            }
            if (data.hasOwnProperty('collectd')) {
                obj['collectd'] = EnterpriseSettingsEnterpriseCollectd.constructFromObject(data['collectd']);
            }
            if (data.hasOwnProperty('configuration_id')) {
                obj['configuration_id'] = ApiClient.convertToType(data['configuration_id'], 'Number');
            }
            if (data.hasOwnProperty('configuration_run_count')) {
                obj['configuration_run_count'] = ApiClient.convertToType(data['configuration_run_count'], 'Number');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = EnterpriseSettingsEnterpriseCustomer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('expire_sessions')) {
                obj['expire_sessions'] = ApiClient.convertToType(data['expire_sessions'], 'Boolean');
            }
            if (data.hasOwnProperty('github_hostname')) {
                obj['github_hostname'] = ApiClient.convertToType(data['github_hostname'], 'String');
            }
            if (data.hasOwnProperty('github_oauth')) {
                obj['github_oauth'] = EnterpriseSettingsEnterpriseGithubOauth.constructFromObject(data['github_oauth']);
            }
            if (data.hasOwnProperty('github_ssl')) {
                obj['github_ssl'] = EnterpriseSettingsEnterpriseGithubSsl.constructFromObject(data['github_ssl']);
            }
            if (data.hasOwnProperty('http_proxy')) {
                obj['http_proxy'] = ApiClient.convertToType(data['http_proxy'], 'String');
            }
            if (data.hasOwnProperty('identicons_host')) {
                obj['identicons_host'] = ApiClient.convertToType(data['identicons_host'], 'String');
            }
            if (data.hasOwnProperty('ldap')) {
                obj['ldap'] = EnterpriseSettingsEnterpriseLdap.constructFromObject(data['ldap']);
            }
            if (data.hasOwnProperty('license')) {
                obj['license'] = EnterpriseSettingsEnterpriseLicense.constructFromObject(data['license']);
            }
            if (data.hasOwnProperty('load_balancer')) {
                obj['load_balancer'] = ApiClient.convertToType(data['load_balancer'], 'String');
            }
            if (data.hasOwnProperty('mapping')) {
                obj['mapping'] = EnterpriseSettingsEnterpriseMapping.constructFromObject(data['mapping']);
            }
            if (data.hasOwnProperty('ntp')) {
                obj['ntp'] = EnterpriseSettingsEnterpriseNtp.constructFromObject(data['ntp']);
            }
            if (data.hasOwnProperty('pages')) {
                obj['pages'] = BranchProtectionAllowDeletions.constructFromObject(data['pages']);
            }
            if (data.hasOwnProperty('private_mode')) {
                obj['private_mode'] = ApiClient.convertToType(data['private_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('public_pages')) {
                obj['public_pages'] = ApiClient.convertToType(data['public_pages'], 'Boolean');
            }
            if (data.hasOwnProperty('saml')) {
                obj['saml'] = EnterpriseSettingsEnterpriseSaml.constructFromObject(data['saml']);
            }
            if (data.hasOwnProperty('signup_enabled')) {
                obj['signup_enabled'] = ApiClient.convertToType(data['signup_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('smtp')) {
                obj['smtp'] = EnterpriseSettingsEnterpriseSmtp.constructFromObject(data['smtp']);
            }
            if (data.hasOwnProperty('snmp')) {
                obj['snmp'] = EnterpriseSettingsEnterpriseSnmp.constructFromObject(data['snmp']);
            }
            if (data.hasOwnProperty('subdomain_isolation')) {
                obj['subdomain_isolation'] = ApiClient.convertToType(data['subdomain_isolation'], 'Boolean');
            }
            if (data.hasOwnProperty('syslog')) {
                obj['syslog'] = EnterpriseSettingsEnterpriseSyslog.constructFromObject(data['syslog']);
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseSettingsEnterprise</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseSettingsEnterprise</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['admin_password'] && !(typeof data['admin_password'] === 'string' || data['admin_password'] instanceof String)) {
            throw new Error("Expected the field `admin_password` to be a primitive type in the JSON string but got " + data['admin_password']);
        }
        // ensure the json data is a string
        if (data['assets'] && !(typeof data['assets'] === 'string' || data['assets'] instanceof String)) {
            throw new Error("Expected the field `assets` to be a primitive type in the JSON string but got " + data['assets']);
        }
        // ensure the json data is a string
        if (data['auth_mode'] && !(typeof data['auth_mode'] === 'string' || data['auth_mode'] instanceof String)) {
            throw new Error("Expected the field `auth_mode` to be a primitive type in the JSON string but got " + data['auth_mode']);
        }
        // validate the optional field `avatar`
        if (data['avatar']) { // data not null
          EnterpriseSettingsEnterpriseAvatar.validateJSON(data['avatar']);
        }
        // validate the optional field `cas`
        if (data['cas']) { // data not null
          EnterpriseSettingsEnterpriseCas.validateJSON(data['cas']);
        }
        // validate the optional field `collectd`
        if (data['collectd']) { // data not null
          EnterpriseSettingsEnterpriseCollectd.validateJSON(data['collectd']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          EnterpriseSettingsEnterpriseCustomer.validateJSON(data['customer']);
        }
        // ensure the json data is a string
        if (data['github_hostname'] && !(typeof data['github_hostname'] === 'string' || data['github_hostname'] instanceof String)) {
            throw new Error("Expected the field `github_hostname` to be a primitive type in the JSON string but got " + data['github_hostname']);
        }
        // validate the optional field `github_oauth`
        if (data['github_oauth']) { // data not null
          EnterpriseSettingsEnterpriseGithubOauth.validateJSON(data['github_oauth']);
        }
        // validate the optional field `github_ssl`
        if (data['github_ssl']) { // data not null
          EnterpriseSettingsEnterpriseGithubSsl.validateJSON(data['github_ssl']);
        }
        // ensure the json data is a string
        if (data['http_proxy'] && !(typeof data['http_proxy'] === 'string' || data['http_proxy'] instanceof String)) {
            throw new Error("Expected the field `http_proxy` to be a primitive type in the JSON string but got " + data['http_proxy']);
        }
        // ensure the json data is a string
        if (data['identicons_host'] && !(typeof data['identicons_host'] === 'string' || data['identicons_host'] instanceof String)) {
            throw new Error("Expected the field `identicons_host` to be a primitive type in the JSON string but got " + data['identicons_host']);
        }
        // validate the optional field `ldap`
        if (data['ldap']) { // data not null
          EnterpriseSettingsEnterpriseLdap.validateJSON(data['ldap']);
        }
        // validate the optional field `license`
        if (data['license']) { // data not null
          EnterpriseSettingsEnterpriseLicense.validateJSON(data['license']);
        }
        // ensure the json data is a string
        if (data['load_balancer'] && !(typeof data['load_balancer'] === 'string' || data['load_balancer'] instanceof String)) {
            throw new Error("Expected the field `load_balancer` to be a primitive type in the JSON string but got " + data['load_balancer']);
        }
        // validate the optional field `mapping`
        if (data['mapping']) { // data not null
          EnterpriseSettingsEnterpriseMapping.validateJSON(data['mapping']);
        }
        // validate the optional field `ntp`
        if (data['ntp']) { // data not null
          EnterpriseSettingsEnterpriseNtp.validateJSON(data['ntp']);
        }
        // validate the optional field `pages`
        if (data['pages']) { // data not null
          BranchProtectionAllowDeletions.validateJSON(data['pages']);
        }
        // validate the optional field `saml`
        if (data['saml']) { // data not null
          EnterpriseSettingsEnterpriseSaml.validateJSON(data['saml']);
        }
        // validate the optional field `smtp`
        if (data['smtp']) { // data not null
          EnterpriseSettingsEnterpriseSmtp.validateJSON(data['smtp']);
        }
        // validate the optional field `snmp`
        if (data['snmp']) { // data not null
          EnterpriseSettingsEnterpriseSnmp.validateJSON(data['snmp']);
        }
        // validate the optional field `syslog`
        if (data['syslog']) { // data not null
          EnterpriseSettingsEnterpriseSyslog.validateJSON(data['syslog']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }

        return true;
    }


}



/**
 * @member {String} admin_password
 */
EnterpriseSettingsEnterprise.prototype['admin_password'] = undefined;

/**
 * @member {String} assets
 */
EnterpriseSettingsEnterprise.prototype['assets'] = undefined;

/**
 * @member {String} auth_mode
 */
EnterpriseSettingsEnterprise.prototype['auth_mode'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseAvatar} avatar
 */
EnterpriseSettingsEnterprise.prototype['avatar'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseCas} cas
 */
EnterpriseSettingsEnterprise.prototype['cas'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseCollectd} collectd
 */
EnterpriseSettingsEnterprise.prototype['collectd'] = undefined;

/**
 * @member {Number} configuration_id
 */
EnterpriseSettingsEnterprise.prototype['configuration_id'] = undefined;

/**
 * @member {Number} configuration_run_count
 */
EnterpriseSettingsEnterprise.prototype['configuration_run_count'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseCustomer} customer
 */
EnterpriseSettingsEnterprise.prototype['customer'] = undefined;

/**
 * @member {Boolean} expire_sessions
 */
EnterpriseSettingsEnterprise.prototype['expire_sessions'] = undefined;

/**
 * @member {String} github_hostname
 */
EnterpriseSettingsEnterprise.prototype['github_hostname'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseGithubOauth} github_oauth
 */
EnterpriseSettingsEnterprise.prototype['github_oauth'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseGithubSsl} github_ssl
 */
EnterpriseSettingsEnterprise.prototype['github_ssl'] = undefined;

/**
 * @member {String} http_proxy
 */
EnterpriseSettingsEnterprise.prototype['http_proxy'] = undefined;

/**
 * @member {String} identicons_host
 */
EnterpriseSettingsEnterprise.prototype['identicons_host'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseLdap} ldap
 */
EnterpriseSettingsEnterprise.prototype['ldap'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseLicense} license
 */
EnterpriseSettingsEnterprise.prototype['license'] = undefined;

/**
 * @member {String} load_balancer
 */
EnterpriseSettingsEnterprise.prototype['load_balancer'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseMapping} mapping
 */
EnterpriseSettingsEnterprise.prototype['mapping'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseNtp} ntp
 */
EnterpriseSettingsEnterprise.prototype['ntp'] = undefined;

/**
 * @member {module:model/BranchProtectionAllowDeletions} pages
 */
EnterpriseSettingsEnterprise.prototype['pages'] = undefined;

/**
 * @member {Boolean} private_mode
 */
EnterpriseSettingsEnterprise.prototype['private_mode'] = undefined;

/**
 * @member {Boolean} public_pages
 */
EnterpriseSettingsEnterprise.prototype['public_pages'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseSaml} saml
 */
EnterpriseSettingsEnterprise.prototype['saml'] = undefined;

/**
 * @member {Boolean} signup_enabled
 */
EnterpriseSettingsEnterprise.prototype['signup_enabled'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseSmtp} smtp
 */
EnterpriseSettingsEnterprise.prototype['smtp'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseSnmp} snmp
 */
EnterpriseSettingsEnterprise.prototype['snmp'] = undefined;

/**
 * @member {Boolean} subdomain_isolation
 */
EnterpriseSettingsEnterprise.prototype['subdomain_isolation'] = undefined;

/**
 * @member {module:model/EnterpriseSettingsEnterpriseSyslog} syslog
 */
EnterpriseSettingsEnterprise.prototype['syslog'] = undefined;

/**
 * @member {String} timezone
 */
EnterpriseSettingsEnterprise.prototype['timezone'] = undefined;






export default EnterpriseSettingsEnterprise;

