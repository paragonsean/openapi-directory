/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllowedActions from './AllowedActions';

/**
 * The ActionsRepositoryPermissions model module.
 * @module model/ActionsRepositoryPermissions
 * @version 1.1.4
 */
class ActionsRepositoryPermissions {
    /**
     * Constructs a new <code>ActionsRepositoryPermissions</code>.
     * @alias module:model/ActionsRepositoryPermissions
     * @param enabled {Boolean} Whether GitHub Actions is enabled on the repository.
     */
    constructor(enabled) { 
        
        ActionsRepositoryPermissions.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['enabled'] = enabled;
    }

    /**
     * Constructs a <code>ActionsRepositoryPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsRepositoryPermissions} obj Optional instance to populate.
     * @return {module:model/ActionsRepositoryPermissions} The populated <code>ActionsRepositoryPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsRepositoryPermissions();

            if (data.hasOwnProperty('allowed_actions')) {
                obj['allowed_actions'] = AllowedActions.constructFromObject(data['allowed_actions']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('selected_actions_url')) {
                obj['selected_actions_url'] = ApiClient.convertToType(data['selected_actions_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsRepositoryPermissions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsRepositoryPermissions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionsRepositoryPermissions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['selected_actions_url'] && !(typeof data['selected_actions_url'] === 'string' || data['selected_actions_url'] instanceof String)) {
            throw new Error("Expected the field `selected_actions_url` to be a primitive type in the JSON string but got " + data['selected_actions_url']);
        }

        return true;
    }


}

ActionsRepositoryPermissions.RequiredProperties = ["enabled"];

/**
 * @member {module:model/AllowedActions} allowed_actions
 */
ActionsRepositoryPermissions.prototype['allowed_actions'] = undefined;

/**
 * Whether GitHub Actions is enabled on the repository.
 * @member {Boolean} enabled
 */
ActionsRepositoryPermissions.prototype['enabled'] = undefined;

/**
 * The API URL to use to get or set the actions that are allowed to run, when `allowed_actions` is set to `selected`.
 * @member {String} selected_actions_url
 */
ActionsRepositoryPermissions.prototype['selected_actions_url'] = undefined;






export default ActionsRepositoryPermissions;

