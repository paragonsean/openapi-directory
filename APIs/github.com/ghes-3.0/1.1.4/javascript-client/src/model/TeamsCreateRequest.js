/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TeamsCreateRequest model module.
 * @module model/TeamsCreateRequest
 * @version 1.1.4
 */
class TeamsCreateRequest {
    /**
     * Constructs a new <code>TeamsCreateRequest</code>.
     * @alias module:model/TeamsCreateRequest
     * @param name {String} The name of the team.
     */
    constructor(name) { 
        
        TeamsCreateRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
        obj['permission'] = 'pull';
    }

    /**
     * Constructs a <code>TeamsCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamsCreateRequest} obj Optional instance to populate.
     * @return {module:model/TeamsCreateRequest} The populated <code>TeamsCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamsCreateRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('ldap_dn')) {
                obj['ldap_dn'] = ApiClient.convertToType(data['ldap_dn'], 'String');
            }
            if (data.hasOwnProperty('maintainers')) {
                obj['maintainers'] = ApiClient.convertToType(data['maintainers'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent_team_id')) {
                obj['parent_team_id'] = ApiClient.convertToType(data['parent_team_id'], 'Number');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], 'String');
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = ApiClient.convertToType(data['privacy'], 'String');
            }
            if (data.hasOwnProperty('repo_names')) {
                obj['repo_names'] = ApiClient.convertToType(data['repo_names'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamsCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamsCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TeamsCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['ldap_dn'] && !(typeof data['ldap_dn'] === 'string' || data['ldap_dn'] instanceof String)) {
            throw new Error("Expected the field `ldap_dn` to be a primitive type in the JSON string but got " + data['ldap_dn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['maintainers'])) {
            throw new Error("Expected the field `maintainers` to be an array in the JSON data but got " + data['maintainers']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['permission'] && !(typeof data['permission'] === 'string' || data['permission'] instanceof String)) {
            throw new Error("Expected the field `permission` to be a primitive type in the JSON string but got " + data['permission']);
        }
        // ensure the json data is a string
        if (data['privacy'] && !(typeof data['privacy'] === 'string' || data['privacy'] instanceof String)) {
            throw new Error("Expected the field `privacy` to be a primitive type in the JSON string but got " + data['privacy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['repo_names'])) {
            throw new Error("Expected the field `repo_names` to be an array in the JSON data but got " + data['repo_names']);
        }

        return true;
    }


}

TeamsCreateRequest.RequiredProperties = ["name"];

/**
 * The description of the team.
 * @member {String} description
 */
TeamsCreateRequest.prototype['description'] = undefined;

/**
 * The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the \"[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.0/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)\" endpoint to change the LDAP DN. For more information, see \"[Using LDAP](https://docs.github.com/enterprise-server@3.0/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync).\"
 * @member {String} ldap_dn
 */
TeamsCreateRequest.prototype['ldap_dn'] = undefined;

/**
 * List GitHub IDs for organization members who will become team maintainers.
 * @member {Array.<String>} maintainers
 */
TeamsCreateRequest.prototype['maintainers'] = undefined;

/**
 * The name of the team.
 * @member {String} name
 */
TeamsCreateRequest.prototype['name'] = undefined;

/**
 * The ID of a team to set as the parent team.
 * @member {Number} parent_team_id
 */
TeamsCreateRequest.prototype['parent_team_id'] = undefined;

/**
 * **Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:   \\* `pull` - team members can pull, but not push to or administer newly-added repositories.   \\* `push` - team members can pull and push, but not administer newly-added repositories.
 * @member {module:model/TeamsCreateRequest.PermissionEnum} permission
 * @default 'pull'
 */
TeamsCreateRequest.prototype['permission'] = 'pull';

/**
 * The level of privacy this team should have. The options are:   **For a non-nested team:**   \\* `secret` - only visible to organization owners and members of this team.   \\* `closed` - visible to all members of this organization.   Default: `secret`   **For a parent or child team:**   \\* `closed` - visible to all members of this organization.   Default for child team: `closed`
 * @member {module:model/TeamsCreateRequest.PrivacyEnum} privacy
 */
TeamsCreateRequest.prototype['privacy'] = undefined;

/**
 * The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.
 * @member {Array.<String>} repo_names
 */
TeamsCreateRequest.prototype['repo_names'] = undefined;





/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
TeamsCreateRequest['PermissionEnum'] = {

    /**
     * value: "pull"
     * @const
     */
    "pull": "pull",

    /**
     * value: "push"
     * @const
     */
    "push": "push"
};


/**
 * Allowed values for the <code>privacy</code> property.
 * @enum {String}
 * @readonly
 */
TeamsCreateRequest['PrivacyEnum'] = {

    /**
     * value: "secret"
     * @const
     */
    "secret": "secret",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default TeamsCreateRequest;

