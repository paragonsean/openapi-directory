/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddedToProjectIssueEvent;
import org.openapitools.client.model.AddedToProjectIssueEventProjectCard;
import org.openapitools.client.model.AuthorAssociation;
import org.openapitools.client.model.CommitComment;
import org.openapitools.client.model.ConvertedNoteToIssueIssueEvent;
import org.openapitools.client.model.DemilestonedIssueEvent;
import org.openapitools.client.model.DemilestonedIssueEventMilestone;
import org.openapitools.client.model.GitCommitAuthor;
import org.openapitools.client.model.GitCommitParentsInner;
import org.openapitools.client.model.GitCommitTree;
import org.openapitools.client.model.GitCommitVerification;
import org.openapitools.client.model.LabeledIssueEvent;
import org.openapitools.client.model.LabeledIssueEventLabel;
import org.openapitools.client.model.LockedIssueEvent;
import org.openapitools.client.model.MilestonedIssueEvent;
import org.openapitools.client.model.MovedColumnInProjectIssueEvent;
import org.openapitools.client.model.NullableIntegration;
import org.openapitools.client.model.PullRequestReviewLinks;
import org.openapitools.client.model.ReactionRollup;
import org.openapitools.client.model.RemovedFromProjectIssueEvent;
import org.openapitools.client.model.RenamedIssueEvent;
import org.openapitools.client.model.RenamedIssueEventRename;
import org.openapitools.client.model.ReviewDismissedIssueEvent;
import org.openapitools.client.model.ReviewDismissedIssueEventDismissedReview;
import org.openapitools.client.model.ReviewRequestRemovedIssueEvent;
import org.openapitools.client.model.ReviewRequestedIssueEvent;
import org.openapitools.client.model.SimpleUser;
import org.openapitools.client.model.StateChangeIssueEvent;
import org.openapitools.client.model.Team;
import org.openapitools.client.model.TimelineAssignedIssueEvent;
import org.openapitools.client.model.TimelineCommentEvent;
import org.openapitools.client.model.TimelineCommitCommentedEvent;
import org.openapitools.client.model.TimelineCommittedEvent;
import org.openapitools.client.model.TimelineCrossReferencedEvent;
import org.openapitools.client.model.TimelineCrossReferencedEventSource;
import org.openapitools.client.model.TimelineLineCommentedEvent;
import org.openapitools.client.model.TimelineReviewedEvent;
import org.openapitools.client.model.TimelineUnassignedIssueEvent;
import org.openapitools.client.model.UnlabeledIssueEvent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TimelineIssueEvents
 */
public class TimelineIssueEventsTest {
    private final TimelineIssueEvents model = new TimelineIssueEvents();

    /**
     * Model tests for TimelineIssueEvents
     */
    @Test
    public void testTimelineIssueEvents() {
        // TODO: test TimelineIssueEvents
    }

    /**
     * Test the property 'actor'
     */
    @Test
    public void actorTest() {
        // TODO: test actor
    }

    /**
     * Test the property 'commitId'
     */
    @Test
    public void commitIdTest() {
        // TODO: test commitId
    }

    /**
     * Test the property 'commitUrl'
     */
    @Test
    public void commitUrlTest() {
        // TODO: test commitUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'event'
     */
    @Test
    public void eventTest() {
        // TODO: test event
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'nodeId'
     */
    @Test
    public void nodeIdTest() {
        // TODO: test nodeId
    }

    /**
     * Test the property 'performedViaGithubApp'
     */
    @Test
    public void performedViaGithubAppTest() {
        // TODO: test performedViaGithubApp
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'milestone'
     */
    @Test
    public void milestoneTest() {
        // TODO: test milestone
    }

    /**
     * Test the property 'rename'
     */
    @Test
    public void renameTest() {
        // TODO: test rename
    }

    /**
     * Test the property 'requestedReviewer'
     */
    @Test
    public void requestedReviewerTest() {
        // TODO: test requestedReviewer
    }

    /**
     * Test the property 'requestedTeam'
     */
    @Test
    public void requestedTeamTest() {
        // TODO: test requestedTeam
    }

    /**
     * Test the property 'reviewRequester'
     */
    @Test
    public void reviewRequesterTest() {
        // TODO: test reviewRequester
    }

    /**
     * Test the property 'dismissedReview'
     */
    @Test
    public void dismissedReviewTest() {
        // TODO: test dismissedReview
    }

    /**
     * Test the property 'lockReason'
     */
    @Test
    public void lockReasonTest() {
        // TODO: test lockReason
    }

    /**
     * Test the property 'projectCard'
     */
    @Test
    public void projectCardTest() {
        // TODO: test projectCard
    }

    /**
     * Test the property 'authorAssociation'
     */
    @Test
    public void authorAssociationTest() {
        // TODO: test authorAssociation
    }

    /**
     * Test the property 'body'
     */
    @Test
    public void bodyTest() {
        // TODO: test body
    }

    /**
     * Test the property 'bodyHtml'
     */
    @Test
    public void bodyHtmlTest() {
        // TODO: test bodyHtml
    }

    /**
     * Test the property 'bodyText'
     */
    @Test
    public void bodyTextTest() {
        // TODO: test bodyText
    }

    /**
     * Test the property 'htmlUrl'
     */
    @Test
    public void htmlUrlTest() {
        // TODO: test htmlUrl
    }

    /**
     * Test the property 'issueUrl'
     */
    @Test
    public void issueUrlTest() {
        // TODO: test issueUrl
    }

    /**
     * Test the property 'reactions'
     */
    @Test
    public void reactionsTest() {
        // TODO: test reactions
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'author'
     */
    @Test
    public void authorTest() {
        // TODO: test author
    }

    /**
     * Test the property 'committer'
     */
    @Test
    public void committerTest() {
        // TODO: test committer
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'parents'
     */
    @Test
    public void parentsTest() {
        // TODO: test parents
    }

    /**
     * Test the property 'sha'
     */
    @Test
    public void shaTest() {
        // TODO: test sha
    }

    /**
     * Test the property 'tree'
     */
    @Test
    public void treeTest() {
        // TODO: test tree
    }

    /**
     * Test the property 'verification'
     */
    @Test
    public void verificationTest() {
        // TODO: test verification
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'pullRequestUrl'
     */
    @Test
    public void pullRequestUrlTest() {
        // TODO: test pullRequestUrl
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'submittedAt'
     */
    @Test
    public void submittedAtTest() {
        // TODO: test submittedAt
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'assignee'
     */
    @Test
    public void assigneeTest() {
        // TODO: test assignee
    }

}
