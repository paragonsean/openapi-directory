# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ProjectsMoveColumnRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: str=None):
        """ProjectsMoveColumnRequest - a model defined in OpenAPI

        :param position: The position of this ProjectsMoveColumnRequest.
        """
        self.openapi_types = {
            'position': str
        }

        self.attribute_map = {
            'position': 'position'
        }

        self._position = position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectsMoveColumnRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The projects_move_column_request of this ProjectsMoveColumnRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this ProjectsMoveColumnRequest.

        The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.

        :return: The position of this ProjectsMoveColumnRequest.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ProjectsMoveColumnRequest.

        The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.

        :param position: The position of this ProjectsMoveColumnRequest.
        :type position: str
        """
        if position is None:
            raise ValueError("Invalid value for `position`, must not be `None`")
        if position is not None and not re.search(r'^(?:first|last|after:\d+)$', position):
            raise ValueError("Invalid value for `position`, must be a follow pattern or equal to `/^(?:first|last|after:\d+)$/`")

        self._position = position
