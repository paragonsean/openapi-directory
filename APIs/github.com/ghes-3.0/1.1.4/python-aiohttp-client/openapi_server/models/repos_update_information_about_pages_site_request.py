# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repos_update_information_about_pages_site_request_source import ReposUpdateInformationAboutPagesSiteRequestSource
from openapi_server import util


class ReposUpdateInformationAboutPagesSiteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cname: str=None, https_enforced: bool=None, public: bool=None, source: ReposUpdateInformationAboutPagesSiteRequestSource=None):
        """ReposUpdateInformationAboutPagesSiteRequest - a model defined in OpenAPI

        :param cname: The cname of this ReposUpdateInformationAboutPagesSiteRequest.
        :param https_enforced: The https_enforced of this ReposUpdateInformationAboutPagesSiteRequest.
        :param public: The public of this ReposUpdateInformationAboutPagesSiteRequest.
        :param source: The source of this ReposUpdateInformationAboutPagesSiteRequest.
        """
        self.openapi_types = {
            'cname': str,
            'https_enforced': bool,
            'public': bool,
            'source': ReposUpdateInformationAboutPagesSiteRequestSource
        }

        self.attribute_map = {
            'cname': 'cname',
            'https_enforced': 'https_enforced',
            'public': 'public',
            'source': 'source'
        }

        self._cname = cname
        self._https_enforced = https_enforced
        self._public = public
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposUpdateInformationAboutPagesSiteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_update_information_about_pages_site_request of this ReposUpdateInformationAboutPagesSiteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cname(self):
        """Gets the cname of this ReposUpdateInformationAboutPagesSiteRequest.

        Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/).\"

        :return: The cname of this ReposUpdateInformationAboutPagesSiteRequest.
        :rtype: str
        """
        return self._cname

    @cname.setter
    def cname(self, cname):
        """Sets the cname of this ReposUpdateInformationAboutPagesSiteRequest.

        Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/).\"

        :param cname: The cname of this ReposUpdateInformationAboutPagesSiteRequest.
        :type cname: str
        """

        self._cname = cname

    @property
    def https_enforced(self):
        """Gets the https_enforced of this ReposUpdateInformationAboutPagesSiteRequest.

        Specify whether HTTPS should be enforced for the repository.

        :return: The https_enforced of this ReposUpdateInformationAboutPagesSiteRequest.
        :rtype: bool
        """
        return self._https_enforced

    @https_enforced.setter
    def https_enforced(self, https_enforced):
        """Sets the https_enforced of this ReposUpdateInformationAboutPagesSiteRequest.

        Specify whether HTTPS should be enforced for the repository.

        :param https_enforced: The https_enforced of this ReposUpdateInformationAboutPagesSiteRequest.
        :type https_enforced: bool
        """

        self._https_enforced = https_enforced

    @property
    def public(self):
        """Gets the public of this ReposUpdateInformationAboutPagesSiteRequest.

        Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility. This feature is only available to repositories in an organization on an Enterprise plan.

        :return: The public of this ReposUpdateInformationAboutPagesSiteRequest.
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this ReposUpdateInformationAboutPagesSiteRequest.

        Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility. This feature is only available to repositories in an organization on an Enterprise plan.

        :param public: The public of this ReposUpdateInformationAboutPagesSiteRequest.
        :type public: bool
        """

        self._public = public

    @property
    def source(self):
        """Gets the source of this ReposUpdateInformationAboutPagesSiteRequest.


        :return: The source of this ReposUpdateInformationAboutPagesSiteRequest.
        :rtype: ReposUpdateInformationAboutPagesSiteRequestSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ReposUpdateInformationAboutPagesSiteRequest.


        :param source: The source of this ReposUpdateInformationAboutPagesSiteRequest.
        :type source: ReposUpdateInformationAboutPagesSiteRequestSource
        """

        self._source = source
