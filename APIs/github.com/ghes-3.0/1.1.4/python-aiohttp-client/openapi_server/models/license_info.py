# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.license_info_seats import LicenseInfoSeats
from openapi_server import util


class LicenseInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days_until_expiration: int=None, expire_at: str=None, kind: str=None, seats: LicenseInfoSeats=None, seats_available: LicenseInfoSeats=None, seats_used: int=None):
        """LicenseInfo - a model defined in OpenAPI

        :param days_until_expiration: The days_until_expiration of this LicenseInfo.
        :param expire_at: The expire_at of this LicenseInfo.
        :param kind: The kind of this LicenseInfo.
        :param seats: The seats of this LicenseInfo.
        :param seats_available: The seats_available of this LicenseInfo.
        :param seats_used: The seats_used of this LicenseInfo.
        """
        self.openapi_types = {
            'days_until_expiration': int,
            'expire_at': str,
            'kind': str,
            'seats': LicenseInfoSeats,
            'seats_available': LicenseInfoSeats,
            'seats_used': int
        }

        self.attribute_map = {
            'days_until_expiration': 'days_until_expiration',
            'expire_at': 'expire_at',
            'kind': 'kind',
            'seats': 'seats',
            'seats_available': 'seats_available',
            'seats_used': 'seats_used'
        }

        self._days_until_expiration = days_until_expiration
        self._expire_at = expire_at
        self._kind = kind
        self._seats = seats
        self._seats_available = seats_available
        self._seats_used = seats_used

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LicenseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The license-info of this LicenseInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days_until_expiration(self):
        """Gets the days_until_expiration of this LicenseInfo.


        :return: The days_until_expiration of this LicenseInfo.
        :rtype: int
        """
        return self._days_until_expiration

    @days_until_expiration.setter
    def days_until_expiration(self, days_until_expiration):
        """Sets the days_until_expiration of this LicenseInfo.


        :param days_until_expiration: The days_until_expiration of this LicenseInfo.
        :type days_until_expiration: int
        """

        self._days_until_expiration = days_until_expiration

    @property
    def expire_at(self):
        """Gets the expire_at of this LicenseInfo.


        :return: The expire_at of this LicenseInfo.
        :rtype: str
        """
        return self._expire_at

    @expire_at.setter
    def expire_at(self, expire_at):
        """Sets the expire_at of this LicenseInfo.


        :param expire_at: The expire_at of this LicenseInfo.
        :type expire_at: str
        """

        self._expire_at = expire_at

    @property
    def kind(self):
        """Gets the kind of this LicenseInfo.


        :return: The kind of this LicenseInfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LicenseInfo.


        :param kind: The kind of this LicenseInfo.
        :type kind: str
        """

        self._kind = kind

    @property
    def seats(self):
        """Gets the seats of this LicenseInfo.


        :return: The seats of this LicenseInfo.
        :rtype: LicenseInfoSeats
        """
        return self._seats

    @seats.setter
    def seats(self, seats):
        """Sets the seats of this LicenseInfo.


        :param seats: The seats of this LicenseInfo.
        :type seats: LicenseInfoSeats
        """

        self._seats = seats

    @property
    def seats_available(self):
        """Gets the seats_available of this LicenseInfo.


        :return: The seats_available of this LicenseInfo.
        :rtype: LicenseInfoSeats
        """
        return self._seats_available

    @seats_available.setter
    def seats_available(self, seats_available):
        """Sets the seats_available of this LicenseInfo.


        :param seats_available: The seats_available of this LicenseInfo.
        :type seats_available: LicenseInfoSeats
        """

        self._seats_available = seats_available

    @property
    def seats_used(self):
        """Gets the seats_used of this LicenseInfo.


        :return: The seats_used of this LicenseInfo.
        :rtype: int
        """
        return self._seats_used

    @seats_used.setter
    def seats_used(self, seats_used):
        """Sets the seats_used of this LicenseInfo.


        :param seats_used: The seats_used of this LicenseInfo.
        :type seats_used: int
        """

        self._seats_used = seats_used
