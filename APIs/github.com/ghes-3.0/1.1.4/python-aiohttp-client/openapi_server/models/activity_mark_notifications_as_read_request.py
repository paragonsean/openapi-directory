# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityMarkNotificationsAsReadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_read_at: datetime=None, read: bool=None):
        """ActivityMarkNotificationsAsReadRequest - a model defined in OpenAPI

        :param last_read_at: The last_read_at of this ActivityMarkNotificationsAsReadRequest.
        :param read: The read of this ActivityMarkNotificationsAsReadRequest.
        """
        self.openapi_types = {
            'last_read_at': datetime,
            'read': bool
        }

        self.attribute_map = {
            'last_read_at': 'last_read_at',
            'read': 'read'
        }

        self._last_read_at = last_read_at
        self._read = read

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityMarkNotificationsAsReadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The activity_mark_notifications_as_read_request of this ActivityMarkNotificationsAsReadRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_read_at(self):
        """Gets the last_read_at of this ActivityMarkNotificationsAsReadRequest.

        Describes the last point that notifications were checked.

        :return: The last_read_at of this ActivityMarkNotificationsAsReadRequest.
        :rtype: datetime
        """
        return self._last_read_at

    @last_read_at.setter
    def last_read_at(self, last_read_at):
        """Sets the last_read_at of this ActivityMarkNotificationsAsReadRequest.

        Describes the last point that notifications were checked.

        :param last_read_at: The last_read_at of this ActivityMarkNotificationsAsReadRequest.
        :type last_read_at: datetime
        """

        self._last_read_at = last_read_at

    @property
    def read(self):
        """Gets the read of this ActivityMarkNotificationsAsReadRequest.

        Whether the notification has been read.

        :return: The read of this ActivityMarkNotificationsAsReadRequest.
        :rtype: bool
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this ActivityMarkNotificationsAsReadRequest.

        Whether the notification has been read.

        :param read: The read of this ActivityMarkNotificationsAsReadRequest.
        :type read: bool
        """

        self._read = read
