# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BasicError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documentation_url: str=None, message: str=None, status: str=None, url: str=None):
        """BasicError - a model defined in OpenAPI

        :param documentation_url: The documentation_url of this BasicError.
        :param message: The message of this BasicError.
        :param status: The status of this BasicError.
        :param url: The url of this BasicError.
        """
        self.openapi_types = {
            'documentation_url': str,
            'message': str,
            'status': str,
            'url': str
        }

        self.attribute_map = {
            'documentation_url': 'documentation_url',
            'message': 'message',
            'status': 'status',
            'url': 'url'
        }

        self._documentation_url = documentation_url
        self._message = message
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BasicError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The basic-error of this BasicError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documentation_url(self):
        """Gets the documentation_url of this BasicError.


        :return: The documentation_url of this BasicError.
        :rtype: str
        """
        return self._documentation_url

    @documentation_url.setter
    def documentation_url(self, documentation_url):
        """Sets the documentation_url of this BasicError.


        :param documentation_url: The documentation_url of this BasicError.
        :type documentation_url: str
        """

        self._documentation_url = documentation_url

    @property
    def message(self):
        """Gets the message of this BasicError.


        :return: The message of this BasicError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BasicError.


        :param message: The message of this BasicError.
        :type message: str
        """

        self._message = message

    @property
    def status(self):
        """Gets the status of this BasicError.


        :return: The status of this BasicError.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BasicError.


        :param status: The status of this BasicError.
        :type status: str
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this BasicError.


        :return: The url of this BasicError.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this BasicError.


        :param url: The url of this BasicError.
        :type url: str
        """

        self._url = url
