# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ActionsCreateOrUpdateRepoSecretRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encrypted_value: str=None, key_id: str=None):
        """ActionsCreateOrUpdateRepoSecretRequest - a model defined in OpenAPI

        :param encrypted_value: The encrypted_value of this ActionsCreateOrUpdateRepoSecretRequest.
        :param key_id: The key_id of this ActionsCreateOrUpdateRepoSecretRequest.
        """
        self.openapi_types = {
            'encrypted_value': str,
            'key_id': str
        }

        self.attribute_map = {
            'encrypted_value': 'encrypted_value',
            'key_id': 'key_id'
        }

        self._encrypted_value = encrypted_value
        self._key_id = key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionsCreateOrUpdateRepoSecretRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The actions_create_or_update_repo_secret_request of this ActionsCreateOrUpdateRepoSecretRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encrypted_value(self):
        """Gets the encrypted_value of this ActionsCreateOrUpdateRepoSecretRequest.

        Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/enterprise-server@3.0/rest/reference/actions#get-a-repository-public-key) endpoint.

        :return: The encrypted_value of this ActionsCreateOrUpdateRepoSecretRequest.
        :rtype: str
        """
        return self._encrypted_value

    @encrypted_value.setter
    def encrypted_value(self, encrypted_value):
        """Sets the encrypted_value of this ActionsCreateOrUpdateRepoSecretRequest.

        Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/enterprise-server@3.0/rest/reference/actions#get-a-repository-public-key) endpoint.

        :param encrypted_value: The encrypted_value of this ActionsCreateOrUpdateRepoSecretRequest.
        :type encrypted_value: str
        """
        if encrypted_value is not None and not re.search(r'^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})$', encrypted_value):
            raise ValueError("Invalid value for `encrypted_value`, must be a follow pattern or equal to `/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{4})$/`")

        self._encrypted_value = encrypted_value

    @property
    def key_id(self):
        """Gets the key_id of this ActionsCreateOrUpdateRepoSecretRequest.

        ID of the key you used to encrypt the secret.

        :return: The key_id of this ActionsCreateOrUpdateRepoSecretRequest.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this ActionsCreateOrUpdateRepoSecretRequest.

        ID of the key you used to encrypt the secret.

        :param key_id: The key_id of this ActionsCreateOrUpdateRepoSecretRequest.
        :type key_id: str
        """

        self._key_id = key_id
