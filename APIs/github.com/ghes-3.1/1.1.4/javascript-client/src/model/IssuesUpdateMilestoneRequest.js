/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssuesUpdateMilestoneRequest model module.
 * @module model/IssuesUpdateMilestoneRequest
 * @version 1.1.4
 */
class IssuesUpdateMilestoneRequest {
    /**
     * Constructs a new <code>IssuesUpdateMilestoneRequest</code>.
     * @alias module:model/IssuesUpdateMilestoneRequest
     */
    constructor() { 
        
        IssuesUpdateMilestoneRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['state'] = 'open';
    }

    /**
     * Constructs a <code>IssuesUpdateMilestoneRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuesUpdateMilestoneRequest} obj Optional instance to populate.
     * @return {module:model/IssuesUpdateMilestoneRequest} The populated <code>IssuesUpdateMilestoneRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuesUpdateMilestoneRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('due_on')) {
                obj['due_on'] = ApiClient.convertToType(data['due_on'], 'Date');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuesUpdateMilestoneRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuesUpdateMilestoneRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * A description of the milestone.
 * @member {String} description
 */
IssuesUpdateMilestoneRequest.prototype['description'] = undefined;

/**
 * The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} due_on
 */
IssuesUpdateMilestoneRequest.prototype['due_on'] = undefined;

/**
 * The state of the milestone. Either `open` or `closed`.
 * @member {module:model/IssuesUpdateMilestoneRequest.StateEnum} state
 * @default 'open'
 */
IssuesUpdateMilestoneRequest.prototype['state'] = 'open';

/**
 * The title of the milestone.
 * @member {String} title
 */
IssuesUpdateMilestoneRequest.prototype['title'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
IssuesUpdateMilestoneRequest['StateEnum'] = {

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default IssuesUpdateMilestoneRequest;

