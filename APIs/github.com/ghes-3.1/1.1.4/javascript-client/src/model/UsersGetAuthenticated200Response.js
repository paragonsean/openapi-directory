/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LdapMappingUserPlan from './LdapMappingUserPlan';
import PrivateUser from './PrivateUser';
import PublicUser from './PublicUser';

/**
 * The UsersGetAuthenticated200Response model module.
 * @module model/UsersGetAuthenticated200Response
 * @version 1.1.4
 */
class UsersGetAuthenticated200Response {
    /**
     * Constructs a new <code>UsersGetAuthenticated200Response</code>.
     * @alias module:model/UsersGetAuthenticated200Response
     * @param {(module:model/PrivateUser|module:model/PublicUser)} instance The actual instance to initialize UsersGetAuthenticated200Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "PrivateUser") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PrivateUser.validateJSON(instance); // throw an exception if no match
                // create PrivateUser from JS object
                this.actualInstance = PrivateUser.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PrivateUser
            errorMessages.push("Failed to construct PrivateUser: " + err)
        }

        try {
            if (typeof instance === "PublicUser") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PublicUser.validateJSON(instance); // throw an exception if no match
                // create PublicUser from JS object
                this.actualInstance = PublicUser.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PublicUser
            errorMessages.push("Failed to construct PublicUser: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `UsersGetAuthenticated200Response` with oneOf schemas PrivateUser, PublicUser. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `UsersGetAuthenticated200Response` with oneOf schemas PrivateUser, PublicUser. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>UsersGetAuthenticated200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsersGetAuthenticated200Response} obj Optional instance to populate.
     * @return {module:model/UsersGetAuthenticated200Response} The populated <code>UsersGetAuthenticated200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new UsersGetAuthenticated200Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>PrivateUser</code>, <code>PublicUser</code>.
     * @return {(module:model/PrivateUser|module:model/PublicUser)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>PrivateUser</code>, <code>PublicUser</code>.
     * @param {(module:model/PrivateUser|module:model/PublicUser)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = UsersGetAuthenticated200Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of UsersGetAuthenticated200Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/UsersGetAuthenticated200Response} An instance of UsersGetAuthenticated200Response.
     */
    static fromJSON = function(json_string){
        return UsersGetAuthenticated200Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {String} avatar_url
 */
UsersGetAuthenticated200Response.prototype['avatar_url'] = undefined;

/**
 * @member {String} bio
 */
UsersGetAuthenticated200Response.prototype['bio'] = undefined;

/**
 * @member {String} blog
 */
UsersGetAuthenticated200Response.prototype['blog'] = undefined;

/**
 * @member {Boolean} business_plus
 */
UsersGetAuthenticated200Response.prototype['business_plus'] = undefined;

/**
 * @member {Number} collaborators
 */
UsersGetAuthenticated200Response.prototype['collaborators'] = undefined;

/**
 * @member {String} company
 */
UsersGetAuthenticated200Response.prototype['company'] = undefined;

/**
 * @member {Date} created_at
 */
UsersGetAuthenticated200Response.prototype['created_at'] = undefined;

/**
 * @member {Number} disk_usage
 */
UsersGetAuthenticated200Response.prototype['disk_usage'] = undefined;

/**
 * @member {String} email
 */
UsersGetAuthenticated200Response.prototype['email'] = undefined;

/**
 * @member {String} events_url
 */
UsersGetAuthenticated200Response.prototype['events_url'] = undefined;

/**
 * @member {Number} followers
 */
UsersGetAuthenticated200Response.prototype['followers'] = undefined;

/**
 * @member {String} followers_url
 */
UsersGetAuthenticated200Response.prototype['followers_url'] = undefined;

/**
 * @member {Number} following
 */
UsersGetAuthenticated200Response.prototype['following'] = undefined;

/**
 * @member {String} following_url
 */
UsersGetAuthenticated200Response.prototype['following_url'] = undefined;

/**
 * @member {String} gists_url
 */
UsersGetAuthenticated200Response.prototype['gists_url'] = undefined;

/**
 * @member {String} gravatar_id
 */
UsersGetAuthenticated200Response.prototype['gravatar_id'] = undefined;

/**
 * @member {Boolean} hireable
 */
UsersGetAuthenticated200Response.prototype['hireable'] = undefined;

/**
 * @member {String} html_url
 */
UsersGetAuthenticated200Response.prototype['html_url'] = undefined;

/**
 * @member {Number} id
 */
UsersGetAuthenticated200Response.prototype['id'] = undefined;

/**
 * @member {String} ldap_dn
 */
UsersGetAuthenticated200Response.prototype['ldap_dn'] = undefined;

/**
 * @member {String} location
 */
UsersGetAuthenticated200Response.prototype['location'] = undefined;

/**
 * @member {String} login
 */
UsersGetAuthenticated200Response.prototype['login'] = undefined;

/**
 * @member {String} name
 */
UsersGetAuthenticated200Response.prototype['name'] = undefined;

/**
 * @member {String} node_id
 */
UsersGetAuthenticated200Response.prototype['node_id'] = undefined;

/**
 * @member {String} organizations_url
 */
UsersGetAuthenticated200Response.prototype['organizations_url'] = undefined;

/**
 * @member {Number} owned_private_repos
 */
UsersGetAuthenticated200Response.prototype['owned_private_repos'] = undefined;

/**
 * @member {module:model/LdapMappingUserPlan} plan
 */
UsersGetAuthenticated200Response.prototype['plan'] = undefined;

/**
 * @member {Number} private_gists
 */
UsersGetAuthenticated200Response.prototype['private_gists'] = undefined;

/**
 * @member {Number} public_gists
 */
UsersGetAuthenticated200Response.prototype['public_gists'] = undefined;

/**
 * @member {Number} public_repos
 */
UsersGetAuthenticated200Response.prototype['public_repos'] = undefined;

/**
 * @member {String} received_events_url
 */
UsersGetAuthenticated200Response.prototype['received_events_url'] = undefined;

/**
 * @member {String} repos_url
 */
UsersGetAuthenticated200Response.prototype['repos_url'] = undefined;

/**
 * @member {Boolean} site_admin
 */
UsersGetAuthenticated200Response.prototype['site_admin'] = undefined;

/**
 * @member {String} starred_url
 */
UsersGetAuthenticated200Response.prototype['starred_url'] = undefined;

/**
 * @member {String} subscriptions_url
 */
UsersGetAuthenticated200Response.prototype['subscriptions_url'] = undefined;

/**
 * @member {Date} suspended_at
 */
UsersGetAuthenticated200Response.prototype['suspended_at'] = undefined;

/**
 * @member {Number} total_private_repos
 */
UsersGetAuthenticated200Response.prototype['total_private_repos'] = undefined;

/**
 * @member {String} twitter_username
 */
UsersGetAuthenticated200Response.prototype['twitter_username'] = undefined;

/**
 * @member {Boolean} two_factor_authentication
 */
UsersGetAuthenticated200Response.prototype['two_factor_authentication'] = undefined;

/**
 * @member {String} type
 */
UsersGetAuthenticated200Response.prototype['type'] = undefined;

/**
 * @member {Date} updated_at
 */
UsersGetAuthenticated200Response.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
UsersGetAuthenticated200Response.prototype['url'] = undefined;


UsersGetAuthenticated200Response.OneOf = ["PrivateUser", "PublicUser"];

export default UsersGetAuthenticated200Response;

