/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssuesCreateRequestLabelsInner from './IssuesCreateRequestLabelsInner';
import IssuesCreateRequestMilestone from './IssuesCreateRequestMilestone';
import IssuesCreateRequestTitle from './IssuesCreateRequestTitle';

/**
 * The IssuesCreateRequest model module.
 * @module model/IssuesCreateRequest
 * @version 1.1.4
 */
class IssuesCreateRequest {
    /**
     * Constructs a new <code>IssuesCreateRequest</code>.
     * @alias module:model/IssuesCreateRequest
     * @param title {module:model/IssuesCreateRequestTitle} 
     */
    constructor(title) { 
        
        IssuesCreateRequest.initialize(this, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title) { 
        obj['title'] = title;
    }

    /**
     * Constructs a <code>IssuesCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuesCreateRequest} obj Optional instance to populate.
     * @return {module:model/IssuesCreateRequest} The populated <code>IssuesCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuesCreateRequest();

            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = ApiClient.convertToType(data['assignee'], 'String');
            }
            if (data.hasOwnProperty('assignees')) {
                obj['assignees'] = ApiClient.convertToType(data['assignees'], ['String']);
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], [IssuesCreateRequestLabelsInner]);
            }
            if (data.hasOwnProperty('milestone')) {
                obj['milestone'] = IssuesCreateRequestMilestone.constructFromObject(data['milestone']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = IssuesCreateRequestTitle.constructFromObject(data['title']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuesCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuesCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssuesCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assignee'] && !(typeof data['assignee'] === 'string' || data['assignee'] instanceof String)) {
            throw new Error("Expected the field `assignee` to be a primitive type in the JSON string but got " + data['assignee']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['assignees'])) {
            throw new Error("Expected the field `assignees` to be an array in the JSON data but got " + data['assignees']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        if (data['labels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['labels'])) {
                throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
            }
            // validate the optional field `labels` (array)
            for (const item of data['labels']) {
                IssuesCreateRequestLabelsInner.validateJSON(item);
            };
        }
        // validate the optional field `milestone`
        if (data['milestone']) { // data not null
          IssuesCreateRequestMilestone.validateJSON(data['milestone']);
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          IssuesCreateRequestTitle.validateJSON(data['title']);
        }

        return true;
    }


}

IssuesCreateRequest.RequiredProperties = ["title"];

/**
 * Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_
 * @member {String} assignee
 */
IssuesCreateRequest.prototype['assignee'] = undefined;

/**
 * Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._
 * @member {Array.<String>} assignees
 */
IssuesCreateRequest.prototype['assignees'] = undefined;

/**
 * The contents of the issue.
 * @member {String} body
 */
IssuesCreateRequest.prototype['body'] = undefined;

/**
 * Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._
 * @member {Array.<module:model/IssuesCreateRequestLabelsInner>} labels
 */
IssuesCreateRequest.prototype['labels'] = undefined;

/**
 * @member {module:model/IssuesCreateRequestMilestone} milestone
 */
IssuesCreateRequest.prototype['milestone'] = undefined;

/**
 * @member {module:model/IssuesCreateRequestTitle} title
 */
IssuesCreateRequest.prototype['title'] = undefined;






export default IssuesCreateRequest;

