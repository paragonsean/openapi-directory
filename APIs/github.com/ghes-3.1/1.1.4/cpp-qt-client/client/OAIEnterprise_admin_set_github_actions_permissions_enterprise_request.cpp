/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_admin_set_github_actions_permissions_enterprise_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::OAIEnterprise_admin_set_github_actions_permissions_enterprise_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::OAIEnterprise_admin_set_github_actions_permissions_enterprise_request() {
    this->initializeModel();
}

OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::~OAIEnterprise_admin_set_github_actions_permissions_enterprise_request() {}

void OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::initializeModel() {

    m_allowed_actions_isSet = false;
    m_allowed_actions_isValid = false;

    m_enabled_organizations_isSet = false;
    m_enabled_organizations_isValid = false;
}

void OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::fromJsonObject(QJsonObject json) {

    m_allowed_actions_isValid = ::OpenAPI::fromJsonValue(m_allowed_actions, json[QString("allowed_actions")]);
    m_allowed_actions_isSet = !json[QString("allowed_actions")].isNull() && m_allowed_actions_isValid;

    m_enabled_organizations_isValid = ::OpenAPI::fromJsonValue(m_enabled_organizations, json[QString("enabled_organizations")]);
    m_enabled_organizations_isSet = !json[QString("enabled_organizations")].isNull() && m_enabled_organizations_isValid;
}

QString OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_actions.isSet()) {
        obj.insert(QString("allowed_actions"), ::OpenAPI::toJsonValue(m_allowed_actions));
    }
    if (m_enabled_organizations.isSet()) {
        obj.insert(QString("enabled_organizations"), ::OpenAPI::toJsonValue(m_enabled_organizations));
    }
    return obj;
}

OAIAllowed_actions OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::getAllowedActions() const {
    return m_allowed_actions;
}
void OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::setAllowedActions(const OAIAllowed_actions &allowed_actions) {
    m_allowed_actions = allowed_actions;
    m_allowed_actions_isSet = true;
}

bool OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::is_allowed_actions_Set() const{
    return m_allowed_actions_isSet;
}

bool OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::is_allowed_actions_Valid() const{
    return m_allowed_actions_isValid;
}

OAIEnabled_organizations OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::getEnabledOrganizations() const {
    return m_enabled_organizations;
}
void OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::setEnabledOrganizations(const OAIEnabled_organizations &enabled_organizations) {
    m_enabled_organizations = enabled_organizations;
    m_enabled_organizations_isSet = true;
}

bool OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::is_enabled_organizations_Set() const{
    return m_enabled_organizations_isSet;
}

bool OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::is_enabled_organizations_Valid() const{
    return m_enabled_organizations_isValid;
}

bool OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_organizations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_admin_set_github_actions_permissions_enterprise_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_organizations_isValid && true;
}

} // namespace OpenAPI
