/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstallation.h
 *
 * Installation
 */

#ifndef OAIInstallation_H
#define OAIInstallation_H

#include <QJsonObject>

#include "OAIApp_permissions.h"
#include "OAIInstallation_account.h"
#include "OAINullable_simple_user.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstallation_account;
class OAIApp_permissions;
class OAINullable_simple_user;

class OAIInstallation : public OAIObject {
public:
    OAIInstallation();
    OAIInstallation(QString json);
    ~OAIInstallation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessTokensUrl() const;
    void setAccessTokensUrl(const QString &access_tokens_url);
    bool is_access_tokens_url_Set() const;
    bool is_access_tokens_url_Valid() const;

    OAIInstallation_account getAccount() const;
    void setAccount(const OAIInstallation_account &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    qint32 getAppId() const;
    void setAppId(const qint32 &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getAppSlug() const;
    void setAppSlug(const QString &app_slug);
    bool is_app_slug_Set() const;
    bool is_app_slug_Valid() const;

    QString getContactEmail() const;
    void setContactEmail(const QString &contact_email);
    bool is_contact_email_Set() const;
    bool is_contact_email_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<QString> getEvents() const;
    void setEvents(const QList<QString> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    bool isHasMultipleSingleFiles() const;
    void setHasMultipleSingleFiles(const bool &has_multiple_single_files);
    bool is_has_multiple_single_files_Set() const;
    bool is_has_multiple_single_files_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIApp_permissions getPermissions() const;
    void setPermissions(const OAIApp_permissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getRepositoriesUrl() const;
    void setRepositoriesUrl(const QString &repositories_url);
    bool is_repositories_url_Set() const;
    bool is_repositories_url_Valid() const;

    QString getRepositorySelection() const;
    void setRepositorySelection(const QString &repository_selection);
    bool is_repository_selection_Set() const;
    bool is_repository_selection_Valid() const;

    QString getSingleFileName() const;
    void setSingleFileName(const QString &single_file_name);
    bool is_single_file_name_Set() const;
    bool is_single_file_name_Valid() const;

    QList<QString> getSingleFilePaths() const;
    void setSingleFilePaths(const QList<QString> &single_file_paths);
    bool is_single_file_paths_Set() const;
    bool is_single_file_paths_Valid() const;

    QDateTime getSuspendedAt() const;
    void setSuspendedAt(const QDateTime &suspended_at);
    bool is_suspended_at_Set() const;
    bool is_suspended_at_Valid() const;

    OAINullable_simple_user getSuspendedBy() const;
    void setSuspendedBy(const OAINullable_simple_user &suspended_by);
    bool is_suspended_by_Set() const;
    bool is_suspended_by_Valid() const;

    qint32 getTargetId() const;
    void setTargetId(const qint32 &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getTargetType() const;
    void setTargetType(const QString &target_type);
    bool is_target_type_Set() const;
    bool is_target_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_tokens_url;
    bool m_access_tokens_url_isSet;
    bool m_access_tokens_url_isValid;

    OAIInstallation_account m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    qint32 m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_app_slug;
    bool m_app_slug_isSet;
    bool m_app_slug_isValid;

    QString m_contact_email;
    bool m_contact_email_isSet;
    bool m_contact_email_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<QString> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    bool m_has_multiple_single_files;
    bool m_has_multiple_single_files_isSet;
    bool m_has_multiple_single_files_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIApp_permissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_repositories_url;
    bool m_repositories_url_isSet;
    bool m_repositories_url_isValid;

    QString m_repository_selection;
    bool m_repository_selection_isSet;
    bool m_repository_selection_isValid;

    QString m_single_file_name;
    bool m_single_file_name_isSet;
    bool m_single_file_name_isValid;

    QList<QString> m_single_file_paths;
    bool m_single_file_paths_isSet;
    bool m_single_file_paths_isValid;

    QDateTime m_suspended_at;
    bool m_suspended_at_isSet;
    bool m_suspended_at_isValid;

    OAINullable_simple_user m_suspended_by;
    bool m_suspended_by_isSet;
    bool m_suspended_by_isValid;

    qint32 m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_target_type;
    bool m_target_type_isSet;
    bool m_target_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstallation)

#endif // OAIInstallation_H
