/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicense_info.h
 *
 * 
 */

#ifndef OAILicense_info_H
#define OAILicense_info_H

#include <QJsonObject>

#include "OAILicense_info_seats.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILicense_info : public OAIObject {
public:
    OAILicense_info();
    OAILicense_info(QString json);
    ~OAILicense_info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDaysUntilExpiration() const;
    void setDaysUntilExpiration(const qint32 &days_until_expiration);
    bool is_days_until_expiration_Set() const;
    bool is_days_until_expiration_Valid() const;

    QString getExpireAt() const;
    void setExpireAt(const QString &expire_at);
    bool is_expire_at_Set() const;
    bool is_expire_at_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILicense_info_seats getSeats() const;
    void setSeats(const OAILicense_info_seats &seats);
    bool is_seats_Set() const;
    bool is_seats_Valid() const;

    OAILicense_info_seats getSeatsAvailable() const;
    void setSeatsAvailable(const OAILicense_info_seats &seats_available);
    bool is_seats_available_Set() const;
    bool is_seats_available_Valid() const;

    qint32 getSeatsUsed() const;
    void setSeatsUsed(const qint32 &seats_used);
    bool is_seats_used_Set() const;
    bool is_seats_used_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_days_until_expiration;
    bool m_days_until_expiration_isSet;
    bool m_days_until_expiration_isValid;

    QString m_expire_at;
    bool m_expire_at_isSet;
    bool m_expire_at_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILicense_info_seats m_seats;
    bool m_seats_isSet;
    bool m_seats_isValid;

    OAILicense_info_seats m_seats_available;
    bool m_seats_available_isSet;
    bool m_seats_available_isValid;

    qint32 m_seats_used;
    bool m_seats_used_isSet;
    bool m_seats_used_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicense_info)

#endif // OAILicense_info_H
