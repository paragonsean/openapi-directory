/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_settings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_settings::OAIEnterprise_settings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_settings::OAIEnterprise_settings() {
    this->initializeModel();
}

OAIEnterprise_settings::~OAIEnterprise_settings() {}

void OAIEnterprise_settings::initializeModel() {

    m_enterprise_isSet = false;
    m_enterprise_isValid = false;

    m_run_list_isSet = false;
    m_run_list_isValid = false;
}

void OAIEnterprise_settings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_settings::fromJsonObject(QJsonObject json) {

    m_enterprise_isValid = ::OpenAPI::fromJsonValue(m_enterprise, json[QString("enterprise")]);
    m_enterprise_isSet = !json[QString("enterprise")].isNull() && m_enterprise_isValid;

    m_run_list_isValid = ::OpenAPI::fromJsonValue(m_run_list, json[QString("run_list")]);
    m_run_list_isSet = !json[QString("run_list")].isNull() && m_run_list_isValid;
}

QString OAIEnterprise_settings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_settings::asJsonObject() const {
    QJsonObject obj;
    if (m_enterprise.isSet()) {
        obj.insert(QString("enterprise"), ::OpenAPI::toJsonValue(m_enterprise));
    }
    if (m_run_list.size() > 0) {
        obj.insert(QString("run_list"), ::OpenAPI::toJsonValue(m_run_list));
    }
    return obj;
}

OAIEnterprise_settings_enterprise OAIEnterprise_settings::getEnterprise() const {
    return m_enterprise;
}
void OAIEnterprise_settings::setEnterprise(const OAIEnterprise_settings_enterprise &enterprise) {
    m_enterprise = enterprise;
    m_enterprise_isSet = true;
}

bool OAIEnterprise_settings::is_enterprise_Set() const{
    return m_enterprise_isSet;
}

bool OAIEnterprise_settings::is_enterprise_Valid() const{
    return m_enterprise_isValid;
}

QList<QString> OAIEnterprise_settings::getRunList() const {
    return m_run_list;
}
void OAIEnterprise_settings::setRunList(const QList<QString> &run_list) {
    m_run_list = run_list;
    m_run_list_isSet = true;
}

bool OAIEnterprise_settings::is_run_list_Set() const{
    return m_run_list_isSet;
}

bool OAIEnterprise_settings::is_run_list_Valid() const{
    return m_run_list_isValid;
}

bool OAIEnterprise_settings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enterprise.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_settings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
