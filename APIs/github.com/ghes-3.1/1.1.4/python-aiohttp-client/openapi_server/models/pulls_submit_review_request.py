# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PullsSubmitReviewRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, event: str=None):
        """PullsSubmitReviewRequest - a model defined in OpenAPI

        :param body: The body of this PullsSubmitReviewRequest.
        :param event: The event of this PullsSubmitReviewRequest.
        """
        self.openapi_types = {
            'body': str,
            'event': str
        }

        self.attribute_map = {
            'body': 'body',
            'event': 'event'
        }

        self._body = body
        self._event = event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullsSubmitReviewRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pulls_submit_review_request of this PullsSubmitReviewRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this PullsSubmitReviewRequest.

        The body text of the pull request review

        :return: The body of this PullsSubmitReviewRequest.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this PullsSubmitReviewRequest.

        The body text of the pull request review

        :param body: The body of this PullsSubmitReviewRequest.
        :type body: str
        """

        self._body = body

    @property
    def event(self):
        """Gets the event of this PullsSubmitReviewRequest.

        The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.

        :return: The event of this PullsSubmitReviewRequest.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this PullsSubmitReviewRequest.

        The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.

        :param event: The event of this PullsSubmitReviewRequest.
        :type event: str
        """
        allowed_values = ["APPROVE", "REQUEST_CHANGES", "COMMENT"]  # noqa: E501
        if event not in allowed_values:
            raise ValueError(
                "Invalid value for `event` ({0}), must be one of {1}"
                .format(event, allowed_values)
            )

        self._event = event
