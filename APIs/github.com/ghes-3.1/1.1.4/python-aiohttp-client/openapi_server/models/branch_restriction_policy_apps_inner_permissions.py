# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BranchRestrictionPolicyAppsInnerPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: str=None, issues: str=None, metadata: str=None, single_file: str=None):
        """BranchRestrictionPolicyAppsInnerPermissions - a model defined in OpenAPI

        :param contents: The contents of this BranchRestrictionPolicyAppsInnerPermissions.
        :param issues: The issues of this BranchRestrictionPolicyAppsInnerPermissions.
        :param metadata: The metadata of this BranchRestrictionPolicyAppsInnerPermissions.
        :param single_file: The single_file of this BranchRestrictionPolicyAppsInnerPermissions.
        """
        self.openapi_types = {
            'contents': str,
            'issues': str,
            'metadata': str,
            'single_file': str
        }

        self.attribute_map = {
            'contents': 'contents',
            'issues': 'issues',
            'metadata': 'metadata',
            'single_file': 'single_file'
        }

        self._contents = contents
        self._issues = issues
        self._metadata = metadata
        self._single_file = single_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BranchRestrictionPolicyAppsInnerPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The branch_restriction_policy_apps_inner_permissions of this BranchRestrictionPolicyAppsInnerPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this BranchRestrictionPolicyAppsInnerPermissions.


        :return: The contents of this BranchRestrictionPolicyAppsInnerPermissions.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this BranchRestrictionPolicyAppsInnerPermissions.


        :param contents: The contents of this BranchRestrictionPolicyAppsInnerPermissions.
        :type contents: str
        """

        self._contents = contents

    @property
    def issues(self):
        """Gets the issues of this BranchRestrictionPolicyAppsInnerPermissions.


        :return: The issues of this BranchRestrictionPolicyAppsInnerPermissions.
        :rtype: str
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this BranchRestrictionPolicyAppsInnerPermissions.


        :param issues: The issues of this BranchRestrictionPolicyAppsInnerPermissions.
        :type issues: str
        """

        self._issues = issues

    @property
    def metadata(self):
        """Gets the metadata of this BranchRestrictionPolicyAppsInnerPermissions.


        :return: The metadata of this BranchRestrictionPolicyAppsInnerPermissions.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this BranchRestrictionPolicyAppsInnerPermissions.


        :param metadata: The metadata of this BranchRestrictionPolicyAppsInnerPermissions.
        :type metadata: str
        """

        self._metadata = metadata

    @property
    def single_file(self):
        """Gets the single_file of this BranchRestrictionPolicyAppsInnerPermissions.


        :return: The single_file of this BranchRestrictionPolicyAppsInnerPermissions.
        :rtype: str
        """
        return self._single_file

    @single_file.setter
    def single_file(self, single_file):
        """Sets the single_file of this BranchRestrictionPolicyAppsInnerPermissions.


        :param single_file: The single_file of this BranchRestrictionPolicyAppsInnerPermissions.
        :type single_file: str
        """

        self._single_file = single_file
