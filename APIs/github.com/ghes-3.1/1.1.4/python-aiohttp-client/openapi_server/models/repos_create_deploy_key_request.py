# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReposCreateDeployKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, read_only: bool=None, title: str=None):
        """ReposCreateDeployKeyRequest - a model defined in OpenAPI

        :param key: The key of this ReposCreateDeployKeyRequest.
        :param read_only: The read_only of this ReposCreateDeployKeyRequest.
        :param title: The title of this ReposCreateDeployKeyRequest.
        """
        self.openapi_types = {
            'key': str,
            'read_only': bool,
            'title': str
        }

        self.attribute_map = {
            'key': 'key',
            'read_only': 'read_only',
            'title': 'title'
        }

        self._key = key
        self._read_only = read_only
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposCreateDeployKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_create_deploy_key_request of this ReposCreateDeployKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this ReposCreateDeployKeyRequest.

        The contents of the key.

        :return: The key of this ReposCreateDeployKeyRequest.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ReposCreateDeployKeyRequest.

        The contents of the key.

        :param key: The key of this ReposCreateDeployKeyRequest.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def read_only(self):
        """Gets the read_only of this ReposCreateDeployKeyRequest.

        If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.      Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).\"

        :return: The read_only of this ReposCreateDeployKeyRequest.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this ReposCreateDeployKeyRequest.

        If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.      Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).\"

        :param read_only: The read_only of this ReposCreateDeployKeyRequest.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def title(self):
        """Gets the title of this ReposCreateDeployKeyRequest.

        A name for the key.

        :return: The title of this ReposCreateDeployKeyRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ReposCreateDeployKeyRequest.

        A name for the key.

        :param title: The title of this ReposCreateDeployKeyRequest.
        :type title: str
        """

        self._title = title
