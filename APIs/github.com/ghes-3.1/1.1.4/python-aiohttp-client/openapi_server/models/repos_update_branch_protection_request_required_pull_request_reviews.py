# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions import ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions
from openapi_server import util


class ReposUpdateBranchProtectionRequestRequiredPullRequestReviews(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dismiss_stale_reviews: bool=None, dismissal_restrictions: ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions=None, require_code_owner_reviews: bool=None, required_approving_review_count: int=None):
        """ReposUpdateBranchProtectionRequestRequiredPullRequestReviews - a model defined in OpenAPI

        :param dismiss_stale_reviews: The dismiss_stale_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :param dismissal_restrictions: The dismissal_restrictions of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :param require_code_owner_reviews: The require_code_owner_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :param required_approving_review_count: The required_approving_review_count of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        """
        self.openapi_types = {
            'dismiss_stale_reviews': bool,
            'dismissal_restrictions': ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions,
            'require_code_owner_reviews': bool,
            'required_approving_review_count': int
        }

        self.attribute_map = {
            'dismiss_stale_reviews': 'dismiss_stale_reviews',
            'dismissal_restrictions': 'dismissal_restrictions',
            'require_code_owner_reviews': 'require_code_owner_reviews',
            'required_approving_review_count': 'required_approving_review_count'
        }

        self._dismiss_stale_reviews = dismiss_stale_reviews
        self._dismissal_restrictions = dismissal_restrictions
        self._require_code_owner_reviews = require_code_owner_reviews
        self._required_approving_review_count = required_approving_review_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposUpdateBranchProtectionRequestRequiredPullRequestReviews':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_update_branch_protection_request_required_pull_request_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dismiss_stale_reviews(self):
        """Gets the dismiss_stale_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.

        Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.

        :return: The dismiss_stale_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :rtype: bool
        """
        return self._dismiss_stale_reviews

    @dismiss_stale_reviews.setter
    def dismiss_stale_reviews(self, dismiss_stale_reviews):
        """Sets the dismiss_stale_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.

        Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.

        :param dismiss_stale_reviews: The dismiss_stale_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :type dismiss_stale_reviews: bool
        """

        self._dismiss_stale_reviews = dismiss_stale_reviews

    @property
    def dismissal_restrictions(self):
        """Gets the dismissal_restrictions of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.


        :return: The dismissal_restrictions of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :rtype: ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions
        """
        return self._dismissal_restrictions

    @dismissal_restrictions.setter
    def dismissal_restrictions(self, dismissal_restrictions):
        """Sets the dismissal_restrictions of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.


        :param dismissal_restrictions: The dismissal_restrictions of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :type dismissal_restrictions: ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions
        """

        self._dismissal_restrictions = dismissal_restrictions

    @property
    def require_code_owner_reviews(self):
        """Gets the require_code_owner_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.

        Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) review them.

        :return: The require_code_owner_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :rtype: bool
        """
        return self._require_code_owner_reviews

    @require_code_owner_reviews.setter
    def require_code_owner_reviews(self, require_code_owner_reviews):
        """Sets the require_code_owner_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.

        Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) review them.

        :param require_code_owner_reviews: The require_code_owner_reviews of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :type require_code_owner_reviews: bool
        """

        self._require_code_owner_reviews = require_code_owner_reviews

    @property
    def required_approving_review_count(self):
        """Gets the required_approving_review_count of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.

        Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.

        :return: The required_approving_review_count of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :rtype: int
        """
        return self._required_approving_review_count

    @required_approving_review_count.setter
    def required_approving_review_count(self, required_approving_review_count):
        """Sets the required_approving_review_count of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.

        Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.

        :param required_approving_review_count: The required_approving_review_count of this ReposUpdateBranchProtectionRequestRequiredPullRequestReviews.
        :type required_approving_review_count: int
        """

        self._required_approving_review_count = required_approving_review_count
