# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commit_stats import CommitStats
from openapi_server.models.nullable_simple_user import NullableSimpleUser
from openapi_server import util


class GistHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_status: CommitStats=None, committed_at: datetime=None, url: str=None, user: NullableSimpleUser=None, version: str=None):
        """GistHistory - a model defined in OpenAPI

        :param change_status: The change_status of this GistHistory.
        :param committed_at: The committed_at of this GistHistory.
        :param url: The url of this GistHistory.
        :param user: The user of this GistHistory.
        :param version: The version of this GistHistory.
        """
        self.openapi_types = {
            'change_status': CommitStats,
            'committed_at': datetime,
            'url': str,
            'user': NullableSimpleUser,
            'version': str
        }

        self.attribute_map = {
            'change_status': 'change_status',
            'committed_at': 'committed_at',
            'url': 'url',
            'user': 'user',
            'version': 'version'
        }

        self._change_status = change_status
        self._committed_at = committed_at
        self._url = url
        self._user = user
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GistHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The gist-history of this GistHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_status(self):
        """Gets the change_status of this GistHistory.


        :return: The change_status of this GistHistory.
        :rtype: CommitStats
        """
        return self._change_status

    @change_status.setter
    def change_status(self, change_status):
        """Sets the change_status of this GistHistory.


        :param change_status: The change_status of this GistHistory.
        :type change_status: CommitStats
        """

        self._change_status = change_status

    @property
    def committed_at(self):
        """Gets the committed_at of this GistHistory.


        :return: The committed_at of this GistHistory.
        :rtype: datetime
        """
        return self._committed_at

    @committed_at.setter
    def committed_at(self, committed_at):
        """Sets the committed_at of this GistHistory.


        :param committed_at: The committed_at of this GistHistory.
        :type committed_at: datetime
        """

        self._committed_at = committed_at

    @property
    def url(self):
        """Gets the url of this GistHistory.


        :return: The url of this GistHistory.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GistHistory.


        :param url: The url of this GistHistory.
        :type url: str
        """

        self._url = url

    @property
    def user(self):
        """Gets the user of this GistHistory.


        :return: The user of this GistHistory.
        :rtype: NullableSimpleUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this GistHistory.


        :param user: The user of this GistHistory.
        :type user: NullableSimpleUser
        """

        self._user = user

    @property
    def version(self):
        """Gets the version of this GistHistory.


        :return: The version of this GistHistory.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GistHistory.


        :param version: The version of this GistHistory.
        :type version: str
        """

        self._version = version
