# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pull_request_review_links_html import PullRequestReviewLinksHtml
from openapi_server import util


class PullRequestReviewLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, html: PullRequestReviewLinksHtml=None, pull_request: PullRequestReviewLinksHtml=None):
        """PullRequestReviewLinks - a model defined in OpenAPI

        :param html: The html of this PullRequestReviewLinks.
        :param pull_request: The pull_request of this PullRequestReviewLinks.
        """
        self.openapi_types = {
            'html': PullRequestReviewLinksHtml,
            'pull_request': PullRequestReviewLinksHtml
        }

        self.attribute_map = {
            'html': 'html',
            'pull_request': 'pull_request'
        }

        self._html = html
        self._pull_request = pull_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullRequestReviewLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pull_request_review__links of this PullRequestReviewLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def html(self):
        """Gets the html of this PullRequestReviewLinks.


        :return: The html of this PullRequestReviewLinks.
        :rtype: PullRequestReviewLinksHtml
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this PullRequestReviewLinks.


        :param html: The html of this PullRequestReviewLinks.
        :type html: PullRequestReviewLinksHtml
        """
        if html is None:
            raise ValueError("Invalid value for `html`, must not be `None`")

        self._html = html

    @property
    def pull_request(self):
        """Gets the pull_request of this PullRequestReviewLinks.


        :return: The pull_request of this PullRequestReviewLinks.
        :rtype: PullRequestReviewLinksHtml
        """
        return self._pull_request

    @pull_request.setter
    def pull_request(self, pull_request):
        """Sets the pull_request of this PullRequestReviewLinks.


        :param pull_request: The pull_request of this PullRequestReviewLinks.
        :type pull_request: PullRequestReviewLinksHtml
        """
        if pull_request is None:
            raise ValueError("Invalid value for `pull_request`, must not be `None`")

        self._pull_request = pull_request
