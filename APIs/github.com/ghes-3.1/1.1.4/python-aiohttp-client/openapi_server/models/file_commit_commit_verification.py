# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileCommitCommitVerification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payload: str=None, reason: str=None, signature: str=None, verified: bool=None):
        """FileCommitCommitVerification - a model defined in OpenAPI

        :param payload: The payload of this FileCommitCommitVerification.
        :param reason: The reason of this FileCommitCommitVerification.
        :param signature: The signature of this FileCommitCommitVerification.
        :param verified: The verified of this FileCommitCommitVerification.
        """
        self.openapi_types = {
            'payload': str,
            'reason': str,
            'signature': str,
            'verified': bool
        }

        self.attribute_map = {
            'payload': 'payload',
            'reason': 'reason',
            'signature': 'signature',
            'verified': 'verified'
        }

        self._payload = payload
        self._reason = reason
        self._signature = signature
        self._verified = verified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileCommitCommitVerification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The file_commit_commit_verification of this FileCommitCommitVerification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payload(self):
        """Gets the payload of this FileCommitCommitVerification.


        :return: The payload of this FileCommitCommitVerification.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this FileCommitCommitVerification.


        :param payload: The payload of this FileCommitCommitVerification.
        :type payload: str
        """

        self._payload = payload

    @property
    def reason(self):
        """Gets the reason of this FileCommitCommitVerification.


        :return: The reason of this FileCommitCommitVerification.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this FileCommitCommitVerification.


        :param reason: The reason of this FileCommitCommitVerification.
        :type reason: str
        """

        self._reason = reason

    @property
    def signature(self):
        """Gets the signature of this FileCommitCommitVerification.


        :return: The signature of this FileCommitCommitVerification.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this FileCommitCommitVerification.


        :param signature: The signature of this FileCommitCommitVerification.
        :type signature: str
        """

        self._signature = signature

    @property
    def verified(self):
        """Gets the verified of this FileCommitCommitVerification.


        :return: The verified of this FileCommitCommitVerification.
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this FileCommitCommitVerification.


        :param verified: The verified of this FileCommitCommitVerification.
        :type verified: bool
        """

        self._verified = verified
