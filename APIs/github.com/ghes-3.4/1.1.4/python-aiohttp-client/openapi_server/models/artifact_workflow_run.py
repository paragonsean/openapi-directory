# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtifactWorkflowRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, head_branch: str=None, head_repository_id: int=None, head_sha: str=None, id: int=None, repository_id: int=None):
        """ArtifactWorkflowRun - a model defined in OpenAPI

        :param head_branch: The head_branch of this ArtifactWorkflowRun.
        :param head_repository_id: The head_repository_id of this ArtifactWorkflowRun.
        :param head_sha: The head_sha of this ArtifactWorkflowRun.
        :param id: The id of this ArtifactWorkflowRun.
        :param repository_id: The repository_id of this ArtifactWorkflowRun.
        """
        self.openapi_types = {
            'head_branch': str,
            'head_repository_id': int,
            'head_sha': str,
            'id': int,
            'repository_id': int
        }

        self.attribute_map = {
            'head_branch': 'head_branch',
            'head_repository_id': 'head_repository_id',
            'head_sha': 'head_sha',
            'id': 'id',
            'repository_id': 'repository_id'
        }

        self._head_branch = head_branch
        self._head_repository_id = head_repository_id
        self._head_sha = head_sha
        self._id = id
        self._repository_id = repository_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactWorkflowRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The artifact_workflow_run of this ArtifactWorkflowRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def head_branch(self):
        """Gets the head_branch of this ArtifactWorkflowRun.


        :return: The head_branch of this ArtifactWorkflowRun.
        :rtype: str
        """
        return self._head_branch

    @head_branch.setter
    def head_branch(self, head_branch):
        """Sets the head_branch of this ArtifactWorkflowRun.


        :param head_branch: The head_branch of this ArtifactWorkflowRun.
        :type head_branch: str
        """

        self._head_branch = head_branch

    @property
    def head_repository_id(self):
        """Gets the head_repository_id of this ArtifactWorkflowRun.


        :return: The head_repository_id of this ArtifactWorkflowRun.
        :rtype: int
        """
        return self._head_repository_id

    @head_repository_id.setter
    def head_repository_id(self, head_repository_id):
        """Sets the head_repository_id of this ArtifactWorkflowRun.


        :param head_repository_id: The head_repository_id of this ArtifactWorkflowRun.
        :type head_repository_id: int
        """

        self._head_repository_id = head_repository_id

    @property
    def head_sha(self):
        """Gets the head_sha of this ArtifactWorkflowRun.


        :return: The head_sha of this ArtifactWorkflowRun.
        :rtype: str
        """
        return self._head_sha

    @head_sha.setter
    def head_sha(self, head_sha):
        """Sets the head_sha of this ArtifactWorkflowRun.


        :param head_sha: The head_sha of this ArtifactWorkflowRun.
        :type head_sha: str
        """

        self._head_sha = head_sha

    @property
    def id(self):
        """Gets the id of this ArtifactWorkflowRun.


        :return: The id of this ArtifactWorkflowRun.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ArtifactWorkflowRun.


        :param id: The id of this ArtifactWorkflowRun.
        :type id: int
        """

        self._id = id

    @property
    def repository_id(self):
        """Gets the repository_id of this ArtifactWorkflowRun.


        :return: The repository_id of this ArtifactWorkflowRun.
        :rtype: int
        """
        return self._repository_id

    @repository_id.setter
    def repository_id(self, repository_id):
        """Sets the repository_id of this ArtifactWorkflowRun.


        :param repository_id: The repository_id of this ArtifactWorkflowRun.
        :type repository_id: int
        """

        self._repository_id = repository_id
