/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitHubV3RestApi);
  }
}(this, function(expect, GitHubV3RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BranchRestrictionPolicyAppsInnerOwner', function() {
    it('should create an instance of BranchRestrictionPolicyAppsInnerOwner', function() {
      // uncomment below and update the code to test BranchRestrictionPolicyAppsInnerOwner
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be.a(GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner);
    });

    it('should have the property avatarUrl (base name: "avatar_url")', function() {
      // uncomment below and update the code to test the property avatarUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property eventsUrl (base name: "events_url")', function() {
      // uncomment below and update the code to test the property eventsUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property followersUrl (base name: "followers_url")', function() {
      // uncomment below and update the code to test the property followersUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property followingUrl (base name: "following_url")', function() {
      // uncomment below and update the code to test the property followingUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property gistsUrl (base name: "gists_url")', function() {
      // uncomment below and update the code to test the property gistsUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property gravatarId (base name: "gravatar_id")', function() {
      // uncomment below and update the code to test the property gravatarId
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property hooksUrl (base name: "hooks_url")', function() {
      // uncomment below and update the code to test the property hooksUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property htmlUrl (base name: "html_url")', function() {
      // uncomment below and update the code to test the property htmlUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property issuesUrl (base name: "issues_url")', function() {
      // uncomment below and update the code to test the property issuesUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property login (base name: "login")', function() {
      // uncomment below and update the code to test the property login
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property membersUrl (base name: "members_url")', function() {
      // uncomment below and update the code to test the property membersUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property nodeId (base name: "node_id")', function() {
      // uncomment below and update the code to test the property nodeId
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property organizationsUrl (base name: "organizations_url")', function() {
      // uncomment below and update the code to test the property organizationsUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property publicMembersUrl (base name: "public_members_url")', function() {
      // uncomment below and update the code to test the property publicMembersUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property receivedEventsUrl (base name: "received_events_url")', function() {
      // uncomment below and update the code to test the property receivedEventsUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property reposUrl (base name: "repos_url")', function() {
      // uncomment below and update the code to test the property reposUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property siteAdmin (base name: "site_admin")', function() {
      // uncomment below and update the code to test the property siteAdmin
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property starredUrl (base name: "starred_url")', function() {
      // uncomment below and update the code to test the property starredUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionsUrl (base name: "subscriptions_url")', function() {
      // uncomment below and update the code to test the property subscriptionsUrl
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new GitHubV3RestApi.BranchRestrictionPolicyAppsInnerOwner();
      //expect(instance).to.be();
    });

  });

}));
