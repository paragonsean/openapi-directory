/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitHubV3RestApi);
  }
}(this, function(expect, GitHubV3RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitHubV3RestApi.OrgsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrgsApi', function() {
    describe('orgsCheckMembershipForUser', function() {
      it('should call orgsCheckMembershipForUser successfully', function(done) {
        //uncomment below and update the code to test orgsCheckMembershipForUser
        //instance.orgsCheckMembershipForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsCheckPublicMembershipForUser', function() {
      it('should call orgsCheckPublicMembershipForUser successfully', function(done) {
        //uncomment below and update the code to test orgsCheckPublicMembershipForUser
        //instance.orgsCheckPublicMembershipForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsConvertMemberToOutsideCollaborator', function() {
      it('should call orgsConvertMemberToOutsideCollaborator successfully', function(done) {
        //uncomment below and update the code to test orgsConvertMemberToOutsideCollaborator
        //instance.orgsConvertMemberToOutsideCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsCreateWebhook', function() {
      it('should call orgsCreateWebhook successfully', function(done) {
        //uncomment below and update the code to test orgsCreateWebhook
        //instance.orgsCreateWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsDeleteWebhook', function() {
      it('should call orgsDeleteWebhook successfully', function(done) {
        //uncomment below and update the code to test orgsDeleteWebhook
        //instance.orgsDeleteWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGet', function() {
      it('should call orgsGet successfully', function(done) {
        //uncomment below and update the code to test orgsGet
        //instance.orgsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGetAuditLog', function() {
      it('should call orgsGetAuditLog successfully', function(done) {
        //uncomment below and update the code to test orgsGetAuditLog
        //instance.orgsGetAuditLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGetMembershipForAuthenticatedUser', function() {
      it('should call orgsGetMembershipForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test orgsGetMembershipForAuthenticatedUser
        //instance.orgsGetMembershipForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGetMembershipForUser', function() {
      it('should call orgsGetMembershipForUser successfully', function(done) {
        //uncomment below and update the code to test orgsGetMembershipForUser
        //instance.orgsGetMembershipForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGetWebhook', function() {
      it('should call orgsGetWebhook successfully', function(done) {
        //uncomment below and update the code to test orgsGetWebhook
        //instance.orgsGetWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGetWebhookConfigForOrg', function() {
      it('should call orgsGetWebhookConfigForOrg successfully', function(done) {
        //uncomment below and update the code to test orgsGetWebhookConfigForOrg
        //instance.orgsGetWebhookConfigForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsGetWebhookDelivery', function() {
      it('should call orgsGetWebhookDelivery successfully', function(done) {
        //uncomment below and update the code to test orgsGetWebhookDelivery
        //instance.orgsGetWebhookDelivery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsList', function() {
      it('should call orgsList successfully', function(done) {
        //uncomment below and update the code to test orgsList
        //instance.orgsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListAppInstallations', function() {
      it('should call orgsListAppInstallations successfully', function(done) {
        //uncomment below and update the code to test orgsListAppInstallations
        //instance.orgsListAppInstallations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListCustomRoles', function() {
      it('should call orgsListCustomRoles successfully', function(done) {
        //uncomment below and update the code to test orgsListCustomRoles
        //instance.orgsListCustomRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListForAuthenticatedUser', function() {
      it('should call orgsListForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test orgsListForAuthenticatedUser
        //instance.orgsListForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListForUser', function() {
      it('should call orgsListForUser successfully', function(done) {
        //uncomment below and update the code to test orgsListForUser
        //instance.orgsListForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListMembers', function() {
      it('should call orgsListMembers successfully', function(done) {
        //uncomment below and update the code to test orgsListMembers
        //instance.orgsListMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListMembershipsForAuthenticatedUser', function() {
      it('should call orgsListMembershipsForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test orgsListMembershipsForAuthenticatedUser
        //instance.orgsListMembershipsForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListOutsideCollaborators', function() {
      it('should call orgsListOutsideCollaborators successfully', function(done) {
        //uncomment below and update the code to test orgsListOutsideCollaborators
        //instance.orgsListOutsideCollaborators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListPublicMembers', function() {
      it('should call orgsListPublicMembers successfully', function(done) {
        //uncomment below and update the code to test orgsListPublicMembers
        //instance.orgsListPublicMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListWebhookDeliveries', function() {
      it('should call orgsListWebhookDeliveries successfully', function(done) {
        //uncomment below and update the code to test orgsListWebhookDeliveries
        //instance.orgsListWebhookDeliveries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsListWebhooks', function() {
      it('should call orgsListWebhooks successfully', function(done) {
        //uncomment below and update the code to test orgsListWebhooks
        //instance.orgsListWebhooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsPingWebhook', function() {
      it('should call orgsPingWebhook successfully', function(done) {
        //uncomment below and update the code to test orgsPingWebhook
        //instance.orgsPingWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsRedeliverWebhookDelivery', function() {
      it('should call orgsRedeliverWebhookDelivery successfully', function(done) {
        //uncomment below and update the code to test orgsRedeliverWebhookDelivery
        //instance.orgsRedeliverWebhookDelivery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsRemoveMember', function() {
      it('should call orgsRemoveMember successfully', function(done) {
        //uncomment below and update the code to test orgsRemoveMember
        //instance.orgsRemoveMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsRemoveMembershipForUser', function() {
      it('should call orgsRemoveMembershipForUser successfully', function(done) {
        //uncomment below and update the code to test orgsRemoveMembershipForUser
        //instance.orgsRemoveMembershipForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsRemoveOutsideCollaborator', function() {
      it('should call orgsRemoveOutsideCollaborator successfully', function(done) {
        //uncomment below and update the code to test orgsRemoveOutsideCollaborator
        //instance.orgsRemoveOutsideCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsRemovePublicMembershipForAuthenticatedUser', function() {
      it('should call orgsRemovePublicMembershipForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test orgsRemovePublicMembershipForAuthenticatedUser
        //instance.orgsRemovePublicMembershipForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsSetMembershipForUser', function() {
      it('should call orgsSetMembershipForUser successfully', function(done) {
        //uncomment below and update the code to test orgsSetMembershipForUser
        //instance.orgsSetMembershipForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsSetPublicMembershipForAuthenticatedUser', function() {
      it('should call orgsSetPublicMembershipForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test orgsSetPublicMembershipForAuthenticatedUser
        //instance.orgsSetPublicMembershipForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsUpdate', function() {
      it('should call orgsUpdate successfully', function(done) {
        //uncomment below and update the code to test orgsUpdate
        //instance.orgsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsUpdateMembershipForAuthenticatedUser', function() {
      it('should call orgsUpdateMembershipForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test orgsUpdateMembershipForAuthenticatedUser
        //instance.orgsUpdateMembershipForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsUpdateWebhook', function() {
      it('should call orgsUpdateWebhook successfully', function(done) {
        //uncomment below and update the code to test orgsUpdateWebhook
        //instance.orgsUpdateWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgsUpdateWebhookConfigForOrg', function() {
      it('should call orgsUpdateWebhookConfigForOrg successfully', function(done) {
        //uncomment below and update the code to test orgsUpdateWebhookConfigForOrg
        //instance.orgsUpdateWebhookConfigForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
