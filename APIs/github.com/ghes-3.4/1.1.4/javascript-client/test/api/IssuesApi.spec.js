/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GitHubV3RestApi);
  }
}(this, function(expect, GitHubV3RestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GitHubV3RestApi.IssuesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IssuesApi', function() {
    describe('issuesAddAssignees', function() {
      it('should call issuesAddAssignees successfully', function(done) {
        //uncomment below and update the code to test issuesAddAssignees
        //instance.issuesAddAssignees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesAddLabels', function() {
      it('should call issuesAddLabels successfully', function(done) {
        //uncomment below and update the code to test issuesAddLabels
        //instance.issuesAddLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesCheckUserCanBeAssigned', function() {
      it('should call issuesCheckUserCanBeAssigned successfully', function(done) {
        //uncomment below and update the code to test issuesCheckUserCanBeAssigned
        //instance.issuesCheckUserCanBeAssigned(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesCheckUserCanBeAssignedToIssue', function() {
      it('should call issuesCheckUserCanBeAssignedToIssue successfully', function(done) {
        //uncomment below and update the code to test issuesCheckUserCanBeAssignedToIssue
        //instance.issuesCheckUserCanBeAssignedToIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesCreate', function() {
      it('should call issuesCreate successfully', function(done) {
        //uncomment below and update the code to test issuesCreate
        //instance.issuesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesCreateComment', function() {
      it('should call issuesCreateComment successfully', function(done) {
        //uncomment below and update the code to test issuesCreateComment
        //instance.issuesCreateComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesCreateLabel', function() {
      it('should call issuesCreateLabel successfully', function(done) {
        //uncomment below and update the code to test issuesCreateLabel
        //instance.issuesCreateLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesCreateMilestone', function() {
      it('should call issuesCreateMilestone successfully', function(done) {
        //uncomment below and update the code to test issuesCreateMilestone
        //instance.issuesCreateMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesDeleteComment', function() {
      it('should call issuesDeleteComment successfully', function(done) {
        //uncomment below and update the code to test issuesDeleteComment
        //instance.issuesDeleteComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesDeleteLabel', function() {
      it('should call issuesDeleteLabel successfully', function(done) {
        //uncomment below and update the code to test issuesDeleteLabel
        //instance.issuesDeleteLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesDeleteMilestone', function() {
      it('should call issuesDeleteMilestone successfully', function(done) {
        //uncomment below and update the code to test issuesDeleteMilestone
        //instance.issuesDeleteMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesGet', function() {
      it('should call issuesGet successfully', function(done) {
        //uncomment below and update the code to test issuesGet
        //instance.issuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesGetComment', function() {
      it('should call issuesGetComment successfully', function(done) {
        //uncomment below and update the code to test issuesGetComment
        //instance.issuesGetComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesGetEvent', function() {
      it('should call issuesGetEvent successfully', function(done) {
        //uncomment below and update the code to test issuesGetEvent
        //instance.issuesGetEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesGetLabel', function() {
      it('should call issuesGetLabel successfully', function(done) {
        //uncomment below and update the code to test issuesGetLabel
        //instance.issuesGetLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesGetMilestone', function() {
      it('should call issuesGetMilestone successfully', function(done) {
        //uncomment below and update the code to test issuesGetMilestone
        //instance.issuesGetMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesList', function() {
      it('should call issuesList successfully', function(done) {
        //uncomment below and update the code to test issuesList
        //instance.issuesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListAssignees', function() {
      it('should call issuesListAssignees successfully', function(done) {
        //uncomment below and update the code to test issuesListAssignees
        //instance.issuesListAssignees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListComments', function() {
      it('should call issuesListComments successfully', function(done) {
        //uncomment below and update the code to test issuesListComments
        //instance.issuesListComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListCommentsForRepo', function() {
      it('should call issuesListCommentsForRepo successfully', function(done) {
        //uncomment below and update the code to test issuesListCommentsForRepo
        //instance.issuesListCommentsForRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListEvents', function() {
      it('should call issuesListEvents successfully', function(done) {
        //uncomment below and update the code to test issuesListEvents
        //instance.issuesListEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListEventsForRepo', function() {
      it('should call issuesListEventsForRepo successfully', function(done) {
        //uncomment below and update the code to test issuesListEventsForRepo
        //instance.issuesListEventsForRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListEventsForTimeline', function() {
      it('should call issuesListEventsForTimeline successfully', function(done) {
        //uncomment below and update the code to test issuesListEventsForTimeline
        //instance.issuesListEventsForTimeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListForAuthenticatedUser', function() {
      it('should call issuesListForAuthenticatedUser successfully', function(done) {
        //uncomment below and update the code to test issuesListForAuthenticatedUser
        //instance.issuesListForAuthenticatedUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListForOrg', function() {
      it('should call issuesListForOrg successfully', function(done) {
        //uncomment below and update the code to test issuesListForOrg
        //instance.issuesListForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListForRepo', function() {
      it('should call issuesListForRepo successfully', function(done) {
        //uncomment below and update the code to test issuesListForRepo
        //instance.issuesListForRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListLabelsForMilestone', function() {
      it('should call issuesListLabelsForMilestone successfully', function(done) {
        //uncomment below and update the code to test issuesListLabelsForMilestone
        //instance.issuesListLabelsForMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListLabelsForRepo', function() {
      it('should call issuesListLabelsForRepo successfully', function(done) {
        //uncomment below and update the code to test issuesListLabelsForRepo
        //instance.issuesListLabelsForRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListLabelsOnIssue', function() {
      it('should call issuesListLabelsOnIssue successfully', function(done) {
        //uncomment below and update the code to test issuesListLabelsOnIssue
        //instance.issuesListLabelsOnIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesListMilestones', function() {
      it('should call issuesListMilestones successfully', function(done) {
        //uncomment below and update the code to test issuesListMilestones
        //instance.issuesListMilestones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesLock', function() {
      it('should call issuesLock successfully', function(done) {
        //uncomment below and update the code to test issuesLock
        //instance.issuesLock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesRemoveAllLabels', function() {
      it('should call issuesRemoveAllLabels successfully', function(done) {
        //uncomment below and update the code to test issuesRemoveAllLabels
        //instance.issuesRemoveAllLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesRemoveAssignees', function() {
      it('should call issuesRemoveAssignees successfully', function(done) {
        //uncomment below and update the code to test issuesRemoveAssignees
        //instance.issuesRemoveAssignees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesRemoveLabel', function() {
      it('should call issuesRemoveLabel successfully', function(done) {
        //uncomment below and update the code to test issuesRemoveLabel
        //instance.issuesRemoveLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesSetLabels', function() {
      it('should call issuesSetLabels successfully', function(done) {
        //uncomment below and update the code to test issuesSetLabels
        //instance.issuesSetLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesUnlock', function() {
      it('should call issuesUnlock successfully', function(done) {
        //uncomment below and update the code to test issuesUnlock
        //instance.issuesUnlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesUpdate', function() {
      it('should call issuesUpdate successfully', function(done) {
        //uncomment below and update the code to test issuesUpdate
        //instance.issuesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesUpdateComment', function() {
      it('should call issuesUpdateComment successfully', function(done) {
        //uncomment below and update the code to test issuesUpdateComment
        //instance.issuesUpdateComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesUpdateLabel', function() {
      it('should call issuesUpdateLabel successfully', function(done) {
        //uncomment below and update the code to test issuesUpdateLabel
        //instance.issuesUpdateLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuesUpdateMilestone', function() {
      it('should call issuesUpdateMilestone successfully', function(done) {
        //uncomment below and update the code to test issuesUpdateMilestone
        //instance.issuesUpdateMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
