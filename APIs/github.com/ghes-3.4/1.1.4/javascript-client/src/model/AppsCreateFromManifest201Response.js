/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Integration from './Integration';
import IntegrationPermissions from './IntegrationPermissions';
import NullableSimpleUser from './NullableSimpleUser';

/**
 * The AppsCreateFromManifest201Response model module.
 * @module model/AppsCreateFromManifest201Response
 * @version 1.1.4
 */
class AppsCreateFromManifest201Response {
    /**
     * Constructs a new <code>AppsCreateFromManifest201Response</code>.
     * @alias module:model/AppsCreateFromManifest201Response
     * @implements module:model/Integration
     * @param clientId {String} 
     * @param clientSecret {String} 
     * @param createdAt {Date} 
     * @param description {String} 
     * @param events {Array.<String>} The list of events for the GitHub app
     * @param externalUrl {String} 
     * @param htmlUrl {String} 
     * @param id {Number} Unique identifier of the GitHub app
     * @param name {String} The name of the GitHub app
     * @param nodeId {String} 
     * @param owner {module:model/NullableSimpleUser} 
     * @param pem {String} 
     * @param permissions {module:model/IntegrationPermissions} 
     * @param updatedAt {Date} 
     * @param webhookSecret {String} 
     */
    constructor(clientId, clientSecret, createdAt, description, events, externalUrl, htmlUrl, id, name, nodeId, owner, pem, permissions, updatedAt, webhookSecret) { 
        Integration.initialize(this, createdAt, description, events, externalUrl, htmlUrl, id, name, nodeId, owner, permissions, updatedAt);
        AppsCreateFromManifest201Response.initialize(this, clientId, clientSecret, createdAt, description, events, externalUrl, htmlUrl, id, name, nodeId, owner, pem, permissions, updatedAt, webhookSecret);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientId, clientSecret, createdAt, description, events, externalUrl, htmlUrl, id, name, nodeId, owner, pem, permissions, updatedAt, webhookSecret) { 
        obj['client_id'] = clientId;
        obj['client_secret'] = clientSecret;
        obj['created_at'] = createdAt;
        obj['description'] = description;
        obj['events'] = events;
        obj['external_url'] = externalUrl;
        obj['html_url'] = htmlUrl;
        obj['id'] = id;
        obj['name'] = name;
        obj['node_id'] = nodeId;
        obj['owner'] = owner;
        obj['pem'] = pem;
        obj['permissions'] = permissions;
        obj['updated_at'] = updatedAt;
        obj['webhook_secret'] = webhookSecret;
    }

    /**
     * Constructs a <code>AppsCreateFromManifest201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppsCreateFromManifest201Response} obj Optional instance to populate.
     * @return {module:model/AppsCreateFromManifest201Response} The populated <code>AppsCreateFromManifest201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppsCreateFromManifest201Response();
            Integration.constructFromObject(data, obj);

            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('client_secret')) {
                obj['client_secret'] = ApiClient.convertToType(data['client_secret'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], ['String']);
            }
            if (data.hasOwnProperty('external_url')) {
                obj['external_url'] = ApiClient.convertToType(data['external_url'], 'String');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('installations_count')) {
                obj['installations_count'] = ApiClient.convertToType(data['installations_count'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = NullableSimpleUser.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('pem')) {
                obj['pem'] = ApiClient.convertToType(data['pem'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = IntegrationPermissions.constructFromObject(data['permissions']);
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('webhook_secret')) {
                obj['webhook_secret'] = ApiClient.convertToType(data['webhook_secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppsCreateFromManifest201Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppsCreateFromManifest201Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppsCreateFromManifest201Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['client_secret'] && !(typeof data['client_secret'] === 'string' || data['client_secret'] instanceof String)) {
            throw new Error("Expected the field `client_secret` to be a primitive type in the JSON string but got " + data['client_secret']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['events'])) {
            throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
        }
        // ensure the json data is a string
        if (data['external_url'] && !(typeof data['external_url'] === 'string' || data['external_url'] instanceof String)) {
            throw new Error("Expected the field `external_url` to be a primitive type in the JSON string but got " + data['external_url']);
        }
        // ensure the json data is a string
        if (data['html_url'] && !(typeof data['html_url'] === 'string' || data['html_url'] instanceof String)) {
            throw new Error("Expected the field `html_url` to be a primitive type in the JSON string but got " + data['html_url']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          NullableSimpleUser.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['pem'] && !(typeof data['pem'] === 'string' || data['pem'] instanceof String)) {
            throw new Error("Expected the field `pem` to be a primitive type in the JSON string but got " + data['pem']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['webhook_secret'] && !(typeof data['webhook_secret'] === 'string' || data['webhook_secret'] instanceof String)) {
            throw new Error("Expected the field `webhook_secret` to be a primitive type in the JSON string but got " + data['webhook_secret']);
        }

        return true;
    }


}

AppsCreateFromManifest201Response.RequiredProperties = ["client_id", "client_secret", "created_at", "description", "events", "external_url", "html_url", "id", "name", "node_id", "owner", "pem", "permissions", "updated_at", "webhook_secret"];

/**
 * @member {String} client_id
 */
AppsCreateFromManifest201Response.prototype['client_id'] = undefined;

/**
 * @member {String} client_secret
 */
AppsCreateFromManifest201Response.prototype['client_secret'] = undefined;

/**
 * @member {Date} created_at
 */
AppsCreateFromManifest201Response.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
AppsCreateFromManifest201Response.prototype['description'] = undefined;

/**
 * The list of events for the GitHub app
 * @member {Array.<String>} events
 */
AppsCreateFromManifest201Response.prototype['events'] = undefined;

/**
 * @member {String} external_url
 */
AppsCreateFromManifest201Response.prototype['external_url'] = undefined;

/**
 * @member {String} html_url
 */
AppsCreateFromManifest201Response.prototype['html_url'] = undefined;

/**
 * Unique identifier of the GitHub app
 * @member {Number} id
 */
AppsCreateFromManifest201Response.prototype['id'] = undefined;

/**
 * The number of installations associated with the GitHub app
 * @member {Number} installations_count
 */
AppsCreateFromManifest201Response.prototype['installations_count'] = undefined;

/**
 * The name of the GitHub app
 * @member {String} name
 */
AppsCreateFromManifest201Response.prototype['name'] = undefined;

/**
 * @member {String} node_id
 */
AppsCreateFromManifest201Response.prototype['node_id'] = undefined;

/**
 * @member {module:model/NullableSimpleUser} owner
 */
AppsCreateFromManifest201Response.prototype['owner'] = undefined;

/**
 * @member {String} pem
 */
AppsCreateFromManifest201Response.prototype['pem'] = undefined;

/**
 * @member {module:model/IntegrationPermissions} permissions
 */
AppsCreateFromManifest201Response.prototype['permissions'] = undefined;

/**
 * The slug name of the GitHub app
 * @member {String} slug
 */
AppsCreateFromManifest201Response.prototype['slug'] = undefined;

/**
 * @member {Date} updated_at
 */
AppsCreateFromManifest201Response.prototype['updated_at'] = undefined;

/**
 * @member {String} webhook_secret
 */
AppsCreateFromManifest201Response.prototype['webhook_secret'] = undefined;


// Implement Integration interface:
/**
 * @member {String} client_id
 */
Integration.prototype['client_id'] = undefined;
/**
 * @member {String} client_secret
 */
Integration.prototype['client_secret'] = undefined;
/**
 * @member {Date} created_at
 */
Integration.prototype['created_at'] = undefined;
/**
 * @member {String} description
 */
Integration.prototype['description'] = undefined;
/**
 * The list of events for the GitHub app
 * @member {Array.<String>} events
 */
Integration.prototype['events'] = undefined;
/**
 * @member {String} external_url
 */
Integration.prototype['external_url'] = undefined;
/**
 * @member {String} html_url
 */
Integration.prototype['html_url'] = undefined;
/**
 * Unique identifier of the GitHub app
 * @member {Number} id
 */
Integration.prototype['id'] = undefined;
/**
 * The number of installations associated with the GitHub app
 * @member {Number} installations_count
 */
Integration.prototype['installations_count'] = undefined;
/**
 * The name of the GitHub app
 * @member {String} name
 */
Integration.prototype['name'] = undefined;
/**
 * @member {String} node_id
 */
Integration.prototype['node_id'] = undefined;
/**
 * @member {module:model/NullableSimpleUser} owner
 */
Integration.prototype['owner'] = undefined;
/**
 * @member {String} pem
 */
Integration.prototype['pem'] = undefined;
/**
 * @member {module:model/IntegrationPermissions} permissions
 */
Integration.prototype['permissions'] = undefined;
/**
 * The slug name of the GitHub app
 * @member {String} slug
 */
Integration.prototype['slug'] = undefined;
/**
 * @member {Date} updated_at
 */
Integration.prototype['updated_at'] = undefined;
/**
 * @member {String} webhook_secret
 */
Integration.prototype['webhook_secret'] = undefined;




export default AppsCreateFromManifest201Response;

