/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReposListCacheInfo200ResponseInnerGit model module.
 * @module model/ReposListCacheInfo200ResponseInnerGit
 * @version 1.1.4
 */
class ReposListCacheInfo200ResponseInnerGit {
    /**
     * Constructs a new <code>ReposListCacheInfo200ResponseInnerGit</code>.
     * @alias module:model/ReposListCacheInfo200ResponseInnerGit
     * @param lastSync {Date} 
     * @param syncStatus {module:model/ReposListCacheInfo200ResponseInnerGit.SyncStatusEnum} 
     */
    constructor(lastSync, syncStatus) { 
        
        ReposListCacheInfo200ResponseInnerGit.initialize(this, lastSync, syncStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastSync, syncStatus) { 
        obj['last_sync'] = lastSync;
        obj['sync_status'] = syncStatus;
    }

    /**
     * Constructs a <code>ReposListCacheInfo200ResponseInnerGit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReposListCacheInfo200ResponseInnerGit} obj Optional instance to populate.
     * @return {module:model/ReposListCacheInfo200ResponseInnerGit} The populated <code>ReposListCacheInfo200ResponseInnerGit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReposListCacheInfo200ResponseInnerGit();

            if (data.hasOwnProperty('last_sync')) {
                obj['last_sync'] = ApiClient.convertToType(data['last_sync'], 'Date');
            }
            if (data.hasOwnProperty('sync_status')) {
                obj['sync_status'] = ApiClient.convertToType(data['sync_status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReposListCacheInfo200ResponseInnerGit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReposListCacheInfo200ResponseInnerGit</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReposListCacheInfo200ResponseInnerGit.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sync_status'] && !(typeof data['sync_status'] === 'string' || data['sync_status'] instanceof String)) {
            throw new Error("Expected the field `sync_status` to be a primitive type in the JSON string but got " + data['sync_status']);
        }

        return true;
    }


}

ReposListCacheInfo200ResponseInnerGit.RequiredProperties = ["last_sync", "sync_status"];

/**
 * @member {Date} last_sync
 */
ReposListCacheInfo200ResponseInnerGit.prototype['last_sync'] = undefined;

/**
 * @member {module:model/ReposListCacheInfo200ResponseInnerGit.SyncStatusEnum} sync_status
 */
ReposListCacheInfo200ResponseInnerGit.prototype['sync_status'] = undefined;





/**
 * Allowed values for the <code>sync_status</code> property.
 * @enum {String}
 * @readonly
 */
ReposListCacheInfo200ResponseInnerGit['SyncStatusEnum'] = {

    /**
     * value: "offline"
     * @const
     */
    "offline": "offline",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "in_sync"
     * @const
     */
    "in_sync": "in_sync",

    /**
     * value: "not_in_sync"
     * @const
     */
    "not_in_sync": "not_in_sync"
};



export default ReposListCacheInfo200ResponseInnerGit;

