/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LicenseInfoSeats from './LicenseInfoSeats';

/**
 * The LicenseInfo model module.
 * @module model/LicenseInfo
 * @version 1.1.4
 */
class LicenseInfo {
    /**
     * Constructs a new <code>LicenseInfo</code>.
     * @alias module:model/LicenseInfo
     */
    constructor() { 
        
        LicenseInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseInfo} obj Optional instance to populate.
     * @return {module:model/LicenseInfo} The populated <code>LicenseInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseInfo();

            if (data.hasOwnProperty('days_until_expiration')) {
                obj['days_until_expiration'] = ApiClient.convertToType(data['days_until_expiration'], 'Number');
            }
            if (data.hasOwnProperty('expire_at')) {
                obj['expire_at'] = ApiClient.convertToType(data['expire_at'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('seats')) {
                obj['seats'] = LicenseInfoSeats.constructFromObject(data['seats']);
            }
            if (data.hasOwnProperty('seats_available')) {
                obj['seats_available'] = LicenseInfoSeats.constructFromObject(data['seats_available']);
            }
            if (data.hasOwnProperty('seats_used')) {
                obj['seats_used'] = ApiClient.convertToType(data['seats_used'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expire_at'] && !(typeof data['expire_at'] === 'string' || data['expire_at'] instanceof String)) {
            throw new Error("Expected the field `expire_at` to be a primitive type in the JSON string but got " + data['expire_at']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `seats`
        if (data['seats']) { // data not null
          LicenseInfoSeats.validateJSON(data['seats']);
        }
        // validate the optional field `seats_available`
        if (data['seats_available']) { // data not null
          LicenseInfoSeats.validateJSON(data['seats_available']);
        }

        return true;
    }


}



/**
 * @member {Number} days_until_expiration
 */
LicenseInfo.prototype['days_until_expiration'] = undefined;

/**
 * @member {String} expire_at
 */
LicenseInfo.prototype['expire_at'] = undefined;

/**
 * @member {String} kind
 */
LicenseInfo.prototype['kind'] = undefined;

/**
 * @member {module:model/LicenseInfoSeats} seats
 */
LicenseInfo.prototype['seats'] = undefined;

/**
 * @member {module:model/LicenseInfoSeats} seats_available
 */
LicenseInfo.prototype['seats_available'] = undefined;

/**
 * @member {Number} seats_used
 */
LicenseInfo.prototype['seats_used'] = undefined;






export default LicenseInfo;

