/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodeScanningAlertDismissedReason from './CodeScanningAlertDismissedReason';
import CodeScanningAlertInstance from './CodeScanningAlertInstance';
import CodeScanningAlertRuleSummary from './CodeScanningAlertRuleSummary';
import CodeScanningAlertState from './CodeScanningAlertState';
import CodeScanningAnalysisTool from './CodeScanningAnalysisTool';
import NullableSimpleUser from './NullableSimpleUser';

/**
 * The CodeScanningAlertItems model module.
 * @module model/CodeScanningAlertItems
 * @version 1.1.4
 */
class CodeScanningAlertItems {
    /**
     * Constructs a new <code>CodeScanningAlertItems</code>.
     * @alias module:model/CodeScanningAlertItems
     * @param createdAt {Date} The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param dismissedAt {Date} The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param dismissedBy {module:model/NullableSimpleUser} 
     * @param dismissedReason {module:model/CodeScanningAlertDismissedReason} 
     * @param htmlUrl {String} The GitHub URL of the alert resource.
     * @param instancesUrl {String} The REST API URL for fetching the list of instances for an alert.
     * @param mostRecentInstance {module:model/CodeScanningAlertInstance} 
     * @param number {Number} The security alert number.
     * @param rule {module:model/CodeScanningAlertRuleSummary} 
     * @param state {module:model/CodeScanningAlertState} 
     * @param tool {module:model/CodeScanningAnalysisTool} 
     * @param url {String} The REST API URL of the alert resource.
     */
    constructor(createdAt, dismissedAt, dismissedBy, dismissedReason, htmlUrl, instancesUrl, mostRecentInstance, number, rule, state, tool, url) { 
        
        CodeScanningAlertItems.initialize(this, createdAt, dismissedAt, dismissedBy, dismissedReason, htmlUrl, instancesUrl, mostRecentInstance, number, rule, state, tool, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, dismissedAt, dismissedBy, dismissedReason, htmlUrl, instancesUrl, mostRecentInstance, number, rule, state, tool, url) { 
        obj['created_at'] = createdAt;
        obj['dismissed_at'] = dismissedAt;
        obj['dismissed_by'] = dismissedBy;
        obj['dismissed_reason'] = dismissedReason;
        obj['html_url'] = htmlUrl;
        obj['instances_url'] = instancesUrl;
        obj['most_recent_instance'] = mostRecentInstance;
        obj['number'] = number;
        obj['rule'] = rule;
        obj['state'] = state;
        obj['tool'] = tool;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>CodeScanningAlertItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodeScanningAlertItems} obj Optional instance to populate.
     * @return {module:model/CodeScanningAlertItems} The populated <code>CodeScanningAlertItems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodeScanningAlertItems();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('dismissed_at')) {
                obj['dismissed_at'] = ApiClient.convertToType(data['dismissed_at'], 'Date');
            }
            if (data.hasOwnProperty('dismissed_by')) {
                obj['dismissed_by'] = NullableSimpleUser.constructFromObject(data['dismissed_by']);
            }
            if (data.hasOwnProperty('dismissed_reason')) {
                obj['dismissed_reason'] = CodeScanningAlertDismissedReason.constructFromObject(data['dismissed_reason']);
            }
            if (data.hasOwnProperty('fixed_at')) {
                obj['fixed_at'] = ApiClient.convertToType(data['fixed_at'], 'Date');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('instances_url')) {
                obj['instances_url'] = ApiClient.convertToType(data['instances_url'], 'String');
            }
            if (data.hasOwnProperty('most_recent_instance')) {
                obj['most_recent_instance'] = CodeScanningAlertInstance.constructFromObject(data['most_recent_instance']);
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('rule')) {
                obj['rule'] = CodeScanningAlertRuleSummary.constructFromObject(data['rule']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = CodeScanningAlertState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('tool')) {
                obj['tool'] = CodeScanningAnalysisTool.constructFromObject(data['tool']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodeScanningAlertItems</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodeScanningAlertItems</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CodeScanningAlertItems.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `dismissed_by`
        if (data['dismissed_by']) { // data not null
          NullableSimpleUser.validateJSON(data['dismissed_by']);
        }
        // ensure the json data is a string
        if (data['html_url'] && !(typeof data['html_url'] === 'string' || data['html_url'] instanceof String)) {
            throw new Error("Expected the field `html_url` to be a primitive type in the JSON string but got " + data['html_url']);
        }
        // ensure the json data is a string
        if (data['instances_url'] && !(typeof data['instances_url'] === 'string' || data['instances_url'] instanceof String)) {
            throw new Error("Expected the field `instances_url` to be a primitive type in the JSON string but got " + data['instances_url']);
        }
        // validate the optional field `most_recent_instance`
        if (data['most_recent_instance']) { // data not null
          CodeScanningAlertInstance.validateJSON(data['most_recent_instance']);
        }
        // validate the optional field `rule`
        if (data['rule']) { // data not null
          CodeScanningAlertRuleSummary.validateJSON(data['rule']);
        }
        // validate the optional field `tool`
        if (data['tool']) { // data not null
          CodeScanningAnalysisTool.validateJSON(data['tool']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

CodeScanningAlertItems.RequiredProperties = ["created_at", "dismissed_at", "dismissed_by", "dismissed_reason", "html_url", "instances_url", "most_recent_instance", "number", "rule", "state", "tool", "url"];

/**
 * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} created_at
 */
CodeScanningAlertItems.prototype['created_at'] = undefined;

/**
 * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} dismissed_at
 */
CodeScanningAlertItems.prototype['dismissed_at'] = undefined;

/**
 * @member {module:model/NullableSimpleUser} dismissed_by
 */
CodeScanningAlertItems.prototype['dismissed_by'] = undefined;

/**
 * @member {module:model/CodeScanningAlertDismissedReason} dismissed_reason
 */
CodeScanningAlertItems.prototype['dismissed_reason'] = undefined;

/**
 * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} fixed_at
 */
CodeScanningAlertItems.prototype['fixed_at'] = undefined;

/**
 * The GitHub URL of the alert resource.
 * @member {String} html_url
 */
CodeScanningAlertItems.prototype['html_url'] = undefined;

/**
 * The REST API URL for fetching the list of instances for an alert.
 * @member {String} instances_url
 */
CodeScanningAlertItems.prototype['instances_url'] = undefined;

/**
 * @member {module:model/CodeScanningAlertInstance} most_recent_instance
 */
CodeScanningAlertItems.prototype['most_recent_instance'] = undefined;

/**
 * The security alert number.
 * @member {Number} number
 */
CodeScanningAlertItems.prototype['number'] = undefined;

/**
 * @member {module:model/CodeScanningAlertRuleSummary} rule
 */
CodeScanningAlertItems.prototype['rule'] = undefined;

/**
 * @member {module:model/CodeScanningAlertState} state
 */
CodeScanningAlertItems.prototype['state'] = undefined;

/**
 * @member {module:model/CodeScanningAnalysisTool} tool
 */
CodeScanningAlertItems.prototype['tool'] = undefined;

/**
 * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} updated_at
 */
CodeScanningAlertItems.prototype['updated_at'] = undefined;

/**
 * The REST API URL of the alert resource.
 * @member {String} url
 */
CodeScanningAlertItems.prototype['url'] = undefined;






export default CodeScanningAlertItems;

