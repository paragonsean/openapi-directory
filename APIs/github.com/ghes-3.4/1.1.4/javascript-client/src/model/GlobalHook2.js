/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GlobalHook2Config from './GlobalHook2Config';

/**
 * The GlobalHook2 model module.
 * @module model/GlobalHook2
 * @version 1.1.4
 */
class GlobalHook2 {
    /**
     * Constructs a new <code>GlobalHook2</code>.
     * @alias module:model/GlobalHook2
     */
    constructor() { 
        
        GlobalHook2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GlobalHook2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GlobalHook2} obj Optional instance to populate.
     * @return {module:model/GlobalHook2} The populated <code>GlobalHook2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GlobalHook2();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = GlobalHook2Config.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ping_url')) {
                obj['ping_url'] = ApiClient.convertToType(data['ping_url'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GlobalHook2</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GlobalHook2</code>.
     */
    static validateJSON(data) {
        // validate the optional field `config`
        if (data['config']) { // data not null
          GlobalHook2Config.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['events'])) {
            throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['ping_url'] && !(typeof data['ping_url'] === 'string' || data['ping_url'] instanceof String)) {
            throw new Error("Expected the field `ping_url` to be a primitive type in the JSON string but got " + data['ping_url']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {Boolean} active
 */
GlobalHook2.prototype['active'] = undefined;

/**
 * @member {module:model/GlobalHook2Config} config
 */
GlobalHook2.prototype['config'] = undefined;

/**
 * @member {String} created_at
 */
GlobalHook2.prototype['created_at'] = undefined;

/**
 * @member {Array.<String>} events
 */
GlobalHook2.prototype['events'] = undefined;

/**
 * @member {Number} id
 */
GlobalHook2.prototype['id'] = undefined;

/**
 * @member {String} name
 */
GlobalHook2.prototype['name'] = undefined;

/**
 * @member {String} ping_url
 */
GlobalHook2.prototype['ping_url'] = undefined;

/**
 * @member {String} type
 */
GlobalHook2.prototype['type'] = undefined;

/**
 * @member {String} updated_at
 */
GlobalHook2.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
GlobalHook2.prototype['url'] = undefined;






export default GlobalHook2;

