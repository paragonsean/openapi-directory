/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchResultTextMatchesInner from './SearchResultTextMatchesInner';
import TopicSearchResultItemAliasesInner from './TopicSearchResultItemAliasesInner';

/**
 * The TopicSearchResultItem model module.
 * @module model/TopicSearchResultItem
 * @version 1.1.4
 */
class TopicSearchResultItem {
    /**
     * Constructs a new <code>TopicSearchResultItem</code>.
     * Topic Search Result Item
     * @alias module:model/TopicSearchResultItem
     * @param createdAt {Date} 
     * @param createdBy {String} 
     * @param curated {Boolean} 
     * @param description {String} 
     * @param displayName {String} 
     * @param featured {Boolean} 
     * @param name {String} 
     * @param released {String} 
     * @param score {Number} 
     * @param shortDescription {String} 
     * @param updatedAt {Date} 
     */
    constructor(createdAt, createdBy, curated, description, displayName, featured, name, released, score, shortDescription, updatedAt) { 
        
        TopicSearchResultItem.initialize(this, createdAt, createdBy, curated, description, displayName, featured, name, released, score, shortDescription, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, createdBy, curated, description, displayName, featured, name, released, score, shortDescription, updatedAt) { 
        obj['created_at'] = createdAt;
        obj['created_by'] = createdBy;
        obj['curated'] = curated;
        obj['description'] = description;
        obj['display_name'] = displayName;
        obj['featured'] = featured;
        obj['name'] = name;
        obj['released'] = released;
        obj['score'] = score;
        obj['short_description'] = shortDescription;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>TopicSearchResultItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TopicSearchResultItem} obj Optional instance to populate.
     * @return {module:model/TopicSearchResultItem} The populated <code>TopicSearchResultItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TopicSearchResultItem();

            if (data.hasOwnProperty('aliases')) {
                obj['aliases'] = ApiClient.convertToType(data['aliases'], [TopicSearchResultItemAliasesInner]);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('curated')) {
                obj['curated'] = ApiClient.convertToType(data['curated'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('featured')) {
                obj['featured'] = ApiClient.convertToType(data['featured'], 'Boolean');
            }
            if (data.hasOwnProperty('logo_url')) {
                obj['logo_url'] = ApiClient.convertToType(data['logo_url'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('related')) {
                obj['related'] = ApiClient.convertToType(data['related'], [TopicSearchResultItemAliasesInner]);
            }
            if (data.hasOwnProperty('released')) {
                obj['released'] = ApiClient.convertToType(data['released'], 'String');
            }
            if (data.hasOwnProperty('repository_count')) {
                obj['repository_count'] = ApiClient.convertToType(data['repository_count'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('short_description')) {
                obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
            }
            if (data.hasOwnProperty('text_matches')) {
                obj['text_matches'] = ApiClient.convertToType(data['text_matches'], [SearchResultTextMatchesInner]);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TopicSearchResultItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TopicSearchResultItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TopicSearchResultItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['aliases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['aliases'])) {
                throw new Error("Expected the field `aliases` to be an array in the JSON data but got " + data['aliases']);
            }
            // validate the optional field `aliases` (array)
            for (const item of data['aliases']) {
                TopicSearchResultItemAliasesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['logo_url'] && !(typeof data['logo_url'] === 'string' || data['logo_url'] instanceof String)) {
            throw new Error("Expected the field `logo_url` to be a primitive type in the JSON string but got " + data['logo_url']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['related']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['related'])) {
                throw new Error("Expected the field `related` to be an array in the JSON data but got " + data['related']);
            }
            // validate the optional field `related` (array)
            for (const item of data['related']) {
                TopicSearchResultItemAliasesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['released'] && !(typeof data['released'] === 'string' || data['released'] instanceof String)) {
            throw new Error("Expected the field `released` to be a primitive type in the JSON string but got " + data['released']);
        }
        // ensure the json data is a string
        if (data['short_description'] && !(typeof data['short_description'] === 'string' || data['short_description'] instanceof String)) {
            throw new Error("Expected the field `short_description` to be a primitive type in the JSON string but got " + data['short_description']);
        }
        if (data['text_matches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['text_matches'])) {
                throw new Error("Expected the field `text_matches` to be an array in the JSON data but got " + data['text_matches']);
            }
            // validate the optional field `text_matches` (array)
            for (const item of data['text_matches']) {
                SearchResultTextMatchesInner.validateJSON(item);
            };
        }

        return true;
    }


}

TopicSearchResultItem.RequiredProperties = ["created_at", "created_by", "curated", "description", "display_name", "featured", "name", "released", "score", "short_description", "updated_at"];

/**
 * @member {Array.<module:model/TopicSearchResultItemAliasesInner>} aliases
 */
TopicSearchResultItem.prototype['aliases'] = undefined;

/**
 * @member {Date} created_at
 */
TopicSearchResultItem.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
TopicSearchResultItem.prototype['created_by'] = undefined;

/**
 * @member {Boolean} curated
 */
TopicSearchResultItem.prototype['curated'] = undefined;

/**
 * @member {String} description
 */
TopicSearchResultItem.prototype['description'] = undefined;

/**
 * @member {String} display_name
 */
TopicSearchResultItem.prototype['display_name'] = undefined;

/**
 * @member {Boolean} featured
 */
TopicSearchResultItem.prototype['featured'] = undefined;

/**
 * @member {String} logo_url
 */
TopicSearchResultItem.prototype['logo_url'] = undefined;

/**
 * @member {String} name
 */
TopicSearchResultItem.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/TopicSearchResultItemAliasesInner>} related
 */
TopicSearchResultItem.prototype['related'] = undefined;

/**
 * @member {String} released
 */
TopicSearchResultItem.prototype['released'] = undefined;

/**
 * @member {Number} repository_count
 */
TopicSearchResultItem.prototype['repository_count'] = undefined;

/**
 * @member {Number} score
 */
TopicSearchResultItem.prototype['score'] = undefined;

/**
 * @member {String} short_description
 */
TopicSearchResultItem.prototype['short_description'] = undefined;

/**
 * @member {Array.<module:model/SearchResultTextMatchesInner>} text_matches
 */
TopicSearchResultItem.prototype['text_matches'] = undefined;

/**
 * @member {Date} updated_at
 */
TopicSearchResultItem.prototype['updated_at'] = undefined;






export default TopicSearchResultItem;

