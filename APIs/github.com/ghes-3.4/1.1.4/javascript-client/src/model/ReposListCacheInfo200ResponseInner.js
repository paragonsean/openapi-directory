/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReposListCacheInfo200ResponseInnerGit from './ReposListCacheInfo200ResponseInnerGit';

/**
 * The ReposListCacheInfo200ResponseInner model module.
 * @module model/ReposListCacheInfo200ResponseInner
 * @version 1.1.4
 */
class ReposListCacheInfo200ResponseInner {
    /**
     * Constructs a new <code>ReposListCacheInfo200ResponseInner</code>.
     * Status for a cache replica
     * @alias module:model/ReposListCacheInfo200ResponseInner
     * @param git {module:model/ReposListCacheInfo200ResponseInnerGit} 
     * @param host {String} 
     * @param location {String} 
     */
    constructor(git, host, location) { 
        
        ReposListCacheInfo200ResponseInner.initialize(this, git, host, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, git, host, location) { 
        obj['git'] = git;
        obj['host'] = host;
        obj['location'] = location;
    }

    /**
     * Constructs a <code>ReposListCacheInfo200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReposListCacheInfo200ResponseInner} obj Optional instance to populate.
     * @return {module:model/ReposListCacheInfo200ResponseInner} The populated <code>ReposListCacheInfo200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReposListCacheInfo200ResponseInner();

            if (data.hasOwnProperty('git')) {
                obj['git'] = ReposListCacheInfo200ResponseInnerGit.constructFromObject(data['git']);
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReposListCacheInfo200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReposListCacheInfo200ResponseInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReposListCacheInfo200ResponseInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `git`
        if (data['git']) { // data not null
          ReposListCacheInfo200ResponseInnerGit.validateJSON(data['git']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }

        return true;
    }


}

ReposListCacheInfo200ResponseInner.RequiredProperties = ["git", "host", "location"];

/**
 * @member {module:model/ReposListCacheInfo200ResponseInnerGit} git
 */
ReposListCacheInfo200ResponseInner.prototype['git'] = undefined;

/**
 * @member {String} host
 */
ReposListCacheInfo200ResponseInner.prototype['host'] = undefined;

/**
 * @member {String} location
 */
ReposListCacheInfo200ResponseInner.prototype['location'] = undefined;






export default ReposListCacheInfo200ResponseInner;

