/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Integration from './Integration';
import SimpleUser from './SimpleUser';
import Team from './Team';

/**
 * The ProtectedBranchPullRequestReviewBypassPullRequestAllowances model module.
 * @module model/ProtectedBranchPullRequestReviewBypassPullRequestAllowances
 * @version 1.1.4
 */
class ProtectedBranchPullRequestReviewBypassPullRequestAllowances {
    /**
     * Constructs a new <code>ProtectedBranchPullRequestReviewBypassPullRequestAllowances</code>.
     * Allow specific users, teams, or apps to bypass pull request requirements.
     * @alias module:model/ProtectedBranchPullRequestReviewBypassPullRequestAllowances
     */
    constructor() { 
        
        ProtectedBranchPullRequestReviewBypassPullRequestAllowances.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProtectedBranchPullRequestReviewBypassPullRequestAllowances</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProtectedBranchPullRequestReviewBypassPullRequestAllowances} obj Optional instance to populate.
     * @return {module:model/ProtectedBranchPullRequestReviewBypassPullRequestAllowances} The populated <code>ProtectedBranchPullRequestReviewBypassPullRequestAllowances</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProtectedBranchPullRequestReviewBypassPullRequestAllowances();

            if (data.hasOwnProperty('apps')) {
                obj['apps'] = ApiClient.convertToType(data['apps'], [Integration]);
            }
            if (data.hasOwnProperty('teams')) {
                obj['teams'] = ApiClient.convertToType(data['teams'], [Team]);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [SimpleUser]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProtectedBranchPullRequestReviewBypassPullRequestAllowances</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProtectedBranchPullRequestReviewBypassPullRequestAllowances</code>.
     */
    static validateJSON(data) {
        if (data['apps']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['apps'])) {
                throw new Error("Expected the field `apps` to be an array in the JSON data but got " + data['apps']);
            }
            // validate the optional field `apps` (array)
            for (const item of data['apps']) {
                Integration.validateJSON(item);
            };
        }
        if (data['teams']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['teams'])) {
                throw new Error("Expected the field `teams` to be an array in the JSON data but got " + data['teams']);
            }
            // validate the optional field `teams` (array)
            for (const item of data['teams']) {
                Team.validateJSON(item);
            };
        }
        if (data['users']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['users'])) {
                throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
            }
            // validate the optional field `users` (array)
            for (const item of data['users']) {
                SimpleUser.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of apps allowed to bypass pull request requirements.
 * @member {Array.<module:model/Integration>} apps
 */
ProtectedBranchPullRequestReviewBypassPullRequestAllowances.prototype['apps'] = undefined;

/**
 * The list of teams allowed to bypass pull request requirements.
 * @member {Array.<module:model/Team>} teams
 */
ProtectedBranchPullRequestReviewBypassPullRequestAllowances.prototype['teams'] = undefined;

/**
 * The list of users allowed to bypass pull request requirements.
 * @member {Array.<module:model/SimpleUser>} users
 */
ProtectedBranchPullRequestReviewBypassPullRequestAllowances.prototype['users'] = undefined;






export default ProtectedBranchPullRequestReviewBypassPullRequestAllowances;

