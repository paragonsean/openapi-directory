/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeploymentBranchPolicySettings from './DeploymentBranchPolicySettings';
import EnvironmentProtectionRulesInner from './EnvironmentProtectionRulesInner';

/**
 * The Environment model module.
 * @module model/Environment
 * @version 1.1.4
 */
class Environment {
    /**
     * Constructs a new <code>Environment</code>.
     * Details of a deployment environment
     * @alias module:model/Environment
     * @param createdAt {Date} The time that the environment was created, in ISO 8601 format.
     * @param htmlUrl {String} 
     * @param id {Number} The id of the environment.
     * @param name {String} The name of the environment.
     * @param nodeId {String} 
     * @param updatedAt {Date} The time that the environment was last updated, in ISO 8601 format.
     * @param url {String} 
     */
    constructor(createdAt, htmlUrl, id, name, nodeId, updatedAt, url) { 
        
        Environment.initialize(this, createdAt, htmlUrl, id, name, nodeId, updatedAt, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, htmlUrl, id, name, nodeId, updatedAt, url) { 
        obj['created_at'] = createdAt;
        obj['html_url'] = htmlUrl;
        obj['id'] = id;
        obj['name'] = name;
        obj['node_id'] = nodeId;
        obj['updated_at'] = updatedAt;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Environment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Environment} obj Optional instance to populate.
     * @return {module:model/Environment} The populated <code>Environment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Environment();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('deployment_branch_policy')) {
                obj['deployment_branch_policy'] = DeploymentBranchPolicySettings.constructFromObject(data['deployment_branch_policy']);
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('protection_rules')) {
                obj['protection_rules'] = ApiClient.convertToType(data['protection_rules'], [EnvironmentProtectionRulesInner]);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Environment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Environment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Environment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `deployment_branch_policy`
        if (data['deployment_branch_policy']) { // data not null
          DeploymentBranchPolicySettings.validateJSON(data['deployment_branch_policy']);
        }
        // ensure the json data is a string
        if (data['html_url'] && !(typeof data['html_url'] === 'string' || data['html_url'] instanceof String)) {
            throw new Error("Expected the field `html_url` to be a primitive type in the JSON string but got " + data['html_url']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }
        if (data['protection_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['protection_rules'])) {
                throw new Error("Expected the field `protection_rules` to be an array in the JSON data but got " + data['protection_rules']);
            }
            // validate the optional field `protection_rules` (array)
            for (const item of data['protection_rules']) {
                EnvironmentProtectionRulesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

Environment.RequiredProperties = ["created_at", "html_url", "id", "name", "node_id", "updated_at", "url"];

/**
 * The time that the environment was created, in ISO 8601 format.
 * @member {Date} created_at
 */
Environment.prototype['created_at'] = undefined;

/**
 * @member {module:model/DeploymentBranchPolicySettings} deployment_branch_policy
 */
Environment.prototype['deployment_branch_policy'] = undefined;

/**
 * @member {String} html_url
 */
Environment.prototype['html_url'] = undefined;

/**
 * The id of the environment.
 * @member {Number} id
 */
Environment.prototype['id'] = undefined;

/**
 * The name of the environment.
 * @member {String} name
 */
Environment.prototype['name'] = undefined;

/**
 * @member {String} node_id
 */
Environment.prototype['node_id'] = undefined;

/**
 * @member {Array.<module:model/EnvironmentProtectionRulesInner>} protection_rules
 */
Environment.prototype['protection_rules'] = undefined;

/**
 * The time that the environment was last updated, in ISO 8601 format.
 * @member {Date} updated_at
 */
Environment.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
Environment.prototype['url'] = undefined;






export default Environment;

