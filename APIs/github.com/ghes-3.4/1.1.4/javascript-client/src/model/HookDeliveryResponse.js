/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HookDeliveryResponse model module.
 * @module model/HookDeliveryResponse
 * @version 1.1.4
 */
class HookDeliveryResponse {
    /**
     * Constructs a new <code>HookDeliveryResponse</code>.
     * @alias module:model/HookDeliveryResponse
     * @param headers {Object.<String, Object>} The response headers received when the delivery was made.
     * @param payload {Object.<String, Object>} The response payload received.
     */
    constructor(headers, payload) { 
        
        HookDeliveryResponse.initialize(this, headers, payload);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, headers, payload) { 
        obj['headers'] = headers;
        obj['payload'] = payload;
    }

    /**
     * Constructs a <code>HookDeliveryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HookDeliveryResponse} obj Optional instance to populate.
     * @return {module:model/HookDeliveryResponse} The populated <code>HookDeliveryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HookDeliveryResponse();

            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': Object});
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HookDeliveryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HookDeliveryResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HookDeliveryResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

HookDeliveryResponse.RequiredProperties = ["headers", "payload"];

/**
 * The response headers received when the delivery was made.
 * @member {Object.<String, Object>} headers
 */
HookDeliveryResponse.prototype['headers'] = undefined;

/**
 * The response payload received.
 * @member {Object.<String, Object>} payload
 */
HookDeliveryResponse.prototype['payload'] = undefined;






export default HookDeliveryResponse;

