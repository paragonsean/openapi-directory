/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnterprise_admin_update_pre_receive_hook_request.h
 *
 * 
 */

#ifndef OAIEnterprise_admin_update_pre_receive_hook_request_H
#define OAIEnterprise_admin_update_pre_receive_hook_request_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnterprise_admin_update_pre_receive_hook_request : public OAIObject {
public:
    OAIEnterprise_admin_update_pre_receive_hook_request();
    OAIEnterprise_admin_update_pre_receive_hook_request(QString json);
    ~OAIEnterprise_admin_update_pre_receive_hook_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowDownstreamConfiguration() const;
    void setAllowDownstreamConfiguration(const bool &allow_downstream_configuration);
    bool is_allow_downstream_configuration_Set() const;
    bool is_allow_downstream_configuration_Valid() const;

    QString getEnforcement() const;
    void setEnforcement(const QString &enforcement);
    bool is_enforcement_Set() const;
    bool is_enforcement_Valid() const;

    QMap<QString, QJsonValue> getEnvironment() const;
    void setEnvironment(const QMap<QString, QJsonValue> &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    QMap<QString, QJsonValue> getScriptRepository() const;
    void setScriptRepository(const QMap<QString, QJsonValue> &script_repository);
    bool is_script_repository_Set() const;
    bool is_script_repository_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_downstream_configuration;
    bool m_allow_downstream_configuration_isSet;
    bool m_allow_downstream_configuration_isValid;

    QString m_enforcement;
    bool m_enforcement_isSet;
    bool m_enforcement_isValid;

    QMap<QString, QJsonValue> m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    QMap<QString, QJsonValue> m_script_repository;
    bool m_script_repository_isSet;
    bool m_script_repository_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnterprise_admin_update_pre_receive_hook_request)

#endif // OAIEnterprise_admin_update_pre_receive_hook_request_H
