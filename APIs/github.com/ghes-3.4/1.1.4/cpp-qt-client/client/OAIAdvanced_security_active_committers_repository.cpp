/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvanced_security_active_committers_repository.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvanced_security_active_committers_repository::OAIAdvanced_security_active_committers_repository(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvanced_security_active_committers_repository::OAIAdvanced_security_active_committers_repository() {
    this->initializeModel();
}

OAIAdvanced_security_active_committers_repository::~OAIAdvanced_security_active_committers_repository() {}

void OAIAdvanced_security_active_committers_repository::initializeModel() {

    m_advanced_security_committers_isSet = false;
    m_advanced_security_committers_isValid = false;

    m_advanced_security_committers_breakdown_isSet = false;
    m_advanced_security_committers_breakdown_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAdvanced_security_active_committers_repository::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvanced_security_active_committers_repository::fromJsonObject(QJsonObject json) {

    m_advanced_security_committers_isValid = ::OpenAPI::fromJsonValue(m_advanced_security_committers, json[QString("advanced_security_committers")]);
    m_advanced_security_committers_isSet = !json[QString("advanced_security_committers")].isNull() && m_advanced_security_committers_isValid;

    m_advanced_security_committers_breakdown_isValid = ::OpenAPI::fromJsonValue(m_advanced_security_committers_breakdown, json[QString("advanced_security_committers_breakdown")]);
    m_advanced_security_committers_breakdown_isSet = !json[QString("advanced_security_committers_breakdown")].isNull() && m_advanced_security_committers_breakdown_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAdvanced_security_active_committers_repository::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvanced_security_active_committers_repository::asJsonObject() const {
    QJsonObject obj;
    if (m_advanced_security_committers_isSet) {
        obj.insert(QString("advanced_security_committers"), ::OpenAPI::toJsonValue(m_advanced_security_committers));
    }
    if (m_advanced_security_committers_breakdown.size() > 0) {
        obj.insert(QString("advanced_security_committers_breakdown"), ::OpenAPI::toJsonValue(m_advanced_security_committers_breakdown));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

qint32 OAIAdvanced_security_active_committers_repository::getAdvancedSecurityCommitters() const {
    return m_advanced_security_committers;
}
void OAIAdvanced_security_active_committers_repository::setAdvancedSecurityCommitters(const qint32 &advanced_security_committers) {
    m_advanced_security_committers = advanced_security_committers;
    m_advanced_security_committers_isSet = true;
}

bool OAIAdvanced_security_active_committers_repository::is_advanced_security_committers_Set() const{
    return m_advanced_security_committers_isSet;
}

bool OAIAdvanced_security_active_committers_repository::is_advanced_security_committers_Valid() const{
    return m_advanced_security_committers_isValid;
}

QList<OAIAdvanced_security_active_committers_user> OAIAdvanced_security_active_committers_repository::getAdvancedSecurityCommittersBreakdown() const {
    return m_advanced_security_committers_breakdown;
}
void OAIAdvanced_security_active_committers_repository::setAdvancedSecurityCommittersBreakdown(const QList<OAIAdvanced_security_active_committers_user> &advanced_security_committers_breakdown) {
    m_advanced_security_committers_breakdown = advanced_security_committers_breakdown;
    m_advanced_security_committers_breakdown_isSet = true;
}

bool OAIAdvanced_security_active_committers_repository::is_advanced_security_committers_breakdown_Set() const{
    return m_advanced_security_committers_breakdown_isSet;
}

bool OAIAdvanced_security_active_committers_repository::is_advanced_security_committers_breakdown_Valid() const{
    return m_advanced_security_committers_breakdown_isValid;
}

QString OAIAdvanced_security_active_committers_repository::getName() const {
    return m_name;
}
void OAIAdvanced_security_active_committers_repository::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAdvanced_security_active_committers_repository::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAdvanced_security_active_committers_repository::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAdvanced_security_active_committers_repository::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advanced_security_committers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advanced_security_committers_breakdown.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvanced_security_active_committers_repository::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_advanced_security_committers_isValid && m_advanced_security_committers_breakdown_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
