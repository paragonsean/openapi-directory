/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepos_list_cache_info_200_response_inner_git.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepos_list_cache_info_200_response_inner_git::OAIRepos_list_cache_info_200_response_inner_git(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepos_list_cache_info_200_response_inner_git::OAIRepos_list_cache_info_200_response_inner_git() {
    this->initializeModel();
}

OAIRepos_list_cache_info_200_response_inner_git::~OAIRepos_list_cache_info_200_response_inner_git() {}

void OAIRepos_list_cache_info_200_response_inner_git::initializeModel() {

    m_last_sync_isSet = false;
    m_last_sync_isValid = false;

    m_sync_status_isSet = false;
    m_sync_status_isValid = false;
}

void OAIRepos_list_cache_info_200_response_inner_git::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepos_list_cache_info_200_response_inner_git::fromJsonObject(QJsonObject json) {

    m_last_sync_isValid = ::OpenAPI::fromJsonValue(m_last_sync, json[QString("last_sync")]);
    m_last_sync_isSet = !json[QString("last_sync")].isNull() && m_last_sync_isValid;

    m_sync_status_isValid = ::OpenAPI::fromJsonValue(m_sync_status, json[QString("sync_status")]);
    m_sync_status_isSet = !json[QString("sync_status")].isNull() && m_sync_status_isValid;
}

QString OAIRepos_list_cache_info_200_response_inner_git::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepos_list_cache_info_200_response_inner_git::asJsonObject() const {
    QJsonObject obj;
    if (m_last_sync_isSet) {
        obj.insert(QString("last_sync"), ::OpenAPI::toJsonValue(m_last_sync));
    }
    if (m_sync_status_isSet) {
        obj.insert(QString("sync_status"), ::OpenAPI::toJsonValue(m_sync_status));
    }
    return obj;
}

QDateTime OAIRepos_list_cache_info_200_response_inner_git::getLastSync() const {
    return m_last_sync;
}
void OAIRepos_list_cache_info_200_response_inner_git::setLastSync(const QDateTime &last_sync) {
    m_last_sync = last_sync;
    m_last_sync_isSet = true;
}

bool OAIRepos_list_cache_info_200_response_inner_git::is_last_sync_Set() const{
    return m_last_sync_isSet;
}

bool OAIRepos_list_cache_info_200_response_inner_git::is_last_sync_Valid() const{
    return m_last_sync_isValid;
}

QString OAIRepos_list_cache_info_200_response_inner_git::getSyncStatus() const {
    return m_sync_status;
}
void OAIRepos_list_cache_info_200_response_inner_git::setSyncStatus(const QString &sync_status) {
    m_sync_status = sync_status;
    m_sync_status_isSet = true;
}

bool OAIRepos_list_cache_info_200_response_inner_git::is_sync_status_Set() const{
    return m_sync_status_isSet;
}

bool OAIRepos_list_cache_info_200_response_inner_git::is_sync_status_Valid() const{
    return m_sync_status_isValid;
}

bool OAIRepos_list_cache_info_200_response_inner_git::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_sync_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sync_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepos_list_cache_info_200_response_inner_git::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_last_sync_isValid && m_sync_status_isValid && true;
}

} // namespace OpenAPI
