/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner() {
    this->initializeModel();
}

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::~OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner() {}

void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::initializeModel() {

    m_reviewer_isSet = false;
    m_reviewer_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::fromJsonObject(QJsonObject json) {

    m_reviewer_isValid = ::OpenAPI::fromJsonValue(m_reviewer, json[QString("reviewer")]);
    m_reviewer_isSet = !json[QString("reviewer")].isNull() && m_reviewer_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_reviewer.isSet()) {
        obj.insert(QString("reviewer"), ::OpenAPI::toJsonValue(m_reviewer));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::getReviewer() const {
    return m_reviewer;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::setReviewer(const OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner_reviewer &reviewer) {
    m_reviewer = reviewer;
    m_reviewer_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::is_reviewer_Set() const{
    return m_reviewer_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::is_reviewer_Valid() const{
    return m_reviewer_isValid;
}

OAIDeployment_reviewer_type OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::getType() const {
    return m_type;
}
void OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::setType(const OAIDeployment_reviewer_type &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reviewer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironment_protection_rules_inner_anyOf_1_reviewers_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
