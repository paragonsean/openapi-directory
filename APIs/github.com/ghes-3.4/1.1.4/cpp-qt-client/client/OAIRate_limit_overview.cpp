/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRate_limit_overview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRate_limit_overview::OAIRate_limit_overview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRate_limit_overview::OAIRate_limit_overview() {
    this->initializeModel();
}

OAIRate_limit_overview::~OAIRate_limit_overview() {}

void OAIRate_limit_overview::initializeModel() {

    m_rate_isSet = false;
    m_rate_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;
}

void OAIRate_limit_overview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRate_limit_overview::fromJsonObject(QJsonObject json) {

    m_rate_isValid = ::OpenAPI::fromJsonValue(m_rate, json[QString("rate")]);
    m_rate_isSet = !json[QString("rate")].isNull() && m_rate_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;
}

QString OAIRate_limit_overview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRate_limit_overview::asJsonObject() const {
    QJsonObject obj;
    if (m_rate.isSet()) {
        obj.insert(QString("rate"), ::OpenAPI::toJsonValue(m_rate));
    }
    if (m_resources.isSet()) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    return obj;
}

OAIRate_limit OAIRate_limit_overview::getRate() const {
    return m_rate;
}
void OAIRate_limit_overview::setRate(const OAIRate_limit &rate) {
    m_rate = rate;
    m_rate_isSet = true;
}

bool OAIRate_limit_overview::is_rate_Set() const{
    return m_rate_isSet;
}

bool OAIRate_limit_overview::is_rate_Valid() const{
    return m_rate_isValid;
}

OAIRate_limit_overview_resources OAIRate_limit_overview::getResources() const {
    return m_resources;
}
void OAIRate_limit_overview::setResources(const OAIRate_limit_overview_resources &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIRate_limit_overview::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIRate_limit_overview::is_resources_Valid() const{
    return m_resources_isValid;
}

bool OAIRate_limit_overview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rate.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRate_limit_overview::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rate_isValid && m_resources_isValid && true;
}

} // namespace OpenAPI
