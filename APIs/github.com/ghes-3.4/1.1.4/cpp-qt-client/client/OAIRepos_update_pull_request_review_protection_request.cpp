/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepos_update_pull_request_review_protection_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepos_update_pull_request_review_protection_request::OAIRepos_update_pull_request_review_protection_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepos_update_pull_request_review_protection_request::OAIRepos_update_pull_request_review_protection_request() {
    this->initializeModel();
}

OAIRepos_update_pull_request_review_protection_request::~OAIRepos_update_pull_request_review_protection_request() {}

void OAIRepos_update_pull_request_review_protection_request::initializeModel() {

    m_bypass_pull_request_allowances_isSet = false;
    m_bypass_pull_request_allowances_isValid = false;

    m_dismiss_stale_reviews_isSet = false;
    m_dismiss_stale_reviews_isValid = false;

    m_dismissal_restrictions_isSet = false;
    m_dismissal_restrictions_isValid = false;

    m_require_code_owner_reviews_isSet = false;
    m_require_code_owner_reviews_isValid = false;

    m_required_approving_review_count_isSet = false;
    m_required_approving_review_count_isValid = false;
}

void OAIRepos_update_pull_request_review_protection_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepos_update_pull_request_review_protection_request::fromJsonObject(QJsonObject json) {

    m_bypass_pull_request_allowances_isValid = ::OpenAPI::fromJsonValue(m_bypass_pull_request_allowances, json[QString("bypass_pull_request_allowances")]);
    m_bypass_pull_request_allowances_isSet = !json[QString("bypass_pull_request_allowances")].isNull() && m_bypass_pull_request_allowances_isValid;

    m_dismiss_stale_reviews_isValid = ::OpenAPI::fromJsonValue(m_dismiss_stale_reviews, json[QString("dismiss_stale_reviews")]);
    m_dismiss_stale_reviews_isSet = !json[QString("dismiss_stale_reviews")].isNull() && m_dismiss_stale_reviews_isValid;

    m_dismissal_restrictions_isValid = ::OpenAPI::fromJsonValue(m_dismissal_restrictions, json[QString("dismissal_restrictions")]);
    m_dismissal_restrictions_isSet = !json[QString("dismissal_restrictions")].isNull() && m_dismissal_restrictions_isValid;

    m_require_code_owner_reviews_isValid = ::OpenAPI::fromJsonValue(m_require_code_owner_reviews, json[QString("require_code_owner_reviews")]);
    m_require_code_owner_reviews_isSet = !json[QString("require_code_owner_reviews")].isNull() && m_require_code_owner_reviews_isValid;

    m_required_approving_review_count_isValid = ::OpenAPI::fromJsonValue(m_required_approving_review_count, json[QString("required_approving_review_count")]);
    m_required_approving_review_count_isSet = !json[QString("required_approving_review_count")].isNull() && m_required_approving_review_count_isValid;
}

QString OAIRepos_update_pull_request_review_protection_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepos_update_pull_request_review_protection_request::asJsonObject() const {
    QJsonObject obj;
    if (m_bypass_pull_request_allowances.isSet()) {
        obj.insert(QString("bypass_pull_request_allowances"), ::OpenAPI::toJsonValue(m_bypass_pull_request_allowances));
    }
    if (m_dismiss_stale_reviews_isSet) {
        obj.insert(QString("dismiss_stale_reviews"), ::OpenAPI::toJsonValue(m_dismiss_stale_reviews));
    }
    if (m_dismissal_restrictions.isSet()) {
        obj.insert(QString("dismissal_restrictions"), ::OpenAPI::toJsonValue(m_dismissal_restrictions));
    }
    if (m_require_code_owner_reviews_isSet) {
        obj.insert(QString("require_code_owner_reviews"), ::OpenAPI::toJsonValue(m_require_code_owner_reviews));
    }
    if (m_required_approving_review_count_isSet) {
        obj.insert(QString("required_approving_review_count"), ::OpenAPI::toJsonValue(m_required_approving_review_count));
    }
    return obj;
}

OAIRepos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances OAIRepos_update_pull_request_review_protection_request::getBypassPullRequestAllowances() const {
    return m_bypass_pull_request_allowances;
}
void OAIRepos_update_pull_request_review_protection_request::setBypassPullRequestAllowances(const OAIRepos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances &bypass_pull_request_allowances) {
    m_bypass_pull_request_allowances = bypass_pull_request_allowances;
    m_bypass_pull_request_allowances_isSet = true;
}

bool OAIRepos_update_pull_request_review_protection_request::is_bypass_pull_request_allowances_Set() const{
    return m_bypass_pull_request_allowances_isSet;
}

bool OAIRepos_update_pull_request_review_protection_request::is_bypass_pull_request_allowances_Valid() const{
    return m_bypass_pull_request_allowances_isValid;
}

bool OAIRepos_update_pull_request_review_protection_request::isDismissStaleReviews() const {
    return m_dismiss_stale_reviews;
}
void OAIRepos_update_pull_request_review_protection_request::setDismissStaleReviews(const bool &dismiss_stale_reviews) {
    m_dismiss_stale_reviews = dismiss_stale_reviews;
    m_dismiss_stale_reviews_isSet = true;
}

bool OAIRepos_update_pull_request_review_protection_request::is_dismiss_stale_reviews_Set() const{
    return m_dismiss_stale_reviews_isSet;
}

bool OAIRepos_update_pull_request_review_protection_request::is_dismiss_stale_reviews_Valid() const{
    return m_dismiss_stale_reviews_isValid;
}

OAIRepos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions OAIRepos_update_pull_request_review_protection_request::getDismissalRestrictions() const {
    return m_dismissal_restrictions;
}
void OAIRepos_update_pull_request_review_protection_request::setDismissalRestrictions(const OAIRepos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions &dismissal_restrictions) {
    m_dismissal_restrictions = dismissal_restrictions;
    m_dismissal_restrictions_isSet = true;
}

bool OAIRepos_update_pull_request_review_protection_request::is_dismissal_restrictions_Set() const{
    return m_dismissal_restrictions_isSet;
}

bool OAIRepos_update_pull_request_review_protection_request::is_dismissal_restrictions_Valid() const{
    return m_dismissal_restrictions_isValid;
}

bool OAIRepos_update_pull_request_review_protection_request::isRequireCodeOwnerReviews() const {
    return m_require_code_owner_reviews;
}
void OAIRepos_update_pull_request_review_protection_request::setRequireCodeOwnerReviews(const bool &require_code_owner_reviews) {
    m_require_code_owner_reviews = require_code_owner_reviews;
    m_require_code_owner_reviews_isSet = true;
}

bool OAIRepos_update_pull_request_review_protection_request::is_require_code_owner_reviews_Set() const{
    return m_require_code_owner_reviews_isSet;
}

bool OAIRepos_update_pull_request_review_protection_request::is_require_code_owner_reviews_Valid() const{
    return m_require_code_owner_reviews_isValid;
}

qint32 OAIRepos_update_pull_request_review_protection_request::getRequiredApprovingReviewCount() const {
    return m_required_approving_review_count;
}
void OAIRepos_update_pull_request_review_protection_request::setRequiredApprovingReviewCount(const qint32 &required_approving_review_count) {
    m_required_approving_review_count = required_approving_review_count;
    m_required_approving_review_count_isSet = true;
}

bool OAIRepos_update_pull_request_review_protection_request::is_required_approving_review_count_Set() const{
    return m_required_approving_review_count_isSet;
}

bool OAIRepos_update_pull_request_review_protection_request::is_required_approving_review_count_Valid() const{
    return m_required_approving_review_count_isValid;
}

bool OAIRepos_update_pull_request_review_protection_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bypass_pull_request_allowances.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dismiss_stale_reviews_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dismissal_restrictions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_code_owner_reviews_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_approving_review_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepos_update_pull_request_review_protection_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
