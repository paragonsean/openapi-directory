/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdded_to_project_issue_event_project_card.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdded_to_project_issue_event_project_card::OAIAdded_to_project_issue_event_project_card(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdded_to_project_issue_event_project_card::OAIAdded_to_project_issue_event_project_card() {
    this->initializeModel();
}

OAIAdded_to_project_issue_event_project_card::~OAIAdded_to_project_issue_event_project_card() {}

void OAIAdded_to_project_issue_event_project_card::initializeModel() {

    m_column_name_isSet = false;
    m_column_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_previous_column_name_isSet = false;
    m_previous_column_name_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_url_isSet = false;
    m_project_url_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIAdded_to_project_issue_event_project_card::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdded_to_project_issue_event_project_card::fromJsonObject(QJsonObject json) {

    m_column_name_isValid = ::OpenAPI::fromJsonValue(m_column_name, json[QString("column_name")]);
    m_column_name_isSet = !json[QString("column_name")].isNull() && m_column_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_previous_column_name_isValid = ::OpenAPI::fromJsonValue(m_previous_column_name, json[QString("previous_column_name")]);
    m_previous_column_name_isSet = !json[QString("previous_column_name")].isNull() && m_previous_column_name_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_project_url_isValid = ::OpenAPI::fromJsonValue(m_project_url, json[QString("project_url")]);
    m_project_url_isSet = !json[QString("project_url")].isNull() && m_project_url_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIAdded_to_project_issue_event_project_card::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdded_to_project_issue_event_project_card::asJsonObject() const {
    QJsonObject obj;
    if (m_column_name_isSet) {
        obj.insert(QString("column_name"), ::OpenAPI::toJsonValue(m_column_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_previous_column_name_isSet) {
        obj.insert(QString("previous_column_name"), ::OpenAPI::toJsonValue(m_previous_column_name));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_url_isSet) {
        obj.insert(QString("project_url"), ::OpenAPI::toJsonValue(m_project_url));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIAdded_to_project_issue_event_project_card::getColumnName() const {
    return m_column_name;
}
void OAIAdded_to_project_issue_event_project_card::setColumnName(const QString &column_name) {
    m_column_name = column_name;
    m_column_name_isSet = true;
}

bool OAIAdded_to_project_issue_event_project_card::is_column_name_Set() const{
    return m_column_name_isSet;
}

bool OAIAdded_to_project_issue_event_project_card::is_column_name_Valid() const{
    return m_column_name_isValid;
}

qint32 OAIAdded_to_project_issue_event_project_card::getId() const {
    return m_id;
}
void OAIAdded_to_project_issue_event_project_card::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAdded_to_project_issue_event_project_card::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAdded_to_project_issue_event_project_card::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAdded_to_project_issue_event_project_card::getPreviousColumnName() const {
    return m_previous_column_name;
}
void OAIAdded_to_project_issue_event_project_card::setPreviousColumnName(const QString &previous_column_name) {
    m_previous_column_name = previous_column_name;
    m_previous_column_name_isSet = true;
}

bool OAIAdded_to_project_issue_event_project_card::is_previous_column_name_Set() const{
    return m_previous_column_name_isSet;
}

bool OAIAdded_to_project_issue_event_project_card::is_previous_column_name_Valid() const{
    return m_previous_column_name_isValid;
}

qint32 OAIAdded_to_project_issue_event_project_card::getProjectId() const {
    return m_project_id;
}
void OAIAdded_to_project_issue_event_project_card::setProjectId(const qint32 &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIAdded_to_project_issue_event_project_card::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIAdded_to_project_issue_event_project_card::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIAdded_to_project_issue_event_project_card::getProjectUrl() const {
    return m_project_url;
}
void OAIAdded_to_project_issue_event_project_card::setProjectUrl(const QString &project_url) {
    m_project_url = project_url;
    m_project_url_isSet = true;
}

bool OAIAdded_to_project_issue_event_project_card::is_project_url_Set() const{
    return m_project_url_isSet;
}

bool OAIAdded_to_project_issue_event_project_card::is_project_url_Valid() const{
    return m_project_url_isValid;
}

QString OAIAdded_to_project_issue_event_project_card::getUrl() const {
    return m_url;
}
void OAIAdded_to_project_issue_event_project_card::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAdded_to_project_issue_event_project_card::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAdded_to_project_issue_event_project_card::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIAdded_to_project_issue_event_project_card::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdded_to_project_issue_event_project_card::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_column_name_isValid && m_id_isValid && m_project_id_isValid && m_project_url_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
