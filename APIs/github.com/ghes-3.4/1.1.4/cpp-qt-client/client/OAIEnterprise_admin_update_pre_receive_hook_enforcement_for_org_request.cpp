/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request() {
    this->initializeModel();
}

OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::~OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request() {}

void OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::initializeModel() {

    m_allow_downstream_configuration_isSet = false;
    m_allow_downstream_configuration_isValid = false;

    m_enforcement_isSet = false;
    m_enforcement_isValid = false;
}

void OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::fromJsonObject(QJsonObject json) {

    m_allow_downstream_configuration_isValid = ::OpenAPI::fromJsonValue(m_allow_downstream_configuration, json[QString("allow_downstream_configuration")]);
    m_allow_downstream_configuration_isSet = !json[QString("allow_downstream_configuration")].isNull() && m_allow_downstream_configuration_isValid;

    m_enforcement_isValid = ::OpenAPI::fromJsonValue(m_enforcement, json[QString("enforcement")]);
    m_enforcement_isSet = !json[QString("enforcement")].isNull() && m_enforcement_isValid;
}

QString OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_downstream_configuration_isSet) {
        obj.insert(QString("allow_downstream_configuration"), ::OpenAPI::toJsonValue(m_allow_downstream_configuration));
    }
    if (m_enforcement_isSet) {
        obj.insert(QString("enforcement"), ::OpenAPI::toJsonValue(m_enforcement));
    }
    return obj;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::isAllowDownstreamConfiguration() const {
    return m_allow_downstream_configuration;
}
void OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::setAllowDownstreamConfiguration(const bool &allow_downstream_configuration) {
    m_allow_downstream_configuration = allow_downstream_configuration;
    m_allow_downstream_configuration_isSet = true;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::is_allow_downstream_configuration_Set() const{
    return m_allow_downstream_configuration_isSet;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::is_allow_downstream_configuration_Valid() const{
    return m_allow_downstream_configuration_isValid;
}

QString OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::getEnforcement() const {
    return m_enforcement;
}
void OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::setEnforcement(const QString &enforcement) {
    m_enforcement = enforcement;
    m_enforcement_isSet = true;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::is_enforcement_Set() const{
    return m_enforcement_isSet;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::is_enforcement_Valid() const{
    return m_enforcement_isValid;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_downstream_configuration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enforcement_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_admin_update_pre_receive_hook_enforcement_for_org_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
