/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfiguration_status_progress_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfiguration_status_progress_inner::OAIConfiguration_status_progress_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfiguration_status_progress_inner::OAIConfiguration_status_progress_inner() {
    this->initializeModel();
}

OAIConfiguration_status_progress_inner::~OAIConfiguration_status_progress_inner() {}

void OAIConfiguration_status_progress_inner::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIConfiguration_status_progress_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfiguration_status_progress_inner::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIConfiguration_status_progress_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfiguration_status_progress_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIConfiguration_status_progress_inner::getKey() const {
    return m_key;
}
void OAIConfiguration_status_progress_inner::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIConfiguration_status_progress_inner::is_key_Set() const{
    return m_key_isSet;
}

bool OAIConfiguration_status_progress_inner::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIConfiguration_status_progress_inner::getStatus() const {
    return m_status;
}
void OAIConfiguration_status_progress_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIConfiguration_status_progress_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIConfiguration_status_progress_inner::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIConfiguration_status_progress_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfiguration_status_progress_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_key_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
