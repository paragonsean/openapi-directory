/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPage.h
 *
 * The configuration for GitHub Pages for a repository.
 */

#ifndef OAIPage_H
#define OAIPage_H

#include <QJsonObject>

#include "OAIPages_https_certificate.h"
#include "OAIPages_source_hash.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPages_https_certificate;
class OAIPages_source_hash;

class OAIPage : public OAIObject {
public:
    OAIPage();
    OAIPage(QString json);
    ~OAIPage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBuildType() const;
    void setBuildType(const QString &build_type);
    bool is_build_type_Set() const;
    bool is_build_type_Valid() const;

    QString getCname() const;
    void setCname(const QString &cname);
    bool is_cname_Set() const;
    bool is_cname_Valid() const;

    bool isCustom404() const;
    void setCustom404(const bool &custom_404);
    bool is_custom_404_Set() const;
    bool is_custom_404_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    OAIPages_https_certificate getHttpsCertificate() const;
    void setHttpsCertificate(const OAIPages_https_certificate &https_certificate);
    bool is_https_certificate_Set() const;
    bool is_https_certificate_Valid() const;

    bool isHttpsEnforced() const;
    void setHttpsEnforced(const bool &https_enforced);
    bool is_https_enforced_Set() const;
    bool is_https_enforced_Valid() const;

    QDateTime getPendingDomainUnverifiedAt() const;
    void setPendingDomainUnverifiedAt(const QDateTime &pending_domain_unverified_at);
    bool is_pending_domain_unverified_at_Set() const;
    bool is_pending_domain_unverified_at_Valid() const;

    QString getProtectedDomainState() const;
    void setProtectedDomainState(const QString &protected_domain_state);
    bool is_protected_domain_state_Set() const;
    bool is_protected_domain_state_Valid() const;

    bool isRPublic() const;
    void setRPublic(const bool &r_public);
    bool is_r_public_Set() const;
    bool is_r_public_Valid() const;

    OAIPages_source_hash getSource() const;
    void setSource(const OAIPages_source_hash &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_build_type;
    bool m_build_type_isSet;
    bool m_build_type_isValid;

    QString m_cname;
    bool m_cname_isSet;
    bool m_cname_isValid;

    bool m_custom_404;
    bool m_custom_404_isSet;
    bool m_custom_404_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    OAIPages_https_certificate m_https_certificate;
    bool m_https_certificate_isSet;
    bool m_https_certificate_isValid;

    bool m_https_enforced;
    bool m_https_enforced_isSet;
    bool m_https_enforced_isValid;

    QDateTime m_pending_domain_unverified_at;
    bool m_pending_domain_unverified_at_isSet;
    bool m_pending_domain_unverified_at_isValid;

    QString m_protected_domain_state;
    bool m_protected_domain_state_isSet;
    bool m_protected_domain_state_isValid;

    bool m_r_public;
    bool m_r_public_isSet;
    bool m_r_public_isValid;

    OAIPages_source_hash m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPage)

#endif // OAIPage_H
