/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheck_run.h
 *
 * A check performed on the code of a given code change
 */

#ifndef OAICheck_run_H
#define OAICheck_run_H

#include <QJsonObject>

#include "OAICheck_run_check_suite.h"
#include "OAICheck_run_output.h"
#include "OAIDeployment_simple.h"
#include "OAINullable_integration.h"
#include "OAIPull_request_minimal.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINullable_integration;
class OAICheck_run_check_suite;
class OAIDeployment_simple;
class OAICheck_run_output;
class OAIPull_request_minimal;

class OAICheck_run : public OAIObject {
public:
    OAICheck_run();
    OAICheck_run(QString json);
    ~OAICheck_run() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINullable_integration getApp() const;
    void setApp(const OAINullable_integration &app);
    bool is_app_Set() const;
    bool is_app_Valid() const;

    OAICheck_run_check_suite getCheckSuite() const;
    void setCheckSuite(const OAICheck_run_check_suite &check_suite);
    bool is_check_suite_Set() const;
    bool is_check_suite_Valid() const;

    QDateTime getCompletedAt() const;
    void setCompletedAt(const QDateTime &completed_at);
    bool is_completed_at_Set() const;
    bool is_completed_at_Valid() const;

    QString getConclusion() const;
    void setConclusion(const QString &conclusion);
    bool is_conclusion_Set() const;
    bool is_conclusion_Valid() const;

    OAIDeployment_simple getDeployment() const;
    void setDeployment(const OAIDeployment_simple &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    QString getDetailsUrl() const;
    void setDetailsUrl(const QString &details_url);
    bool is_details_url_Set() const;
    bool is_details_url_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    QString getHeadSha() const;
    void setHeadSha(const QString &head_sha);
    bool is_head_sha_Set() const;
    bool is_head_sha_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    OAICheck_run_output getOutput() const;
    void setOutput(const OAICheck_run_output &output);
    bool is_output_Set() const;
    bool is_output_Valid() const;

    QList<OAIPull_request_minimal> getPullRequests() const;
    void setPullRequests(const QList<OAIPull_request_minimal> &pull_requests);
    bool is_pull_requests_Set() const;
    bool is_pull_requests_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINullable_integration m_app;
    bool m_app_isSet;
    bool m_app_isValid;

    OAICheck_run_check_suite m_check_suite;
    bool m_check_suite_isSet;
    bool m_check_suite_isValid;

    QDateTime m_completed_at;
    bool m_completed_at_isSet;
    bool m_completed_at_isValid;

    QString m_conclusion;
    bool m_conclusion_isSet;
    bool m_conclusion_isValid;

    OAIDeployment_simple m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;

    QString m_details_url;
    bool m_details_url_isSet;
    bool m_details_url_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    QString m_head_sha;
    bool m_head_sha_isSet;
    bool m_head_sha_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    OAICheck_run_output m_output;
    bool m_output_isSet;
    bool m_output_isValid;

    QList<OAIPull_request_minimal> m_pull_requests;
    bool m_pull_requests_isSet;
    bool m_pull_requests_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheck_run)

#endif // OAICheck_run_H
