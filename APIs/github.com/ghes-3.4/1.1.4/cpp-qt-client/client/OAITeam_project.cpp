/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeam_project.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeam_project::OAITeam_project(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeam_project::OAITeam_project() {
    this->initializeModel();
}

OAITeam_project::~OAITeam_project() {}

void OAITeam_project::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_columns_url_isSet = false;
    m_columns_url_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_creator_isSet = false;
    m_creator_isValid = false;

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_node_id_isSet = false;
    m_node_id_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_organization_permission_isSet = false;
    m_organization_permission_isValid = false;

    m_owner_url_isSet = false;
    m_owner_url_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_r_private_isSet = false;
    m_r_private_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAITeam_project::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeam_project::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_columns_url_isValid = ::OpenAPI::fromJsonValue(m_columns_url, json[QString("columns_url")]);
    m_columns_url_isSet = !json[QString("columns_url")].isNull() && m_columns_url_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_creator_isValid = ::OpenAPI::fromJsonValue(m_creator, json[QString("creator")]);
    m_creator_isSet = !json[QString("creator")].isNull() && m_creator_isValid;

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_node_id_isValid = ::OpenAPI::fromJsonValue(m_node_id, json[QString("node_id")]);
    m_node_id_isSet = !json[QString("node_id")].isNull() && m_node_id_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_organization_permission_isValid = ::OpenAPI::fromJsonValue(m_organization_permission, json[QString("organization_permission")]);
    m_organization_permission_isSet = !json[QString("organization_permission")].isNull() && m_organization_permission_isValid;

    m_owner_url_isValid = ::OpenAPI::fromJsonValue(m_owner_url, json[QString("owner_url")]);
    m_owner_url_isSet = !json[QString("owner_url")].isNull() && m_owner_url_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_r_private_isValid = ::OpenAPI::fromJsonValue(m_r_private, json[QString("private")]);
    m_r_private_isSet = !json[QString("private")].isNull() && m_r_private_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAITeam_project::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeam_project::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_columns_url_isSet) {
        obj.insert(QString("columns_url"), ::OpenAPI::toJsonValue(m_columns_url));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_creator.isSet()) {
        obj.insert(QString("creator"), ::OpenAPI::toJsonValue(m_creator));
    }
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_node_id_isSet) {
        obj.insert(QString("node_id"), ::OpenAPI::toJsonValue(m_node_id));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_organization_permission_isSet) {
        obj.insert(QString("organization_permission"), ::OpenAPI::toJsonValue(m_organization_permission));
    }
    if (m_owner_url_isSet) {
        obj.insert(QString("owner_url"), ::OpenAPI::toJsonValue(m_owner_url));
    }
    if (m_permissions.isSet()) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_r_private_isSet) {
        obj.insert(QString("private"), ::OpenAPI::toJsonValue(m_r_private));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAITeam_project::getBody() const {
    return m_body;
}
void OAITeam_project::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAITeam_project::is_body_Set() const{
    return m_body_isSet;
}

bool OAITeam_project::is_body_Valid() const{
    return m_body_isValid;
}

QString OAITeam_project::getColumnsUrl() const {
    return m_columns_url;
}
void OAITeam_project::setColumnsUrl(const QString &columns_url) {
    m_columns_url = columns_url;
    m_columns_url_isSet = true;
}

bool OAITeam_project::is_columns_url_Set() const{
    return m_columns_url_isSet;
}

bool OAITeam_project::is_columns_url_Valid() const{
    return m_columns_url_isValid;
}

QString OAITeam_project::getCreatedAt() const {
    return m_created_at;
}
void OAITeam_project::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAITeam_project::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAITeam_project::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAISimple_user OAITeam_project::getCreator() const {
    return m_creator;
}
void OAITeam_project::setCreator(const OAISimple_user &creator) {
    m_creator = creator;
    m_creator_isSet = true;
}

bool OAITeam_project::is_creator_Set() const{
    return m_creator_isSet;
}

bool OAITeam_project::is_creator_Valid() const{
    return m_creator_isValid;
}

QString OAITeam_project::getHtmlUrl() const {
    return m_html_url;
}
void OAITeam_project::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAITeam_project::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAITeam_project::is_html_url_Valid() const{
    return m_html_url_isValid;
}

qint32 OAITeam_project::getId() const {
    return m_id;
}
void OAITeam_project::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITeam_project::is_id_Set() const{
    return m_id_isSet;
}

bool OAITeam_project::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITeam_project::getName() const {
    return m_name;
}
void OAITeam_project::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITeam_project::is_name_Set() const{
    return m_name_isSet;
}

bool OAITeam_project::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITeam_project::getNodeId() const {
    return m_node_id;
}
void OAITeam_project::setNodeId(const QString &node_id) {
    m_node_id = node_id;
    m_node_id_isSet = true;
}

bool OAITeam_project::is_node_id_Set() const{
    return m_node_id_isSet;
}

bool OAITeam_project::is_node_id_Valid() const{
    return m_node_id_isValid;
}

qint32 OAITeam_project::getNumber() const {
    return m_number;
}
void OAITeam_project::setNumber(const qint32 &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAITeam_project::is_number_Set() const{
    return m_number_isSet;
}

bool OAITeam_project::is_number_Valid() const{
    return m_number_isValid;
}

QString OAITeam_project::getOrganizationPermission() const {
    return m_organization_permission;
}
void OAITeam_project::setOrganizationPermission(const QString &organization_permission) {
    m_organization_permission = organization_permission;
    m_organization_permission_isSet = true;
}

bool OAITeam_project::is_organization_permission_Set() const{
    return m_organization_permission_isSet;
}

bool OAITeam_project::is_organization_permission_Valid() const{
    return m_organization_permission_isValid;
}

QString OAITeam_project::getOwnerUrl() const {
    return m_owner_url;
}
void OAITeam_project::setOwnerUrl(const QString &owner_url) {
    m_owner_url = owner_url;
    m_owner_url_isSet = true;
}

bool OAITeam_project::is_owner_url_Set() const{
    return m_owner_url_isSet;
}

bool OAITeam_project::is_owner_url_Valid() const{
    return m_owner_url_isValid;
}

OAITeam_project_permissions OAITeam_project::getPermissions() const {
    return m_permissions;
}
void OAITeam_project::setPermissions(const OAITeam_project_permissions &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAITeam_project::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAITeam_project::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAITeam_project::isRPrivate() const {
    return m_r_private;
}
void OAITeam_project::setRPrivate(const bool &r_private) {
    m_r_private = r_private;
    m_r_private_isSet = true;
}

bool OAITeam_project::is_r_private_Set() const{
    return m_r_private_isSet;
}

bool OAITeam_project::is_r_private_Valid() const{
    return m_r_private_isValid;
}

QString OAITeam_project::getState() const {
    return m_state;
}
void OAITeam_project::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAITeam_project::is_state_Set() const{
    return m_state_isSet;
}

bool OAITeam_project::is_state_Valid() const{
    return m_state_isValid;
}

QString OAITeam_project::getUpdatedAt() const {
    return m_updated_at;
}
void OAITeam_project::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAITeam_project::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAITeam_project::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

QString OAITeam_project::getUrl() const {
    return m_url;
}
void OAITeam_project::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAITeam_project::is_url_Set() const{
    return m_url_isSet;
}

bool OAITeam_project::is_url_Valid() const{
    return m_url_isValid;
}

bool OAITeam_project::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_columns_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_permission_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_private_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeam_project::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_body_isValid && m_columns_url_isValid && m_created_at_isValid && m_creator_isValid && m_html_url_isValid && m_id_isValid && m_name_isValid && m_node_id_isValid && m_number_isValid && m_owner_url_isValid && m_permissions_isValid && m_state_isValid && m_updated_at_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
