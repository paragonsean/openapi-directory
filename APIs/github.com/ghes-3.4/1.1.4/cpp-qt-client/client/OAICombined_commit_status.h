/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICombined_commit_status.h
 *
 * Combined Commit Status
 */

#ifndef OAICombined_commit_status_H
#define OAICombined_commit_status_H

#include <QJsonObject>

#include "OAIMinimal_repository.h"
#include "OAISimple_commit_status.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMinimal_repository;
class OAISimple_commit_status;

class OAICombined_commit_status : public OAIObject {
public:
    OAICombined_commit_status();
    OAICombined_commit_status(QString json);
    ~OAICombined_commit_status() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCommitUrl() const;
    void setCommitUrl(const QString &commit_url);
    bool is_commit_url_Set() const;
    bool is_commit_url_Valid() const;

    OAIMinimal_repository getRepository() const;
    void setRepository(const OAIMinimal_repository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAISimple_commit_status> getStatuses() const;
    void setStatuses(const QList<OAISimple_commit_status> &statuses);
    bool is_statuses_Set() const;
    bool is_statuses_Valid() const;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_commit_url;
    bool m_commit_url_isSet;
    bool m_commit_url_isValid;

    OAIMinimal_repository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAISimple_commit_status> m_statuses;
    bool m_statuses_isSet;
    bool m_statuses_isValid;

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICombined_commit_status)

#endif // OAICombined_commit_status_H
