/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimple_repository.h
 *
 * A GitHub repository.
 */

#ifndef OAISimple_repository_H
#define OAISimple_repository_H

#include <QJsonObject>

#include "OAISimple_user.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimple_user;

class OAISimple_repository : public OAIObject {
public:
    OAISimple_repository();
    OAISimple_repository(QString json);
    ~OAISimple_repository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArchiveUrl() const;
    void setArchiveUrl(const QString &archive_url);
    bool is_archive_url_Set() const;
    bool is_archive_url_Valid() const;

    QString getAssigneesUrl() const;
    void setAssigneesUrl(const QString &assignees_url);
    bool is_assignees_url_Set() const;
    bool is_assignees_url_Valid() const;

    QString getBlobsUrl() const;
    void setBlobsUrl(const QString &blobs_url);
    bool is_blobs_url_Set() const;
    bool is_blobs_url_Valid() const;

    QString getBranchesUrl() const;
    void setBranchesUrl(const QString &branches_url);
    bool is_branches_url_Set() const;
    bool is_branches_url_Valid() const;

    QString getCollaboratorsUrl() const;
    void setCollaboratorsUrl(const QString &collaborators_url);
    bool is_collaborators_url_Set() const;
    bool is_collaborators_url_Valid() const;

    QString getCommentsUrl() const;
    void setCommentsUrl(const QString &comments_url);
    bool is_comments_url_Set() const;
    bool is_comments_url_Valid() const;

    QString getCommitsUrl() const;
    void setCommitsUrl(const QString &commits_url);
    bool is_commits_url_Set() const;
    bool is_commits_url_Valid() const;

    QString getCompareUrl() const;
    void setCompareUrl(const QString &compare_url);
    bool is_compare_url_Set() const;
    bool is_compare_url_Valid() const;

    QString getContentsUrl() const;
    void setContentsUrl(const QString &contents_url);
    bool is_contents_url_Set() const;
    bool is_contents_url_Valid() const;

    QString getContributorsUrl() const;
    void setContributorsUrl(const QString &contributors_url);
    bool is_contributors_url_Set() const;
    bool is_contributors_url_Valid() const;

    QString getDeploymentsUrl() const;
    void setDeploymentsUrl(const QString &deployments_url);
    bool is_deployments_url_Set() const;
    bool is_deployments_url_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDownloadsUrl() const;
    void setDownloadsUrl(const QString &downloads_url);
    bool is_downloads_url_Set() const;
    bool is_downloads_url_Valid() const;

    QString getEventsUrl() const;
    void setEventsUrl(const QString &events_url);
    bool is_events_url_Set() const;
    bool is_events_url_Valid() const;

    bool isFork() const;
    void setFork(const bool &fork);
    bool is_fork_Set() const;
    bool is_fork_Valid() const;

    QString getForksUrl() const;
    void setForksUrl(const QString &forks_url);
    bool is_forks_url_Set() const;
    bool is_forks_url_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    QString getGitCommitsUrl() const;
    void setGitCommitsUrl(const QString &git_commits_url);
    bool is_git_commits_url_Set() const;
    bool is_git_commits_url_Valid() const;

    QString getGitRefsUrl() const;
    void setGitRefsUrl(const QString &git_refs_url);
    bool is_git_refs_url_Set() const;
    bool is_git_refs_url_Valid() const;

    QString getGitTagsUrl() const;
    void setGitTagsUrl(const QString &git_tags_url);
    bool is_git_tags_url_Set() const;
    bool is_git_tags_url_Valid() const;

    QString getHooksUrl() const;
    void setHooksUrl(const QString &hooks_url);
    bool is_hooks_url_Set() const;
    bool is_hooks_url_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIssueCommentUrl() const;
    void setIssueCommentUrl(const QString &issue_comment_url);
    bool is_issue_comment_url_Set() const;
    bool is_issue_comment_url_Valid() const;

    QString getIssueEventsUrl() const;
    void setIssueEventsUrl(const QString &issue_events_url);
    bool is_issue_events_url_Set() const;
    bool is_issue_events_url_Valid() const;

    QString getIssuesUrl() const;
    void setIssuesUrl(const QString &issues_url);
    bool is_issues_url_Set() const;
    bool is_issues_url_Valid() const;

    QString getKeysUrl() const;
    void setKeysUrl(const QString &keys_url);
    bool is_keys_url_Set() const;
    bool is_keys_url_Valid() const;

    QString getLabelsUrl() const;
    void setLabelsUrl(const QString &labels_url);
    bool is_labels_url_Set() const;
    bool is_labels_url_Valid() const;

    QString getLanguagesUrl() const;
    void setLanguagesUrl(const QString &languages_url);
    bool is_languages_url_Set() const;
    bool is_languages_url_Valid() const;

    QString getMergesUrl() const;
    void setMergesUrl(const QString &merges_url);
    bool is_merges_url_Set() const;
    bool is_merges_url_Valid() const;

    QString getMilestonesUrl() const;
    void setMilestonesUrl(const QString &milestones_url);
    bool is_milestones_url_Set() const;
    bool is_milestones_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getNotificationsUrl() const;
    void setNotificationsUrl(const QString &notifications_url);
    bool is_notifications_url_Set() const;
    bool is_notifications_url_Valid() const;

    OAISimple_user getOwner() const;
    void setOwner(const OAISimple_user &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isRPrivate() const;
    void setRPrivate(const bool &r_private);
    bool is_r_private_Set() const;
    bool is_r_private_Valid() const;

    QString getPullsUrl() const;
    void setPullsUrl(const QString &pulls_url);
    bool is_pulls_url_Set() const;
    bool is_pulls_url_Valid() const;

    QString getReleasesUrl() const;
    void setReleasesUrl(const QString &releases_url);
    bool is_releases_url_Set() const;
    bool is_releases_url_Valid() const;

    QString getStargazersUrl() const;
    void setStargazersUrl(const QString &stargazers_url);
    bool is_stargazers_url_Set() const;
    bool is_stargazers_url_Valid() const;

    QString getStatusesUrl() const;
    void setStatusesUrl(const QString &statuses_url);
    bool is_statuses_url_Set() const;
    bool is_statuses_url_Valid() const;

    QString getSubscribersUrl() const;
    void setSubscribersUrl(const QString &subscribers_url);
    bool is_subscribers_url_Set() const;
    bool is_subscribers_url_Valid() const;

    QString getSubscriptionUrl() const;
    void setSubscriptionUrl(const QString &subscription_url);
    bool is_subscription_url_Set() const;
    bool is_subscription_url_Valid() const;

    QString getTagsUrl() const;
    void setTagsUrl(const QString &tags_url);
    bool is_tags_url_Set() const;
    bool is_tags_url_Valid() const;

    QString getTeamsUrl() const;
    void setTeamsUrl(const QString &teams_url);
    bool is_teams_url_Set() const;
    bool is_teams_url_Valid() const;

    QString getTreesUrl() const;
    void setTreesUrl(const QString &trees_url);
    bool is_trees_url_Set() const;
    bool is_trees_url_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_archive_url;
    bool m_archive_url_isSet;
    bool m_archive_url_isValid;

    QString m_assignees_url;
    bool m_assignees_url_isSet;
    bool m_assignees_url_isValid;

    QString m_blobs_url;
    bool m_blobs_url_isSet;
    bool m_blobs_url_isValid;

    QString m_branches_url;
    bool m_branches_url_isSet;
    bool m_branches_url_isValid;

    QString m_collaborators_url;
    bool m_collaborators_url_isSet;
    bool m_collaborators_url_isValid;

    QString m_comments_url;
    bool m_comments_url_isSet;
    bool m_comments_url_isValid;

    QString m_commits_url;
    bool m_commits_url_isSet;
    bool m_commits_url_isValid;

    QString m_compare_url;
    bool m_compare_url_isSet;
    bool m_compare_url_isValid;

    QString m_contents_url;
    bool m_contents_url_isSet;
    bool m_contents_url_isValid;

    QString m_contributors_url;
    bool m_contributors_url_isSet;
    bool m_contributors_url_isValid;

    QString m_deployments_url;
    bool m_deployments_url_isSet;
    bool m_deployments_url_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_downloads_url;
    bool m_downloads_url_isSet;
    bool m_downloads_url_isValid;

    QString m_events_url;
    bool m_events_url_isSet;
    bool m_events_url_isValid;

    bool m_fork;
    bool m_fork_isSet;
    bool m_fork_isValid;

    QString m_forks_url;
    bool m_forks_url_isSet;
    bool m_forks_url_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    QString m_git_commits_url;
    bool m_git_commits_url_isSet;
    bool m_git_commits_url_isValid;

    QString m_git_refs_url;
    bool m_git_refs_url_isSet;
    bool m_git_refs_url_isValid;

    QString m_git_tags_url;
    bool m_git_tags_url_isSet;
    bool m_git_tags_url_isValid;

    QString m_hooks_url;
    bool m_hooks_url_isSet;
    bool m_hooks_url_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_issue_comment_url;
    bool m_issue_comment_url_isSet;
    bool m_issue_comment_url_isValid;

    QString m_issue_events_url;
    bool m_issue_events_url_isSet;
    bool m_issue_events_url_isValid;

    QString m_issues_url;
    bool m_issues_url_isSet;
    bool m_issues_url_isValid;

    QString m_keys_url;
    bool m_keys_url_isSet;
    bool m_keys_url_isValid;

    QString m_labels_url;
    bool m_labels_url_isSet;
    bool m_labels_url_isValid;

    QString m_languages_url;
    bool m_languages_url_isSet;
    bool m_languages_url_isValid;

    QString m_merges_url;
    bool m_merges_url_isSet;
    bool m_merges_url_isValid;

    QString m_milestones_url;
    bool m_milestones_url_isSet;
    bool m_milestones_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_notifications_url;
    bool m_notifications_url_isSet;
    bool m_notifications_url_isValid;

    OAISimple_user m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_r_private;
    bool m_r_private_isSet;
    bool m_r_private_isValid;

    QString m_pulls_url;
    bool m_pulls_url_isSet;
    bool m_pulls_url_isValid;

    QString m_releases_url;
    bool m_releases_url_isSet;
    bool m_releases_url_isValid;

    QString m_stargazers_url;
    bool m_stargazers_url_isSet;
    bool m_stargazers_url_isValid;

    QString m_statuses_url;
    bool m_statuses_url_isSet;
    bool m_statuses_url_isValid;

    QString m_subscribers_url;
    bool m_subscribers_url_isSet;
    bool m_subscribers_url_isValid;

    QString m_subscription_url;
    bool m_subscription_url_isSet;
    bool m_subscription_url_isValid;

    QString m_tags_url;
    bool m_tags_url_isSet;
    bool m_tags_url_isValid;

    QString m_teams_url;
    bool m_teams_url_isSet;
    bool m_teams_url_isValid;

    QString m_trees_url;
    bool m_trees_url_isSet;
    bool m_trees_url_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimple_repository)

#endif // OAISimple_repository_H
