/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvanced_security_active_committers_user.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvanced_security_active_committers_user::OAIAdvanced_security_active_committers_user(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvanced_security_active_committers_user::OAIAdvanced_security_active_committers_user() {
    this->initializeModel();
}

OAIAdvanced_security_active_committers_user::~OAIAdvanced_security_active_committers_user() {}

void OAIAdvanced_security_active_committers_user::initializeModel() {

    m_last_pushed_date_isSet = false;
    m_last_pushed_date_isValid = false;

    m_user_login_isSet = false;
    m_user_login_isValid = false;
}

void OAIAdvanced_security_active_committers_user::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvanced_security_active_committers_user::fromJsonObject(QJsonObject json) {

    m_last_pushed_date_isValid = ::OpenAPI::fromJsonValue(m_last_pushed_date, json[QString("last_pushed_date")]);
    m_last_pushed_date_isSet = !json[QString("last_pushed_date")].isNull() && m_last_pushed_date_isValid;

    m_user_login_isValid = ::OpenAPI::fromJsonValue(m_user_login, json[QString("user_login")]);
    m_user_login_isSet = !json[QString("user_login")].isNull() && m_user_login_isValid;
}

QString OAIAdvanced_security_active_committers_user::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvanced_security_active_committers_user::asJsonObject() const {
    QJsonObject obj;
    if (m_last_pushed_date_isSet) {
        obj.insert(QString("last_pushed_date"), ::OpenAPI::toJsonValue(m_last_pushed_date));
    }
    if (m_user_login_isSet) {
        obj.insert(QString("user_login"), ::OpenAPI::toJsonValue(m_user_login));
    }
    return obj;
}

QString OAIAdvanced_security_active_committers_user::getLastPushedDate() const {
    return m_last_pushed_date;
}
void OAIAdvanced_security_active_committers_user::setLastPushedDate(const QString &last_pushed_date) {
    m_last_pushed_date = last_pushed_date;
    m_last_pushed_date_isSet = true;
}

bool OAIAdvanced_security_active_committers_user::is_last_pushed_date_Set() const{
    return m_last_pushed_date_isSet;
}

bool OAIAdvanced_security_active_committers_user::is_last_pushed_date_Valid() const{
    return m_last_pushed_date_isValid;
}

QString OAIAdvanced_security_active_committers_user::getUserLogin() const {
    return m_user_login;
}
void OAIAdvanced_security_active_committers_user::setUserLogin(const QString &user_login) {
    m_user_login = user_login;
    m_user_login_isSet = true;
}

bool OAIAdvanced_security_active_committers_user::is_user_login_Set() const{
    return m_user_login_isSet;
}

bool OAIAdvanced_security_active_committers_user::is_user_login_Valid() const{
    return m_user_login_isValid;
}

bool OAIAdvanced_security_active_committers_user::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_pushed_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_login_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvanced_security_active_committers_user::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_last_pushed_date_isValid && m_user_login_isValid && true;
}

} // namespace OpenAPI
