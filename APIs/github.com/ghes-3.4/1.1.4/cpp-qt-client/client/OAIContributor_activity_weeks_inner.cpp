/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContributor_activity_weeks_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContributor_activity_weeks_inner::OAIContributor_activity_weeks_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContributor_activity_weeks_inner::OAIContributor_activity_weeks_inner() {
    this->initializeModel();
}

OAIContributor_activity_weeks_inner::~OAIContributor_activity_weeks_inner() {}

void OAIContributor_activity_weeks_inner::initializeModel() {

    m_a_isSet = false;
    m_a_isValid = false;

    m_c_isSet = false;
    m_c_isValid = false;

    m_d_isSet = false;
    m_d_isValid = false;

    m_w_isSet = false;
    m_w_isValid = false;
}

void OAIContributor_activity_weeks_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContributor_activity_weeks_inner::fromJsonObject(QJsonObject json) {

    m_a_isValid = ::OpenAPI::fromJsonValue(m_a, json[QString("a")]);
    m_a_isSet = !json[QString("a")].isNull() && m_a_isValid;

    m_c_isValid = ::OpenAPI::fromJsonValue(m_c, json[QString("c")]);
    m_c_isSet = !json[QString("c")].isNull() && m_c_isValid;

    m_d_isValid = ::OpenAPI::fromJsonValue(m_d, json[QString("d")]);
    m_d_isSet = !json[QString("d")].isNull() && m_d_isValid;

    m_w_isValid = ::OpenAPI::fromJsonValue(m_w, json[QString("w")]);
    m_w_isSet = !json[QString("w")].isNull() && m_w_isValid;
}

QString OAIContributor_activity_weeks_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContributor_activity_weeks_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_a_isSet) {
        obj.insert(QString("a"), ::OpenAPI::toJsonValue(m_a));
    }
    if (m_c_isSet) {
        obj.insert(QString("c"), ::OpenAPI::toJsonValue(m_c));
    }
    if (m_d_isSet) {
        obj.insert(QString("d"), ::OpenAPI::toJsonValue(m_d));
    }
    if (m_w_isSet) {
        obj.insert(QString("w"), ::OpenAPI::toJsonValue(m_w));
    }
    return obj;
}

qint32 OAIContributor_activity_weeks_inner::getA() const {
    return m_a;
}
void OAIContributor_activity_weeks_inner::setA(const qint32 &a) {
    m_a = a;
    m_a_isSet = true;
}

bool OAIContributor_activity_weeks_inner::is_a_Set() const{
    return m_a_isSet;
}

bool OAIContributor_activity_weeks_inner::is_a_Valid() const{
    return m_a_isValid;
}

qint32 OAIContributor_activity_weeks_inner::getC() const {
    return m_c;
}
void OAIContributor_activity_weeks_inner::setC(const qint32 &c) {
    m_c = c;
    m_c_isSet = true;
}

bool OAIContributor_activity_weeks_inner::is_c_Set() const{
    return m_c_isSet;
}

bool OAIContributor_activity_weeks_inner::is_c_Valid() const{
    return m_c_isValid;
}

qint32 OAIContributor_activity_weeks_inner::getD() const {
    return m_d;
}
void OAIContributor_activity_weeks_inner::setD(const qint32 &d) {
    m_d = d;
    m_d_isSet = true;
}

bool OAIContributor_activity_weeks_inner::is_d_Set() const{
    return m_d_isSet;
}

bool OAIContributor_activity_weeks_inner::is_d_Valid() const{
    return m_d_isValid;
}

qint32 OAIContributor_activity_weeks_inner::getW() const {
    return m_w;
}
void OAIContributor_activity_weeks_inner::setW(const qint32 &w) {
    m_w = w;
    m_w_isSet = true;
}

bool OAIContributor_activity_weeks_inner::is_w_Set() const{
    return m_w_isSet;
}

bool OAIContributor_activity_weeks_inner::is_w_Valid() const{
    return m_w_isValid;
}

bool OAIContributor_activity_weeks_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_a_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_d_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_w_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContributor_activity_weeks_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
