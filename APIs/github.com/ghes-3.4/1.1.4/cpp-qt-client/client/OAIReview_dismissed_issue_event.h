/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReview_dismissed_issue_event.h
 *
 * Review Dismissed Issue Event
 */

#ifndef OAIReview_dismissed_issue_event_H
#define OAIReview_dismissed_issue_event_H

#include <QJsonObject>

#include "OAINullable_integration.h"
#include "OAIReview_dismissed_issue_event_dismissed_review.h"
#include "OAISimple_user.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimple_user;
class OAIReview_dismissed_issue_event_dismissed_review;
class OAINullable_integration;

class OAIReview_dismissed_issue_event : public OAIObject {
public:
    OAIReview_dismissed_issue_event();
    OAIReview_dismissed_issue_event(QString json);
    ~OAIReview_dismissed_issue_event() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimple_user getActor() const;
    void setActor(const OAISimple_user &actor);
    bool is_actor_Set() const;
    bool is_actor_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QString getCommitUrl() const;
    void setCommitUrl(const QString &commit_url);
    bool is_commit_url_Set() const;
    bool is_commit_url_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIReview_dismissed_issue_event_dismissed_review getDismissedReview() const;
    void setDismissedReview(const OAIReview_dismissed_issue_event_dismissed_review &dismissed_review);
    bool is_dismissed_review_Set() const;
    bool is_dismissed_review_Valid() const;

    QString getEvent() const;
    void setEvent(const QString &event);
    bool is_event_Set() const;
    bool is_event_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    OAINullable_integration getPerformedViaGithubApp() const;
    void setPerformedViaGithubApp(const OAINullable_integration &performed_via_github_app);
    bool is_performed_via_github_app_Set() const;
    bool is_performed_via_github_app_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimple_user m_actor;
    bool m_actor_isSet;
    bool m_actor_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QString m_commit_url;
    bool m_commit_url_isSet;
    bool m_commit_url_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIReview_dismissed_issue_event_dismissed_review m_dismissed_review;
    bool m_dismissed_review_isSet;
    bool m_dismissed_review_isValid;

    QString m_event;
    bool m_event_isSet;
    bool m_event_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    OAINullable_integration m_performed_via_github_app;
    bool m_performed_via_github_app_isSet;
    bool m_performed_via_github_app_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReview_dismissed_issue_event)

#endif // OAIReview_dismissed_issue_event_H
