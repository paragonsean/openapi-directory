/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnabled_repositories.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnabled_repositories::OAIEnabled_repositories(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnabled_repositories::OAIEnabled_repositories() {
    this->initializeModel();
}

OAIEnabled_repositories::~OAIEnabled_repositories() {}

void OAIEnabled_repositories::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEnabled_repositories::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEnabled_repositories::fromJson(QString jsonString) {
    
    if ( jsonString.compare("all", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEnabled_repositories::ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("none", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEnabled_repositories::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("selected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEnabled_repositories::SELECTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEnabled_repositories::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEnabled_repositories::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEnabled_repositories::ALL:
            val = "all";
            break;
        case eOAIEnabled_repositories::NONE:
            val = "none";
            break;
        case eOAIEnabled_repositories::SELECTED:
            val = "selected";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEnabled_repositories::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEnabled_repositories::eOAIEnabled_repositories OAIEnabled_repositories::getValue() const {
    return m_value;
}

void OAIEnabled_repositories::setValue(const OAIEnabled_repositories::eOAIEnabled_repositories& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEnabled_repositories::isSet() const {
    
    return m_value_isSet;
}

bool OAIEnabled_repositories::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
