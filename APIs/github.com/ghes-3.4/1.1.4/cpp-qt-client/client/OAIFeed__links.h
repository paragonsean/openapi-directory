/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeed__links.h
 *
 * 
 */

#ifndef OAIFeed__links_H
#define OAIFeed__links_H

#include <QJsonObject>

#include "OAILink_with_type.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILink_with_type;

class OAIFeed__links : public OAIObject {
public:
    OAIFeed__links();
    OAIFeed__links(QString json);
    ~OAIFeed__links() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILink_with_type getCurrentUser() const;
    void setCurrentUser(const OAILink_with_type &current_user);
    bool is_current_user_Set() const;
    bool is_current_user_Valid() const;

    OAILink_with_type getCurrentUserActor() const;
    void setCurrentUserActor(const OAILink_with_type &current_user_actor);
    bool is_current_user_actor_Set() const;
    bool is_current_user_actor_Valid() const;

    OAILink_with_type getCurrentUserOrganization() const;
    void setCurrentUserOrganization(const OAILink_with_type &current_user_organization);
    bool is_current_user_organization_Set() const;
    bool is_current_user_organization_Valid() const;

    QList<OAILink_with_type> getCurrentUserOrganizations() const;
    void setCurrentUserOrganizations(const QList<OAILink_with_type> &current_user_organizations);
    bool is_current_user_organizations_Set() const;
    bool is_current_user_organizations_Valid() const;

    OAILink_with_type getCurrentUserPublic() const;
    void setCurrentUserPublic(const OAILink_with_type &current_user_public);
    bool is_current_user_public_Set() const;
    bool is_current_user_public_Valid() const;

    OAILink_with_type getRepositoryDiscussions() const;
    void setRepositoryDiscussions(const OAILink_with_type &repository_discussions);
    bool is_repository_discussions_Set() const;
    bool is_repository_discussions_Valid() const;

    OAILink_with_type getRepositoryDiscussionsCategory() const;
    void setRepositoryDiscussionsCategory(const OAILink_with_type &repository_discussions_category);
    bool is_repository_discussions_category_Set() const;
    bool is_repository_discussions_category_Valid() const;

    OAILink_with_type getSecurityAdvisories() const;
    void setSecurityAdvisories(const OAILink_with_type &security_advisories);
    bool is_security_advisories_Set() const;
    bool is_security_advisories_Valid() const;

    OAILink_with_type getTimeline() const;
    void setTimeline(const OAILink_with_type &timeline);
    bool is_timeline_Set() const;
    bool is_timeline_Valid() const;

    OAILink_with_type getUser() const;
    void setUser(const OAILink_with_type &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILink_with_type m_current_user;
    bool m_current_user_isSet;
    bool m_current_user_isValid;

    OAILink_with_type m_current_user_actor;
    bool m_current_user_actor_isSet;
    bool m_current_user_actor_isValid;

    OAILink_with_type m_current_user_organization;
    bool m_current_user_organization_isSet;
    bool m_current_user_organization_isValid;

    QList<OAILink_with_type> m_current_user_organizations;
    bool m_current_user_organizations_isSet;
    bool m_current_user_organizations_isValid;

    OAILink_with_type m_current_user_public;
    bool m_current_user_public_isSet;
    bool m_current_user_public_isValid;

    OAILink_with_type m_repository_discussions;
    bool m_repository_discussions_isSet;
    bool m_repository_discussions_isValid;

    OAILink_with_type m_repository_discussions_category;
    bool m_repository_discussions_category_isSet;
    bool m_repository_discussions_category_isValid;

    OAILink_with_type m_security_advisories;
    bool m_security_advisories_isSet;
    bool m_security_advisories_isValid;

    OAILink_with_type m_timeline;
    bool m_timeline_isSet;
    bool m_timeline_isValid;

    OAILink_with_type m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeed__links)

#endif // OAIFeed__links_H
