/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChecks_create_request_output_images_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChecks_create_request_output_images_inner::OAIChecks_create_request_output_images_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChecks_create_request_output_images_inner::OAIChecks_create_request_output_images_inner() {
    this->initializeModel();
}

OAIChecks_create_request_output_images_inner::~OAIChecks_create_request_output_images_inner() {}

void OAIChecks_create_request_output_images_inner::initializeModel() {

    m_alt_isSet = false;
    m_alt_isValid = false;

    m_caption_isSet = false;
    m_caption_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;
}

void OAIChecks_create_request_output_images_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChecks_create_request_output_images_inner::fromJsonObject(QJsonObject json) {

    m_alt_isValid = ::OpenAPI::fromJsonValue(m_alt, json[QString("alt")]);
    m_alt_isSet = !json[QString("alt")].isNull() && m_alt_isValid;

    m_caption_isValid = ::OpenAPI::fromJsonValue(m_caption, json[QString("caption")]);
    m_caption_isSet = !json[QString("caption")].isNull() && m_caption_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("image_url")]);
    m_image_url_isSet = !json[QString("image_url")].isNull() && m_image_url_isValid;
}

QString OAIChecks_create_request_output_images_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChecks_create_request_output_images_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_alt_isSet) {
        obj.insert(QString("alt"), ::OpenAPI::toJsonValue(m_alt));
    }
    if (m_caption_isSet) {
        obj.insert(QString("caption"), ::OpenAPI::toJsonValue(m_caption));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("image_url"), ::OpenAPI::toJsonValue(m_image_url));
    }
    return obj;
}

QString OAIChecks_create_request_output_images_inner::getAlt() const {
    return m_alt;
}
void OAIChecks_create_request_output_images_inner::setAlt(const QString &alt) {
    m_alt = alt;
    m_alt_isSet = true;
}

bool OAIChecks_create_request_output_images_inner::is_alt_Set() const{
    return m_alt_isSet;
}

bool OAIChecks_create_request_output_images_inner::is_alt_Valid() const{
    return m_alt_isValid;
}

QString OAIChecks_create_request_output_images_inner::getCaption() const {
    return m_caption;
}
void OAIChecks_create_request_output_images_inner::setCaption(const QString &caption) {
    m_caption = caption;
    m_caption_isSet = true;
}

bool OAIChecks_create_request_output_images_inner::is_caption_Set() const{
    return m_caption_isSet;
}

bool OAIChecks_create_request_output_images_inner::is_caption_Valid() const{
    return m_caption_isValid;
}

QString OAIChecks_create_request_output_images_inner::getImageUrl() const {
    return m_image_url;
}
void OAIChecks_create_request_output_images_inner::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIChecks_create_request_output_images_inner::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIChecks_create_request_output_images_inner::is_image_url_Valid() const{
    return m_image_url_isValid;
}

bool OAIChecks_create_request_output_images_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_caption_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChecks_create_request_output_images_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_alt_isValid && m_image_url_isValid && true;
}

} // namespace OpenAPI
