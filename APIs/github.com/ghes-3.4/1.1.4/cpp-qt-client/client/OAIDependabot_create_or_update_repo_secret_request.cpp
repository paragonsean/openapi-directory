/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDependabot_create_or_update_repo_secret_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDependabot_create_or_update_repo_secret_request::OAIDependabot_create_or_update_repo_secret_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDependabot_create_or_update_repo_secret_request::OAIDependabot_create_or_update_repo_secret_request() {
    this->initializeModel();
}

OAIDependabot_create_or_update_repo_secret_request::~OAIDependabot_create_or_update_repo_secret_request() {}

void OAIDependabot_create_or_update_repo_secret_request::initializeModel() {

    m_encrypted_value_isSet = false;
    m_encrypted_value_isValid = false;

    m_key_id_isSet = false;
    m_key_id_isValid = false;
}

void OAIDependabot_create_or_update_repo_secret_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDependabot_create_or_update_repo_secret_request::fromJsonObject(QJsonObject json) {

    m_encrypted_value_isValid = ::OpenAPI::fromJsonValue(m_encrypted_value, json[QString("encrypted_value")]);
    m_encrypted_value_isSet = !json[QString("encrypted_value")].isNull() && m_encrypted_value_isValid;

    m_key_id_isValid = ::OpenAPI::fromJsonValue(m_key_id, json[QString("key_id")]);
    m_key_id_isSet = !json[QString("key_id")].isNull() && m_key_id_isValid;
}

QString OAIDependabot_create_or_update_repo_secret_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDependabot_create_or_update_repo_secret_request::asJsonObject() const {
    QJsonObject obj;
    if (m_encrypted_value_isSet) {
        obj.insert(QString("encrypted_value"), ::OpenAPI::toJsonValue(m_encrypted_value));
    }
    if (m_key_id_isSet) {
        obj.insert(QString("key_id"), ::OpenAPI::toJsonValue(m_key_id));
    }
    return obj;
}

QString OAIDependabot_create_or_update_repo_secret_request::getEncryptedValue() const {
    return m_encrypted_value;
}
void OAIDependabot_create_or_update_repo_secret_request::setEncryptedValue(const QString &encrypted_value) {
    m_encrypted_value = encrypted_value;
    m_encrypted_value_isSet = true;
}

bool OAIDependabot_create_or_update_repo_secret_request::is_encrypted_value_Set() const{
    return m_encrypted_value_isSet;
}

bool OAIDependabot_create_or_update_repo_secret_request::is_encrypted_value_Valid() const{
    return m_encrypted_value_isValid;
}

QString OAIDependabot_create_or_update_repo_secret_request::getKeyId() const {
    return m_key_id;
}
void OAIDependabot_create_or_update_repo_secret_request::setKeyId(const QString &key_id) {
    m_key_id = key_id;
    m_key_id_isSet = true;
}

bool OAIDependabot_create_or_update_repo_secret_request::is_key_id_Set() const{
    return m_key_id_isSet;
}

bool OAIDependabot_create_or_update_repo_secret_request::is_key_id_Valid() const{
    return m_key_id_isValid;
}

bool OAIDependabot_create_or_update_repo_secret_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_encrypted_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDependabot_create_or_update_repo_secret_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
