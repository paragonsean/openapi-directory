/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AdvancedSecurityActiveCommitters;
import org.openapitools.client.model.BasicError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillingApi
 */
@Disabled
public class BillingApiTest {

    private final BillingApi api = new BillingApi();

    /**
     * Get GitHub Advanced Security active committers for an enterprise
     *
     * Gets the GitHub Advanced Security active committers for an enterprise per repository.  Each distinct user login across all repositories is counted as a single Advanced Security seat, so the &#x60;total_advanced_security_committers&#x60; is not the sum of active_users for each repository.  The total number of repositories with committer information is tracked by the &#x60;total_count&#x60; field.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetGithubAdvancedSecurityBillingGheTest() throws ApiException {
        String enterprise = null;
        Integer perPage = null;
        Integer page = null;
        AdvancedSecurityActiveCommitters response = api.billingGetGithubAdvancedSecurityBillingGhe(enterprise, perPage, page);
        // TODO: test validations
    }

    /**
     * Get GitHub Advanced Security active committers for an organization
     *
     * Gets the GitHub Advanced Security active committers for an organization per repository.  Each distinct user login across all repositories is counted as a single Advanced Security seat, so the &#x60;total_advanced_security_committers&#x60; is not the sum of advanced_security_committers for each repository.  If this organization defers to an enterprise for billing, the &#x60;total_advanced_security_committers&#x60; returned from the organization API may include some users that are in more than one organization, so they will only consume a single Advanced Security seat at the enterprise level.  The total number of repositories with committer information is tracked by the &#x60;total_count&#x60; field.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetGithubAdvancedSecurityBillingOrgTest() throws ApiException {
        String org = null;
        Integer perPage = null;
        Integer page = null;
        AdvancedSecurityActiveCommitters response = api.billingGetGithubAdvancedSecurityBillingOrg(org, perPage, page);
        // TODO: test validations
    }

}
