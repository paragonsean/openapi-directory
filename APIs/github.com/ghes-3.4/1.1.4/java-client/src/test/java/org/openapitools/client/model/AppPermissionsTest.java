/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AppPermissions
 */
public class AppPermissionsTest {
    private final AppPermissions model = new AppPermissions();

    /**
     * Model tests for AppPermissions
     */
    @Test
    public void testAppPermissions() {
        // TODO: test AppPermissions
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'administration'
     */
    @Test
    public void administrationTest() {
        // TODO: test administration
    }

    /**
     * Test the property 'checks'
     */
    @Test
    public void checksTest() {
        // TODO: test checks
    }

    /**
     * Test the property 'contents'
     */
    @Test
    public void contentsTest() {
        // TODO: test contents
    }

    /**
     * Test the property 'deployments'
     */
    @Test
    public void deploymentsTest() {
        // TODO: test deployments
    }

    /**
     * Test the property 'environments'
     */
    @Test
    public void environmentsTest() {
        // TODO: test environments
    }

    /**
     * Test the property 'issues'
     */
    @Test
    public void issuesTest() {
        // TODO: test issues
    }

    /**
     * Test the property 'members'
     */
    @Test
    public void membersTest() {
        // TODO: test members
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'organizationAdministration'
     */
    @Test
    public void organizationAdministrationTest() {
        // TODO: test organizationAdministration
    }

    /**
     * Test the property 'organizationHooks'
     */
    @Test
    public void organizationHooksTest() {
        // TODO: test organizationHooks
    }

    /**
     * Test the property 'organizationPackages'
     */
    @Test
    public void organizationPackagesTest() {
        // TODO: test organizationPackages
    }

    /**
     * Test the property 'organizationPlan'
     */
    @Test
    public void organizationPlanTest() {
        // TODO: test organizationPlan
    }

    /**
     * Test the property 'organizationProjects'
     */
    @Test
    public void organizationProjectsTest() {
        // TODO: test organizationProjects
    }

    /**
     * Test the property 'organizationSecrets'
     */
    @Test
    public void organizationSecretsTest() {
        // TODO: test organizationSecrets
    }

    /**
     * Test the property 'organizationSelfHostedRunners'
     */
    @Test
    public void organizationSelfHostedRunnersTest() {
        // TODO: test organizationSelfHostedRunners
    }

    /**
     * Test the property 'organizationUserBlocking'
     */
    @Test
    public void organizationUserBlockingTest() {
        // TODO: test organizationUserBlocking
    }

    /**
     * Test the property 'packages'
     */
    @Test
    public void packagesTest() {
        // TODO: test packages
    }

    /**
     * Test the property 'pages'
     */
    @Test
    public void pagesTest() {
        // TODO: test pages
    }

    /**
     * Test the property 'pullRequests'
     */
    @Test
    public void pullRequestsTest() {
        // TODO: test pullRequests
    }

    /**
     * Test the property 'repositoryHooks'
     */
    @Test
    public void repositoryHooksTest() {
        // TODO: test repositoryHooks
    }

    /**
     * Test the property 'repositoryProjects'
     */
    @Test
    public void repositoryProjectsTest() {
        // TODO: test repositoryProjects
    }

    /**
     * Test the property 'secretScanningAlerts'
     */
    @Test
    public void secretScanningAlertsTest() {
        // TODO: test secretScanningAlerts
    }

    /**
     * Test the property 'secrets'
     */
    @Test
    public void secretsTest() {
        // TODO: test secrets
    }

    /**
     * Test the property 'securityEvents'
     */
    @Test
    public void securityEventsTest() {
        // TODO: test securityEvents
    }

    /**
     * Test the property 'singleFile'
     */
    @Test
    public void singleFileTest() {
        // TODO: test singleFile
    }

    /**
     * Test the property 'statuses'
     */
    @Test
    public void statusesTest() {
        // TODO: test statuses
    }

    /**
     * Test the property 'teamDiscussions'
     */
    @Test
    public void teamDiscussionsTest() {
        // TODO: test teamDiscussions
    }

    /**
     * Test the property 'vulnerabilityAlerts'
     */
    @Test
    public void vulnerabilityAlertsTest() {
        // TODO: test vulnerabilityAlerts
    }

    /**
     * Test the property 'workflows'
     */
    @Test
    public void workflowsTest() {
        // TODO: test workflows
    }

}
