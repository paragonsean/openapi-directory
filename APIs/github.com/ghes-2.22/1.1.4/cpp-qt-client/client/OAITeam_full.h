/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam_full.h
 *
 * Groups of organization members that gives permissions on specified repositories.
 */

#ifndef OAITeam_full_H
#define OAITeam_full_H

#include <QJsonObject>

#include "OAINullable_team_simple.h"
#include "OAIOrganization_full.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrganization_full;
class OAINullable_team_simple;

class OAITeam_full : public OAIObject {
public:
    OAITeam_full();
    OAITeam_full(QString json);
    ~OAITeam_full() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLdapDn() const;
    void setLdapDn(const QString &ldap_dn);
    bool is_ldap_dn_Set() const;
    bool is_ldap_dn_Valid() const;

    qint32 getMembersCount() const;
    void setMembersCount(const qint32 &members_count);
    bool is_members_count_Set() const;
    bool is_members_count_Valid() const;

    QString getMembersUrl() const;
    void setMembersUrl(const QString &members_url);
    bool is_members_url_Set() const;
    bool is_members_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    OAIOrganization_full getOrganization() const;
    void setOrganization(const OAIOrganization_full &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    OAINullable_team_simple getParent() const;
    void setParent(const OAINullable_team_simple &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QString getPermission() const;
    void setPermission(const QString &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    QString getPrivacy() const;
    void setPrivacy(const QString &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    qint32 getReposCount() const;
    void setReposCount(const qint32 &repos_count);
    bool is_repos_count_Set() const;
    bool is_repos_count_Valid() const;

    QString getRepositoriesUrl() const;
    void setRepositoriesUrl(const QString &repositories_url);
    bool is_repositories_url_Set() const;
    bool is_repositories_url_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_ldap_dn;
    bool m_ldap_dn_isSet;
    bool m_ldap_dn_isValid;

    qint32 m_members_count;
    bool m_members_count_isSet;
    bool m_members_count_isValid;

    QString m_members_url;
    bool m_members_url_isSet;
    bool m_members_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    OAIOrganization_full m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    OAINullable_team_simple m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QString m_permission;
    bool m_permission_isSet;
    bool m_permission_isValid;

    QString m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    qint32 m_repos_count;
    bool m_repos_count_isSet;
    bool m_repos_count_isValid;

    QString m_repositories_url;
    bool m_repositories_url_isSet;
    bool m_repositories_url_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam_full)

#endif // OAITeam_full_H
