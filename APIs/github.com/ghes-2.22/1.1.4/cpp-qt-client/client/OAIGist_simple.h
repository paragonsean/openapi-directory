/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGist_simple.h
 *
 * Gist Simple
 */

#ifndef OAIGist_simple_H
#define OAIGist_simple_H

#include <QJsonObject>

#include "OAIGist.h"
#include "OAIGist_history.h"
#include "OAIGist_simple_files_value.h"
#include "OAIGist_simple_forks_inner.h"
#include "OAISimple_user.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGist_simple_files_value;
class OAIGist;
class OAIGist_simple_forks_inner;
class OAIGist_history;
class OAISimple_user;

class OAIGist_simple : public OAIObject {
public:
    OAIGist_simple();
    OAIGist_simple(QString json);
    ~OAIGist_simple() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getComments() const;
    void setComments(const qint32 &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getCommentsUrl() const;
    void setCommentsUrl(const QString &comments_url);
    bool is_comments_url_Set() const;
    bool is_comments_url_Valid() const;

    QString getCommitsUrl() const;
    void setCommitsUrl(const QString &commits_url);
    bool is_commits_url_Set() const;
    bool is_commits_url_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, OAIGist_simple_files_value> getFiles() const;
    void setFiles(const QMap<QString, OAIGist_simple_files_value> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    OAIGist getForkOf() const;
    void setForkOf(const OAIGist &fork_of);
    bool is_fork_of_Set() const;
    bool is_fork_of_Valid() const;

    Q_DECL_DEPRECATED QList<OAIGist_simple_forks_inner> getForks() const;
    Q_DECL_DEPRECATED void setForks(const QList<OAIGist_simple_forks_inner> &forks);
    Q_DECL_DEPRECATED bool is_forks_Set() const;
    Q_DECL_DEPRECATED bool is_forks_Valid() const;

    QString getForksUrl() const;
    void setForksUrl(const QString &forks_url);
    bool is_forks_url_Set() const;
    bool is_forks_url_Valid() const;

    QString getGitPullUrl() const;
    void setGitPullUrl(const QString &git_pull_url);
    bool is_git_pull_url_Set() const;
    bool is_git_pull_url_Valid() const;

    QString getGitPushUrl() const;
    void setGitPushUrl(const QString &git_push_url);
    bool is_git_push_url_Set() const;
    bool is_git_push_url_Valid() const;

    Q_DECL_DEPRECATED QList<OAIGist_history> getHistory() const;
    Q_DECL_DEPRECATED void setHistory(const QList<OAIGist_history> &history);
    Q_DECL_DEPRECATED bool is_history_Set() const;
    Q_DECL_DEPRECATED bool is_history_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    OAISimple_user getOwner() const;
    void setOwner(const OAISimple_user &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isRPublic() const;
    void setRPublic(const bool &r_public);
    bool is_r_public_Set() const;
    bool is_r_public_Valid() const;

    bool isTruncated() const;
    void setTruncated(const bool &truncated);
    bool is_truncated_Set() const;
    bool is_truncated_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_comments_url;
    bool m_comments_url_isSet;
    bool m_comments_url_isValid;

    QString m_commits_url;
    bool m_commits_url_isSet;
    bool m_commits_url_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, OAIGist_simple_files_value> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    OAIGist m_fork_of;
    bool m_fork_of_isSet;
    bool m_fork_of_isValid;

    QList<OAIGist_simple_forks_inner> m_forks;
    bool m_forks_isSet;
    bool m_forks_isValid;

    QString m_forks_url;
    bool m_forks_url_isSet;
    bool m_forks_url_isValid;

    QString m_git_pull_url;
    bool m_git_pull_url_isSet;
    bool m_git_pull_url_isValid;

    QString m_git_push_url;
    bool m_git_push_url_isSet;
    bool m_git_push_url_isValid;

    QList<OAIGist_history> m_history;
    bool m_history_isSet;
    bool m_history_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    OAISimple_user m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_r_public;
    bool m_r_public_isSet;
    bool m_r_public_isValid;

    bool m_truncated;
    bool m_truncated_isSet;
    bool m_truncated_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGist_simple)

#endif // OAIGist_simple_H
