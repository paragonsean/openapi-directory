/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICode_scanning_alert_classification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICode_scanning_alert_classification::OAICode_scanning_alert_classification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICode_scanning_alert_classification::OAICode_scanning_alert_classification() {
    this->initializeModel();
}

OAICode_scanning_alert_classification::~OAICode_scanning_alert_classification() {}

void OAICode_scanning_alert_classification::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICode_scanning_alert_classification::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICode_scanning_alert_classification::fromJson(QString jsonString) {
    
    if ( jsonString.compare("source", Qt::CaseInsensitive) == 0) {
        m_value = eOAICode_scanning_alert_classification::SOURCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("generated", Qt::CaseInsensitive) == 0) {
        m_value = eOAICode_scanning_alert_classification::GENERATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("test", Qt::CaseInsensitive) == 0) {
        m_value = eOAICode_scanning_alert_classification::TEST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("library", Qt::CaseInsensitive) == 0) {
        m_value = eOAICode_scanning_alert_classification::LIBRARY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICode_scanning_alert_classification::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICode_scanning_alert_classification::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICode_scanning_alert_classification::SOURCE:
            val = "source";
            break;
        case eOAICode_scanning_alert_classification::GENERATED:
            val = "generated";
            break;
        case eOAICode_scanning_alert_classification::TEST:
            val = "test";
            break;
        case eOAICode_scanning_alert_classification::LIBRARY:
            val = "library";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICode_scanning_alert_classification::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICode_scanning_alert_classification::eOAICode_scanning_alert_classification OAICode_scanning_alert_classification::getValue() const {
    return m_value;
}

void OAICode_scanning_alert_classification::setValue(const OAICode_scanning_alert_classification::eOAICode_scanning_alert_classification& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICode_scanning_alert_classification::isSet() const {
    
    return m_value_isSet;
}

bool OAICode_scanning_alert_classification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
