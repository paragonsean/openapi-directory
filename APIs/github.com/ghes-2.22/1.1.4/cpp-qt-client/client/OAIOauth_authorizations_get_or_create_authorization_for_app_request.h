/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOauth_authorizations_get_or_create_authorization_for_app_request.h
 *
 * 
 */

#ifndef OAIOauth_authorizations_get_or_create_authorization_for_app_request_H
#define OAIOauth_authorizations_get_or_create_authorization_for_app_request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOauth_authorizations_get_or_create_authorization_for_app_request : public OAIObject {
public:
    OAIOauth_authorizations_get_or_create_authorization_for_app_request();
    OAIOauth_authorizations_get_or_create_authorization_for_app_request(QString json);
    ~OAIOauth_authorizations_get_or_create_authorization_for_app_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getNoteUrl() const;
    void setNoteUrl(const QString &note_url);
    bool is_note_url_Set() const;
    bool is_note_url_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_note_url;
    bool m_note_url_isSet;
    bool m_note_url_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOauth_authorizations_get_or_create_authorization_for_app_request)

#endif // OAIOauth_authorizations_get_or_create_authorization_for_app_request_H
