/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_settings_enterprise_smtp.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_settings_enterprise_smtp::OAIEnterprise_settings_enterprise_smtp(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_settings_enterprise_smtp::OAIEnterprise_settings_enterprise_smtp() {
    this->initializeModel();
}

OAIEnterprise_settings_enterprise_smtp::~OAIEnterprise_settings_enterprise_smtp() {}

void OAIEnterprise_settings_enterprise_smtp::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_authentication_isSet = false;
    m_authentication_isValid = false;

    m_discard_to_noreply_address_isSet = false;
    m_discard_to_noreply_address_isValid = false;

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_enable_starttls_auto_isSet = false;
    m_enable_starttls_auto_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_noreply_address_isSet = false;
    m_noreply_address_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_port_isSet = false;
    m_port_isValid = false;

    m_support_address_isSet = false;
    m_support_address_isValid = false;

    m_support_address_type_isSet = false;
    m_support_address_type_isValid = false;

    m_user_name_isSet = false;
    m_user_name_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIEnterprise_settings_enterprise_smtp::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_settings_enterprise_smtp::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_authentication_isValid = ::OpenAPI::fromJsonValue(m_authentication, json[QString("authentication")]);
    m_authentication_isSet = !json[QString("authentication")].isNull() && m_authentication_isValid;

    m_discard_to_noreply_address_isValid = ::OpenAPI::fromJsonValue(m_discard_to_noreply_address, json[QString("discard-to-noreply-address")]);
    m_discard_to_noreply_address_isSet = !json[QString("discard-to-noreply-address")].isNull() && m_discard_to_noreply_address_isValid;

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_enable_starttls_auto_isValid = ::OpenAPI::fromJsonValue(m_enable_starttls_auto, json[QString("enable_starttls_auto")]);
    m_enable_starttls_auto_isSet = !json[QString("enable_starttls_auto")].isNull() && m_enable_starttls_auto_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_noreply_address_isValid = ::OpenAPI::fromJsonValue(m_noreply_address, json[QString("noreply_address")]);
    m_noreply_address_isSet = !json[QString("noreply_address")].isNull() && m_noreply_address_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("port")]);
    m_port_isSet = !json[QString("port")].isNull() && m_port_isValid;

    m_support_address_isValid = ::OpenAPI::fromJsonValue(m_support_address, json[QString("support_address")]);
    m_support_address_isSet = !json[QString("support_address")].isNull() && m_support_address_isValid;

    m_support_address_type_isValid = ::OpenAPI::fromJsonValue(m_support_address_type, json[QString("support_address_type")]);
    m_support_address_type_isSet = !json[QString("support_address_type")].isNull() && m_support_address_type_isValid;

    m_user_name_isValid = ::OpenAPI::fromJsonValue(m_user_name, json[QString("user_name")]);
    m_user_name_isSet = !json[QString("user_name")].isNull() && m_user_name_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_settings_enterprise_smtp::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_authentication_isSet) {
        obj.insert(QString("authentication"), ::OpenAPI::toJsonValue(m_authentication));
    }
    if (m_discard_to_noreply_address_isSet) {
        obj.insert(QString("discard-to-noreply-address"), ::OpenAPI::toJsonValue(m_discard_to_noreply_address));
    }
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_enable_starttls_auto_isSet) {
        obj.insert(QString("enable_starttls_auto"), ::OpenAPI::toJsonValue(m_enable_starttls_auto));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_noreply_address_isSet) {
        obj.insert(QString("noreply_address"), ::OpenAPI::toJsonValue(m_noreply_address));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_port_isSet) {
        obj.insert(QString("port"), ::OpenAPI::toJsonValue(m_port));
    }
    if (m_support_address_isSet) {
        obj.insert(QString("support_address"), ::OpenAPI::toJsonValue(m_support_address));
    }
    if (m_support_address_type_isSet) {
        obj.insert(QString("support_address_type"), ::OpenAPI::toJsonValue(m_support_address_type));
    }
    if (m_user_name_isSet) {
        obj.insert(QString("user_name"), ::OpenAPI::toJsonValue(m_user_name));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIEnterprise_settings_enterprise_smtp::getAddress() const {
    return m_address;
}
void OAIEnterprise_settings_enterprise_smtp::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_address_Set() const{
    return m_address_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getAuthentication() const {
    return m_authentication;
}
void OAIEnterprise_settings_enterprise_smtp::setAuthentication(const QString &authentication) {
    m_authentication = authentication;
    m_authentication_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_authentication_Set() const{
    return m_authentication_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_authentication_Valid() const{
    return m_authentication_isValid;
}

bool OAIEnterprise_settings_enterprise_smtp::isDiscardToNoreplyAddress() const {
    return m_discard_to_noreply_address;
}
void OAIEnterprise_settings_enterprise_smtp::setDiscardToNoreplyAddress(const bool &discard_to_noreply_address) {
    m_discard_to_noreply_address = discard_to_noreply_address;
    m_discard_to_noreply_address_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_discard_to_noreply_address_Set() const{
    return m_discard_to_noreply_address_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_discard_to_noreply_address_Valid() const{
    return m_discard_to_noreply_address_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getDomain() const {
    return m_domain;
}
void OAIEnterprise_settings_enterprise_smtp::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_domain_Valid() const{
    return m_domain_isValid;
}

bool OAIEnterprise_settings_enterprise_smtp::isEnableStarttlsAuto() const {
    return m_enable_starttls_auto;
}
void OAIEnterprise_settings_enterprise_smtp::setEnableStarttlsAuto(const bool &enable_starttls_auto) {
    m_enable_starttls_auto = enable_starttls_auto;
    m_enable_starttls_auto_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_enable_starttls_auto_Set() const{
    return m_enable_starttls_auto_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_enable_starttls_auto_Valid() const{
    return m_enable_starttls_auto_isValid;
}

bool OAIEnterprise_settings_enterprise_smtp::isEnabled() const {
    return m_enabled;
}
void OAIEnterprise_settings_enterprise_smtp::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getNoreplyAddress() const {
    return m_noreply_address;
}
void OAIEnterprise_settings_enterprise_smtp::setNoreplyAddress(const QString &noreply_address) {
    m_noreply_address = noreply_address;
    m_noreply_address_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_noreply_address_Set() const{
    return m_noreply_address_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_noreply_address_Valid() const{
    return m_noreply_address_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getPassword() const {
    return m_password;
}
void OAIEnterprise_settings_enterprise_smtp::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_password_Set() const{
    return m_password_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getPort() const {
    return m_port;
}
void OAIEnterprise_settings_enterprise_smtp::setPort(const QString &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_port_Set() const{
    return m_port_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_port_Valid() const{
    return m_port_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getSupportAddress() const {
    return m_support_address;
}
void OAIEnterprise_settings_enterprise_smtp::setSupportAddress(const QString &support_address) {
    m_support_address = support_address;
    m_support_address_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_support_address_Set() const{
    return m_support_address_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_support_address_Valid() const{
    return m_support_address_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getSupportAddressType() const {
    return m_support_address_type;
}
void OAIEnterprise_settings_enterprise_smtp::setSupportAddressType(const QString &support_address_type) {
    m_support_address_type = support_address_type;
    m_support_address_type_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_support_address_type_Set() const{
    return m_support_address_type_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_support_address_type_Valid() const{
    return m_support_address_type_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getUserName() const {
    return m_user_name;
}
void OAIEnterprise_settings_enterprise_smtp::setUserName(const QString &user_name) {
    m_user_name = user_name;
    m_user_name_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_user_name_Set() const{
    return m_user_name_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_user_name_Valid() const{
    return m_user_name_isValid;
}

QString OAIEnterprise_settings_enterprise_smtp::getUsername() const {
    return m_username;
}
void OAIEnterprise_settings_enterprise_smtp::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIEnterprise_settings_enterprise_smtp::is_username_Set() const{
    return m_username_isSet;
}

bool OAIEnterprise_settings_enterprise_smtp::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIEnterprise_settings_enterprise_smtp::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authentication_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discard_to_noreply_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_starttls_auto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_noreply_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_address_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_settings_enterprise_smtp::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
