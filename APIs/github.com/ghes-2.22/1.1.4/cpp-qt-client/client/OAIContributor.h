/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContributor.h
 *
 * Contributor
 */

#ifndef OAIContributor_H
#define OAIContributor_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContributor : public OAIObject {
public:
    OAIContributor();
    OAIContributor(QString json);
    ~OAIContributor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    qint32 getContributions() const;
    void setContributions(const qint32 &contributions);
    bool is_contributions_Set() const;
    bool is_contributions_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getEventsUrl() const;
    void setEventsUrl(const QString &events_url);
    bool is_events_url_Set() const;
    bool is_events_url_Valid() const;

    QString getFollowersUrl() const;
    void setFollowersUrl(const QString &followers_url);
    bool is_followers_url_Set() const;
    bool is_followers_url_Valid() const;

    QString getFollowingUrl() const;
    void setFollowingUrl(const QString &following_url);
    bool is_following_url_Set() const;
    bool is_following_url_Valid() const;

    QString getGistsUrl() const;
    void setGistsUrl(const QString &gists_url);
    bool is_gists_url_Set() const;
    bool is_gists_url_Valid() const;

    QString getGravatarId() const;
    void setGravatarId(const QString &gravatar_id);
    bool is_gravatar_id_Set() const;
    bool is_gravatar_id_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLogin() const;
    void setLogin(const QString &login);
    bool is_login_Set() const;
    bool is_login_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getOrganizationsUrl() const;
    void setOrganizationsUrl(const QString &organizations_url);
    bool is_organizations_url_Set() const;
    bool is_organizations_url_Valid() const;

    QString getReceivedEventsUrl() const;
    void setReceivedEventsUrl(const QString &received_events_url);
    bool is_received_events_url_Set() const;
    bool is_received_events_url_Valid() const;

    QString getReposUrl() const;
    void setReposUrl(const QString &repos_url);
    bool is_repos_url_Set() const;
    bool is_repos_url_Valid() const;

    bool isSiteAdmin() const;
    void setSiteAdmin(const bool &site_admin);
    bool is_site_admin_Set() const;
    bool is_site_admin_Valid() const;

    QString getStarredUrl() const;
    void setStarredUrl(const QString &starred_url);
    bool is_starred_url_Set() const;
    bool is_starred_url_Valid() const;

    QString getSubscriptionsUrl() const;
    void setSubscriptionsUrl(const QString &subscriptions_url);
    bool is_subscriptions_url_Set() const;
    bool is_subscriptions_url_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    qint32 m_contributions;
    bool m_contributions_isSet;
    bool m_contributions_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_events_url;
    bool m_events_url_isSet;
    bool m_events_url_isValid;

    QString m_followers_url;
    bool m_followers_url_isSet;
    bool m_followers_url_isValid;

    QString m_following_url;
    bool m_following_url_isSet;
    bool m_following_url_isValid;

    QString m_gists_url;
    bool m_gists_url_isSet;
    bool m_gists_url_isValid;

    QString m_gravatar_id;
    bool m_gravatar_id_isSet;
    bool m_gravatar_id_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_login;
    bool m_login_isSet;
    bool m_login_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_organizations_url;
    bool m_organizations_url_isSet;
    bool m_organizations_url_isValid;

    QString m_received_events_url;
    bool m_received_events_url_isSet;
    bool m_received_events_url_isValid;

    QString m_repos_url;
    bool m_repos_url_isSet;
    bool m_repos_url_isValid;

    bool m_site_admin;
    bool m_site_admin_isSet;
    bool m_site_admin_isValid;

    QString m_starred_url;
    bool m_starred_url_isSet;
    bool m_starred_url_isValid;

    QString m_subscriptions_url;
    bool m_subscriptions_url_isSet;
    bool m_subscriptions_url_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContributor)

#endif // OAIContributor_H
