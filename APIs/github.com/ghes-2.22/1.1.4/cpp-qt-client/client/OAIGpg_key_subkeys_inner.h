/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGpg_key_subkeys_inner.h
 *
 * 
 */

#ifndef OAIGpg_key_subkeys_inner_H
#define OAIGpg_key_subkeys_inner_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGpg_key_subkeys_inner : public OAIObject {
public:
    OAIGpg_key_subkeys_inner();
    OAIGpg_key_subkeys_inner(QString json);
    ~OAIGpg_key_subkeys_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanCertify() const;
    void setCanCertify(const bool &can_certify);
    bool is_can_certify_Set() const;
    bool is_can_certify_Valid() const;

    bool isCanEncryptComms() const;
    void setCanEncryptComms(const bool &can_encrypt_comms);
    bool is_can_encrypt_comms_Set() const;
    bool is_can_encrypt_comms_Valid() const;

    bool isCanEncryptStorage() const;
    void setCanEncryptStorage(const bool &can_encrypt_storage);
    bool is_can_encrypt_storage_Set() const;
    bool is_can_encrypt_storage_Valid() const;

    bool isCanSign() const;
    void setCanSign(const bool &can_sign);
    bool is_can_sign_Set() const;
    bool is_can_sign_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<QJsonValue> getEmails() const;
    void setEmails(const QList<QJsonValue> &emails);
    bool is_emails_Set() const;
    bool is_emails_Valid() const;

    QString getExpiresAt() const;
    void setExpiresAt(const QString &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKeyId() const;
    void setKeyId(const QString &key_id);
    bool is_key_id_Set() const;
    bool is_key_id_Valid() const;

    qint32 getPrimaryKeyId() const;
    void setPrimaryKeyId(const qint32 &primary_key_id);
    bool is_primary_key_id_Set() const;
    bool is_primary_key_id_Valid() const;

    QString getPublicKey() const;
    void setPublicKey(const QString &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    QString getRawKey() const;
    void setRawKey(const QString &raw_key);
    bool is_raw_key_Set() const;
    bool is_raw_key_Valid() const;

    QList<QJsonValue> getSubkeys() const;
    void setSubkeys(const QList<QJsonValue> &subkeys);
    bool is_subkeys_Set() const;
    bool is_subkeys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_certify;
    bool m_can_certify_isSet;
    bool m_can_certify_isValid;

    bool m_can_encrypt_comms;
    bool m_can_encrypt_comms_isSet;
    bool m_can_encrypt_comms_isValid;

    bool m_can_encrypt_storage;
    bool m_can_encrypt_storage_isSet;
    bool m_can_encrypt_storage_isValid;

    bool m_can_sign;
    bool m_can_sign_isSet;
    bool m_can_sign_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<QJsonValue> m_emails;
    bool m_emails_isSet;
    bool m_emails_isValid;

    QString m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_key_id;
    bool m_key_id_isSet;
    bool m_key_id_isValid;

    qint32 m_primary_key_id;
    bool m_primary_key_id_isSet;
    bool m_primary_key_id_isValid;

    QString m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    QString m_raw_key;
    bool m_raw_key_isSet;
    bool m_raw_key_isValid;

    QList<QJsonValue> m_subkeys;
    bool m_subkeys_isSet;
    bool m_subkeys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGpg_key_subkeys_inner)

#endif // OAIGpg_key_subkeys_inner_H
