/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnterprise_settings_enterprise.h
 *
 * 
 */

#ifndef OAIEnterprise_settings_enterprise_H
#define OAIEnterprise_settings_enterprise_H

#include <QJsonObject>

#include "OAIBranch_protection_allow_deletions.h"
#include "OAIEnterprise_settings_enterprise_avatar.h"
#include "OAIEnterprise_settings_enterprise_cas.h"
#include "OAIEnterprise_settings_enterprise_collectd.h"
#include "OAIEnterprise_settings_enterprise_customer.h"
#include "OAIEnterprise_settings_enterprise_github_oauth.h"
#include "OAIEnterprise_settings_enterprise_github_ssl.h"
#include "OAIEnterprise_settings_enterprise_ldap.h"
#include "OAIEnterprise_settings_enterprise_license.h"
#include "OAIEnterprise_settings_enterprise_mapping.h"
#include "OAIEnterprise_settings_enterprise_ntp.h"
#include "OAIEnterprise_settings_enterprise_saml.h"
#include "OAIEnterprise_settings_enterprise_smtp.h"
#include "OAIEnterprise_settings_enterprise_snmp.h"
#include "OAIEnterprise_settings_enterprise_syslog.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnterprise_settings_enterprise_avatar;
class OAIEnterprise_settings_enterprise_cas;
class OAIEnterprise_settings_enterprise_collectd;
class OAIEnterprise_settings_enterprise_customer;
class OAIEnterprise_settings_enterprise_github_oauth;
class OAIEnterprise_settings_enterprise_github_ssl;
class OAIEnterprise_settings_enterprise_ldap;
class OAIEnterprise_settings_enterprise_license;
class OAIEnterprise_settings_enterprise_mapping;
class OAIEnterprise_settings_enterprise_ntp;
class OAIBranch_protection_allow_deletions;
class OAIEnterprise_settings_enterprise_saml;
class OAIEnterprise_settings_enterprise_smtp;
class OAIEnterprise_settings_enterprise_snmp;
class OAIEnterprise_settings_enterprise_syslog;

class OAIEnterprise_settings_enterprise : public OAIObject {
public:
    OAIEnterprise_settings_enterprise();
    OAIEnterprise_settings_enterprise(QString json);
    ~OAIEnterprise_settings_enterprise() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminPassword() const;
    void setAdminPassword(const QString &admin_password);
    bool is_admin_password_Set() const;
    bool is_admin_password_Valid() const;

    QString getAssets() const;
    void setAssets(const QString &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    QString getAuthMode() const;
    void setAuthMode(const QString &auth_mode);
    bool is_auth_mode_Set() const;
    bool is_auth_mode_Valid() const;

    OAIEnterprise_settings_enterprise_avatar getAvatar() const;
    void setAvatar(const OAIEnterprise_settings_enterprise_avatar &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    OAIEnterprise_settings_enterprise_cas getCas() const;
    void setCas(const OAIEnterprise_settings_enterprise_cas &cas);
    bool is_cas_Set() const;
    bool is_cas_Valid() const;

    OAIEnterprise_settings_enterprise_collectd getCollectd() const;
    void setCollectd(const OAIEnterprise_settings_enterprise_collectd &collectd);
    bool is_collectd_Set() const;
    bool is_collectd_Valid() const;

    qint32 getConfigurationId() const;
    void setConfigurationId(const qint32 &configuration_id);
    bool is_configuration_id_Set() const;
    bool is_configuration_id_Valid() const;

    qint32 getConfigurationRunCount() const;
    void setConfigurationRunCount(const qint32 &configuration_run_count);
    bool is_configuration_run_count_Set() const;
    bool is_configuration_run_count_Valid() const;

    OAIEnterprise_settings_enterprise_customer getCustomer() const;
    void setCustomer(const OAIEnterprise_settings_enterprise_customer &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    bool isExpireSessions() const;
    void setExpireSessions(const bool &expire_sessions);
    bool is_expire_sessions_Set() const;
    bool is_expire_sessions_Valid() const;

    QString getGithubHostname() const;
    void setGithubHostname(const QString &github_hostname);
    bool is_github_hostname_Set() const;
    bool is_github_hostname_Valid() const;

    OAIEnterprise_settings_enterprise_github_oauth getGithubOauth() const;
    void setGithubOauth(const OAIEnterprise_settings_enterprise_github_oauth &github_oauth);
    bool is_github_oauth_Set() const;
    bool is_github_oauth_Valid() const;

    OAIEnterprise_settings_enterprise_github_ssl getGithubSsl() const;
    void setGithubSsl(const OAIEnterprise_settings_enterprise_github_ssl &github_ssl);
    bool is_github_ssl_Set() const;
    bool is_github_ssl_Valid() const;

    QString getHttpProxy() const;
    void setHttpProxy(const QString &http_proxy);
    bool is_http_proxy_Set() const;
    bool is_http_proxy_Valid() const;

    QString getIdenticonsHost() const;
    void setIdenticonsHost(const QString &identicons_host);
    bool is_identicons_host_Set() const;
    bool is_identicons_host_Valid() const;

    OAIEnterprise_settings_enterprise_ldap getLdap() const;
    void setLdap(const OAIEnterprise_settings_enterprise_ldap &ldap);
    bool is_ldap_Set() const;
    bool is_ldap_Valid() const;

    OAIEnterprise_settings_enterprise_license getLicense() const;
    void setLicense(const OAIEnterprise_settings_enterprise_license &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getLoadBalancer() const;
    void setLoadBalancer(const QString &load_balancer);
    bool is_load_balancer_Set() const;
    bool is_load_balancer_Valid() const;

    OAIEnterprise_settings_enterprise_mapping getMapping() const;
    void setMapping(const OAIEnterprise_settings_enterprise_mapping &mapping);
    bool is_mapping_Set() const;
    bool is_mapping_Valid() const;

    OAIEnterprise_settings_enterprise_ntp getNtp() const;
    void setNtp(const OAIEnterprise_settings_enterprise_ntp &ntp);
    bool is_ntp_Set() const;
    bool is_ntp_Valid() const;

    OAIBranch_protection_allow_deletions getPages() const;
    void setPages(const OAIBranch_protection_allow_deletions &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    bool isPrivateMode() const;
    void setPrivateMode(const bool &private_mode);
    bool is_private_mode_Set() const;
    bool is_private_mode_Valid() const;

    bool isPublicPages() const;
    void setPublicPages(const bool &public_pages);
    bool is_public_pages_Set() const;
    bool is_public_pages_Valid() const;

    OAIEnterprise_settings_enterprise_saml getSaml() const;
    void setSaml(const OAIEnterprise_settings_enterprise_saml &saml);
    bool is_saml_Set() const;
    bool is_saml_Valid() const;

    bool isSignupEnabled() const;
    void setSignupEnabled(const bool &signup_enabled);
    bool is_signup_enabled_Set() const;
    bool is_signup_enabled_Valid() const;

    OAIEnterprise_settings_enterprise_smtp getSmtp() const;
    void setSmtp(const OAIEnterprise_settings_enterprise_smtp &smtp);
    bool is_smtp_Set() const;
    bool is_smtp_Valid() const;

    OAIEnterprise_settings_enterprise_snmp getSnmp() const;
    void setSnmp(const OAIEnterprise_settings_enterprise_snmp &snmp);
    bool is_snmp_Set() const;
    bool is_snmp_Valid() const;

    bool isSubdomainIsolation() const;
    void setSubdomainIsolation(const bool &subdomain_isolation);
    bool is_subdomain_isolation_Set() const;
    bool is_subdomain_isolation_Valid() const;

    OAIEnterprise_settings_enterprise_syslog getSyslog() const;
    void setSyslog(const OAIEnterprise_settings_enterprise_syslog &syslog);
    bool is_syslog_Set() const;
    bool is_syslog_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_password;
    bool m_admin_password_isSet;
    bool m_admin_password_isValid;

    QString m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    QString m_auth_mode;
    bool m_auth_mode_isSet;
    bool m_auth_mode_isValid;

    OAIEnterprise_settings_enterprise_avatar m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    OAIEnterprise_settings_enterprise_cas m_cas;
    bool m_cas_isSet;
    bool m_cas_isValid;

    OAIEnterprise_settings_enterprise_collectd m_collectd;
    bool m_collectd_isSet;
    bool m_collectd_isValid;

    qint32 m_configuration_id;
    bool m_configuration_id_isSet;
    bool m_configuration_id_isValid;

    qint32 m_configuration_run_count;
    bool m_configuration_run_count_isSet;
    bool m_configuration_run_count_isValid;

    OAIEnterprise_settings_enterprise_customer m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    bool m_expire_sessions;
    bool m_expire_sessions_isSet;
    bool m_expire_sessions_isValid;

    QString m_github_hostname;
    bool m_github_hostname_isSet;
    bool m_github_hostname_isValid;

    OAIEnterprise_settings_enterprise_github_oauth m_github_oauth;
    bool m_github_oauth_isSet;
    bool m_github_oauth_isValid;

    OAIEnterprise_settings_enterprise_github_ssl m_github_ssl;
    bool m_github_ssl_isSet;
    bool m_github_ssl_isValid;

    QString m_http_proxy;
    bool m_http_proxy_isSet;
    bool m_http_proxy_isValid;

    QString m_identicons_host;
    bool m_identicons_host_isSet;
    bool m_identicons_host_isValid;

    OAIEnterprise_settings_enterprise_ldap m_ldap;
    bool m_ldap_isSet;
    bool m_ldap_isValid;

    OAIEnterprise_settings_enterprise_license m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_load_balancer;
    bool m_load_balancer_isSet;
    bool m_load_balancer_isValid;

    OAIEnterprise_settings_enterprise_mapping m_mapping;
    bool m_mapping_isSet;
    bool m_mapping_isValid;

    OAIEnterprise_settings_enterprise_ntp m_ntp;
    bool m_ntp_isSet;
    bool m_ntp_isValid;

    OAIBranch_protection_allow_deletions m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    bool m_private_mode;
    bool m_private_mode_isSet;
    bool m_private_mode_isValid;

    bool m_public_pages;
    bool m_public_pages_isSet;
    bool m_public_pages_isValid;

    OAIEnterprise_settings_enterprise_saml m_saml;
    bool m_saml_isSet;
    bool m_saml_isValid;

    bool m_signup_enabled;
    bool m_signup_enabled_isSet;
    bool m_signup_enabled_isValid;

    OAIEnterprise_settings_enterprise_smtp m_smtp;
    bool m_smtp_isSet;
    bool m_smtp_isValid;

    OAIEnterprise_settings_enterprise_snmp m_snmp;
    bool m_snmp_isSet;
    bool m_snmp_isValid;

    bool m_subdomain_isolation;
    bool m_subdomain_isolation_isSet;
    bool m_subdomain_isolation_isValid;

    OAIEnterprise_settings_enterprise_syslog m_syslog;
    bool m_syslog_isSet;
    bool m_syslog_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnterprise_settings_enterprise)

#endif // OAIEnterprise_settings_enterprise_H
