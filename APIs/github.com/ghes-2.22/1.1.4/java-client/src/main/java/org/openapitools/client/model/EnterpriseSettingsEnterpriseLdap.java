/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseLdapProfile;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseLdapReconciliation;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EnterpriseSettingsEnterpriseLdap
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:08:18.265607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnterpriseSettingsEnterpriseLdap {
  public static final String SERIALIZED_NAME_ADMIN_GROUP = "admin_group";
  @SerializedName(SERIALIZED_NAME_ADMIN_GROUP)
  private String adminGroup;

  public static final String SERIALIZED_NAME_BASE = "base";
  @SerializedName(SERIALIZED_NAME_BASE)
  private List<Object> base = new ArrayList<>();

  public static final String SERIALIZED_NAME_BIND_DN = "bind_dn";
  @SerializedName(SERIALIZED_NAME_BIND_DN)
  private String bindDn;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_POSIX_SUPPORT = "posix_support";
  @SerializedName(SERIALIZED_NAME_POSIX_SUPPORT)
  private Boolean posixSupport;

  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  private EnterpriseSettingsEnterpriseLdapProfile profile;

  public static final String SERIALIZED_NAME_RECONCILIATION = "reconciliation";
  @SerializedName(SERIALIZED_NAME_RECONCILIATION)
  private EnterpriseSettingsEnterpriseLdapReconciliation reconciliation;

  public static final String SERIALIZED_NAME_RECURSIVE_GROUP_SEARCH = "recursive_group_search";
  @SerializedName(SERIALIZED_NAME_RECURSIVE_GROUP_SEARCH)
  private Boolean recursiveGroupSearch;

  public static final String SERIALIZED_NAME_SEARCH_STRATEGY = "search_strategy";
  @SerializedName(SERIALIZED_NAME_SEARCH_STRATEGY)
  private String searchStrategy;

  public static final String SERIALIZED_NAME_SYNC_ENABLED = "sync_enabled";
  @SerializedName(SERIALIZED_NAME_SYNC_ENABLED)
  private Boolean syncEnabled;

  public static final String SERIALIZED_NAME_TEAM_SYNC_INTERVAL = "team_sync_interval";
  @SerializedName(SERIALIZED_NAME_TEAM_SYNC_INTERVAL)
  private Integer teamSyncInterval;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_USER_GROUPS = "user_groups";
  @SerializedName(SERIALIZED_NAME_USER_GROUPS)
  private List<Object> userGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_SYNC_EMAILS = "user_sync_emails";
  @SerializedName(SERIALIZED_NAME_USER_SYNC_EMAILS)
  private Boolean userSyncEmails;

  public static final String SERIALIZED_NAME_USER_SYNC_INTERVAL = "user_sync_interval";
  @SerializedName(SERIALIZED_NAME_USER_SYNC_INTERVAL)
  private Integer userSyncInterval;

  public static final String SERIALIZED_NAME_USER_SYNC_KEYS = "user_sync_keys";
  @SerializedName(SERIALIZED_NAME_USER_SYNC_KEYS)
  private Boolean userSyncKeys;

  public static final String SERIALIZED_NAME_VIRTUAL_ATTRIBUTE_ENABLED = "virtual_attribute_enabled";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_ATTRIBUTE_ENABLED)
  private Boolean virtualAttributeEnabled;

  public EnterpriseSettingsEnterpriseLdap() {
  }

  public EnterpriseSettingsEnterpriseLdap adminGroup(String adminGroup) {
    this.adminGroup = adminGroup;
    return this;
  }

  /**
   * Get adminGroup
   * @return adminGroup
   */
  @javax.annotation.Nullable
  public String getAdminGroup() {
    return adminGroup;
  }

  public void setAdminGroup(String adminGroup) {
    this.adminGroup = adminGroup;
  }


  public EnterpriseSettingsEnterpriseLdap base(List<Object> base) {
    this.base = base;
    return this;
  }

  public EnterpriseSettingsEnterpriseLdap addBaseItem(Object baseItem) {
    if (this.base == null) {
      this.base = new ArrayList<>();
    }
    this.base.add(baseItem);
    return this;
  }

  /**
   * Get base
   * @return base
   */
  @javax.annotation.Nullable
  public List<Object> getBase() {
    return base;
  }

  public void setBase(List<Object> base) {
    this.base = base;
  }


  public EnterpriseSettingsEnterpriseLdap bindDn(String bindDn) {
    this.bindDn = bindDn;
    return this;
  }

  /**
   * Get bindDn
   * @return bindDn
   */
  @javax.annotation.Nullable
  public String getBindDn() {
    return bindDn;
  }

  public void setBindDn(String bindDn) {
    this.bindDn = bindDn;
  }


  public EnterpriseSettingsEnterpriseLdap host(String host) {
    this.host = host;
    return this;
  }

  /**
   * Get host
   * @return host
   */
  @javax.annotation.Nullable
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }


  public EnterpriseSettingsEnterpriseLdap method(String method) {
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @javax.annotation.Nullable
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }


  public EnterpriseSettingsEnterpriseLdap password(String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  public EnterpriseSettingsEnterpriseLdap port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public EnterpriseSettingsEnterpriseLdap posixSupport(Boolean posixSupport) {
    this.posixSupport = posixSupport;
    return this;
  }

  /**
   * Get posixSupport
   * @return posixSupport
   */
  @javax.annotation.Nullable
  public Boolean getPosixSupport() {
    return posixSupport;
  }

  public void setPosixSupport(Boolean posixSupport) {
    this.posixSupport = posixSupport;
  }


  public EnterpriseSettingsEnterpriseLdap profile(EnterpriseSettingsEnterpriseLdapProfile profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseLdapProfile getProfile() {
    return profile;
  }

  public void setProfile(EnterpriseSettingsEnterpriseLdapProfile profile) {
    this.profile = profile;
  }


  public EnterpriseSettingsEnterpriseLdap reconciliation(EnterpriseSettingsEnterpriseLdapReconciliation reconciliation) {
    this.reconciliation = reconciliation;
    return this;
  }

  /**
   * Get reconciliation
   * @return reconciliation
   */
  @javax.annotation.Nullable
  public EnterpriseSettingsEnterpriseLdapReconciliation getReconciliation() {
    return reconciliation;
  }

  public void setReconciliation(EnterpriseSettingsEnterpriseLdapReconciliation reconciliation) {
    this.reconciliation = reconciliation;
  }


  public EnterpriseSettingsEnterpriseLdap recursiveGroupSearch(Boolean recursiveGroupSearch) {
    this.recursiveGroupSearch = recursiveGroupSearch;
    return this;
  }

  /**
   * Get recursiveGroupSearch
   * @return recursiveGroupSearch
   */
  @javax.annotation.Nullable
  public Boolean getRecursiveGroupSearch() {
    return recursiveGroupSearch;
  }

  public void setRecursiveGroupSearch(Boolean recursiveGroupSearch) {
    this.recursiveGroupSearch = recursiveGroupSearch;
  }


  public EnterpriseSettingsEnterpriseLdap searchStrategy(String searchStrategy) {
    this.searchStrategy = searchStrategy;
    return this;
  }

  /**
   * Get searchStrategy
   * @return searchStrategy
   */
  @javax.annotation.Nullable
  public String getSearchStrategy() {
    return searchStrategy;
  }

  public void setSearchStrategy(String searchStrategy) {
    this.searchStrategy = searchStrategy;
  }


  public EnterpriseSettingsEnterpriseLdap syncEnabled(Boolean syncEnabled) {
    this.syncEnabled = syncEnabled;
    return this;
  }

  /**
   * Get syncEnabled
   * @return syncEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSyncEnabled() {
    return syncEnabled;
  }

  public void setSyncEnabled(Boolean syncEnabled) {
    this.syncEnabled = syncEnabled;
  }


  public EnterpriseSettingsEnterpriseLdap teamSyncInterval(Integer teamSyncInterval) {
    this.teamSyncInterval = teamSyncInterval;
    return this;
  }

  /**
   * Get teamSyncInterval
   * @return teamSyncInterval
   */
  @javax.annotation.Nullable
  public Integer getTeamSyncInterval() {
    return teamSyncInterval;
  }

  public void setTeamSyncInterval(Integer teamSyncInterval) {
    this.teamSyncInterval = teamSyncInterval;
  }


  public EnterpriseSettingsEnterpriseLdap uid(String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Get uid
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }


  public EnterpriseSettingsEnterpriseLdap userGroups(List<Object> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public EnterpriseSettingsEnterpriseLdap addUserGroupsItem(Object userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

  /**
   * Get userGroups
   * @return userGroups
   */
  @javax.annotation.Nullable
  public List<Object> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<Object> userGroups) {
    this.userGroups = userGroups;
  }


  public EnterpriseSettingsEnterpriseLdap userSyncEmails(Boolean userSyncEmails) {
    this.userSyncEmails = userSyncEmails;
    return this;
  }

  /**
   * Get userSyncEmails
   * @return userSyncEmails
   */
  @javax.annotation.Nullable
  public Boolean getUserSyncEmails() {
    return userSyncEmails;
  }

  public void setUserSyncEmails(Boolean userSyncEmails) {
    this.userSyncEmails = userSyncEmails;
  }


  public EnterpriseSettingsEnterpriseLdap userSyncInterval(Integer userSyncInterval) {
    this.userSyncInterval = userSyncInterval;
    return this;
  }

  /**
   * Get userSyncInterval
   * @return userSyncInterval
   */
  @javax.annotation.Nullable
  public Integer getUserSyncInterval() {
    return userSyncInterval;
  }

  public void setUserSyncInterval(Integer userSyncInterval) {
    this.userSyncInterval = userSyncInterval;
  }


  public EnterpriseSettingsEnterpriseLdap userSyncKeys(Boolean userSyncKeys) {
    this.userSyncKeys = userSyncKeys;
    return this;
  }

  /**
   * Get userSyncKeys
   * @return userSyncKeys
   */
  @javax.annotation.Nullable
  public Boolean getUserSyncKeys() {
    return userSyncKeys;
  }

  public void setUserSyncKeys(Boolean userSyncKeys) {
    this.userSyncKeys = userSyncKeys;
  }


  public EnterpriseSettingsEnterpriseLdap virtualAttributeEnabled(Boolean virtualAttributeEnabled) {
    this.virtualAttributeEnabled = virtualAttributeEnabled;
    return this;
  }

  /**
   * Get virtualAttributeEnabled
   * @return virtualAttributeEnabled
   */
  @javax.annotation.Nullable
  public Boolean getVirtualAttributeEnabled() {
    return virtualAttributeEnabled;
  }

  public void setVirtualAttributeEnabled(Boolean virtualAttributeEnabled) {
    this.virtualAttributeEnabled = virtualAttributeEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseSettingsEnterpriseLdap enterpriseSettingsEnterpriseLdap = (EnterpriseSettingsEnterpriseLdap) o;
    return Objects.equals(this.adminGroup, enterpriseSettingsEnterpriseLdap.adminGroup) &&
        Objects.equals(this.base, enterpriseSettingsEnterpriseLdap.base) &&
        Objects.equals(this.bindDn, enterpriseSettingsEnterpriseLdap.bindDn) &&
        Objects.equals(this.host, enterpriseSettingsEnterpriseLdap.host) &&
        Objects.equals(this.method, enterpriseSettingsEnterpriseLdap.method) &&
        Objects.equals(this.password, enterpriseSettingsEnterpriseLdap.password) &&
        Objects.equals(this.port, enterpriseSettingsEnterpriseLdap.port) &&
        Objects.equals(this.posixSupport, enterpriseSettingsEnterpriseLdap.posixSupport) &&
        Objects.equals(this.profile, enterpriseSettingsEnterpriseLdap.profile) &&
        Objects.equals(this.reconciliation, enterpriseSettingsEnterpriseLdap.reconciliation) &&
        Objects.equals(this.recursiveGroupSearch, enterpriseSettingsEnterpriseLdap.recursiveGroupSearch) &&
        Objects.equals(this.searchStrategy, enterpriseSettingsEnterpriseLdap.searchStrategy) &&
        Objects.equals(this.syncEnabled, enterpriseSettingsEnterpriseLdap.syncEnabled) &&
        Objects.equals(this.teamSyncInterval, enterpriseSettingsEnterpriseLdap.teamSyncInterval) &&
        Objects.equals(this.uid, enterpriseSettingsEnterpriseLdap.uid) &&
        Objects.equals(this.userGroups, enterpriseSettingsEnterpriseLdap.userGroups) &&
        Objects.equals(this.userSyncEmails, enterpriseSettingsEnterpriseLdap.userSyncEmails) &&
        Objects.equals(this.userSyncInterval, enterpriseSettingsEnterpriseLdap.userSyncInterval) &&
        Objects.equals(this.userSyncKeys, enterpriseSettingsEnterpriseLdap.userSyncKeys) &&
        Objects.equals(this.virtualAttributeEnabled, enterpriseSettingsEnterpriseLdap.virtualAttributeEnabled);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminGroup, base, bindDn, host, method, password, port, posixSupport, profile, reconciliation, recursiveGroupSearch, searchStrategy, syncEnabled, teamSyncInterval, uid, userGroups, userSyncEmails, userSyncInterval, userSyncKeys, virtualAttributeEnabled);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseSettingsEnterpriseLdap {\n");
    sb.append("    adminGroup: ").append(toIndentedString(adminGroup)).append("\n");
    sb.append("    base: ").append(toIndentedString(base)).append("\n");
    sb.append("    bindDn: ").append(toIndentedString(bindDn)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    posixSupport: ").append(toIndentedString(posixSupport)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    reconciliation: ").append(toIndentedString(reconciliation)).append("\n");
    sb.append("    recursiveGroupSearch: ").append(toIndentedString(recursiveGroupSearch)).append("\n");
    sb.append("    searchStrategy: ").append(toIndentedString(searchStrategy)).append("\n");
    sb.append("    syncEnabled: ").append(toIndentedString(syncEnabled)).append("\n");
    sb.append("    teamSyncInterval: ").append(toIndentedString(teamSyncInterval)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    userSyncEmails: ").append(toIndentedString(userSyncEmails)).append("\n");
    sb.append("    userSyncInterval: ").append(toIndentedString(userSyncInterval)).append("\n");
    sb.append("    userSyncKeys: ").append(toIndentedString(userSyncKeys)).append("\n");
    sb.append("    virtualAttributeEnabled: ").append(toIndentedString(virtualAttributeEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("admin_group");
    openapiFields.add("base");
    openapiFields.add("bind_dn");
    openapiFields.add("host");
    openapiFields.add("method");
    openapiFields.add("password");
    openapiFields.add("port");
    openapiFields.add("posix_support");
    openapiFields.add("profile");
    openapiFields.add("reconciliation");
    openapiFields.add("recursive_group_search");
    openapiFields.add("search_strategy");
    openapiFields.add("sync_enabled");
    openapiFields.add("team_sync_interval");
    openapiFields.add("uid");
    openapiFields.add("user_groups");
    openapiFields.add("user_sync_emails");
    openapiFields.add("user_sync_interval");
    openapiFields.add("user_sync_keys");
    openapiFields.add("virtual_attribute_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnterpriseSettingsEnterpriseLdap
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnterpriseSettingsEnterpriseLdap.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnterpriseSettingsEnterpriseLdap is not found in the empty JSON string", EnterpriseSettingsEnterpriseLdap.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnterpriseSettingsEnterpriseLdap.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnterpriseSettingsEnterpriseLdap` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("admin_group") != null && !jsonObj.get("admin_group").isJsonNull()) && !jsonObj.get("admin_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `admin_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("admin_group").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("base") != null && !jsonObj.get("base").isJsonNull() && !jsonObj.get("base").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `base` to be an array in the JSON string but got `%s`", jsonObj.get("base").toString()));
      }
      if ((jsonObj.get("bind_dn") != null && !jsonObj.get("bind_dn").isJsonNull()) && !jsonObj.get("bind_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bind_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bind_dn").toString()));
      }
      if ((jsonObj.get("host") != null && !jsonObj.get("host").isJsonNull()) && !jsonObj.get("host").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host").toString()));
      }
      if ((jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull()) && !jsonObj.get("method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      // validate the optional field `profile`
      if (jsonObj.get("profile") != null && !jsonObj.get("profile").isJsonNull()) {
        EnterpriseSettingsEnterpriseLdapProfile.validateJsonElement(jsonObj.get("profile"));
      }
      // validate the optional field `reconciliation`
      if (jsonObj.get("reconciliation") != null && !jsonObj.get("reconciliation").isJsonNull()) {
        EnterpriseSettingsEnterpriseLdapReconciliation.validateJsonElement(jsonObj.get("reconciliation"));
      }
      if ((jsonObj.get("search_strategy") != null && !jsonObj.get("search_strategy").isJsonNull()) && !jsonObj.get("search_strategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `search_strategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("search_strategy").toString()));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("user_groups") != null && !jsonObj.get("user_groups").isJsonNull() && !jsonObj.get("user_groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_groups` to be an array in the JSON string but got `%s`", jsonObj.get("user_groups").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnterpriseSettingsEnterpriseLdap.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnterpriseSettingsEnterpriseLdap' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnterpriseSettingsEnterpriseLdap> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnterpriseSettingsEnterpriseLdap.class));

       return (TypeAdapter<T>) new TypeAdapter<EnterpriseSettingsEnterpriseLdap>() {
           @Override
           public void write(JsonWriter out, EnterpriseSettingsEnterpriseLdap value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnterpriseSettingsEnterpriseLdap read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnterpriseSettingsEnterpriseLdap given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnterpriseSettingsEnterpriseLdap
   * @throws IOException if the JSON string is invalid with respect to EnterpriseSettingsEnterpriseLdap
   */
  public static EnterpriseSettingsEnterpriseLdap fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnterpriseSettingsEnterpriseLdap.class);
  }

  /**
   * Convert an instance of EnterpriseSettingsEnterpriseLdap to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

