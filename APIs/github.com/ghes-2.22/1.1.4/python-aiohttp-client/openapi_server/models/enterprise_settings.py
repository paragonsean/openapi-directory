# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_settings_enterprise import EnterpriseSettingsEnterprise
from openapi_server import util


class EnterpriseSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enterprise: EnterpriseSettingsEnterprise=None, run_list: List[str]=None):
        """EnterpriseSettings - a model defined in OpenAPI

        :param enterprise: The enterprise of this EnterpriseSettings.
        :param run_list: The run_list of this EnterpriseSettings.
        """
        self.openapi_types = {
            'enterprise': EnterpriseSettingsEnterprise,
            'run_list': List[str]
        }

        self.attribute_map = {
            'enterprise': 'enterprise',
            'run_list': 'run_list'
        }

        self._enterprise = enterprise
        self._run_list = run_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise-settings of this EnterpriseSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enterprise(self):
        """Gets the enterprise of this EnterpriseSettings.


        :return: The enterprise of this EnterpriseSettings.
        :rtype: EnterpriseSettingsEnterprise
        """
        return self._enterprise

    @enterprise.setter
    def enterprise(self, enterprise):
        """Sets the enterprise of this EnterpriseSettings.


        :param enterprise: The enterprise of this EnterpriseSettings.
        :type enterprise: EnterpriseSettingsEnterprise
        """

        self._enterprise = enterprise

    @property
    def run_list(self):
        """Gets the run_list of this EnterpriseSettings.


        :return: The run_list of this EnterpriseSettings.
        :rtype: List[str]
        """
        return self._run_list

    @run_list.setter
    def run_list(self, run_list):
        """Sets the run_list of this EnterpriseSettings.


        :param run_list: The run_list of this EnterpriseSettings.
        :type run_list: List[str]
        """

        self._run_list = run_list
