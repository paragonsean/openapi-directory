# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_settings_enterprise_ldap_profile import EnterpriseSettingsEnterpriseLdapProfile
from openapi_server.models.enterprise_settings_enterprise_ldap_reconciliation import EnterpriseSettingsEnterpriseLdapReconciliation
from openapi_server import util


class EnterpriseSettingsEnterpriseLdap(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_group: str=None, base: List[object]=None, bind_dn: str=None, host: str=None, method: str=None, password: str=None, port: int=None, posix_support: bool=None, profile: EnterpriseSettingsEnterpriseLdapProfile=None, reconciliation: EnterpriseSettingsEnterpriseLdapReconciliation=None, recursive_group_search: bool=None, search_strategy: str=None, sync_enabled: bool=None, team_sync_interval: int=None, uid: str=None, user_groups: List[object]=None, user_sync_emails: bool=None, user_sync_interval: int=None, user_sync_keys: bool=None, virtual_attribute_enabled: bool=None):
        """EnterpriseSettingsEnterpriseLdap - a model defined in OpenAPI

        :param admin_group: The admin_group of this EnterpriseSettingsEnterpriseLdap.
        :param base: The base of this EnterpriseSettingsEnterpriseLdap.
        :param bind_dn: The bind_dn of this EnterpriseSettingsEnterpriseLdap.
        :param host: The host of this EnterpriseSettingsEnterpriseLdap.
        :param method: The method of this EnterpriseSettingsEnterpriseLdap.
        :param password: The password of this EnterpriseSettingsEnterpriseLdap.
        :param port: The port of this EnterpriseSettingsEnterpriseLdap.
        :param posix_support: The posix_support of this EnterpriseSettingsEnterpriseLdap.
        :param profile: The profile of this EnterpriseSettingsEnterpriseLdap.
        :param reconciliation: The reconciliation of this EnterpriseSettingsEnterpriseLdap.
        :param recursive_group_search: The recursive_group_search of this EnterpriseSettingsEnterpriseLdap.
        :param search_strategy: The search_strategy of this EnterpriseSettingsEnterpriseLdap.
        :param sync_enabled: The sync_enabled of this EnterpriseSettingsEnterpriseLdap.
        :param team_sync_interval: The team_sync_interval of this EnterpriseSettingsEnterpriseLdap.
        :param uid: The uid of this EnterpriseSettingsEnterpriseLdap.
        :param user_groups: The user_groups of this EnterpriseSettingsEnterpriseLdap.
        :param user_sync_emails: The user_sync_emails of this EnterpriseSettingsEnterpriseLdap.
        :param user_sync_interval: The user_sync_interval of this EnterpriseSettingsEnterpriseLdap.
        :param user_sync_keys: The user_sync_keys of this EnterpriseSettingsEnterpriseLdap.
        :param virtual_attribute_enabled: The virtual_attribute_enabled of this EnterpriseSettingsEnterpriseLdap.
        """
        self.openapi_types = {
            'admin_group': str,
            'base': List[object],
            'bind_dn': str,
            'host': str,
            'method': str,
            'password': str,
            'port': int,
            'posix_support': bool,
            'profile': EnterpriseSettingsEnterpriseLdapProfile,
            'reconciliation': EnterpriseSettingsEnterpriseLdapReconciliation,
            'recursive_group_search': bool,
            'search_strategy': str,
            'sync_enabled': bool,
            'team_sync_interval': int,
            'uid': str,
            'user_groups': List[object],
            'user_sync_emails': bool,
            'user_sync_interval': int,
            'user_sync_keys': bool,
            'virtual_attribute_enabled': bool
        }

        self.attribute_map = {
            'admin_group': 'admin_group',
            'base': 'base',
            'bind_dn': 'bind_dn',
            'host': 'host',
            'method': 'method',
            'password': 'password',
            'port': 'port',
            'posix_support': 'posix_support',
            'profile': 'profile',
            'reconciliation': 'reconciliation',
            'recursive_group_search': 'recursive_group_search',
            'search_strategy': 'search_strategy',
            'sync_enabled': 'sync_enabled',
            'team_sync_interval': 'team_sync_interval',
            'uid': 'uid',
            'user_groups': 'user_groups',
            'user_sync_emails': 'user_sync_emails',
            'user_sync_interval': 'user_sync_interval',
            'user_sync_keys': 'user_sync_keys',
            'virtual_attribute_enabled': 'virtual_attribute_enabled'
        }

        self._admin_group = admin_group
        self._base = base
        self._bind_dn = bind_dn
        self._host = host
        self._method = method
        self._password = password
        self._port = port
        self._posix_support = posix_support
        self._profile = profile
        self._reconciliation = reconciliation
        self._recursive_group_search = recursive_group_search
        self._search_strategy = search_strategy
        self._sync_enabled = sync_enabled
        self._team_sync_interval = team_sync_interval
        self._uid = uid
        self._user_groups = user_groups
        self._user_sync_emails = user_sync_emails
        self._user_sync_interval = user_sync_interval
        self._user_sync_keys = user_sync_keys
        self._virtual_attribute_enabled = virtual_attribute_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseSettingsEnterpriseLdap':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enterprise_settings_enterprise_ldap of this EnterpriseSettingsEnterpriseLdap.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_group(self):
        """Gets the admin_group of this EnterpriseSettingsEnterpriseLdap.


        :return: The admin_group of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._admin_group

    @admin_group.setter
    def admin_group(self, admin_group):
        """Sets the admin_group of this EnterpriseSettingsEnterpriseLdap.


        :param admin_group: The admin_group of this EnterpriseSettingsEnterpriseLdap.
        :type admin_group: str
        """

        self._admin_group = admin_group

    @property
    def base(self):
        """Gets the base of this EnterpriseSettingsEnterpriseLdap.


        :return: The base of this EnterpriseSettingsEnterpriseLdap.
        :rtype: List[object]
        """
        return self._base

    @base.setter
    def base(self, base):
        """Sets the base of this EnterpriseSettingsEnterpriseLdap.


        :param base: The base of this EnterpriseSettingsEnterpriseLdap.
        :type base: List[object]
        """

        self._base = base

    @property
    def bind_dn(self):
        """Gets the bind_dn of this EnterpriseSettingsEnterpriseLdap.


        :return: The bind_dn of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._bind_dn

    @bind_dn.setter
    def bind_dn(self, bind_dn):
        """Sets the bind_dn of this EnterpriseSettingsEnterpriseLdap.


        :param bind_dn: The bind_dn of this EnterpriseSettingsEnterpriseLdap.
        :type bind_dn: str
        """

        self._bind_dn = bind_dn

    @property
    def host(self):
        """Gets the host of this EnterpriseSettingsEnterpriseLdap.


        :return: The host of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this EnterpriseSettingsEnterpriseLdap.


        :param host: The host of this EnterpriseSettingsEnterpriseLdap.
        :type host: str
        """

        self._host = host

    @property
    def method(self):
        """Gets the method of this EnterpriseSettingsEnterpriseLdap.


        :return: The method of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this EnterpriseSettingsEnterpriseLdap.


        :param method: The method of this EnterpriseSettingsEnterpriseLdap.
        :type method: str
        """

        self._method = method

    @property
    def password(self):
        """Gets the password of this EnterpriseSettingsEnterpriseLdap.


        :return: The password of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this EnterpriseSettingsEnterpriseLdap.


        :param password: The password of this EnterpriseSettingsEnterpriseLdap.
        :type password: str
        """

        self._password = password

    @property
    def port(self):
        """Gets the port of this EnterpriseSettingsEnterpriseLdap.


        :return: The port of this EnterpriseSettingsEnterpriseLdap.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this EnterpriseSettingsEnterpriseLdap.


        :param port: The port of this EnterpriseSettingsEnterpriseLdap.
        :type port: int
        """

        self._port = port

    @property
    def posix_support(self):
        """Gets the posix_support of this EnterpriseSettingsEnterpriseLdap.


        :return: The posix_support of this EnterpriseSettingsEnterpriseLdap.
        :rtype: bool
        """
        return self._posix_support

    @posix_support.setter
    def posix_support(self, posix_support):
        """Sets the posix_support of this EnterpriseSettingsEnterpriseLdap.


        :param posix_support: The posix_support of this EnterpriseSettingsEnterpriseLdap.
        :type posix_support: bool
        """

        self._posix_support = posix_support

    @property
    def profile(self):
        """Gets the profile of this EnterpriseSettingsEnterpriseLdap.


        :return: The profile of this EnterpriseSettingsEnterpriseLdap.
        :rtype: EnterpriseSettingsEnterpriseLdapProfile
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this EnterpriseSettingsEnterpriseLdap.


        :param profile: The profile of this EnterpriseSettingsEnterpriseLdap.
        :type profile: EnterpriseSettingsEnterpriseLdapProfile
        """

        self._profile = profile

    @property
    def reconciliation(self):
        """Gets the reconciliation of this EnterpriseSettingsEnterpriseLdap.


        :return: The reconciliation of this EnterpriseSettingsEnterpriseLdap.
        :rtype: EnterpriseSettingsEnterpriseLdapReconciliation
        """
        return self._reconciliation

    @reconciliation.setter
    def reconciliation(self, reconciliation):
        """Sets the reconciliation of this EnterpriseSettingsEnterpriseLdap.


        :param reconciliation: The reconciliation of this EnterpriseSettingsEnterpriseLdap.
        :type reconciliation: EnterpriseSettingsEnterpriseLdapReconciliation
        """

        self._reconciliation = reconciliation

    @property
    def recursive_group_search(self):
        """Gets the recursive_group_search of this EnterpriseSettingsEnterpriseLdap.


        :return: The recursive_group_search of this EnterpriseSettingsEnterpriseLdap.
        :rtype: bool
        """
        return self._recursive_group_search

    @recursive_group_search.setter
    def recursive_group_search(self, recursive_group_search):
        """Sets the recursive_group_search of this EnterpriseSettingsEnterpriseLdap.


        :param recursive_group_search: The recursive_group_search of this EnterpriseSettingsEnterpriseLdap.
        :type recursive_group_search: bool
        """

        self._recursive_group_search = recursive_group_search

    @property
    def search_strategy(self):
        """Gets the search_strategy of this EnterpriseSettingsEnterpriseLdap.


        :return: The search_strategy of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._search_strategy

    @search_strategy.setter
    def search_strategy(self, search_strategy):
        """Sets the search_strategy of this EnterpriseSettingsEnterpriseLdap.


        :param search_strategy: The search_strategy of this EnterpriseSettingsEnterpriseLdap.
        :type search_strategy: str
        """

        self._search_strategy = search_strategy

    @property
    def sync_enabled(self):
        """Gets the sync_enabled of this EnterpriseSettingsEnterpriseLdap.


        :return: The sync_enabled of this EnterpriseSettingsEnterpriseLdap.
        :rtype: bool
        """
        return self._sync_enabled

    @sync_enabled.setter
    def sync_enabled(self, sync_enabled):
        """Sets the sync_enabled of this EnterpriseSettingsEnterpriseLdap.


        :param sync_enabled: The sync_enabled of this EnterpriseSettingsEnterpriseLdap.
        :type sync_enabled: bool
        """

        self._sync_enabled = sync_enabled

    @property
    def team_sync_interval(self):
        """Gets the team_sync_interval of this EnterpriseSettingsEnterpriseLdap.


        :return: The team_sync_interval of this EnterpriseSettingsEnterpriseLdap.
        :rtype: int
        """
        return self._team_sync_interval

    @team_sync_interval.setter
    def team_sync_interval(self, team_sync_interval):
        """Sets the team_sync_interval of this EnterpriseSettingsEnterpriseLdap.


        :param team_sync_interval: The team_sync_interval of this EnterpriseSettingsEnterpriseLdap.
        :type team_sync_interval: int
        """

        self._team_sync_interval = team_sync_interval

    @property
    def uid(self):
        """Gets the uid of this EnterpriseSettingsEnterpriseLdap.


        :return: The uid of this EnterpriseSettingsEnterpriseLdap.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this EnterpriseSettingsEnterpriseLdap.


        :param uid: The uid of this EnterpriseSettingsEnterpriseLdap.
        :type uid: str
        """

        self._uid = uid

    @property
    def user_groups(self):
        """Gets the user_groups of this EnterpriseSettingsEnterpriseLdap.


        :return: The user_groups of this EnterpriseSettingsEnterpriseLdap.
        :rtype: List[object]
        """
        return self._user_groups

    @user_groups.setter
    def user_groups(self, user_groups):
        """Sets the user_groups of this EnterpriseSettingsEnterpriseLdap.


        :param user_groups: The user_groups of this EnterpriseSettingsEnterpriseLdap.
        :type user_groups: List[object]
        """

        self._user_groups = user_groups

    @property
    def user_sync_emails(self):
        """Gets the user_sync_emails of this EnterpriseSettingsEnterpriseLdap.


        :return: The user_sync_emails of this EnterpriseSettingsEnterpriseLdap.
        :rtype: bool
        """
        return self._user_sync_emails

    @user_sync_emails.setter
    def user_sync_emails(self, user_sync_emails):
        """Sets the user_sync_emails of this EnterpriseSettingsEnterpriseLdap.


        :param user_sync_emails: The user_sync_emails of this EnterpriseSettingsEnterpriseLdap.
        :type user_sync_emails: bool
        """

        self._user_sync_emails = user_sync_emails

    @property
    def user_sync_interval(self):
        """Gets the user_sync_interval of this EnterpriseSettingsEnterpriseLdap.


        :return: The user_sync_interval of this EnterpriseSettingsEnterpriseLdap.
        :rtype: int
        """
        return self._user_sync_interval

    @user_sync_interval.setter
    def user_sync_interval(self, user_sync_interval):
        """Sets the user_sync_interval of this EnterpriseSettingsEnterpriseLdap.


        :param user_sync_interval: The user_sync_interval of this EnterpriseSettingsEnterpriseLdap.
        :type user_sync_interval: int
        """

        self._user_sync_interval = user_sync_interval

    @property
    def user_sync_keys(self):
        """Gets the user_sync_keys of this EnterpriseSettingsEnterpriseLdap.


        :return: The user_sync_keys of this EnterpriseSettingsEnterpriseLdap.
        :rtype: bool
        """
        return self._user_sync_keys

    @user_sync_keys.setter
    def user_sync_keys(self, user_sync_keys):
        """Sets the user_sync_keys of this EnterpriseSettingsEnterpriseLdap.


        :param user_sync_keys: The user_sync_keys of this EnterpriseSettingsEnterpriseLdap.
        :type user_sync_keys: bool
        """

        self._user_sync_keys = user_sync_keys

    @property
    def virtual_attribute_enabled(self):
        """Gets the virtual_attribute_enabled of this EnterpriseSettingsEnterpriseLdap.


        :return: The virtual_attribute_enabled of this EnterpriseSettingsEnterpriseLdap.
        :rtype: bool
        """
        return self._virtual_attribute_enabled

    @virtual_attribute_enabled.setter
    def virtual_attribute_enabled(self, virtual_attribute_enabled):
        """Sets the virtual_attribute_enabled of this EnterpriseSettingsEnterpriseLdap.


        :param virtual_attribute_enabled: The virtual_attribute_enabled of this EnterpriseSettingsEnterpriseLdap.
        :type virtual_attribute_enabled: bool
        """

        self._virtual_attribute_enabled = virtual_attribute_enabled
