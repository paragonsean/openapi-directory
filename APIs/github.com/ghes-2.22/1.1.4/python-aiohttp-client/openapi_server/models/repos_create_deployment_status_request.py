# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReposCreateDeploymentStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_inactive: bool=None, description: str='', environment: str=None, environment_url: str='', log_url: str='', state: str=None, target_url: str=''):
        """ReposCreateDeploymentStatusRequest - a model defined in OpenAPI

        :param auto_inactive: The auto_inactive of this ReposCreateDeploymentStatusRequest.
        :param description: The description of this ReposCreateDeploymentStatusRequest.
        :param environment: The environment of this ReposCreateDeploymentStatusRequest.
        :param environment_url: The environment_url of this ReposCreateDeploymentStatusRequest.
        :param log_url: The log_url of this ReposCreateDeploymentStatusRequest.
        :param state: The state of this ReposCreateDeploymentStatusRequest.
        :param target_url: The target_url of this ReposCreateDeploymentStatusRequest.
        """
        self.openapi_types = {
            'auto_inactive': bool,
            'description': str,
            'environment': str,
            'environment_url': str,
            'log_url': str,
            'state': str,
            'target_url': str
        }

        self.attribute_map = {
            'auto_inactive': 'auto_inactive',
            'description': 'description',
            'environment': 'environment',
            'environment_url': 'environment_url',
            'log_url': 'log_url',
            'state': 'state',
            'target_url': 'target_url'
        }

        self._auto_inactive = auto_inactive
        self._description = description
        self._environment = environment
        self._environment_url = environment_url
        self._log_url = log_url
        self._state = state
        self._target_url = target_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposCreateDeploymentStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_create_deployment_status_request of this ReposCreateDeploymentStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_inactive(self):
        """Gets the auto_inactive of this ReposCreateDeploymentStatusRequest.

        Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type.

        :return: The auto_inactive of this ReposCreateDeploymentStatusRequest.
        :rtype: bool
        """
        return self._auto_inactive

    @auto_inactive.setter
    def auto_inactive(self, auto_inactive):
        """Sets the auto_inactive of this ReposCreateDeploymentStatusRequest.

        Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type.

        :param auto_inactive: The auto_inactive of this ReposCreateDeploymentStatusRequest.
        :type auto_inactive: bool
        """

        self._auto_inactive = auto_inactive

    @property
    def description(self):
        """Gets the description of this ReposCreateDeploymentStatusRequest.

        A short description of the status. The maximum description length is 140 characters.

        :return: The description of this ReposCreateDeploymentStatusRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReposCreateDeploymentStatusRequest.

        A short description of the status. The maximum description length is 140 characters.

        :param description: The description of this ReposCreateDeploymentStatusRequest.
        :type description: str
        """

        self._description = description

    @property
    def environment(self):
        """Gets the environment of this ReposCreateDeploymentStatusRequest.

        Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`.

        :return: The environment of this ReposCreateDeploymentStatusRequest.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this ReposCreateDeploymentStatusRequest.

        Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`.

        :param environment: The environment of this ReposCreateDeploymentStatusRequest.
        :type environment: str
        """
        allowed_values = ["production", "staging", "qa"]  # noqa: E501
        if environment not in allowed_values:
            raise ValueError(
                "Invalid value for `environment` ({0}), must be one of {1}"
                .format(environment, allowed_values)
            )

        self._environment = environment

    @property
    def environment_url(self):
        """Gets the environment_url of this ReposCreateDeploymentStatusRequest.

        Sets the URL for accessing your environment. Default: `\"\"`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type.

        :return: The environment_url of this ReposCreateDeploymentStatusRequest.
        :rtype: str
        """
        return self._environment_url

    @environment_url.setter
    def environment_url(self, environment_url):
        """Sets the environment_url of this ReposCreateDeploymentStatusRequest.

        Sets the URL for accessing your environment. Default: `\"\"`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type.

        :param environment_url: The environment_url of this ReposCreateDeploymentStatusRequest.
        :type environment_url: str
        """

        self._environment_url = environment_url

    @property
    def log_url(self):
        """Gets the log_url of this ReposCreateDeploymentStatusRequest.

        The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type.

        :return: The log_url of this ReposCreateDeploymentStatusRequest.
        :rtype: str
        """
        return self._log_url

    @log_url.setter
    def log_url(self, log_url):
        """Sets the log_url of this ReposCreateDeploymentStatusRequest.

        The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type.

        :param log_url: The log_url of this ReposCreateDeploymentStatusRequest.
        :type log_url: str
        """

        self._log_url = log_url

    @property
    def state(self):
        """Gets the state of this ReposCreateDeploymentStatusRequest.

        The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.

        :return: The state of this ReposCreateDeploymentStatusRequest.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ReposCreateDeploymentStatusRequest.

        The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.22/rest/overview/api-previews#enhanced-deployments) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.

        :param state: The state of this ReposCreateDeploymentStatusRequest.
        :type state: str
        """
        allowed_values = ["error", "failure", "inactive", "in_progress", "queued", "pending", "success"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def target_url(self):
        """Gets the target_url of this ReposCreateDeploymentStatusRequest.

        The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.

        :return: The target_url of this ReposCreateDeploymentStatusRequest.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this ReposCreateDeploymentStatusRequest.

        The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.

        :param target_url: The target_url of this ReposCreateDeploymentStatusRequest.
        :type target_url: str
        """

        self._target_url = target_url
