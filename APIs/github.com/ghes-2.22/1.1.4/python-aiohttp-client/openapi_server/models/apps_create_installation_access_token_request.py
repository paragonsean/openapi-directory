# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_permissions import AppPermissions
from openapi_server import util


class AppsCreateInstallationAccessTokenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permissions: AppPermissions=None, repositories: List[str]=None, repository_ids: List[int]=None):
        """AppsCreateInstallationAccessTokenRequest - a model defined in OpenAPI

        :param permissions: The permissions of this AppsCreateInstallationAccessTokenRequest.
        :param repositories: The repositories of this AppsCreateInstallationAccessTokenRequest.
        :param repository_ids: The repository_ids of this AppsCreateInstallationAccessTokenRequest.
        """
        self.openapi_types = {
            'permissions': AppPermissions,
            'repositories': List[str],
            'repository_ids': List[int]
        }

        self.attribute_map = {
            'permissions': 'permissions',
            'repositories': 'repositories',
            'repository_ids': 'repository_ids'
        }

        self._permissions = permissions
        self._repositories = repositories
        self._repository_ids = repository_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppsCreateInstallationAccessTokenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The apps_create_installation_access_token_request of this AppsCreateInstallationAccessTokenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permissions(self):
        """Gets the permissions of this AppsCreateInstallationAccessTokenRequest.


        :return: The permissions of this AppsCreateInstallationAccessTokenRequest.
        :rtype: AppPermissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this AppsCreateInstallationAccessTokenRequest.


        :param permissions: The permissions of this AppsCreateInstallationAccessTokenRequest.
        :type permissions: AppPermissions
        """

        self._permissions = permissions

    @property
    def repositories(self):
        """Gets the repositories of this AppsCreateInstallationAccessTokenRequest.

        List of repository names that the token should have access to

        :return: The repositories of this AppsCreateInstallationAccessTokenRequest.
        :rtype: List[str]
        """
        return self._repositories

    @repositories.setter
    def repositories(self, repositories):
        """Sets the repositories of this AppsCreateInstallationAccessTokenRequest.

        List of repository names that the token should have access to

        :param repositories: The repositories of this AppsCreateInstallationAccessTokenRequest.
        :type repositories: List[str]
        """

        self._repositories = repositories

    @property
    def repository_ids(self):
        """Gets the repository_ids of this AppsCreateInstallationAccessTokenRequest.

        List of repository IDs that the token should have access to

        :return: The repository_ids of this AppsCreateInstallationAccessTokenRequest.
        :rtype: List[int]
        """
        return self._repository_ids

    @repository_ids.setter
    def repository_ids(self, repository_ids):
        """Sets the repository_ids of this AppsCreateInstallationAccessTokenRequest.

        List of repository IDs that the token should have access to

        :param repository_ids: The repository_ids of this AppsCreateInstallationAccessTokenRequest.
        :type repository_ids: List[int]
        """

        self._repository_ids = repository_ids
