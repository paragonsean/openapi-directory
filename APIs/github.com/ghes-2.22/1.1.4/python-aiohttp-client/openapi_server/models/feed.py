# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feed_links import FeedLinks
from openapi_server import util


class Feed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: FeedLinks=None, current_user_actor_url: str=None, current_user_organization_url: str=None, current_user_organization_urls: List[str]=None, current_user_public_url: str=None, current_user_url: str=None, timeline_url: str=None, user_url: str=None):
        """Feed - a model defined in OpenAPI

        :param links: The links of this Feed.
        :param current_user_actor_url: The current_user_actor_url of this Feed.
        :param current_user_organization_url: The current_user_organization_url of this Feed.
        :param current_user_organization_urls: The current_user_organization_urls of this Feed.
        :param current_user_public_url: The current_user_public_url of this Feed.
        :param current_user_url: The current_user_url of this Feed.
        :param timeline_url: The timeline_url of this Feed.
        :param user_url: The user_url of this Feed.
        """
        self.openapi_types = {
            'links': FeedLinks,
            'current_user_actor_url': str,
            'current_user_organization_url': str,
            'current_user_organization_urls': List[str],
            'current_user_public_url': str,
            'current_user_url': str,
            'timeline_url': str,
            'user_url': str
        }

        self.attribute_map = {
            'links': '_links',
            'current_user_actor_url': 'current_user_actor_url',
            'current_user_organization_url': 'current_user_organization_url',
            'current_user_organization_urls': 'current_user_organization_urls',
            'current_user_public_url': 'current_user_public_url',
            'current_user_url': 'current_user_url',
            'timeline_url': 'timeline_url',
            'user_url': 'user_url'
        }

        self._links = links
        self._current_user_actor_url = current_user_actor_url
        self._current_user_organization_url = current_user_organization_url
        self._current_user_organization_urls = current_user_organization_urls
        self._current_user_public_url = current_user_public_url
        self._current_user_url = current_user_url
        self._timeline_url = timeline_url
        self._user_url = user_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Feed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The feed of this Feed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this Feed.


        :return: The links of this Feed.
        :rtype: FeedLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Feed.


        :param links: The links of this Feed.
        :type links: FeedLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")

        self._links = links

    @property
    def current_user_actor_url(self):
        """Gets the current_user_actor_url of this Feed.


        :return: The current_user_actor_url of this Feed.
        :rtype: str
        """
        return self._current_user_actor_url

    @current_user_actor_url.setter
    def current_user_actor_url(self, current_user_actor_url):
        """Sets the current_user_actor_url of this Feed.


        :param current_user_actor_url: The current_user_actor_url of this Feed.
        :type current_user_actor_url: str
        """

        self._current_user_actor_url = current_user_actor_url

    @property
    def current_user_organization_url(self):
        """Gets the current_user_organization_url of this Feed.


        :return: The current_user_organization_url of this Feed.
        :rtype: str
        """
        return self._current_user_organization_url

    @current_user_organization_url.setter
    def current_user_organization_url(self, current_user_organization_url):
        """Sets the current_user_organization_url of this Feed.


        :param current_user_organization_url: The current_user_organization_url of this Feed.
        :type current_user_organization_url: str
        """

        self._current_user_organization_url = current_user_organization_url

    @property
    def current_user_organization_urls(self):
        """Gets the current_user_organization_urls of this Feed.


        :return: The current_user_organization_urls of this Feed.
        :rtype: List[str]
        """
        return self._current_user_organization_urls

    @current_user_organization_urls.setter
    def current_user_organization_urls(self, current_user_organization_urls):
        """Sets the current_user_organization_urls of this Feed.


        :param current_user_organization_urls: The current_user_organization_urls of this Feed.
        :type current_user_organization_urls: List[str]
        """

        self._current_user_organization_urls = current_user_organization_urls

    @property
    def current_user_public_url(self):
        """Gets the current_user_public_url of this Feed.


        :return: The current_user_public_url of this Feed.
        :rtype: str
        """
        return self._current_user_public_url

    @current_user_public_url.setter
    def current_user_public_url(self, current_user_public_url):
        """Sets the current_user_public_url of this Feed.


        :param current_user_public_url: The current_user_public_url of this Feed.
        :type current_user_public_url: str
        """

        self._current_user_public_url = current_user_public_url

    @property
    def current_user_url(self):
        """Gets the current_user_url of this Feed.


        :return: The current_user_url of this Feed.
        :rtype: str
        """
        return self._current_user_url

    @current_user_url.setter
    def current_user_url(self, current_user_url):
        """Sets the current_user_url of this Feed.


        :param current_user_url: The current_user_url of this Feed.
        :type current_user_url: str
        """

        self._current_user_url = current_user_url

    @property
    def timeline_url(self):
        """Gets the timeline_url of this Feed.


        :return: The timeline_url of this Feed.
        :rtype: str
        """
        return self._timeline_url

    @timeline_url.setter
    def timeline_url(self, timeline_url):
        """Sets the timeline_url of this Feed.


        :param timeline_url: The timeline_url of this Feed.
        :type timeline_url: str
        """
        if timeline_url is None:
            raise ValueError("Invalid value for `timeline_url`, must not be `None`")

        self._timeline_url = timeline_url

    @property
    def user_url(self):
        """Gets the user_url of this Feed.


        :return: The user_url of this Feed.
        :rtype: str
        """
        return self._user_url

    @user_url.setter
    def user_url(self, user_url):
        """Sets the user_url of this Feed.


        :param user_url: The user_url of this Feed.
        :type user_url: str
        """
        if user_url is None:
            raise ValueError("Invalid value for `user_url`, must not be `None`")

        self._user_url = user_url
