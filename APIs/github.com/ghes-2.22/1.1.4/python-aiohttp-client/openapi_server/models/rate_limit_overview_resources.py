# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rate_limit import RateLimit
from openapi_server import util


class RateLimitOverviewResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions_runner_registration: RateLimit=None, code_scanning_upload: RateLimit=None, core: RateLimit=None, graphql: RateLimit=None, integration_manifest: RateLimit=None, search: RateLimit=None, source_import: RateLimit=None):
        """RateLimitOverviewResources - a model defined in OpenAPI

        :param actions_runner_registration: The actions_runner_registration of this RateLimitOverviewResources.
        :param code_scanning_upload: The code_scanning_upload of this RateLimitOverviewResources.
        :param core: The core of this RateLimitOverviewResources.
        :param graphql: The graphql of this RateLimitOverviewResources.
        :param integration_manifest: The integration_manifest of this RateLimitOverviewResources.
        :param search: The search of this RateLimitOverviewResources.
        :param source_import: The source_import of this RateLimitOverviewResources.
        """
        self.openapi_types = {
            'actions_runner_registration': RateLimit,
            'code_scanning_upload': RateLimit,
            'core': RateLimit,
            'graphql': RateLimit,
            'integration_manifest': RateLimit,
            'search': RateLimit,
            'source_import': RateLimit
        }

        self.attribute_map = {
            'actions_runner_registration': 'actions_runner_registration',
            'code_scanning_upload': 'code_scanning_upload',
            'core': 'core',
            'graphql': 'graphql',
            'integration_manifest': 'integration_manifest',
            'search': 'search',
            'source_import': 'source_import'
        }

        self._actions_runner_registration = actions_runner_registration
        self._code_scanning_upload = code_scanning_upload
        self._core = core
        self._graphql = graphql
        self._integration_manifest = integration_manifest
        self._search = search
        self._source_import = source_import

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RateLimitOverviewResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rate_limit_overview_resources of this RateLimitOverviewResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions_runner_registration(self):
        """Gets the actions_runner_registration of this RateLimitOverviewResources.


        :return: The actions_runner_registration of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._actions_runner_registration

    @actions_runner_registration.setter
    def actions_runner_registration(self, actions_runner_registration):
        """Sets the actions_runner_registration of this RateLimitOverviewResources.


        :param actions_runner_registration: The actions_runner_registration of this RateLimitOverviewResources.
        :type actions_runner_registration: RateLimit
        """

        self._actions_runner_registration = actions_runner_registration

    @property
    def code_scanning_upload(self):
        """Gets the code_scanning_upload of this RateLimitOverviewResources.


        :return: The code_scanning_upload of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._code_scanning_upload

    @code_scanning_upload.setter
    def code_scanning_upload(self, code_scanning_upload):
        """Sets the code_scanning_upload of this RateLimitOverviewResources.


        :param code_scanning_upload: The code_scanning_upload of this RateLimitOverviewResources.
        :type code_scanning_upload: RateLimit
        """

        self._code_scanning_upload = code_scanning_upload

    @property
    def core(self):
        """Gets the core of this RateLimitOverviewResources.


        :return: The core of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._core

    @core.setter
    def core(self, core):
        """Sets the core of this RateLimitOverviewResources.


        :param core: The core of this RateLimitOverviewResources.
        :type core: RateLimit
        """
        if core is None:
            raise ValueError("Invalid value for `core`, must not be `None`")

        self._core = core

    @property
    def graphql(self):
        """Gets the graphql of this RateLimitOverviewResources.


        :return: The graphql of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._graphql

    @graphql.setter
    def graphql(self, graphql):
        """Sets the graphql of this RateLimitOverviewResources.


        :param graphql: The graphql of this RateLimitOverviewResources.
        :type graphql: RateLimit
        """

        self._graphql = graphql

    @property
    def integration_manifest(self):
        """Gets the integration_manifest of this RateLimitOverviewResources.


        :return: The integration_manifest of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._integration_manifest

    @integration_manifest.setter
    def integration_manifest(self, integration_manifest):
        """Sets the integration_manifest of this RateLimitOverviewResources.


        :param integration_manifest: The integration_manifest of this RateLimitOverviewResources.
        :type integration_manifest: RateLimit
        """

        self._integration_manifest = integration_manifest

    @property
    def search(self):
        """Gets the search of this RateLimitOverviewResources.


        :return: The search of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._search

    @search.setter
    def search(self, search):
        """Sets the search of this RateLimitOverviewResources.


        :param search: The search of this RateLimitOverviewResources.
        :type search: RateLimit
        """
        if search is None:
            raise ValueError("Invalid value for `search`, must not be `None`")

        self._search = search

    @property
    def source_import(self):
        """Gets the source_import of this RateLimitOverviewResources.


        :return: The source_import of this RateLimitOverviewResources.
        :rtype: RateLimit
        """
        return self._source_import

    @source_import.setter
    def source_import(self, source_import):
        """Sets the source_import of this RateLimitOverviewResources.


        :param source_import: The source_import of this RateLimitOverviewResources.
        :type source_import: RateLimit
        """

        self._source_import = source_import
