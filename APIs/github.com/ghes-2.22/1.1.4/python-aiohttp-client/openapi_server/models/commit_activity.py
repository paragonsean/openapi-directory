# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommitActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days: List[int]=None, total: int=None, week: int=None):
        """CommitActivity - a model defined in OpenAPI

        :param days: The days of this CommitActivity.
        :param total: The total of this CommitActivity.
        :param week: The week of this CommitActivity.
        """
        self.openapi_types = {
            'days': List[int],
            'total': int,
            'week': int
        }

        self.attribute_map = {
            'days': 'days',
            'total': 'total',
            'week': 'week'
        }

        self._days = days
        self._total = total
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The commit-activity of this CommitActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days(self):
        """Gets the days of this CommitActivity.


        :return: The days of this CommitActivity.
        :rtype: List[int]
        """
        return self._days

    @days.setter
    def days(self, days):
        """Sets the days of this CommitActivity.


        :param days: The days of this CommitActivity.
        :type days: List[int]
        """
        if days is None:
            raise ValueError("Invalid value for `days`, must not be `None`")

        self._days = days

    @property
    def total(self):
        """Gets the total of this CommitActivity.


        :return: The total of this CommitActivity.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this CommitActivity.


        :param total: The total of this CommitActivity.
        :type total: int
        """
        if total is None:
            raise ValueError("Invalid value for `total`, must not be `None`")

        self._total = total

    @property
    def week(self):
        """Gets the week of this CommitActivity.


        :return: The week of this CommitActivity.
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this CommitActivity.


        :param week: The week of this CommitActivity.
        :type week: int
        """
        if week is None:
            raise ValueError("Invalid value for `week`, must not be `None`")

        self._week = week
