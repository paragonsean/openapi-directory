# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CodeScanningAnalysisTool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, name: str=None, version: str=None):
        """CodeScanningAnalysisTool - a model defined in OpenAPI

        :param guid: The guid of this CodeScanningAnalysisTool.
        :param name: The name of this CodeScanningAnalysisTool.
        :param version: The version of this CodeScanningAnalysisTool.
        """
        self.openapi_types = {
            'guid': str,
            'name': str,
            'version': str
        }

        self.attribute_map = {
            'guid': 'guid',
            'name': 'name',
            'version': 'version'
        }

        self._guid = guid
        self._name = name
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodeScanningAnalysisTool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The code-scanning-analysis-tool of this CodeScanningAnalysisTool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self):
        """Gets the guid of this CodeScanningAnalysisTool.

        The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.

        :return: The guid of this CodeScanningAnalysisTool.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this CodeScanningAnalysisTool.

        The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.

        :param guid: The guid of this CodeScanningAnalysisTool.
        :type guid: str
        """

        self._guid = guid

    @property
    def name(self):
        """Gets the name of this CodeScanningAnalysisTool.

        The name of the tool used to generate the code scanning analysis.

        :return: The name of this CodeScanningAnalysisTool.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CodeScanningAnalysisTool.

        The name of the tool used to generate the code scanning analysis.

        :param name: The name of this CodeScanningAnalysisTool.
        :type name: str
        """

        self._name = name

    @property
    def version(self):
        """Gets the version of this CodeScanningAnalysisTool.

        The version of the tool used to generate the code scanning analysis.

        :return: The version of this CodeScanningAnalysisTool.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CodeScanningAnalysisTool.

        The version of the tool used to generate the code scanning analysis.

        :param version: The version of this CodeScanningAnalysisTool.
        :type version: str
        """

        self._version = version
