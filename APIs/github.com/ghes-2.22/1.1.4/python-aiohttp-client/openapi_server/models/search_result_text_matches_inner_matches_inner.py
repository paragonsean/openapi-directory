# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchResultTextMatchesInnerMatchesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, indices: List[int]=None, text: str=None):
        """SearchResultTextMatchesInnerMatchesInner - a model defined in OpenAPI

        :param indices: The indices of this SearchResultTextMatchesInnerMatchesInner.
        :param text: The text of this SearchResultTextMatchesInnerMatchesInner.
        """
        self.openapi_types = {
            'indices': List[int],
            'text': str
        }

        self.attribute_map = {
            'indices': 'indices',
            'text': 'text'
        }

        self._indices = indices
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResultTextMatchesInnerMatchesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The search_result_text_matches_inner_matches_inner of this SearchResultTextMatchesInnerMatchesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def indices(self):
        """Gets the indices of this SearchResultTextMatchesInnerMatchesInner.


        :return: The indices of this SearchResultTextMatchesInnerMatchesInner.
        :rtype: List[int]
        """
        return self._indices

    @indices.setter
    def indices(self, indices):
        """Sets the indices of this SearchResultTextMatchesInnerMatchesInner.


        :param indices: The indices of this SearchResultTextMatchesInnerMatchesInner.
        :type indices: List[int]
        """

        self._indices = indices

    @property
    def text(self):
        """Gets the text of this SearchResultTextMatchesInnerMatchesInner.


        :return: The text of this SearchResultTextMatchesInnerMatchesInner.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this SearchResultTextMatchesInnerMatchesInner.


        :param text: The text of this SearchResultTextMatchesInnerMatchesInner.
        :type text: str
        """

        self._text = text
