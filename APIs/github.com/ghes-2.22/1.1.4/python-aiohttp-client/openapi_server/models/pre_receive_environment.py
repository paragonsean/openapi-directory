# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pre_receive_environment_download import PreReceiveEnvironmentDownload
from openapi_server import util


class PreReceiveEnvironment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, default_environment: bool=None, download: PreReceiveEnvironmentDownload=None, hooks_count: int=None, html_url: str=None, id: int=None, image_url: str=None, name: str=None, url: str=None):
        """PreReceiveEnvironment - a model defined in OpenAPI

        :param created_at: The created_at of this PreReceiveEnvironment.
        :param default_environment: The default_environment of this PreReceiveEnvironment.
        :param download: The download of this PreReceiveEnvironment.
        :param hooks_count: The hooks_count of this PreReceiveEnvironment.
        :param html_url: The html_url of this PreReceiveEnvironment.
        :param id: The id of this PreReceiveEnvironment.
        :param image_url: The image_url of this PreReceiveEnvironment.
        :param name: The name of this PreReceiveEnvironment.
        :param url: The url of this PreReceiveEnvironment.
        """
        self.openapi_types = {
            'created_at': str,
            'default_environment': bool,
            'download': PreReceiveEnvironmentDownload,
            'hooks_count': int,
            'html_url': str,
            'id': int,
            'image_url': str,
            'name': str,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'default_environment': 'default_environment',
            'download': 'download',
            'hooks_count': 'hooks_count',
            'html_url': 'html_url',
            'id': 'id',
            'image_url': 'image_url',
            'name': 'name',
            'url': 'url'
        }

        self._created_at = created_at
        self._default_environment = default_environment
        self._download = download
        self._hooks_count = hooks_count
        self._html_url = html_url
        self._id = id
        self._image_url = image_url
        self._name = name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreReceiveEnvironment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pre-receive-environment of this PreReceiveEnvironment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PreReceiveEnvironment.


        :return: The created_at of this PreReceiveEnvironment.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PreReceiveEnvironment.


        :param created_at: The created_at of this PreReceiveEnvironment.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def default_environment(self):
        """Gets the default_environment of this PreReceiveEnvironment.


        :return: The default_environment of this PreReceiveEnvironment.
        :rtype: bool
        """
        return self._default_environment

    @default_environment.setter
    def default_environment(self, default_environment):
        """Sets the default_environment of this PreReceiveEnvironment.


        :param default_environment: The default_environment of this PreReceiveEnvironment.
        :type default_environment: bool
        """

        self._default_environment = default_environment

    @property
    def download(self):
        """Gets the download of this PreReceiveEnvironment.


        :return: The download of this PreReceiveEnvironment.
        :rtype: PreReceiveEnvironmentDownload
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this PreReceiveEnvironment.


        :param download: The download of this PreReceiveEnvironment.
        :type download: PreReceiveEnvironmentDownload
        """

        self._download = download

    @property
    def hooks_count(self):
        """Gets the hooks_count of this PreReceiveEnvironment.


        :return: The hooks_count of this PreReceiveEnvironment.
        :rtype: int
        """
        return self._hooks_count

    @hooks_count.setter
    def hooks_count(self, hooks_count):
        """Sets the hooks_count of this PreReceiveEnvironment.


        :param hooks_count: The hooks_count of this PreReceiveEnvironment.
        :type hooks_count: int
        """

        self._hooks_count = hooks_count

    @property
    def html_url(self):
        """Gets the html_url of this PreReceiveEnvironment.


        :return: The html_url of this PreReceiveEnvironment.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this PreReceiveEnvironment.


        :param html_url: The html_url of this PreReceiveEnvironment.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def id(self):
        """Gets the id of this PreReceiveEnvironment.


        :return: The id of this PreReceiveEnvironment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PreReceiveEnvironment.


        :param id: The id of this PreReceiveEnvironment.
        :type id: int
        """

        self._id = id

    @property
    def image_url(self):
        """Gets the image_url of this PreReceiveEnvironment.


        :return: The image_url of this PreReceiveEnvironment.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this PreReceiveEnvironment.


        :param image_url: The image_url of this PreReceiveEnvironment.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def name(self):
        """Gets the name of this PreReceiveEnvironment.


        :return: The name of this PreReceiveEnvironment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PreReceiveEnvironment.


        :param name: The name of this PreReceiveEnvironment.
        :type name: str
        """

        self._name = name

    @property
    def url(self):
        """Gets the url of this PreReceiveEnvironment.


        :return: The url of this PreReceiveEnvironment.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PreReceiveEnvironment.


        :param url: The url of this PreReceiveEnvironment.
        :type url: str
        """

        self._url = url
