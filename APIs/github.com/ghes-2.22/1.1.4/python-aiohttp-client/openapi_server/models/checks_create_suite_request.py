# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChecksCreateSuiteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, head_sha: str=None):
        """ChecksCreateSuiteRequest - a model defined in OpenAPI

        :param head_sha: The head_sha of this ChecksCreateSuiteRequest.
        """
        self.openapi_types = {
            'head_sha': str
        }

        self.attribute_map = {
            'head_sha': 'head_sha'
        }

        self._head_sha = head_sha

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChecksCreateSuiteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The checks_create_suite_request of this ChecksCreateSuiteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def head_sha(self):
        """Gets the head_sha of this ChecksCreateSuiteRequest.

        The sha of the head commit.

        :return: The head_sha of this ChecksCreateSuiteRequest.
        :rtype: str
        """
        return self._head_sha

    @head_sha.setter
    def head_sha(self, head_sha):
        """Sets the head_sha of this ChecksCreateSuiteRequest.

        The sha of the head commit.

        :param head_sha: The head_sha of this ChecksCreateSuiteRequest.
        :type head_sha: str
        """
        if head_sha is None:
            raise ValueError("Invalid value for `head_sha`, must not be `None`")

        self._head_sha = head_sha
