# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RunnerNoLabels(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, busy: bool=None, id: float=None, name: str=None, os: str=None, status: str=None):
        """RunnerNoLabels - a model defined in OpenAPI

        :param busy: The busy of this RunnerNoLabels.
        :param id: The id of this RunnerNoLabels.
        :param name: The name of this RunnerNoLabels.
        :param os: The os of this RunnerNoLabels.
        :param status: The status of this RunnerNoLabels.
        """
        self.openapi_types = {
            'busy': bool,
            'id': float,
            'name': str,
            'os': str,
            'status': str
        }

        self.attribute_map = {
            'busy': 'busy',
            'id': 'id',
            'name': 'name',
            'os': 'os',
            'status': 'status'
        }

        self._busy = busy
        self._id = id
        self._name = name
        self._os = os
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RunnerNoLabels':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The runner-no-labels of this RunnerNoLabels.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def busy(self):
        """Gets the busy of this RunnerNoLabels.


        :return: The busy of this RunnerNoLabels.
        :rtype: bool
        """
        return self._busy

    @busy.setter
    def busy(self, busy):
        """Sets the busy of this RunnerNoLabels.


        :param busy: The busy of this RunnerNoLabels.
        :type busy: bool
        """

        self._busy = busy

    @property
    def id(self):
        """Gets the id of this RunnerNoLabels.


        :return: The id of this RunnerNoLabels.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RunnerNoLabels.


        :param id: The id of this RunnerNoLabels.
        :type id: float
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this RunnerNoLabels.


        :return: The name of this RunnerNoLabels.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RunnerNoLabels.


        :param name: The name of this RunnerNoLabels.
        :type name: str
        """

        self._name = name

    @property
    def os(self):
        """Gets the os of this RunnerNoLabels.


        :return: The os of this RunnerNoLabels.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this RunnerNoLabels.


        :param os: The os of this RunnerNoLabels.
        :type os: str
        """

        self._os = os

    @property
    def status(self):
        """Gets the status of this RunnerNoLabels.


        :return: The status of this RunnerNoLabels.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RunnerNoLabels.


        :param status: The status of this RunnerNoLabels.
        :type status: str
        """

        self._status = status
