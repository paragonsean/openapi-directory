/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PagesHttpsCertificate from './PagesHttpsCertificate';
import PagesSourceHash from './PagesSourceHash';

/**
 * The Page model module.
 * @module model/Page
 * @version 1.1.4
 */
class Page {
    /**
     * Constructs a new <code>Page</code>.
     * The configuration for GitHub Pages for a repository.
     * @alias module:model/Page
     * @param cname {String} The Pages site's custom domain
     * @param custom404 {Boolean} Whether the Page has a custom 404 page.
     * @param _public {Boolean} Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
     * @param status {module:model/Page.StatusEnum} The status of the most recent build of the Page.
     * @param url {String} The API address for accessing this Page resource.
     */
    constructor(cname, custom404, _public, status, url) { 
        
        Page.initialize(this, cname, custom404, _public, status, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cname, custom404, _public, status, url) { 
        obj['cname'] = cname;
        obj['custom_404'] = custom404 || false;
        obj['public'] = _public;
        obj['status'] = status;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Page</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Page} obj Optional instance to populate.
     * @return {module:model/Page} The populated <code>Page</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Page();

            if (data.hasOwnProperty('cname')) {
                obj['cname'] = ApiClient.convertToType(data['cname'], 'String');
            }
            if (data.hasOwnProperty('custom_404')) {
                obj['custom_404'] = ApiClient.convertToType(data['custom_404'], 'Boolean');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('https_certificate')) {
                obj['https_certificate'] = PagesHttpsCertificate.constructFromObject(data['https_certificate']);
            }
            if (data.hasOwnProperty('https_enforced')) {
                obj['https_enforced'] = ApiClient.convertToType(data['https_enforced'], 'Boolean');
            }
            if (data.hasOwnProperty('pending_domain_unverified_at')) {
                obj['pending_domain_unverified_at'] = ApiClient.convertToType(data['pending_domain_unverified_at'], 'Date');
            }
            if (data.hasOwnProperty('protected_domain_state')) {
                obj['protected_domain_state'] = ApiClient.convertToType(data['protected_domain_state'], 'String');
            }
            if (data.hasOwnProperty('public')) {
                obj['public'] = ApiClient.convertToType(data['public'], 'Boolean');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = PagesSourceHash.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Page</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Page</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Page.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cname'] && !(typeof data['cname'] === 'string' || data['cname'] instanceof String)) {
            throw new Error("Expected the field `cname` to be a primitive type in the JSON string but got " + data['cname']);
        }
        // ensure the json data is a string
        if (data['html_url'] && !(typeof data['html_url'] === 'string' || data['html_url'] instanceof String)) {
            throw new Error("Expected the field `html_url` to be a primitive type in the JSON string but got " + data['html_url']);
        }
        // validate the optional field `https_certificate`
        if (data['https_certificate']) { // data not null
          PagesHttpsCertificate.validateJSON(data['https_certificate']);
        }
        // ensure the json data is a string
        if (data['protected_domain_state'] && !(typeof data['protected_domain_state'] === 'string' || data['protected_domain_state'] instanceof String)) {
            throw new Error("Expected the field `protected_domain_state` to be a primitive type in the JSON string but got " + data['protected_domain_state']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          PagesSourceHash.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

Page.RequiredProperties = ["cname", "custom_404", "public", "status", "url"];

/**
 * The Pages site's custom domain
 * @member {String} cname
 */
Page.prototype['cname'] = undefined;

/**
 * Whether the Page has a custom 404 page.
 * @member {Boolean} custom_404
 * @default false
 */
Page.prototype['custom_404'] = false;

/**
 * The web address the Page can be accessed from.
 * @member {String} html_url
 */
Page.prototype['html_url'] = undefined;

/**
 * @member {module:model/PagesHttpsCertificate} https_certificate
 */
Page.prototype['https_certificate'] = undefined;

/**
 * Whether https is enabled on the domain
 * @member {Boolean} https_enforced
 */
Page.prototype['https_enforced'] = undefined;

/**
 * The timestamp when a pending domain becomes unverified.
 * @member {Date} pending_domain_unverified_at
 */
Page.prototype['pending_domain_unverified_at'] = undefined;

/**
 * The state if the domain is protected
 * @member {module:model/Page.ProtectedDomainStateEnum} protected_domain_state
 */
Page.prototype['protected_domain_state'] = undefined;

/**
 * Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
 * @member {Boolean} public
 */
Page.prototype['public'] = undefined;

/**
 * @member {module:model/PagesSourceHash} source
 */
Page.prototype['source'] = undefined;

/**
 * The status of the most recent build of the Page.
 * @member {module:model/Page.StatusEnum} status
 */
Page.prototype['status'] = undefined;

/**
 * The API address for accessing this Page resource.
 * @member {String} url
 */
Page.prototype['url'] = undefined;





/**
 * Allowed values for the <code>protected_domain_state</code> property.
 * @enum {String}
 * @readonly
 */
Page['ProtectedDomainStateEnum'] = {

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "verified"
     * @const
     */
    "verified": "verified",

    /**
     * value: "unverified"
     * @const
     */
    "unverified": "unverified"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Page['StatusEnum'] = {

    /**
     * value: "built"
     * @const
     */
    "built": "built",

    /**
     * value: "building"
     * @const
     */
    "building": "building",

    /**
     * value: "errored"
     * @const
     */
    "errored": "errored"
};



export default Page;

