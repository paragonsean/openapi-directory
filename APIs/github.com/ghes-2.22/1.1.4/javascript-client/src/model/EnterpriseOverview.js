/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseCommentOverview from './EnterpriseCommentOverview';
import EnterpriseGistOverview from './EnterpriseGistOverview';
import EnterpriseHookOverview from './EnterpriseHookOverview';
import EnterpriseIssueOverview from './EnterpriseIssueOverview';
import EnterpriseMilestoneOverview from './EnterpriseMilestoneOverview';
import EnterpriseOrganizationOverview from './EnterpriseOrganizationOverview';
import EnterprisePageOverview from './EnterprisePageOverview';
import EnterprisePullRequestOverview from './EnterprisePullRequestOverview';
import EnterpriseRepositoryOverview from './EnterpriseRepositoryOverview';
import EnterpriseUserOverview from './EnterpriseUserOverview';

/**
 * The EnterpriseOverview model module.
 * @module model/EnterpriseOverview
 * @version 1.1.4
 */
class EnterpriseOverview {
    /**
     * Constructs a new <code>EnterpriseOverview</code>.
     * @alias module:model/EnterpriseOverview
     */
    constructor() { 
        
        EnterpriseOverview.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseOverview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseOverview} obj Optional instance to populate.
     * @return {module:model/EnterpriseOverview} The populated <code>EnterpriseOverview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseOverview();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = EnterpriseCommentOverview.constructFromObject(data['comments']);
            }
            if (data.hasOwnProperty('gists')) {
                obj['gists'] = EnterpriseGistOverview.constructFromObject(data['gists']);
            }
            if (data.hasOwnProperty('hooks')) {
                obj['hooks'] = EnterpriseHookOverview.constructFromObject(data['hooks']);
            }
            if (data.hasOwnProperty('issues')) {
                obj['issues'] = EnterpriseIssueOverview.constructFromObject(data['issues']);
            }
            if (data.hasOwnProperty('milestones')) {
                obj['milestones'] = EnterpriseMilestoneOverview.constructFromObject(data['milestones']);
            }
            if (data.hasOwnProperty('orgs')) {
                obj['orgs'] = EnterpriseOrganizationOverview.constructFromObject(data['orgs']);
            }
            if (data.hasOwnProperty('pages')) {
                obj['pages'] = EnterprisePageOverview.constructFromObject(data['pages']);
            }
            if (data.hasOwnProperty('pulls')) {
                obj['pulls'] = EnterprisePullRequestOverview.constructFromObject(data['pulls']);
            }
            if (data.hasOwnProperty('repos')) {
                obj['repos'] = EnterpriseRepositoryOverview.constructFromObject(data['repos']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = EnterpriseUserOverview.constructFromObject(data['users']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseOverview</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseOverview</code>.
     */
    static validateJSON(data) {
        // validate the optional field `comments`
        if (data['comments']) { // data not null
          EnterpriseCommentOverview.validateJSON(data['comments']);
        }
        // validate the optional field `gists`
        if (data['gists']) { // data not null
          EnterpriseGistOverview.validateJSON(data['gists']);
        }
        // validate the optional field `hooks`
        if (data['hooks']) { // data not null
          EnterpriseHookOverview.validateJSON(data['hooks']);
        }
        // validate the optional field `issues`
        if (data['issues']) { // data not null
          EnterpriseIssueOverview.validateJSON(data['issues']);
        }
        // validate the optional field `milestones`
        if (data['milestones']) { // data not null
          EnterpriseMilestoneOverview.validateJSON(data['milestones']);
        }
        // validate the optional field `orgs`
        if (data['orgs']) { // data not null
          EnterpriseOrganizationOverview.validateJSON(data['orgs']);
        }
        // validate the optional field `pages`
        if (data['pages']) { // data not null
          EnterprisePageOverview.validateJSON(data['pages']);
        }
        // validate the optional field `pulls`
        if (data['pulls']) { // data not null
          EnterprisePullRequestOverview.validateJSON(data['pulls']);
        }
        // validate the optional field `repos`
        if (data['repos']) { // data not null
          EnterpriseRepositoryOverview.validateJSON(data['repos']);
        }
        // validate the optional field `users`
        if (data['users']) { // data not null
          EnterpriseUserOverview.validateJSON(data['users']);
        }

        return true;
    }


}



/**
 * @member {module:model/EnterpriseCommentOverview} comments
 */
EnterpriseOverview.prototype['comments'] = undefined;

/**
 * @member {module:model/EnterpriseGistOverview} gists
 */
EnterpriseOverview.prototype['gists'] = undefined;

/**
 * @member {module:model/EnterpriseHookOverview} hooks
 */
EnterpriseOverview.prototype['hooks'] = undefined;

/**
 * @member {module:model/EnterpriseIssueOverview} issues
 */
EnterpriseOverview.prototype['issues'] = undefined;

/**
 * @member {module:model/EnterpriseMilestoneOverview} milestones
 */
EnterpriseOverview.prototype['milestones'] = undefined;

/**
 * @member {module:model/EnterpriseOrganizationOverview} orgs
 */
EnterpriseOverview.prototype['orgs'] = undefined;

/**
 * @member {module:model/EnterprisePageOverview} pages
 */
EnterpriseOverview.prototype['pages'] = undefined;

/**
 * @member {module:model/EnterprisePullRequestOverview} pulls
 */
EnterpriseOverview.prototype['pulls'] = undefined;

/**
 * @member {module:model/EnterpriseRepositoryOverview} repos
 */
EnterpriseOverview.prototype['repos'] = undefined;

/**
 * @member {module:model/EnterpriseUserOverview} users
 */
EnterpriseOverview.prototype['users'] = undefined;






export default EnterpriseOverview;

