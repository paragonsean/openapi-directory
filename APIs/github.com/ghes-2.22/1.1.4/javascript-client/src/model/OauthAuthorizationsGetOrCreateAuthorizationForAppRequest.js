/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OauthAuthorizationsGetOrCreateAuthorizationForAppRequest model module.
 * @module model/OauthAuthorizationsGetOrCreateAuthorizationForAppRequest
 * @version 1.1.4
 */
class OauthAuthorizationsGetOrCreateAuthorizationForAppRequest {
    /**
     * Constructs a new <code>OauthAuthorizationsGetOrCreateAuthorizationForAppRequest</code>.
     * @alias module:model/OauthAuthorizationsGetOrCreateAuthorizationForAppRequest
     * @param clientSecret {String} The OAuth app client secret for which to create the token.
     */
    constructor(clientSecret) { 
        
        OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.initialize(this, clientSecret);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientSecret) { 
        obj['client_secret'] = clientSecret;
    }

    /**
     * Constructs a <code>OauthAuthorizationsGetOrCreateAuthorizationForAppRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OauthAuthorizationsGetOrCreateAuthorizationForAppRequest} obj Optional instance to populate.
     * @return {module:model/OauthAuthorizationsGetOrCreateAuthorizationForAppRequest} The populated <code>OauthAuthorizationsGetOrCreateAuthorizationForAppRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OauthAuthorizationsGetOrCreateAuthorizationForAppRequest();

            if (data.hasOwnProperty('client_secret')) {
                obj['client_secret'] = ApiClient.convertToType(data['client_secret'], 'String');
            }
            if (data.hasOwnProperty('fingerprint')) {
                obj['fingerprint'] = ApiClient.convertToType(data['fingerprint'], 'String');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('note_url')) {
                obj['note_url'] = ApiClient.convertToType(data['note_url'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OauthAuthorizationsGetOrCreateAuthorizationForAppRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OauthAuthorizationsGetOrCreateAuthorizationForAppRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_secret'] && !(typeof data['client_secret'] === 'string' || data['client_secret'] instanceof String)) {
            throw new Error("Expected the field `client_secret` to be a primitive type in the JSON string but got " + data['client_secret']);
        }
        // ensure the json data is a string
        if (data['fingerprint'] && !(typeof data['fingerprint'] === 'string' || data['fingerprint'] instanceof String)) {
            throw new Error("Expected the field `fingerprint` to be a primitive type in the JSON string but got " + data['fingerprint']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        // ensure the json data is a string
        if (data['note_url'] && !(typeof data['note_url'] === 'string' || data['note_url'] instanceof String)) {
            throw new Error("Expected the field `note_url` to be a primitive type in the JSON string but got " + data['note_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scopes'])) {
            throw new Error("Expected the field `scopes` to be an array in the JSON data but got " + data['scopes']);
        }

        return true;
    }


}

OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.RequiredProperties = ["client_secret"];

/**
 * The OAuth app client secret for which to create the token.
 * @member {String} client_secret
 */
OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.prototype['client_secret'] = undefined;

/**
 * A unique string to distinguish an authorization from others created for the same client ID and user.
 * @member {String} fingerprint
 */
OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.prototype['fingerprint'] = undefined;

/**
 * A note to remind you what the OAuth token is for.
 * @member {String} note
 */
OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.prototype['note'] = undefined;

/**
 * A URL to remind you what app the OAuth token is for.
 * @member {String} note_url
 */
OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.prototype['note_url'] = undefined;

/**
 * A list of scopes that this authorization is in.
 * @member {Array.<String>} scopes
 */
OauthAuthorizationsGetOrCreateAuthorizationForAppRequest.prototype['scopes'] = undefined;






export default OauthAuthorizationsGetOrCreateAuthorizationForAppRequest;

