/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionsCreateOrUpdateOrgSecretRequest model module.
 * @module model/ActionsCreateOrUpdateOrgSecretRequest
 * @version 1.1.4
 */
class ActionsCreateOrUpdateOrgSecretRequest {
    /**
     * Constructs a new <code>ActionsCreateOrUpdateOrgSecretRequest</code>.
     * @alias module:model/ActionsCreateOrUpdateOrgSecretRequest
     * @param visibility {module:model/ActionsCreateOrUpdateOrgSecretRequest.VisibilityEnum} Configures the access that repositories have to the organization secret. Can be one of:   \\- `all` - All repositories in an organization can access the secret.   \\- `private` - Private repositories in an organization can access the secret.   \\- `selected` - Only specific repositories can access the secret.
     */
    constructor(visibility) { 
        
        ActionsCreateOrUpdateOrgSecretRequest.initialize(this, visibility);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, visibility) { 
        obj['visibility'] = visibility;
    }

    /**
     * Constructs a <code>ActionsCreateOrUpdateOrgSecretRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsCreateOrUpdateOrgSecretRequest} obj Optional instance to populate.
     * @return {module:model/ActionsCreateOrUpdateOrgSecretRequest} The populated <code>ActionsCreateOrUpdateOrgSecretRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsCreateOrUpdateOrgSecretRequest();

            if (data.hasOwnProperty('encrypted_value')) {
                obj['encrypted_value'] = ApiClient.convertToType(data['encrypted_value'], 'String');
            }
            if (data.hasOwnProperty('key_id')) {
                obj['key_id'] = ApiClient.convertToType(data['key_id'], 'String');
            }
            if (data.hasOwnProperty('selected_repository_ids')) {
                obj['selected_repository_ids'] = ApiClient.convertToType(data['selected_repository_ids'], ['String']);
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsCreateOrUpdateOrgSecretRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsCreateOrUpdateOrgSecretRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionsCreateOrUpdateOrgSecretRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['encrypted_value'] && !(typeof data['encrypted_value'] === 'string' || data['encrypted_value'] instanceof String)) {
            throw new Error("Expected the field `encrypted_value` to be a primitive type in the JSON string but got " + data['encrypted_value']);
        }
        // ensure the json data is a string
        if (data['key_id'] && !(typeof data['key_id'] === 'string' || data['key_id'] instanceof String)) {
            throw new Error("Expected the field `key_id` to be a primitive type in the JSON string but got " + data['key_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['selected_repository_ids'])) {
            throw new Error("Expected the field `selected_repository_ids` to be an array in the JSON data but got " + data['selected_repository_ids']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }

        return true;
    }


}

ActionsCreateOrUpdateOrgSecretRequest.RequiredProperties = ["visibility"];

/**
 * Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-an-organization-public-key) endpoint.
 * @member {String} encrypted_value
 */
ActionsCreateOrUpdateOrgSecretRequest.prototype['encrypted_value'] = undefined;

/**
 * ID of the key you used to encrypt the secret.
 * @member {String} key_id
 */
ActionsCreateOrUpdateOrgSecretRequest.prototype['key_id'] = undefined;

/**
 * An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.
 * @member {Array.<String>} selected_repository_ids
 */
ActionsCreateOrUpdateOrgSecretRequest.prototype['selected_repository_ids'] = undefined;

/**
 * Configures the access that repositories have to the organization secret. Can be one of:   \\- `all` - All repositories in an organization can access the secret.   \\- `private` - Private repositories in an organization can access the secret.   \\- `selected` - Only specific repositories can access the secret.
 * @member {module:model/ActionsCreateOrUpdateOrgSecretRequest.VisibilityEnum} visibility
 */
ActionsCreateOrUpdateOrgSecretRequest.prototype['visibility'] = undefined;





/**
 * Allowed values for the <code>visibility</code> property.
 * @enum {String}
 * @readonly
 */
ActionsCreateOrUpdateOrgSecretRequest['VisibilityEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "private"
     * @const
     */
    "private": "private",

    /**
     * value: "selected"
     * @const
     */
    "selected": "selected"
};



export default ActionsCreateOrUpdateOrgSecretRequest;

