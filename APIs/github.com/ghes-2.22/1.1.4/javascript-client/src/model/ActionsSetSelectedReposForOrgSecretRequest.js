/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionsSetSelectedReposForOrgSecretRequest model module.
 * @module model/ActionsSetSelectedReposForOrgSecretRequest
 * @version 1.1.4
 */
class ActionsSetSelectedReposForOrgSecretRequest {
    /**
     * Constructs a new <code>ActionsSetSelectedReposForOrgSecretRequest</code>.
     * @alias module:model/ActionsSetSelectedReposForOrgSecretRequest
     * @param selectedRepositoryIds {Array.<Number>} An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.
     */
    constructor(selectedRepositoryIds) { 
        
        ActionsSetSelectedReposForOrgSecretRequest.initialize(this, selectedRepositoryIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, selectedRepositoryIds) { 
        obj['selected_repository_ids'] = selectedRepositoryIds;
    }

    /**
     * Constructs a <code>ActionsSetSelectedReposForOrgSecretRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsSetSelectedReposForOrgSecretRequest} obj Optional instance to populate.
     * @return {module:model/ActionsSetSelectedReposForOrgSecretRequest} The populated <code>ActionsSetSelectedReposForOrgSecretRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsSetSelectedReposForOrgSecretRequest();

            if (data.hasOwnProperty('selected_repository_ids')) {
                obj['selected_repository_ids'] = ApiClient.convertToType(data['selected_repository_ids'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsSetSelectedReposForOrgSecretRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsSetSelectedReposForOrgSecretRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionsSetSelectedReposForOrgSecretRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['selected_repository_ids'])) {
            throw new Error("Expected the field `selected_repository_ids` to be an array in the JSON data but got " + data['selected_repository_ids']);
        }

        return true;
    }


}

ActionsSetSelectedReposForOrgSecretRequest.RequiredProperties = ["selected_repository_ids"];

/**
 * An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.
 * @member {Array.<Number>} selected_repository_ids
 */
ActionsSetSelectedReposForOrgSecretRequest.prototype['selected_repository_ids'] = undefined;






export default ActionsSetSelectedReposForOrgSecretRequest;

