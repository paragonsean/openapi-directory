/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookConfigInsecureSsl from './WebhookConfigInsecureSsl';

/**
 * The OrgsCreateWebhookRequestConfig model module.
 * @module model/OrgsCreateWebhookRequestConfig
 * @version 1.1.4
 */
class OrgsCreateWebhookRequestConfig {
    /**
     * Constructs a new <code>OrgsCreateWebhookRequestConfig</code>.
     * Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-hook-config-params).
     * @alias module:model/OrgsCreateWebhookRequestConfig
     * @param url {String} The URL to which the payloads will be delivered.
     */
    constructor(url) { 
        
        OrgsCreateWebhookRequestConfig.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['url'] = url;
    }

    /**
     * Constructs a <code>OrgsCreateWebhookRequestConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgsCreateWebhookRequestConfig} obj Optional instance to populate.
     * @return {module:model/OrgsCreateWebhookRequestConfig} The populated <code>OrgsCreateWebhookRequestConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgsCreateWebhookRequestConfig();

            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('insecure_ssl')) {
                obj['insecure_ssl'] = WebhookConfigInsecureSsl.constructFromObject(data['insecure_ssl']);
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrgsCreateWebhookRequestConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrgsCreateWebhookRequestConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrgsCreateWebhookRequestConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['content_type'] && !(typeof data['content_type'] === 'string' || data['content_type'] instanceof String)) {
            throw new Error("Expected the field `content_type` to be a primitive type in the JSON string but got " + data['content_type']);
        }
        // validate the optional field `insecure_ssl`
        if (data['insecure_ssl']) { // data not null
          WebhookConfigInsecureSsl.validateJSON(data['insecure_ssl']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

OrgsCreateWebhookRequestConfig.RequiredProperties = ["url"];

/**
 * The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
 * @member {String} content_type
 */
OrgsCreateWebhookRequestConfig.prototype['content_type'] = undefined;

/**
 * @member {module:model/WebhookConfigInsecureSsl} insecure_ssl
 */
OrgsCreateWebhookRequestConfig.prototype['insecure_ssl'] = undefined;

/**
 * @member {String} password
 */
OrgsCreateWebhookRequestConfig.prototype['password'] = undefined;

/**
 * If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#delivery-headers).
 * @member {String} secret
 */
OrgsCreateWebhookRequestConfig.prototype['secret'] = undefined;

/**
 * The URL to which the payloads will be delivered.
 * @member {String} url
 */
OrgsCreateWebhookRequestConfig.prototype['url'] = undefined;

/**
 * @member {String} username
 */
OrgsCreateWebhookRequestConfig.prototype['username'] = undefined;






export default OrgsCreateWebhookRequestConfig;

