# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckSuitePreferencePreferencesAutoTriggerChecksInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: int=None, setting: bool=None):
        """CheckSuitePreferencePreferencesAutoTriggerChecksInner - a model defined in OpenAPI

        :param app_id: The app_id of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        :param setting: The setting of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        """
        self.openapi_types = {
            'app_id': int,
            'setting': bool
        }

        self.attribute_map = {
            'app_id': 'app_id',
            'setting': 'setting'
        }

        self._app_id = app_id
        self._setting = setting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckSuitePreferencePreferencesAutoTriggerChecksInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The check_suite_preference_preferences_auto_trigger_checks_inner of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.


        :return: The app_id of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        :rtype: int
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.


        :param app_id: The app_id of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        :type app_id: int
        """
        if app_id is None:
            raise ValueError("Invalid value for `app_id`, must not be `None`")

        self._app_id = app_id

    @property
    def setting(self):
        """Gets the setting of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.


        :return: The setting of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        :rtype: bool
        """
        return self._setting

    @setting.setter
    def setting(self, setting):
        """Sets the setting of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.


        :param setting: The setting of this CheckSuitePreferencePreferencesAutoTriggerChecksInner.
        :type setting: bool
        """
        if setting is None:
            raise ValueError("Invalid value for `setting`, must not be `None`")

        self._setting = setting
