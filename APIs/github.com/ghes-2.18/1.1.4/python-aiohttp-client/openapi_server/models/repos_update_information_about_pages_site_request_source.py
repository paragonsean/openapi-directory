# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repos_update_information_about_pages_site_request_source_any_of import ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf
from openapi_server import util


class ReposUpdateInformationAboutPagesSiteRequestSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NUMBER_&#39;ghMINUS_pages&#39; = 'gh-pages'
    NUMBER_&#39;master&#39; = 'master'
    NUMBER_&#39;master /docs&#39; = 'master /docs'

    def __init__(self, branch: str=None, path: str=None):
        """ReposUpdateInformationAboutPagesSiteRequestSource - a model defined in OpenAPI

        :param branch: The branch of this ReposUpdateInformationAboutPagesSiteRequestSource.
        :param path: The path of this ReposUpdateInformationAboutPagesSiteRequestSource.
        """
        self.openapi_types = {
            'branch': str,
            'path': str
        }

        self.attribute_map = {
            'branch': 'branch',
            'path': 'path'
        }

        self._branch = branch
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReposUpdateInformationAboutPagesSiteRequestSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repos_update_information_about_pages_site_request_source of this ReposUpdateInformationAboutPagesSiteRequestSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branch(self):
        """Gets the branch of this ReposUpdateInformationAboutPagesSiteRequestSource.

        The repository branch used to publish your site's source files.

        :return: The branch of this ReposUpdateInformationAboutPagesSiteRequestSource.
        :rtype: str
        """
        return self._branch

    @branch.setter
    def branch(self, branch):
        """Sets the branch of this ReposUpdateInformationAboutPagesSiteRequestSource.

        The repository branch used to publish your site's source files.

        :param branch: The branch of this ReposUpdateInformationAboutPagesSiteRequestSource.
        :type branch: str
        """
        if branch is None:
            raise ValueError("Invalid value for `branch`, must not be `None`")

        self._branch = branch

    @property
    def path(self):
        """Gets the path of this ReposUpdateInformationAboutPagesSiteRequestSource.

        The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.

        :return: The path of this ReposUpdateInformationAboutPagesSiteRequestSource.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ReposUpdateInformationAboutPagesSiteRequestSource.

        The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.

        :param path: The path of this ReposUpdateInformationAboutPagesSiteRequestSource.
        :type path: str
        """
        allowed_values = ["/", "/docs"]  # noqa: E501
        if path not in allowed_values:
            raise ValueError(
                "Invalid value for `path` ({0}), must be one of {1}"
                .format(path, allowed_values)
            )

        self._path = path
