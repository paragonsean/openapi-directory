/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprise_organization_overview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprise_organization_overview::OAIEnterprise_organization_overview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprise_organization_overview::OAIEnterprise_organization_overview() {
    this->initializeModel();
}

OAIEnterprise_organization_overview::~OAIEnterprise_organization_overview() {}

void OAIEnterprise_organization_overview::initializeModel() {

    m_disabled_orgs_isSet = false;
    m_disabled_orgs_isValid = false;

    m_total_orgs_isSet = false;
    m_total_orgs_isValid = false;

    m_total_team_members_isSet = false;
    m_total_team_members_isValid = false;

    m_total_teams_isSet = false;
    m_total_teams_isValid = false;
}

void OAIEnterprise_organization_overview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprise_organization_overview::fromJsonObject(QJsonObject json) {

    m_disabled_orgs_isValid = ::OpenAPI::fromJsonValue(m_disabled_orgs, json[QString("disabled_orgs")]);
    m_disabled_orgs_isSet = !json[QString("disabled_orgs")].isNull() && m_disabled_orgs_isValid;

    m_total_orgs_isValid = ::OpenAPI::fromJsonValue(m_total_orgs, json[QString("total_orgs")]);
    m_total_orgs_isSet = !json[QString("total_orgs")].isNull() && m_total_orgs_isValid;

    m_total_team_members_isValid = ::OpenAPI::fromJsonValue(m_total_team_members, json[QString("total_team_members")]);
    m_total_team_members_isSet = !json[QString("total_team_members")].isNull() && m_total_team_members_isValid;

    m_total_teams_isValid = ::OpenAPI::fromJsonValue(m_total_teams, json[QString("total_teams")]);
    m_total_teams_isSet = !json[QString("total_teams")].isNull() && m_total_teams_isValid;
}

QString OAIEnterprise_organization_overview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprise_organization_overview::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_orgs_isSet) {
        obj.insert(QString("disabled_orgs"), ::OpenAPI::toJsonValue(m_disabled_orgs));
    }
    if (m_total_orgs_isSet) {
        obj.insert(QString("total_orgs"), ::OpenAPI::toJsonValue(m_total_orgs));
    }
    if (m_total_team_members_isSet) {
        obj.insert(QString("total_team_members"), ::OpenAPI::toJsonValue(m_total_team_members));
    }
    if (m_total_teams_isSet) {
        obj.insert(QString("total_teams"), ::OpenAPI::toJsonValue(m_total_teams));
    }
    return obj;
}

qint32 OAIEnterprise_organization_overview::getDisabledOrgs() const {
    return m_disabled_orgs;
}
void OAIEnterprise_organization_overview::setDisabledOrgs(const qint32 &disabled_orgs) {
    m_disabled_orgs = disabled_orgs;
    m_disabled_orgs_isSet = true;
}

bool OAIEnterprise_organization_overview::is_disabled_orgs_Set() const{
    return m_disabled_orgs_isSet;
}

bool OAIEnterprise_organization_overview::is_disabled_orgs_Valid() const{
    return m_disabled_orgs_isValid;
}

qint32 OAIEnterprise_organization_overview::getTotalOrgs() const {
    return m_total_orgs;
}
void OAIEnterprise_organization_overview::setTotalOrgs(const qint32 &total_orgs) {
    m_total_orgs = total_orgs;
    m_total_orgs_isSet = true;
}

bool OAIEnterprise_organization_overview::is_total_orgs_Set() const{
    return m_total_orgs_isSet;
}

bool OAIEnterprise_organization_overview::is_total_orgs_Valid() const{
    return m_total_orgs_isValid;
}

qint32 OAIEnterprise_organization_overview::getTotalTeamMembers() const {
    return m_total_team_members;
}
void OAIEnterprise_organization_overview::setTotalTeamMembers(const qint32 &total_team_members) {
    m_total_team_members = total_team_members;
    m_total_team_members_isSet = true;
}

bool OAIEnterprise_organization_overview::is_total_team_members_Set() const{
    return m_total_team_members_isSet;
}

bool OAIEnterprise_organization_overview::is_total_team_members_Valid() const{
    return m_total_team_members_isValid;
}

qint32 OAIEnterprise_organization_overview::getTotalTeams() const {
    return m_total_teams;
}
void OAIEnterprise_organization_overview::setTotalTeams(const qint32 &total_teams) {
    m_total_teams = total_teams;
    m_total_teams_isSet = true;
}

bool OAIEnterprise_organization_overview::is_total_teams_Set() const{
    return m_total_teams_isSet;
}

bool OAIEnterprise_organization_overview::is_total_teams_Valid() const{
    return m_total_teams_isValid;
}

bool OAIEnterprise_organization_overview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_orgs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_orgs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_team_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_teams_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprise_organization_overview::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_disabled_orgs_isValid && m_total_orgs_isValid && m_total_team_members_isValid && m_total_teams_isValid && true;
}

} // namespace OpenAPI
