/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnterprise_repository_overview.h
 *
 * 
 */

#ifndef OAIEnterprise_repository_overview_H
#define OAIEnterprise_repository_overview_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnterprise_repository_overview : public OAIObject {
public:
    OAIEnterprise_repository_overview();
    OAIEnterprise_repository_overview(QString json);
    ~OAIEnterprise_repository_overview() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getForkRepos() const;
    void setForkRepos(const qint32 &fork_repos);
    bool is_fork_repos_Set() const;
    bool is_fork_repos_Valid() const;

    qint32 getOrgRepos() const;
    void setOrgRepos(const qint32 &org_repos);
    bool is_org_repos_Set() const;
    bool is_org_repos_Valid() const;

    qint32 getRootRepos() const;
    void setRootRepos(const qint32 &root_repos);
    bool is_root_repos_Set() const;
    bool is_root_repos_Valid() const;

    qint32 getTotalPushes() const;
    void setTotalPushes(const qint32 &total_pushes);
    bool is_total_pushes_Set() const;
    bool is_total_pushes_Valid() const;

    qint32 getTotalRepos() const;
    void setTotalRepos(const qint32 &total_repos);
    bool is_total_repos_Set() const;
    bool is_total_repos_Valid() const;

    qint32 getTotalWikis() const;
    void setTotalWikis(const qint32 &total_wikis);
    bool is_total_wikis_Set() const;
    bool is_total_wikis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_fork_repos;
    bool m_fork_repos_isSet;
    bool m_fork_repos_isValid;

    qint32 m_org_repos;
    bool m_org_repos_isSet;
    bool m_org_repos_isValid;

    qint32 m_root_repos;
    bool m_root_repos_isSet;
    bool m_root_repos_isValid;

    qint32 m_total_pushes;
    bool m_total_pushes_isSet;
    bool m_total_pushes_isValid;

    qint32 m_total_repos;
    bool m_total_repos_isSet;
    bool m_total_repos_isValid;

    qint32 m_total_wikis;
    bool m_total_wikis_isSet;
    bool m_total_wikis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnterprise_repository_overview)

#endif // OAIEnterprise_repository_overview_H
