/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepos_create_commit_comment_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepos_create_commit_comment_request::OAIRepos_create_commit_comment_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepos_create_commit_comment_request::OAIRepos_create_commit_comment_request() {
    this->initializeModel();
}

OAIRepos_create_commit_comment_request::~OAIRepos_create_commit_comment_request() {}

void OAIRepos_create_commit_comment_request::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_line_isSet = false;
    m_line_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;
}

void OAIRepos_create_commit_comment_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepos_create_commit_comment_request::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_line_isValid = ::OpenAPI::fromJsonValue(m_line, json[QString("line")]);
    m_line_isSet = !json[QString("line")].isNull() && m_line_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;
}

QString OAIRepos_create_commit_comment_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepos_create_commit_comment_request::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_line_isSet) {
        obj.insert(QString("line"), ::OpenAPI::toJsonValue(m_line));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    return obj;
}

QString OAIRepos_create_commit_comment_request::getBody() const {
    return m_body;
}
void OAIRepos_create_commit_comment_request::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIRepos_create_commit_comment_request::is_body_Set() const{
    return m_body_isSet;
}

bool OAIRepos_create_commit_comment_request::is_body_Valid() const{
    return m_body_isValid;
}

qint32 OAIRepos_create_commit_comment_request::getLine() const {
    return m_line;
}
void OAIRepos_create_commit_comment_request::setLine(const qint32 &line) {
    m_line = line;
    m_line_isSet = true;
}

bool OAIRepos_create_commit_comment_request::is_line_Set() const{
    return m_line_isSet;
}

bool OAIRepos_create_commit_comment_request::is_line_Valid() const{
    return m_line_isValid;
}

QString OAIRepos_create_commit_comment_request::getPath() const {
    return m_path;
}
void OAIRepos_create_commit_comment_request::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIRepos_create_commit_comment_request::is_path_Set() const{
    return m_path_isSet;
}

bool OAIRepos_create_commit_comment_request::is_path_Valid() const{
    return m_path_isValid;
}

qint32 OAIRepos_create_commit_comment_request::getPosition() const {
    return m_position;
}
void OAIRepos_create_commit_comment_request::setPosition(const qint32 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIRepos_create_commit_comment_request::is_position_Set() const{
    return m_position_isSet;
}

bool OAIRepos_create_commit_comment_request::is_position_Valid() const{
    return m_position_isValid;
}

bool OAIRepos_create_commit_comment_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepos_create_commit_comment_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_body_isValid && true;
}

} // namespace OpenAPI
