/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegacy_review_comment.h
 *
 * 
 */

#ifndef OAILegacy_review_comment_H
#define OAILegacy_review_comment_H

#include <QJsonObject>

#include "OAIAuthorization_with_user_user.h"
#include "OAILegacy_review_comment__links.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILegacy_review_comment__links;
class OAIAuthorization_with_user_user;

class OAILegacy_review_comment : public OAIObject {
public:
    OAILegacy_review_comment();
    OAILegacy_review_comment(QString json);
    ~OAILegacy_review_comment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILegacy_review_comment__links getLinks() const;
    void setLinks(const OAILegacy_review_comment__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getAuthorAssociation() const;
    void setAuthorAssociation(const QString &author_association);
    bool is_author_association_Set() const;
    bool is_author_association_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDiffHunk() const;
    void setDiffHunk(const QString &diff_hunk);
    bool is_diff_hunk_Set() const;
    bool is_diff_hunk_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getInReplyToId() const;
    void setInReplyToId(const qint32 &in_reply_to_id);
    bool is_in_reply_to_id_Set() const;
    bool is_in_reply_to_id_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getOriginalCommitId() const;
    void setOriginalCommitId(const QString &original_commit_id);
    bool is_original_commit_id_Set() const;
    bool is_original_commit_id_Valid() const;

    qint32 getOriginalPosition() const;
    void setOriginalPosition(const qint32 &original_position);
    bool is_original_position_Set() const;
    bool is_original_position_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint32 getPosition() const;
    void setPosition(const qint32 &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    qint32 getPullRequestReviewId() const;
    void setPullRequestReviewId(const qint32 &pull_request_review_id);
    bool is_pull_request_review_id_Set() const;
    bool is_pull_request_review_id_Valid() const;

    QString getPullRequestUrl() const;
    void setPullRequestUrl(const QString &pull_request_url);
    bool is_pull_request_url_Set() const;
    bool is_pull_request_url_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIAuthorization_with_user_user getUser() const;
    void setUser(const OAIAuthorization_with_user_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILegacy_review_comment__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_author_association;
    bool m_author_association_isSet;
    bool m_author_association_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_diff_hunk;
    bool m_diff_hunk_isSet;
    bool m_diff_hunk_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_in_reply_to_id;
    bool m_in_reply_to_id_isSet;
    bool m_in_reply_to_id_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_original_commit_id;
    bool m_original_commit_id_isSet;
    bool m_original_commit_id_isValid;

    qint32 m_original_position;
    bool m_original_position_isSet;
    bool m_original_position_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint32 m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    qint32 m_pull_request_review_id;
    bool m_pull_request_review_id_isSet;
    bool m_pull_request_review_id_isValid;

    QString m_pull_request_url;
    bool m_pull_request_url_isSet;
    bool m_pull_request_url_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIAuthorization_with_user_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegacy_review_comment)

#endif // OAILegacy_review_comment_H
