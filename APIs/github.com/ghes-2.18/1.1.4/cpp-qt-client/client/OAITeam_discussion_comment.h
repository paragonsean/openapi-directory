/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam_discussion_comment.h
 *
 * A reply to a discussion within a team.
 */

#ifndef OAITeam_discussion_comment_H
#define OAITeam_discussion_comment_H

#include <QJsonObject>

#include "OAINullable_simple_user.h"
#include "OAIReaction_rollup.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINullable_simple_user;
class OAIReaction_rollup;

class OAITeam_discussion_comment : public OAIObject {
public:
    OAITeam_discussion_comment();
    OAITeam_discussion_comment(QString json);
    ~OAITeam_discussion_comment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINullable_simple_user getAuthor() const;
    void setAuthor(const OAINullable_simple_user &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getBodyHtml() const;
    void setBodyHtml(const QString &body_html);
    bool is_body_html_Set() const;
    bool is_body_html_Valid() const;

    QString getBodyVersion() const;
    void setBodyVersion(const QString &body_version);
    bool is_body_version_Set() const;
    bool is_body_version_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDiscussionUrl() const;
    void setDiscussionUrl(const QString &discussion_url);
    bool is_discussion_url_Set() const;
    bool is_discussion_url_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QDateTime getLastEditedAt() const;
    void setLastEditedAt(const QDateTime &last_edited_at);
    bool is_last_edited_at_Set() const;
    bool is_last_edited_at_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    OAIReaction_rollup getReactions() const;
    void setReactions(const OAIReaction_rollup &reactions);
    bool is_reactions_Set() const;
    bool is_reactions_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINullable_simple_user m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_body_html;
    bool m_body_html_isSet;
    bool m_body_html_isValid;

    QString m_body_version;
    bool m_body_version_isSet;
    bool m_body_version_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_discussion_url;
    bool m_discussion_url_isSet;
    bool m_discussion_url_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QDateTime m_last_edited_at;
    bool m_last_edited_at_isSet;
    bool m_last_edited_at_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    OAIReaction_rollup m_reactions;
    bool m_reactions_isSet;
    bool m_reactions_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam_discussion_comment)

#endif // OAITeam_discussion_comment_H
