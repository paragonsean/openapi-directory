/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BranchProtectionRequiredConversationResolution;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseAvatar;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseCas;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseCollectd;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseCustomer;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseGithubOauth;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseGithubSsl;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseLdap;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseLicense;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseMapping;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseNtp;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSaml;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSmtp;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSnmp;
import org.openapitools.client.model.EnterpriseSettingsEnterpriseSyslog;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EnterpriseSettingsEnterprise
 */
public class EnterpriseSettingsEnterpriseTest {
    private final EnterpriseSettingsEnterprise model = new EnterpriseSettingsEnterprise();

    /**
     * Model tests for EnterpriseSettingsEnterprise
     */
    @Test
    public void testEnterpriseSettingsEnterprise() {
        // TODO: test EnterpriseSettingsEnterprise
    }

    /**
     * Test the property 'adminPassword'
     */
    @Test
    public void adminPasswordTest() {
        // TODO: test adminPassword
    }

    /**
     * Test the property 'assets'
     */
    @Test
    public void assetsTest() {
        // TODO: test assets
    }

    /**
     * Test the property 'authMode'
     */
    @Test
    public void authModeTest() {
        // TODO: test authMode
    }

    /**
     * Test the property 'avatar'
     */
    @Test
    public void avatarTest() {
        // TODO: test avatar
    }

    /**
     * Test the property 'cas'
     */
    @Test
    public void casTest() {
        // TODO: test cas
    }

    /**
     * Test the property 'collectd'
     */
    @Test
    public void collectdTest() {
        // TODO: test collectd
    }

    /**
     * Test the property 'configurationId'
     */
    @Test
    public void configurationIdTest() {
        // TODO: test configurationId
    }

    /**
     * Test the property 'configurationRunCount'
     */
    @Test
    public void configurationRunCountTest() {
        // TODO: test configurationRunCount
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'expireSessions'
     */
    @Test
    public void expireSessionsTest() {
        // TODO: test expireSessions
    }

    /**
     * Test the property 'githubHostname'
     */
    @Test
    public void githubHostnameTest() {
        // TODO: test githubHostname
    }

    /**
     * Test the property 'githubOauth'
     */
    @Test
    public void githubOauthTest() {
        // TODO: test githubOauth
    }

    /**
     * Test the property 'githubSsl'
     */
    @Test
    public void githubSslTest() {
        // TODO: test githubSsl
    }

    /**
     * Test the property 'httpProxy'
     */
    @Test
    public void httpProxyTest() {
        // TODO: test httpProxy
    }

    /**
     * Test the property 'identiconsHost'
     */
    @Test
    public void identiconsHostTest() {
        // TODO: test identiconsHost
    }

    /**
     * Test the property 'ldap'
     */
    @Test
    public void ldapTest() {
        // TODO: test ldap
    }

    /**
     * Test the property 'license'
     */
    @Test
    public void licenseTest() {
        // TODO: test license
    }

    /**
     * Test the property 'loadBalancer'
     */
    @Test
    public void loadBalancerTest() {
        // TODO: test loadBalancer
    }

    /**
     * Test the property 'mapping'
     */
    @Test
    public void mappingTest() {
        // TODO: test mapping
    }

    /**
     * Test the property 'ntp'
     */
    @Test
    public void ntpTest() {
        // TODO: test ntp
    }

    /**
     * Test the property 'pages'
     */
    @Test
    public void pagesTest() {
        // TODO: test pages
    }

    /**
     * Test the property 'privateMode'
     */
    @Test
    public void privateModeTest() {
        // TODO: test privateMode
    }

    /**
     * Test the property 'publicPages'
     */
    @Test
    public void publicPagesTest() {
        // TODO: test publicPages
    }

    /**
     * Test the property 'saml'
     */
    @Test
    public void samlTest() {
        // TODO: test saml
    }

    /**
     * Test the property 'signupEnabled'
     */
    @Test
    public void signupEnabledTest() {
        // TODO: test signupEnabled
    }

    /**
     * Test the property 'smtp'
     */
    @Test
    public void smtpTest() {
        // TODO: test smtp
    }

    /**
     * Test the property 'snmp'
     */
    @Test
    public void snmpTest() {
        // TODO: test snmp
    }

    /**
     * Test the property 'subdomainIsolation'
     */
    @Test
    public void subdomainIsolationTest() {
        // TODO: test subdomainIsolation
    }

    /**
     * Test the property 'syslog'
     */
    @Test
    public void syslogTest() {
        // TODO: test syslog
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

}
