/**
 * SearchLy API v1
 * # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: ``` https://searchly.asuarez.dev/api/v1 ```  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  > **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@asuarez.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIResponseSimilarity from '../model/APIResponseSimilarity';
import SrcSearchlyApiV1ControllersSimilarityByContentRequest from '../model/SrcSearchlyApiV1ControllersSimilarityByContentRequest';

/**
* Similarity service.
* @module api/SimilarityApi
* @version 1.0
*/
export default class SimilarityApi {

    /**
    * Constructs a new SimilarityApi. 
    * @alias module:api/SimilarityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the srcSearchlyApiV1ControllersSimilarityByContent operation.
     * @callback module:api/SimilarityApi~srcSearchlyApiV1ControllersSimilarityByContentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponseSimilarity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API endpoint to search similarity using content
     * Endpoint for an end-user client to search similarity by content.  If you want to run the /similarity/by_content operation, you can do so via an HTTP POST command to the following URL:  ``` https://searchly.asuarez.dev/api/v1/similarity/by_content ``` 
     * @param {module:model/SrcSearchlyApiV1ControllersSimilarityByContentRequest} srcSearchlyApiV1ControllersSimilarityByContentRequest Body wrapper for the request.
     * @param {module:api/SimilarityApi~srcSearchlyApiV1ControllersSimilarityByContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponseSimilarity}
     */
    srcSearchlyApiV1ControllersSimilarityByContent(srcSearchlyApiV1ControllersSimilarityByContentRequest, callback) {
      let postBody = srcSearchlyApiV1ControllersSimilarityByContentRequest;
      // verify the required parameter 'srcSearchlyApiV1ControllersSimilarityByContentRequest' is set
      if (srcSearchlyApiV1ControllersSimilarityByContentRequest === undefined || srcSearchlyApiV1ControllersSimilarityByContentRequest === null) {
        throw new Error("Missing the required parameter 'srcSearchlyApiV1ControllersSimilarityByContentRequest' when calling srcSearchlyApiV1ControllersSimilarityByContent");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/text'];
      let returnType = APIResponseSimilarity;
      return this.apiClient.callApi(
        '/similarity/by_content', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the srcSearchlyApiV1ControllersSimilarityBySong operation.
     * @callback module:api/SimilarityApi~srcSearchlyApiV1ControllersSimilarityBySongCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponseSimilarity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API endpoint to search similarity using a song identifier
     * Endpoint for an end-user client to search similarity by song identifier.  If you want to run the /similarity/by_song operation, you can do so via an HTTP GET command to the following URL:  ``` https://searchly.asuarez.dev/api/v1/similarity/by_song ``` 
     * @param {Number} songId Song identifier.
     * @param {module:api/SimilarityApi~srcSearchlyApiV1ControllersSimilarityBySongCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponseSimilarity}
     */
    srcSearchlyApiV1ControllersSimilarityBySong(songId, callback) {
      let postBody = null;
      // verify the required parameter 'songId' is set
      if (songId === undefined || songId === null) {
        throw new Error("Missing the required parameter 'songId' when calling srcSearchlyApiV1ControllersSimilarityBySong");
      }

      let pathParams = {
      };
      let queryParams = {
        'song_id': songId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/text'];
      let returnType = APIResponseSimilarity;
      return this.apiClient.callApi(
        '/similarity/by_song', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
