/**
 * SearchLy API v1
 * # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: ``` https://searchly.asuarez.dev/api/v1 ```  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  > **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@asuarez.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import APIResponseSimilarity from './model/APIResponseSimilarity';
import APIResponseSimilarityResponse from './model/APIResponseSimilarityResponse';
import APIResponseSimilarityResponseSimilarityListInner from './model/APIResponseSimilarityResponseSimilarityListInner';
import APIResponseSong from './model/APIResponseSong';
import APIResponseSongResponse from './model/APIResponseSongResponse';
import APIResponseSongResponseResultsInner from './model/APIResponseSongResponseResultsInner';
import SrcSearchlyApiV1ControllersSimilarityByContentRequest from './model/SrcSearchlyApiV1ControllersSimilarityByContentRequest';
import SimilarityApi from './api/SimilarityApi';
import SongApi from './api/SongApi';


/**
* # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the &#x60;/similarity/by_song&#x60; operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional &#x60;/similarity/by_content&#x60; endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional &#x60;/song/search&#x60; operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: &#x60;&#x60;&#x60; https://searchly.asuarez.dev/api/v1 &#x60;&#x60;&#x60;  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  &gt; **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SearchLyApiV1 = require('index'); // See note below*.
* var xxxSvc = new SearchLyApiV1.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SearchLyApiV1.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SearchLyApiV1.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SearchLyApiV1.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APIResponseSimilarity model constructor.
     * @property {module:model/APIResponseSimilarity}
     */
    APIResponseSimilarity,

    /**
     * The APIResponseSimilarityResponse model constructor.
     * @property {module:model/APIResponseSimilarityResponse}
     */
    APIResponseSimilarityResponse,

    /**
     * The APIResponseSimilarityResponseSimilarityListInner model constructor.
     * @property {module:model/APIResponseSimilarityResponseSimilarityListInner}
     */
    APIResponseSimilarityResponseSimilarityListInner,

    /**
     * The APIResponseSong model constructor.
     * @property {module:model/APIResponseSong}
     */
    APIResponseSong,

    /**
     * The APIResponseSongResponse model constructor.
     * @property {module:model/APIResponseSongResponse}
     */
    APIResponseSongResponse,

    /**
     * The APIResponseSongResponseResultsInner model constructor.
     * @property {module:model/APIResponseSongResponseResultsInner}
     */
    APIResponseSongResponseResultsInner,

    /**
     * The SrcSearchlyApiV1ControllersSimilarityByContentRequest model constructor.
     * @property {module:model/SrcSearchlyApiV1ControllersSimilarityByContentRequest}
     */
    SrcSearchlyApiV1ControllersSimilarityByContentRequest,

    /**
    * The SimilarityApi service constructor.
    * @property {module:api/SimilarityApi}
    */
    SimilarityApi,

    /**
    * The SongApi service constructor.
    * @property {module:api/SongApi}
    */
    SongApi
};
