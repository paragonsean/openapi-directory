/**
 * SearchLy API v1
 * # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: ``` https://searchly.asuarez.dev/api/v1 ```  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  > **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@asuarez.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SrcSearchlyApiV1ControllersSimilarityByContentRequest model module.
 * @module model/SrcSearchlyApiV1ControllersSimilarityByContentRequest
 * @version 1.0
 */
class SrcSearchlyApiV1ControllersSimilarityByContentRequest {
    /**
     * Constructs a new <code>SrcSearchlyApiV1ControllersSimilarityByContentRequest</code>.
     * @alias module:model/SrcSearchlyApiV1ControllersSimilarityByContentRequest
     */
    constructor() { 
        
        SrcSearchlyApiV1ControllersSimilarityByContentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SrcSearchlyApiV1ControllersSimilarityByContentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SrcSearchlyApiV1ControllersSimilarityByContentRequest} obj Optional instance to populate.
     * @return {module:model/SrcSearchlyApiV1ControllersSimilarityByContentRequest} The populated <code>SrcSearchlyApiV1ControllersSimilarityByContentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SrcSearchlyApiV1ControllersSimilarityByContentRequest();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SrcSearchlyApiV1ControllersSimilarityByContentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SrcSearchlyApiV1ControllersSimilarityByContentRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }

        return true;
    }


}



/**
 * Content for searching similarity.
 * @member {String} content
 */
SrcSearchlyApiV1ControllersSimilarityByContentRequest.prototype['content'] = undefined;






export default SrcSearchlyApiV1ControllersSimilarityByContentRequest;

