# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_response_song_response import APIResponseSongResponse
from openapi_server import util


class APIResponseSong(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: bool=None, message: str=None, response: APIResponseSongResponse=None):
        """APIResponseSong - a model defined in OpenAPI

        :param error: The error of this APIResponseSong.
        :param message: The message of this APIResponseSong.
        :param response: The response of this APIResponseSong.
        """
        self.openapi_types = {
            'error': bool,
            'message': str,
            'response': APIResponseSongResponse
        }

        self.attribute_map = {
            'error': 'error',
            'message': 'message',
            'response': 'response'
        }

        self._error = error
        self._message = message
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIResponseSong':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIResponseSong of this APIResponseSong.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this APIResponseSong.

        Whether or not the request was successfully processed or not.

        :return: The error of this APIResponseSong.
        :rtype: bool
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this APIResponseSong.

        Whether or not the request was successfully processed or not.

        :param error: The error of this APIResponseSong.
        :type error: bool
        """

        self._error = error

    @property
    def message(self):
        """Gets the message of this APIResponseSong.

        Error message if the request was unsuccessful.

        :return: The message of this APIResponseSong.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this APIResponseSong.

        Error message if the request was unsuccessful.

        :param message: The message of this APIResponseSong.
        :type message: str
        """

        self._message = message

    @property
    def response(self):
        """Gets the response of this APIResponseSong.


        :return: The response of this APIResponseSong.
        :rtype: APIResponseSongResponse
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this APIResponseSong.


        :param response: The response of this APIResponseSong.
        :type response: APIResponseSongResponse
        """

        self._response = response
