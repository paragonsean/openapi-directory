/**
 * SearchLy API v1
 * # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: ``` https://searchly.asuarez.dev/api/v1 ```  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  > **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@asuarez.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPIResponseSimilarity_response.h
 *
 * Contains the response data if the request was successful.
 */

#ifndef OAIAPIResponseSimilarity_response_H
#define OAIAPIResponseSimilarity_response_H

#include <QJsonObject>

#include "OAIAPIResponseSimilarity_response_similarity_list_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAPIResponseSimilarity_response_similarity_list_inner;

class OAIAPIResponseSimilarity_response : public OAIObject {
public:
    OAIAPIResponseSimilarity_response();
    OAIAPIResponseSimilarity_response(QString json);
    ~OAIAPIResponseSimilarity_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAPIResponseSimilarity_response_similarity_list_inner> getSimilarityList() const;
    void setSimilarityList(const QList<OAIAPIResponseSimilarity_response_similarity_list_inner> &similarity_list);
    bool is_similarity_list_Set() const;
    bool is_similarity_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAPIResponseSimilarity_response_similarity_list_inner> m_similarity_list;
    bool m_similarity_list_isSet;
    bool m_similarity_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPIResponseSimilarity_response)

#endif // OAIAPIResponseSimilarity_response_H
