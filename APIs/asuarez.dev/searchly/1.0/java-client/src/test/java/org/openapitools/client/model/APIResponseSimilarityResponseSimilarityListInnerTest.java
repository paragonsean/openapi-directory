/*
 * SearchLy API v1
 * # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: ``` https://searchly.asuarez.dev/api/v1 ```  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  > **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@asuarez.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for APIResponseSimilarityResponseSimilarityListInner
 */
public class APIResponseSimilarityResponseSimilarityListInnerTest {
    private final APIResponseSimilarityResponseSimilarityListInner model = new APIResponseSimilarityResponseSimilarityListInner();

    /**
     * Model tests for APIResponseSimilarityResponseSimilarityListInner
     */
    @Test
    public void testAPIResponseSimilarityResponseSimilarityListInner() {
        // TODO: test APIResponseSimilarityResponseSimilarityListInner
    }

    /**
     * Test the property 'artistName'
     */
    @Test
    public void artistNameTest() {
        // TODO: test artistName
    }

    /**
     * Test the property 'artistUrl'
     */
    @Test
    public void artistUrlTest() {
        // TODO: test artistUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'indexId'
     */
    @Test
    public void indexIdTest() {
        // TODO: test indexId
    }

    /**
     * Test the property 'lyrics'
     */
    @Test
    public void lyricsTest() {
        // TODO: test lyrics
    }

    /**
     * Test the property 'percentage'
     */
    @Test
    public void percentageTest() {
        // TODO: test percentage
    }

    /**
     * Test the property 'songName'
     */
    @Test
    public void songNameTest() {
        // TODO: test songName
    }

    /**
     * Test the property 'songUrl'
     */
    @Test
    public void songUrlTest() {
        // TODO: test songUrl
    }

}
