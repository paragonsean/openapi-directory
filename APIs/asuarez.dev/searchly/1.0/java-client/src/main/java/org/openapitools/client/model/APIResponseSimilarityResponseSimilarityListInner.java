/*
 * SearchLy API v1
 * # Introduction The SearchLy API provides similarity searching based on song lyrics.  # Operations The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.  # Endpoint The API endpoint for the SearchLy API v1 is as follows: ``` https://searchly.asuarez.dev/api/v1 ```  # Motivation This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.  SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.  > **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@asuarez.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Song similarity item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:05.470573-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APIResponseSimilarityResponseSimilarityListInner {
  public static final String SERIALIZED_NAME_ARTIST_NAME = "artist_name";
  @SerializedName(SERIALIZED_NAME_ARTIST_NAME)
  private String artistName;

  public static final String SERIALIZED_NAME_ARTIST_URL = "artist_url";
  @SerializedName(SERIALIZED_NAME_ARTIST_URL)
  private String artistUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INDEX_ID = "index_id";
  @SerializedName(SERIALIZED_NAME_INDEX_ID)
  private Integer indexId;

  public static final String SERIALIZED_NAME_LYRICS = "lyrics";
  @SerializedName(SERIALIZED_NAME_LYRICS)
  private String lyrics;

  public static final String SERIALIZED_NAME_PERCENTAGE = "percentage";
  @SerializedName(SERIALIZED_NAME_PERCENTAGE)
  private Float percentage;

  public static final String SERIALIZED_NAME_SONG_NAME = "song_name";
  @SerializedName(SERIALIZED_NAME_SONG_NAME)
  private String songName;

  public static final String SERIALIZED_NAME_SONG_URL = "song_url";
  @SerializedName(SERIALIZED_NAME_SONG_URL)
  private String songUrl;

  public APIResponseSimilarityResponseSimilarityListInner() {
  }

  public APIResponseSimilarityResponseSimilarityListInner artistName(String artistName) {
    this.artistName = artistName;
    return this;
  }

  /**
   * Artist&#39;s song name.
   * @return artistName
   */
  @javax.annotation.Nullable
  public String getArtistName() {
    return artistName;
  }

  public void setArtistName(String artistName) {
    this.artistName = artistName;
  }


  public APIResponseSimilarityResponseSimilarityListInner artistUrl(String artistUrl) {
    this.artistUrl = artistUrl;
    return this;
  }

  /**
   * Artist URL.
   * @return artistUrl
   */
  @javax.annotation.Nullable
  public String getArtistUrl() {
    return artistUrl;
  }

  public void setArtistUrl(String artistUrl) {
    this.artistUrl = artistUrl;
  }


  public APIResponseSimilarityResponseSimilarityListInner id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Song internal identifier.
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public APIResponseSimilarityResponseSimilarityListInner indexId(Integer indexId) {
    this.indexId = indexId;
    return this;
  }

  /**
   * Index internal identifier.
   * @return indexId
   */
  @javax.annotation.Nullable
  public Integer getIndexId() {
    return indexId;
  }

  public void setIndexId(Integer indexId) {
    this.indexId = indexId;
  }


  public APIResponseSimilarityResponseSimilarityListInner lyrics(String lyrics) {
    this.lyrics = lyrics;
    return this;
  }

  /**
   * Song lyrics.
   * @return lyrics
   */
  @javax.annotation.Nullable
  public String getLyrics() {
    return lyrics;
  }

  public void setLyrics(String lyrics) {
    this.lyrics = lyrics;
  }


  public APIResponseSimilarityResponseSimilarityListInner percentage(Float percentage) {
    this.percentage = percentage;
    return this;
  }

  /**
   * Similarity percentage.
   * @return percentage
   */
  @javax.annotation.Nullable
  public Float getPercentage() {
    return percentage;
  }

  public void setPercentage(Float percentage) {
    this.percentage = percentage;
  }


  public APIResponseSimilarityResponseSimilarityListInner songName(String songName) {
    this.songName = songName;
    return this;
  }

  /**
   * Song name.
   * @return songName
   */
  @javax.annotation.Nullable
  public String getSongName() {
    return songName;
  }

  public void setSongName(String songName) {
    this.songName = songName;
  }


  public APIResponseSimilarityResponseSimilarityListInner songUrl(String songUrl) {
    this.songUrl = songUrl;
    return this;
  }

  /**
   * Song URL.
   * @return songUrl
   */
  @javax.annotation.Nullable
  public String getSongUrl() {
    return songUrl;
  }

  public void setSongUrl(String songUrl) {
    this.songUrl = songUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIResponseSimilarityResponseSimilarityListInner apIResponseSimilarityResponseSimilarityListInner = (APIResponseSimilarityResponseSimilarityListInner) o;
    return Objects.equals(this.artistName, apIResponseSimilarityResponseSimilarityListInner.artistName) &&
        Objects.equals(this.artistUrl, apIResponseSimilarityResponseSimilarityListInner.artistUrl) &&
        Objects.equals(this.id, apIResponseSimilarityResponseSimilarityListInner.id) &&
        Objects.equals(this.indexId, apIResponseSimilarityResponseSimilarityListInner.indexId) &&
        Objects.equals(this.lyrics, apIResponseSimilarityResponseSimilarityListInner.lyrics) &&
        Objects.equals(this.percentage, apIResponseSimilarityResponseSimilarityListInner.percentage) &&
        Objects.equals(this.songName, apIResponseSimilarityResponseSimilarityListInner.songName) &&
        Objects.equals(this.songUrl, apIResponseSimilarityResponseSimilarityListInner.songUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artistName, artistUrl, id, indexId, lyrics, percentage, songName, songUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIResponseSimilarityResponseSimilarityListInner {\n");
    sb.append("    artistName: ").append(toIndentedString(artistName)).append("\n");
    sb.append("    artistUrl: ").append(toIndentedString(artistUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    indexId: ").append(toIndentedString(indexId)).append("\n");
    sb.append("    lyrics: ").append(toIndentedString(lyrics)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    songName: ").append(toIndentedString(songName)).append("\n");
    sb.append("    songUrl: ").append(toIndentedString(songUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("artist_name");
    openapiFields.add("artist_url");
    openapiFields.add("id");
    openapiFields.add("index_id");
    openapiFields.add("lyrics");
    openapiFields.add("percentage");
    openapiFields.add("song_name");
    openapiFields.add("song_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APIResponseSimilarityResponseSimilarityListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APIResponseSimilarityResponseSimilarityListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIResponseSimilarityResponseSimilarityListInner is not found in the empty JSON string", APIResponseSimilarityResponseSimilarityListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APIResponseSimilarityResponseSimilarityListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIResponseSimilarityResponseSimilarityListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("artist_name") != null && !jsonObj.get("artist_name").isJsonNull()) && !jsonObj.get("artist_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `artist_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("artist_name").toString()));
      }
      if ((jsonObj.get("artist_url") != null && !jsonObj.get("artist_url").isJsonNull()) && !jsonObj.get("artist_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `artist_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("artist_url").toString()));
      }
      if ((jsonObj.get("lyrics") != null && !jsonObj.get("lyrics").isJsonNull()) && !jsonObj.get("lyrics").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lyrics` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lyrics").toString()));
      }
      if ((jsonObj.get("song_name") != null && !jsonObj.get("song_name").isJsonNull()) && !jsonObj.get("song_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `song_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("song_name").toString()));
      }
      if ((jsonObj.get("song_url") != null && !jsonObj.get("song_url").isJsonNull()) && !jsonObj.get("song_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `song_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("song_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIResponseSimilarityResponseSimilarityListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIResponseSimilarityResponseSimilarityListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIResponseSimilarityResponseSimilarityListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIResponseSimilarityResponseSimilarityListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<APIResponseSimilarityResponseSimilarityListInner>() {
           @Override
           public void write(JsonWriter out, APIResponseSimilarityResponseSimilarityListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIResponseSimilarityResponseSimilarityListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APIResponseSimilarityResponseSimilarityListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APIResponseSimilarityResponseSimilarityListInner
   * @throws IOException if the JSON string is invalid with respect to APIResponseSimilarityResponseSimilarityListInner
   */
  public static APIResponseSimilarityResponseSimilarityListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIResponseSimilarityResponseSimilarityListInner.class);
  }

  /**
   * Convert an instance of APIResponseSimilarityResponseSimilarityListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

