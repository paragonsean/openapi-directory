/*
 * FORTNITE REST API
 * REST API about Fortnite game
 *
 * The version of the OpenAPI document: 3.1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StatsIdPlateformIdGet200ResponseGroupDuo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Stats on solo, duo or squad
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:54.434292-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StatsIdPlateformIdGet200ResponseGroup {
  public static final String SERIALIZED_NAME_DUO = "duo";
  @SerializedName(SERIALIZED_NAME_DUO)
  private StatsIdPlateformIdGet200ResponseGroupDuo duo;

  public static final String SERIALIZED_NAME_SOLO = "solo";
  @SerializedName(SERIALIZED_NAME_SOLO)
  private StatsIdPlateformIdGet200ResponseGroupDuo solo;

  public static final String SERIALIZED_NAME_SQUAD = "squad";
  @SerializedName(SERIALIZED_NAME_SQUAD)
  private StatsIdPlateformIdGet200ResponseGroupDuo squad;

  public StatsIdPlateformIdGet200ResponseGroup() {
  }

  public StatsIdPlateformIdGet200ResponseGroup duo(StatsIdPlateformIdGet200ResponseGroupDuo duo) {
    this.duo = duo;
    return this;
  }

  /**
   * Get duo
   * @return duo
   */
  @javax.annotation.Nullable
  public StatsIdPlateformIdGet200ResponseGroupDuo getDuo() {
    return duo;
  }

  public void setDuo(StatsIdPlateformIdGet200ResponseGroupDuo duo) {
    this.duo = duo;
  }


  public StatsIdPlateformIdGet200ResponseGroup solo(StatsIdPlateformIdGet200ResponseGroupDuo solo) {
    this.solo = solo;
    return this;
  }

  /**
   * Get solo
   * @return solo
   */
  @javax.annotation.Nullable
  public StatsIdPlateformIdGet200ResponseGroupDuo getSolo() {
    return solo;
  }

  public void setSolo(StatsIdPlateformIdGet200ResponseGroupDuo solo) {
    this.solo = solo;
  }


  public StatsIdPlateformIdGet200ResponseGroup squad(StatsIdPlateformIdGet200ResponseGroupDuo squad) {
    this.squad = squad;
    return this;
  }

  /**
   * Get squad
   * @return squad
   */
  @javax.annotation.Nullable
  public StatsIdPlateformIdGet200ResponseGroupDuo getSquad() {
    return squad;
  }

  public void setSquad(StatsIdPlateformIdGet200ResponseGroupDuo squad) {
    this.squad = squad;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatsIdPlateformIdGet200ResponseGroup statsIdPlateformIdGet200ResponseGroup = (StatsIdPlateformIdGet200ResponseGroup) o;
    return Objects.equals(this.duo, statsIdPlateformIdGet200ResponseGroup.duo) &&
        Objects.equals(this.solo, statsIdPlateformIdGet200ResponseGroup.solo) &&
        Objects.equals(this.squad, statsIdPlateformIdGet200ResponseGroup.squad);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duo, solo, squad);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatsIdPlateformIdGet200ResponseGroup {\n");
    sb.append("    duo: ").append(toIndentedString(duo)).append("\n");
    sb.append("    solo: ").append(toIndentedString(solo)).append("\n");
    sb.append("    squad: ").append(toIndentedString(squad)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("duo");
    openapiFields.add("solo");
    openapiFields.add("squad");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StatsIdPlateformIdGet200ResponseGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StatsIdPlateformIdGet200ResponseGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StatsIdPlateformIdGet200ResponseGroup is not found in the empty JSON string", StatsIdPlateformIdGet200ResponseGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StatsIdPlateformIdGet200ResponseGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StatsIdPlateformIdGet200ResponseGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `duo`
      if (jsonObj.get("duo") != null && !jsonObj.get("duo").isJsonNull()) {
        StatsIdPlateformIdGet200ResponseGroupDuo.validateJsonElement(jsonObj.get("duo"));
      }
      // validate the optional field `solo`
      if (jsonObj.get("solo") != null && !jsonObj.get("solo").isJsonNull()) {
        StatsIdPlateformIdGet200ResponseGroupDuo.validateJsonElement(jsonObj.get("solo"));
      }
      // validate the optional field `squad`
      if (jsonObj.get("squad") != null && !jsonObj.get("squad").isJsonNull()) {
        StatsIdPlateformIdGet200ResponseGroupDuo.validateJsonElement(jsonObj.get("squad"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StatsIdPlateformIdGet200ResponseGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StatsIdPlateformIdGet200ResponseGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StatsIdPlateformIdGet200ResponseGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StatsIdPlateformIdGet200ResponseGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<StatsIdPlateformIdGet200ResponseGroup>() {
           @Override
           public void write(JsonWriter out, StatsIdPlateformIdGet200ResponseGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StatsIdPlateformIdGet200ResponseGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StatsIdPlateformIdGet200ResponseGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StatsIdPlateformIdGet200ResponseGroup
   * @throws IOException if the JSON string is invalid with respect to StatsIdPlateformIdGet200ResponseGroup
   */
  public static StatsIdPlateformIdGet200ResponseGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StatsIdPlateformIdGet200ResponseGroup.class);
  }

  /**
   * Convert an instance of StatsIdPlateformIdGet200ResponseGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

