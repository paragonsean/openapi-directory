# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stats_id_plateform_id_get200_response_group_duo import StatsIdPlateformIdGet200ResponseGroupDuo
from openapi_server import util


class StatsIdPlateformIdGet200ResponseGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duo: StatsIdPlateformIdGet200ResponseGroupDuo=None, solo: StatsIdPlateformIdGet200ResponseGroupDuo=None, squad: StatsIdPlateformIdGet200ResponseGroupDuo=None):
        """StatsIdPlateformIdGet200ResponseGroup - a model defined in OpenAPI

        :param duo: The duo of this StatsIdPlateformIdGet200ResponseGroup.
        :param solo: The solo of this StatsIdPlateformIdGet200ResponseGroup.
        :param squad: The squad of this StatsIdPlateformIdGet200ResponseGroup.
        """
        self.openapi_types = {
            'duo': StatsIdPlateformIdGet200ResponseGroupDuo,
            'solo': StatsIdPlateformIdGet200ResponseGroupDuo,
            'squad': StatsIdPlateformIdGet200ResponseGroupDuo
        }

        self.attribute_map = {
            'duo': 'duo',
            'solo': 'solo',
            'squad': 'squad'
        }

        self._duo = duo
        self._solo = solo
        self._squad = squad

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatsIdPlateformIdGet200ResponseGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _stats_id__plateform___id__get_200_response_group of this StatsIdPlateformIdGet200ResponseGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duo(self):
        """Gets the duo of this StatsIdPlateformIdGet200ResponseGroup.


        :return: The duo of this StatsIdPlateformIdGet200ResponseGroup.
        :rtype: StatsIdPlateformIdGet200ResponseGroupDuo
        """
        return self._duo

    @duo.setter
    def duo(self, duo):
        """Sets the duo of this StatsIdPlateformIdGet200ResponseGroup.


        :param duo: The duo of this StatsIdPlateformIdGet200ResponseGroup.
        :type duo: StatsIdPlateformIdGet200ResponseGroupDuo
        """

        self._duo = duo

    @property
    def solo(self):
        """Gets the solo of this StatsIdPlateformIdGet200ResponseGroup.


        :return: The solo of this StatsIdPlateformIdGet200ResponseGroup.
        :rtype: StatsIdPlateformIdGet200ResponseGroupDuo
        """
        return self._solo

    @solo.setter
    def solo(self, solo):
        """Sets the solo of this StatsIdPlateformIdGet200ResponseGroup.


        :param solo: The solo of this StatsIdPlateformIdGet200ResponseGroup.
        :type solo: StatsIdPlateformIdGet200ResponseGroupDuo
        """

        self._solo = solo

    @property
    def squad(self):
        """Gets the squad of this StatsIdPlateformIdGet200ResponseGroup.


        :return: The squad of this StatsIdPlateformIdGet200ResponseGroup.
        :rtype: StatsIdPlateformIdGet200ResponseGroupDuo
        """
        return self._squad

    @squad.setter
    def squad(self, squad):
        """Sets the squad of this StatsIdPlateformIdGet200ResponseGroup.


        :param squad: The squad of this StatsIdPlateformIdGet200ResponseGroup.
        :type squad: StatsIdPlateformIdGet200ResponseGroupDuo
        """

        self._squad = squad
