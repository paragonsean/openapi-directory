/**
 * FORTNITE REST API
 * REST API about Fortnite game
 *
 * The version of the OpenAPI document: 3.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_stats_id__plateform___id__get_200_response_info.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_stats_id__plateform___id__get_200_response_info::OAI_stats_id__plateform___id__get_200_response_info(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_stats_id__plateform___id__get_200_response_info::OAI_stats_id__plateform___id__get_200_response_info() {
    this->initializeModel();
}

OAI_stats_id__plateform___id__get_200_response_info::~OAI_stats_id__plateform___id__get_200_response_info() {}

void OAI_stats_id__plateform___id__get_200_response_info::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_plateform_isSet = false;
    m_plateform_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAI_stats_id__plateform___id__get_200_response_info::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_stats_id__plateform___id__get_200_response_info::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_plateform_isValid = ::OpenAPI::fromJsonValue(m_plateform, json[QString("plateform")]);
    m_plateform_isSet = !json[QString("plateform")].isNull() && m_plateform_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAI_stats_id__plateform___id__get_200_response_info::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_stats_id__plateform___id__get_200_response_info::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_plateform_isSet) {
        obj.insert(QString("plateform"), ::OpenAPI::toJsonValue(m_plateform));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

qint32 OAI_stats_id__plateform___id__get_200_response_info::getAccountId() const {
    return m_account_id;
}
void OAI_stats_id__plateform___id__get_200_response_info::setAccountId(const qint32 &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAI_stats_id__plateform___id__get_200_response_info::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAI_stats_id__plateform___id__get_200_response_info::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAI_stats_id__plateform___id__get_200_response_info::getPlateform() const {
    return m_plateform;
}
void OAI_stats_id__plateform___id__get_200_response_info::setPlateform(const QString &plateform) {
    m_plateform = plateform;
    m_plateform_isSet = true;
}

bool OAI_stats_id__plateform___id__get_200_response_info::is_plateform_Set() const{
    return m_plateform_isSet;
}

bool OAI_stats_id__plateform___id__get_200_response_info::is_plateform_Valid() const{
    return m_plateform_isValid;
}

QString OAI_stats_id__plateform___id__get_200_response_info::getUsername() const {
    return m_username;
}
void OAI_stats_id__plateform___id__get_200_response_info::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAI_stats_id__plateform___id__get_200_response_info::is_username_Set() const{
    return m_username_isSet;
}

bool OAI_stats_id__plateform___id__get_200_response_info::is_username_Valid() const{
    return m_username_isValid;
}

bool OAI_stats_id__plateform___id__get_200_response_info::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_plateform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_stats_id__plateform___id__get_200_response_info::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
