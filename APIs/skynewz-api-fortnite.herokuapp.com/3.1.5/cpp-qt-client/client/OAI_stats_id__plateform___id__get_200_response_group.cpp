/**
 * FORTNITE REST API
 * REST API about Fortnite game
 *
 * The version of the OpenAPI document: 3.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_stats_id__plateform___id__get_200_response_group.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_stats_id__plateform___id__get_200_response_group::OAI_stats_id__plateform___id__get_200_response_group(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_stats_id__plateform___id__get_200_response_group::OAI_stats_id__plateform___id__get_200_response_group() {
    this->initializeModel();
}

OAI_stats_id__plateform___id__get_200_response_group::~OAI_stats_id__plateform___id__get_200_response_group() {}

void OAI_stats_id__plateform___id__get_200_response_group::initializeModel() {

    m_duo_isSet = false;
    m_duo_isValid = false;

    m_solo_isSet = false;
    m_solo_isValid = false;

    m_squad_isSet = false;
    m_squad_isValid = false;
}

void OAI_stats_id__plateform___id__get_200_response_group::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_stats_id__plateform___id__get_200_response_group::fromJsonObject(QJsonObject json) {

    m_duo_isValid = ::OpenAPI::fromJsonValue(m_duo, json[QString("duo")]);
    m_duo_isSet = !json[QString("duo")].isNull() && m_duo_isValid;

    m_solo_isValid = ::OpenAPI::fromJsonValue(m_solo, json[QString("solo")]);
    m_solo_isSet = !json[QString("solo")].isNull() && m_solo_isValid;

    m_squad_isValid = ::OpenAPI::fromJsonValue(m_squad, json[QString("squad")]);
    m_squad_isSet = !json[QString("squad")].isNull() && m_squad_isValid;
}

QString OAI_stats_id__plateform___id__get_200_response_group::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_stats_id__plateform___id__get_200_response_group::asJsonObject() const {
    QJsonObject obj;
    if (m_duo.isSet()) {
        obj.insert(QString("duo"), ::OpenAPI::toJsonValue(m_duo));
    }
    if (m_solo.isSet()) {
        obj.insert(QString("solo"), ::OpenAPI::toJsonValue(m_solo));
    }
    if (m_squad.isSet()) {
        obj.insert(QString("squad"), ::OpenAPI::toJsonValue(m_squad));
    }
    return obj;
}

OAI_stats_id__plateform___id__get_200_response_group_duo OAI_stats_id__plateform___id__get_200_response_group::getDuo() const {
    return m_duo;
}
void OAI_stats_id__plateform___id__get_200_response_group::setDuo(const OAI_stats_id__plateform___id__get_200_response_group_duo &duo) {
    m_duo = duo;
    m_duo_isSet = true;
}

bool OAI_stats_id__plateform___id__get_200_response_group::is_duo_Set() const{
    return m_duo_isSet;
}

bool OAI_stats_id__plateform___id__get_200_response_group::is_duo_Valid() const{
    return m_duo_isValid;
}

OAI_stats_id__plateform___id__get_200_response_group_duo OAI_stats_id__plateform___id__get_200_response_group::getSolo() const {
    return m_solo;
}
void OAI_stats_id__plateform___id__get_200_response_group::setSolo(const OAI_stats_id__plateform___id__get_200_response_group_duo &solo) {
    m_solo = solo;
    m_solo_isSet = true;
}

bool OAI_stats_id__plateform___id__get_200_response_group::is_solo_Set() const{
    return m_solo_isSet;
}

bool OAI_stats_id__plateform___id__get_200_response_group::is_solo_Valid() const{
    return m_solo_isValid;
}

OAI_stats_id__plateform___id__get_200_response_group_duo OAI_stats_id__plateform___id__get_200_response_group::getSquad() const {
    return m_squad;
}
void OAI_stats_id__plateform___id__get_200_response_group::setSquad(const OAI_stats_id__plateform___id__get_200_response_group_duo &squad) {
    m_squad = squad;
    m_squad_isSet = true;
}

bool OAI_stats_id__plateform___id__get_200_response_group::is_squad_Set() const{
    return m_squad_isSet;
}

bool OAI_stats_id__plateform___id__get_200_response_group::is_squad_Valid() const{
    return m_squad_isValid;
}

bool OAI_stats_id__plateform___id__get_200_response_group::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_solo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_squad.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_stats_id__plateform___id__get_200_response_group::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
