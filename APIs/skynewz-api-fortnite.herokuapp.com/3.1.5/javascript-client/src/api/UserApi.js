/**
 * FORTNITE REST API
 * REST API about Fortnite game
 *
 * The version of the OpenAPI document: 3.1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckGetDefaultResponse from '../model/CheckGetDefaultResponse';
import UserPlateformUsernameGet200Response from '../model/UserPlateformUsernameGet200Response';

/**
* User service.
* @module api/UserApi
* @version 3.1.5
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the userPlateformUsernameGet operation.
     * @callback module:api/UserApi~userPlateformUsernameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserPlateformUsernameGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a user by username
     * @param {String} plateform Playing plateform, can be xb1, ps4 or pc
     * @param {String} username Player username
     * @param {module:api/UserApi~userPlateformUsernameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserPlateformUsernameGet200Response}
     */
    userPlateformUsernameGet(plateform, username, callback) {
      let postBody = null;
      // verify the required parameter 'plateform' is set
      if (plateform === undefined || plateform === null) {
        throw new Error("Missing the required parameter 'plateform' when calling userPlateformUsernameGet");
      }
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling userPlateformUsernameGet");
      }

      let pathParams = {
        'plateform': plateform,
        'username': username
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserPlateformUsernameGet200Response;
      return this.apiClient.callApi(
        '/user/{plateform}/{username}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
