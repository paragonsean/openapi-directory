# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.seldon_message import SeldonMessage
from openapi_server import util


class SeldonMessageList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, seldon_messages: List[SeldonMessage]=None):
        """SeldonMessageList - a model defined in OpenAPI

        :param seldon_messages: The seldon_messages of this SeldonMessageList.
        """
        self.openapi_types = {
            'seldon_messages': List[SeldonMessage]
        }

        self.attribute_map = {
            'seldon_messages': 'seldonMessages'
        }

        self._seldon_messages = seldon_messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeldonMessageList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeldonMessageList of this SeldonMessageList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def seldon_messages(self):
        """Gets the seldon_messages of this SeldonMessageList.


        :return: The seldon_messages of this SeldonMessageList.
        :rtype: List[SeldonMessage]
        """
        return self._seldon_messages

    @seldon_messages.setter
    def seldon_messages(self, seldon_messages):
        """Sets the seldon_messages of this SeldonMessageList.


        :param seldon_messages: The seldon_messages of this SeldonMessageList.
        :type seldon_messages: List[SeldonMessage]
        """
        if seldon_messages is not None and len(seldon_messages) > 2097152:
            raise ValueError("Invalid value for `seldon_messages`, number of items must be less than or equal to `2097152`")

        self._seldon_messages = seldon_messages
