# coding: utf-8

import pytest
import json
from aiohttp import web

from openapi_server.models.feedback import Feedback
from openapi_server.models.seldon_message import SeldonMessage


pytestmark = pytest.mark.asyncio

@pytest.mark.skip("Connexion does not support multiple consumes. See https://github.com/zalando/connexion/pull/760")
async def test_predict(client):
    """Test case for predict

    
    """
    body = {"data":{"tftensor":{"scomplex_val":[9.301444,9.301444,9.301444,9.301444,9.301444],"bool_val":[True,True,True,True,True],"double_val":[5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182],"int_val":[7,7,7,7,7],"dtype":"DT_INVALID","tensor_content":"tensor_content","version_number":2,"tensor_shape":{"dim":[{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"}],"unknown_rank":True},"uint32_val":[3,3,3,3,3],"float_val":[5.637377,5.637377,5.637377,5.637377,5.637377],"string_val":["string_val","string_val","string_val","string_val","string_val"],"variant_val":[{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]}],"resource_handle_val":[{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"}],"dcomplex_val":[1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452],"half_val":[2,2,2,2,2],"int64_val":["int64_val","int64_val","int64_val","int64_val","int64_val"],"uint64_val":["uint64_val","uint64_val","uint64_val","uint64_val","uint64_val"]},"names":["names","names","names","names","names"],"tensor":{"shape":[0,0,0,0,0],"values":[6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403]},"ndarray":[null,null,null,null,null]},"meta":{"routing":{"router1":1},"puid":"puid","metrics":[{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"}],"requestPath":{"classifier":"seldonio/mock_classifier:1.0"},"tags":{"mytag":"myvalue"}},"strData":"strData","binData":"binData","status":{"reason":"reason","code":7,"info":"info","status":"SUCCESS"}}
    headers = { 
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='POST',
        path='/seldon/{namespace}/{deployment}/api/v1.0/predictions'.format(namespace='namespace_example', deployment='deployment_example'),
        headers=headers,
        json=body,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')


pytestmark = pytest.mark.asyncio

async def test_send_feedback(client):
    """Test case for send_feedback

    
    """
    body = {"reward":0.8008282,"request":{"data":{"tftensor":{"scomplex_val":[9.301444,9.301444,9.301444,9.301444,9.301444],"bool_val":[True,True,True,True,True],"double_val":[5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182],"int_val":[7,7,7,7,7],"dtype":"DT_INVALID","tensor_content":"tensor_content","version_number":2,"tensor_shape":{"dim":[{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"}],"unknown_rank":True},"uint32_val":[3,3,3,3,3],"float_val":[5.637377,5.637377,5.637377,5.637377,5.637377],"string_val":["string_val","string_val","string_val","string_val","string_val"],"variant_val":[{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]}],"resource_handle_val":[{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"}],"dcomplex_val":[1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452],"half_val":[2,2,2,2,2],"int64_val":["int64_val","int64_val","int64_val","int64_val","int64_val"],"uint64_val":["uint64_val","uint64_val","uint64_val","uint64_val","uint64_val"]},"names":["names","names","names","names","names"],"tensor":{"shape":[0,0,0,0,0],"values":[6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403]},"ndarray":[null,null,null,null,null]},"meta":{"routing":{"router1":1},"puid":"puid","metrics":[{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"}],"requestPath":{"classifier":"seldonio/mock_classifier:1.0"},"tags":{"mytag":"myvalue"}},"strData":"strData","binData":"binData","status":{"reason":"reason","code":7,"info":"info","status":"SUCCESS"}},"truth":{"data":{"tftensor":{"scomplex_val":[9.301444,9.301444,9.301444,9.301444,9.301444],"bool_val":[True,True,True,True,True],"double_val":[5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182],"int_val":[7,7,7,7,7],"dtype":"DT_INVALID","tensor_content":"tensor_content","version_number":2,"tensor_shape":{"dim":[{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"}],"unknown_rank":True},"uint32_val":[3,3,3,3,3],"float_val":[5.637377,5.637377,5.637377,5.637377,5.637377],"string_val":["string_val","string_val","string_val","string_val","string_val"],"variant_val":[{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]}],"resource_handle_val":[{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"}],"dcomplex_val":[1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452],"half_val":[2,2,2,2,2],"int64_val":["int64_val","int64_val","int64_val","int64_val","int64_val"],"uint64_val":["uint64_val","uint64_val","uint64_val","uint64_val","uint64_val"]},"names":["names","names","names","names","names"],"tensor":{"shape":[0,0,0,0,0],"values":[6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403]},"ndarray":[null,null,null,null,null]},"meta":{"routing":{"router1":1},"puid":"puid","metrics":[{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"}],"requestPath":{"classifier":"seldonio/mock_classifier:1.0"},"tags":{"mytag":"myvalue"}},"strData":"strData","binData":"binData","status":{"reason":"reason","code":7,"info":"info","status":"SUCCESS"}},"response":{"data":{"tftensor":{"scomplex_val":[9.301444,9.301444,9.301444,9.301444,9.301444],"bool_val":[True,True,True,True,True],"double_val":[5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182,5.962133916683182],"int_val":[7,7,7,7,7],"dtype":"DT_INVALID","tensor_content":"tensor_content","version_number":2,"tensor_shape":{"dim":[{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"},{"size":"size","name":"name"}],"unknown_rank":True},"uint32_val":[3,3,3,3,3],"float_val":[5.637377,5.637377,5.637377,5.637377,5.637377],"string_val":["string_val","string_val","string_val","string_val","string_val"],"variant_val":[{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]},{"metadata":"metadata","type_name":"type_name","tensors":[null,null,null,null,null]}],"resource_handle_val":[{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"},{"container":"container","hash_code":"hash_code","name":"name","maybe_type_name":"maybe_type_name","device":"device"}],"dcomplex_val":[1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452,1.4658129805029452],"half_val":[2,2,2,2,2],"int64_val":["int64_val","int64_val","int64_val","int64_val","int64_val"],"uint64_val":["uint64_val","uint64_val","uint64_val","uint64_val","uint64_val"]},"names":["names","names","names","names","names"],"tensor":{"shape":[0,0,0,0,0],"values":[6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403,6.027456183070403]},"ndarray":[null,null,null,null,null]},"meta":{"routing":{"router1":1},"puid":"puid","metrics":[{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"},{"type":"COUNTER","value":4.145608,"key":"key"}],"requestPath":{"classifier":"seldonio/mock_classifier:1.0"},"tags":{"mytag":"myvalue"}},"strData":"strData","binData":"binData","status":{"reason":"reason","code":7,"info":"info","status":"SUCCESS"}}}
    headers = { 
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='POST',
        path='/seldon/{namespace}/{deployment}/api/v1.0/feedback'.format(namespace='namespace_example', deployment='deployment_example'),
        headers=headers,
        json=body,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')

