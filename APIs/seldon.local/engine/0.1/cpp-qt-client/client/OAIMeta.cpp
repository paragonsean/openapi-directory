/**
 * Seldon External API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMeta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMeta::OAIMeta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMeta::OAIMeta() {
    this->initializeModel();
}

OAIMeta::~OAIMeta() {}

void OAIMeta::initializeModel() {

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_puid_isSet = false;
    m_puid_isValid = false;

    m_request_path_isSet = false;
    m_request_path_isValid = false;

    m_routing_isSet = false;
    m_routing_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIMeta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMeta::fromJsonObject(QJsonObject json) {

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_puid_isValid = ::OpenAPI::fromJsonValue(m_puid, json[QString("puid")]);
    m_puid_isSet = !json[QString("puid")].isNull() && m_puid_isValid;

    m_request_path_isValid = ::OpenAPI::fromJsonValue(m_request_path, json[QString("requestPath")]);
    m_request_path_isSet = !json[QString("requestPath")].isNull() && m_request_path_isValid;

    m_routing_isValid = ::OpenAPI::fromJsonValue(m_routing, json[QString("routing")]);
    m_routing_isSet = !json[QString("routing")].isNull() && m_routing_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIMeta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMeta::asJsonObject() const {
    QJsonObject obj;
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_puid_isSet) {
        obj.insert(QString("puid"), ::OpenAPI::toJsonValue(m_puid));
    }
    if (m_request_path.size() > 0) {
        obj.insert(QString("requestPath"), ::OpenAPI::toJsonValue(m_request_path));
    }
    if (m_routing.size() > 0) {
        obj.insert(QString("routing"), ::OpenAPI::toJsonValue(m_routing));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QList<OAIMetric> OAIMeta::getMetrics() const {
    return m_metrics;
}
void OAIMeta::setMetrics(const QList<OAIMetric> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIMeta::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIMeta::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIMeta::getPuid() const {
    return m_puid;
}
void OAIMeta::setPuid(const QString &puid) {
    m_puid = puid;
    m_puid_isSet = true;
}

bool OAIMeta::is_puid_Set() const{
    return m_puid_isSet;
}

bool OAIMeta::is_puid_Valid() const{
    return m_puid_isValid;
}

QMap<QString, QString> OAIMeta::getRequestPath() const {
    return m_request_path;
}
void OAIMeta::setRequestPath(const QMap<QString, QString> &request_path) {
    m_request_path = request_path;
    m_request_path_isSet = true;
}

bool OAIMeta::is_request_path_Set() const{
    return m_request_path_isSet;
}

bool OAIMeta::is_request_path_Valid() const{
    return m_request_path_isValid;
}

QMap<QString, qint32> OAIMeta::getRouting() const {
    return m_routing;
}
void OAIMeta::setRouting(const QMap<QString, qint32> &routing) {
    m_routing = routing;
    m_routing_isSet = true;
}

bool OAIMeta::is_routing_Set() const{
    return m_routing_isSet;
}

bool OAIMeta::is_routing_Valid() const{
    return m_routing_isValid;
}

QMap<QString, QJsonValue> OAIMeta::getTags() const {
    return m_tags;
}
void OAIMeta::setTags(const QMap<QString, QJsonValue> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIMeta::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIMeta::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIMeta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_puid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_path.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMeta::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
