/**
 * Seldon External API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class TensorflowDataType.
* @enum {}
* @readonly
*/
export default class TensorflowDataType {
    
        /**
         * value: "DT_INVALID"
         * @const
         */
        "INVALID" = "DT_INVALID";

    
        /**
         * value: "DT_FLOAT"
         * @const
         */
        "FLOAT" = "DT_FLOAT";

    
        /**
         * value: "DT_DOUBLE"
         * @const
         */
        "DOUBLE" = "DT_DOUBLE";

    
        /**
         * value: "DT_INT32"
         * @const
         */
        "INT32" = "DT_INT32";

    
        /**
         * value: "DT_UINT8"
         * @const
         */
        "UINT8" = "DT_UINT8";

    
        /**
         * value: "DT_INT16"
         * @const
         */
        "INT16" = "DT_INT16";

    
        /**
         * value: "DT_INT8"
         * @const
         */
        "INT8" = "DT_INT8";

    
        /**
         * value: "DT_STRING"
         * @const
         */
        "STRING" = "DT_STRING";

    
        /**
         * value: "DT_COMPLEX64"
         * @const
         */
        "COMPLEX64" = "DT_COMPLEX64";

    
        /**
         * value: "DT_INT64"
         * @const
         */
        "INT64" = "DT_INT64";

    
        /**
         * value: "DT_BOOL"
         * @const
         */
        "BOOL" = "DT_BOOL";

    
        /**
         * value: "DT_QINT8"
         * @const
         */
        "QINT8" = "DT_QINT8";

    
        /**
         * value: "DT_QUINT8"
         * @const
         */
        "QUINT8" = "DT_QUINT8";

    
        /**
         * value: "DT_QINT32"
         * @const
         */
        "QINT32" = "DT_QINT32";

    
        /**
         * value: "DT_BFLOAT16"
         * @const
         */
        "BFLOAT16" = "DT_BFLOAT16";

    
        /**
         * value: "DT_QINT16"
         * @const
         */
        "QINT16" = "DT_QINT16";

    
        /**
         * value: "DT_QUINT16"
         * @const
         */
        "QUINT16" = "DT_QUINT16";

    
        /**
         * value: "DT_UINT16"
         * @const
         */
        "UINT16" = "DT_UINT16";

    
        /**
         * value: "DT_COMPLEX128"
         * @const
         */
        "COMPLEX128" = "DT_COMPLEX128";

    
        /**
         * value: "DT_HALF"
         * @const
         */
        "HALF" = "DT_HALF";

    
        /**
         * value: "DT_RESOURCE"
         * @const
         */
        "RESOURCE" = "DT_RESOURCE";

    
        /**
         * value: "DT_VARIANT"
         * @const
         */
        "VARIANT" = "DT_VARIANT";

    
        /**
         * value: "DT_UINT32"
         * @const
         */
        "UINT32" = "DT_UINT32";

    
        /**
         * value: "DT_UINT64"
         * @const
         */
        "UINT64" = "DT_UINT64";

    
        /**
         * value: "DT_FLOAT_REF"
         * @const
         */
        "FLOAT_REF" = "DT_FLOAT_REF";

    
        /**
         * value: "DT_DOUBLE_REF"
         * @const
         */
        "DOUBLE_REF" = "DT_DOUBLE_REF";

    
        /**
         * value: "DT_INT32_REF"
         * @const
         */
        "INT32_REF" = "DT_INT32_REF";

    
        /**
         * value: "DT_UINT8_REF"
         * @const
         */
        "UINT8_REF" = "DT_UINT8_REF";

    
        /**
         * value: "DT_INT16_REF"
         * @const
         */
        "INT16_REF" = "DT_INT16_REF";

    
        /**
         * value: "DT_INT8_REF"
         * @const
         */
        "INT8_REF" = "DT_INT8_REF";

    
        /**
         * value: "DT_STRING_REF"
         * @const
         */
        "STRING_REF" = "DT_STRING_REF";

    
        /**
         * value: "DT_COMPLEX64_REF"
         * @const
         */
        "COMPLEX64_REF" = "DT_COMPLEX64_REF";

    
        /**
         * value: "DT_INT64_REF"
         * @const
         */
        "INT64_REF" = "DT_INT64_REF";

    
        /**
         * value: "DT_BOOL_REF"
         * @const
         */
        "BOOL_REF" = "DT_BOOL_REF";

    
        /**
         * value: "DT_QINT8_REF"
         * @const
         */
        "QINT8_REF" = "DT_QINT8_REF";

    
        /**
         * value: "DT_QUINT8_REF"
         * @const
         */
        "QUINT8_REF" = "DT_QUINT8_REF";

    
        /**
         * value: "DT_QINT32_REF"
         * @const
         */
        "QINT32_REF" = "DT_QINT32_REF";

    
        /**
         * value: "DT_BFLOAT16_REF"
         * @const
         */
        "BFLOAT16_REF" = "DT_BFLOAT16_REF";

    
        /**
         * value: "DT_QINT16_REF"
         * @const
         */
        "QINT16_REF" = "DT_QINT16_REF";

    
        /**
         * value: "DT_QUINT16_REF"
         * @const
         */
        "QUINT16_REF" = "DT_QUINT16_REF";

    
        /**
         * value: "DT_UINT16_REF"
         * @const
         */
        "UINT16_REF" = "DT_UINT16_REF";

    
        /**
         * value: "DT_COMPLEX128_REF"
         * @const
         */
        "COMPLEX128_REF" = "DT_COMPLEX128_REF";

    
        /**
         * value: "DT_HALF_REF"
         * @const
         */
        "HALF_REF" = "DT_HALF_REF";

    
        /**
         * value: "DT_RESOURCE_REF"
         * @const
         */
        "RESOURCE_REF" = "DT_RESOURCE_REF";

    
        /**
         * value: "DT_VARIANT_REF"
         * @const
         */
        "VARIANT_REF" = "DT_VARIANT_REF";

    
        /**
         * value: "DT_UINT32_REF"
         * @const
         */
        "UINT32_REF" = "DT_UINT32_REF";

    
        /**
         * value: "DT_UINT64_REF"
         * @const
         */
        "UINT64_REF" = "DT_UINT64_REF";

    

    /**
    * Returns a <code>TensorflowDataType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/TensorflowDataType} The enum <code>TensorflowDataType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

