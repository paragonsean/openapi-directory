/**
 * Seldon External API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tensor from './Tensor';
import TensorflowTensorProto from './TensorflowTensorProto';

/**
 * The DefaultData model module.
 * @module model/DefaultData
 * @version 0.1
 */
class DefaultData {
    /**
     * Constructs a new <code>DefaultData</code>.
     * @alias module:model/DefaultData
     */
    constructor() { 
        
        DefaultData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DefaultData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DefaultData} obj Optional instance to populate.
     * @return {module:model/DefaultData} The populated <code>DefaultData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DefaultData();

            if (data.hasOwnProperty('names')) {
                obj['names'] = ApiClient.convertToType(data['names'], ['String']);
            }
            if (data.hasOwnProperty('ndarry')) {
                obj['ndarry'] = ApiClient.convertToType(data['ndarry'], [Object]);
            }
            if (data.hasOwnProperty('tensor')) {
                obj['tensor'] = Tensor.constructFromObject(data['tensor']);
            }
            if (data.hasOwnProperty('tftensor')) {
                obj['tftensor'] = TensorflowTensorProto.constructFromObject(data['tftensor']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DefaultData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DefaultData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['names'])) {
            throw new Error("Expected the field `names` to be an array in the JSON data but got " + data['names']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ndarry'])) {
            throw new Error("Expected the field `ndarry` to be an array in the JSON data but got " + data['ndarry']);
        }
        // validate the optional field `tensor`
        if (data['tensor']) { // data not null
          Tensor.validateJSON(data['tensor']);
        }
        // validate the optional field `tftensor`
        if (data['tftensor']) { // data not null
          TensorflowTensorProto.validateJSON(data['tftensor']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} names
 */
DefaultData.prototype['names'] = undefined;

/**
 * @member {Array.<Object>} ndarry
 */
DefaultData.prototype['ndarry'] = undefined;

/**
 * @member {module:model/Tensor} tensor
 */
DefaultData.prototype['tensor'] = undefined;

/**
 * @member {module:model/TensorflowTensorProto} tftensor
 */
DefaultData.prototype['tftensor'] = undefined;






export default DefaultData;

