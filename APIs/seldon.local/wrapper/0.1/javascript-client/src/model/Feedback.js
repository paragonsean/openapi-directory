/**
 * Seldon External API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SeldonMessage from './SeldonMessage';

/**
 * The Feedback model module.
 * @module model/Feedback
 * @version 0.1
 */
class Feedback {
    /**
     * Constructs a new <code>Feedback</code>.
     * @alias module:model/Feedback
     */
    constructor() { 
        
        Feedback.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Feedback</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Feedback} obj Optional instance to populate.
     * @return {module:model/Feedback} The populated <code>Feedback</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Feedback();

            if (data.hasOwnProperty('request')) {
                obj['request'] = SeldonMessage.constructFromObject(data['request']);
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = SeldonMessage.constructFromObject(data['response']);
            }
            if (data.hasOwnProperty('reward')) {
                obj['reward'] = ApiClient.convertToType(data['reward'], 'Number');
            }
            if (data.hasOwnProperty('truth')) {
                obj['truth'] = SeldonMessage.constructFromObject(data['truth']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Feedback</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Feedback</code>.
     */
    static validateJSON(data) {
        // validate the optional field `request`
        if (data['request']) { // data not null
          SeldonMessage.validateJSON(data['request']);
        }
        // validate the optional field `response`
        if (data['response']) { // data not null
          SeldonMessage.validateJSON(data['response']);
        }
        // validate the optional field `truth`
        if (data['truth']) { // data not null
          SeldonMessage.validateJSON(data['truth']);
        }

        return true;
    }


}



/**
 * @member {module:model/SeldonMessage} request
 */
Feedback.prototype['request'] = undefined;

/**
 * @member {module:model/SeldonMessage} response
 */
Feedback.prototype['response'] = undefined;

/**
 * @member {Number} reward
 */
Feedback.prototype['reward'] = undefined;

/**
 * @member {module:model/SeldonMessage} truth
 */
Feedback.prototype['truth'] = undefined;






export default Feedback;

