# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.seldon_message import SeldonMessage
from openapi_server import util


class Feedback(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request: SeldonMessage=None, response: SeldonMessage=None, reward: float=None, truth: SeldonMessage=None):
        """Feedback - a model defined in OpenAPI

        :param request: The request of this Feedback.
        :param response: The response of this Feedback.
        :param reward: The reward of this Feedback.
        :param truth: The truth of this Feedback.
        """
        self.openapi_types = {
            'request': SeldonMessage,
            'response': SeldonMessage,
            'reward': float,
            'truth': SeldonMessage
        }

        self.attribute_map = {
            'request': 'request',
            'response': 'response',
            'reward': 'reward',
            'truth': 'truth'
        }

        self._request = request
        self._response = response
        self._reward = reward
        self._truth = truth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Feedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Feedback of this Feedback.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request(self):
        """Gets the request of this Feedback.


        :return: The request of this Feedback.
        :rtype: SeldonMessage
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this Feedback.


        :param request: The request of this Feedback.
        :type request: SeldonMessage
        """

        self._request = request

    @property
    def response(self):
        """Gets the response of this Feedback.


        :return: The response of this Feedback.
        :rtype: SeldonMessage
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this Feedback.


        :param response: The response of this Feedback.
        :type response: SeldonMessage
        """

        self._response = response

    @property
    def reward(self):
        """Gets the reward of this Feedback.


        :return: The reward of this Feedback.
        :rtype: float
        """
        return self._reward

    @reward.setter
    def reward(self, reward):
        """Sets the reward of this Feedback.


        :param reward: The reward of this Feedback.
        :type reward: float
        """

        self._reward = reward

    @property
    def truth(self):
        """Gets the truth of this Feedback.


        :return: The truth of this Feedback.
        :rtype: SeldonMessage
        """
        return self._truth

    @truth.setter
    def truth(self, truth):
        """Sets the truth of this Feedback.


        :param truth: The truth of this Feedback.
        :type truth: SeldonMessage
        """

        self._truth = truth
