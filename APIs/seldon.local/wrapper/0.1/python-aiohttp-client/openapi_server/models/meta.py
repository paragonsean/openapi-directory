# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric import Metric
from openapi_server import util


class Meta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metrics: List[Metric]=None, puid: str=None, request_path: Dict[str, str]=None, routing: Dict[str, int]=None, tags: Dict[str, object]=None):
        """Meta - a model defined in OpenAPI

        :param metrics: The metrics of this Meta.
        :param puid: The puid of this Meta.
        :param request_path: The request_path of this Meta.
        :param routing: The routing of this Meta.
        :param tags: The tags of this Meta.
        """
        self.openapi_types = {
            'metrics': List[Metric],
            'puid': str,
            'request_path': Dict[str, str],
            'routing': Dict[str, int],
            'tags': Dict[str, object]
        }

        self.attribute_map = {
            'metrics': 'metrics',
            'puid': 'puid',
            'request_path': 'requestPath',
            'routing': 'routing',
            'tags': 'tags'
        }

        self._metrics = metrics
        self._puid = puid
        self._request_path = request_path
        self._routing = routing
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Meta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Meta of this Meta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metrics(self):
        """Gets the metrics of this Meta.


        :return: The metrics of this Meta.
        :rtype: List[Metric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this Meta.


        :param metrics: The metrics of this Meta.
        :type metrics: List[Metric]
        """

        self._metrics = metrics

    @property
    def puid(self):
        """Gets the puid of this Meta.


        :return: The puid of this Meta.
        :rtype: str
        """
        return self._puid

    @puid.setter
    def puid(self, puid):
        """Sets the puid of this Meta.


        :param puid: The puid of this Meta.
        :type puid: str
        """

        self._puid = puid

    @property
    def request_path(self):
        """Gets the request_path of this Meta.


        :return: The request_path of this Meta.
        :rtype: Dict[str, str]
        """
        return self._request_path

    @request_path.setter
    def request_path(self, request_path):
        """Sets the request_path of this Meta.


        :param request_path: The request_path of this Meta.
        :type request_path: Dict[str, str]
        """

        self._request_path = request_path

    @property
    def routing(self):
        """Gets the routing of this Meta.


        :return: The routing of this Meta.
        :rtype: Dict[str, int]
        """
        return self._routing

    @routing.setter
    def routing(self, routing):
        """Sets the routing of this Meta.


        :param routing: The routing of this Meta.
        :type routing: Dict[str, int]
        """

        self._routing = routing

    @property
    def tags(self):
        """Gets the tags of this Meta.


        :return: The tags of this Meta.
        :rtype: Dict[str, object]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Meta.


        :param tags: The tags of this Meta.
        :type tags: Dict[str, object]
        """

        self._tags = tags
