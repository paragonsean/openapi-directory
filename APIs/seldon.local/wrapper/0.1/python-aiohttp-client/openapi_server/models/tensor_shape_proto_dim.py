# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TensorShapeProtoDim(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, size: str=None):
        """TensorShapeProtoDim - a model defined in OpenAPI

        :param name: The name of this TensorShapeProtoDim.
        :param size: The size of this TensorShapeProtoDim.
        """
        self.openapi_types = {
            'name': str,
            'size': str
        }

        self.attribute_map = {
            'name': 'name',
            'size': 'size'
        }

        self._name = name
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TensorShapeProtoDim':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TensorShapeProtoDim of this TensorShapeProtoDim.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this TensorShapeProtoDim.

        Optional name of the tensor dimension.

        :return: The name of this TensorShapeProtoDim.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TensorShapeProtoDim.

        Optional name of the tensor dimension.

        :param name: The name of this TensorShapeProtoDim.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this TensorShapeProtoDim.

        Size of the tensor in that dimension. This value must be >= -1, but values of -1 are reserved for \"unknown\" shapes (values of -1 mean \"unknown\" dimension).  Certain wrappers that work with TensorShapeProto may fail at runtime when deserializing a TensorShapeProto containing a dim value of -1.

        :return: The size of this TensorShapeProtoDim.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this TensorShapeProtoDim.

        Size of the tensor in that dimension. This value must be >= -1, but values of -1 are reserved for \"unknown\" shapes (values of -1 mean \"unknown\" dimension).  Certain wrappers that work with TensorShapeProto may fail at runtime when deserializing a TensorShapeProto containing a dim value of -1.

        :param size: The size of this TensorShapeProtoDim.
        :type size: str
        """

        self._size = size
