/*
 * Seldon External API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Feedback;
import org.openapitools.client.model.SeldonMessage;
import org.openapitools.client.model.SeldonMessageList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InternalApi
 */
@Disabled
public class InternalApiTest {

    private final InternalApi api = new InternalApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregateTest() throws ApiException {
        SeldonMessageList body = null;
        SeldonMessage response = api.aggregate(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregate2Test() throws ApiException {
        SeldonMessageList json = null;
        SeldonMessage response = api.aggregate2(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void routeTest() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.route(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void route2Test() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.route2(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendFeedbackTest() throws ApiException {
        Feedback json = null;
        SeldonMessage response = api.sendFeedback(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendFeedback2Test() throws ApiException {
        Feedback json = null;
        SeldonMessage response = api.sendFeedback2(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformInputTest() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.transformInput(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformInput2Test() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.transformInput2(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformInput3Test() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.transformInput3(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformInput4Test() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.transformInput4(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformOutputTest() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.transformOutput(json);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformOutput2Test() throws ApiException {
        SeldonMessage json = null;
        SeldonMessage response = api.transformOutput2(json);
        // TODO: test validations
    }

}
