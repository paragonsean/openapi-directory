# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.package_search_dto import PackageSearchDTO
from openapi_server import util


class DefaultResponseDTOOfPackageSearchDTOResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_status: bool=None, addon_fee: float=None, apply_for_all_gyms: bool=None, binding_period: int=None, created_date: datetime=None, created_user: str=None, description: str=None, features: str=None, free_months: int=None, member_can_remove_add_ons: bool=None, modified_date: datetime=None, modified_user: str=None, monthly_fee: float=None, number_of_visits: int=None, package_id: int=None, package_name: str=None, package_number: int=None, package_type: str=None, registration_fee: float=None, service_fee: float=None, tags: str=None, total_count: int=None, total_price: float=None):
        """DefaultResponseDTOOfPackageSearchDTOResult - a model defined in OpenAPI

        :param active_status: The active_status of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param addon_fee: The addon_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param apply_for_all_gyms: The apply_for_all_gyms of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param binding_period: The binding_period of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param created_date: The created_date of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param created_user: The created_user of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param description: The description of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param features: The features of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param free_months: The free_months of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param member_can_remove_add_ons: The member_can_remove_add_ons of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param modified_date: The modified_date of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param modified_user: The modified_user of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param monthly_fee: The monthly_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param number_of_visits: The number_of_visits of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param package_id: The package_id of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param package_name: The package_name of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param package_number: The package_number of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param package_type: The package_type of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param registration_fee: The registration_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param service_fee: The service_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param tags: The tags of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param total_count: The total_count of this DefaultResponseDTOOfPackageSearchDTOResult.
        :param total_price: The total_price of this DefaultResponseDTOOfPackageSearchDTOResult.
        """
        self.openapi_types = {
            'active_status': bool,
            'addon_fee': float,
            'apply_for_all_gyms': bool,
            'binding_period': int,
            'created_date': datetime,
            'created_user': str,
            'description': str,
            'features': str,
            'free_months': int,
            'member_can_remove_add_ons': bool,
            'modified_date': datetime,
            'modified_user': str,
            'monthly_fee': float,
            'number_of_visits': int,
            'package_id': int,
            'package_name': str,
            'package_number': int,
            'package_type': str,
            'registration_fee': float,
            'service_fee': float,
            'tags': str,
            'total_count': int,
            'total_price': float
        }

        self.attribute_map = {
            'active_status': 'activeStatus',
            'addon_fee': 'addonFee',
            'apply_for_all_gyms': 'applyForAllGyms',
            'binding_period': 'bindingPeriod',
            'created_date': 'createdDate',
            'created_user': 'createdUser',
            'description': 'description',
            'features': 'features',
            'free_months': 'freeMonths',
            'member_can_remove_add_ons': 'memberCanRemoveAddOns',
            'modified_date': 'modifiedDate',
            'modified_user': 'modifiedUser',
            'monthly_fee': 'monthlyFee',
            'number_of_visits': 'numberOfVisits',
            'package_id': 'packageId',
            'package_name': 'packageName',
            'package_number': 'packageNumber',
            'package_type': 'packageType',
            'registration_fee': 'registrationFee',
            'service_fee': 'serviceFee',
            'tags': 'tags',
            'total_count': 'totalCount',
            'total_price': 'totalPrice'
        }

        self._active_status = active_status
        self._addon_fee = addon_fee
        self._apply_for_all_gyms = apply_for_all_gyms
        self._binding_period = binding_period
        self._created_date = created_date
        self._created_user = created_user
        self._description = description
        self._features = features
        self._free_months = free_months
        self._member_can_remove_add_ons = member_can_remove_add_ons
        self._modified_date = modified_date
        self._modified_user = modified_user
        self._monthly_fee = monthly_fee
        self._number_of_visits = number_of_visits
        self._package_id = package_id
        self._package_name = package_name
        self._package_number = package_number
        self._package_type = package_type
        self._registration_fee = registration_fee
        self._service_fee = service_fee
        self._tags = tags
        self._total_count = total_count
        self._total_price = total_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefaultResponseDTOOfPackageSearchDTOResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefaultResponseDTOOfPackageSearchDTO_result of this DefaultResponseDTOOfPackageSearchDTOResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_status(self):
        """Gets the active_status of this DefaultResponseDTOOfPackageSearchDTOResult.

        Active Status 

        :return: The active_status of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: bool
        """
        return self._active_status

    @active_status.setter
    def active_status(self, active_status):
        """Sets the active_status of this DefaultResponseDTOOfPackageSearchDTOResult.

        Active Status 

        :param active_status: The active_status of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type active_status: bool
        """

        self._active_status = active_status

    @property
    def addon_fee(self):
        """Gets the addon_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        sum of addon fees. incoming values for this filed will ignore.             

        :return: The addon_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: float
        """
        return self._addon_fee

    @addon_fee.setter
    def addon_fee(self, addon_fee):
        """Sets the addon_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        sum of addon fees. incoming values for this filed will ignore.             

        :param addon_fee: The addon_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type addon_fee: float
        """

        self._addon_fee = addon_fee

    @property
    def apply_for_all_gyms(self):
        """Gets the apply_for_all_gyms of this DefaultResponseDTOOfPackageSearchDTOResult.

        Boolean value to indicate wheather package is available in all the gyms.             

        :return: The apply_for_all_gyms of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: bool
        """
        return self._apply_for_all_gyms

    @apply_for_all_gyms.setter
    def apply_for_all_gyms(self, apply_for_all_gyms):
        """Sets the apply_for_all_gyms of this DefaultResponseDTOOfPackageSearchDTOResult.

        Boolean value to indicate wheather package is available in all the gyms.             

        :param apply_for_all_gyms: The apply_for_all_gyms of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type apply_for_all_gyms: bool
        """

        self._apply_for_all_gyms = apply_for_all_gyms

    @property
    def binding_period(self):
        """Gets the binding_period of this DefaultResponseDTOOfPackageSearchDTOResult.

        Range of period a member is bound to the contract if he/she choose this package.             

        :return: The binding_period of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: int
        """
        return self._binding_period

    @binding_period.setter
    def binding_period(self, binding_period):
        """Sets the binding_period of this DefaultResponseDTOOfPackageSearchDTOResult.

        Range of period a member is bound to the contract if he/she choose this package.             

        :param binding_period: The binding_period of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type binding_period: int
        """

        self._binding_period = binding_period

    @property
    def created_date(self):
        """Gets the created_date of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package created DateTime.             

        :return: The created_date of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package created DateTime.             

        :param created_date: The created_date of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def created_user(self):
        """Gets the created_user of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package created user.             

        :return: The created_user of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._created_user

    @created_user.setter
    def created_user(self, created_user):
        """Sets the created_user of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package created user.             

        :param created_user: The created_user of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type created_user: str
        """

        self._created_user = created_user

    @property
    def description(self):
        """Gets the description of this DefaultResponseDTOOfPackageSearchDTOResult.

        Common descriptions about package.If there are more instructions can be stored as comma separated values.             

        :return: The description of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DefaultResponseDTOOfPackageSearchDTOResult.

        Common descriptions about package.If there are more instructions can be stored as comma separated values.             

        :param description: The description of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type description: str
        """

        self._description = description

    @property
    def features(self):
        """Gets the features of this DefaultResponseDTOOfPackageSearchDTOResult.

        What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.             

        :return: The features of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this DefaultResponseDTOOfPackageSearchDTOResult.

        What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.             

        :param features: The features of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type features: str
        """

        self._features = features

    @property
    def free_months(self):
        """Gets the free_months of this DefaultResponseDTOOfPackageSearchDTOResult.

        No of months gym member can come without payments.             

        :return: The free_months of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: int
        """
        return self._free_months

    @free_months.setter
    def free_months(self, free_months):
        """Sets the free_months of this DefaultResponseDTOOfPackageSearchDTOResult.

        No of months gym member can come without payments.             

        :param free_months: The free_months of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type free_months: int
        """

        self._free_months = free_months

    @property
    def member_can_remove_add_ons(self):
        """Gets the member_can_remove_add_ons of this DefaultResponseDTOOfPackageSearchDTOResult.

        Boolean value to indicate member can remove already added addons if he choose this package.             

        :return: The member_can_remove_add_ons of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: bool
        """
        return self._member_can_remove_add_ons

    @member_can_remove_add_ons.setter
    def member_can_remove_add_ons(self, member_can_remove_add_ons):
        """Sets the member_can_remove_add_ons of this DefaultResponseDTOOfPackageSearchDTOResult.

        Boolean value to indicate member can remove already added addons if he choose this package.             

        :param member_can_remove_add_ons: The member_can_remove_add_ons of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type member_can_remove_add_ons: bool
        """

        self._member_can_remove_add_ons = member_can_remove_add_ons

    @property
    def modified_date(self):
        """Gets the modified_date of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package last modified DateTime.             

        :return: The modified_date of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package last modified DateTime.             

        :param modified_date: The modified_date of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type modified_date: datetime
        """

        self._modified_date = modified_date

    @property
    def modified_user(self):
        """Gets the modified_user of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package last modified user.             

        :return: The modified_user of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._modified_user

    @modified_user.setter
    def modified_user(self, modified_user):
        """Sets the modified_user of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package last modified user.             

        :param modified_user: The modified_user of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type modified_user: str
        """

        self._modified_user = modified_user

    @property
    def monthly_fee(self):
        """Gets the monthly_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        Monthly installment fee if package is not fixed visit. addition of the servicefee and addon fees divided by binding period.             

        :return: The monthly_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: float
        """
        return self._monthly_fee

    @monthly_fee.setter
    def monthly_fee(self, monthly_fee):
        """Sets the monthly_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        Monthly installment fee if package is not fixed visit. addition of the servicefee and addon fees divided by binding period.             

        :param monthly_fee: The monthly_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type monthly_fee: float
        """

        self._monthly_fee = monthly_fee

    @property
    def number_of_visits(self):
        """Gets the number_of_visits of this DefaultResponseDTOOfPackageSearchDTOResult.

        No of visits for fixed package 

        :return: The number_of_visits of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: int
        """
        return self._number_of_visits

    @number_of_visits.setter
    def number_of_visits(self, number_of_visits):
        """Sets the number_of_visits of this DefaultResponseDTOOfPackageSearchDTOResult.

        No of visits for fixed package 

        :param number_of_visits: The number_of_visits of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type number_of_visits: int
        """

        self._number_of_visits = number_of_visits

    @property
    def package_id(self):
        """Gets the package_id of this DefaultResponseDTOOfPackageSearchDTOResult.


        :return: The package_id of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: int
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id):
        """Sets the package_id of this DefaultResponseDTOOfPackageSearchDTOResult.


        :param package_id: The package_id of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type package_id: int
        """

        self._package_id = package_id

    @property
    def package_name(self):
        """Gets the package_name of this DefaultResponseDTOOfPackageSearchDTOResult.


        :return: The package_name of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this DefaultResponseDTOOfPackageSearchDTOResult.


        :param package_name: The package_name of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def package_number(self):
        """Gets the package_number of this DefaultResponseDTOOfPackageSearchDTOResult.


        :return: The package_number of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: int
        """
        return self._package_number

    @package_number.setter
    def package_number(self, package_number):
        """Sets the package_number of this DefaultResponseDTOOfPackageSearchDTOResult.


        :param package_number: The package_number of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type package_number: int
        """

        self._package_number = package_number

    @property
    def package_type(self):
        """Gets the package_type of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package type can be either fixed visit or unlimited.             

        :return: The package_type of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this DefaultResponseDTOOfPackageSearchDTOResult.

        Package type can be either fixed visit or unlimited.             

        :param package_type: The package_type of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type package_type: str
        """

        self._package_type = package_type

    @property
    def registration_fee(self):
        """Gets the registration_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        Registartion fee for the package at a gym.             

        :return: The registration_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: float
        """
        return self._registration_fee

    @registration_fee.setter
    def registration_fee(self, registration_fee):
        """Sets the registration_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        Registartion fee for the package at a gym.             

        :param registration_fee: The registration_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type registration_fee: float
        """

        self._registration_fee = registration_fee

    @property
    def service_fee(self):
        """Gets the service_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        total Service charge of the package for entire period.             

        :return: The service_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: float
        """
        return self._service_fee

    @service_fee.setter
    def service_fee(self, service_fee):
        """Sets the service_fee of this DefaultResponseDTOOfPackageSearchDTOResult.

        total Service charge of the package for entire period.             

        :param service_fee: The service_fee of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type service_fee: float
        """

        self._service_fee = service_fee

    @property
    def tags(self):
        """Gets the tags of this DefaultResponseDTOOfPackageSearchDTOResult.

        Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.             

        :return: The tags of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: str
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DefaultResponseDTOOfPackageSearchDTOResult.

        Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.             

        :param tags: The tags of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type tags: str
        """

        self._tags = tags

    @property
    def total_count(self):
        """Gets the total_count of this DefaultResponseDTOOfPackageSearchDTOResult.

        total number of recode for particular search 

        :return: The total_count of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this DefaultResponseDTOOfPackageSearchDTOResult.

        total number of recode for particular search 

        :param total_count: The total_count of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def total_price(self):
        """Gets the total_price of this DefaultResponseDTOOfPackageSearchDTOResult.

        total price for the package including Addon fees, service fee and registration fee. incoming values for this field will ignore.             

        :return: The total_price of this DefaultResponseDTOOfPackageSearchDTOResult.
        :rtype: float
        """
        return self._total_price

    @total_price.setter
    def total_price(self, total_price):
        """Sets the total_price of this DefaultResponseDTOOfPackageSearchDTOResult.

        total price for the package including Addon fees, service fee and registration fee. incoming values for this field will ignore.             

        :param total_price: The total_price of this DefaultResponseDTOOfPackageSearchDTOResult.
        :type total_price: float
        """

        self._total_price = total_price
