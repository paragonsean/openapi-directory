# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GymArticleDetailsDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, article_id: int=None, available_qty: float=None, created_user: str=None, employee_discount: float=None, employee_price: float=None, gym_id: int=None, gym_id_list: str=None, gym_name: str=None, id: int=None, is_default: bool=None, is_inventory_item: bool=None, is_obsolete: bool=None, modified_user: str=None, reorder_level: float=None, revenue_account_id: int=None, selling_price: float=None):
        """GymArticleDetailsDTO - a model defined in OpenAPI

        :param article_id: The article_id of this GymArticleDetailsDTO.
        :param available_qty: The available_qty of this GymArticleDetailsDTO.
        :param created_user: The created_user of this GymArticleDetailsDTO.
        :param employee_discount: The employee_discount of this GymArticleDetailsDTO.
        :param employee_price: The employee_price of this GymArticleDetailsDTO.
        :param gym_id: The gym_id of this GymArticleDetailsDTO.
        :param gym_id_list: The gym_id_list of this GymArticleDetailsDTO.
        :param gym_name: The gym_name of this GymArticleDetailsDTO.
        :param id: The id of this GymArticleDetailsDTO.
        :param is_default: The is_default of this GymArticleDetailsDTO.
        :param is_inventory_item: The is_inventory_item of this GymArticleDetailsDTO.
        :param is_obsolete: The is_obsolete of this GymArticleDetailsDTO.
        :param modified_user: The modified_user of this GymArticleDetailsDTO.
        :param reorder_level: The reorder_level of this GymArticleDetailsDTO.
        :param revenue_account_id: The revenue_account_id of this GymArticleDetailsDTO.
        :param selling_price: The selling_price of this GymArticleDetailsDTO.
        """
        self.openapi_types = {
            'article_id': int,
            'available_qty': float,
            'created_user': str,
            'employee_discount': float,
            'employee_price': float,
            'gym_id': int,
            'gym_id_list': str,
            'gym_name': str,
            'id': int,
            'is_default': bool,
            'is_inventory_item': bool,
            'is_obsolete': bool,
            'modified_user': str,
            'reorder_level': float,
            'revenue_account_id': int,
            'selling_price': float
        }

        self.attribute_map = {
            'article_id': 'articleId',
            'available_qty': 'availableQty',
            'created_user': 'createdUser',
            'employee_discount': 'employeeDiscount',
            'employee_price': 'employeePrice',
            'gym_id': 'gymId',
            'gym_id_list': 'gymIdList',
            'gym_name': 'gymName',
            'id': 'id',
            'is_default': 'isDefault',
            'is_inventory_item': 'isInventoryItem',
            'is_obsolete': 'isObsolete',
            'modified_user': 'modifiedUser',
            'reorder_level': 'reorderLevel',
            'revenue_account_id': 'revenueAccountId',
            'selling_price': 'sellingPrice'
        }

        self._article_id = article_id
        self._available_qty = available_qty
        self._created_user = created_user
        self._employee_discount = employee_discount
        self._employee_price = employee_price
        self._gym_id = gym_id
        self._gym_id_list = gym_id_list
        self._gym_name = gym_name
        self._id = id
        self._is_default = is_default
        self._is_inventory_item = is_inventory_item
        self._is_obsolete = is_obsolete
        self._modified_user = modified_user
        self._reorder_level = reorder_level
        self._revenue_account_id = revenue_account_id
        self._selling_price = selling_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GymArticleDetailsDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GymArticleDetailsDTO of this GymArticleDetailsDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def article_id(self):
        """Gets the article_id of this GymArticleDetailsDTO.


        :return: The article_id of this GymArticleDetailsDTO.
        :rtype: int
        """
        return self._article_id

    @article_id.setter
    def article_id(self, article_id):
        """Sets the article_id of this GymArticleDetailsDTO.


        :param article_id: The article_id of this GymArticleDetailsDTO.
        :type article_id: int
        """

        self._article_id = article_id

    @property
    def available_qty(self):
        """Gets the available_qty of this GymArticleDetailsDTO.


        :return: The available_qty of this GymArticleDetailsDTO.
        :rtype: float
        """
        return self._available_qty

    @available_qty.setter
    def available_qty(self, available_qty):
        """Sets the available_qty of this GymArticleDetailsDTO.


        :param available_qty: The available_qty of this GymArticleDetailsDTO.
        :type available_qty: float
        """

        self._available_qty = available_qty

    @property
    def created_user(self):
        """Gets the created_user of this GymArticleDetailsDTO.

        Created User 

        :return: The created_user of this GymArticleDetailsDTO.
        :rtype: str
        """
        return self._created_user

    @created_user.setter
    def created_user(self, created_user):
        """Sets the created_user of this GymArticleDetailsDTO.

        Created User 

        :param created_user: The created_user of this GymArticleDetailsDTO.
        :type created_user: str
        """

        self._created_user = created_user

    @property
    def employee_discount(self):
        """Gets the employee_discount of this GymArticleDetailsDTO.


        :return: The employee_discount of this GymArticleDetailsDTO.
        :rtype: float
        """
        return self._employee_discount

    @employee_discount.setter
    def employee_discount(self, employee_discount):
        """Sets the employee_discount of this GymArticleDetailsDTO.


        :param employee_discount: The employee_discount of this GymArticleDetailsDTO.
        :type employee_discount: float
        """

        self._employee_discount = employee_discount

    @property
    def employee_price(self):
        """Gets the employee_price of this GymArticleDetailsDTO.


        :return: The employee_price of this GymArticleDetailsDTO.
        :rtype: float
        """
        return self._employee_price

    @employee_price.setter
    def employee_price(self, employee_price):
        """Sets the employee_price of this GymArticleDetailsDTO.


        :param employee_price: The employee_price of this GymArticleDetailsDTO.
        :type employee_price: float
        """

        self._employee_price = employee_price

    @property
    def gym_id(self):
        """Gets the gym_id of this GymArticleDetailsDTO.

        Gym Id where article is related 

        :return: The gym_id of this GymArticleDetailsDTO.
        :rtype: int
        """
        return self._gym_id

    @gym_id.setter
    def gym_id(self, gym_id):
        """Sets the gym_id of this GymArticleDetailsDTO.

        Gym Id where article is related 

        :param gym_id: The gym_id of this GymArticleDetailsDTO.
        :type gym_id: int
        """

        self._gym_id = gym_id

    @property
    def gym_id_list(self):
        """Gets the gym_id_list of this GymArticleDetailsDTO.

        GymId - Gym Id string with comma separated GymIds 

        :return: The gym_id_list of this GymArticleDetailsDTO.
        :rtype: str
        """
        return self._gym_id_list

    @gym_id_list.setter
    def gym_id_list(self, gym_id_list):
        """Sets the gym_id_list of this GymArticleDetailsDTO.

        GymId - Gym Id string with comma separated GymIds 

        :param gym_id_list: The gym_id_list of this GymArticleDetailsDTO.
        :type gym_id_list: str
        """

        self._gym_id_list = gym_id_list

    @property
    def gym_name(self):
        """Gets the gym_name of this GymArticleDetailsDTO.

        Gym Name

        :return: The gym_name of this GymArticleDetailsDTO.
        :rtype: str
        """
        return self._gym_name

    @gym_name.setter
    def gym_name(self, gym_name):
        """Sets the gym_name of this GymArticleDetailsDTO.

        Gym Name

        :param gym_name: The gym_name of this GymArticleDetailsDTO.
        :type gym_name: str
        """

        self._gym_name = gym_name

    @property
    def id(self):
        """Gets the id of this GymArticleDetailsDTO.


        :return: The id of this GymArticleDetailsDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GymArticleDetailsDTO.


        :param id: The id of this GymArticleDetailsDTO.
        :type id: int
        """

        self._id = id

    @property
    def is_default(self):
        """Gets the is_default of this GymArticleDetailsDTO.

        Set as the default values for the article 

        :return: The is_default of this GymArticleDetailsDTO.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this GymArticleDetailsDTO.

        Set as the default values for the article 

        :param is_default: The is_default of this GymArticleDetailsDTO.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def is_inventory_item(self):
        """Gets the is_inventory_item of this GymArticleDetailsDTO.


        :return: The is_inventory_item of this GymArticleDetailsDTO.
        :rtype: bool
        """
        return self._is_inventory_item

    @is_inventory_item.setter
    def is_inventory_item(self, is_inventory_item):
        """Sets the is_inventory_item of this GymArticleDetailsDTO.


        :param is_inventory_item: The is_inventory_item of this GymArticleDetailsDTO.
        :type is_inventory_item: bool
        """

        self._is_inventory_item = is_inventory_item

    @property
    def is_obsolete(self):
        """Gets the is_obsolete of this GymArticleDetailsDTO.


        :return: The is_obsolete of this GymArticleDetailsDTO.
        :rtype: bool
        """
        return self._is_obsolete

    @is_obsolete.setter
    def is_obsolete(self, is_obsolete):
        """Sets the is_obsolete of this GymArticleDetailsDTO.


        :param is_obsolete: The is_obsolete of this GymArticleDetailsDTO.
        :type is_obsolete: bool
        """

        self._is_obsolete = is_obsolete

    @property
    def modified_user(self):
        """Gets the modified_user of this GymArticleDetailsDTO.

        Modified user

        :return: The modified_user of this GymArticleDetailsDTO.
        :rtype: str
        """
        return self._modified_user

    @modified_user.setter
    def modified_user(self, modified_user):
        """Sets the modified_user of this GymArticleDetailsDTO.

        Modified user

        :param modified_user: The modified_user of this GymArticleDetailsDTO.
        :type modified_user: str
        """

        self._modified_user = modified_user

    @property
    def reorder_level(self):
        """Gets the reorder_level of this GymArticleDetailsDTO.


        :return: The reorder_level of this GymArticleDetailsDTO.
        :rtype: float
        """
        return self._reorder_level

    @reorder_level.setter
    def reorder_level(self, reorder_level):
        """Sets the reorder_level of this GymArticleDetailsDTO.


        :param reorder_level: The reorder_level of this GymArticleDetailsDTO.
        :type reorder_level: float
        """

        self._reorder_level = reorder_level

    @property
    def revenue_account_id(self):
        """Gets the revenue_account_id of this GymArticleDetailsDTO.

        Revenue account Id

        :return: The revenue_account_id of this GymArticleDetailsDTO.
        :rtype: int
        """
        return self._revenue_account_id

    @revenue_account_id.setter
    def revenue_account_id(self, revenue_account_id):
        """Sets the revenue_account_id of this GymArticleDetailsDTO.

        Revenue account Id

        :param revenue_account_id: The revenue_account_id of this GymArticleDetailsDTO.
        :type revenue_account_id: int
        """

        self._revenue_account_id = revenue_account_id

    @property
    def selling_price(self):
        """Gets the selling_price of this GymArticleDetailsDTO.


        :return: The selling_price of this GymArticleDetailsDTO.
        :rtype: float
        """
        return self._selling_price

    @selling_price.setter
    def selling_price(self, selling_price):
        """Sets the selling_price of this GymArticleDetailsDTO.


        :param selling_price: The selling_price of this GymArticleDetailsDTO.
        :type selling_price: float
        """

        self._selling_price = selling_price
