# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.default_response_dtoof_article_dto_result import DefaultResponseDTOOfArticleDTOResult
from openapi_server import util


class DefaultResponseDTOOfArticleDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_error: bool=None, message: str=None, response_exception: object=None, result: DefaultResponseDTOOfArticleDTOResult=None):
        """DefaultResponseDTOOfArticleDTO - a model defined in OpenAPI

        :param is_error: The is_error of this DefaultResponseDTOOfArticleDTO.
        :param message: The message of this DefaultResponseDTOOfArticleDTO.
        :param response_exception: The response_exception of this DefaultResponseDTOOfArticleDTO.
        :param result: The result of this DefaultResponseDTOOfArticleDTO.
        """
        self.openapi_types = {
            'is_error': bool,
            'message': str,
            'response_exception': object,
            'result': DefaultResponseDTOOfArticleDTOResult
        }

        self.attribute_map = {
            'is_error': 'isError',
            'message': 'message',
            'response_exception': 'responseException',
            'result': 'result'
        }

        self._is_error = is_error
        self._message = message
        self._response_exception = response_exception
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefaultResponseDTOOfArticleDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefaultResponseDTOOfArticleDTO of this DefaultResponseDTOOfArticleDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_error(self):
        """Gets the is_error of this DefaultResponseDTOOfArticleDTO.


        :return: The is_error of this DefaultResponseDTOOfArticleDTO.
        :rtype: bool
        """
        return self._is_error

    @is_error.setter
    def is_error(self, is_error):
        """Sets the is_error of this DefaultResponseDTOOfArticleDTO.


        :param is_error: The is_error of this DefaultResponseDTOOfArticleDTO.
        :type is_error: bool
        """

        self._is_error = is_error

    @property
    def message(self):
        """Gets the message of this DefaultResponseDTOOfArticleDTO.


        :return: The message of this DefaultResponseDTOOfArticleDTO.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DefaultResponseDTOOfArticleDTO.


        :param message: The message of this DefaultResponseDTOOfArticleDTO.
        :type message: str
        """

        self._message = message

    @property
    def response_exception(self):
        """Gets the response_exception of this DefaultResponseDTOOfArticleDTO.


        :return: The response_exception of this DefaultResponseDTOOfArticleDTO.
        :rtype: object
        """
        return self._response_exception

    @response_exception.setter
    def response_exception(self, response_exception):
        """Sets the response_exception of this DefaultResponseDTOOfArticleDTO.


        :param response_exception: The response_exception of this DefaultResponseDTOOfArticleDTO.
        :type response_exception: object
        """

        self._response_exception = response_exception

    @property
    def result(self):
        """Gets the result of this DefaultResponseDTOOfArticleDTO.


        :return: The result of this DefaultResponseDTOOfArticleDTO.
        :rtype: DefaultResponseDTOOfArticleDTOResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this DefaultResponseDTOOfArticleDTO.


        :param result: The result of this DefaultResponseDTOOfArticleDTO.
        :type result: DefaultResponseDTOOfArticleDTOResult
        """

        self._result = result
