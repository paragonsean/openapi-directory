# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.default_response_dtoof_status_dto_result import DefaultResponseDTOOfStatusDTOResult
from openapi_server import util


class DefaultResponseDTOOfStatusDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_error: bool=None, message: str=None, response_exception: object=None, result: DefaultResponseDTOOfStatusDTOResult=None):
        """DefaultResponseDTOOfStatusDTO - a model defined in OpenAPI

        :param is_error: The is_error of this DefaultResponseDTOOfStatusDTO.
        :param message: The message of this DefaultResponseDTOOfStatusDTO.
        :param response_exception: The response_exception of this DefaultResponseDTOOfStatusDTO.
        :param result: The result of this DefaultResponseDTOOfStatusDTO.
        """
        self.openapi_types = {
            'is_error': bool,
            'message': str,
            'response_exception': object,
            'result': DefaultResponseDTOOfStatusDTOResult
        }

        self.attribute_map = {
            'is_error': 'isError',
            'message': 'message',
            'response_exception': 'responseException',
            'result': 'result'
        }

        self._is_error = is_error
        self._message = message
        self._response_exception = response_exception
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefaultResponseDTOOfStatusDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefaultResponseDTOOfStatusDTO of this DefaultResponseDTOOfStatusDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_error(self):
        """Gets the is_error of this DefaultResponseDTOOfStatusDTO.


        :return: The is_error of this DefaultResponseDTOOfStatusDTO.
        :rtype: bool
        """
        return self._is_error

    @is_error.setter
    def is_error(self, is_error):
        """Sets the is_error of this DefaultResponseDTOOfStatusDTO.


        :param is_error: The is_error of this DefaultResponseDTOOfStatusDTO.
        :type is_error: bool
        """

        self._is_error = is_error

    @property
    def message(self):
        """Gets the message of this DefaultResponseDTOOfStatusDTO.


        :return: The message of this DefaultResponseDTOOfStatusDTO.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DefaultResponseDTOOfStatusDTO.


        :param message: The message of this DefaultResponseDTOOfStatusDTO.
        :type message: str
        """

        self._message = message

    @property
    def response_exception(self):
        """Gets the response_exception of this DefaultResponseDTOOfStatusDTO.


        :return: The response_exception of this DefaultResponseDTOOfStatusDTO.
        :rtype: object
        """
        return self._response_exception

    @response_exception.setter
    def response_exception(self, response_exception):
        """Sets the response_exception of this DefaultResponseDTOOfStatusDTO.


        :param response_exception: The response_exception of this DefaultResponseDTOOfStatusDTO.
        :type response_exception: object
        """

        self._response_exception = response_exception

    @property
    def result(self):
        """Gets the result of this DefaultResponseDTOOfStatusDTO.


        :return: The result of this DefaultResponseDTOOfStatusDTO.
        :rtype: DefaultResponseDTOOfStatusDTOResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this DefaultResponseDTOOfStatusDTO.


        :param result: The result of this DefaultResponseDTOOfStatusDTO.
        :type result: DefaultResponseDTOOfStatusDTOResult
        """

        self._result = result
