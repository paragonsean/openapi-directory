openapi: 3.0.0
info:
  contact:
    email: support@unicorn-solutions.com
    name: Unicorn Solutions
    url: https://unicorn-solutions.com
  description: Web API for TL mobile and web app
  license:
    name: Use under Unicorn
    url: https://unicorn-solutions.com
  termsOfService: None
  title: API
  version: 2020-08-10_6-22
  x-origin:
  - format: openapi
    url: https://tl-api.azurewebsites.net/swagger/default/swagger.json
    version: "3.0"
  x-providerName: tl-api.azurewebsites.net
servers:
- url: https://tl-api.azurewebsites.net
- url: https://triviallife.azure-api.net/v1
security:
- bearer: []
paths:
  /api/Article:
    delete:
      operationId: article_delete
      parameters:
      - description: indentity number(primary key) for article object
        explode: true
        in: query
        name: ArticleId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfInteger'
          description: 'operation was success(true) or fail(false) '
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfInteger'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "Delete article from the system\n            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
    post:
      operationId: article_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleDTO'
        description: article object
        required: true
        x-name: article
        x-position: 1
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: messageId that can use to get the status of import later on.!
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: "Add new article\n            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
      x-codegen-request-body-name: body
    put:
      operationId: article_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleDTO'
        description: article object
        required: true
        x-name: article
        x-position: 1
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: messageId that can use to get the status of import later on.!
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "update existing article\n            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
      x-codegen-request-body-name: body
  /api/Article/ArticleGymDetails:
    put:
      operationId: article_update_article_gym_details
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GymArticleDetailsDTO'
              type: array
        required: true
        x-name: articleDetails
        x-position: 1
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: messageId that can use to get the status of import later on.!
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: "Add article details that associate with a Gym\n            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
      x-codegen-request-body-name: body
  /api/Article/GetAddons:
    get:
      operationId: article_get_addons
      parameters:
      - description: Search text - will be search by the name
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: Comma separated gymIds deafult "-1" for all gyms
        explode: true
        in: query
        name: gymIds
        required: false
        schema:
          default: "-1"
          nullable: true
          type: string
        style: form
        x-position: 2
      - explode: true
        in: query
        name: type
        required: false
        schema:
          default: all
          nullable: true
          type: string
        style: form
        x-position: 3
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
        x-position: 4
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-position: 5
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfListOfArticleSearchDTO'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfListOfArticleSearchDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Article/GymArticle/{articleId}/{gymId}:
    get:
      operationId: article_gym_article_details
      parameters:
      - description: indentity number(primary key) for article object
        explode: false
        in: path
        name: articleId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
        x-position: 1
      - description: indentity number(primary key) for gym object
        explode: false
        in: path
        name: gymId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
        x-position: 2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GymArticleDetailsDTO'
          description: API Response with Article entity
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfListOfArticleSearchDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: "Get Gym specific properties for article\n            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Article/MeasureUnit:
    post:
      operationId: article_add_measure_unit
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/MeasureUnitDTO'
              type: array
        description: list of measureUnit
        required: true
        x-name: measureUnits
        x-position: 1
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: Add measure unit
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
      x-codegen-request-body-name: body
  /api/Article/MeasureUnits:
    get:
      operationId: article_get_measure_units
      parameters:
      - description: "type of the measure unit (all, item, service)"
        explode: true
        in: query
        name: type
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: Get mesure units
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Article/RevenueAccounts:
    get:
      operationId: article_get_revenue_accounts
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: 'Get Revenue Accounts '
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Article/Search:
    get:
      operationId: article_search
      parameters:
      - description: part of article name
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: '-1 for all gyms '
        explode: true
        in: query
        name: gymId
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
        x-position: 2
      - description: filter article type. default is 'all'
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: all
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: order by column.!-- invalid column will give internal server
          error
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: "1"
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: number of recode in result and default is 100. use negative numbers
          to order by desc
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
        x-position: 5
      - description: number of recodes to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-position: 6
      - description: "Active Status 1 : Active, 2: Inactive, 3: All, Default : 1"
        explode: true
        in: query
        name: activeStatus
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
        x-position: 7
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfListOfArticleSearchDTO'
          description: API Response with set of a Article entities
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfListOfArticleSearchDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: "Search articles\nIt will only return basic information of article\n\
        \            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Article/UpdateStatus:
    put:
      operationId: article_update_status
      parameters:
      - explode: true
        in: query
        name: ArticleId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      - description: "1 : activate , 2 deactivate"
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 2
      - description: Updating user
        explode: true
        in: query
        name: userName
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfInteger'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfInteger'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: 'Deactivate existing article '
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Article/{articleID}:
    get:
      operationId: article_get
      parameters:
      - description: indentity number (primary key) for article object
        explode: false
        in: path
        name: articleID
        required: true
        schema:
          format: int32
          type: integer
        style: simple
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfArticleDTO'
          description: API Response with Article entity
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: "Get article details\nThis will return all properties related to article\
        \ entity\n            "
      tags:
      - Article
      x-openapi-router-controller: openapi_server.controllers.article_controller
  /api/Auth/login:
    post:
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
        description: Login Credentials
        required: true
        x-name: user
        x-position: 1
        x-body-name: body
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Authorizized with a new token or unauthorized request.
      summary: "Authenticate and provide token for autherizations.\n            "
      tags:
      - Auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
      x-codegen-request-body-name: body
  /api/Gym/{gymID}:
    get:
      operationId: gym_get
      parameters:
      - description: indentity number (primary key) for gym object
        explode: false
        in: path
        name: gymID
        required: true
        schema:
          format: int32
          type: integer
        style: simple
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfGymDTO'
          description: API Response with Gym entity
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: ""
      summary: "Get gym details\nThis will return all properties related to gym entity\n\
        \            "
      tags:
      - Gym
      x-openapi-router-controller: openapi_server.controllers.gym_controller
  /api/Membership:
    get:
      operationId: membership_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MemberDTO'
                type: array
          description: API Response with all Members entity as a list.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: ""
      security:
      - bearer: []
      summary: "Get all of the members details\nThis will return all properties related\
        \ to member entity\n            "
      tags:
      - Membership
      x-openapi-router-controller: openapi_server.controllers.membership_controller
    post:
      operationId: membership_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberDTO'
        description: member object
        required: true
        x-name: member
        x-position: 1
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: newly created member entity
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: ""
      summary: "Add new Member\n            "
      tags:
      - Membership
      x-openapi-router-controller: openapi_server.controllers.membership_controller
      x-codegen-request-body-name: body
  /api/Package:
    delete:
      operationId: package_delete
      parameters:
      - description: primary key of package entity
        explode: true
        in: query
        name: PackageId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfBoolean'
          description: "status 1  : success, status 404 : package not found, status\
            \ -2: package already in use "
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfString'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfString'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "Delete existing package\n            "
      tags:
      - Package
      x-openapi-router-controller: openapi_server.controllers.package_controller
    get:
      operationId: package_get
      parameters:
      - description: primary key of package entity
        explode: true
        in: query
        name: packageId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfPackageDTO'
          description: all the fields that related to the package
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfPackageDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "Get package details by packageId\n            "
      tags:
      - Package
      x-openapi-router-controller: openapi_server.controllers.package_controller
    post:
      operationId: package_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageDTO'
        description: package object
        required: true
        x-name: package
        x-position: 1
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: messageId that can use to get the status of import later on.!
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "Insert new package into the system\n            "
      tags:
      - Package
      x-openapi-router-controller: openapi_server.controllers.package_controller
      x-codegen-request-body-name: body
    put:
      operationId: package_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageDTO'
        description: package object
        required: true
        x-name: package
        x-position: 1
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO'
          description: messageId that can use to get the status of import later on.!
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "Update existing package by its ID\n            "
      tags:
      - Package
      x-openapi-router-controller: openapi_server.controllers.package_controller
      x-codegen-request-body-name: body
  /api/Package/Search:
    get:
      operationId: package_search
      parameters:
      - description: part of package name
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      - description: primary key of TL gym entity
        explode: true
        in: query
        name: gymId
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
        x-position: 2
      - description: filter package type.!-- default is 'all'
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: all
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: order by column.!-- invalid column will give internal server
          error
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: "1"
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: number of recode in result and default is 100. use negative numbers
          to order by desc
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
        x-position: 5
      - description: number of recodes to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
        x-position: 6
      - description: "active status active : 1, inactive : 2, all 3, deafult : 1"
        explode: true
        in: query
        name: activeStatus
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
        x-position: 7
      - description: Packge Category Id
        explode: true
        in: query
        name: categoryId
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
        x-position: 8
      - description: Start price of the price Range
        explode: true
        in: query
        name: startpPrice
        required: false
        schema:
          default: 0
          format: decimal
          type: number
        style: form
        x-position: 9
      - description: End Price of the price Range
        explode: true
        in: query
        name: endPrice
        required: false
        schema:
          default: 9999999
          format: decimal
          type: number
        style: form
        x-position: 10
      - description: "1 : MRM, 2 : Mobile "
        explode: true
        in: query
        name: requestSource
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
        x-position: 11
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DefaultResponseDTOOfPackageSearchDTO'
                type: array
          description: basic information of package entity
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfListOfPackageSearchDTO'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: "Search packages\n            "
      tags:
      - Package
      x-openapi-router-controller: openapi_server.controllers.package_controller
  /api/Package/UpdateStatus:
    put:
      operationId: package_update_status
      parameters:
      - description: package Id
        explode: true
        in: query
        name: packageId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      - description: "status : 1 activate, 2 : deactivate"
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
        x-position: 2
      - description: Status updated User
        explode: true
        in: query
        name: userName
        required: false
        schema:
          default: system
          nullable: true
          type: string
        style: form
        x-position: 3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfBoolean'
          description: "status 1 : success, status 404 : package not found, status\
            \ -2: package already in use "
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfString'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponseDTOOfString'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiException'
          description: ""
      summary: 'Status update of existing package '
      tags:
      - Package
      x-openapi-router-controller: openapi_server.controllers.package_controller
  /api/Status:
    get:
      operationId: status_get
      parameters:
      - description: respose of POST request
        explode: true
        in: query
        name: messageId
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageStatus'
          description: same response result will retrun with different status and
            messageText
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: ""
      summary: Get the current status of message
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /api/Test:
    get:
      operationId: test_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDTO'
          description: API Response with test objects as a list.
      summary: "Get the all Test objects.\n            "
      tags:
      - Test
      x-openapi-router-controller: openapi_server.controllers.test_controller
  /api/User:
    get:
      operationId: user_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: API Response with User entity
      summary: "Get all Users detail\nThis will return all properties related to User\
        \ entity\n            "
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /api/User/registerUser:
    post:
      operationId: user_register_user
      parameters:
      - description: "Indentity number(primary key) for user object. Generated in\
          \ DB table when inserting a record.\n            "
        explode: true
        in: query
        name: UserId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      - description: "Account number of the user.It can be any stakeholder of the\
          \ application.even can be a gym.\n            "
        explode: true
        in: query
        name: AccountNumber
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "If this user is a gym, then the gym number.\n            "
        explode: true
        in: query
        name: GymNumber
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Entity number that make a relationship with BOX API DB.\n  \
          \          "
        explode: true
        in: query
        name: ExternalEntityNumber
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Name of the user.\n            "
        explode: true
        in: query
        name: Name
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Unique number maintain by application to idenify user.\n   \
          \         "
        explode: true
        in: query
        name: Number
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "If Someone introduced this user to the system, then that user's\
          \ UserId.\n            "
        explode: true
        in: query
        name: IntroduceBy
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 7
      - description: "Gaurdian of the this user if he/she is under 18 years old.\n\
          \            "
        explode: true
        in: query
        name: Guardian
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 8
      - description: "Type of the user.\n            "
        explode: true
        in: query
        name: TypeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 9
      responses:
        "200":
          description: API Response
        "404":
          description: ""
      summary: "Register a new User\n            "
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /api/User/updateuser:
    put:
      operationId: user_update_user
      parameters:
      - description: "Indentity number(primary key) for user object. Generated in\
          \ DB table when inserting a record.\n            "
        explode: true
        in: query
        name: UserId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 1
      - description: "Account number of the user.It can be any stakeholder of the\
          \ application.even can be a gym.\n            "
        explode: true
        in: query
        name: AccountNumber
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 2
      - description: "If this user is a gym, then the gym number.\n            "
        explode: true
        in: query
        name: GymNumber
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 3
      - description: "Entity number that make a relationship with BOX API DB.\n  \
          \          "
        explode: true
        in: query
        name: ExternalEntityNumber
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 4
      - description: "Name of the user.\n            "
        explode: true
        in: query
        name: Name
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 5
      - description: "Unique number maintain by application to idenify user.\n   \
          \         "
        explode: true
        in: query
        name: Number
        required: false
        schema:
          nullable: true
          type: string
        style: form
        x-position: 6
      - description: "If Someone introduced this user to the system, then that user's\
          \ UserId.\n            "
        explode: true
        in: query
        name: IntroduceBy
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 7
      - description: "Gaurdian of the this user if he/she is under 18 years old.\n\
          \            "
        explode: true
        in: query
        name: Guardian
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 8
      - description: "Type of the user.\n            "
        explode: true
        in: query
        name: TypeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-position: 9
      responses:
        "200":
          description: API Response true or false
        "404":
          description: ""
      summary: "Update an exsisting User\n            "
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
components:
  schemas:
    ApiException:
      allOf:
      - $ref: '#/components/schemas/Exception'
      - additionalProperties: false
        properties:
          customError:
            nullable: true
          errors:
            items:
              $ref: '#/components/schemas/ValidationError'
            nullable: true
            type: array
          isCustomErrorObject:
            type: boolean
          isModelValidatonError:
            type: boolean
          referenceDocumentLink:
            nullable: true
            type: string
          referenceErrorCode:
            nullable: true
            type: string
          statusCode:
            format: int32
            type: integer
        type: object
      example:
        isCustomErrorObject: true
        Message: Message
        referenceErrorCode: referenceErrorCode
        StackTrace: StackTrace
        InnerException:
          Message: Message
          StackTrace: StackTrace
          InnerException: null
          Source: Source
        isModelValidatonError: true
        customError: ""
        Source: Source
        errors:
        - field: field
          message: message
        - field: field
          message: message
        referenceDocumentLink: referenceDocumentLink
        statusCode: 0
      title: ApiException
    ApiResponse:
      additionalProperties: false
      example:
        result: ""
        isError: true
        responseException: ""
        message: message
        version: version
        statusCode: 0
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          nullable: true
          title: result
        statusCode:
          format: int32
          title: statusCode
          type: integer
        version:
          nullable: true
          title: version
          type: string
      title: ApiResponse
      type: object
    ArticleDTO:
      additionalProperties: false
      description: "The ArticleDTO Class.\nContains relevant fields of Article DTO\
        \ by masking actual Article entity's fields in application.\n            "
      example:
        modifiedUser: modifiedUser
        description: description
        discount: 5.637376656633329
        isInventoryItem: true
        employeeDiscount: 2.3021358869347655
        type: type
        reorderLevel: 4.965218492984954
        number: 7
        sellingPrice: 9.965781217890562
        price: 1.1730742509559433
        availableQty: 5.962133916683182
        barcode: barcode
        availableGyms:
        - gymId: 1
          gymName: gymName
          externalGymNumber: 6
          location: location
        - gymId: 1
          gymName: gymName
          externalGymNumber: 6
          location: location
        createdUser: createdUser
        gymArticles:
        - gymIdList: gymIdList
          modifiedUser: modifiedUser
          gymName: gymName
          articleId: 9
          isInventoryItem: true
          isObsolete: true
          employeeDiscount: 2.027123023002322
          reorderLevel: 1.0246457001441578
          gymId: 7
          isDefault: true
          sellingPrice: 6.84685269835264
          availableQty: 3.616076749251911
          id: 1
          createdUser: createdUser
          revenueAccountId: 1
          employeePrice: 4.145608029883936
        - gymIdList: gymIdList
          modifiedUser: modifiedUser
          gymName: gymName
          articleId: 9
          isInventoryItem: true
          isObsolete: true
          employeeDiscount: 2.027123023002322
          reorderLevel: 1.0246457001441578
          gymId: 7
          isDefault: true
          sellingPrice: 6.84685269835264
          availableQty: 3.616076749251911
          id: 1
          createdUser: createdUser
          revenueAccountId: 1
          employeePrice: 4.145608029883936
        articleId: 0
        vat: 9.369310271410669
        measureUnit: measureUnit
        isObsolete: true
        tags: tags
        cronExpression: cronExpression
        createdDate: 2000-01-23T04:56:07.000+00:00
        activeStatus: true
        vatApplicable: true
        isAddOn: true
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        name: name
        applyForAllGyms: true
        revenueAccountId: 5
        employeePrice: 7.061401241503109
      properties:
        activeStatus:
          description: 'Active Status '
          title: activeStatus
          type: boolean
        applyForAllGyms:
          title: applyForAllGyms
          type: boolean
        articleId:
          format: int32
          title: articleId
          type: integer
        availableGyms:
          items:
            $ref: '#/components/schemas/GymDTO'
          title: availableGyms
          type: array
        availableQty:
          description: Default AvailableQty
          format: decimal
          title: availableQty
          type: number
        barcode:
          maxLength: 100
          minLength: 0
          nullable: true
          title: barcode
          type: string
        createdDate:
          format: date-time
          title: createdDate
          type: string
        createdUser:
          nullable: true
          title: createdUser
          type: string
        cronExpression:
          description: 'Access Schedule CRON Expression '
          nullable: true
          title: cronExpression
          type: string
        description:
          nullable: true
          title: description
          type: string
        discount:
          format: decimal
          pattern: "^\\d+.\\d{0,2}$|^\\d"
          title: discount
          type: number
        employeeDiscount:
          description: Default EmployeeDiscount
          format: decimal
          title: employeeDiscount
          type: number
        employeePrice:
          description: Default EmployeePrice
          format: decimal
          title: employeePrice
          type: number
        gymArticles:
          description: 'Gym Customizations '
          items:
            $ref: '#/components/schemas/GymArticleDetailsDTO'
          nullable: true
          title: gymArticles
          type: array
        isAddOn:
          title: isAddOn
          type: boolean
        isInventoryItem:
          description: 'Default IsInventoryItem of the Article '
          title: isInventoryItem
          type: boolean
        isObsolete:
          description: 'Default IsObsolete of the Article '
          title: isObsolete
          type: boolean
        measureUnit:
          minLength: 1
          title: measureUnit
          type: string
        modifiedDate:
          format: date-time
          title: modifiedDate
          type: string
        modifiedUser:
          nullable: true
          title: modifiedUser
          type: string
        name:
          maxLength: 100
          minLength: 0
          title: name
          type: string
        number:
          format: int32
          title: number
          type: integer
        price:
          format: decimal
          pattern: "^\\d+.\\d{0,2}$|^\\d"
          title: price
          type: number
        reorderLevel:
          description: Deafault ReorderLevel
          format: decimal
          title: reorderLevel
          type: number
        revenueAccountId:
          description: Default Revenue account
          format: int32
          title: revenueAccountId
          type: integer
        sellingPrice:
          description: Default SellingPrice
          format: decimal
          title: sellingPrice
          type: number
        tags:
          maxLength: 200
          minLength: 0
          nullable: true
          title: tags
          type: string
        type:
          minLength: 1
          pattern: item|service|access
          title: type
          type: string
        vat:
          format: decimal
          pattern: "^\\d+.\\d{0,2}$|^\\d"
          title: vat
          type: number
        vatApplicable:
          description: 'VAT Applicable '
          title: vatApplicable
          type: boolean
      required:
      - availableGyms
      - measureUnit
      - name
      - price
      - type
      title: ArticleDTO
      type: object
    ArticleSearchDTO:
      additionalProperties: false
      description: "The ArticleSearchDTO Class.\nContains relevant fields of ArticleSearch\
        \ DTO by masking actual Article entity's fields in application.\n        \
        \    "
      example:
        modifiedUser: modifiedUser
        articleId: 0
        description: description
        measureUnit: measureUnit
        totalCount: 5
        type: type
        tags: tags
        number: 6
        sellingPrice: 5.962133916683182
        createdDate: 2000-01-23T04:56:07.000+00:00
        activeStatus: true
        price: 1.4658129805029452
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        name: name
        applyForAllGyms: true
        createdUser: createdUser
      properties:
        activeStatus:
          description: 'Active Status '
          title: activeStatus
          type: boolean
        applyForAllGyms:
          title: applyForAllGyms
          type: boolean
        articleId:
          format: int32
          title: articleId
          type: integer
        createdDate:
          format: date-time
          title: createdDate
          type: string
        createdUser:
          nullable: true
          title: createdUser
          type: string
        description:
          nullable: true
          title: description
          type: string
        measureUnit:
          description: 'MeasureUnit '
          nullable: true
          title: measureUnit
          type: string
        modifiedDate:
          format: date-time
          title: modifiedDate
          type: string
        modifiedUser:
          nullable: true
          title: modifiedUser
          type: string
        name:
          nullable: true
          title: name
          type: string
        number:
          format: int32
          title: number
          type: integer
        price:
          format: decimal
          title: price
          type: number
        sellingPrice:
          description: 'Actual Selling price of the article '
          format: decimal
          title: sellingPrice
          type: number
        tags:
          nullable: true
          title: tags
          type: string
        totalCount:
          description: 'total number of recode for particular search '
          format: int32
          title: totalCount
          type: integer
        type:
          description: article type
          nullable: true
          title: type
          type: string
      title: ArticleSearchDTO
      type: object
    DefaultResponseDTOOfArticleDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
          modifiedUser: modifiedUser
          description: description
          discount: 5.637376656633329
          isInventoryItem: true
          employeeDiscount: 2.3021358869347655
          type: type
          reorderLevel: 4.965218492984954
          number: 7
          sellingPrice: 9.965781217890562
          price: 1.1730742509559433
          availableQty: 5.962133916683182
          barcode: barcode
          availableGyms:
          - gymId: 1
            gymName: gymName
            externalGymNumber: 6
            location: location
          - gymId: 1
            gymName: gymName
            externalGymNumber: 6
            location: location
          createdUser: createdUser
          gymArticles:
          - gymIdList: gymIdList
            modifiedUser: modifiedUser
            gymName: gymName
            articleId: 9
            isInventoryItem: true
            isObsolete: true
            employeeDiscount: 2.027123023002322
            reorderLevel: 1.0246457001441578
            gymId: 7
            isDefault: true
            sellingPrice: 6.84685269835264
            availableQty: 3.616076749251911
            id: 1
            createdUser: createdUser
            revenueAccountId: 1
            employeePrice: 4.145608029883936
          - gymIdList: gymIdList
            modifiedUser: modifiedUser
            gymName: gymName
            articleId: 9
            isInventoryItem: true
            isObsolete: true
            employeeDiscount: 2.027123023002322
            reorderLevel: 1.0246457001441578
            gymId: 7
            isDefault: true
            sellingPrice: 6.84685269835264
            availableQty: 3.616076749251911
            id: 1
            createdUser: createdUser
            revenueAccountId: 1
            employeePrice: 4.145608029883936
          articleId: 0
          vat: 9.369310271410669
          measureUnit: measureUnit
          isObsolete: true
          tags: tags
          cronExpression: cronExpression
          createdDate: 2000-01-23T04:56:07.000+00:00
          activeStatus: true
          vatApplicable: true
          isAddOn: true
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          name: name
          applyForAllGyms: true
          revenueAccountId: 5
          employeePrice: 7.061401241503109
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          $ref: '#/components/schemas/DefaultResponseDTOOfArticleDTO_result'
      title: DefaultResponseDTOOfArticleDTO
      type: object
    DefaultResponseDTOOfBoolean:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result: true
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          title: result
          type: boolean
      title: DefaultResponseDTOOfBoolean
      type: object
    DefaultResponseDTOOfGymDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
          gymId: 1
          gymName: gymName
          externalGymNumber: 6
          location: location
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          $ref: '#/components/schemas/DefaultResponseDTOOfGymDTO_result'
      title: DefaultResponseDTOOfGymDTO
      type: object
    DefaultResponseDTOOfInteger:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result: 0
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          format: int32
          title: result
          type: integer
      title: DefaultResponseDTOOfInteger
      type: object
    DefaultResponseDTOOfListOfArticleSearchDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
        - modifiedUser: modifiedUser
          articleId: 0
          description: description
          measureUnit: measureUnit
          totalCount: 5
          type: type
          tags: tags
          number: 6
          sellingPrice: 5.962133916683182
          createdDate: 2000-01-23T04:56:07.000+00:00
          activeStatus: true
          price: 1.4658129805029452
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          name: name
          applyForAllGyms: true
          createdUser: createdUser
        - modifiedUser: modifiedUser
          articleId: 0
          description: description
          measureUnit: measureUnit
          totalCount: 5
          type: type
          tags: tags
          number: 6
          sellingPrice: 5.962133916683182
          createdDate: 2000-01-23T04:56:07.000+00:00
          activeStatus: true
          price: 1.4658129805029452
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          name: name
          applyForAllGyms: true
          createdUser: createdUser
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          items:
            $ref: '#/components/schemas/ArticleSearchDTO'
          nullable: true
          title: result
          type: array
      title: DefaultResponseDTOOfListOfArticleSearchDTO
      type: object
    DefaultResponseDTOOfListOfPackageSearchDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
        - numberOfVisits: 5
          serviceFee: 3.616076749251911
          freeMonths: 1
          modifiedUser: modifiedUser
          memberCanRemoveAddOns: true
          registrationFee: 9.301444243932576
          totalPrice: 4.145608029883936
          packageId: 2
          description: description
          totalCount: 2
          packageType: packageType
          packageNumber: 7
          tags: tags
          bindingPeriod: 6
          features: features
          addonFee: 0.8008281904610115
          createdDate: 2000-01-23T04:56:07.000+00:00
          activeStatus: true
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          applyForAllGyms: true
          packageName: packageName
          createdUser: createdUser
          monthlyFee: 5.962133916683182
        - numberOfVisits: 5
          serviceFee: 3.616076749251911
          freeMonths: 1
          modifiedUser: modifiedUser
          memberCanRemoveAddOns: true
          registrationFee: 9.301444243932576
          totalPrice: 4.145608029883936
          packageId: 2
          description: description
          totalCount: 2
          packageType: packageType
          packageNumber: 7
          tags: tags
          bindingPeriod: 6
          features: features
          addonFee: 0.8008281904610115
          createdDate: 2000-01-23T04:56:07.000+00:00
          activeStatus: true
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          applyForAllGyms: true
          packageName: packageName
          createdUser: createdUser
          monthlyFee: 5.962133916683182
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          items:
            $ref: '#/components/schemas/PackageSearchDTO'
          nullable: true
          title: result
          type: array
      title: DefaultResponseDTOOfListOfPackageSearchDTO
      type: object
    DefaultResponseDTOOfPackageDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
          isShownInMobile: true
          modifiedUser: modifiedUser
          endDate: 2000-01-23T04:56:07.000+00:00
          memberCanRemoveAddOns: true
          totalPrice: 5.025004791520295
          description: description
          expireInMonths: 3
          isActive: true
          packageType: packageType
          packageNumber: packageNumber
          isAutoRenew: true
          bindingPeriod: 9
          features: features
          addonFee: 7.061401241503109
          maximumGiveAwayRestAmount: 4.145608029883936
          perVisitPrice: 7.457744773683766
          packageName: packageName
          instructionsToGymUsers: instructionsToGymUsers
          availableGyms:
          - gymId: 1
            gymName: gymName
            externalGymNumber: 6
            location: location
          - gymId: 1
            gymName: gymName
            externalGymNumber: 6
            location: location
          createdUser: createdUser
          monthlyFee: 7.386281948385884
          nextPackageNumber: 1
          isFirstMonthFree: true
          numberOfVisits: 1
          serviceFee: 4.965218492984954
          freeMonths: 2
          registrationFee: 1.1730742509559433
          addOns:
          - articleName: articleName
            endOrder: 5
            isIncludeServiceInCharge: true
            articleNumber: 6
            startOrder: 2
            numberOfItems: 5.637376656633329
            articleId: 0
            articlePrice: 1.4658129805029452
            measureUnit: measureUnit
          - articleName: articleName
            endOrder: 5
            isIncludeServiceInCharge: true
            articleNumber: 6
            startOrder: 2
            numberOfItems: 5.637376656633329
            articleId: 0
            articlePrice: 1.4658129805029452
            measureUnit: measureUnit
          packageId: 6
          isRegistrationFee: true
          isRestAmount: true
          isSponsorPackage: true
          tags: tags
          createdDate: 2000-01-23T04:56:07.000+00:00
          instructionsToWebUsers: instructionsToWebUsers
          numberOfInstallments: 1
          isAtg: true
          memberCanAddAddOns: true
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          memberCanLeaveWithinFreePeriod: true
          applyForAllGyms: true
          shownInWeb: true
          startDate: 2000-01-23T04:56:07.000+00:00
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          $ref: '#/components/schemas/DefaultResponseDTOOfPackageDTO_result'
      title: DefaultResponseDTOOfPackageDTO
      type: object
    DefaultResponseDTOOfPackageSearchDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
          numberOfVisits: 5
          serviceFee: 3.616076749251911
          freeMonths: 1
          modifiedUser: modifiedUser
          memberCanRemoveAddOns: true
          registrationFee: 9.301444243932576
          totalPrice: 4.145608029883936
          packageId: 2
          description: description
          totalCount: 2
          packageType: packageType
          packageNumber: 7
          tags: tags
          bindingPeriod: 6
          features: features
          addonFee: 0.8008281904610115
          createdDate: 2000-01-23T04:56:07.000+00:00
          activeStatus: true
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          applyForAllGyms: true
          packageName: packageName
          createdUser: createdUser
          monthlyFee: 5.962133916683182
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          $ref: '#/components/schemas/DefaultResponseDTOOfPackageSearchDTO_result'
      title: DefaultResponseDTOOfPackageSearchDTO
      type: object
    DefaultResponseDTOOfStatusDTO:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result:
          statusText: statusText
          messageId: messageId
          url: url
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          $ref: '#/components/schemas/DefaultResponseDTOOfStatusDTO_result'
      title: DefaultResponseDTOOfStatusDTO
      type: object
    DefaultResponseDTOOfString:
      additionalProperties: false
      description: "The DefaultResponseDTO Class.\nContains fields of DefaultResponse\
        \ DTO in application.\n            "
      example:
        result: result
        isError: true
        responseException: ""
        message: message
      properties:
        isError:
          title: isError
          type: boolean
        message:
          nullable: true
          title: message
          type: string
        responseException:
          nullable: true
          title: responseException
        result:
          nullable: true
          title: result
          type: string
      title: DefaultResponseDTOOfString
      type: object
    Exception:
      additionalProperties: false
      example:
        Message: Message
        StackTrace: StackTrace
        InnerException: null
        Source: Source
      properties:
        InnerException:
          $ref: '#/components/schemas/Exception_InnerException'
        Message:
          title: Message
          type: string
        Source:
          nullable: true
          title: Source
          type: string
        StackTrace:
          nullable: true
          title: StackTrace
          type: string
      title: Exception
      type: object
    GymArticleDetailsDTO:
      additionalProperties: false
      description: "The GymArticleDetailsDTO Class.\nContains fields of GymArticleDetails\
        \ DTO in application.\n            "
      example:
        gymIdList: gymIdList
        modifiedUser: modifiedUser
        gymName: gymName
        articleId: 9
        isInventoryItem: true
        isObsolete: true
        employeeDiscount: 2.027123023002322
        reorderLevel: 1.0246457001441578
        gymId: 7
        isDefault: true
        sellingPrice: 6.84685269835264
        availableQty: 3.616076749251911
        id: 1
        createdUser: createdUser
        revenueAccountId: 1
        employeePrice: 4.145608029883936
      properties:
        articleId:
          format: int32
          title: articleId
          type: integer
        availableQty:
          format: decimal
          title: availableQty
          type: number
        createdUser:
          description: 'Created User '
          nullable: true
          title: createdUser
          type: string
        employeeDiscount:
          format: decimal
          title: employeeDiscount
          type: number
        employeePrice:
          format: decimal
          title: employeePrice
          type: number
        gymId:
          description: 'Gym Id where article is related '
          format: int32
          title: gymId
          type: integer
        gymIdList:
          description: 'GymId - Gym Id string with comma separated GymIds '
          nullable: true
          title: gymIdList
          type: string
        gymName:
          description: Gym Name
          nullable: true
          title: gymName
          type: string
        id:
          format: int32
          title: id
          type: integer
        isDefault:
          description: 'Set as the default values for the article '
          title: isDefault
          type: boolean
        isInventoryItem:
          title: isInventoryItem
          type: boolean
        isObsolete:
          title: isObsolete
          type: boolean
        modifiedUser:
          description: Modified user
          nullable: true
          title: modifiedUser
          type: string
        reorderLevel:
          format: decimal
          title: reorderLevel
          type: number
        revenueAccountId:
          description: Revenue account Id
          format: int32
          title: revenueAccountId
          type: integer
        sellingPrice:
          format: decimal
          title: sellingPrice
          type: number
      title: GymArticleDetailsDTO
      type: object
    GymDTO:
      additionalProperties: false
      description: "The GymDTO Class.\nContains relevant fields of Gym DTO by masking\
        \ actual Gym entity's fields in application.\n            "
      example:
        gymId: 1
        gymName: gymName
        externalGymNumber: 6
        location: location
      properties:
        externalGymNumber:
          format: int32
          title: externalGymNumber
          type: integer
        gymId:
          format: int32
          title: gymId
          type: integer
        gymName:
          nullable: true
          title: gymName
          type: string
        location:
          nullable: true
          title: location
          type: string
      title: GymDTO
      type: object
    LoginDTO:
      additionalProperties: false
      description: "The LoginDTO Class.\nContains relevant fields of Login DTO.\n\
        \            "
      example:
        remember: true
        password: password
        username: username
      properties:
        password:
          nullable: true
          title: password
          type: string
        remember:
          title: remember
          type: boolean
        username:
          nullable: true
          title: username
          type: string
      title: LoginDTO
      type: object
    MeasureUnitDTO:
      additionalProperties: false
      description: 'Mesure unit to represent article mesure unit '
      example:
        name: name
        id: 0
        type: type
      properties:
        id:
          description: Id of the table
          format: int32
          title: id
          type: integer
        name:
          description: Mesure Unit Type
          nullable: true
          title: name
          type: string
        type:
          description: "Type of the article used with (all, service, item)"
          nullable: true
          title: type
          type: string
      title: MeasureUnitDTO
      type: object
    MemberDTO:
      additionalProperties: false
      description: "The MemeberDTO Class.\nContains relevant fields of Member DTO\
        \ by masking actual Member entity's fields in application.\n            "
      example:
        name: name
      properties:
        name:
          nullable: true
          title: name
          type: string
      title: MemberDTO
      type: object
    MessageStatus:
      additionalProperties: false
      example:
        statusId: 6
        statusText: statusText
        messageId: messageId
        source: ""
        referenceId: 0
      properties:
        messageId:
          nullable: true
          title: messageId
          type: string
        referenceId:
          format: int32
          title: referenceId
          type: integer
        source:
          nullable: true
          title: source
        statusId:
          format: int32
          title: statusId
          type: integer
        statusText:
          nullable: true
          title: statusText
          type: string
      title: MessageStatus
      type: object
    PackageDTO:
      additionalProperties: false
      description: "The PackageDTO Class.\nContains relevant fields of Package DTO\
        \ by masking actual Package entity's fields in application.\n            "
      example:
        isShownInMobile: true
        modifiedUser: modifiedUser
        endDate: 2000-01-23T04:56:07.000+00:00
        memberCanRemoveAddOns: true
        totalPrice: 5.025004791520295
        description: description
        expireInMonths: 3
        isActive: true
        packageType: packageType
        packageNumber: packageNumber
        isAutoRenew: true
        bindingPeriod: 9
        features: features
        addonFee: 7.061401241503109
        maximumGiveAwayRestAmount: 4.145608029883936
        perVisitPrice: 7.457744773683766
        packageName: packageName
        instructionsToGymUsers: instructionsToGymUsers
        availableGyms:
        - gymId: 1
          gymName: gymName
          externalGymNumber: 6
          location: location
        - gymId: 1
          gymName: gymName
          externalGymNumber: 6
          location: location
        createdUser: createdUser
        monthlyFee: 7.386281948385884
        nextPackageNumber: 1
        isFirstMonthFree: true
        numberOfVisits: 1
        serviceFee: 4.965218492984954
        freeMonths: 2
        registrationFee: 1.1730742509559433
        addOns:
        - articleName: articleName
          endOrder: 5
          isIncludeServiceInCharge: true
          articleNumber: 6
          startOrder: 2
          numberOfItems: 5.637376656633329
          articleId: 0
          articlePrice: 1.4658129805029452
          measureUnit: measureUnit
        - articleName: articleName
          endOrder: 5
          isIncludeServiceInCharge: true
          articleNumber: 6
          startOrder: 2
          numberOfItems: 5.637376656633329
          articleId: 0
          articlePrice: 1.4658129805029452
          measureUnit: measureUnit
        packageId: 6
        isRegistrationFee: true
        isRestAmount: true
        isSponsorPackage: true
        tags: tags
        createdDate: 2000-01-23T04:56:07.000+00:00
        instructionsToWebUsers: instructionsToWebUsers
        numberOfInstallments: 1
        isAtg: true
        memberCanAddAddOns: true
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        memberCanLeaveWithinFreePeriod: true
        applyForAllGyms: true
        shownInWeb: true
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        addOns:
          description: "Extra articles list added to the given package.\n        \
            \    "
          items:
            $ref: '#/components/schemas/PackageItemDTO'
          nullable: true
          title: addOns
          type: array
        addonFee:
          description: "sum of addon fees.\nincoming values for this filed will ignore.\n\
            \            "
          format: decimal
          title: addonFee
          type: number
        applyForAllGyms:
          description: "Boolean value to indicate wheather package is available in\
            \ all the gyms.\n            "
          title: applyForAllGyms
          type: boolean
        availableGyms:
          description: "Gyms list where this package is available.\n            "
          items:
            $ref: '#/components/schemas/GymDTO'
          nullable: true
          title: availableGyms
          type: array
        bindingPeriod:
          description: "Range of period a member is bound to the contract if he/she\
            \ choose this package.\n            "
          format: int32
          title: bindingPeriod
          type: integer
        createdDate:
          description: "Package created DateTime.\n            "
          format: date-time
          title: createdDate
          type: string
        createdUser:
          description: "Package created user.\n            "
          nullable: true
          title: createdUser
          type: string
        description:
          description: "Common descriptions about package.If there are more instructions\
            \ \n             can be stored as comma separated values.\n          \
            \  "
          nullable: true
          title: description
          type: string
        endDate:
          description: "End date of the package.After that package is not valid for\
            \ use.\n            "
          format: date-time
          title: endDate
          type: string
        expireInMonths:
          description: "No of months the fixed package is valid for sale\n       \
            \     "
          format: int32
          title: expireInMonths
          type: integer
        features:
          description: "What are the facilities, features available for package.ex:-\
            \ wifi,\nACm etc.Can be stored as comma seperated values.\n          \
            \  "
          nullable: true
          title: features
          type: string
        freeMonths:
          description: "No of months gym member can come without payments.\n     \
            \       "
          format: int32
          title: freeMonths
          type: integer
        instructionsToGymUsers:
          description: "Instruction to the gym members relevant to the package.\n\
            \             If there are more instructions can be stored as comma seperated\
            \ values.\n            "
          nullable: true
          title: instructionsToGymUsers
          type: string
        instructionsToWebUsers:
          description: "Instruction to the MRM members relevant to the package.\n\
            \             If there are more instructions can be stored as comma seperated\
            \ values.\n            "
          nullable: true
          title: instructionsToWebUsers
          type: string
        isActive:
          description: "Boolean value to indicate this package is still active or\
            \ not.\n            "
          title: isActive
          type: boolean
        isAtg:
          description: "Boolean value to indicate ATG transaction from bank is applicable\
            \ or not.\n            "
          title: isAtg
          type: boolean
        isAutoRenew:
          description: "Boolean value to indicate the contract will auto renew after\
            \ expiration \n             if this package would be chosen.\n       \
            \     "
          title: isAutoRenew
          type: boolean
        isFirstMonthFree:
          description: "Boolean value to indicate if the first month charges is free.\n\
            \            "
          title: isFirstMonthFree
          type: boolean
        isRegistrationFee:
          description: "Boolean value to indicate this package has registration fee\
            \ or not.\n            "
          title: isRegistrationFee
          type: boolean
        isRestAmount:
          description: "Boolean value to indicate rest amount is applicable or not.\n\
            \            "
          title: isRestAmount
          type: boolean
        isShownInMobile:
          description: "Boolean value to indicate package is visible in Mobile App\
            \ or not.\n            "
          title: isShownInMobile
          type: boolean
        isSponsorPackage:
          description: "Boolean value to indicate package can be sponsored or not\
            \ by other party.\n            "
          title: isSponsorPackage
          type: boolean
        maximumGiveAwayRestAmount:
          description: "If a member join the gym middle of a month via this package,\
            \ \n             what is the maximum amount of price can be neglected\
            \ from payment from the member.\n            "
          format: decimal
          title: maximumGiveAwayRestAmount
          type: number
        memberCanAddAddOns:
          description: "Boolean value to indicate member can add extra addons he wish\
            \ if he choose this package.\n            "
          title: memberCanAddAddOns
          type: boolean
        memberCanLeaveWithinFreePeriod:
          description: "Boolean value to indicate if member can leave from contract\
            \ within \n             free period if he/she choose this package.\n \
            \           "
          title: memberCanLeaveWithinFreePeriod
          type: boolean
        memberCanRemoveAddOns:
          description: "Boolean value to indicate member can remove already added\
            \ addons if he choose this package.\n            "
          title: memberCanRemoveAddOns
          type: boolean
        modifiedDate:
          description: "Package last modified DateTime.\n            "
          format: date-time
          title: modifiedDate
          type: string
        modifiedUser:
          description: "Package last modified user.\n            "
          nullable: true
          title: modifiedUser
          type: string
        monthlyFee:
          description: "Monthly installment fee if package is not fixed visit.\naddition\
            \ of the servicefee and addon fees divided by binding period.\n      \
            \       read only\n            "
          format: decimal
          title: monthlyFee
          type: number
        nextPackageNumber:
          description: "Next Package the contract continue after the binding period\
            \ of this package.\n            "
          format: int32
          title: nextPackageNumber
          type: integer
        numberOfInstallments:
          description: "Maximum Number of installment a member can divide the package\
            \ price/cost to pay.\n            "
          format: int32
          title: numberOfInstallments
          type: integer
        numberOfVisits:
          description: "If package is fixed visit type, then how many visits are available\
            \ for this package.\n            "
          format: int32
          title: numberOfVisits
          type: integer
        packageId:
          format: int32
          title: packageId
          type: integer
        packageName:
          minLength: 1
          title: packageName
          type: string
        packageNumber:
          nullable: true
          title: packageNumber
          type: string
        packageType:
          description: "Package type can be either fixed visit or unlimited.\n   \
            \         "
          minLength: 1
          pattern: fixedvisit|unlimited
          title: packageType
          type: string
        perVisitPrice:
          description: "Cost/Price of the single visit to gym.\n            "
          format: decimal
          title: perVisitPrice
          type: number
        registrationFee:
          description: "Registartion fee for the package at a gym.\n             read\
            \ only\n            "
          format: decimal
          title: registrationFee
          type: number
        serviceFee:
          description: "total Service charge of the package for entire period.\n \
            \           "
          format: decimal
          title: serviceFee
          type: number
        shownInWeb:
          description: "Boolean value to show this package in MRM system or not.\n\
            \            "
          title: shownInWeb
          type: boolean
        startDate:
          description: "Start date of the package.\n            "
          format: date-time
          title: startDate
          type: string
        tags:
          description: "Comma separated string values in case of need of maintain\
            \ some labels kind of \n             stuff relevant to the package.\n\
            \            "
          nullable: true
          title: tags
          type: string
        totalPrice:
          description: "total price for the package including Addon fees, service\
            \ fee and registration fee.\nincoming values for this field will ignore.\n\
            \            "
          format: decimal
          title: totalPrice
          type: number
      required:
      - packageName
      - packageType
      - registrationFee
      - serviceFee
      title: PackageDTO
      type: object
    PackageItemDTO:
      additionalProperties: false
      description: "The PackageItemDTO Class.\nContains relevant fields of PackageItem\
        \ DTO by masking actual Package entity's fields in application.\n        \
        \    "
      example:
        articleName: articleName
        endOrder: 5
        isIncludeServiceInCharge: true
        articleNumber: 6
        startOrder: 2
        numberOfItems: 5.637376656633329
        articleId: 0
        articlePrice: 1.4658129805029452
        measureUnit: measureUnit
      properties:
        articleId:
          description: "Refer to ArticleId in Article table in DB.\n            "
          format: int32
          title: articleId
          type: integer
        articleName:
          description: "Name of the article(Addon) in a particular package.\n    \
            \         read only\n            "
          nullable: true
          title: articleName
          type: string
        articleNumber:
          description: "Number assigned the article(Addon) in a particular package.\n\
            \             read only\n            "
          format: int32
          title: articleNumber
          type: integer
        articlePrice:
          description: "Price of the article determined from that package.\nPrice\
            \ of a same article can be varied from package to package.\n         \
            \   "
          format: decimal
          title: articlePrice
          type: number
        endOrder:
          description: "Number of the installment this article is available to.\n\
            \            "
          format: int32
          title: endOrder
          type: integer
        isIncludeServiceInCharge:
          description: 'Is Included in service charge '
          title: isIncludeServiceInCharge
          type: boolean
        measureUnit:
          nullable: true
          title: measureUnit
          type: string
        numberOfItems:
          description: "How many article(Addon) is available for that package from\
            \ that type.\n            "
          format: decimal
          title: numberOfItems
          type: number
        startOrder:
          description: "Number of the installment this article is available from.\n\
            \            "
          format: int32
          title: startOrder
          type: integer
      required:
      - articleId
      title: PackageItemDTO
      type: object
    PackageSearchDTO:
      additionalProperties: false
      description: "The PackageSearchDTO Class.\nContains relevant fields of PackageSearch\
        \ DTO by masking actual Package entity's fields in application.\n        \
        \       "
      example:
        numberOfVisits: 5
        serviceFee: 3.616076749251911
        freeMonths: 1
        modifiedUser: modifiedUser
        memberCanRemoveAddOns: true
        registrationFee: 9.301444243932576
        totalPrice: 4.145608029883936
        packageId: 2
        description: description
        totalCount: 2
        packageType: packageType
        packageNumber: 7
        tags: tags
        bindingPeriod: 6
        features: features
        addonFee: 0.8008281904610115
        createdDate: 2000-01-23T04:56:07.000+00:00
        activeStatus: true
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        applyForAllGyms: true
        packageName: packageName
        createdUser: createdUser
        monthlyFee: 5.962133916683182
      properties:
        activeStatus:
          description: 'Active Status '
          title: activeStatus
          type: boolean
        addonFee:
          description: "sum of addon fees.\nincoming values for this filed will ignore.\n\
            \            "
          format: decimal
          title: addonFee
          type: number
        applyForAllGyms:
          description: "Boolean value to indicate wheather package is available in\
            \ all the gyms.\n            "
          title: applyForAllGyms
          type: boolean
        bindingPeriod:
          description: "Range of period a member is bound to the contract if he/she\
            \ choose this package.\n            "
          format: int32
          title: bindingPeriod
          type: integer
        createdDate:
          description: "Package created DateTime.\n            "
          format: date-time
          title: createdDate
          type: string
        createdUser:
          description: "Package created user.\n            "
          nullable: true
          title: createdUser
          type: string
        description:
          description: "Common descriptions about package.If there are more instructions\
            \ can be stored as comma separated values.\n            "
          nullable: true
          title: description
          type: string
        features:
          description: "What are the facilities, features available for package.ex:-\
            \ wifi, ACm etc.Can be stored as comma seperated values.\n            "
          nullable: true
          title: features
          type: string
        freeMonths:
          description: "No of months gym member can come without payments.\n     \
            \       "
          format: int32
          title: freeMonths
          type: integer
        memberCanRemoveAddOns:
          description: "Boolean value to indicate member can remove already added\
            \ addons if he choose this package.\n            "
          title: memberCanRemoveAddOns
          type: boolean
        modifiedDate:
          description: "Package last modified DateTime.\n            "
          format: date-time
          title: modifiedDate
          type: string
        modifiedUser:
          description: "Package last modified user.\n            "
          nullable: true
          title: modifiedUser
          type: string
        monthlyFee:
          description: "Monthly installment fee if package is not fixed visit.\naddition\
            \ of the servicefee and addon fees divided by binding period.\n      \
            \      "
          format: decimal
          title: monthlyFee
          type: number
        numberOfVisits:
          description: 'No of visits for fixed package '
          format: int32
          title: numberOfVisits
          type: integer
        packageId:
          format: int32
          title: packageId
          type: integer
        packageName:
          nullable: true
          title: packageName
          type: string
        packageNumber:
          format: int32
          title: packageNumber
          type: integer
        packageType:
          description: "Package type can be either fixed visit or unlimited.\n   \
            \         "
          nullable: true
          title: packageType
          type: string
        registrationFee:
          description: "Registartion fee for the package at a gym.\n            "
          format: decimal
          title: registrationFee
          type: number
        serviceFee:
          description: "total Service charge of the package for entire period.\n \
            \           "
          format: decimal
          title: serviceFee
          type: number
        tags:
          description: "Comma separated string values in case of need of maintain\
            \ some labels kind of stuff relevant to the package.\n            "
          nullable: true
          title: tags
          type: string
        totalCount:
          description: 'total number of recode for particular search '
          format: int32
          title: totalCount
          type: integer
        totalPrice:
          description: "total price for the package including Addon fees, service\
            \ fee and registration fee.\nincoming values for this field will ignore.\n\
            \            "
          format: decimal
          title: totalPrice
          type: number
      title: PackageSearchDTO
      type: object
    ProblemDetails:
      additionalProperties: false
      example:
        extensions:
          key: ""
        instance: instance
        detail: detail
        title: title
        type: type
        status: 0
      properties:
        detail:
          nullable: true
          title: detail
          type: string
        extensions:
          additionalProperties: {}
          nullable: true
          title: extensions
          type: object
        instance:
          nullable: true
          title: instance
          type: string
        status:
          format: int32
          nullable: true
          title: status
          type: integer
        title:
          nullable: true
          title: title
          type: string
        type:
          nullable: true
          title: type
          type: string
      title: ProblemDetails
      type: object
    StatusDTO:
      additionalProperties: false
      description: "Imideate response for long running api call.\n            "
      example:
        statusText: statusText
        messageId: messageId
        url: url
      properties:
        messageId:
          description: "Reference id for status endpoint\n            "
          nullable: true
          title: messageId
          type: string
        statusText:
          description: "Status of API Call\n            "
          nullable: true
          title: statusText
          type: string
        url:
          description: "Relative url for stauts check\n            "
          nullable: true
          title: url
          type: string
      title: StatusDTO
      type: object
    TestDTO:
      additionalProperties: false
      description: "The TestDTO Class.\nContains relevant fields of Test DTO by masking\
        \ actual Test entity's fields in application.\n            "
      example:
        id: 0
      properties:
        id:
          description: "Id of the Test object\n            "
          format: int32
          title: id
          type: integer
      title: TestDTO
      type: object
    UserDTO:
      additionalProperties: false
      description: "The UserDTO Class.\nContains relevant fields of User DTO by masking\
        \ actual User entity's fields in application.\n            "
      example:
        number: number
        name: name
        typeId: 1
        accountNumber: accountNumber
        guardian: 0
        externalEntityNumber: externalEntityNumber
        introduceBy: 6
        userId: 5
        gymNumber: gymNumber
      properties:
        accountNumber:
          description: "Account number of the user.It can be any stakeholder of the\
            \ application.even can be a gym.\n            "
          nullable: true
          title: accountNumber
          type: string
        externalEntityNumber:
          description: "Entity number that make a relationship with BOX API DB.\n\
            \            "
          nullable: true
          title: externalEntityNumber
          type: string
        guardian:
          description: "Gaurdian of the this user if he/she is under 18 years old.\n\
            \            "
          format: int32
          title: guardian
          type: integer
        gymNumber:
          description: "If this user is a gym, then the gym number.\n            "
          nullable: true
          title: gymNumber
          type: string
        introduceBy:
          description: "If Someone introduced this user to the system, then that user's\
            \ UserId.\n            "
          format: int32
          title: introduceBy
          type: integer
        name:
          description: "Name of the user.\n            "
          nullable: true
          title: name
          type: string
        number:
          description: "Unique number maintain by application to idenify user.\n \
            \           "
          nullable: true
          title: number
          type: string
        typeId:
          description: "Type of the user.\n            "
          format: int32
          title: typeId
          type: integer
        userId:
          description: "Indentity number(primary key) for user object. Generated in\
            \ DB table when inserting a record.\n            "
          format: int32
          title: userId
          type: integer
      title: UserDTO
      type: object
    ValidationError:
      additionalProperties: false
      example:
        field: field
        message: message
      properties:
        field:
          nullable: true
          title: field
          type: string
        message:
          nullable: true
          title: message
          type: string
      title: ValidationError
      type: object
    DefaultResponseDTOOfArticleDTO_result:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/ArticleDTO'
      title: DefaultResponseDTOOfArticleDTO_result
    DefaultResponseDTOOfGymDTO_result:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/GymDTO'
      title: DefaultResponseDTOOfGymDTO_result
    DefaultResponseDTOOfPackageDTO_result:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/PackageDTO'
      title: DefaultResponseDTOOfPackageDTO_result
    DefaultResponseDTOOfPackageSearchDTO_result:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/PackageSearchDTO'
      title: DefaultResponseDTOOfPackageSearchDTO_result
    DefaultResponseDTOOfStatusDTO_result:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/StatusDTO'
      title: DefaultResponseDTOOfStatusDTO_result
    Exception_InnerException:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/Exception'
      title: Exception_InnerException
  securitySchemes:
    apikey:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apikey
    bearer:
      description: auth0 authentication
      flows:
        authorizationCode:
          authorizationUrl: https://tldev.eu.auth0.com/authorize
          scopes:
            read:tl_articles: read:tl_articles
            read:tl_packages: read:tl_packages
          tokenUrl: https://tldev.eu.auth0.com/oauth/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_bearer
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_bearer
x-generator: NSwag v13.4.2.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0))
