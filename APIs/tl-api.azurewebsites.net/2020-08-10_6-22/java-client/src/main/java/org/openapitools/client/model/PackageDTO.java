/*
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GymDTO;
import org.openapitools.client.model.PackageItemDTO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The PackageDTO Class. Contains relevant fields of Package DTO by masking actual Package entity&#39;s fields in application.             
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:59:23.711288-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PackageDTO {
  public static final String SERIALIZED_NAME_ADD_ONS = "addOns";
  @SerializedName(SERIALIZED_NAME_ADD_ONS)
  private List<PackageItemDTO> addOns;

  public static final String SERIALIZED_NAME_ADDON_FEE = "addonFee";
  @SerializedName(SERIALIZED_NAME_ADDON_FEE)
  private BigDecimal addonFee;

  public static final String SERIALIZED_NAME_APPLY_FOR_ALL_GYMS = "applyForAllGyms";
  @SerializedName(SERIALIZED_NAME_APPLY_FOR_ALL_GYMS)
  private Boolean applyForAllGyms;

  public static final String SERIALIZED_NAME_AVAILABLE_GYMS = "availableGyms";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_GYMS)
  private List<GymDTO> availableGyms;

  public static final String SERIALIZED_NAME_BINDING_PERIOD = "bindingPeriod";
  @SerializedName(SERIALIZED_NAME_BINDING_PERIOD)
  private Integer bindingPeriod;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_CREATED_USER = "createdUser";
  @SerializedName(SERIALIZED_NAME_CREATED_USER)
  private String createdUser;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_EXPIRE_IN_MONTHS = "expireInMonths";
  @SerializedName(SERIALIZED_NAME_EXPIRE_IN_MONTHS)
  private Integer expireInMonths;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private String features;

  public static final String SERIALIZED_NAME_FREE_MONTHS = "freeMonths";
  @SerializedName(SERIALIZED_NAME_FREE_MONTHS)
  private Integer freeMonths;

  public static final String SERIALIZED_NAME_INSTRUCTIONS_TO_GYM_USERS = "instructionsToGymUsers";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONS_TO_GYM_USERS)
  private String instructionsToGymUsers;

  public static final String SERIALIZED_NAME_INSTRUCTIONS_TO_WEB_USERS = "instructionsToWebUsers";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONS_TO_WEB_USERS)
  private String instructionsToWebUsers;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_ATG = "isAtg";
  @SerializedName(SERIALIZED_NAME_IS_ATG)
  private Boolean isAtg;

  public static final String SERIALIZED_NAME_IS_AUTO_RENEW = "isAutoRenew";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_RENEW)
  private Boolean isAutoRenew;

  public static final String SERIALIZED_NAME_IS_FIRST_MONTH_FREE = "isFirstMonthFree";
  @SerializedName(SERIALIZED_NAME_IS_FIRST_MONTH_FREE)
  private Boolean isFirstMonthFree;

  public static final String SERIALIZED_NAME_IS_REGISTRATION_FEE = "isRegistrationFee";
  @SerializedName(SERIALIZED_NAME_IS_REGISTRATION_FEE)
  private Boolean isRegistrationFee;

  public static final String SERIALIZED_NAME_IS_REST_AMOUNT = "isRestAmount";
  @SerializedName(SERIALIZED_NAME_IS_REST_AMOUNT)
  private Boolean isRestAmount;

  public static final String SERIALIZED_NAME_IS_SHOWN_IN_MOBILE = "isShownInMobile";
  @SerializedName(SERIALIZED_NAME_IS_SHOWN_IN_MOBILE)
  private Boolean isShownInMobile;

  public static final String SERIALIZED_NAME_IS_SPONSOR_PACKAGE = "isSponsorPackage";
  @SerializedName(SERIALIZED_NAME_IS_SPONSOR_PACKAGE)
  private Boolean isSponsorPackage;

  public static final String SERIALIZED_NAME_MAXIMUM_GIVE_AWAY_REST_AMOUNT = "maximumGiveAwayRestAmount";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_GIVE_AWAY_REST_AMOUNT)
  private BigDecimal maximumGiveAwayRestAmount;

  public static final String SERIALIZED_NAME_MEMBER_CAN_ADD_ADD_ONS = "memberCanAddAddOns";
  @SerializedName(SERIALIZED_NAME_MEMBER_CAN_ADD_ADD_ONS)
  private Boolean memberCanAddAddOns;

  public static final String SERIALIZED_NAME_MEMBER_CAN_LEAVE_WITHIN_FREE_PERIOD = "memberCanLeaveWithinFreePeriod";
  @SerializedName(SERIALIZED_NAME_MEMBER_CAN_LEAVE_WITHIN_FREE_PERIOD)
  private Boolean memberCanLeaveWithinFreePeriod;

  public static final String SERIALIZED_NAME_MEMBER_CAN_REMOVE_ADD_ONS = "memberCanRemoveAddOns";
  @SerializedName(SERIALIZED_NAME_MEMBER_CAN_REMOVE_ADD_ONS)
  private Boolean memberCanRemoveAddOns;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_MODIFIED_USER = "modifiedUser";
  @SerializedName(SERIALIZED_NAME_MODIFIED_USER)
  private String modifiedUser;

  public static final String SERIALIZED_NAME_MONTHLY_FEE = "monthlyFee";
  @SerializedName(SERIALIZED_NAME_MONTHLY_FEE)
  private BigDecimal monthlyFee;

  public static final String SERIALIZED_NAME_NEXT_PACKAGE_NUMBER = "nextPackageNumber";
  @SerializedName(SERIALIZED_NAME_NEXT_PACKAGE_NUMBER)
  private Integer nextPackageNumber;

  public static final String SERIALIZED_NAME_NUMBER_OF_INSTALLMENTS = "numberOfInstallments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_INSTALLMENTS)
  private Integer numberOfInstallments;

  public static final String SERIALIZED_NAME_NUMBER_OF_VISITS = "numberOfVisits";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_VISITS)
  private Integer numberOfVisits;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private Integer packageId;

  public static final String SERIALIZED_NAME_PACKAGE_NAME = "packageName";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NAME)
  private String packageName;

  public static final String SERIALIZED_NAME_PACKAGE_NUMBER = "packageNumber";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NUMBER)
  private String packageNumber;

  public static final String SERIALIZED_NAME_PACKAGE_TYPE = "packageType";
  @SerializedName(SERIALIZED_NAME_PACKAGE_TYPE)
  private String packageType;

  public static final String SERIALIZED_NAME_PER_VISIT_PRICE = "perVisitPrice";
  @SerializedName(SERIALIZED_NAME_PER_VISIT_PRICE)
  private BigDecimal perVisitPrice;

  public static final String SERIALIZED_NAME_REGISTRATION_FEE = "registrationFee";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_FEE)
  private BigDecimal registrationFee;

  public static final String SERIALIZED_NAME_SERVICE_FEE = "serviceFee";
  @SerializedName(SERIALIZED_NAME_SERVICE_FEE)
  private BigDecimal serviceFee;

  public static final String SERIALIZED_NAME_SHOWN_IN_WEB = "shownInWeb";
  @SerializedName(SERIALIZED_NAME_SHOWN_IN_WEB)
  private Boolean shownInWeb;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "totalPrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private BigDecimal totalPrice;

  public PackageDTO() {
  }

  public PackageDTO addOns(List<PackageItemDTO> addOns) {
    this.addOns = addOns;
    return this;
  }

  public PackageDTO addAddOnsItem(PackageItemDTO addOnsItem) {
    if (this.addOns == null) {
      this.addOns = new ArrayList<>();
    }
    this.addOns.add(addOnsItem);
    return this;
  }

  /**
   * Extra articles list added to the given package.             
   * @return addOns
   */
  @javax.annotation.Nullable
  public List<PackageItemDTO> getAddOns() {
    return addOns;
  }

  public void setAddOns(List<PackageItemDTO> addOns) {
    this.addOns = addOns;
  }


  public PackageDTO addonFee(BigDecimal addonFee) {
    this.addonFee = addonFee;
    return this;
  }

  /**
   * sum of addon fees. incoming values for this filed will ignore.             
   * @return addonFee
   */
  @javax.annotation.Nullable
  public BigDecimal getAddonFee() {
    return addonFee;
  }

  public void setAddonFee(BigDecimal addonFee) {
    this.addonFee = addonFee;
  }


  public PackageDTO applyForAllGyms(Boolean applyForAllGyms) {
    this.applyForAllGyms = applyForAllGyms;
    return this;
  }

  /**
   * Boolean value to indicate wheather package is available in all the gyms.             
   * @return applyForAllGyms
   */
  @javax.annotation.Nullable
  public Boolean getApplyForAllGyms() {
    return applyForAllGyms;
  }

  public void setApplyForAllGyms(Boolean applyForAllGyms) {
    this.applyForAllGyms = applyForAllGyms;
  }


  public PackageDTO availableGyms(List<GymDTO> availableGyms) {
    this.availableGyms = availableGyms;
    return this;
  }

  public PackageDTO addAvailableGymsItem(GymDTO availableGymsItem) {
    if (this.availableGyms == null) {
      this.availableGyms = new ArrayList<>();
    }
    this.availableGyms.add(availableGymsItem);
    return this;
  }

  /**
   * Gyms list where this package is available.             
   * @return availableGyms
   */
  @javax.annotation.Nullable
  public List<GymDTO> getAvailableGyms() {
    return availableGyms;
  }

  public void setAvailableGyms(List<GymDTO> availableGyms) {
    this.availableGyms = availableGyms;
  }


  public PackageDTO bindingPeriod(Integer bindingPeriod) {
    this.bindingPeriod = bindingPeriod;
    return this;
  }

  /**
   * Range of period a member is bound to the contract if he/she choose this package.             
   * @return bindingPeriod
   */
  @javax.annotation.Nullable
  public Integer getBindingPeriod() {
    return bindingPeriod;
  }

  public void setBindingPeriod(Integer bindingPeriod) {
    this.bindingPeriod = bindingPeriod;
  }


  public PackageDTO createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Package created DateTime.             
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public PackageDTO createdUser(String createdUser) {
    this.createdUser = createdUser;
    return this;
  }

  /**
   * Package created user.             
   * @return createdUser
   */
  @javax.annotation.Nullable
  public String getCreatedUser() {
    return createdUser;
  }

  public void setCreatedUser(String createdUser) {
    this.createdUser = createdUser;
  }


  public PackageDTO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Common descriptions about package.If there are more instructions               can be stored as comma separated values.             
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PackageDTO endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * End date of the package.After that package is not valid for use.             
   * @return endDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public PackageDTO expireInMonths(Integer expireInMonths) {
    this.expireInMonths = expireInMonths;
    return this;
  }

  /**
   * No of months the fixed package is valid for sale             
   * @return expireInMonths
   */
  @javax.annotation.Nullable
  public Integer getExpireInMonths() {
    return expireInMonths;
  }

  public void setExpireInMonths(Integer expireInMonths) {
    this.expireInMonths = expireInMonths;
  }


  public PackageDTO features(String features) {
    this.features = features;
    return this;
  }

  /**
   * What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.             
   * @return features
   */
  @javax.annotation.Nullable
  public String getFeatures() {
    return features;
  }

  public void setFeatures(String features) {
    this.features = features;
  }


  public PackageDTO freeMonths(Integer freeMonths) {
    this.freeMonths = freeMonths;
    return this;
  }

  /**
   * No of months gym member can come without payments.             
   * @return freeMonths
   */
  @javax.annotation.Nullable
  public Integer getFreeMonths() {
    return freeMonths;
  }

  public void setFreeMonths(Integer freeMonths) {
    this.freeMonths = freeMonths;
  }


  public PackageDTO instructionsToGymUsers(String instructionsToGymUsers) {
    this.instructionsToGymUsers = instructionsToGymUsers;
    return this;
  }

  /**
   * Instruction to the gym members relevant to the package.              If there are more instructions can be stored as comma seperated values.             
   * @return instructionsToGymUsers
   */
  @javax.annotation.Nullable
  public String getInstructionsToGymUsers() {
    return instructionsToGymUsers;
  }

  public void setInstructionsToGymUsers(String instructionsToGymUsers) {
    this.instructionsToGymUsers = instructionsToGymUsers;
  }


  public PackageDTO instructionsToWebUsers(String instructionsToWebUsers) {
    this.instructionsToWebUsers = instructionsToWebUsers;
    return this;
  }

  /**
   * Instruction to the MRM members relevant to the package.              If there are more instructions can be stored as comma seperated values.             
   * @return instructionsToWebUsers
   */
  @javax.annotation.Nullable
  public String getInstructionsToWebUsers() {
    return instructionsToWebUsers;
  }

  public void setInstructionsToWebUsers(String instructionsToWebUsers) {
    this.instructionsToWebUsers = instructionsToWebUsers;
  }


  public PackageDTO isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Boolean value to indicate this package is still active or not.             
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public PackageDTO isAtg(Boolean isAtg) {
    this.isAtg = isAtg;
    return this;
  }

  /**
   * Boolean value to indicate ATG transaction from bank is applicable or not.             
   * @return isAtg
   */
  @javax.annotation.Nullable
  public Boolean getIsAtg() {
    return isAtg;
  }

  public void setIsAtg(Boolean isAtg) {
    this.isAtg = isAtg;
  }


  public PackageDTO isAutoRenew(Boolean isAutoRenew) {
    this.isAutoRenew = isAutoRenew;
    return this;
  }

  /**
   * Boolean value to indicate the contract will auto renew after expiration               if this package would be chosen.             
   * @return isAutoRenew
   */
  @javax.annotation.Nullable
  public Boolean getIsAutoRenew() {
    return isAutoRenew;
  }

  public void setIsAutoRenew(Boolean isAutoRenew) {
    this.isAutoRenew = isAutoRenew;
  }


  public PackageDTO isFirstMonthFree(Boolean isFirstMonthFree) {
    this.isFirstMonthFree = isFirstMonthFree;
    return this;
  }

  /**
   * Boolean value to indicate if the first month charges is free.             
   * @return isFirstMonthFree
   */
  @javax.annotation.Nullable
  public Boolean getIsFirstMonthFree() {
    return isFirstMonthFree;
  }

  public void setIsFirstMonthFree(Boolean isFirstMonthFree) {
    this.isFirstMonthFree = isFirstMonthFree;
  }


  public PackageDTO isRegistrationFee(Boolean isRegistrationFee) {
    this.isRegistrationFee = isRegistrationFee;
    return this;
  }

  /**
   * Boolean value to indicate this package has registration fee or not.             
   * @return isRegistrationFee
   */
  @javax.annotation.Nullable
  public Boolean getIsRegistrationFee() {
    return isRegistrationFee;
  }

  public void setIsRegistrationFee(Boolean isRegistrationFee) {
    this.isRegistrationFee = isRegistrationFee;
  }


  public PackageDTO isRestAmount(Boolean isRestAmount) {
    this.isRestAmount = isRestAmount;
    return this;
  }

  /**
   * Boolean value to indicate rest amount is applicable or not.             
   * @return isRestAmount
   */
  @javax.annotation.Nullable
  public Boolean getIsRestAmount() {
    return isRestAmount;
  }

  public void setIsRestAmount(Boolean isRestAmount) {
    this.isRestAmount = isRestAmount;
  }


  public PackageDTO isShownInMobile(Boolean isShownInMobile) {
    this.isShownInMobile = isShownInMobile;
    return this;
  }

  /**
   * Boolean value to indicate package is visible in Mobile App or not.             
   * @return isShownInMobile
   */
  @javax.annotation.Nullable
  public Boolean getIsShownInMobile() {
    return isShownInMobile;
  }

  public void setIsShownInMobile(Boolean isShownInMobile) {
    this.isShownInMobile = isShownInMobile;
  }


  public PackageDTO isSponsorPackage(Boolean isSponsorPackage) {
    this.isSponsorPackage = isSponsorPackage;
    return this;
  }

  /**
   * Boolean value to indicate package can be sponsored or not by other party.             
   * @return isSponsorPackage
   */
  @javax.annotation.Nullable
  public Boolean getIsSponsorPackage() {
    return isSponsorPackage;
  }

  public void setIsSponsorPackage(Boolean isSponsorPackage) {
    this.isSponsorPackage = isSponsorPackage;
  }


  public PackageDTO maximumGiveAwayRestAmount(BigDecimal maximumGiveAwayRestAmount) {
    this.maximumGiveAwayRestAmount = maximumGiveAwayRestAmount;
    return this;
  }

  /**
   * If a member join the gym middle of a month via this package,               what is the maximum amount of price can be neglected from payment from the member.             
   * @return maximumGiveAwayRestAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getMaximumGiveAwayRestAmount() {
    return maximumGiveAwayRestAmount;
  }

  public void setMaximumGiveAwayRestAmount(BigDecimal maximumGiveAwayRestAmount) {
    this.maximumGiveAwayRestAmount = maximumGiveAwayRestAmount;
  }


  public PackageDTO memberCanAddAddOns(Boolean memberCanAddAddOns) {
    this.memberCanAddAddOns = memberCanAddAddOns;
    return this;
  }

  /**
   * Boolean value to indicate member can add extra addons he wish if he choose this package.             
   * @return memberCanAddAddOns
   */
  @javax.annotation.Nullable
  public Boolean getMemberCanAddAddOns() {
    return memberCanAddAddOns;
  }

  public void setMemberCanAddAddOns(Boolean memberCanAddAddOns) {
    this.memberCanAddAddOns = memberCanAddAddOns;
  }


  public PackageDTO memberCanLeaveWithinFreePeriod(Boolean memberCanLeaveWithinFreePeriod) {
    this.memberCanLeaveWithinFreePeriod = memberCanLeaveWithinFreePeriod;
    return this;
  }

  /**
   * Boolean value to indicate if member can leave from contract within               free period if he/she choose this package.             
   * @return memberCanLeaveWithinFreePeriod
   */
  @javax.annotation.Nullable
  public Boolean getMemberCanLeaveWithinFreePeriod() {
    return memberCanLeaveWithinFreePeriod;
  }

  public void setMemberCanLeaveWithinFreePeriod(Boolean memberCanLeaveWithinFreePeriod) {
    this.memberCanLeaveWithinFreePeriod = memberCanLeaveWithinFreePeriod;
  }


  public PackageDTO memberCanRemoveAddOns(Boolean memberCanRemoveAddOns) {
    this.memberCanRemoveAddOns = memberCanRemoveAddOns;
    return this;
  }

  /**
   * Boolean value to indicate member can remove already added addons if he choose this package.             
   * @return memberCanRemoveAddOns
   */
  @javax.annotation.Nullable
  public Boolean getMemberCanRemoveAddOns() {
    return memberCanRemoveAddOns;
  }

  public void setMemberCanRemoveAddOns(Boolean memberCanRemoveAddOns) {
    this.memberCanRemoveAddOns = memberCanRemoveAddOns;
  }


  public PackageDTO modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Package last modified DateTime.             
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public PackageDTO modifiedUser(String modifiedUser) {
    this.modifiedUser = modifiedUser;
    return this;
  }

  /**
   * Package last modified user.             
   * @return modifiedUser
   */
  @javax.annotation.Nullable
  public String getModifiedUser() {
    return modifiedUser;
  }

  public void setModifiedUser(String modifiedUser) {
    this.modifiedUser = modifiedUser;
  }


  public PackageDTO monthlyFee(BigDecimal monthlyFee) {
    this.monthlyFee = monthlyFee;
    return this;
  }

  /**
   * Monthly installment fee if package is not fixed visit. addition of the servicefee and addon fees divided by binding period.              read only             
   * @return monthlyFee
   */
  @javax.annotation.Nullable
  public BigDecimal getMonthlyFee() {
    return monthlyFee;
  }

  public void setMonthlyFee(BigDecimal monthlyFee) {
    this.monthlyFee = monthlyFee;
  }


  public PackageDTO nextPackageNumber(Integer nextPackageNumber) {
    this.nextPackageNumber = nextPackageNumber;
    return this;
  }

  /**
   * Next Package the contract continue after the binding period of this package.             
   * @return nextPackageNumber
   */
  @javax.annotation.Nullable
  public Integer getNextPackageNumber() {
    return nextPackageNumber;
  }

  public void setNextPackageNumber(Integer nextPackageNumber) {
    this.nextPackageNumber = nextPackageNumber;
  }


  public PackageDTO numberOfInstallments(Integer numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
    return this;
  }

  /**
   * Maximum Number of installment a member can divide the package price/cost to pay.             
   * @return numberOfInstallments
   */
  @javax.annotation.Nullable
  public Integer getNumberOfInstallments() {
    return numberOfInstallments;
  }

  public void setNumberOfInstallments(Integer numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
  }


  public PackageDTO numberOfVisits(Integer numberOfVisits) {
    this.numberOfVisits = numberOfVisits;
    return this;
  }

  /**
   * If package is fixed visit type, then how many visits are available for this package.             
   * @return numberOfVisits
   */
  @javax.annotation.Nullable
  public Integer getNumberOfVisits() {
    return numberOfVisits;
  }

  public void setNumberOfVisits(Integer numberOfVisits) {
    this.numberOfVisits = numberOfVisits;
  }


  public PackageDTO packageId(Integer packageId) {
    this.packageId = packageId;
    return this;
  }

  /**
   * Get packageId
   * @return packageId
   */
  @javax.annotation.Nullable
  public Integer getPackageId() {
    return packageId;
  }

  public void setPackageId(Integer packageId) {
    this.packageId = packageId;
  }


  public PackageDTO packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

  /**
   * Get packageName
   * @return packageName
   */
  @javax.annotation.Nonnull
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }


  public PackageDTO packageNumber(String packageNumber) {
    this.packageNumber = packageNumber;
    return this;
  }

  /**
   * Get packageNumber
   * @return packageNumber
   */
  @javax.annotation.Nullable
  public String getPackageNumber() {
    return packageNumber;
  }

  public void setPackageNumber(String packageNumber) {
    this.packageNumber = packageNumber;
  }


  public PackageDTO packageType(String packageType) {
    this.packageType = packageType;
    return this;
  }

  /**
   * Package type can be either fixed visit or unlimited.             
   * @return packageType
   */
  @javax.annotation.Nonnull
  public String getPackageType() {
    return packageType;
  }

  public void setPackageType(String packageType) {
    this.packageType = packageType;
  }


  public PackageDTO perVisitPrice(BigDecimal perVisitPrice) {
    this.perVisitPrice = perVisitPrice;
    return this;
  }

  /**
   * Cost/Price of the single visit to gym.             
   * @return perVisitPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getPerVisitPrice() {
    return perVisitPrice;
  }

  public void setPerVisitPrice(BigDecimal perVisitPrice) {
    this.perVisitPrice = perVisitPrice;
  }


  public PackageDTO registrationFee(BigDecimal registrationFee) {
    this.registrationFee = registrationFee;
    return this;
  }

  /**
   * Registartion fee for the package at a gym.              read only             
   * @return registrationFee
   */
  @javax.annotation.Nonnull
  public BigDecimal getRegistrationFee() {
    return registrationFee;
  }

  public void setRegistrationFee(BigDecimal registrationFee) {
    this.registrationFee = registrationFee;
  }


  public PackageDTO serviceFee(BigDecimal serviceFee) {
    this.serviceFee = serviceFee;
    return this;
  }

  /**
   * total Service charge of the package for entire period.             
   * @return serviceFee
   */
  @javax.annotation.Nonnull
  public BigDecimal getServiceFee() {
    return serviceFee;
  }

  public void setServiceFee(BigDecimal serviceFee) {
    this.serviceFee = serviceFee;
  }


  public PackageDTO shownInWeb(Boolean shownInWeb) {
    this.shownInWeb = shownInWeb;
    return this;
  }

  /**
   * Boolean value to show this package in MRM system or not.             
   * @return shownInWeb
   */
  @javax.annotation.Nullable
  public Boolean getShownInWeb() {
    return shownInWeb;
  }

  public void setShownInWeb(Boolean shownInWeb) {
    this.shownInWeb = shownInWeb;
  }


  public PackageDTO startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Start date of the package.             
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public PackageDTO tags(String tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Comma separated string values in case of need of maintain some labels kind of               stuff relevant to the package.             
   * @return tags
   */
  @javax.annotation.Nullable
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }


  public PackageDTO totalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * total price for the package including Addon fees, service fee and registration fee. incoming values for this field will ignore.             
   * @return totalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageDTO packageDTO = (PackageDTO) o;
    return Objects.equals(this.addOns, packageDTO.addOns) &&
        Objects.equals(this.addonFee, packageDTO.addonFee) &&
        Objects.equals(this.applyForAllGyms, packageDTO.applyForAllGyms) &&
        Objects.equals(this.availableGyms, packageDTO.availableGyms) &&
        Objects.equals(this.bindingPeriod, packageDTO.bindingPeriod) &&
        Objects.equals(this.createdDate, packageDTO.createdDate) &&
        Objects.equals(this.createdUser, packageDTO.createdUser) &&
        Objects.equals(this.description, packageDTO.description) &&
        Objects.equals(this.endDate, packageDTO.endDate) &&
        Objects.equals(this.expireInMonths, packageDTO.expireInMonths) &&
        Objects.equals(this.features, packageDTO.features) &&
        Objects.equals(this.freeMonths, packageDTO.freeMonths) &&
        Objects.equals(this.instructionsToGymUsers, packageDTO.instructionsToGymUsers) &&
        Objects.equals(this.instructionsToWebUsers, packageDTO.instructionsToWebUsers) &&
        Objects.equals(this.isActive, packageDTO.isActive) &&
        Objects.equals(this.isAtg, packageDTO.isAtg) &&
        Objects.equals(this.isAutoRenew, packageDTO.isAutoRenew) &&
        Objects.equals(this.isFirstMonthFree, packageDTO.isFirstMonthFree) &&
        Objects.equals(this.isRegistrationFee, packageDTO.isRegistrationFee) &&
        Objects.equals(this.isRestAmount, packageDTO.isRestAmount) &&
        Objects.equals(this.isShownInMobile, packageDTO.isShownInMobile) &&
        Objects.equals(this.isSponsorPackage, packageDTO.isSponsorPackage) &&
        Objects.equals(this.maximumGiveAwayRestAmount, packageDTO.maximumGiveAwayRestAmount) &&
        Objects.equals(this.memberCanAddAddOns, packageDTO.memberCanAddAddOns) &&
        Objects.equals(this.memberCanLeaveWithinFreePeriod, packageDTO.memberCanLeaveWithinFreePeriod) &&
        Objects.equals(this.memberCanRemoveAddOns, packageDTO.memberCanRemoveAddOns) &&
        Objects.equals(this.modifiedDate, packageDTO.modifiedDate) &&
        Objects.equals(this.modifiedUser, packageDTO.modifiedUser) &&
        Objects.equals(this.monthlyFee, packageDTO.monthlyFee) &&
        Objects.equals(this.nextPackageNumber, packageDTO.nextPackageNumber) &&
        Objects.equals(this.numberOfInstallments, packageDTO.numberOfInstallments) &&
        Objects.equals(this.numberOfVisits, packageDTO.numberOfVisits) &&
        Objects.equals(this.packageId, packageDTO.packageId) &&
        Objects.equals(this.packageName, packageDTO.packageName) &&
        Objects.equals(this.packageNumber, packageDTO.packageNumber) &&
        Objects.equals(this.packageType, packageDTO.packageType) &&
        Objects.equals(this.perVisitPrice, packageDTO.perVisitPrice) &&
        Objects.equals(this.registrationFee, packageDTO.registrationFee) &&
        Objects.equals(this.serviceFee, packageDTO.serviceFee) &&
        Objects.equals(this.shownInWeb, packageDTO.shownInWeb) &&
        Objects.equals(this.startDate, packageDTO.startDate) &&
        Objects.equals(this.tags, packageDTO.tags) &&
        Objects.equals(this.totalPrice, packageDTO.totalPrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(addOns, addonFee, applyForAllGyms, availableGyms, bindingPeriod, createdDate, createdUser, description, endDate, expireInMonths, features, freeMonths, instructionsToGymUsers, instructionsToWebUsers, isActive, isAtg, isAutoRenew, isFirstMonthFree, isRegistrationFee, isRestAmount, isShownInMobile, isSponsorPackage, maximumGiveAwayRestAmount, memberCanAddAddOns, memberCanLeaveWithinFreePeriod, memberCanRemoveAddOns, modifiedDate, modifiedUser, monthlyFee, nextPackageNumber, numberOfInstallments, numberOfVisits, packageId, packageName, packageNumber, packageType, perVisitPrice, registrationFee, serviceFee, shownInWeb, startDate, tags, totalPrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageDTO {\n");
    sb.append("    addOns: ").append(toIndentedString(addOns)).append("\n");
    sb.append("    addonFee: ").append(toIndentedString(addonFee)).append("\n");
    sb.append("    applyForAllGyms: ").append(toIndentedString(applyForAllGyms)).append("\n");
    sb.append("    availableGyms: ").append(toIndentedString(availableGyms)).append("\n");
    sb.append("    bindingPeriod: ").append(toIndentedString(bindingPeriod)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdUser: ").append(toIndentedString(createdUser)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    expireInMonths: ").append(toIndentedString(expireInMonths)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    freeMonths: ").append(toIndentedString(freeMonths)).append("\n");
    sb.append("    instructionsToGymUsers: ").append(toIndentedString(instructionsToGymUsers)).append("\n");
    sb.append("    instructionsToWebUsers: ").append(toIndentedString(instructionsToWebUsers)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAtg: ").append(toIndentedString(isAtg)).append("\n");
    sb.append("    isAutoRenew: ").append(toIndentedString(isAutoRenew)).append("\n");
    sb.append("    isFirstMonthFree: ").append(toIndentedString(isFirstMonthFree)).append("\n");
    sb.append("    isRegistrationFee: ").append(toIndentedString(isRegistrationFee)).append("\n");
    sb.append("    isRestAmount: ").append(toIndentedString(isRestAmount)).append("\n");
    sb.append("    isShownInMobile: ").append(toIndentedString(isShownInMobile)).append("\n");
    sb.append("    isSponsorPackage: ").append(toIndentedString(isSponsorPackage)).append("\n");
    sb.append("    maximumGiveAwayRestAmount: ").append(toIndentedString(maximumGiveAwayRestAmount)).append("\n");
    sb.append("    memberCanAddAddOns: ").append(toIndentedString(memberCanAddAddOns)).append("\n");
    sb.append("    memberCanLeaveWithinFreePeriod: ").append(toIndentedString(memberCanLeaveWithinFreePeriod)).append("\n");
    sb.append("    memberCanRemoveAddOns: ").append(toIndentedString(memberCanRemoveAddOns)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedUser: ").append(toIndentedString(modifiedUser)).append("\n");
    sb.append("    monthlyFee: ").append(toIndentedString(monthlyFee)).append("\n");
    sb.append("    nextPackageNumber: ").append(toIndentedString(nextPackageNumber)).append("\n");
    sb.append("    numberOfInstallments: ").append(toIndentedString(numberOfInstallments)).append("\n");
    sb.append("    numberOfVisits: ").append(toIndentedString(numberOfVisits)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    packageNumber: ").append(toIndentedString(packageNumber)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    perVisitPrice: ").append(toIndentedString(perVisitPrice)).append("\n");
    sb.append("    registrationFee: ").append(toIndentedString(registrationFee)).append("\n");
    sb.append("    serviceFee: ").append(toIndentedString(serviceFee)).append("\n");
    sb.append("    shownInWeb: ").append(toIndentedString(shownInWeb)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addOns");
    openapiFields.add("addonFee");
    openapiFields.add("applyForAllGyms");
    openapiFields.add("availableGyms");
    openapiFields.add("bindingPeriod");
    openapiFields.add("createdDate");
    openapiFields.add("createdUser");
    openapiFields.add("description");
    openapiFields.add("endDate");
    openapiFields.add("expireInMonths");
    openapiFields.add("features");
    openapiFields.add("freeMonths");
    openapiFields.add("instructionsToGymUsers");
    openapiFields.add("instructionsToWebUsers");
    openapiFields.add("isActive");
    openapiFields.add("isAtg");
    openapiFields.add("isAutoRenew");
    openapiFields.add("isFirstMonthFree");
    openapiFields.add("isRegistrationFee");
    openapiFields.add("isRestAmount");
    openapiFields.add("isShownInMobile");
    openapiFields.add("isSponsorPackage");
    openapiFields.add("maximumGiveAwayRestAmount");
    openapiFields.add("memberCanAddAddOns");
    openapiFields.add("memberCanLeaveWithinFreePeriod");
    openapiFields.add("memberCanRemoveAddOns");
    openapiFields.add("modifiedDate");
    openapiFields.add("modifiedUser");
    openapiFields.add("monthlyFee");
    openapiFields.add("nextPackageNumber");
    openapiFields.add("numberOfInstallments");
    openapiFields.add("numberOfVisits");
    openapiFields.add("packageId");
    openapiFields.add("packageName");
    openapiFields.add("packageNumber");
    openapiFields.add("packageType");
    openapiFields.add("perVisitPrice");
    openapiFields.add("registrationFee");
    openapiFields.add("serviceFee");
    openapiFields.add("shownInWeb");
    openapiFields.add("startDate");
    openapiFields.add("tags");
    openapiFields.add("totalPrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("packageName");
    openapiRequiredFields.add("packageType");
    openapiRequiredFields.add("registrationFee");
    openapiRequiredFields.add("serviceFee");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PackageDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PackageDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PackageDTO is not found in the empty JSON string", PackageDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PackageDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PackageDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PackageDTO.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("addOns") != null && !jsonObj.get("addOns").isJsonNull()) {
        JsonArray jsonArrayaddOns = jsonObj.getAsJsonArray("addOns");
        if (jsonArrayaddOns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addOns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addOns` to be an array in the JSON string but got `%s`", jsonObj.get("addOns").toString()));
          }

          // validate the optional field `addOns` (array)
          for (int i = 0; i < jsonArrayaddOns.size(); i++) {
            PackageItemDTO.validateJsonElement(jsonArrayaddOns.get(i));
          };
        }
      }
      if (jsonObj.get("availableGyms") != null && !jsonObj.get("availableGyms").isJsonNull()) {
        JsonArray jsonArrayavailableGyms = jsonObj.getAsJsonArray("availableGyms");
        if (jsonArrayavailableGyms != null) {
          // ensure the json data is an array
          if (!jsonObj.get("availableGyms").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `availableGyms` to be an array in the JSON string but got `%s`", jsonObj.get("availableGyms").toString()));
          }

          // validate the optional field `availableGyms` (array)
          for (int i = 0; i < jsonArrayavailableGyms.size(); i++) {
            GymDTO.validateJsonElement(jsonArrayavailableGyms.get(i));
          };
        }
      }
      if ((jsonObj.get("createdUser") != null && !jsonObj.get("createdUser").isJsonNull()) && !jsonObj.get("createdUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdUser").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull()) && !jsonObj.get("features").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be a primitive type in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if ((jsonObj.get("instructionsToGymUsers") != null && !jsonObj.get("instructionsToGymUsers").isJsonNull()) && !jsonObj.get("instructionsToGymUsers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instructionsToGymUsers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instructionsToGymUsers").toString()));
      }
      if ((jsonObj.get("instructionsToWebUsers") != null && !jsonObj.get("instructionsToWebUsers").isJsonNull()) && !jsonObj.get("instructionsToWebUsers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instructionsToWebUsers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instructionsToWebUsers").toString()));
      }
      if ((jsonObj.get("modifiedUser") != null && !jsonObj.get("modifiedUser").isJsonNull()) && !jsonObj.get("modifiedUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedUser").toString()));
      }
      if (!jsonObj.get("packageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageName").toString()));
      }
      if ((jsonObj.get("packageNumber") != null && !jsonObj.get("packageNumber").isJsonNull()) && !jsonObj.get("packageNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageNumber").toString()));
      }
      if (!jsonObj.get("packageType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageType").toString()));
      }
      if ((jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) && !jsonObj.get("tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PackageDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PackageDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PackageDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PackageDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<PackageDTO>() {
           @Override
           public void write(JsonWriter out, PackageDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PackageDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PackageDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PackageDTO
   * @throws IOException if the JSON string is invalid with respect to PackageDTO
   */
  public static PackageDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PackageDTO.class);
  }

  /**
   * Convert an instance of PackageDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

