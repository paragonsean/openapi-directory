/*
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The GymArticleDetailsDTO Class. Contains fields of GymArticleDetails DTO in application.             
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:59:23.711288-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GymArticleDetailsDTO {
  public static final String SERIALIZED_NAME_ARTICLE_ID = "articleId";
  @SerializedName(SERIALIZED_NAME_ARTICLE_ID)
  private Integer articleId;

  public static final String SERIALIZED_NAME_AVAILABLE_QTY = "availableQty";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_QTY)
  private BigDecimal availableQty;

  public static final String SERIALIZED_NAME_CREATED_USER = "createdUser";
  @SerializedName(SERIALIZED_NAME_CREATED_USER)
  private String createdUser;

  public static final String SERIALIZED_NAME_EMPLOYEE_DISCOUNT = "employeeDiscount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_DISCOUNT)
  private BigDecimal employeeDiscount;

  public static final String SERIALIZED_NAME_EMPLOYEE_PRICE = "employeePrice";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_PRICE)
  private BigDecimal employeePrice;

  public static final String SERIALIZED_NAME_GYM_ID = "gymId";
  @SerializedName(SERIALIZED_NAME_GYM_ID)
  private Integer gymId;

  public static final String SERIALIZED_NAME_GYM_ID_LIST = "gymIdList";
  @SerializedName(SERIALIZED_NAME_GYM_ID_LIST)
  private String gymIdList;

  public static final String SERIALIZED_NAME_GYM_NAME = "gymName";
  @SerializedName(SERIALIZED_NAME_GYM_NAME)
  private String gymName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "isDefault";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_IS_INVENTORY_ITEM = "isInventoryItem";
  @SerializedName(SERIALIZED_NAME_IS_INVENTORY_ITEM)
  private Boolean isInventoryItem;

  public static final String SERIALIZED_NAME_IS_OBSOLETE = "isObsolete";
  @SerializedName(SERIALIZED_NAME_IS_OBSOLETE)
  private Boolean isObsolete;

  public static final String SERIALIZED_NAME_MODIFIED_USER = "modifiedUser";
  @SerializedName(SERIALIZED_NAME_MODIFIED_USER)
  private String modifiedUser;

  public static final String SERIALIZED_NAME_REORDER_LEVEL = "reorderLevel";
  @SerializedName(SERIALIZED_NAME_REORDER_LEVEL)
  private BigDecimal reorderLevel;

  public static final String SERIALIZED_NAME_REVENUE_ACCOUNT_ID = "revenueAccountId";
  @SerializedName(SERIALIZED_NAME_REVENUE_ACCOUNT_ID)
  private Integer revenueAccountId;

  public static final String SERIALIZED_NAME_SELLING_PRICE = "sellingPrice";
  @SerializedName(SERIALIZED_NAME_SELLING_PRICE)
  private BigDecimal sellingPrice;

  public GymArticleDetailsDTO() {
  }

  public GymArticleDetailsDTO articleId(Integer articleId) {
    this.articleId = articleId;
    return this;
  }

  /**
   * Get articleId
   * @return articleId
   */
  @javax.annotation.Nullable
  public Integer getArticleId() {
    return articleId;
  }

  public void setArticleId(Integer articleId) {
    this.articleId = articleId;
  }


  public GymArticleDetailsDTO availableQty(BigDecimal availableQty) {
    this.availableQty = availableQty;
    return this;
  }

  /**
   * Get availableQty
   * @return availableQty
   */
  @javax.annotation.Nullable
  public BigDecimal getAvailableQty() {
    return availableQty;
  }

  public void setAvailableQty(BigDecimal availableQty) {
    this.availableQty = availableQty;
  }


  public GymArticleDetailsDTO createdUser(String createdUser) {
    this.createdUser = createdUser;
    return this;
  }

  /**
   * Created User 
   * @return createdUser
   */
  @javax.annotation.Nullable
  public String getCreatedUser() {
    return createdUser;
  }

  public void setCreatedUser(String createdUser) {
    this.createdUser = createdUser;
  }


  public GymArticleDetailsDTO employeeDiscount(BigDecimal employeeDiscount) {
    this.employeeDiscount = employeeDiscount;
    return this;
  }

  /**
   * Get employeeDiscount
   * @return employeeDiscount
   */
  @javax.annotation.Nullable
  public BigDecimal getEmployeeDiscount() {
    return employeeDiscount;
  }

  public void setEmployeeDiscount(BigDecimal employeeDiscount) {
    this.employeeDiscount = employeeDiscount;
  }


  public GymArticleDetailsDTO employeePrice(BigDecimal employeePrice) {
    this.employeePrice = employeePrice;
    return this;
  }

  /**
   * Get employeePrice
   * @return employeePrice
   */
  @javax.annotation.Nullable
  public BigDecimal getEmployeePrice() {
    return employeePrice;
  }

  public void setEmployeePrice(BigDecimal employeePrice) {
    this.employeePrice = employeePrice;
  }


  public GymArticleDetailsDTO gymId(Integer gymId) {
    this.gymId = gymId;
    return this;
  }

  /**
   * Gym Id where article is related 
   * @return gymId
   */
  @javax.annotation.Nullable
  public Integer getGymId() {
    return gymId;
  }

  public void setGymId(Integer gymId) {
    this.gymId = gymId;
  }


  public GymArticleDetailsDTO gymIdList(String gymIdList) {
    this.gymIdList = gymIdList;
    return this;
  }

  /**
   * GymId - Gym Id string with comma separated GymIds 
   * @return gymIdList
   */
  @javax.annotation.Nullable
  public String getGymIdList() {
    return gymIdList;
  }

  public void setGymIdList(String gymIdList) {
    this.gymIdList = gymIdList;
  }


  public GymArticleDetailsDTO gymName(String gymName) {
    this.gymName = gymName;
    return this;
  }

  /**
   * Gym Name
   * @return gymName
   */
  @javax.annotation.Nullable
  public String getGymName() {
    return gymName;
  }

  public void setGymName(String gymName) {
    this.gymName = gymName;
  }


  public GymArticleDetailsDTO id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public GymArticleDetailsDTO isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

  /**
   * Set as the default values for the article 
   * @return isDefault
   */
  @javax.annotation.Nullable
  public Boolean getIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public GymArticleDetailsDTO isInventoryItem(Boolean isInventoryItem) {
    this.isInventoryItem = isInventoryItem;
    return this;
  }

  /**
   * Get isInventoryItem
   * @return isInventoryItem
   */
  @javax.annotation.Nullable
  public Boolean getIsInventoryItem() {
    return isInventoryItem;
  }

  public void setIsInventoryItem(Boolean isInventoryItem) {
    this.isInventoryItem = isInventoryItem;
  }


  public GymArticleDetailsDTO isObsolete(Boolean isObsolete) {
    this.isObsolete = isObsolete;
    return this;
  }

  /**
   * Get isObsolete
   * @return isObsolete
   */
  @javax.annotation.Nullable
  public Boolean getIsObsolete() {
    return isObsolete;
  }

  public void setIsObsolete(Boolean isObsolete) {
    this.isObsolete = isObsolete;
  }


  public GymArticleDetailsDTO modifiedUser(String modifiedUser) {
    this.modifiedUser = modifiedUser;
    return this;
  }

  /**
   * Modified user
   * @return modifiedUser
   */
  @javax.annotation.Nullable
  public String getModifiedUser() {
    return modifiedUser;
  }

  public void setModifiedUser(String modifiedUser) {
    this.modifiedUser = modifiedUser;
  }


  public GymArticleDetailsDTO reorderLevel(BigDecimal reorderLevel) {
    this.reorderLevel = reorderLevel;
    return this;
  }

  /**
   * Get reorderLevel
   * @return reorderLevel
   */
  @javax.annotation.Nullable
  public BigDecimal getReorderLevel() {
    return reorderLevel;
  }

  public void setReorderLevel(BigDecimal reorderLevel) {
    this.reorderLevel = reorderLevel;
  }


  public GymArticleDetailsDTO revenueAccountId(Integer revenueAccountId) {
    this.revenueAccountId = revenueAccountId;
    return this;
  }

  /**
   * Revenue account Id
   * @return revenueAccountId
   */
  @javax.annotation.Nullable
  public Integer getRevenueAccountId() {
    return revenueAccountId;
  }

  public void setRevenueAccountId(Integer revenueAccountId) {
    this.revenueAccountId = revenueAccountId;
  }


  public GymArticleDetailsDTO sellingPrice(BigDecimal sellingPrice) {
    this.sellingPrice = sellingPrice;
    return this;
  }

  /**
   * Get sellingPrice
   * @return sellingPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getSellingPrice() {
    return sellingPrice;
  }

  public void setSellingPrice(BigDecimal sellingPrice) {
    this.sellingPrice = sellingPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GymArticleDetailsDTO gymArticleDetailsDTO = (GymArticleDetailsDTO) o;
    return Objects.equals(this.articleId, gymArticleDetailsDTO.articleId) &&
        Objects.equals(this.availableQty, gymArticleDetailsDTO.availableQty) &&
        Objects.equals(this.createdUser, gymArticleDetailsDTO.createdUser) &&
        Objects.equals(this.employeeDiscount, gymArticleDetailsDTO.employeeDiscount) &&
        Objects.equals(this.employeePrice, gymArticleDetailsDTO.employeePrice) &&
        Objects.equals(this.gymId, gymArticleDetailsDTO.gymId) &&
        Objects.equals(this.gymIdList, gymArticleDetailsDTO.gymIdList) &&
        Objects.equals(this.gymName, gymArticleDetailsDTO.gymName) &&
        Objects.equals(this.id, gymArticleDetailsDTO.id) &&
        Objects.equals(this.isDefault, gymArticleDetailsDTO.isDefault) &&
        Objects.equals(this.isInventoryItem, gymArticleDetailsDTO.isInventoryItem) &&
        Objects.equals(this.isObsolete, gymArticleDetailsDTO.isObsolete) &&
        Objects.equals(this.modifiedUser, gymArticleDetailsDTO.modifiedUser) &&
        Objects.equals(this.reorderLevel, gymArticleDetailsDTO.reorderLevel) &&
        Objects.equals(this.revenueAccountId, gymArticleDetailsDTO.revenueAccountId) &&
        Objects.equals(this.sellingPrice, gymArticleDetailsDTO.sellingPrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(articleId, availableQty, createdUser, employeeDiscount, employeePrice, gymId, gymIdList, gymName, id, isDefault, isInventoryItem, isObsolete, modifiedUser, reorderLevel, revenueAccountId, sellingPrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GymArticleDetailsDTO {\n");
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    availableQty: ").append(toIndentedString(availableQty)).append("\n");
    sb.append("    createdUser: ").append(toIndentedString(createdUser)).append("\n");
    sb.append("    employeeDiscount: ").append(toIndentedString(employeeDiscount)).append("\n");
    sb.append("    employeePrice: ").append(toIndentedString(employeePrice)).append("\n");
    sb.append("    gymId: ").append(toIndentedString(gymId)).append("\n");
    sb.append("    gymIdList: ").append(toIndentedString(gymIdList)).append("\n");
    sb.append("    gymName: ").append(toIndentedString(gymName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    isInventoryItem: ").append(toIndentedString(isInventoryItem)).append("\n");
    sb.append("    isObsolete: ").append(toIndentedString(isObsolete)).append("\n");
    sb.append("    modifiedUser: ").append(toIndentedString(modifiedUser)).append("\n");
    sb.append("    reorderLevel: ").append(toIndentedString(reorderLevel)).append("\n");
    sb.append("    revenueAccountId: ").append(toIndentedString(revenueAccountId)).append("\n");
    sb.append("    sellingPrice: ").append(toIndentedString(sellingPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("articleId");
    openapiFields.add("availableQty");
    openapiFields.add("createdUser");
    openapiFields.add("employeeDiscount");
    openapiFields.add("employeePrice");
    openapiFields.add("gymId");
    openapiFields.add("gymIdList");
    openapiFields.add("gymName");
    openapiFields.add("id");
    openapiFields.add("isDefault");
    openapiFields.add("isInventoryItem");
    openapiFields.add("isObsolete");
    openapiFields.add("modifiedUser");
    openapiFields.add("reorderLevel");
    openapiFields.add("revenueAccountId");
    openapiFields.add("sellingPrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GymArticleDetailsDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GymArticleDetailsDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GymArticleDetailsDTO is not found in the empty JSON string", GymArticleDetailsDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GymArticleDetailsDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GymArticleDetailsDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createdUser") != null && !jsonObj.get("createdUser").isJsonNull()) && !jsonObj.get("createdUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdUser").toString()));
      }
      if ((jsonObj.get("gymIdList") != null && !jsonObj.get("gymIdList").isJsonNull()) && !jsonObj.get("gymIdList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gymIdList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gymIdList").toString()));
      }
      if ((jsonObj.get("gymName") != null && !jsonObj.get("gymName").isJsonNull()) && !jsonObj.get("gymName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gymName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gymName").toString()));
      }
      if ((jsonObj.get("modifiedUser") != null && !jsonObj.get("modifiedUser").isJsonNull()) && !jsonObj.get("modifiedUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedUser").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GymArticleDetailsDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GymArticleDetailsDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GymArticleDetailsDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GymArticleDetailsDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<GymArticleDetailsDTO>() {
           @Override
           public void write(JsonWriter out, GymArticleDetailsDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GymArticleDetailsDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GymArticleDetailsDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GymArticleDetailsDTO
   * @throws IOException if the JSON string is invalid with respect to GymArticleDetailsDTO
   */
  public static GymArticleDetailsDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GymArticleDetailsDTO.class);
  }

  /**
   * Convert an instance of GymArticleDetailsDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

