/*
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The PackageSearchDTO Class. Contains relevant fields of PackageSearch DTO by masking actual Package entity&#39;s fields in application.                
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:59:23.711288-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PackageSearchDTO {
  public static final String SERIALIZED_NAME_ACTIVE_STATUS = "activeStatus";
  @SerializedName(SERIALIZED_NAME_ACTIVE_STATUS)
  private Boolean activeStatus;

  public static final String SERIALIZED_NAME_ADDON_FEE = "addonFee";
  @SerializedName(SERIALIZED_NAME_ADDON_FEE)
  private BigDecimal addonFee;

  public static final String SERIALIZED_NAME_APPLY_FOR_ALL_GYMS = "applyForAllGyms";
  @SerializedName(SERIALIZED_NAME_APPLY_FOR_ALL_GYMS)
  private Boolean applyForAllGyms;

  public static final String SERIALIZED_NAME_BINDING_PERIOD = "bindingPeriod";
  @SerializedName(SERIALIZED_NAME_BINDING_PERIOD)
  private Integer bindingPeriod;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_CREATED_USER = "createdUser";
  @SerializedName(SERIALIZED_NAME_CREATED_USER)
  private String createdUser;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private String features;

  public static final String SERIALIZED_NAME_FREE_MONTHS = "freeMonths";
  @SerializedName(SERIALIZED_NAME_FREE_MONTHS)
  private Integer freeMonths;

  public static final String SERIALIZED_NAME_MEMBER_CAN_REMOVE_ADD_ONS = "memberCanRemoveAddOns";
  @SerializedName(SERIALIZED_NAME_MEMBER_CAN_REMOVE_ADD_ONS)
  private Boolean memberCanRemoveAddOns;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_MODIFIED_USER = "modifiedUser";
  @SerializedName(SERIALIZED_NAME_MODIFIED_USER)
  private String modifiedUser;

  public static final String SERIALIZED_NAME_MONTHLY_FEE = "monthlyFee";
  @SerializedName(SERIALIZED_NAME_MONTHLY_FEE)
  private BigDecimal monthlyFee;

  public static final String SERIALIZED_NAME_NUMBER_OF_VISITS = "numberOfVisits";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_VISITS)
  private Integer numberOfVisits;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private Integer packageId;

  public static final String SERIALIZED_NAME_PACKAGE_NAME = "packageName";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NAME)
  private String packageName;

  public static final String SERIALIZED_NAME_PACKAGE_NUMBER = "packageNumber";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NUMBER)
  private Integer packageNumber;

  public static final String SERIALIZED_NAME_PACKAGE_TYPE = "packageType";
  @SerializedName(SERIALIZED_NAME_PACKAGE_TYPE)
  private String packageType;

  public static final String SERIALIZED_NAME_REGISTRATION_FEE = "registrationFee";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_FEE)
  private BigDecimal registrationFee;

  public static final String SERIALIZED_NAME_SERVICE_FEE = "serviceFee";
  @SerializedName(SERIALIZED_NAME_SERVICE_FEE)
  private BigDecimal serviceFee;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "totalPrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private BigDecimal totalPrice;

  public PackageSearchDTO() {
  }

  public PackageSearchDTO activeStatus(Boolean activeStatus) {
    this.activeStatus = activeStatus;
    return this;
  }

  /**
   * Active Status 
   * @return activeStatus
   */
  @javax.annotation.Nullable
  public Boolean getActiveStatus() {
    return activeStatus;
  }

  public void setActiveStatus(Boolean activeStatus) {
    this.activeStatus = activeStatus;
  }


  public PackageSearchDTO addonFee(BigDecimal addonFee) {
    this.addonFee = addonFee;
    return this;
  }

  /**
   * sum of addon fees. incoming values for this filed will ignore.             
   * @return addonFee
   */
  @javax.annotation.Nullable
  public BigDecimal getAddonFee() {
    return addonFee;
  }

  public void setAddonFee(BigDecimal addonFee) {
    this.addonFee = addonFee;
  }


  public PackageSearchDTO applyForAllGyms(Boolean applyForAllGyms) {
    this.applyForAllGyms = applyForAllGyms;
    return this;
  }

  /**
   * Boolean value to indicate wheather package is available in all the gyms.             
   * @return applyForAllGyms
   */
  @javax.annotation.Nullable
  public Boolean getApplyForAllGyms() {
    return applyForAllGyms;
  }

  public void setApplyForAllGyms(Boolean applyForAllGyms) {
    this.applyForAllGyms = applyForAllGyms;
  }


  public PackageSearchDTO bindingPeriod(Integer bindingPeriod) {
    this.bindingPeriod = bindingPeriod;
    return this;
  }

  /**
   * Range of period a member is bound to the contract if he/she choose this package.             
   * @return bindingPeriod
   */
  @javax.annotation.Nullable
  public Integer getBindingPeriod() {
    return bindingPeriod;
  }

  public void setBindingPeriod(Integer bindingPeriod) {
    this.bindingPeriod = bindingPeriod;
  }


  public PackageSearchDTO createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Package created DateTime.             
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public PackageSearchDTO createdUser(String createdUser) {
    this.createdUser = createdUser;
    return this;
  }

  /**
   * Package created user.             
   * @return createdUser
   */
  @javax.annotation.Nullable
  public String getCreatedUser() {
    return createdUser;
  }

  public void setCreatedUser(String createdUser) {
    this.createdUser = createdUser;
  }


  public PackageSearchDTO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Common descriptions about package.If there are more instructions can be stored as comma separated values.             
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PackageSearchDTO features(String features) {
    this.features = features;
    return this;
  }

  /**
   * What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.             
   * @return features
   */
  @javax.annotation.Nullable
  public String getFeatures() {
    return features;
  }

  public void setFeatures(String features) {
    this.features = features;
  }


  public PackageSearchDTO freeMonths(Integer freeMonths) {
    this.freeMonths = freeMonths;
    return this;
  }

  /**
   * No of months gym member can come without payments.             
   * @return freeMonths
   */
  @javax.annotation.Nullable
  public Integer getFreeMonths() {
    return freeMonths;
  }

  public void setFreeMonths(Integer freeMonths) {
    this.freeMonths = freeMonths;
  }


  public PackageSearchDTO memberCanRemoveAddOns(Boolean memberCanRemoveAddOns) {
    this.memberCanRemoveAddOns = memberCanRemoveAddOns;
    return this;
  }

  /**
   * Boolean value to indicate member can remove already added addons if he choose this package.             
   * @return memberCanRemoveAddOns
   */
  @javax.annotation.Nullable
  public Boolean getMemberCanRemoveAddOns() {
    return memberCanRemoveAddOns;
  }

  public void setMemberCanRemoveAddOns(Boolean memberCanRemoveAddOns) {
    this.memberCanRemoveAddOns = memberCanRemoveAddOns;
  }


  public PackageSearchDTO modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Package last modified DateTime.             
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public PackageSearchDTO modifiedUser(String modifiedUser) {
    this.modifiedUser = modifiedUser;
    return this;
  }

  /**
   * Package last modified user.             
   * @return modifiedUser
   */
  @javax.annotation.Nullable
  public String getModifiedUser() {
    return modifiedUser;
  }

  public void setModifiedUser(String modifiedUser) {
    this.modifiedUser = modifiedUser;
  }


  public PackageSearchDTO monthlyFee(BigDecimal monthlyFee) {
    this.monthlyFee = monthlyFee;
    return this;
  }

  /**
   * Monthly installment fee if package is not fixed visit. addition of the servicefee and addon fees divided by binding period.             
   * @return monthlyFee
   */
  @javax.annotation.Nullable
  public BigDecimal getMonthlyFee() {
    return monthlyFee;
  }

  public void setMonthlyFee(BigDecimal monthlyFee) {
    this.monthlyFee = monthlyFee;
  }


  public PackageSearchDTO numberOfVisits(Integer numberOfVisits) {
    this.numberOfVisits = numberOfVisits;
    return this;
  }

  /**
   * No of visits for fixed package 
   * @return numberOfVisits
   */
  @javax.annotation.Nullable
  public Integer getNumberOfVisits() {
    return numberOfVisits;
  }

  public void setNumberOfVisits(Integer numberOfVisits) {
    this.numberOfVisits = numberOfVisits;
  }


  public PackageSearchDTO packageId(Integer packageId) {
    this.packageId = packageId;
    return this;
  }

  /**
   * Get packageId
   * @return packageId
   */
  @javax.annotation.Nullable
  public Integer getPackageId() {
    return packageId;
  }

  public void setPackageId(Integer packageId) {
    this.packageId = packageId;
  }


  public PackageSearchDTO packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

  /**
   * Get packageName
   * @return packageName
   */
  @javax.annotation.Nullable
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }


  public PackageSearchDTO packageNumber(Integer packageNumber) {
    this.packageNumber = packageNumber;
    return this;
  }

  /**
   * Get packageNumber
   * @return packageNumber
   */
  @javax.annotation.Nullable
  public Integer getPackageNumber() {
    return packageNumber;
  }

  public void setPackageNumber(Integer packageNumber) {
    this.packageNumber = packageNumber;
  }


  public PackageSearchDTO packageType(String packageType) {
    this.packageType = packageType;
    return this;
  }

  /**
   * Package type can be either fixed visit or unlimited.             
   * @return packageType
   */
  @javax.annotation.Nullable
  public String getPackageType() {
    return packageType;
  }

  public void setPackageType(String packageType) {
    this.packageType = packageType;
  }


  public PackageSearchDTO registrationFee(BigDecimal registrationFee) {
    this.registrationFee = registrationFee;
    return this;
  }

  /**
   * Registartion fee for the package at a gym.             
   * @return registrationFee
   */
  @javax.annotation.Nullable
  public BigDecimal getRegistrationFee() {
    return registrationFee;
  }

  public void setRegistrationFee(BigDecimal registrationFee) {
    this.registrationFee = registrationFee;
  }


  public PackageSearchDTO serviceFee(BigDecimal serviceFee) {
    this.serviceFee = serviceFee;
    return this;
  }

  /**
   * total Service charge of the package for entire period.             
   * @return serviceFee
   */
  @javax.annotation.Nullable
  public BigDecimal getServiceFee() {
    return serviceFee;
  }

  public void setServiceFee(BigDecimal serviceFee) {
    this.serviceFee = serviceFee;
  }


  public PackageSearchDTO tags(String tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.             
   * @return tags
   */
  @javax.annotation.Nullable
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }


  public PackageSearchDTO totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * total number of recode for particular search 
   * @return totalCount
   */
  @javax.annotation.Nullable
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public PackageSearchDTO totalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * total price for the package including Addon fees, service fee and registration fee. incoming values for this field will ignore.             
   * @return totalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageSearchDTO packageSearchDTO = (PackageSearchDTO) o;
    return Objects.equals(this.activeStatus, packageSearchDTO.activeStatus) &&
        Objects.equals(this.addonFee, packageSearchDTO.addonFee) &&
        Objects.equals(this.applyForAllGyms, packageSearchDTO.applyForAllGyms) &&
        Objects.equals(this.bindingPeriod, packageSearchDTO.bindingPeriod) &&
        Objects.equals(this.createdDate, packageSearchDTO.createdDate) &&
        Objects.equals(this.createdUser, packageSearchDTO.createdUser) &&
        Objects.equals(this.description, packageSearchDTO.description) &&
        Objects.equals(this.features, packageSearchDTO.features) &&
        Objects.equals(this.freeMonths, packageSearchDTO.freeMonths) &&
        Objects.equals(this.memberCanRemoveAddOns, packageSearchDTO.memberCanRemoveAddOns) &&
        Objects.equals(this.modifiedDate, packageSearchDTO.modifiedDate) &&
        Objects.equals(this.modifiedUser, packageSearchDTO.modifiedUser) &&
        Objects.equals(this.monthlyFee, packageSearchDTO.monthlyFee) &&
        Objects.equals(this.numberOfVisits, packageSearchDTO.numberOfVisits) &&
        Objects.equals(this.packageId, packageSearchDTO.packageId) &&
        Objects.equals(this.packageName, packageSearchDTO.packageName) &&
        Objects.equals(this.packageNumber, packageSearchDTO.packageNumber) &&
        Objects.equals(this.packageType, packageSearchDTO.packageType) &&
        Objects.equals(this.registrationFee, packageSearchDTO.registrationFee) &&
        Objects.equals(this.serviceFee, packageSearchDTO.serviceFee) &&
        Objects.equals(this.tags, packageSearchDTO.tags) &&
        Objects.equals(this.totalCount, packageSearchDTO.totalCount) &&
        Objects.equals(this.totalPrice, packageSearchDTO.totalPrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeStatus, addonFee, applyForAllGyms, bindingPeriod, createdDate, createdUser, description, features, freeMonths, memberCanRemoveAddOns, modifiedDate, modifiedUser, monthlyFee, numberOfVisits, packageId, packageName, packageNumber, packageType, registrationFee, serviceFee, tags, totalCount, totalPrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageSearchDTO {\n");
    sb.append("    activeStatus: ").append(toIndentedString(activeStatus)).append("\n");
    sb.append("    addonFee: ").append(toIndentedString(addonFee)).append("\n");
    sb.append("    applyForAllGyms: ").append(toIndentedString(applyForAllGyms)).append("\n");
    sb.append("    bindingPeriod: ").append(toIndentedString(bindingPeriod)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdUser: ").append(toIndentedString(createdUser)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    freeMonths: ").append(toIndentedString(freeMonths)).append("\n");
    sb.append("    memberCanRemoveAddOns: ").append(toIndentedString(memberCanRemoveAddOns)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedUser: ").append(toIndentedString(modifiedUser)).append("\n");
    sb.append("    monthlyFee: ").append(toIndentedString(monthlyFee)).append("\n");
    sb.append("    numberOfVisits: ").append(toIndentedString(numberOfVisits)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    packageNumber: ").append(toIndentedString(packageNumber)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    registrationFee: ").append(toIndentedString(registrationFee)).append("\n");
    sb.append("    serviceFee: ").append(toIndentedString(serviceFee)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeStatus");
    openapiFields.add("addonFee");
    openapiFields.add("applyForAllGyms");
    openapiFields.add("bindingPeriod");
    openapiFields.add("createdDate");
    openapiFields.add("createdUser");
    openapiFields.add("description");
    openapiFields.add("features");
    openapiFields.add("freeMonths");
    openapiFields.add("memberCanRemoveAddOns");
    openapiFields.add("modifiedDate");
    openapiFields.add("modifiedUser");
    openapiFields.add("monthlyFee");
    openapiFields.add("numberOfVisits");
    openapiFields.add("packageId");
    openapiFields.add("packageName");
    openapiFields.add("packageNumber");
    openapiFields.add("packageType");
    openapiFields.add("registrationFee");
    openapiFields.add("serviceFee");
    openapiFields.add("tags");
    openapiFields.add("totalCount");
    openapiFields.add("totalPrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PackageSearchDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PackageSearchDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PackageSearchDTO is not found in the empty JSON string", PackageSearchDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PackageSearchDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PackageSearchDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createdUser") != null && !jsonObj.get("createdUser").isJsonNull()) && !jsonObj.get("createdUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdUser").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull()) && !jsonObj.get("features").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be a primitive type in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if ((jsonObj.get("modifiedUser") != null && !jsonObj.get("modifiedUser").isJsonNull()) && !jsonObj.get("modifiedUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedUser").toString()));
      }
      if ((jsonObj.get("packageName") != null && !jsonObj.get("packageName").isJsonNull()) && !jsonObj.get("packageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageName").toString()));
      }
      if ((jsonObj.get("packageType") != null && !jsonObj.get("packageType").isJsonNull()) && !jsonObj.get("packageType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageType").toString()));
      }
      if ((jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) && !jsonObj.get("tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PackageSearchDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PackageSearchDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PackageSearchDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PackageSearchDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<PackageSearchDTO>() {
           @Override
           public void write(JsonWriter out, PackageSearchDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PackageSearchDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PackageSearchDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PackageSearchDTO
   * @throws IOException if the JSON string is invalid with respect to PackageSearchDTO
   */
  public static PackageSearchDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PackageSearchDTO.class);
  }

  /**
   * Convert an instance of PackageSearchDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

