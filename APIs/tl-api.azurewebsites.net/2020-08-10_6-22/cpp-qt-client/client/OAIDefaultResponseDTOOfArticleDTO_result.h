/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDefaultResponseDTOOfArticleDTO_result.h
 *
 * 
 */

#ifndef OAIDefaultResponseDTOOfArticleDTO_result_H
#define OAIDefaultResponseDTOOfArticleDTO_result_H

#include <QJsonObject>

#include "OAIArticleDTO.h"
#include "OAIGymArticleDetailsDTO.h"
#include "OAIGymDTO.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGymDTO;
class OAIGymArticleDetailsDTO;

class OAIDefaultResponseDTOOfArticleDTO_result : public OAIObject {
public:
    OAIDefaultResponseDTOOfArticleDTO_result();
    OAIDefaultResponseDTOOfArticleDTO_result(QString json);
    ~OAIDefaultResponseDTOOfArticleDTO_result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActiveStatus() const;
    void setActiveStatus(const bool &active_status);
    bool is_active_status_Set() const;
    bool is_active_status_Valid() const;

    bool isApplyForAllGyms() const;
    void setApplyForAllGyms(const bool &apply_for_all_gyms);
    bool is_apply_for_all_gyms_Set() const;
    bool is_apply_for_all_gyms_Valid() const;

    qint32 getArticleId() const;
    void setArticleId(const qint32 &article_id);
    bool is_article_id_Set() const;
    bool is_article_id_Valid() const;

    QList<OAIGymDTO> getAvailableGyms() const;
    void setAvailableGyms(const QList<OAIGymDTO> &available_gyms);
    bool is_available_gyms_Set() const;
    bool is_available_gyms_Valid() const;

    double getAvailableQty() const;
    void setAvailableQty(const double &available_qty);
    bool is_available_qty_Set() const;
    bool is_available_qty_Valid() const;

    QString getBarcode() const;
    void setBarcode(const QString &barcode);
    bool is_barcode_Set() const;
    bool is_barcode_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getCreatedUser() const;
    void setCreatedUser(const QString &created_user);
    bool is_created_user_Set() const;
    bool is_created_user_Valid() const;

    QString getCronExpression() const;
    void setCronExpression(const QString &cron_expression);
    bool is_cron_expression_Set() const;
    bool is_cron_expression_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDiscount() const;
    void setDiscount(const double &discount);
    bool is_discount_Set() const;
    bool is_discount_Valid() const;

    double getEmployeeDiscount() const;
    void setEmployeeDiscount(const double &employee_discount);
    bool is_employee_discount_Set() const;
    bool is_employee_discount_Valid() const;

    double getEmployeePrice() const;
    void setEmployeePrice(const double &employee_price);
    bool is_employee_price_Set() const;
    bool is_employee_price_Valid() const;

    QList<OAIGymArticleDetailsDTO> getGymArticles() const;
    void setGymArticles(const QList<OAIGymArticleDetailsDTO> &gym_articles);
    bool is_gym_articles_Set() const;
    bool is_gym_articles_Valid() const;

    bool isIsAddOn() const;
    void setIsAddOn(const bool &is_add_on);
    bool is_is_add_on_Set() const;
    bool is_is_add_on_Valid() const;

    bool isIsInventoryItem() const;
    void setIsInventoryItem(const bool &is_inventory_item);
    bool is_is_inventory_item_Set() const;
    bool is_is_inventory_item_Valid() const;

    bool isIsObsolete() const;
    void setIsObsolete(const bool &is_obsolete);
    bool is_is_obsolete_Set() const;
    bool is_is_obsolete_Valid() const;

    QString getMeasureUnit() const;
    void setMeasureUnit(const QString &measure_unit);
    bool is_measure_unit_Set() const;
    bool is_measure_unit_Valid() const;

    QDateTime getModifiedDate() const;
    void setModifiedDate(const QDateTime &modified_date);
    bool is_modified_date_Set() const;
    bool is_modified_date_Valid() const;

    QString getModifiedUser() const;
    void setModifiedUser(const QString &modified_user);
    bool is_modified_user_Set() const;
    bool is_modified_user_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getReorderLevel() const;
    void setReorderLevel(const double &reorder_level);
    bool is_reorder_level_Set() const;
    bool is_reorder_level_Valid() const;

    qint32 getRevenueAccountId() const;
    void setRevenueAccountId(const qint32 &revenue_account_id);
    bool is_revenue_account_id_Set() const;
    bool is_revenue_account_id_Valid() const;

    double getSellingPrice() const;
    void setSellingPrice(const double &selling_price);
    bool is_selling_price_Set() const;
    bool is_selling_price_Valid() const;

    QString getTags() const;
    void setTags(const QString &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getVat() const;
    void setVat(const double &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    bool isVatApplicable() const;
    void setVatApplicable(const bool &vat_applicable);
    bool is_vat_applicable_Set() const;
    bool is_vat_applicable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active_status;
    bool m_active_status_isSet;
    bool m_active_status_isValid;

    bool m_apply_for_all_gyms;
    bool m_apply_for_all_gyms_isSet;
    bool m_apply_for_all_gyms_isValid;

    qint32 m_article_id;
    bool m_article_id_isSet;
    bool m_article_id_isValid;

    QList<OAIGymDTO> m_available_gyms;
    bool m_available_gyms_isSet;
    bool m_available_gyms_isValid;

    double m_available_qty;
    bool m_available_qty_isSet;
    bool m_available_qty_isValid;

    QString m_barcode;
    bool m_barcode_isSet;
    bool m_barcode_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_created_user;
    bool m_created_user_isSet;
    bool m_created_user_isValid;

    QString m_cron_expression;
    bool m_cron_expression_isSet;
    bool m_cron_expression_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_discount;
    bool m_discount_isSet;
    bool m_discount_isValid;

    double m_employee_discount;
    bool m_employee_discount_isSet;
    bool m_employee_discount_isValid;

    double m_employee_price;
    bool m_employee_price_isSet;
    bool m_employee_price_isValid;

    QList<OAIGymArticleDetailsDTO> m_gym_articles;
    bool m_gym_articles_isSet;
    bool m_gym_articles_isValid;

    bool m_is_add_on;
    bool m_is_add_on_isSet;
    bool m_is_add_on_isValid;

    bool m_is_inventory_item;
    bool m_is_inventory_item_isSet;
    bool m_is_inventory_item_isValid;

    bool m_is_obsolete;
    bool m_is_obsolete_isSet;
    bool m_is_obsolete_isValid;

    QString m_measure_unit;
    bool m_measure_unit_isSet;
    bool m_measure_unit_isValid;

    QDateTime m_modified_date;
    bool m_modified_date_isSet;
    bool m_modified_date_isValid;

    QString m_modified_user;
    bool m_modified_user_isSet;
    bool m_modified_user_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_reorder_level;
    bool m_reorder_level_isSet;
    bool m_reorder_level_isValid;

    qint32 m_revenue_account_id;
    bool m_revenue_account_id_isSet;
    bool m_revenue_account_id_isValid;

    double m_selling_price;
    bool m_selling_price_isSet;
    bool m_selling_price_isValid;

    QString m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_vat;
    bool m_vat_isSet;
    bool m_vat_isValid;

    bool m_vat_applicable;
    bool m_vat_applicable_isSet;
    bool m_vat_applicable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDefaultResponseDTOOfArticleDTO_result)

#endif // OAIDefaultResponseDTOOfArticleDTO_result_H
