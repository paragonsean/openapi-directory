/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPackageSearchDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPackageSearchDTO::OAIPackageSearchDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPackageSearchDTO::OAIPackageSearchDTO() {
    this->initializeModel();
}

OAIPackageSearchDTO::~OAIPackageSearchDTO() {}

void OAIPackageSearchDTO::initializeModel() {

    m_active_status_isSet = false;
    m_active_status_isValid = false;

    m_addon_fee_isSet = false;
    m_addon_fee_isValid = false;

    m_apply_for_all_gyms_isSet = false;
    m_apply_for_all_gyms_isValid = false;

    m_binding_period_isSet = false;
    m_binding_period_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_created_user_isSet = false;
    m_created_user_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_features_isSet = false;
    m_features_isValid = false;

    m_free_months_isSet = false;
    m_free_months_isValid = false;

    m_member_can_remove_add_ons_isSet = false;
    m_member_can_remove_add_ons_isValid = false;

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_modified_user_isSet = false;
    m_modified_user_isValid = false;

    m_monthly_fee_isSet = false;
    m_monthly_fee_isValid = false;

    m_number_of_visits_isSet = false;
    m_number_of_visits_isValid = false;

    m_package_id_isSet = false;
    m_package_id_isValid = false;

    m_package_name_isSet = false;
    m_package_name_isValid = false;

    m_package_number_isSet = false;
    m_package_number_isValid = false;

    m_package_type_isSet = false;
    m_package_type_isValid = false;

    m_registration_fee_isSet = false;
    m_registration_fee_isValid = false;

    m_service_fee_isSet = false;
    m_service_fee_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_total_count_isSet = false;
    m_total_count_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;
}

void OAIPackageSearchDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPackageSearchDTO::fromJsonObject(QJsonObject json) {

    m_active_status_isValid = ::OpenAPI::fromJsonValue(m_active_status, json[QString("activeStatus")]);
    m_active_status_isSet = !json[QString("activeStatus")].isNull() && m_active_status_isValid;

    m_addon_fee_isValid = ::OpenAPI::fromJsonValue(m_addon_fee, json[QString("addonFee")]);
    m_addon_fee_isSet = !json[QString("addonFee")].isNull() && m_addon_fee_isValid;

    m_apply_for_all_gyms_isValid = ::OpenAPI::fromJsonValue(m_apply_for_all_gyms, json[QString("applyForAllGyms")]);
    m_apply_for_all_gyms_isSet = !json[QString("applyForAllGyms")].isNull() && m_apply_for_all_gyms_isValid;

    m_binding_period_isValid = ::OpenAPI::fromJsonValue(m_binding_period, json[QString("bindingPeriod")]);
    m_binding_period_isSet = !json[QString("bindingPeriod")].isNull() && m_binding_period_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("createdDate")]);
    m_created_date_isSet = !json[QString("createdDate")].isNull() && m_created_date_isValid;

    m_created_user_isValid = ::OpenAPI::fromJsonValue(m_created_user, json[QString("createdUser")]);
    m_created_user_isSet = !json[QString("createdUser")].isNull() && m_created_user_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_features_isValid = ::OpenAPI::fromJsonValue(m_features, json[QString("features")]);
    m_features_isSet = !json[QString("features")].isNull() && m_features_isValid;

    m_free_months_isValid = ::OpenAPI::fromJsonValue(m_free_months, json[QString("freeMonths")]);
    m_free_months_isSet = !json[QString("freeMonths")].isNull() && m_free_months_isValid;

    m_member_can_remove_add_ons_isValid = ::OpenAPI::fromJsonValue(m_member_can_remove_add_ons, json[QString("memberCanRemoveAddOns")]);
    m_member_can_remove_add_ons_isSet = !json[QString("memberCanRemoveAddOns")].isNull() && m_member_can_remove_add_ons_isValid;

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modifiedDate")]);
    m_modified_date_isSet = !json[QString("modifiedDate")].isNull() && m_modified_date_isValid;

    m_modified_user_isValid = ::OpenAPI::fromJsonValue(m_modified_user, json[QString("modifiedUser")]);
    m_modified_user_isSet = !json[QString("modifiedUser")].isNull() && m_modified_user_isValid;

    m_monthly_fee_isValid = ::OpenAPI::fromJsonValue(m_monthly_fee, json[QString("monthlyFee")]);
    m_monthly_fee_isSet = !json[QString("monthlyFee")].isNull() && m_monthly_fee_isValid;

    m_number_of_visits_isValid = ::OpenAPI::fromJsonValue(m_number_of_visits, json[QString("numberOfVisits")]);
    m_number_of_visits_isSet = !json[QString("numberOfVisits")].isNull() && m_number_of_visits_isValid;

    m_package_id_isValid = ::OpenAPI::fromJsonValue(m_package_id, json[QString("packageId")]);
    m_package_id_isSet = !json[QString("packageId")].isNull() && m_package_id_isValid;

    m_package_name_isValid = ::OpenAPI::fromJsonValue(m_package_name, json[QString("packageName")]);
    m_package_name_isSet = !json[QString("packageName")].isNull() && m_package_name_isValid;

    m_package_number_isValid = ::OpenAPI::fromJsonValue(m_package_number, json[QString("packageNumber")]);
    m_package_number_isSet = !json[QString("packageNumber")].isNull() && m_package_number_isValid;

    m_package_type_isValid = ::OpenAPI::fromJsonValue(m_package_type, json[QString("packageType")]);
    m_package_type_isSet = !json[QString("packageType")].isNull() && m_package_type_isValid;

    m_registration_fee_isValid = ::OpenAPI::fromJsonValue(m_registration_fee, json[QString("registrationFee")]);
    m_registration_fee_isSet = !json[QString("registrationFee")].isNull() && m_registration_fee_isValid;

    m_service_fee_isValid = ::OpenAPI::fromJsonValue(m_service_fee, json[QString("serviceFee")]);
    m_service_fee_isSet = !json[QString("serviceFee")].isNull() && m_service_fee_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_total_count_isValid = ::OpenAPI::fromJsonValue(m_total_count, json[QString("totalCount")]);
    m_total_count_isSet = !json[QString("totalCount")].isNull() && m_total_count_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("totalPrice")]);
    m_total_price_isSet = !json[QString("totalPrice")].isNull() && m_total_price_isValid;
}

QString OAIPackageSearchDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPackageSearchDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_active_status_isSet) {
        obj.insert(QString("activeStatus"), ::OpenAPI::toJsonValue(m_active_status));
    }
    if (m_addon_fee_isSet) {
        obj.insert(QString("addonFee"), ::OpenAPI::toJsonValue(m_addon_fee));
    }
    if (m_apply_for_all_gyms_isSet) {
        obj.insert(QString("applyForAllGyms"), ::OpenAPI::toJsonValue(m_apply_for_all_gyms));
    }
    if (m_binding_period_isSet) {
        obj.insert(QString("bindingPeriod"), ::OpenAPI::toJsonValue(m_binding_period));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("createdDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_created_user_isSet) {
        obj.insert(QString("createdUser"), ::OpenAPI::toJsonValue(m_created_user));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_features_isSet) {
        obj.insert(QString("features"), ::OpenAPI::toJsonValue(m_features));
    }
    if (m_free_months_isSet) {
        obj.insert(QString("freeMonths"), ::OpenAPI::toJsonValue(m_free_months));
    }
    if (m_member_can_remove_add_ons_isSet) {
        obj.insert(QString("memberCanRemoveAddOns"), ::OpenAPI::toJsonValue(m_member_can_remove_add_ons));
    }
    if (m_modified_date_isSet) {
        obj.insert(QString("modifiedDate"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_modified_user_isSet) {
        obj.insert(QString("modifiedUser"), ::OpenAPI::toJsonValue(m_modified_user));
    }
    if (m_monthly_fee_isSet) {
        obj.insert(QString("monthlyFee"), ::OpenAPI::toJsonValue(m_monthly_fee));
    }
    if (m_number_of_visits_isSet) {
        obj.insert(QString("numberOfVisits"), ::OpenAPI::toJsonValue(m_number_of_visits));
    }
    if (m_package_id_isSet) {
        obj.insert(QString("packageId"), ::OpenAPI::toJsonValue(m_package_id));
    }
    if (m_package_name_isSet) {
        obj.insert(QString("packageName"), ::OpenAPI::toJsonValue(m_package_name));
    }
    if (m_package_number_isSet) {
        obj.insert(QString("packageNumber"), ::OpenAPI::toJsonValue(m_package_number));
    }
    if (m_package_type_isSet) {
        obj.insert(QString("packageType"), ::OpenAPI::toJsonValue(m_package_type));
    }
    if (m_registration_fee_isSet) {
        obj.insert(QString("registrationFee"), ::OpenAPI::toJsonValue(m_registration_fee));
    }
    if (m_service_fee_isSet) {
        obj.insert(QString("serviceFee"), ::OpenAPI::toJsonValue(m_service_fee));
    }
    if (m_tags_isSet) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_total_count_isSet) {
        obj.insert(QString("totalCount"), ::OpenAPI::toJsonValue(m_total_count));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("totalPrice"), ::OpenAPI::toJsonValue(m_total_price));
    }
    return obj;
}

bool OAIPackageSearchDTO::isActiveStatus() const {
    return m_active_status;
}
void OAIPackageSearchDTO::setActiveStatus(const bool &active_status) {
    m_active_status = active_status;
    m_active_status_isSet = true;
}

bool OAIPackageSearchDTO::is_active_status_Set() const{
    return m_active_status_isSet;
}

bool OAIPackageSearchDTO::is_active_status_Valid() const{
    return m_active_status_isValid;
}

double OAIPackageSearchDTO::getAddonFee() const {
    return m_addon_fee;
}
void OAIPackageSearchDTO::setAddonFee(const double &addon_fee) {
    m_addon_fee = addon_fee;
    m_addon_fee_isSet = true;
}

bool OAIPackageSearchDTO::is_addon_fee_Set() const{
    return m_addon_fee_isSet;
}

bool OAIPackageSearchDTO::is_addon_fee_Valid() const{
    return m_addon_fee_isValid;
}

bool OAIPackageSearchDTO::isApplyForAllGyms() const {
    return m_apply_for_all_gyms;
}
void OAIPackageSearchDTO::setApplyForAllGyms(const bool &apply_for_all_gyms) {
    m_apply_for_all_gyms = apply_for_all_gyms;
    m_apply_for_all_gyms_isSet = true;
}

bool OAIPackageSearchDTO::is_apply_for_all_gyms_Set() const{
    return m_apply_for_all_gyms_isSet;
}

bool OAIPackageSearchDTO::is_apply_for_all_gyms_Valid() const{
    return m_apply_for_all_gyms_isValid;
}

qint32 OAIPackageSearchDTO::getBindingPeriod() const {
    return m_binding_period;
}
void OAIPackageSearchDTO::setBindingPeriod(const qint32 &binding_period) {
    m_binding_period = binding_period;
    m_binding_period_isSet = true;
}

bool OAIPackageSearchDTO::is_binding_period_Set() const{
    return m_binding_period_isSet;
}

bool OAIPackageSearchDTO::is_binding_period_Valid() const{
    return m_binding_period_isValid;
}

QDateTime OAIPackageSearchDTO::getCreatedDate() const {
    return m_created_date;
}
void OAIPackageSearchDTO::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIPackageSearchDTO::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIPackageSearchDTO::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIPackageSearchDTO::getCreatedUser() const {
    return m_created_user;
}
void OAIPackageSearchDTO::setCreatedUser(const QString &created_user) {
    m_created_user = created_user;
    m_created_user_isSet = true;
}

bool OAIPackageSearchDTO::is_created_user_Set() const{
    return m_created_user_isSet;
}

bool OAIPackageSearchDTO::is_created_user_Valid() const{
    return m_created_user_isValid;
}

QString OAIPackageSearchDTO::getDescription() const {
    return m_description;
}
void OAIPackageSearchDTO::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPackageSearchDTO::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPackageSearchDTO::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPackageSearchDTO::getFeatures() const {
    return m_features;
}
void OAIPackageSearchDTO::setFeatures(const QString &features) {
    m_features = features;
    m_features_isSet = true;
}

bool OAIPackageSearchDTO::is_features_Set() const{
    return m_features_isSet;
}

bool OAIPackageSearchDTO::is_features_Valid() const{
    return m_features_isValid;
}

qint32 OAIPackageSearchDTO::getFreeMonths() const {
    return m_free_months;
}
void OAIPackageSearchDTO::setFreeMonths(const qint32 &free_months) {
    m_free_months = free_months;
    m_free_months_isSet = true;
}

bool OAIPackageSearchDTO::is_free_months_Set() const{
    return m_free_months_isSet;
}

bool OAIPackageSearchDTO::is_free_months_Valid() const{
    return m_free_months_isValid;
}

bool OAIPackageSearchDTO::isMemberCanRemoveAddOns() const {
    return m_member_can_remove_add_ons;
}
void OAIPackageSearchDTO::setMemberCanRemoveAddOns(const bool &member_can_remove_add_ons) {
    m_member_can_remove_add_ons = member_can_remove_add_ons;
    m_member_can_remove_add_ons_isSet = true;
}

bool OAIPackageSearchDTO::is_member_can_remove_add_ons_Set() const{
    return m_member_can_remove_add_ons_isSet;
}

bool OAIPackageSearchDTO::is_member_can_remove_add_ons_Valid() const{
    return m_member_can_remove_add_ons_isValid;
}

QDateTime OAIPackageSearchDTO::getModifiedDate() const {
    return m_modified_date;
}
void OAIPackageSearchDTO::setModifiedDate(const QDateTime &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAIPackageSearchDTO::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAIPackageSearchDTO::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

QString OAIPackageSearchDTO::getModifiedUser() const {
    return m_modified_user;
}
void OAIPackageSearchDTO::setModifiedUser(const QString &modified_user) {
    m_modified_user = modified_user;
    m_modified_user_isSet = true;
}

bool OAIPackageSearchDTO::is_modified_user_Set() const{
    return m_modified_user_isSet;
}

bool OAIPackageSearchDTO::is_modified_user_Valid() const{
    return m_modified_user_isValid;
}

double OAIPackageSearchDTO::getMonthlyFee() const {
    return m_monthly_fee;
}
void OAIPackageSearchDTO::setMonthlyFee(const double &monthly_fee) {
    m_monthly_fee = monthly_fee;
    m_monthly_fee_isSet = true;
}

bool OAIPackageSearchDTO::is_monthly_fee_Set() const{
    return m_monthly_fee_isSet;
}

bool OAIPackageSearchDTO::is_monthly_fee_Valid() const{
    return m_monthly_fee_isValid;
}

qint32 OAIPackageSearchDTO::getNumberOfVisits() const {
    return m_number_of_visits;
}
void OAIPackageSearchDTO::setNumberOfVisits(const qint32 &number_of_visits) {
    m_number_of_visits = number_of_visits;
    m_number_of_visits_isSet = true;
}

bool OAIPackageSearchDTO::is_number_of_visits_Set() const{
    return m_number_of_visits_isSet;
}

bool OAIPackageSearchDTO::is_number_of_visits_Valid() const{
    return m_number_of_visits_isValid;
}

qint32 OAIPackageSearchDTO::getPackageId() const {
    return m_package_id;
}
void OAIPackageSearchDTO::setPackageId(const qint32 &package_id) {
    m_package_id = package_id;
    m_package_id_isSet = true;
}

bool OAIPackageSearchDTO::is_package_id_Set() const{
    return m_package_id_isSet;
}

bool OAIPackageSearchDTO::is_package_id_Valid() const{
    return m_package_id_isValid;
}

QString OAIPackageSearchDTO::getPackageName() const {
    return m_package_name;
}
void OAIPackageSearchDTO::setPackageName(const QString &package_name) {
    m_package_name = package_name;
    m_package_name_isSet = true;
}

bool OAIPackageSearchDTO::is_package_name_Set() const{
    return m_package_name_isSet;
}

bool OAIPackageSearchDTO::is_package_name_Valid() const{
    return m_package_name_isValid;
}

qint32 OAIPackageSearchDTO::getPackageNumber() const {
    return m_package_number;
}
void OAIPackageSearchDTO::setPackageNumber(const qint32 &package_number) {
    m_package_number = package_number;
    m_package_number_isSet = true;
}

bool OAIPackageSearchDTO::is_package_number_Set() const{
    return m_package_number_isSet;
}

bool OAIPackageSearchDTO::is_package_number_Valid() const{
    return m_package_number_isValid;
}

QString OAIPackageSearchDTO::getPackageType() const {
    return m_package_type;
}
void OAIPackageSearchDTO::setPackageType(const QString &package_type) {
    m_package_type = package_type;
    m_package_type_isSet = true;
}

bool OAIPackageSearchDTO::is_package_type_Set() const{
    return m_package_type_isSet;
}

bool OAIPackageSearchDTO::is_package_type_Valid() const{
    return m_package_type_isValid;
}

double OAIPackageSearchDTO::getRegistrationFee() const {
    return m_registration_fee;
}
void OAIPackageSearchDTO::setRegistrationFee(const double &registration_fee) {
    m_registration_fee = registration_fee;
    m_registration_fee_isSet = true;
}

bool OAIPackageSearchDTO::is_registration_fee_Set() const{
    return m_registration_fee_isSet;
}

bool OAIPackageSearchDTO::is_registration_fee_Valid() const{
    return m_registration_fee_isValid;
}

double OAIPackageSearchDTO::getServiceFee() const {
    return m_service_fee;
}
void OAIPackageSearchDTO::setServiceFee(const double &service_fee) {
    m_service_fee = service_fee;
    m_service_fee_isSet = true;
}

bool OAIPackageSearchDTO::is_service_fee_Set() const{
    return m_service_fee_isSet;
}

bool OAIPackageSearchDTO::is_service_fee_Valid() const{
    return m_service_fee_isValid;
}

QString OAIPackageSearchDTO::getTags() const {
    return m_tags;
}
void OAIPackageSearchDTO::setTags(const QString &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIPackageSearchDTO::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIPackageSearchDTO::is_tags_Valid() const{
    return m_tags_isValid;
}

qint32 OAIPackageSearchDTO::getTotalCount() const {
    return m_total_count;
}
void OAIPackageSearchDTO::setTotalCount(const qint32 &total_count) {
    m_total_count = total_count;
    m_total_count_isSet = true;
}

bool OAIPackageSearchDTO::is_total_count_Set() const{
    return m_total_count_isSet;
}

bool OAIPackageSearchDTO::is_total_count_Valid() const{
    return m_total_count_isValid;
}

double OAIPackageSearchDTO::getTotalPrice() const {
    return m_total_price;
}
void OAIPackageSearchDTO::setTotalPrice(const double &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIPackageSearchDTO::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIPackageSearchDTO::is_total_price_Valid() const{
    return m_total_price_isValid;
}

bool OAIPackageSearchDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_addon_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apply_for_all_gyms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_binding_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_features_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_months_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_can_remove_add_ons_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_visits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPackageSearchDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
