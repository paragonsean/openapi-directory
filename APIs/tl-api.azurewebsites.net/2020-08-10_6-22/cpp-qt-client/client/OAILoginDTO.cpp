/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoginDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoginDTO::OAILoginDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoginDTO::OAILoginDTO() {
    this->initializeModel();
}

OAILoginDTO::~OAILoginDTO() {}

void OAILoginDTO::initializeModel() {

    m_password_isSet = false;
    m_password_isValid = false;

    m_remember_isSet = false;
    m_remember_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAILoginDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoginDTO::fromJsonObject(QJsonObject json) {

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_remember_isValid = ::OpenAPI::fromJsonValue(m_remember, json[QString("remember")]);
    m_remember_isSet = !json[QString("remember")].isNull() && m_remember_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAILoginDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoginDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_remember_isSet) {
        obj.insert(QString("remember"), ::OpenAPI::toJsonValue(m_remember));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAILoginDTO::getPassword() const {
    return m_password;
}
void OAILoginDTO::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAILoginDTO::is_password_Set() const{
    return m_password_isSet;
}

bool OAILoginDTO::is_password_Valid() const{
    return m_password_isValid;
}

bool OAILoginDTO::isRemember() const {
    return m_remember;
}
void OAILoginDTO::setRemember(const bool &remember) {
    m_remember = remember;
    m_remember_isSet = true;
}

bool OAILoginDTO::is_remember_Set() const{
    return m_remember_isSet;
}

bool OAILoginDTO::is_remember_Valid() const{
    return m_remember_isValid;
}

QString OAILoginDTO::getUsername() const {
    return m_username;
}
void OAILoginDTO::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAILoginDTO::is_username_Set() const{
    return m_username_isSet;
}

bool OAILoginDTO::is_username_Valid() const{
    return m_username_isValid;
}

bool OAILoginDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remember_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoginDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
