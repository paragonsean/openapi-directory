/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultResponseDTOOfGymDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultResponseDTOOfGymDTO::OAIDefaultResponseDTOOfGymDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultResponseDTOOfGymDTO::OAIDefaultResponseDTOOfGymDTO() {
    this->initializeModel();
}

OAIDefaultResponseDTOOfGymDTO::~OAIDefaultResponseDTOOfGymDTO() {}

void OAIDefaultResponseDTOOfGymDTO::initializeModel() {

    m_is_error_isSet = false;
    m_is_error_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_response_exception_isSet = false;
    m_response_exception_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;
}

void OAIDefaultResponseDTOOfGymDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultResponseDTOOfGymDTO::fromJsonObject(QJsonObject json) {

    m_is_error_isValid = ::OpenAPI::fromJsonValue(m_is_error, json[QString("isError")]);
    m_is_error_isSet = !json[QString("isError")].isNull() && m_is_error_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_response_exception_isValid = ::OpenAPI::fromJsonValue(m_response_exception, json[QString("responseException")]);
    m_response_exception_isSet = !json[QString("responseException")].isNull() && m_response_exception_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;
}

QString OAIDefaultResponseDTOOfGymDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultResponseDTOOfGymDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_is_error_isSet) {
        obj.insert(QString("isError"), ::OpenAPI::toJsonValue(m_is_error));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_response_exception_isSet) {
        obj.insert(QString("responseException"), ::OpenAPI::toJsonValue(m_response_exception));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    return obj;
}

bool OAIDefaultResponseDTOOfGymDTO::isIsError() const {
    return m_is_error;
}
void OAIDefaultResponseDTOOfGymDTO::setIsError(const bool &is_error) {
    m_is_error = is_error;
    m_is_error_isSet = true;
}

bool OAIDefaultResponseDTOOfGymDTO::is_is_error_Set() const{
    return m_is_error_isSet;
}

bool OAIDefaultResponseDTOOfGymDTO::is_is_error_Valid() const{
    return m_is_error_isValid;
}

QString OAIDefaultResponseDTOOfGymDTO::getMessage() const {
    return m_message;
}
void OAIDefaultResponseDTOOfGymDTO::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIDefaultResponseDTOOfGymDTO::is_message_Set() const{
    return m_message_isSet;
}

bool OAIDefaultResponseDTOOfGymDTO::is_message_Valid() const{
    return m_message_isValid;
}

QJsonValue OAIDefaultResponseDTOOfGymDTO::getResponseException() const {
    return m_response_exception;
}
void OAIDefaultResponseDTOOfGymDTO::setResponseException(const QJsonValue &response_exception) {
    m_response_exception = response_exception;
    m_response_exception_isSet = true;
}

bool OAIDefaultResponseDTOOfGymDTO::is_response_exception_Set() const{
    return m_response_exception_isSet;
}

bool OAIDefaultResponseDTOOfGymDTO::is_response_exception_Valid() const{
    return m_response_exception_isValid;
}

OAIDefaultResponseDTOOfGymDTO_result OAIDefaultResponseDTOOfGymDTO::getResult() const {
    return m_result;
}
void OAIDefaultResponseDTOOfGymDTO::setResult(const OAIDefaultResponseDTOOfGymDTO_result &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIDefaultResponseDTOOfGymDTO::is_result_Set() const{
    return m_result_isSet;
}

bool OAIDefaultResponseDTOOfGymDTO::is_result_Valid() const{
    return m_result_isValid;
}

bool OAIDefaultResponseDTOOfGymDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_exception_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultResponseDTOOfGymDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
