/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIException.h
 *
 * 
 */

#ifndef OAIException_H
#define OAIException_H

#include <QJsonObject>

#include "OAIException_InnerException.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIException_InnerException;

class OAIException : public OAIObject {
public:
    OAIException();
    OAIException(QString json);
    ~OAIException() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIException_InnerException getInnerException() const;
    void setInnerException(const OAIException_InnerException &inner_exception);
    bool is_inner_exception_Set() const;
    bool is_inner_exception_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStackTrace() const;
    void setStackTrace(const QString &stack_trace);
    bool is_stack_trace_Set() const;
    bool is_stack_trace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIException_InnerException m_inner_exception;
    bool m_inner_exception_isSet;
    bool m_inner_exception_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_stack_trace;
    bool m_stack_trace_isSet;
    bool m_stack_trace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIException)

#endif // OAIException_H
