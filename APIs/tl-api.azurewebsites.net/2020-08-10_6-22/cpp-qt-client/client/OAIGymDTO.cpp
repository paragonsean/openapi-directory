/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGymDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGymDTO::OAIGymDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGymDTO::OAIGymDTO() {
    this->initializeModel();
}

OAIGymDTO::~OAIGymDTO() {}

void OAIGymDTO::initializeModel() {

    m_external_gym_number_isSet = false;
    m_external_gym_number_isValid = false;

    m_gym_id_isSet = false;
    m_gym_id_isValid = false;

    m_gym_name_isSet = false;
    m_gym_name_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;
}

void OAIGymDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGymDTO::fromJsonObject(QJsonObject json) {

    m_external_gym_number_isValid = ::OpenAPI::fromJsonValue(m_external_gym_number, json[QString("externalGymNumber")]);
    m_external_gym_number_isSet = !json[QString("externalGymNumber")].isNull() && m_external_gym_number_isValid;

    m_gym_id_isValid = ::OpenAPI::fromJsonValue(m_gym_id, json[QString("gymId")]);
    m_gym_id_isSet = !json[QString("gymId")].isNull() && m_gym_id_isValid;

    m_gym_name_isValid = ::OpenAPI::fromJsonValue(m_gym_name, json[QString("gymName")]);
    m_gym_name_isSet = !json[QString("gymName")].isNull() && m_gym_name_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;
}

QString OAIGymDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGymDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_external_gym_number_isSet) {
        obj.insert(QString("externalGymNumber"), ::OpenAPI::toJsonValue(m_external_gym_number));
    }
    if (m_gym_id_isSet) {
        obj.insert(QString("gymId"), ::OpenAPI::toJsonValue(m_gym_id));
    }
    if (m_gym_name_isSet) {
        obj.insert(QString("gymName"), ::OpenAPI::toJsonValue(m_gym_name));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    return obj;
}

qint32 OAIGymDTO::getExternalGymNumber() const {
    return m_external_gym_number;
}
void OAIGymDTO::setExternalGymNumber(const qint32 &external_gym_number) {
    m_external_gym_number = external_gym_number;
    m_external_gym_number_isSet = true;
}

bool OAIGymDTO::is_external_gym_number_Set() const{
    return m_external_gym_number_isSet;
}

bool OAIGymDTO::is_external_gym_number_Valid() const{
    return m_external_gym_number_isValid;
}

qint32 OAIGymDTO::getGymId() const {
    return m_gym_id;
}
void OAIGymDTO::setGymId(const qint32 &gym_id) {
    m_gym_id = gym_id;
    m_gym_id_isSet = true;
}

bool OAIGymDTO::is_gym_id_Set() const{
    return m_gym_id_isSet;
}

bool OAIGymDTO::is_gym_id_Valid() const{
    return m_gym_id_isValid;
}

QString OAIGymDTO::getGymName() const {
    return m_gym_name;
}
void OAIGymDTO::setGymName(const QString &gym_name) {
    m_gym_name = gym_name;
    m_gym_name_isSet = true;
}

bool OAIGymDTO::is_gym_name_Set() const{
    return m_gym_name_isSet;
}

bool OAIGymDTO::is_gym_name_Valid() const{
    return m_gym_name_isValid;
}

QString OAIGymDTO::getLocation() const {
    return m_location;
}
void OAIGymDTO::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGymDTO::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGymDTO::is_location_Valid() const{
    return m_location_isValid;
}

bool OAIGymDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_external_gym_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gym_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gym_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGymDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
