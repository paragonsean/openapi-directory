/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultResponseDTOOfPackageDTO_result.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultResponseDTOOfPackageDTO_result::OAIDefaultResponseDTOOfPackageDTO_result(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultResponseDTOOfPackageDTO_result::OAIDefaultResponseDTOOfPackageDTO_result() {
    this->initializeModel();
}

OAIDefaultResponseDTOOfPackageDTO_result::~OAIDefaultResponseDTOOfPackageDTO_result() {}

void OAIDefaultResponseDTOOfPackageDTO_result::initializeModel() {

    m_add_ons_isSet = false;
    m_add_ons_isValid = false;

    m_addon_fee_isSet = false;
    m_addon_fee_isValid = false;

    m_apply_for_all_gyms_isSet = false;
    m_apply_for_all_gyms_isValid = false;

    m_available_gyms_isSet = false;
    m_available_gyms_isValid = false;

    m_binding_period_isSet = false;
    m_binding_period_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_created_user_isSet = false;
    m_created_user_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_expire_in_months_isSet = false;
    m_expire_in_months_isValid = false;

    m_features_isSet = false;
    m_features_isValid = false;

    m_free_months_isSet = false;
    m_free_months_isValid = false;

    m_instructions_to_gym_users_isSet = false;
    m_instructions_to_gym_users_isValid = false;

    m_instructions_to_web_users_isSet = false;
    m_instructions_to_web_users_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_atg_isSet = false;
    m_is_atg_isValid = false;

    m_is_auto_renew_isSet = false;
    m_is_auto_renew_isValid = false;

    m_is_first_month_free_isSet = false;
    m_is_first_month_free_isValid = false;

    m_is_registration_fee_isSet = false;
    m_is_registration_fee_isValid = false;

    m_is_rest_amount_isSet = false;
    m_is_rest_amount_isValid = false;

    m_is_shown_in_mobile_isSet = false;
    m_is_shown_in_mobile_isValid = false;

    m_is_sponsor_package_isSet = false;
    m_is_sponsor_package_isValid = false;

    m_maximum_give_away_rest_amount_isSet = false;
    m_maximum_give_away_rest_amount_isValid = false;

    m_member_can_add_add_ons_isSet = false;
    m_member_can_add_add_ons_isValid = false;

    m_member_can_leave_within_free_period_isSet = false;
    m_member_can_leave_within_free_period_isValid = false;

    m_member_can_remove_add_ons_isSet = false;
    m_member_can_remove_add_ons_isValid = false;

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_modified_user_isSet = false;
    m_modified_user_isValid = false;

    m_monthly_fee_isSet = false;
    m_monthly_fee_isValid = false;

    m_next_package_number_isSet = false;
    m_next_package_number_isValid = false;

    m_number_of_installments_isSet = false;
    m_number_of_installments_isValid = false;

    m_number_of_visits_isSet = false;
    m_number_of_visits_isValid = false;

    m_package_id_isSet = false;
    m_package_id_isValid = false;

    m_package_name_isSet = false;
    m_package_name_isValid = false;

    m_package_number_isSet = false;
    m_package_number_isValid = false;

    m_package_type_isSet = false;
    m_package_type_isValid = false;

    m_per_visit_price_isSet = false;
    m_per_visit_price_isValid = false;

    m_registration_fee_isSet = false;
    m_registration_fee_isValid = false;

    m_service_fee_isSet = false;
    m_service_fee_isValid = false;

    m_shown_in_web_isSet = false;
    m_shown_in_web_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;
}

void OAIDefaultResponseDTOOfPackageDTO_result::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultResponseDTOOfPackageDTO_result::fromJsonObject(QJsonObject json) {

    m_add_ons_isValid = ::OpenAPI::fromJsonValue(m_add_ons, json[QString("addOns")]);
    m_add_ons_isSet = !json[QString("addOns")].isNull() && m_add_ons_isValid;

    m_addon_fee_isValid = ::OpenAPI::fromJsonValue(m_addon_fee, json[QString("addonFee")]);
    m_addon_fee_isSet = !json[QString("addonFee")].isNull() && m_addon_fee_isValid;

    m_apply_for_all_gyms_isValid = ::OpenAPI::fromJsonValue(m_apply_for_all_gyms, json[QString("applyForAllGyms")]);
    m_apply_for_all_gyms_isSet = !json[QString("applyForAllGyms")].isNull() && m_apply_for_all_gyms_isValid;

    m_available_gyms_isValid = ::OpenAPI::fromJsonValue(m_available_gyms, json[QString("availableGyms")]);
    m_available_gyms_isSet = !json[QString("availableGyms")].isNull() && m_available_gyms_isValid;

    m_binding_period_isValid = ::OpenAPI::fromJsonValue(m_binding_period, json[QString("bindingPeriod")]);
    m_binding_period_isSet = !json[QString("bindingPeriod")].isNull() && m_binding_period_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("createdDate")]);
    m_created_date_isSet = !json[QString("createdDate")].isNull() && m_created_date_isValid;

    m_created_user_isValid = ::OpenAPI::fromJsonValue(m_created_user, json[QString("createdUser")]);
    m_created_user_isSet = !json[QString("createdUser")].isNull() && m_created_user_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_expire_in_months_isValid = ::OpenAPI::fromJsonValue(m_expire_in_months, json[QString("expireInMonths")]);
    m_expire_in_months_isSet = !json[QString("expireInMonths")].isNull() && m_expire_in_months_isValid;

    m_features_isValid = ::OpenAPI::fromJsonValue(m_features, json[QString("features")]);
    m_features_isSet = !json[QString("features")].isNull() && m_features_isValid;

    m_free_months_isValid = ::OpenAPI::fromJsonValue(m_free_months, json[QString("freeMonths")]);
    m_free_months_isSet = !json[QString("freeMonths")].isNull() && m_free_months_isValid;

    m_instructions_to_gym_users_isValid = ::OpenAPI::fromJsonValue(m_instructions_to_gym_users, json[QString("instructionsToGymUsers")]);
    m_instructions_to_gym_users_isSet = !json[QString("instructionsToGymUsers")].isNull() && m_instructions_to_gym_users_isValid;

    m_instructions_to_web_users_isValid = ::OpenAPI::fromJsonValue(m_instructions_to_web_users, json[QString("instructionsToWebUsers")]);
    m_instructions_to_web_users_isSet = !json[QString("instructionsToWebUsers")].isNull() && m_instructions_to_web_users_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("isActive")]);
    m_is_active_isSet = !json[QString("isActive")].isNull() && m_is_active_isValid;

    m_is_atg_isValid = ::OpenAPI::fromJsonValue(m_is_atg, json[QString("isAtg")]);
    m_is_atg_isSet = !json[QString("isAtg")].isNull() && m_is_atg_isValid;

    m_is_auto_renew_isValid = ::OpenAPI::fromJsonValue(m_is_auto_renew, json[QString("isAutoRenew")]);
    m_is_auto_renew_isSet = !json[QString("isAutoRenew")].isNull() && m_is_auto_renew_isValid;

    m_is_first_month_free_isValid = ::OpenAPI::fromJsonValue(m_is_first_month_free, json[QString("isFirstMonthFree")]);
    m_is_first_month_free_isSet = !json[QString("isFirstMonthFree")].isNull() && m_is_first_month_free_isValid;

    m_is_registration_fee_isValid = ::OpenAPI::fromJsonValue(m_is_registration_fee, json[QString("isRegistrationFee")]);
    m_is_registration_fee_isSet = !json[QString("isRegistrationFee")].isNull() && m_is_registration_fee_isValid;

    m_is_rest_amount_isValid = ::OpenAPI::fromJsonValue(m_is_rest_amount, json[QString("isRestAmount")]);
    m_is_rest_amount_isSet = !json[QString("isRestAmount")].isNull() && m_is_rest_amount_isValid;

    m_is_shown_in_mobile_isValid = ::OpenAPI::fromJsonValue(m_is_shown_in_mobile, json[QString("isShownInMobile")]);
    m_is_shown_in_mobile_isSet = !json[QString("isShownInMobile")].isNull() && m_is_shown_in_mobile_isValid;

    m_is_sponsor_package_isValid = ::OpenAPI::fromJsonValue(m_is_sponsor_package, json[QString("isSponsorPackage")]);
    m_is_sponsor_package_isSet = !json[QString("isSponsorPackage")].isNull() && m_is_sponsor_package_isValid;

    m_maximum_give_away_rest_amount_isValid = ::OpenAPI::fromJsonValue(m_maximum_give_away_rest_amount, json[QString("maximumGiveAwayRestAmount")]);
    m_maximum_give_away_rest_amount_isSet = !json[QString("maximumGiveAwayRestAmount")].isNull() && m_maximum_give_away_rest_amount_isValid;

    m_member_can_add_add_ons_isValid = ::OpenAPI::fromJsonValue(m_member_can_add_add_ons, json[QString("memberCanAddAddOns")]);
    m_member_can_add_add_ons_isSet = !json[QString("memberCanAddAddOns")].isNull() && m_member_can_add_add_ons_isValid;

    m_member_can_leave_within_free_period_isValid = ::OpenAPI::fromJsonValue(m_member_can_leave_within_free_period, json[QString("memberCanLeaveWithinFreePeriod")]);
    m_member_can_leave_within_free_period_isSet = !json[QString("memberCanLeaveWithinFreePeriod")].isNull() && m_member_can_leave_within_free_period_isValid;

    m_member_can_remove_add_ons_isValid = ::OpenAPI::fromJsonValue(m_member_can_remove_add_ons, json[QString("memberCanRemoveAddOns")]);
    m_member_can_remove_add_ons_isSet = !json[QString("memberCanRemoveAddOns")].isNull() && m_member_can_remove_add_ons_isValid;

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modifiedDate")]);
    m_modified_date_isSet = !json[QString("modifiedDate")].isNull() && m_modified_date_isValid;

    m_modified_user_isValid = ::OpenAPI::fromJsonValue(m_modified_user, json[QString("modifiedUser")]);
    m_modified_user_isSet = !json[QString("modifiedUser")].isNull() && m_modified_user_isValid;

    m_monthly_fee_isValid = ::OpenAPI::fromJsonValue(m_monthly_fee, json[QString("monthlyFee")]);
    m_monthly_fee_isSet = !json[QString("monthlyFee")].isNull() && m_monthly_fee_isValid;

    m_next_package_number_isValid = ::OpenAPI::fromJsonValue(m_next_package_number, json[QString("nextPackageNumber")]);
    m_next_package_number_isSet = !json[QString("nextPackageNumber")].isNull() && m_next_package_number_isValid;

    m_number_of_installments_isValid = ::OpenAPI::fromJsonValue(m_number_of_installments, json[QString("numberOfInstallments")]);
    m_number_of_installments_isSet = !json[QString("numberOfInstallments")].isNull() && m_number_of_installments_isValid;

    m_number_of_visits_isValid = ::OpenAPI::fromJsonValue(m_number_of_visits, json[QString("numberOfVisits")]);
    m_number_of_visits_isSet = !json[QString("numberOfVisits")].isNull() && m_number_of_visits_isValid;

    m_package_id_isValid = ::OpenAPI::fromJsonValue(m_package_id, json[QString("packageId")]);
    m_package_id_isSet = !json[QString("packageId")].isNull() && m_package_id_isValid;

    m_package_name_isValid = ::OpenAPI::fromJsonValue(m_package_name, json[QString("packageName")]);
    m_package_name_isSet = !json[QString("packageName")].isNull() && m_package_name_isValid;

    m_package_number_isValid = ::OpenAPI::fromJsonValue(m_package_number, json[QString("packageNumber")]);
    m_package_number_isSet = !json[QString("packageNumber")].isNull() && m_package_number_isValid;

    m_package_type_isValid = ::OpenAPI::fromJsonValue(m_package_type, json[QString("packageType")]);
    m_package_type_isSet = !json[QString("packageType")].isNull() && m_package_type_isValid;

    m_per_visit_price_isValid = ::OpenAPI::fromJsonValue(m_per_visit_price, json[QString("perVisitPrice")]);
    m_per_visit_price_isSet = !json[QString("perVisitPrice")].isNull() && m_per_visit_price_isValid;

    m_registration_fee_isValid = ::OpenAPI::fromJsonValue(m_registration_fee, json[QString("registrationFee")]);
    m_registration_fee_isSet = !json[QString("registrationFee")].isNull() && m_registration_fee_isValid;

    m_service_fee_isValid = ::OpenAPI::fromJsonValue(m_service_fee, json[QString("serviceFee")]);
    m_service_fee_isSet = !json[QString("serviceFee")].isNull() && m_service_fee_isValid;

    m_shown_in_web_isValid = ::OpenAPI::fromJsonValue(m_shown_in_web, json[QString("shownInWeb")]);
    m_shown_in_web_isSet = !json[QString("shownInWeb")].isNull() && m_shown_in_web_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("totalPrice")]);
    m_total_price_isSet = !json[QString("totalPrice")].isNull() && m_total_price_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultResponseDTOOfPackageDTO_result::asJsonObject() const {
    QJsonObject obj;
    if (m_add_ons.size() > 0) {
        obj.insert(QString("addOns"), ::OpenAPI::toJsonValue(m_add_ons));
    }
    if (m_addon_fee_isSet) {
        obj.insert(QString("addonFee"), ::OpenAPI::toJsonValue(m_addon_fee));
    }
    if (m_apply_for_all_gyms_isSet) {
        obj.insert(QString("applyForAllGyms"), ::OpenAPI::toJsonValue(m_apply_for_all_gyms));
    }
    if (m_available_gyms.size() > 0) {
        obj.insert(QString("availableGyms"), ::OpenAPI::toJsonValue(m_available_gyms));
    }
    if (m_binding_period_isSet) {
        obj.insert(QString("bindingPeriod"), ::OpenAPI::toJsonValue(m_binding_period));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("createdDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_created_user_isSet) {
        obj.insert(QString("createdUser"), ::OpenAPI::toJsonValue(m_created_user));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_expire_in_months_isSet) {
        obj.insert(QString("expireInMonths"), ::OpenAPI::toJsonValue(m_expire_in_months));
    }
    if (m_features_isSet) {
        obj.insert(QString("features"), ::OpenAPI::toJsonValue(m_features));
    }
    if (m_free_months_isSet) {
        obj.insert(QString("freeMonths"), ::OpenAPI::toJsonValue(m_free_months));
    }
    if (m_instructions_to_gym_users_isSet) {
        obj.insert(QString("instructionsToGymUsers"), ::OpenAPI::toJsonValue(m_instructions_to_gym_users));
    }
    if (m_instructions_to_web_users_isSet) {
        obj.insert(QString("instructionsToWebUsers"), ::OpenAPI::toJsonValue(m_instructions_to_web_users));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("isActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_atg_isSet) {
        obj.insert(QString("isAtg"), ::OpenAPI::toJsonValue(m_is_atg));
    }
    if (m_is_auto_renew_isSet) {
        obj.insert(QString("isAutoRenew"), ::OpenAPI::toJsonValue(m_is_auto_renew));
    }
    if (m_is_first_month_free_isSet) {
        obj.insert(QString("isFirstMonthFree"), ::OpenAPI::toJsonValue(m_is_first_month_free));
    }
    if (m_is_registration_fee_isSet) {
        obj.insert(QString("isRegistrationFee"), ::OpenAPI::toJsonValue(m_is_registration_fee));
    }
    if (m_is_rest_amount_isSet) {
        obj.insert(QString("isRestAmount"), ::OpenAPI::toJsonValue(m_is_rest_amount));
    }
    if (m_is_shown_in_mobile_isSet) {
        obj.insert(QString("isShownInMobile"), ::OpenAPI::toJsonValue(m_is_shown_in_mobile));
    }
    if (m_is_sponsor_package_isSet) {
        obj.insert(QString("isSponsorPackage"), ::OpenAPI::toJsonValue(m_is_sponsor_package));
    }
    if (m_maximum_give_away_rest_amount_isSet) {
        obj.insert(QString("maximumGiveAwayRestAmount"), ::OpenAPI::toJsonValue(m_maximum_give_away_rest_amount));
    }
    if (m_member_can_add_add_ons_isSet) {
        obj.insert(QString("memberCanAddAddOns"), ::OpenAPI::toJsonValue(m_member_can_add_add_ons));
    }
    if (m_member_can_leave_within_free_period_isSet) {
        obj.insert(QString("memberCanLeaveWithinFreePeriod"), ::OpenAPI::toJsonValue(m_member_can_leave_within_free_period));
    }
    if (m_member_can_remove_add_ons_isSet) {
        obj.insert(QString("memberCanRemoveAddOns"), ::OpenAPI::toJsonValue(m_member_can_remove_add_ons));
    }
    if (m_modified_date_isSet) {
        obj.insert(QString("modifiedDate"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_modified_user_isSet) {
        obj.insert(QString("modifiedUser"), ::OpenAPI::toJsonValue(m_modified_user));
    }
    if (m_monthly_fee_isSet) {
        obj.insert(QString("monthlyFee"), ::OpenAPI::toJsonValue(m_monthly_fee));
    }
    if (m_next_package_number_isSet) {
        obj.insert(QString("nextPackageNumber"), ::OpenAPI::toJsonValue(m_next_package_number));
    }
    if (m_number_of_installments_isSet) {
        obj.insert(QString("numberOfInstallments"), ::OpenAPI::toJsonValue(m_number_of_installments));
    }
    if (m_number_of_visits_isSet) {
        obj.insert(QString("numberOfVisits"), ::OpenAPI::toJsonValue(m_number_of_visits));
    }
    if (m_package_id_isSet) {
        obj.insert(QString("packageId"), ::OpenAPI::toJsonValue(m_package_id));
    }
    if (m_package_name_isSet) {
        obj.insert(QString("packageName"), ::OpenAPI::toJsonValue(m_package_name));
    }
    if (m_package_number_isSet) {
        obj.insert(QString("packageNumber"), ::OpenAPI::toJsonValue(m_package_number));
    }
    if (m_package_type_isSet) {
        obj.insert(QString("packageType"), ::OpenAPI::toJsonValue(m_package_type));
    }
    if (m_per_visit_price_isSet) {
        obj.insert(QString("perVisitPrice"), ::OpenAPI::toJsonValue(m_per_visit_price));
    }
    if (m_registration_fee_isSet) {
        obj.insert(QString("registrationFee"), ::OpenAPI::toJsonValue(m_registration_fee));
    }
    if (m_service_fee_isSet) {
        obj.insert(QString("serviceFee"), ::OpenAPI::toJsonValue(m_service_fee));
    }
    if (m_shown_in_web_isSet) {
        obj.insert(QString("shownInWeb"), ::OpenAPI::toJsonValue(m_shown_in_web));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_tags_isSet) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("totalPrice"), ::OpenAPI::toJsonValue(m_total_price));
    }
    return obj;
}

QList<OAIPackageItemDTO> OAIDefaultResponseDTOOfPackageDTO_result::getAddOns() const {
    return m_add_ons;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setAddOns(const QList<OAIPackageItemDTO> &add_ons) {
    m_add_ons = add_ons;
    m_add_ons_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_add_ons_Set() const{
    return m_add_ons_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_add_ons_Valid() const{
    return m_add_ons_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getAddonFee() const {
    return m_addon_fee;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setAddonFee(const double &addon_fee) {
    m_addon_fee = addon_fee;
    m_addon_fee_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_addon_fee_Set() const{
    return m_addon_fee_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_addon_fee_Valid() const{
    return m_addon_fee_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isApplyForAllGyms() const {
    return m_apply_for_all_gyms;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setApplyForAllGyms(const bool &apply_for_all_gyms) {
    m_apply_for_all_gyms = apply_for_all_gyms;
    m_apply_for_all_gyms_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_apply_for_all_gyms_Set() const{
    return m_apply_for_all_gyms_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_apply_for_all_gyms_Valid() const{
    return m_apply_for_all_gyms_isValid;
}

QList<OAIGymDTO> OAIDefaultResponseDTOOfPackageDTO_result::getAvailableGyms() const {
    return m_available_gyms;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setAvailableGyms(const QList<OAIGymDTO> &available_gyms) {
    m_available_gyms = available_gyms;
    m_available_gyms_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_available_gyms_Set() const{
    return m_available_gyms_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_available_gyms_Valid() const{
    return m_available_gyms_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getBindingPeriod() const {
    return m_binding_period;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setBindingPeriod(const qint32 &binding_period) {
    m_binding_period = binding_period;
    m_binding_period_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_binding_period_Set() const{
    return m_binding_period_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_binding_period_Valid() const{
    return m_binding_period_isValid;
}

QDateTime OAIDefaultResponseDTOOfPackageDTO_result::getCreatedDate() const {
    return m_created_date;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getCreatedUser() const {
    return m_created_user;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setCreatedUser(const QString &created_user) {
    m_created_user = created_user;
    m_created_user_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_created_user_Set() const{
    return m_created_user_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_created_user_Valid() const{
    return m_created_user_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getDescription() const {
    return m_description;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIDefaultResponseDTOOfPackageDTO_result::getEndDate() const {
    return m_end_date;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_end_date_Valid() const{
    return m_end_date_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getExpireInMonths() const {
    return m_expire_in_months;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setExpireInMonths(const qint32 &expire_in_months) {
    m_expire_in_months = expire_in_months;
    m_expire_in_months_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_expire_in_months_Set() const{
    return m_expire_in_months_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_expire_in_months_Valid() const{
    return m_expire_in_months_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getFeatures() const {
    return m_features;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setFeatures(const QString &features) {
    m_features = features;
    m_features_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_features_Set() const{
    return m_features_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_features_Valid() const{
    return m_features_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getFreeMonths() const {
    return m_free_months;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setFreeMonths(const qint32 &free_months) {
    m_free_months = free_months;
    m_free_months_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_free_months_Set() const{
    return m_free_months_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_free_months_Valid() const{
    return m_free_months_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getInstructionsToGymUsers() const {
    return m_instructions_to_gym_users;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setInstructionsToGymUsers(const QString &instructions_to_gym_users) {
    m_instructions_to_gym_users = instructions_to_gym_users;
    m_instructions_to_gym_users_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_instructions_to_gym_users_Set() const{
    return m_instructions_to_gym_users_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_instructions_to_gym_users_Valid() const{
    return m_instructions_to_gym_users_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getInstructionsToWebUsers() const {
    return m_instructions_to_web_users;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setInstructionsToWebUsers(const QString &instructions_to_web_users) {
    m_instructions_to_web_users = instructions_to_web_users;
    m_instructions_to_web_users_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_instructions_to_web_users_Set() const{
    return m_instructions_to_web_users_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_instructions_to_web_users_Valid() const{
    return m_instructions_to_web_users_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsActive() const {
    return m_is_active;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsAtg() const {
    return m_is_atg;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsAtg(const bool &is_atg) {
    m_is_atg = is_atg;
    m_is_atg_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_atg_Set() const{
    return m_is_atg_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_atg_Valid() const{
    return m_is_atg_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsAutoRenew() const {
    return m_is_auto_renew;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsAutoRenew(const bool &is_auto_renew) {
    m_is_auto_renew = is_auto_renew;
    m_is_auto_renew_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_auto_renew_Set() const{
    return m_is_auto_renew_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_auto_renew_Valid() const{
    return m_is_auto_renew_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsFirstMonthFree() const {
    return m_is_first_month_free;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsFirstMonthFree(const bool &is_first_month_free) {
    m_is_first_month_free = is_first_month_free;
    m_is_first_month_free_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_first_month_free_Set() const{
    return m_is_first_month_free_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_first_month_free_Valid() const{
    return m_is_first_month_free_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsRegistrationFee() const {
    return m_is_registration_fee;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsRegistrationFee(const bool &is_registration_fee) {
    m_is_registration_fee = is_registration_fee;
    m_is_registration_fee_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_registration_fee_Set() const{
    return m_is_registration_fee_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_registration_fee_Valid() const{
    return m_is_registration_fee_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsRestAmount() const {
    return m_is_rest_amount;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsRestAmount(const bool &is_rest_amount) {
    m_is_rest_amount = is_rest_amount;
    m_is_rest_amount_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_rest_amount_Set() const{
    return m_is_rest_amount_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_rest_amount_Valid() const{
    return m_is_rest_amount_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsShownInMobile() const {
    return m_is_shown_in_mobile;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsShownInMobile(const bool &is_shown_in_mobile) {
    m_is_shown_in_mobile = is_shown_in_mobile;
    m_is_shown_in_mobile_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_shown_in_mobile_Set() const{
    return m_is_shown_in_mobile_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_shown_in_mobile_Valid() const{
    return m_is_shown_in_mobile_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isIsSponsorPackage() const {
    return m_is_sponsor_package;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setIsSponsorPackage(const bool &is_sponsor_package) {
    m_is_sponsor_package = is_sponsor_package;
    m_is_sponsor_package_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_sponsor_package_Set() const{
    return m_is_sponsor_package_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_is_sponsor_package_Valid() const{
    return m_is_sponsor_package_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getMaximumGiveAwayRestAmount() const {
    return m_maximum_give_away_rest_amount;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setMaximumGiveAwayRestAmount(const double &maximum_give_away_rest_amount) {
    m_maximum_give_away_rest_amount = maximum_give_away_rest_amount;
    m_maximum_give_away_rest_amount_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_maximum_give_away_rest_amount_Set() const{
    return m_maximum_give_away_rest_amount_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_maximum_give_away_rest_amount_Valid() const{
    return m_maximum_give_away_rest_amount_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isMemberCanAddAddOns() const {
    return m_member_can_add_add_ons;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setMemberCanAddAddOns(const bool &member_can_add_add_ons) {
    m_member_can_add_add_ons = member_can_add_add_ons;
    m_member_can_add_add_ons_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_member_can_add_add_ons_Set() const{
    return m_member_can_add_add_ons_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_member_can_add_add_ons_Valid() const{
    return m_member_can_add_add_ons_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isMemberCanLeaveWithinFreePeriod() const {
    return m_member_can_leave_within_free_period;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setMemberCanLeaveWithinFreePeriod(const bool &member_can_leave_within_free_period) {
    m_member_can_leave_within_free_period = member_can_leave_within_free_period;
    m_member_can_leave_within_free_period_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_member_can_leave_within_free_period_Set() const{
    return m_member_can_leave_within_free_period_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_member_can_leave_within_free_period_Valid() const{
    return m_member_can_leave_within_free_period_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isMemberCanRemoveAddOns() const {
    return m_member_can_remove_add_ons;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setMemberCanRemoveAddOns(const bool &member_can_remove_add_ons) {
    m_member_can_remove_add_ons = member_can_remove_add_ons;
    m_member_can_remove_add_ons_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_member_can_remove_add_ons_Set() const{
    return m_member_can_remove_add_ons_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_member_can_remove_add_ons_Valid() const{
    return m_member_can_remove_add_ons_isValid;
}

QDateTime OAIDefaultResponseDTOOfPackageDTO_result::getModifiedDate() const {
    return m_modified_date;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setModifiedDate(const QDateTime &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getModifiedUser() const {
    return m_modified_user;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setModifiedUser(const QString &modified_user) {
    m_modified_user = modified_user;
    m_modified_user_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_modified_user_Set() const{
    return m_modified_user_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_modified_user_Valid() const{
    return m_modified_user_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getMonthlyFee() const {
    return m_monthly_fee;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setMonthlyFee(const double &monthly_fee) {
    m_monthly_fee = monthly_fee;
    m_monthly_fee_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_monthly_fee_Set() const{
    return m_monthly_fee_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_monthly_fee_Valid() const{
    return m_monthly_fee_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getNextPackageNumber() const {
    return m_next_package_number;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setNextPackageNumber(const qint32 &next_package_number) {
    m_next_package_number = next_package_number;
    m_next_package_number_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_next_package_number_Set() const{
    return m_next_package_number_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_next_package_number_Valid() const{
    return m_next_package_number_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getNumberOfInstallments() const {
    return m_number_of_installments;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setNumberOfInstallments(const qint32 &number_of_installments) {
    m_number_of_installments = number_of_installments;
    m_number_of_installments_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_number_of_installments_Set() const{
    return m_number_of_installments_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_number_of_installments_Valid() const{
    return m_number_of_installments_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getNumberOfVisits() const {
    return m_number_of_visits;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setNumberOfVisits(const qint32 &number_of_visits) {
    m_number_of_visits = number_of_visits;
    m_number_of_visits_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_number_of_visits_Set() const{
    return m_number_of_visits_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_number_of_visits_Valid() const{
    return m_number_of_visits_isValid;
}

qint32 OAIDefaultResponseDTOOfPackageDTO_result::getPackageId() const {
    return m_package_id;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setPackageId(const qint32 &package_id) {
    m_package_id = package_id;
    m_package_id_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_id_Set() const{
    return m_package_id_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_id_Valid() const{
    return m_package_id_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getPackageName() const {
    return m_package_name;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setPackageName(const QString &package_name) {
    m_package_name = package_name;
    m_package_name_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_name_Set() const{
    return m_package_name_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_name_Valid() const{
    return m_package_name_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getPackageNumber() const {
    return m_package_number;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setPackageNumber(const QString &package_number) {
    m_package_number = package_number;
    m_package_number_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_number_Set() const{
    return m_package_number_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_number_Valid() const{
    return m_package_number_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getPackageType() const {
    return m_package_type;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setPackageType(const QString &package_type) {
    m_package_type = package_type;
    m_package_type_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_type_Set() const{
    return m_package_type_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_package_type_Valid() const{
    return m_package_type_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getPerVisitPrice() const {
    return m_per_visit_price;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setPerVisitPrice(const double &per_visit_price) {
    m_per_visit_price = per_visit_price;
    m_per_visit_price_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_per_visit_price_Set() const{
    return m_per_visit_price_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_per_visit_price_Valid() const{
    return m_per_visit_price_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getRegistrationFee() const {
    return m_registration_fee;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setRegistrationFee(const double &registration_fee) {
    m_registration_fee = registration_fee;
    m_registration_fee_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_registration_fee_Set() const{
    return m_registration_fee_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_registration_fee_Valid() const{
    return m_registration_fee_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getServiceFee() const {
    return m_service_fee;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setServiceFee(const double &service_fee) {
    m_service_fee = service_fee;
    m_service_fee_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_service_fee_Set() const{
    return m_service_fee_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_service_fee_Valid() const{
    return m_service_fee_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isShownInWeb() const {
    return m_shown_in_web;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setShownInWeb(const bool &shown_in_web) {
    m_shown_in_web = shown_in_web;
    m_shown_in_web_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_shown_in_web_Set() const{
    return m_shown_in_web_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_shown_in_web_Valid() const{
    return m_shown_in_web_isValid;
}

QDateTime OAIDefaultResponseDTOOfPackageDTO_result::getStartDate() const {
    return m_start_date;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAIDefaultResponseDTOOfPackageDTO_result::getTags() const {
    return m_tags;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setTags(const QString &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_tags_Valid() const{
    return m_tags_isValid;
}

double OAIDefaultResponseDTOOfPackageDTO_result::getTotalPrice() const {
    return m_total_price;
}
void OAIDefaultResponseDTOOfPackageDTO_result::setTotalPrice(const double &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::is_total_price_Valid() const{
    return m_total_price_isValid;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_ons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_addon_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apply_for_all_gyms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_gyms.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_binding_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_in_months_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_features_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_months_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instructions_to_gym_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instructions_to_web_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_atg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_auto_renew_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_first_month_free_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_registration_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_rest_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_shown_in_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_sponsor_package_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_give_away_rest_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_can_add_add_ons_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_can_leave_within_free_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_can_remove_add_ons_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_package_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_visits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_per_visit_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shown_in_web_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultResponseDTOOfPackageDTO_result::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_package_name_isValid && m_package_type_isValid && m_registration_fee_isValid && m_service_fee_isValid && true;
}

} // namespace OpenAPI
