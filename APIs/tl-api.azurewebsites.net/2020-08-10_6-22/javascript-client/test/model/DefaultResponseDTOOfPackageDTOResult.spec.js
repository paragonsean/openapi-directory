/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api);
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.DefaultResponseDTOOfPackageDTOResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultResponseDTOOfPackageDTOResult', function() {
    it('should create an instance of DefaultResponseDTOOfPackageDTOResult', function() {
      // uncomment below and update the code to test DefaultResponseDTOOfPackageDTOResult
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be.a(Api.DefaultResponseDTOOfPackageDTOResult);
    });

    it('should have the property addOns (base name: "addOns")', function() {
      // uncomment below and update the code to test the property addOns
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property addonFee (base name: "addonFee")', function() {
      // uncomment below and update the code to test the property addonFee
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property applyForAllGyms (base name: "applyForAllGyms")', function() {
      // uncomment below and update the code to test the property applyForAllGyms
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property availableGyms (base name: "availableGyms")', function() {
      // uncomment below and update the code to test the property availableGyms
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property bindingPeriod (base name: "bindingPeriod")', function() {
      // uncomment below and update the code to test the property bindingPeriod
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property createdUser (base name: "createdUser")', function() {
      // uncomment below and update the code to test the property createdUser
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property expireInMonths (base name: "expireInMonths")', function() {
      // uncomment below and update the code to test the property expireInMonths
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property features (base name: "features")', function() {
      // uncomment below and update the code to test the property features
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property freeMonths (base name: "freeMonths")', function() {
      // uncomment below and update the code to test the property freeMonths
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property instructionsToGymUsers (base name: "instructionsToGymUsers")', function() {
      // uncomment below and update the code to test the property instructionsToGymUsers
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property instructionsToWebUsers (base name: "instructionsToWebUsers")', function() {
      // uncomment below and update the code to test the property instructionsToWebUsers
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isAtg (base name: "isAtg")', function() {
      // uncomment below and update the code to test the property isAtg
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isAutoRenew (base name: "isAutoRenew")', function() {
      // uncomment below and update the code to test the property isAutoRenew
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isFirstMonthFree (base name: "isFirstMonthFree")', function() {
      // uncomment below and update the code to test the property isFirstMonthFree
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isRegistrationFee (base name: "isRegistrationFee")', function() {
      // uncomment below and update the code to test the property isRegistrationFee
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isRestAmount (base name: "isRestAmount")', function() {
      // uncomment below and update the code to test the property isRestAmount
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isShownInMobile (base name: "isShownInMobile")', function() {
      // uncomment below and update the code to test the property isShownInMobile
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property isSponsorPackage (base name: "isSponsorPackage")', function() {
      // uncomment below and update the code to test the property isSponsorPackage
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property maximumGiveAwayRestAmount (base name: "maximumGiveAwayRestAmount")', function() {
      // uncomment below and update the code to test the property maximumGiveAwayRestAmount
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property memberCanAddAddOns (base name: "memberCanAddAddOns")', function() {
      // uncomment below and update the code to test the property memberCanAddAddOns
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property memberCanLeaveWithinFreePeriod (base name: "memberCanLeaveWithinFreePeriod")', function() {
      // uncomment below and update the code to test the property memberCanLeaveWithinFreePeriod
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property memberCanRemoveAddOns (base name: "memberCanRemoveAddOns")', function() {
      // uncomment below and update the code to test the property memberCanRemoveAddOns
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property modifiedDate (base name: "modifiedDate")', function() {
      // uncomment below and update the code to test the property modifiedDate
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property modifiedUser (base name: "modifiedUser")', function() {
      // uncomment below and update the code to test the property modifiedUser
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property monthlyFee (base name: "monthlyFee")', function() {
      // uncomment below and update the code to test the property monthlyFee
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property nextPackageNumber (base name: "nextPackageNumber")', function() {
      // uncomment below and update the code to test the property nextPackageNumber
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property numberOfInstallments (base name: "numberOfInstallments")', function() {
      // uncomment below and update the code to test the property numberOfInstallments
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property numberOfVisits (base name: "numberOfVisits")', function() {
      // uncomment below and update the code to test the property numberOfVisits
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property packageId (base name: "packageId")', function() {
      // uncomment below and update the code to test the property packageId
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property packageName (base name: "packageName")', function() {
      // uncomment below and update the code to test the property packageName
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property packageNumber (base name: "packageNumber")', function() {
      // uncomment below and update the code to test the property packageNumber
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property packageType (base name: "packageType")', function() {
      // uncomment below and update the code to test the property packageType
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property perVisitPrice (base name: "perVisitPrice")', function() {
      // uncomment below and update the code to test the property perVisitPrice
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property registrationFee (base name: "registrationFee")', function() {
      // uncomment below and update the code to test the property registrationFee
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property serviceFee (base name: "serviceFee")', function() {
      // uncomment below and update the code to test the property serviceFee
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property shownInWeb (base name: "shownInWeb")', function() {
      // uncomment below and update the code to test the property shownInWeb
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

    it('should have the property totalPrice (base name: "totalPrice")', function() {
      // uncomment below and update the code to test the property totalPrice
      //var instance = new Api.DefaultResponseDTOOfPackageDTOResult();
      //expect(instance).to.be();
    });

  });

}));
