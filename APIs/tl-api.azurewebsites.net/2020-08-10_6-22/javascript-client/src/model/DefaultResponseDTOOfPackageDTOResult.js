/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GymDTO from './GymDTO';
import PackageDTO from './PackageDTO';
import PackageItemDTO from './PackageItemDTO';

/**
 * The DefaultResponseDTOOfPackageDTOResult model module.
 * @module model/DefaultResponseDTOOfPackageDTOResult
 * @version 2020-08-10_6-22
 */
class DefaultResponseDTOOfPackageDTOResult {
    /**
     * Constructs a new <code>DefaultResponseDTOOfPackageDTOResult</code>.
     * @alias module:model/DefaultResponseDTOOfPackageDTOResult
     * @param {(module:model/PackageDTO)} instance The actual instance to initialize DefaultResponseDTOOfPackageDTOResult.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "PackageDTO") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PackageDTO.validateJSON(instance); // throw an exception if no match
                // create PackageDTO from JS object
                this.actualInstance = PackageDTO.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PackageDTO
            errorMessages.push("Failed to construct PackageDTO: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `DefaultResponseDTOOfPackageDTOResult` with oneOf schemas PackageDTO. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `DefaultResponseDTOOfPackageDTOResult` with oneOf schemas PackageDTO. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>DefaultResponseDTOOfPackageDTOResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DefaultResponseDTOOfPackageDTOResult} obj Optional instance to populate.
     * @return {module:model/DefaultResponseDTOOfPackageDTOResult} The populated <code>DefaultResponseDTOOfPackageDTOResult</code> instance.
     */
    static constructFromObject(data, obj) {
        return new DefaultResponseDTOOfPackageDTOResult(data);
    }

    /**
     * Gets the actual instance, which can be <code>PackageDTO</code>.
     * @return {(module:model/PackageDTO)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>PackageDTO</code>.
     * @param {(module:model/PackageDTO)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = DefaultResponseDTOOfPackageDTOResult.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of DefaultResponseDTOOfPackageDTOResult from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/DefaultResponseDTOOfPackageDTOResult} An instance of DefaultResponseDTOOfPackageDTOResult.
     */
    static fromJSON = function(json_string){
        return DefaultResponseDTOOfPackageDTOResult.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Extra articles list added to the given package.             
 * @member {Array.<module:model/PackageItemDTO>} addOns
 */
DefaultResponseDTOOfPackageDTOResult.prototype['addOns'] = undefined;

/**
 * sum of addon fees. incoming values for this filed will ignore.             
 * @member {Number} addonFee
 */
DefaultResponseDTOOfPackageDTOResult.prototype['addonFee'] = undefined;

/**
 * Boolean value to indicate wheather package is available in all the gyms.             
 * @member {Boolean} applyForAllGyms
 */
DefaultResponseDTOOfPackageDTOResult.prototype['applyForAllGyms'] = undefined;

/**
 * Gyms list where this package is available.             
 * @member {Array.<module:model/GymDTO>} availableGyms
 */
DefaultResponseDTOOfPackageDTOResult.prototype['availableGyms'] = undefined;

/**
 * Range of period a member is bound to the contract if he/she choose this package.             
 * @member {Number} bindingPeriod
 */
DefaultResponseDTOOfPackageDTOResult.prototype['bindingPeriod'] = undefined;

/**
 * Package created DateTime.             
 * @member {Date} createdDate
 */
DefaultResponseDTOOfPackageDTOResult.prototype['createdDate'] = undefined;

/**
 * Package created user.             
 * @member {String} createdUser
 */
DefaultResponseDTOOfPackageDTOResult.prototype['createdUser'] = undefined;

/**
 * Common descriptions about package.If there are more instructions               can be stored as comma separated values.             
 * @member {String} description
 */
DefaultResponseDTOOfPackageDTOResult.prototype['description'] = undefined;

/**
 * End date of the package.After that package is not valid for use.             
 * @member {Date} endDate
 */
DefaultResponseDTOOfPackageDTOResult.prototype['endDate'] = undefined;

/**
 * No of months the fixed package is valid for sale             
 * @member {Number} expireInMonths
 */
DefaultResponseDTOOfPackageDTOResult.prototype['expireInMonths'] = undefined;

/**
 * What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.             
 * @member {String} features
 */
DefaultResponseDTOOfPackageDTOResult.prototype['features'] = undefined;

/**
 * No of months gym member can come without payments.             
 * @member {Number} freeMonths
 */
DefaultResponseDTOOfPackageDTOResult.prototype['freeMonths'] = undefined;

/**
 * Instruction to the gym members relevant to the package.              If there are more instructions can be stored as comma seperated values.             
 * @member {String} instructionsToGymUsers
 */
DefaultResponseDTOOfPackageDTOResult.prototype['instructionsToGymUsers'] = undefined;

/**
 * Instruction to the MRM members relevant to the package.              If there are more instructions can be stored as comma seperated values.             
 * @member {String} instructionsToWebUsers
 */
DefaultResponseDTOOfPackageDTOResult.prototype['instructionsToWebUsers'] = undefined;

/**
 * Boolean value to indicate this package is still active or not.             
 * @member {Boolean} isActive
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isActive'] = undefined;

/**
 * Boolean value to indicate ATG transaction from bank is applicable or not.             
 * @member {Boolean} isAtg
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isAtg'] = undefined;

/**
 * Boolean value to indicate the contract will auto renew after expiration               if this package would be chosen.             
 * @member {Boolean} isAutoRenew
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isAutoRenew'] = undefined;

/**
 * Boolean value to indicate if the first month charges is free.             
 * @member {Boolean} isFirstMonthFree
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isFirstMonthFree'] = undefined;

/**
 * Boolean value to indicate this package has registration fee or not.             
 * @member {Boolean} isRegistrationFee
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isRegistrationFee'] = undefined;

/**
 * Boolean value to indicate rest amount is applicable or not.             
 * @member {Boolean} isRestAmount
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isRestAmount'] = undefined;

/**
 * Boolean value to indicate package is visible in Mobile App or not.             
 * @member {Boolean} isShownInMobile
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isShownInMobile'] = undefined;

/**
 * Boolean value to indicate package can be sponsored or not by other party.             
 * @member {Boolean} isSponsorPackage
 */
DefaultResponseDTOOfPackageDTOResult.prototype['isSponsorPackage'] = undefined;

/**
 * If a member join the gym middle of a month via this package,               what is the maximum amount of price can be neglected from payment from the member.             
 * @member {Number} maximumGiveAwayRestAmount
 */
DefaultResponseDTOOfPackageDTOResult.prototype['maximumGiveAwayRestAmount'] = undefined;

/**
 * Boolean value to indicate member can add extra addons he wish if he choose this package.             
 * @member {Boolean} memberCanAddAddOns
 */
DefaultResponseDTOOfPackageDTOResult.prototype['memberCanAddAddOns'] = undefined;

/**
 * Boolean value to indicate if member can leave from contract within               free period if he/she choose this package.             
 * @member {Boolean} memberCanLeaveWithinFreePeriod
 */
DefaultResponseDTOOfPackageDTOResult.prototype['memberCanLeaveWithinFreePeriod'] = undefined;

/**
 * Boolean value to indicate member can remove already added addons if he choose this package.             
 * @member {Boolean} memberCanRemoveAddOns
 */
DefaultResponseDTOOfPackageDTOResult.prototype['memberCanRemoveAddOns'] = undefined;

/**
 * Package last modified DateTime.             
 * @member {Date} modifiedDate
 */
DefaultResponseDTOOfPackageDTOResult.prototype['modifiedDate'] = undefined;

/**
 * Package last modified user.             
 * @member {String} modifiedUser
 */
DefaultResponseDTOOfPackageDTOResult.prototype['modifiedUser'] = undefined;

/**
 * Monthly installment fee if package is not fixed visit. addition of the servicefee and addon fees divided by binding period.              read only             
 * @member {Number} monthlyFee
 */
DefaultResponseDTOOfPackageDTOResult.prototype['monthlyFee'] = undefined;

/**
 * Next Package the contract continue after the binding period of this package.             
 * @member {Number} nextPackageNumber
 */
DefaultResponseDTOOfPackageDTOResult.prototype['nextPackageNumber'] = undefined;

/**
 * Maximum Number of installment a member can divide the package price/cost to pay.             
 * @member {Number} numberOfInstallments
 */
DefaultResponseDTOOfPackageDTOResult.prototype['numberOfInstallments'] = undefined;

/**
 * If package is fixed visit type, then how many visits are available for this package.             
 * @member {Number} numberOfVisits
 */
DefaultResponseDTOOfPackageDTOResult.prototype['numberOfVisits'] = undefined;

/**
 * @member {Number} packageId
 */
DefaultResponseDTOOfPackageDTOResult.prototype['packageId'] = undefined;

/**
 * @member {String} packageName
 */
DefaultResponseDTOOfPackageDTOResult.prototype['packageName'] = undefined;

/**
 * @member {String} packageNumber
 */
DefaultResponseDTOOfPackageDTOResult.prototype['packageNumber'] = undefined;

/**
 * Package type can be either fixed visit or unlimited.             
 * @member {String} packageType
 */
DefaultResponseDTOOfPackageDTOResult.prototype['packageType'] = undefined;

/**
 * Cost/Price of the single visit to gym.             
 * @member {Number} perVisitPrice
 */
DefaultResponseDTOOfPackageDTOResult.prototype['perVisitPrice'] = undefined;

/**
 * Registartion fee for the package at a gym.              read only             
 * @member {Number} registrationFee
 */
DefaultResponseDTOOfPackageDTOResult.prototype['registrationFee'] = undefined;

/**
 * total Service charge of the package for entire period.             
 * @member {Number} serviceFee
 */
DefaultResponseDTOOfPackageDTOResult.prototype['serviceFee'] = undefined;

/**
 * Boolean value to show this package in MRM system or not.             
 * @member {Boolean} shownInWeb
 */
DefaultResponseDTOOfPackageDTOResult.prototype['shownInWeb'] = undefined;

/**
 * Start date of the package.             
 * @member {Date} startDate
 */
DefaultResponseDTOOfPackageDTOResult.prototype['startDate'] = undefined;

/**
 * Comma separated string values in case of need of maintain some labels kind of               stuff relevant to the package.             
 * @member {String} tags
 */
DefaultResponseDTOOfPackageDTOResult.prototype['tags'] = undefined;

/**
 * total price for the package including Addon fees, service fee and registration fee. incoming values for this field will ignore.             
 * @member {Number} totalPrice
 */
DefaultResponseDTOOfPackageDTOResult.prototype['totalPrice'] = undefined;


DefaultResponseDTOOfPackageDTOResult.OneOf = ["PackageDTO"];

export default DefaultResponseDTOOfPackageDTOResult;

