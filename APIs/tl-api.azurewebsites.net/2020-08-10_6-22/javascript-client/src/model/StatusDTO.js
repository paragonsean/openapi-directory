/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StatusDTO model module.
 * @module model/StatusDTO
 * @version 2020-08-10_6-22
 */
class StatusDTO {
    /**
     * Constructs a new <code>StatusDTO</code>.
     * Imideate response for long running api call.             
     * @alias module:model/StatusDTO
     */
    constructor() { 
        
        StatusDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatusDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusDTO} obj Optional instance to populate.
     * @return {module:model/StatusDTO} The populated <code>StatusDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusDTO();

            if (data.hasOwnProperty('messageId')) {
                obj['messageId'] = ApiClient.convertToType(data['messageId'], 'String');
            }
            if (data.hasOwnProperty('statusText')) {
                obj['statusText'] = ApiClient.convertToType(data['statusText'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatusDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatusDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['messageId'] && !(typeof data['messageId'] === 'string' || data['messageId'] instanceof String)) {
            throw new Error("Expected the field `messageId` to be a primitive type in the JSON string but got " + data['messageId']);
        }
        // ensure the json data is a string
        if (data['statusText'] && !(typeof data['statusText'] === 'string' || data['statusText'] instanceof String)) {
            throw new Error("Expected the field `statusText` to be a primitive type in the JSON string but got " + data['statusText']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Reference id for status endpoint             
 * @member {String} messageId
 */
StatusDTO.prototype['messageId'] = undefined;

/**
 * Status of API Call             
 * @member {String} statusText
 */
StatusDTO.prototype['statusText'] = undefined;

/**
 * Relative url for stauts check             
 * @member {String} url
 */
StatusDTO.prototype['url'] = undefined;






export default StatusDTO;

