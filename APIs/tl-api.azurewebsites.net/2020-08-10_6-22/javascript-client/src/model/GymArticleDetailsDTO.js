/**
 * API
 * Web API for TL mobile and web app
 *
 * The version of the OpenAPI document: 2020-08-10_6-22
 * Contact: support@unicorn-solutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GymArticleDetailsDTO model module.
 * @module model/GymArticleDetailsDTO
 * @version 2020-08-10_6-22
 */
class GymArticleDetailsDTO {
    /**
     * Constructs a new <code>GymArticleDetailsDTO</code>.
     * The GymArticleDetailsDTO Class. Contains fields of GymArticleDetails DTO in application.             
     * @alias module:model/GymArticleDetailsDTO
     */
    constructor() { 
        
        GymArticleDetailsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GymArticleDetailsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GymArticleDetailsDTO} obj Optional instance to populate.
     * @return {module:model/GymArticleDetailsDTO} The populated <code>GymArticleDetailsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GymArticleDetailsDTO();

            if (data.hasOwnProperty('articleId')) {
                obj['articleId'] = ApiClient.convertToType(data['articleId'], 'Number');
            }
            if (data.hasOwnProperty('availableQty')) {
                obj['availableQty'] = ApiClient.convertToType(data['availableQty'], 'Number');
            }
            if (data.hasOwnProperty('createdUser')) {
                obj['createdUser'] = ApiClient.convertToType(data['createdUser'], 'String');
            }
            if (data.hasOwnProperty('employeeDiscount')) {
                obj['employeeDiscount'] = ApiClient.convertToType(data['employeeDiscount'], 'Number');
            }
            if (data.hasOwnProperty('employeePrice')) {
                obj['employeePrice'] = ApiClient.convertToType(data['employeePrice'], 'Number');
            }
            if (data.hasOwnProperty('gymId')) {
                obj['gymId'] = ApiClient.convertToType(data['gymId'], 'Number');
            }
            if (data.hasOwnProperty('gymIdList')) {
                obj['gymIdList'] = ApiClient.convertToType(data['gymIdList'], 'String');
            }
            if (data.hasOwnProperty('gymName')) {
                obj['gymName'] = ApiClient.convertToType(data['gymName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('isInventoryItem')) {
                obj['isInventoryItem'] = ApiClient.convertToType(data['isInventoryItem'], 'Boolean');
            }
            if (data.hasOwnProperty('isObsolete')) {
                obj['isObsolete'] = ApiClient.convertToType(data['isObsolete'], 'Boolean');
            }
            if (data.hasOwnProperty('modifiedUser')) {
                obj['modifiedUser'] = ApiClient.convertToType(data['modifiedUser'], 'String');
            }
            if (data.hasOwnProperty('reorderLevel')) {
                obj['reorderLevel'] = ApiClient.convertToType(data['reorderLevel'], 'Number');
            }
            if (data.hasOwnProperty('revenueAccountId')) {
                obj['revenueAccountId'] = ApiClient.convertToType(data['revenueAccountId'], 'Number');
            }
            if (data.hasOwnProperty('sellingPrice')) {
                obj['sellingPrice'] = ApiClient.convertToType(data['sellingPrice'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GymArticleDetailsDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GymArticleDetailsDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createdUser'] && !(typeof data['createdUser'] === 'string' || data['createdUser'] instanceof String)) {
            throw new Error("Expected the field `createdUser` to be a primitive type in the JSON string but got " + data['createdUser']);
        }
        // ensure the json data is a string
        if (data['gymIdList'] && !(typeof data['gymIdList'] === 'string' || data['gymIdList'] instanceof String)) {
            throw new Error("Expected the field `gymIdList` to be a primitive type in the JSON string but got " + data['gymIdList']);
        }
        // ensure the json data is a string
        if (data['gymName'] && !(typeof data['gymName'] === 'string' || data['gymName'] instanceof String)) {
            throw new Error("Expected the field `gymName` to be a primitive type in the JSON string but got " + data['gymName']);
        }
        // ensure the json data is a string
        if (data['modifiedUser'] && !(typeof data['modifiedUser'] === 'string' || data['modifiedUser'] instanceof String)) {
            throw new Error("Expected the field `modifiedUser` to be a primitive type in the JSON string but got " + data['modifiedUser']);
        }

        return true;
    }


}



/**
 * @member {Number} articleId
 */
GymArticleDetailsDTO.prototype['articleId'] = undefined;

/**
 * @member {Number} availableQty
 */
GymArticleDetailsDTO.prototype['availableQty'] = undefined;

/**
 * Created User 
 * @member {String} createdUser
 */
GymArticleDetailsDTO.prototype['createdUser'] = undefined;

/**
 * @member {Number} employeeDiscount
 */
GymArticleDetailsDTO.prototype['employeeDiscount'] = undefined;

/**
 * @member {Number} employeePrice
 */
GymArticleDetailsDTO.prototype['employeePrice'] = undefined;

/**
 * Gym Id where article is related 
 * @member {Number} gymId
 */
GymArticleDetailsDTO.prototype['gymId'] = undefined;

/**
 * GymId - Gym Id string with comma separated GymIds 
 * @member {String} gymIdList
 */
GymArticleDetailsDTO.prototype['gymIdList'] = undefined;

/**
 * Gym Name
 * @member {String} gymName
 */
GymArticleDetailsDTO.prototype['gymName'] = undefined;

/**
 * @member {Number} id
 */
GymArticleDetailsDTO.prototype['id'] = undefined;

/**
 * Set as the default values for the article 
 * @member {Boolean} isDefault
 */
GymArticleDetailsDTO.prototype['isDefault'] = undefined;

/**
 * @member {Boolean} isInventoryItem
 */
GymArticleDetailsDTO.prototype['isInventoryItem'] = undefined;

/**
 * @member {Boolean} isObsolete
 */
GymArticleDetailsDTO.prototype['isObsolete'] = undefined;

/**
 * Modified user
 * @member {String} modifiedUser
 */
GymArticleDetailsDTO.prototype['modifiedUser'] = undefined;

/**
 * @member {Number} reorderLevel
 */
GymArticleDetailsDTO.prototype['reorderLevel'] = undefined;

/**
 * Revenue account Id
 * @member {Number} revenueAccountId
 */
GymArticleDetailsDTO.prototype['revenueAccountId'] = undefined;

/**
 * @member {Number} sellingPrice
 */
GymArticleDetailsDTO.prototype['sellingPrice'] = undefined;






export default GymArticleDetailsDTO;

