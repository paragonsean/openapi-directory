# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SolarEclipseDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aor_t_duration: str=None, aor_t_eclipse_begin: datetime=None, aor_t_eclipse_end: datetime=None, _date: datetime=None, has_eclipse_data: bool=None, maximum_eclipse: datetime=None, partial_eclispe_begin: datetime=None, partial_eclispe_end: datetime=None, type: int=0):
        """SolarEclipseDetails - a model defined in OpenAPI

        :param aor_t_duration: The aor_t_duration of this SolarEclipseDetails.
        :param aor_t_eclipse_begin: The aor_t_eclipse_begin of this SolarEclipseDetails.
        :param aor_t_eclipse_end: The aor_t_eclipse_end of this SolarEclipseDetails.
        :param _date: The _date of this SolarEclipseDetails.
        :param has_eclipse_data: The has_eclipse_data of this SolarEclipseDetails.
        :param maximum_eclipse: The maximum_eclipse of this SolarEclipseDetails.
        :param partial_eclispe_begin: The partial_eclispe_begin of this SolarEclipseDetails.
        :param partial_eclispe_end: The partial_eclispe_end of this SolarEclipseDetails.
        :param type: The type of this SolarEclipseDetails.
        """
        self.openapi_types = {
            'aor_t_duration': str,
            'aor_t_eclipse_begin': datetime,
            'aor_t_eclipse_end': datetime,
            '_date': datetime,
            'has_eclipse_data': bool,
            'maximum_eclipse': datetime,
            'partial_eclispe_begin': datetime,
            'partial_eclispe_end': datetime,
            'type': int
        }

        self.attribute_map = {
            'aor_t_duration': 'aorTDuration',
            'aor_t_eclipse_begin': 'aorTEclipseBegin',
            'aor_t_eclipse_end': 'aorTEclipseEnd',
            '_date': 'date',
            'has_eclipse_data': 'hasEclipseData',
            'maximum_eclipse': 'maximumEclipse',
            'partial_eclispe_begin': 'partialEclispeBegin',
            'partial_eclispe_end': 'partialEclispeEnd',
            'type': 'type'
        }

        self._aor_t_duration = aor_t_duration
        self._aor_t_eclipse_begin = aor_t_eclipse_begin
        self._aor_t_eclipse_end = aor_t_eclipse_end
        self.__date = _date
        self._has_eclipse_data = has_eclipse_data
        self._maximum_eclipse = maximum_eclipse
        self._partial_eclispe_begin = partial_eclispe_begin
        self._partial_eclispe_end = partial_eclispe_end
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SolarEclipseDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The solarEclipseDetails of this SolarEclipseDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aor_t_duration(self):
        """Gets the aor_t_duration of this SolarEclipseDetails.


        :return: The aor_t_duration of this SolarEclipseDetails.
        :rtype: str
        """
        return self._aor_t_duration

    @aor_t_duration.setter
    def aor_t_duration(self, aor_t_duration):
        """Sets the aor_t_duration of this SolarEclipseDetails.


        :param aor_t_duration: The aor_t_duration of this SolarEclipseDetails.
        :type aor_t_duration: str
        """

        self._aor_t_duration = aor_t_duration

    @property
    def aor_t_eclipse_begin(self):
        """Gets the aor_t_eclipse_begin of this SolarEclipseDetails.


        :return: The aor_t_eclipse_begin of this SolarEclipseDetails.
        :rtype: datetime
        """
        return self._aor_t_eclipse_begin

    @aor_t_eclipse_begin.setter
    def aor_t_eclipse_begin(self, aor_t_eclipse_begin):
        """Sets the aor_t_eclipse_begin of this SolarEclipseDetails.


        :param aor_t_eclipse_begin: The aor_t_eclipse_begin of this SolarEclipseDetails.
        :type aor_t_eclipse_begin: datetime
        """

        self._aor_t_eclipse_begin = aor_t_eclipse_begin

    @property
    def aor_t_eclipse_end(self):
        """Gets the aor_t_eclipse_end of this SolarEclipseDetails.


        :return: The aor_t_eclipse_end of this SolarEclipseDetails.
        :rtype: datetime
        """
        return self._aor_t_eclipse_end

    @aor_t_eclipse_end.setter
    def aor_t_eclipse_end(self, aor_t_eclipse_end):
        """Sets the aor_t_eclipse_end of this SolarEclipseDetails.


        :param aor_t_eclipse_end: The aor_t_eclipse_end of this SolarEclipseDetails.
        :type aor_t_eclipse_end: datetime
        """

        self._aor_t_eclipse_end = aor_t_eclipse_end

    @property
    def _date(self):
        """Gets the _date of this SolarEclipseDetails.


        :return: The _date of this SolarEclipseDetails.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this SolarEclipseDetails.


        :param _date: The _date of this SolarEclipseDetails.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def has_eclipse_data(self):
        """Gets the has_eclipse_data of this SolarEclipseDetails.


        :return: The has_eclipse_data of this SolarEclipseDetails.
        :rtype: bool
        """
        return self._has_eclipse_data

    @has_eclipse_data.setter
    def has_eclipse_data(self, has_eclipse_data):
        """Sets the has_eclipse_data of this SolarEclipseDetails.


        :param has_eclipse_data: The has_eclipse_data of this SolarEclipseDetails.
        :type has_eclipse_data: bool
        """

        self._has_eclipse_data = has_eclipse_data

    @property
    def maximum_eclipse(self):
        """Gets the maximum_eclipse of this SolarEclipseDetails.


        :return: The maximum_eclipse of this SolarEclipseDetails.
        :rtype: datetime
        """
        return self._maximum_eclipse

    @maximum_eclipse.setter
    def maximum_eclipse(self, maximum_eclipse):
        """Sets the maximum_eclipse of this SolarEclipseDetails.


        :param maximum_eclipse: The maximum_eclipse of this SolarEclipseDetails.
        :type maximum_eclipse: datetime
        """

        self._maximum_eclipse = maximum_eclipse

    @property
    def partial_eclispe_begin(self):
        """Gets the partial_eclispe_begin of this SolarEclipseDetails.


        :return: The partial_eclispe_begin of this SolarEclipseDetails.
        :rtype: datetime
        """
        return self._partial_eclispe_begin

    @partial_eclispe_begin.setter
    def partial_eclispe_begin(self, partial_eclispe_begin):
        """Sets the partial_eclispe_begin of this SolarEclipseDetails.


        :param partial_eclispe_begin: The partial_eclispe_begin of this SolarEclipseDetails.
        :type partial_eclispe_begin: datetime
        """

        self._partial_eclispe_begin = partial_eclispe_begin

    @property
    def partial_eclispe_end(self):
        """Gets the partial_eclispe_end of this SolarEclipseDetails.


        :return: The partial_eclispe_end of this SolarEclipseDetails.
        :rtype: datetime
        """
        return self._partial_eclispe_end

    @partial_eclispe_end.setter
    def partial_eclispe_end(self, partial_eclispe_end):
        """Sets the partial_eclispe_end of this SolarEclipseDetails.


        :param partial_eclispe_end: The partial_eclispe_end of this SolarEclipseDetails.
        :type partial_eclispe_end: datetime
        """

        self._partial_eclispe_end = partial_eclispe_end

    @property
    def type(self):
        """Gets the type of this SolarEclipseDetails.


        :return: The type of this SolarEclipseDetails.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SolarEclipseDetails.


        :param type: The type of this SolarEclipseDetails.
        :type type: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
