# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeoFenceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distances: List[float]=None, insides: List[bool]=None):
        """GeoFenceResponse - a model defined in OpenAPI

        :param distances: The distances of this GeoFenceResponse.
        :param insides: The insides of this GeoFenceResponse.
        """
        self.openapi_types = {
            'distances': List[float],
            'insides': List[bool]
        }

        self.attribute_map = {
            'distances': 'distances',
            'insides': 'insides'
        }

        self._distances = distances
        self._insides = insides

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeoFenceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The geoFenceResponse of this GeoFenceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distances(self):
        """Gets the distances of this GeoFenceResponse.

        List of distances from the fence.

        :return: The distances of this GeoFenceResponse.
        :rtype: List[float]
        """
        return self._distances

    @distances.setter
    def distances(self, distances):
        """Sets the distances of this GeoFenceResponse.

        List of distances from the fence.

        :param distances: The distances of this GeoFenceResponse.
        :type distances: List[float]
        """

        self._distances = distances

    @property
    def insides(self):
        """Gets the insides of this GeoFenceResponse.

        List of flags indicating inside or outside of the fence.

        :return: The insides of this GeoFenceResponse.
        :rtype: List[bool]
        """
        return self._insides

    @insides.setter
    def insides(self, insides):
        """Sets the insides of this GeoFenceResponse.

        List of flags indicating inside or outside of the fence.

        :param insides: The insides of this GeoFenceResponse.
        :type insides: List[bool]
        """

        self._insides = insides
