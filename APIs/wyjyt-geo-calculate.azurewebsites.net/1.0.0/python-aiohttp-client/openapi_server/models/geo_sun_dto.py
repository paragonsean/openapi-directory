# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.solar_eclipse_details import SolarEclipseDetails
from openapi_server import util


class GeoSunDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, altitude: float=None, azimuth: float=None, dawn: datetime=None, declination: float=None, dusk: datetime=None, is_up: bool=None, last_eclipse: SolarEclipseDetails=None, next_eclipse: SolarEclipseDetails=None, noon: datetime=None, right_ascension: float=None, rise: datetime=None, set: datetime=None):
        """GeoSunDto - a model defined in OpenAPI

        :param altitude: The altitude of this GeoSunDto.
        :param azimuth: The azimuth of this GeoSunDto.
        :param dawn: The dawn of this GeoSunDto.
        :param declination: The declination of this GeoSunDto.
        :param dusk: The dusk of this GeoSunDto.
        :param is_up: The is_up of this GeoSunDto.
        :param last_eclipse: The last_eclipse of this GeoSunDto.
        :param next_eclipse: The next_eclipse of this GeoSunDto.
        :param noon: The noon of this GeoSunDto.
        :param right_ascension: The right_ascension of this GeoSunDto.
        :param rise: The rise of this GeoSunDto.
        :param set: The set of this GeoSunDto.
        """
        self.openapi_types = {
            'altitude': float,
            'azimuth': float,
            'dawn': datetime,
            'declination': float,
            'dusk': datetime,
            'is_up': bool,
            'last_eclipse': SolarEclipseDetails,
            'next_eclipse': SolarEclipseDetails,
            'noon': datetime,
            'right_ascension': float,
            'rise': datetime,
            'set': datetime
        }

        self.attribute_map = {
            'altitude': 'altitude',
            'azimuth': 'azimuth',
            'dawn': 'dawn',
            'declination': 'declination',
            'dusk': 'dusk',
            'is_up': 'isUp',
            'last_eclipse': 'lastEclipse',
            'next_eclipse': 'nextEclipse',
            'noon': 'noon',
            'right_ascension': 'rightAscension',
            'rise': 'rise',
            'set': 'set'
        }

        self._altitude = altitude
        self._azimuth = azimuth
        self._dawn = dawn
        self._declination = declination
        self._dusk = dusk
        self._is_up = is_up
        self._last_eclipse = last_eclipse
        self._next_eclipse = next_eclipse
        self._noon = noon
        self._right_ascension = right_ascension
        self._rise = rise
        self._set = set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeoSunDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The geoSunDto of this GeoSunDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def altitude(self):
        """Gets the altitude of this GeoSunDto.


        :return: The altitude of this GeoSunDto.
        :rtype: float
        """
        return self._altitude

    @altitude.setter
    def altitude(self, altitude):
        """Sets the altitude of this GeoSunDto.


        :param altitude: The altitude of this GeoSunDto.
        :type altitude: float
        """

        self._altitude = altitude

    @property
    def azimuth(self):
        """Gets the azimuth of this GeoSunDto.


        :return: The azimuth of this GeoSunDto.
        :rtype: float
        """
        return self._azimuth

    @azimuth.setter
    def azimuth(self, azimuth):
        """Sets the azimuth of this GeoSunDto.


        :param azimuth: The azimuth of this GeoSunDto.
        :type azimuth: float
        """

        self._azimuth = azimuth

    @property
    def dawn(self):
        """Gets the dawn of this GeoSunDto.


        :return: The dawn of this GeoSunDto.
        :rtype: datetime
        """
        return self._dawn

    @dawn.setter
    def dawn(self, dawn):
        """Sets the dawn of this GeoSunDto.


        :param dawn: The dawn of this GeoSunDto.
        :type dawn: datetime
        """

        self._dawn = dawn

    @property
    def declination(self):
        """Gets the declination of this GeoSunDto.


        :return: The declination of this GeoSunDto.
        :rtype: float
        """
        return self._declination

    @declination.setter
    def declination(self, declination):
        """Sets the declination of this GeoSunDto.


        :param declination: The declination of this GeoSunDto.
        :type declination: float
        """

        self._declination = declination

    @property
    def dusk(self):
        """Gets the dusk of this GeoSunDto.


        :return: The dusk of this GeoSunDto.
        :rtype: datetime
        """
        return self._dusk

    @dusk.setter
    def dusk(self, dusk):
        """Sets the dusk of this GeoSunDto.


        :param dusk: The dusk of this GeoSunDto.
        :type dusk: datetime
        """

        self._dusk = dusk

    @property
    def is_up(self):
        """Gets the is_up of this GeoSunDto.


        :return: The is_up of this GeoSunDto.
        :rtype: bool
        """
        return self._is_up

    @is_up.setter
    def is_up(self, is_up):
        """Sets the is_up of this GeoSunDto.


        :param is_up: The is_up of this GeoSunDto.
        :type is_up: bool
        """

        self._is_up = is_up

    @property
    def last_eclipse(self):
        """Gets the last_eclipse of this GeoSunDto.


        :return: The last_eclipse of this GeoSunDto.
        :rtype: SolarEclipseDetails
        """
        return self._last_eclipse

    @last_eclipse.setter
    def last_eclipse(self, last_eclipse):
        """Sets the last_eclipse of this GeoSunDto.


        :param last_eclipse: The last_eclipse of this GeoSunDto.
        :type last_eclipse: SolarEclipseDetails
        """

        self._last_eclipse = last_eclipse

    @property
    def next_eclipse(self):
        """Gets the next_eclipse of this GeoSunDto.


        :return: The next_eclipse of this GeoSunDto.
        :rtype: SolarEclipseDetails
        """
        return self._next_eclipse

    @next_eclipse.setter
    def next_eclipse(self, next_eclipse):
        """Sets the next_eclipse of this GeoSunDto.


        :param next_eclipse: The next_eclipse of this GeoSunDto.
        :type next_eclipse: SolarEclipseDetails
        """

        self._next_eclipse = next_eclipse

    @property
    def noon(self):
        """Gets the noon of this GeoSunDto.


        :return: The noon of this GeoSunDto.
        :rtype: datetime
        """
        return self._noon

    @noon.setter
    def noon(self, noon):
        """Sets the noon of this GeoSunDto.


        :param noon: The noon of this GeoSunDto.
        :type noon: datetime
        """

        self._noon = noon

    @property
    def right_ascension(self):
        """Gets the right_ascension of this GeoSunDto.


        :return: The right_ascension of this GeoSunDto.
        :rtype: float
        """
        return self._right_ascension

    @right_ascension.setter
    def right_ascension(self, right_ascension):
        """Sets the right_ascension of this GeoSunDto.


        :param right_ascension: The right_ascension of this GeoSunDto.
        :type right_ascension: float
        """

        self._right_ascension = right_ascension

    @property
    def rise(self):
        """Gets the rise of this GeoSunDto.


        :return: The rise of this GeoSunDto.
        :rtype: datetime
        """
        return self._rise

    @rise.setter
    def rise(self, rise):
        """Sets the rise of this GeoSunDto.


        :param rise: The rise of this GeoSunDto.
        :type rise: datetime
        """

        self._rise = rise

    @property
    def set(self):
        """Gets the set of this GeoSunDto.


        :return: The set of this GeoSunDto.
        :rtype: datetime
        """
        return self._set

    @set.setter
    def set(self, set):
        """Sets the set of this GeoSunDto.


        :param set: The set of this GeoSunDto.
        :type set: datetime
        """

        self._set = set
