# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeoDistanceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bearing: float=None, meters: float=None):
        """GeoDistanceResponse - a model defined in OpenAPI

        :param bearing: The bearing of this GeoDistanceResponse.
        :param meters: The meters of this GeoDistanceResponse.
        """
        self.openapi_types = {
            'bearing': float,
            'meters': float
        }

        self.attribute_map = {
            'bearing': 'bearing',
            'meters': 'meters'
        }

        self._bearing = bearing
        self._meters = meters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeoDistanceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The geoDistanceResponse of this GeoDistanceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bearing(self):
        """Gets the bearing of this GeoDistanceResponse.

        Bearing direction between the two coordinates in degrees.

        :return: The bearing of this GeoDistanceResponse.
        :rtype: float
        """
        return self._bearing

    @bearing.setter
    def bearing(self, bearing):
        """Sets the bearing of this GeoDistanceResponse.

        Bearing direction between the two coordinates in degrees.

        :param bearing: The bearing of this GeoDistanceResponse.
        :type bearing: float
        """

        self._bearing = bearing

    @property
    def meters(self):
        """Gets the meters of this GeoDistanceResponse.

        Distance between the two coordinates in meters.

        :return: The meters of this GeoDistanceResponse.
        :rtype: float
        """
        return self._meters

    @meters.setter
    def meters(self, meters):
        """Sets the meters of this GeoDistanceResponse.

        Distance between the two coordinates in meters.

        :param meters: The meters of this GeoDistanceResponse.
        :type meters: float
        """

        self._meters = meters
