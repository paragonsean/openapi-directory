/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LunarEclipseDetails model module.
 * @module model/LunarEclipseDetails
 * @version 1.0.0
 */
class LunarEclipseDetails {
    /**
     * Constructs a new <code>LunarEclipseDetails</code>.
     * @alias module:model/LunarEclipseDetails
     */
    constructor() { 
        
        LunarEclipseDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['type'] = TypeEnum.0;
    }

    /**
     * Constructs a <code>LunarEclipseDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LunarEclipseDetails} obj Optional instance to populate.
     * @return {module:model/LunarEclipseDetails} The populated <code>LunarEclipseDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LunarEclipseDetails();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('hasEclipseData')) {
                obj['hasEclipseData'] = ApiClient.convertToType(data['hasEclipseData'], 'Boolean');
            }
            if (data.hasOwnProperty('midEclipse')) {
                obj['midEclipse'] = ApiClient.convertToType(data['midEclipse'], 'Date');
            }
            if (data.hasOwnProperty('partialEclispeBegin')) {
                obj['partialEclispeBegin'] = ApiClient.convertToType(data['partialEclispeBegin'], 'Date');
            }
            if (data.hasOwnProperty('partialEclispeEnd')) {
                obj['partialEclispeEnd'] = ApiClient.convertToType(data['partialEclispeEnd'], 'Date');
            }
            if (data.hasOwnProperty('penumbralEclipseBegin')) {
                obj['penumbralEclipseBegin'] = ApiClient.convertToType(data['penumbralEclipseBegin'], 'Date');
            }
            if (data.hasOwnProperty('penumbralEclispeEnd')) {
                obj['penumbralEclispeEnd'] = ApiClient.convertToType(data['penumbralEclispeEnd'], 'Date');
            }
            if (data.hasOwnProperty('totalEclipseBegin')) {
                obj['totalEclipseBegin'] = ApiClient.convertToType(data['totalEclipseBegin'], 'Date');
            }
            if (data.hasOwnProperty('totalEclipseEnd')) {
                obj['totalEclipseEnd'] = ApiClient.convertToType(data['totalEclipseEnd'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LunarEclipseDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LunarEclipseDetails</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Date} date
 */
LunarEclipseDetails.prototype['date'] = undefined;

/**
 * @member {Boolean} hasEclipseData
 */
LunarEclipseDetails.prototype['hasEclipseData'] = undefined;

/**
 * @member {Date} midEclipse
 */
LunarEclipseDetails.prototype['midEclipse'] = undefined;

/**
 * @member {Date} partialEclispeBegin
 */
LunarEclipseDetails.prototype['partialEclispeBegin'] = undefined;

/**
 * @member {Date} partialEclispeEnd
 */
LunarEclipseDetails.prototype['partialEclispeEnd'] = undefined;

/**
 * @member {Date} penumbralEclipseBegin
 */
LunarEclipseDetails.prototype['penumbralEclipseBegin'] = undefined;

/**
 * @member {Date} penumbralEclispeEnd
 */
LunarEclipseDetails.prototype['penumbralEclispeEnd'] = undefined;

/**
 * @member {Date} totalEclipseBegin
 */
LunarEclipseDetails.prototype['totalEclipseBegin'] = undefined;

/**
 * @member {Date} totalEclipseEnd
 */
LunarEclipseDetails.prototype['totalEclipseEnd'] = undefined;

/**
 * @member {module:model/LunarEclipseDetails.TypeEnum} type
 * @default TypeEnum.0
 */
LunarEclipseDetails.prototype['type'] = TypeEnum.0;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {Number}
 * @readonly
 */
LunarEclipseDetails['TypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};



export default LunarEclipseDetails;

