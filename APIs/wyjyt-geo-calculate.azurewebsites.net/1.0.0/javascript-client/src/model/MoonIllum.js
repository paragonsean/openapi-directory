/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MoonIllum model module.
 * @module model/MoonIllum
 * @version 1.0.0
 */
class MoonIllum {
    /**
     * Constructs a new <code>MoonIllum</code>.
     * @alias module:model/MoonIllum
     */
    constructor() { 
        
        MoonIllum.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['phaseNameEnum'] = PhaseNameEnumEnum.0;
    }

    /**
     * Constructs a <code>MoonIllum</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MoonIllum} obj Optional instance to populate.
     * @return {module:model/MoonIllum} The populated <code>MoonIllum</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoonIllum();

            if (data.hasOwnProperty('angle')) {
                obj['angle'] = ApiClient.convertToType(data['angle'], 'Number');
            }
            if (data.hasOwnProperty('fraction')) {
                obj['fraction'] = ApiClient.convertToType(data['fraction'], 'Number');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'Number');
            }
            if (data.hasOwnProperty('phaseName')) {
                obj['phaseName'] = ApiClient.convertToType(data['phaseName'], 'String');
            }
            if (data.hasOwnProperty('phaseNameEnum')) {
                obj['phaseNameEnum'] = ApiClient.convertToType(data['phaseNameEnum'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoonIllum</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoonIllum</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['phaseName'] && !(typeof data['phaseName'] === 'string' || data['phaseName'] instanceof String)) {
            throw new Error("Expected the field `phaseName` to be a primitive type in the JSON string but got " + data['phaseName']);
        }

        return true;
    }


}



/**
 * @member {Number} angle
 */
MoonIllum.prototype['angle'] = undefined;

/**
 * @member {Number} fraction
 */
MoonIllum.prototype['fraction'] = undefined;

/**
 * @member {Number} phase
 */
MoonIllum.prototype['phase'] = undefined;

/**
 * @member {String} phaseName
 */
MoonIllum.prototype['phaseName'] = undefined;

/**
 * @member {module:model/MoonIllum.PhaseNameEnumEnum} phaseNameEnum
 * @default PhaseNameEnumEnum.0
 */
MoonIllum.prototype['phaseNameEnum'] = PhaseNameEnumEnum.0;





/**
 * Allowed values for the <code>phaseNameEnum</code> property.
 * @enum {Number}
 * @readonly
 */
MoonIllum['PhaseNameEnumEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7
};



export default MoonIllum;

