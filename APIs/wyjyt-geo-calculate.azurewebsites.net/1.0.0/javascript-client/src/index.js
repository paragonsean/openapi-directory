/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GeoConvertRequest from './model/GeoConvertRequest';
import GeoConvertResponse from './model/GeoConvertResponse';
import GeoDistanceRequest from './model/GeoDistanceRequest';
import GeoDistanceResponse from './model/GeoDistanceResponse';
import GeoEventDto from './model/GeoEventDto';
import GeoFenceRequest from './model/GeoFenceRequest';
import GeoFenceResponse from './model/GeoFenceResponse';
import GeoMoonDto from './model/GeoMoonDto';
import GeoSkyRequest from './model/GeoSkyRequest';
import GeoSkyResponse from './model/GeoSkyResponse';
import GeoSunDto from './model/GeoSunDto';
import LunarEclipseDetails from './model/LunarEclipseDetails';
import MoonIllum from './model/MoonIllum';
import SolarEclipseDetails from './model/SolarEclipseDetails';
import WyjytErrorResponse from './model/WyjytErrorResponse';
import GeoCalculateApi from './api/GeoCalculateApi';


/**
* Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WyjytGeoCalculate = require('index'); // See note below*.
* var xxxSvc = new WyjytGeoCalculate.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WyjytGeoCalculate.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WyjytGeoCalculate.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WyjytGeoCalculate.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GeoConvertRequest model constructor.
     * @property {module:model/GeoConvertRequest}
     */
    GeoConvertRequest,

    /**
     * The GeoConvertResponse model constructor.
     * @property {module:model/GeoConvertResponse}
     */
    GeoConvertResponse,

    /**
     * The GeoDistanceRequest model constructor.
     * @property {module:model/GeoDistanceRequest}
     */
    GeoDistanceRequest,

    /**
     * The GeoDistanceResponse model constructor.
     * @property {module:model/GeoDistanceResponse}
     */
    GeoDistanceResponse,

    /**
     * The GeoEventDto model constructor.
     * @property {module:model/GeoEventDto}
     */
    GeoEventDto,

    /**
     * The GeoFenceRequest model constructor.
     * @property {module:model/GeoFenceRequest}
     */
    GeoFenceRequest,

    /**
     * The GeoFenceResponse model constructor.
     * @property {module:model/GeoFenceResponse}
     */
    GeoFenceResponse,

    /**
     * The GeoMoonDto model constructor.
     * @property {module:model/GeoMoonDto}
     */
    GeoMoonDto,

    /**
     * The GeoSkyRequest model constructor.
     * @property {module:model/GeoSkyRequest}
     */
    GeoSkyRequest,

    /**
     * The GeoSkyResponse model constructor.
     * @property {module:model/GeoSkyResponse}
     */
    GeoSkyResponse,

    /**
     * The GeoSunDto model constructor.
     * @property {module:model/GeoSunDto}
     */
    GeoSunDto,

    /**
     * The LunarEclipseDetails model constructor.
     * @property {module:model/LunarEclipseDetails}
     */
    LunarEclipseDetails,

    /**
     * The MoonIllum model constructor.
     * @property {module:model/MoonIllum}
     */
    MoonIllum,

    /**
     * The SolarEclipseDetails model constructor.
     * @property {module:model/SolarEclipseDetails}
     */
    SolarEclipseDetails,

    /**
     * The WyjytErrorResponse model constructor.
     * @property {module:model/WyjytErrorResponse}
     */
    WyjytErrorResponse,

    /**
    * The GeoCalculateApi service constructor.
    * @property {module:api/GeoCalculateApi}
    */
    GeoCalculateApi
};
