/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WyjytGeoCalculate);
  }
}(this, function(expect, WyjytGeoCalculate) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WyjytGeoCalculate.GeoEventDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GeoEventDto', function() {
    it('should create an instance of GeoEventDto', function() {
      // uncomment below and update the code to test GeoEventDto
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be.a(WyjytGeoCalculate.GeoEventDto);
    });

    it('should have the property fall (base name: "fall")', function() {
      // uncomment below and update the code to test the property fall
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property lastApogee (base name: "lastApogee")', function() {
      // uncomment below and update the code to test the property lastApogee
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property lastPerigee (base name: "lastPerigee")', function() {
      // uncomment below and update the code to test the property lastPerigee
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property nextApogee (base name: "nextApogee")', function() {
      // uncomment below and update the code to test the property nextApogee
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property nextPerigee (base name: "nextPerigee")', function() {
      // uncomment below and update the code to test the property nextPerigee
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property spring (base name: "spring")', function() {
      // uncomment below and update the code to test the property spring
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property summer (base name: "summer")', function() {
      // uncomment below and update the code to test the property summer
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property winter (base name: "winter")', function() {
      // uncomment below and update the code to test the property winter
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

    it('should have the property zodiacSign (base name: "zodiacSign")', function() {
      // uncomment below and update the code to test the property zodiacSign
      //var instance = new WyjytGeoCalculate.GeoEventDto();
      //expect(instance).to.be();
    });

  });

}));
