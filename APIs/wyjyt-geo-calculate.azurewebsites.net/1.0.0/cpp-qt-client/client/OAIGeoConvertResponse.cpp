/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeoConvertResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeoConvertResponse::OAIGeoConvertResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeoConvertResponse::OAIGeoConvertResponse() {
    this->initializeModel();
}

OAIGeoConvertResponse::~OAIGeoConvertResponse() {}

void OAIGeoConvertResponse::initializeModel() {

    m_coordinates_isSet = false;
    m_coordinates_isValid = false;
}

void OAIGeoConvertResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeoConvertResponse::fromJsonObject(QJsonObject json) {

    m_coordinates_isValid = ::OpenAPI::fromJsonValue(m_coordinates, json[QString("coordinates")]);
    m_coordinates_isSet = !json[QString("coordinates")].isNull() && m_coordinates_isValid;
}

QString OAIGeoConvertResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeoConvertResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_coordinates_isSet) {
        obj.insert(QString("coordinates"), ::OpenAPI::toJsonValue(m_coordinates));
    }
    return obj;
}

QString OAIGeoConvertResponse::getCoordinates() const {
    return m_coordinates;
}
void OAIGeoConvertResponse::setCoordinates(const QString &coordinates) {
    m_coordinates = coordinates;
    m_coordinates_isSet = true;
}

bool OAIGeoConvertResponse::is_coordinates_Set() const{
    return m_coordinates_isSet;
}

bool OAIGeoConvertResponse::is_coordinates_Valid() const{
    return m_coordinates_isValid;
}

bool OAIGeoConvertResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_coordinates_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeoConvertResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
