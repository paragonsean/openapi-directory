/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoMoonDto.h
 *
 * Lunar information.
 */

#ifndef OAIGeoMoonDto_H
#define OAIGeoMoonDto_H

#include <QJsonObject>

#include "OAILunarEclipseDetails.h"
#include "OAIMoonIllum.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoonIllum;
class OAILunarEclipseDetails;

class OAIGeoMoonDto : public OAIObject {
public:
    OAIGeoMoonDto();
    OAIGeoMoonDto(QString json);
    ~OAIGeoMoonDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAltitude() const;
    void setAltitude(const double &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    double getAzimuth() const;
    void setAzimuth(const double &azimuth);
    bool is_azimuth_Set() const;
    bool is_azimuth_Valid() const;

    double getBearing() const;
    void setBearing(const double &bearing);
    bool is_bearing_Set() const;
    bool is_bearing_Valid() const;

    double getDeclination() const;
    void setDeclination(const double &declination);
    bool is_declination_Set() const;
    bool is_declination_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    OAIMoonIllum getIllumination() const;
    void setIllumination(const OAIMoonIllum &illumination);
    bool is_illumination_Set() const;
    bool is_illumination_Valid() const;

    bool isIsUp() const;
    void setIsUp(const bool &is_up);
    bool is_is_up_Set() const;
    bool is_is_up_Valid() const;

    OAILunarEclipseDetails getLastEclipse() const;
    void setLastEclipse(const OAILunarEclipseDetails &last_eclipse);
    bool is_last_eclipse_Set() const;
    bool is_last_eclipse_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAILunarEclipseDetails getNextEclipse() const;
    void setNextEclipse(const OAILunarEclipseDetails &next_eclipse);
    bool is_next_eclipse_Set() const;
    bool is_next_eclipse_Valid() const;

    double getRightAscension() const;
    void setRightAscension(const double &right_ascension);
    bool is_right_ascension_Set() const;
    bool is_right_ascension_Valid() const;

    QDateTime getRise() const;
    void setRise(const QDateTime &rise);
    bool is_rise_Set() const;
    bool is_rise_Valid() const;

    QDateTime getRSet() const;
    void setRSet(const QDateTime &r_set);
    bool is_r_set_Set() const;
    bool is_r_set_Valid() const;

    QString getSign() const;
    void setSign(const QString &sign);
    bool is_sign_Set() const;
    bool is_sign_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_altitude;
    bool m_altitude_isSet;
    bool m_altitude_isValid;

    double m_azimuth;
    bool m_azimuth_isSet;
    bool m_azimuth_isValid;

    double m_bearing;
    bool m_bearing_isSet;
    bool m_bearing_isValid;

    double m_declination;
    bool m_declination_isSet;
    bool m_declination_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    OAIMoonIllum m_illumination;
    bool m_illumination_isSet;
    bool m_illumination_isValid;

    bool m_is_up;
    bool m_is_up_isSet;
    bool m_is_up_isValid;

    OAILunarEclipseDetails m_last_eclipse;
    bool m_last_eclipse_isSet;
    bool m_last_eclipse_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAILunarEclipseDetails m_next_eclipse;
    bool m_next_eclipse_isSet;
    bool m_next_eclipse_isValid;

    double m_right_ascension;
    bool m_right_ascension_isSet;
    bool m_right_ascension_isValid;

    QDateTime m_rise;
    bool m_rise_isSet;
    bool m_rise_isValid;

    QDateTime m_r_set;
    bool m_r_set_isSet;
    bool m_r_set_isValid;

    QString m_sign;
    bool m_sign_isSet;
    bool m_sign_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoMoonDto)

#endif // OAIGeoMoonDto_H
