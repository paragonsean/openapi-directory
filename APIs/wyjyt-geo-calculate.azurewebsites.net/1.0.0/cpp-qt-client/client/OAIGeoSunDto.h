/**
 * Wyjyt - Geo Calculate
 * Widget API to calculate Geo Coordinates, Geo Fences and Sun, Moon, Sky, Eclipse information.  See https://wyjyt.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoSunDto.h
 *
 * Solar information.
 */

#ifndef OAIGeoSunDto_H
#define OAIGeoSunDto_H

#include <QJsonObject>

#include "OAISolarEclipseDetails.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISolarEclipseDetails;

class OAIGeoSunDto : public OAIObject {
public:
    OAIGeoSunDto();
    OAIGeoSunDto(QString json);
    ~OAIGeoSunDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAltitude() const;
    void setAltitude(const double &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    double getAzimuth() const;
    void setAzimuth(const double &azimuth);
    bool is_azimuth_Set() const;
    bool is_azimuth_Valid() const;

    QDateTime getDawn() const;
    void setDawn(const QDateTime &dawn);
    bool is_dawn_Set() const;
    bool is_dawn_Valid() const;

    double getDeclination() const;
    void setDeclination(const double &declination);
    bool is_declination_Set() const;
    bool is_declination_Valid() const;

    QDateTime getDusk() const;
    void setDusk(const QDateTime &dusk);
    bool is_dusk_Set() const;
    bool is_dusk_Valid() const;

    bool isIsUp() const;
    void setIsUp(const bool &is_up);
    bool is_is_up_Set() const;
    bool is_is_up_Valid() const;

    OAISolarEclipseDetails getLastEclipse() const;
    void setLastEclipse(const OAISolarEclipseDetails &last_eclipse);
    bool is_last_eclipse_Set() const;
    bool is_last_eclipse_Valid() const;

    OAISolarEclipseDetails getNextEclipse() const;
    void setNextEclipse(const OAISolarEclipseDetails &next_eclipse);
    bool is_next_eclipse_Set() const;
    bool is_next_eclipse_Valid() const;

    QDateTime getNoon() const;
    void setNoon(const QDateTime &noon);
    bool is_noon_Set() const;
    bool is_noon_Valid() const;

    double getRightAscension() const;
    void setRightAscension(const double &right_ascension);
    bool is_right_ascension_Set() const;
    bool is_right_ascension_Valid() const;

    QDateTime getRise() const;
    void setRise(const QDateTime &rise);
    bool is_rise_Set() const;
    bool is_rise_Valid() const;

    QDateTime getRSet() const;
    void setRSet(const QDateTime &r_set);
    bool is_r_set_Set() const;
    bool is_r_set_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_altitude;
    bool m_altitude_isSet;
    bool m_altitude_isValid;

    double m_azimuth;
    bool m_azimuth_isSet;
    bool m_azimuth_isValid;

    QDateTime m_dawn;
    bool m_dawn_isSet;
    bool m_dawn_isValid;

    double m_declination;
    bool m_declination_isSet;
    bool m_declination_isValid;

    QDateTime m_dusk;
    bool m_dusk_isSet;
    bool m_dusk_isValid;

    bool m_is_up;
    bool m_is_up_isSet;
    bool m_is_up_isValid;

    OAISolarEclipseDetails m_last_eclipse;
    bool m_last_eclipse_isSet;
    bool m_last_eclipse_isValid;

    OAISolarEclipseDetails m_next_eclipse;
    bool m_next_eclipse_isSet;
    bool m_next_eclipse_isValid;

    QDateTime m_noon;
    bool m_noon_isSet;
    bool m_noon_isValid;

    double m_right_ascension;
    bool m_right_ascension_isSet;
    bool m_right_ascension_isValid;

    QDateTime m_rise;
    bool m_rise_isSet;
    bool m_rise_isValid;

    QDateTime m_r_set;
    bool m_r_set_isSet;
    bool m_r_set_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoSunDto)

#endif // OAIGeoSunDto_H
