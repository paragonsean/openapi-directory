/**
 * Dados Abertos - API
 * API de Dados Abertos com dados processados pelo grupo de monitoramento de Queimadas do INPE.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Auxiliar service.
* @module api/AuxiliarApi
* @version 1.0
*/
export default class AuxiliarApi {

    /**
    * Constructs a new AuxiliarApi. 
    * @alias module:api/AuxiliarApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEstadosAuxiliarResource operation.
     * @callback module:api/AuxiliarApi~getEstadosAuxiliarResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint para retorno dos dados de estados utilizados na filtragem de focos
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} [paisId] Código do país pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {module:api/AuxiliarApi~getEstadosAuxiliarResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getEstadosAuxiliarResource(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pais_id': this.apiClient.buildCollectionParam(opts['paisId'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auxiliar/estados', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMunicipiosAuxiliarResource operation.
     * @callback module:api/AuxiliarApi~getMunicipiosAuxiliarResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint para retorno dos dados de municípios utilizados na filtragem de focos
     * @param {Number} paisId Código do país pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} [estadoId] Código do estado pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {module:api/AuxiliarApi~getMunicipiosAuxiliarResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getMunicipiosAuxiliarResource(paisId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'paisId' is set
      if (paisId === undefined || paisId === null) {
        throw new Error("Missing the required parameter 'paisId' when calling getMunicipiosAuxiliarResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'pais_id': paisId,
        'estado_id': this.apiClient.buildCollectionParam(opts['estadoId'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auxiliar/municipios', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaisesAuxiliarResource operation.
     * @callback module:api/AuxiliarApi~getPaisesAuxiliarResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint para retorno dos dados de países utilizados na filtragem de focos
     * @param {module:api/AuxiliarApi~getPaisesAuxiliarResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getPaisesAuxiliarResource(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auxiliar/paises', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSateliteAuxiliarResource operation.
     * @callback module:api/AuxiliarApi~getSateliteAuxiliarResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint para retorno dos dados de satélites utilizados na filtragem de focos
     * @param {module:api/AuxiliarApi~getSateliteAuxiliarResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSateliteAuxiliarResource(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/auxiliar/satelites', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
