/**
 * Dados Abertos - API
 * API de Dados Abertos com dados processados pelo grupo de monitoramento de Queimadas do INPE.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Focos service.
* @module api/FocosApi
* @version 1.0
*/
export default class FocosApi {

    /**
    * Constructs a new FocosApi. 
    * @alias module:api/FocosApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFocosCountResource operation.
     * @callback module:api/FocosApi~getFocosCountResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint para retorno da contagem dos focos de calor
     * @param {Object} opts Optional parameters
     * @param {Number} [paisId] Código do país pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Number} [estadoId] Código do estado pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Number} [municipioId] Código do município pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Array.<String>} [satelite] Nome do satélte pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {module:api/FocosApi~getFocosCountResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getFocosCountResource(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pais_id': opts['paisId'],
        'estado_id': opts['estadoId'],
        'municipio_id': opts['municipioId'],
        'satelite': this.apiClient.buildCollectionParam(opts['satelite'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/focos/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFocosResource operation.
     * @callback module:api/FocosApi~getFocosResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint para retorno dos dados de focos de calor
     * @param {Object} opts Optional parameters
     * @param {Number} [paisId] Código do país pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Number} [estadoId] Código do estado pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Number} [municipioId] Código do município pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {Array.<String>} [satelite] Nome do satélte pelo qual será filtrado o resultado. Ver rotas auxiliares.
     * @param {String} [xFields] An optional fields mask
     * @param {module:api/FocosApi~getFocosResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getFocosResource(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pais_id': opts['paisId'],
        'estado_id': opts['estadoId'],
        'municipio_id': opts['municipioId'],
        'satelite': this.apiClient.buildCollectionParam(opts['satelite'], 'multi')
      };
      let headerParams = {
        'X-Fields': opts['xFields']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/focos/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
