/**
 * MineSkin API
 * Client implementations:  Java: https://github.com/InventivetalentDev/MineskinClient NodeJS: https://github.com/InventivetalentDev/mineskin-client  Examples: https://github.com/MineSkin/examples 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@mineskin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_get_list__page__get_200_response_page.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_get_list__page__get_200_response_page::OAI_get_list__page__get_200_response_page(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_get_list__page__get_200_response_page::OAI_get_list__page__get_200_response_page() {
    this->initializeModel();
}

OAI_get_list__page__get_200_response_page::~OAI_get_list__page__get_200_response_page() {}

void OAI_get_list__page__get_200_response_page::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAI_get_list__page__get_200_response_page::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_get_list__page__get_200_response_page::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAI_get_list__page__get_200_response_page::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_get_list__page__get_200_response_page::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

qint32 OAI_get_list__page__get_200_response_page::getAmount() const {
    return m_amount;
}
void OAI_get_list__page__get_200_response_page::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAI_get_list__page__get_200_response_page::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAI_get_list__page__get_200_response_page::is_amount_Valid() const{
    return m_amount_isValid;
}

qint32 OAI_get_list__page__get_200_response_page::getIndex() const {
    return m_index;
}
void OAI_get_list__page__get_200_response_page::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAI_get_list__page__get_200_response_page::is_index_Set() const{
    return m_index_isSet;
}

bool OAI_get_list__page__get_200_response_page::is_index_Valid() const{
    return m_index_isValid;
}

qint32 OAI_get_list__page__get_200_response_page::getTotal() const {
    return m_total;
}
void OAI_get_list__page__get_200_response_page::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAI_get_list__page__get_200_response_page::is_total_Set() const{
    return m_total_isSet;
}

bool OAI_get_list__page__get_200_response_page::is_total_Valid() const{
    return m_total_isValid;
}

bool OAI_get_list__page__get_200_response_page::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_get_list__page__get_200_response_page::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
