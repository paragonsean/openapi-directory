openapi: 3.0.3
info:
  contact:
    email: info@mineskin.org
    name: inventivetalent
    url: https://discord.gg/nzAdvPc
  description: "Client implementations: \nJava: https://github.com/InventivetalentDev/MineskinClient\n\
    NodeJS: https://github.com/InventivetalentDev/mineskin-client\n\nExamples: https://github.com/MineSkin/examples\n"
  license:
    name: MIT
    url: https://github.com/MineSkin/api.mineskin.org/blob/master/LICENSE
  title: MineSkin API
  version: 1.0.0
  x-logo:
    url: https://mineskin.org/img/mineskin-x256.png
  x-origin:
  - format: openapi
    url: https://api.mineskin.org/openapi.yml
    version: "3.0"
  x-providerName: mineskin.org
servers:
- url: https://api.mineskin.org
tags:
- name: generate
- name: get
- name: util
paths:
  /generate/upload:
    post:
      operationId: generate_upload_post
      parameters:
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_generate_upload_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_200_response'
          description: Successfully generated skin info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_400_response'
          description: Response if an error occured
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_429_response'
          description: Response if the client sent a request too soon
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_400_response'
          description: Response if an error occured
      security:
      - apiKey: []
        bearerAuth: []
      tags:
      - generate
      x-openapi-router-controller: openapi_server.controllers.generate_controller
      x-codegen-request-body-name: body
  /generate/url:
    post:
      operationId: generate_url_post
      parameters:
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_generate_url_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_200_response'
          description: Successfully generated skin info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_400_response'
          description: Response if an error occured
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_429_response'
          description: Response if the client sent a request too soon
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_400_response'
          description: Response if an error occured
      security:
      - apiKey: []
        bearerAuth: []
      tags:
      - generate
      x-openapi-router-controller: openapi_server.controllers.generate_controller
      x-codegen-request-body-name: body
  /generate/user:
    post:
      operationId: generate_user_post
      parameters:
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_generate_user_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_200_response'
          description: Successfully generated skin info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_400_response'
          description: Response if an error occured
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_429_response'
          description: Response if the client sent a request too soon
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_generate_upload_post_400_response'
          description: Response if an error occured
      security:
      - apiKey: []
        bearerAuth: []
      tags:
      - generate
      x-openapi-router-controller: openapi_server.controllers.generate_controller
      x-codegen-request-body-name: body
  /get/delay:
    get:
      operationId: get_delay_get
      parameters:
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_get_delay_get_200_response'
          description: Delay info for the requesting client
      security:
      - apiKey: []
        bearerAuth: []
      tags:
      - get
      x-openapi-router-controller: openapi_server.controllers.get_controller
  /get/id/{id}:
    get:
      description: Deprecated. Use /get/uuid instead.
      operationId: get_id_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: integer
          type: number
        style: simple
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkinInfo'
          description: Skin Info
      tags:
      - get
      x-openapi-router-controller: openapi_server.controllers.get_controller
  /get/list/{page}:
    get:
      operationId: get_list_page_get
      parameters:
      - description: "For reference pagination, the uuid of the last skin in the previous\
          \ page. For numeric pagination (deprecated), the page number or 'start'."
        explode: false
        in: path
        name: page
        required: true
        schema:
          format: integer
          type: number
        style: simple
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_get_list__page__get_200_response'
          description: Skin Info List
      tags:
      - get
      x-openapi-router-controller: openapi_server.controllers.get_controller
  /get/uuid/{uuid}:
    get:
      operationId: get_uuid_uuid_get
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkinInfo'
          description: Skin Info
      tags:
      - get
      x-openapi-router-controller: openapi_server.controllers.get_controller
  /validate/name/{name}:
    get:
      operationId: validate_name_name_get
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidation'
          description: Validation info about the requested user
      tags:
      - util
      x-openapi-router-controller: openapi_server.controllers.util_controller
  /validate/uuid/{uuid}:
    get:
      operationId: validate_uuid_uuid_get
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
          \ for implementation examples"
        example: ExampleApp/v1.0
        explode: false
        in: header
        name: User-Agent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidation'
          description: Validation info about the requested user
      tags:
      - util
      x-openapi-router-controller: openapi_server.controllers.util_controller
components:
  parameters:
    userAgent:
      description: "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/)\
        \ for implementation examples"
      example: ExampleApp/v1.0
      explode: false
      in: header
      name: User-Agent
      required: true
      schema:
        type: string
      style: simple
  responses:
    DelayInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_get_delay_get_200_response'
      description: Delay info for the requesting client
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_generate_upload_post_400_response'
      description: Response if an error occured
    GeneratedSkin:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_generate_upload_post_200_response'
      description: Successfully generated skin info
    RateLimitResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_generate_upload_post_429_response'
      description: Response if the client sent a request too soon
  schemas:
    GenerateOptions:
      properties:
        model:
          default: steve
          deprecated: true
          enum:
          - steve
          - slim
          title: model
          type: string
        name:
          maxLength: 20
          title: name
          type: string
        variant:
          description: Skin variant - automatically determined based on the image
            if not specified
          enum:
          - classic
          - slim
          title: variant
          type: string
        visibility:
          default: 0
          description: "Visibility of the generated skin. 0 for public, 1 for private"
          enum:
          - 0
          - 1
          title: visibility
          type: integer
      title: GenerateOptions
      type: object
    PartialSkinInfo:
      example:
        name: name
        id: 5
        time: 5
        url: url
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
        time:
          title: time
          type: integer
        url:
          title: url
          type: string
      required:
      - id
      - name
      - time
      - url
      title: PartialSkinInfo
      type: object
    SkinData:
      example:
        texture:
          signature: signature
          value: value
          url: url
        uuid: uuid
      properties:
        texture:
          $ref: '#/components/schemas/TextureInfo'
        uuid:
          title: uuid
          type: string
      title: SkinData
      type: object
    SkinInfo:
      example:
        idStr: idStr
        server: server
        private: true
        data:
          texture:
            signature: signature
            value: value
            url: url
          uuid: uuid
        uuid: uuid
        duration: 1.4658129805029452
        accountId: 6
        name: name
        variant: classic
        model: slim
        id: 5
        account: 0
        views: 2.3021358869347655
        timestamp: 5.637376656633329
      properties:
        account:
          title: account
          type: integer
        accountId:
          deprecated: true
          title: accountId
          type: integer
        data:
          $ref: '#/components/schemas/SkinData'
        duration:
          title: duration
          type: number
        id:
          title: id
          type: integer
        idStr:
          title: idStr
          type: string
        model:
          deprecated: true
          enum:
          - slim
          - steve
          - unknown
          title: model
          type: string
        name:
          title: name
          type: string
        private:
          title: private
          type: boolean
        server:
          title: server
          type: string
        timestamp:
          title: timestamp
          type: number
        uuid:
          title: uuid
          type: string
        variant:
          enum:
          - classic
          - slim
          title: variant
          type: string
        views:
          title: views
          type: number
      required:
      - data
      - id
      - model
      title: SkinInfo
      type: object
    Stats:
      properties:
        delay:
          type: number
        server:
          type: string
      type: object
    TextureInfo:
      example:
        signature: signature
        value: value
        url: url
      properties:
        signature:
          title: signature
          type: string
        url:
          title: url
          type: string
        value:
          title: value
          type: string
      title: TextureInfo
      type: object
    UserValidation:
      example:
        valid: true
        name: name
        uuid: uuid
      properties:
        name:
          title: name
          type: string
        uuid:
          title: uuid
          type: string
        valid:
          title: valid
          type: boolean
      required:
      - valid
      title: UserValidation
      type: object
    _generate_upload_post_request:
      allOf:
      - $ref: '#/components/schemas/GenerateOptions'
      - properties:
          file:
            format: binary
            type: string
    _generate_upload_post_200_response:
      allOf:
      - $ref: '#/components/schemas/SkinInfo'
      - properties:
          duplicate:
            type: boolean
          nextRequest:
            type: integer
      example:
        idStr: idStr
        server: server
        private: true
        data:
          texture:
            signature: signature
            value: value
            url: url
          uuid: uuid
        duplicate: true
        uuid: uuid
        duration: 1.4658129805029452
        accountId: 6
        name: name
        variant: classic
        model: slim
        id: 5
        account: 0
        views: 2.3021358869347655
        nextRequest: 7
        timestamp: 5.637376656633329
      title: _generate_upload_post_200_response
    _generate_upload_post_400_response:
      example:
        errorCode: errorCode
        error: error
      properties:
        error:
          description: Error message
          title: error
          type: string
        errorCode:
          description: "Consistent error code, see [AuthError](https://github.com/MineSkin/api.mineskin.org/blob/793a926cbe4b90887ed8164c9eccfcb542fdeadb/src/generator/Authentication.ts#L580)\
            \ & [GenError](https://github.com/MineSkin/api.mineskin.org/blob/47a5f51dc664e0f730b0073f70b2fc295e14ca3b/src/generator/Generator.ts#L1093)"
          title: errorCode
          type: string
      required:
      - error
      title: _generate_upload_post_400_response
    _generate_upload_post_429_response:
      example:
        delay: 9
        error: error
        nextRequest: 3
      properties:
        delay:
          description: The API's current delay in seconds
          title: delay
          type: integer
        error:
          description: Error message
          title: error
          type: string
        nextRequest:
          description: Unix timestamp when the next request is allowed
          title: nextRequest
          type: integer
      required:
      - error
      title: _generate_upload_post_429_response
    _generate_url_post_request:
      allOf:
      - $ref: '#/components/schemas/GenerateOptions'
      - properties:
          url:
            type: string
      title: _generate_url_post_request
    _generate_user_post_request:
      allOf:
      - $ref: '#/components/schemas/GenerateOptions'
      - properties:
          uuid:
            maxLength: 36
            minLength: 32
            type: string
      title: _generate_user_post_request
    _get_delay_get_200_response:
      example:
        next: 6
        nextRelative: 1
        delay: 0
      properties:
        delay:
          title: delay
          type: integer
        next:
          title: next
          type: integer
        nextRelative:
          title: nextRelative
          type: integer
      title: _get_delay_get_200_response
    _get_list__page__get_200_response_page:
      example:
        amount: 0
        total: 1
        index: 6
      properties:
        amount:
          title: amount
          type: integer
        index:
          title: index
          type: integer
        total:
          title: total
          type: integer
      title: _get_list__page__get_200_response_page
      type: object
    _get_list__page__get_200_response:
      example:
        filter: filter
        skins:
        - name: name
          id: 5
          time: 5
          url: url
        - name: name
          id: 5
          time: 5
          url: url
        page:
          amount: 0
          total: 1
          index: 6
      properties:
        filter:
          title: filter
          type: string
        page:
          $ref: '#/components/schemas/_get_list__page__get_200_response_page'
        skins:
          items:
            $ref: '#/components/schemas/PartialSkinInfo'
          title: skins
          type: array
      required:
      - page
      - skins
      title: _get_list__page__get_200_response
  securitySchemes:
    apiKey:
      description: Get your key from https://mineskin.org/apikey
      in: query
      name: key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
    bearerAuth:
      description: Get your key from https://mineskin.org/apikey
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearerAuth
