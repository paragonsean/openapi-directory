# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Stats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delay: float=None, server: str=None):
        """Stats - a model defined in OpenAPI

        :param delay: The delay of this Stats.
        :param server: The server of this Stats.
        """
        self.openapi_types = {
            'delay': float,
            'server': str
        }

        self.attribute_map = {
            'delay': 'delay',
            'server': 'server'
        }

        self._delay = delay
        self._server = server

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stats of this Stats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delay(self):
        """Gets the delay of this Stats.


        :return: The delay of this Stats.
        :rtype: float
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this Stats.


        :param delay: The delay of this Stats.
        :type delay: float
        """

        self._delay = delay

    @property
    def server(self):
        """Gets the server of this Stats.


        :return: The server of this Stats.
        :rtype: str
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this Stats.


        :param server: The server of this Stats.
        :type server: str
        """

        self._server = server
