# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDelayGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delay: int=None, next: int=None, next_relative: int=None):
        """GetDelayGet200Response - a model defined in OpenAPI

        :param delay: The delay of this GetDelayGet200Response.
        :param next: The next of this GetDelayGet200Response.
        :param next_relative: The next_relative of this GetDelayGet200Response.
        """
        self.openapi_types = {
            'delay': int,
            'next': int,
            'next_relative': int
        }

        self.attribute_map = {
            'delay': 'delay',
            'next': 'next',
            'next_relative': 'nextRelative'
        }

        self._delay = delay
        self._next = next
        self._next_relative = next_relative

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDelayGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _get_delay_get_200_response of this GetDelayGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delay(self):
        """Gets the delay of this GetDelayGet200Response.


        :return: The delay of this GetDelayGet200Response.
        :rtype: int
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this GetDelayGet200Response.


        :param delay: The delay of this GetDelayGet200Response.
        :type delay: int
        """

        self._delay = delay

    @property
    def next(self):
        """Gets the next of this GetDelayGet200Response.


        :return: The next of this GetDelayGet200Response.
        :rtype: int
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this GetDelayGet200Response.


        :param next: The next of this GetDelayGet200Response.
        :type next: int
        """

        self._next = next

    @property
    def next_relative(self):
        """Gets the next_relative of this GetDelayGet200Response.


        :return: The next_relative of this GetDelayGet200Response.
        :rtype: int
        """
        return self._next_relative

    @next_relative.setter
    def next_relative(self, next_relative):
        """Sets the next_relative of this GetDelayGet200Response.


        :param next_relative: The next_relative of this GetDelayGet200Response.
        :type next_relative: int
        """

        self._next_relative = next_relative
