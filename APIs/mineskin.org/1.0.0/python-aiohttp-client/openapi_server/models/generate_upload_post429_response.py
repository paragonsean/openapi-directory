# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateUploadPost429Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delay: int=None, error: str=None, next_request: int=None):
        """GenerateUploadPost429Response - a model defined in OpenAPI

        :param delay: The delay of this GenerateUploadPost429Response.
        :param error: The error of this GenerateUploadPost429Response.
        :param next_request: The next_request of this GenerateUploadPost429Response.
        """
        self.openapi_types = {
            'delay': int,
            'error': str,
            'next_request': int
        }

        self.attribute_map = {
            'delay': 'delay',
            'error': 'error',
            'next_request': 'nextRequest'
        }

        self._delay = delay
        self._error = error
        self._next_request = next_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateUploadPost429Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _generate_upload_post_429_response of this GenerateUploadPost429Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delay(self):
        """Gets the delay of this GenerateUploadPost429Response.

        The API's current delay in seconds

        :return: The delay of this GenerateUploadPost429Response.
        :rtype: int
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this GenerateUploadPost429Response.

        The API's current delay in seconds

        :param delay: The delay of this GenerateUploadPost429Response.
        :type delay: int
        """

        self._delay = delay

    @property
    def error(self):
        """Gets the error of this GenerateUploadPost429Response.

        Error message

        :return: The error of this GenerateUploadPost429Response.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GenerateUploadPost429Response.

        Error message

        :param error: The error of this GenerateUploadPost429Response.
        :type error: str
        """
        if error is None:
            raise ValueError("Invalid value for `error`, must not be `None`")

        self._error = error

    @property
    def next_request(self):
        """Gets the next_request of this GenerateUploadPost429Response.

        Unix timestamp when the next request is allowed

        :return: The next_request of this GenerateUploadPost429Response.
        :rtype: int
        """
        return self._next_request

    @next_request.setter
    def next_request(self, next_request):
        """Sets the next_request of this GenerateUploadPost429Response.

        Unix timestamp when the next request is allowed

        :param next_request: The next_request of this GenerateUploadPost429Response.
        :type next_request: int
        """

        self._next_request = next_request
