# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextureInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, signature: str=None, url: str=None, value: str=None):
        """TextureInfo - a model defined in OpenAPI

        :param signature: The signature of this TextureInfo.
        :param url: The url of this TextureInfo.
        :param value: The value of this TextureInfo.
        """
        self.openapi_types = {
            'signature': str,
            'url': str,
            'value': str
        }

        self.attribute_map = {
            'signature': 'signature',
            'url': 'url',
            'value': 'value'
        }

        self._signature = signature
        self._url = url
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextureInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextureInfo of this TextureInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signature(self):
        """Gets the signature of this TextureInfo.


        :return: The signature of this TextureInfo.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this TextureInfo.


        :param signature: The signature of this TextureInfo.
        :type signature: str
        """

        self._signature = signature

    @property
    def url(self):
        """Gets the url of this TextureInfo.


        :return: The url of this TextureInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TextureInfo.


        :param url: The url of this TextureInfo.
        :type url: str
        """

        self._url = url

    @property
    def value(self):
        """Gets the value of this TextureInfo.


        :return: The value of this TextureInfo.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this TextureInfo.


        :param value: The value of this TextureInfo.
        :type value: str
        """

        self._value = value
