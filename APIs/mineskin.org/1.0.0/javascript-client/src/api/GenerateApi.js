/**
 * MineSkin API
 * Client implementations:  Java: https://github.com/InventivetalentDev/MineskinClient NodeJS: https://github.com/InventivetalentDev/mineskin-client  Examples: https://github.com/MineSkin/examples 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@mineskin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GenerateUploadPost200Response from '../model/GenerateUploadPost200Response';
import GenerateUploadPost400Response from '../model/GenerateUploadPost400Response';
import GenerateUploadPost429Response from '../model/GenerateUploadPost429Response';
import GenerateUrlPostRequest from '../model/GenerateUrlPostRequest';
import GenerateUserPostRequest from '../model/GenerateUserPostRequest';

/**
* Generate service.
* @module api/GenerateApi
* @version 1.0.0
*/
export default class GenerateApi {

    /**
    * Constructs a new GenerateApi. 
    * @alias module:api/GenerateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateUploadPost operation.
     * @callback module:api/GenerateApi~generateUploadPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateUploadPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} userAgent Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/) for implementation examples
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [model = 'steve')] 
     * @param {String} [name] 
     * @param {module:model/String} [variant] Skin variant - automatically determined based on the image if not specified
     * @param {module:model/Number} [visibility = 0)] Visibility of the generated skin. 0 for public, 1 for private
     * @param {File} [file] 
     * @param {module:api/GenerateApi~generateUploadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateUploadPost200Response}
     */
    generateUploadPost(userAgent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'userAgent' is set
      if (userAgent === undefined || userAgent === null) {
        throw new Error("Missing the required parameter 'userAgent' when calling generateUploadPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': userAgent
      };
      let formParams = {
        'model': opts['model'],
        'name': opts['name'],
        'variant': opts['variant'],
        'visibility': opts['visibility'],
        'file': opts['file']
      };

      let authNames = ['apiKey', 'bearerAuth'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = GenerateUploadPost200Response;
      return this.apiClient.callApi(
        '/generate/upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the generateUrlPost operation.
     * @callback module:api/GenerateApi~generateUrlPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateUploadPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} userAgent Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/) for implementation examples
     * @param {module:model/GenerateUrlPostRequest} generateUrlPostRequest 
     * @param {module:api/GenerateApi~generateUrlPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateUploadPost200Response}
     */
    generateUrlPost(userAgent, generateUrlPostRequest, callback) {
      let postBody = generateUrlPostRequest;
      // verify the required parameter 'userAgent' is set
      if (userAgent === undefined || userAgent === null) {
        throw new Error("Missing the required parameter 'userAgent' when calling generateUrlPost");
      }
      // verify the required parameter 'generateUrlPostRequest' is set
      if (generateUrlPostRequest === undefined || generateUrlPostRequest === null) {
        throw new Error("Missing the required parameter 'generateUrlPostRequest' when calling generateUrlPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': userAgent
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateUploadPost200Response;
      return this.apiClient.callApi(
        '/generate/url', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the generateUserPost operation.
     * @callback module:api/GenerateApi~generateUserPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateUploadPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} userAgent Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/) for implementation examples
     * @param {module:model/GenerateUserPostRequest} generateUserPostRequest 
     * @param {module:api/GenerateApi~generateUserPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateUploadPost200Response}
     */
    generateUserPost(userAgent, generateUserPostRequest, callback) {
      let postBody = generateUserPostRequest;
      // verify the required parameter 'userAgent' is set
      if (userAgent === undefined || userAgent === null) {
        throw new Error("Missing the required parameter 'userAgent' when calling generateUserPost");
      }
      // verify the required parameter 'generateUserPostRequest' is set
      if (generateUserPostRequest === undefined || generateUserPostRequest === null) {
        throw new Error("Missing the required parameter 'generateUserPostRequest' when calling generateUserPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': userAgent
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateUploadPost200Response;
      return this.apiClient.callApi(
        '/generate/user', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
