/*
 * SIGNL4 API
 * <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponseContent;
import org.openapitools.client.model.WebhookBaseInfo;
import org.openapitools.client.model.WebhookInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Disabled
public class WebhooksApiTest {

    private final WebhooksApi api = new WebhooksApi();

    /**
     * Get Webhook by Id
     *
     * Returns information of the webhook specified by the passed id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhookByIdTest() throws ApiException {
        String webhookId = null;
        String response = api.getWebhookById(webhookId);
        // TODO: test validations
    }

    /**
     * Get Webhooks
     *
     * Returns a collection of defined outbound webhooks in the system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void webhooksGetTest() throws ApiException {
        String teamId = null;
        List<WebhookInfo> response = api.webhooksGet(teamId);
        // TODO: test validations
    }

    /**
     * Create Webhook
     *
     * Creates a new outbound webhook that will be notified when certain events occur.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void webhooksPostTest() throws ApiException {
        WebhookBaseInfo webhookBaseInfo = null;
        String response = api.webhooksPost(webhookBaseInfo);
        // TODO: test validations
    }

    /**
     * Delete Webhook by Id
     *
     * Deletes the specified webhook so that it will no longer be notified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void webhooksWebhookIdDeleteTest() throws ApiException {
        String webhookId = null;
        api.webhooksWebhookIdDelete(webhookId);
        // TODO: test validations
    }

    /**
     * Ability to enable a webHook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void webhooksWebhookIdDisablePostTest() throws ApiException {
        String webhookId = null;
        WebhookInfo response = api.webhooksWebhookIdDisablePost(webhookId);
        // TODO: test validations
    }

    /**
     * Ability to disable a webHook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void webhooksWebhookIdEnablePostTest() throws ApiException {
        String webhookId = null;
        WebhookInfo response = api.webhooksWebhookIdEnablePost(webhookId);
        // TODO: test validations
    }

    /**
     * Update Webhook by Id
     *
     * Updates the specified webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void webhooksWebhookIdPutTest() throws ApiException {
        String webhookId = null;
        WebhookBaseInfo webhookBaseInfo = null;
        WebhookInfo response = api.webhooksWebhookIdPut(webhookId, webhookBaseInfo);
        // TODO: test validations
    }

}
