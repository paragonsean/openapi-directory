# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_attachment import AlertAttachment
from openapi_server.models.alert_severities import AlertSeverities
from openapi_server.models.event_parameter_info import EventParameterInfo
from openapi_server import util


class RaiseAlertInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachments: List[AlertAttachment]=None, category: str=None, external_id: str=None, flags: int=None, parameters: List[EventParameterInfo]=None, severity: AlertSeverities=None, text: str=None, title: str=None):
        """RaiseAlertInfo - a model defined in OpenAPI

        :param attachments: The attachments of this RaiseAlertInfo.
        :param category: The category of this RaiseAlertInfo.
        :param external_id: The external_id of this RaiseAlertInfo.
        :param flags: The flags of this RaiseAlertInfo.
        :param parameters: The parameters of this RaiseAlertInfo.
        :param severity: The severity of this RaiseAlertInfo.
        :param text: The text of this RaiseAlertInfo.
        :param title: The title of this RaiseAlertInfo.
        """
        self.openapi_types = {
            'attachments': List[AlertAttachment],
            'category': str,
            'external_id': str,
            'flags': int,
            'parameters': List[EventParameterInfo],
            'severity': AlertSeverities,
            'text': str,
            'title': str
        }

        self.attribute_map = {
            'attachments': 'attachments',
            'category': 'category',
            'external_id': 'externalId',
            'flags': 'flags',
            'parameters': 'parameters',
            'severity': 'severity',
            'text': 'text',
            'title': 'title'
        }

        self._attachments = attachments
        self._category = category
        self._external_id = external_id
        self._flags = flags
        self._parameters = parameters
        self._severity = severity
        self._text = text
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RaiseAlertInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RaiseAlertInfo of this RaiseAlertInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachments(self):
        """Gets the attachments of this RaiseAlertInfo.


        :return: The attachments of this RaiseAlertInfo.
        :rtype: List[AlertAttachment]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this RaiseAlertInfo.


        :param attachments: The attachments of this RaiseAlertInfo.
        :type attachments: List[AlertAttachment]
        """

        self._attachments = attachments

    @property
    def category(self):
        """Gets the category of this RaiseAlertInfo.


        :return: The category of this RaiseAlertInfo.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this RaiseAlertInfo.


        :param category: The category of this RaiseAlertInfo.
        :type category: str
        """

        self._category = category

    @property
    def external_id(self):
        """Gets the external_id of this RaiseAlertInfo.


        :return: The external_id of this RaiseAlertInfo.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this RaiseAlertInfo.


        :param external_id: The external_id of this RaiseAlertInfo.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def flags(self):
        """Gets the flags of this RaiseAlertInfo.


        :return: The flags of this RaiseAlertInfo.
        :rtype: int
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this RaiseAlertInfo.


        :param flags: The flags of this RaiseAlertInfo.
        :type flags: int
        """

        self._flags = flags

    @property
    def parameters(self):
        """Gets the parameters of this RaiseAlertInfo.


        :return: The parameters of this RaiseAlertInfo.
        :rtype: List[EventParameterInfo]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this RaiseAlertInfo.


        :param parameters: The parameters of this RaiseAlertInfo.
        :type parameters: List[EventParameterInfo]
        """

        self._parameters = parameters

    @property
    def severity(self):
        """Gets the severity of this RaiseAlertInfo.


        :return: The severity of this RaiseAlertInfo.
        :rtype: AlertSeverities
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this RaiseAlertInfo.


        :param severity: The severity of this RaiseAlertInfo.
        :type severity: AlertSeverities
        """

        self._severity = severity

    @property
    def text(self):
        """Gets the text of this RaiseAlertInfo.


        :return: The text of this RaiseAlertInfo.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this RaiseAlertInfo.


        :param text: The text of this RaiseAlertInfo.
        :type text: str
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this RaiseAlertInfo.


        :return: The title of this RaiseAlertInfo.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this RaiseAlertInfo.


        :param title: The title of this RaiseAlertInfo.
        :type title: str
        """

        self._title = title
