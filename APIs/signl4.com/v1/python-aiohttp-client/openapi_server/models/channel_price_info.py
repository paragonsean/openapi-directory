# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelPriceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sms_per_message: int=None, voice_per_minute: int=None):
        """ChannelPriceInfo - a model defined in OpenAPI

        :param sms_per_message: The sms_per_message of this ChannelPriceInfo.
        :param voice_per_minute: The voice_per_minute of this ChannelPriceInfo.
        """
        self.openapi_types = {
            'sms_per_message': int,
            'voice_per_minute': int
        }

        self.attribute_map = {
            'sms_per_message': 'smsPerMessage',
            'voice_per_minute': 'voicePerMinute'
        }

        self._sms_per_message = sms_per_message
        self._voice_per_minute = voice_per_minute

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelPriceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelPriceInfo of this ChannelPriceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sms_per_message(self):
        """Gets the sms_per_message of this ChannelPriceInfo.


        :return: The sms_per_message of this ChannelPriceInfo.
        :rtype: int
        """
        return self._sms_per_message

    @sms_per_message.setter
    def sms_per_message(self, sms_per_message):
        """Sets the sms_per_message of this ChannelPriceInfo.


        :param sms_per_message: The sms_per_message of this ChannelPriceInfo.
        :type sms_per_message: int
        """

        self._sms_per_message = sms_per_message

    @property
    def voice_per_minute(self):
        """Gets the voice_per_minute of this ChannelPriceInfo.


        :return: The voice_per_minute of this ChannelPriceInfo.
        :rtype: int
        """
        return self._voice_per_minute

    @voice_per_minute.setter
    def voice_per_minute(self, voice_per_minute):
        """Sets the voice_per_minute of this ChannelPriceInfo.


        :param voice_per_minute: The voice_per_minute of this ChannelPriceInfo.
        :type voice_per_minute: int
        """

        self._voice_per_minute = voice_per_minute
