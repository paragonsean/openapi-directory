# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CategoryMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: str=None, last24_hours: int=None, last_alert: datetime=None, subscriber_count: int=None):
        """CategoryMetrics - a model defined in OpenAPI

        :param category_id: The category_id of this CategoryMetrics.
        :param last24_hours: The last24_hours of this CategoryMetrics.
        :param last_alert: The last_alert of this CategoryMetrics.
        :param subscriber_count: The subscriber_count of this CategoryMetrics.
        """
        self.openapi_types = {
            'category_id': str,
            'last24_hours': int,
            'last_alert': datetime,
            'subscriber_count': int
        }

        self.attribute_map = {
            'category_id': 'categoryId',
            'last24_hours': 'last24Hours',
            'last_alert': 'lastAlert',
            'subscriber_count': 'subscriberCount'
        }

        self._category_id = category_id
        self._last24_hours = last24_hours
        self._last_alert = last_alert
        self._subscriber_count = subscriber_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategoryMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CategoryMetrics of this CategoryMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this CategoryMetrics.


        :return: The category_id of this CategoryMetrics.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this CategoryMetrics.


        :param category_id: The category_id of this CategoryMetrics.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def last24_hours(self):
        """Gets the last24_hours of this CategoryMetrics.


        :return: The last24_hours of this CategoryMetrics.
        :rtype: int
        """
        return self._last24_hours

    @last24_hours.setter
    def last24_hours(self, last24_hours):
        """Sets the last24_hours of this CategoryMetrics.


        :param last24_hours: The last24_hours of this CategoryMetrics.
        :type last24_hours: int
        """

        self._last24_hours = last24_hours

    @property
    def last_alert(self):
        """Gets the last_alert of this CategoryMetrics.


        :return: The last_alert of this CategoryMetrics.
        :rtype: datetime
        """
        return self._last_alert

    @last_alert.setter
    def last_alert(self, last_alert):
        """Sets the last_alert of this CategoryMetrics.


        :param last_alert: The last_alert of this CategoryMetrics.
        :type last_alert: datetime
        """

        self._last_alert = last_alert

    @property
    def subscriber_count(self):
        """Gets the subscriber_count of this CategoryMetrics.


        :return: The subscriber_count of this CategoryMetrics.
        :rtype: int
        """
        return self._subscriber_count

    @subscriber_count.setter
    def subscriber_count(self, subscriber_count):
        """Sets the subscriber_count of this CategoryMetrics.


        :param subscriber_count: The subscriber_count of this CategoryMetrics.
        :type subscriber_count: int
        """

        self._subscriber_count = subscriber_count
