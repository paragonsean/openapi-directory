# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_annotation_info import AlertAnnotationInfo
from openapi_server.models.alert_attachment import AlertAttachment
from openapi_server.models.alert_history_info_detailed import AlertHistoryInfoDetailed
from openapi_server.models.alert_severities import AlertSeverities
from openapi_server.models.alert_status_codes import AlertStatusCodes
from openapi_server.models.event_parameter_info import EventParameterInfo
from openapi_server.models.event_source_types import EventSourceTypes
from openapi_server import util


class AlertInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: List[AlertAnnotationInfo]=None, attachments: List[AlertAttachment]=None, category: str=None, category_id: str=None, event_id: str=None, event_source_id: str=None, event_source_type: EventSourceTypes=None, flags: int=None, history: AlertHistoryInfoDetailed=None, id: str=None, last_modified: datetime=None, parameters: List[EventParameterInfo]=None, severity: AlertSeverities=None, status: AlertStatusCodes=None, subscription_id: str=None, team_id: str=None, text: str=None, title: str=None):
        """AlertInfo - a model defined in OpenAPI

        :param annotations: The annotations of this AlertInfo.
        :param attachments: The attachments of this AlertInfo.
        :param category: The category of this AlertInfo.
        :param category_id: The category_id of this AlertInfo.
        :param event_id: The event_id of this AlertInfo.
        :param event_source_id: The event_source_id of this AlertInfo.
        :param event_source_type: The event_source_type of this AlertInfo.
        :param flags: The flags of this AlertInfo.
        :param history: The history of this AlertInfo.
        :param id: The id of this AlertInfo.
        :param last_modified: The last_modified of this AlertInfo.
        :param parameters: The parameters of this AlertInfo.
        :param severity: The severity of this AlertInfo.
        :param status: The status of this AlertInfo.
        :param subscription_id: The subscription_id of this AlertInfo.
        :param team_id: The team_id of this AlertInfo.
        :param text: The text of this AlertInfo.
        :param title: The title of this AlertInfo.
        """
        self.openapi_types = {
            'annotations': List[AlertAnnotationInfo],
            'attachments': List[AlertAttachment],
            'category': str,
            'category_id': str,
            'event_id': str,
            'event_source_id': str,
            'event_source_type': EventSourceTypes,
            'flags': int,
            'history': AlertHistoryInfoDetailed,
            'id': str,
            'last_modified': datetime,
            'parameters': List[EventParameterInfo],
            'severity': AlertSeverities,
            'status': AlertStatusCodes,
            'subscription_id': str,
            'team_id': str,
            'text': str,
            'title': str
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'attachments': 'attachments',
            'category': 'category',
            'category_id': 'categoryId',
            'event_id': 'eventId',
            'event_source_id': 'eventSourceId',
            'event_source_type': 'eventSourceType',
            'flags': 'flags',
            'history': 'history',
            'id': 'id',
            'last_modified': 'lastModified',
            'parameters': 'parameters',
            'severity': 'severity',
            'status': 'status',
            'subscription_id': 'subscriptionId',
            'team_id': 'teamId',
            'text': 'text',
            'title': 'title'
        }

        self._annotations = annotations
        self._attachments = attachments
        self._category = category
        self._category_id = category_id
        self._event_id = event_id
        self._event_source_id = event_source_id
        self._event_source_type = event_source_type
        self._flags = flags
        self._history = history
        self._id = id
        self._last_modified = last_modified
        self._parameters = parameters
        self._severity = severity
        self._status = status
        self._subscription_id = subscription_id
        self._team_id = team_id
        self._text = text
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertInfo of this AlertInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this AlertInfo.


        :return: The annotations of this AlertInfo.
        :rtype: List[AlertAnnotationInfo]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this AlertInfo.


        :param annotations: The annotations of this AlertInfo.
        :type annotations: List[AlertAnnotationInfo]
        """

        self._annotations = annotations

    @property
    def attachments(self):
        """Gets the attachments of this AlertInfo.


        :return: The attachments of this AlertInfo.
        :rtype: List[AlertAttachment]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this AlertInfo.


        :param attachments: The attachments of this AlertInfo.
        :type attachments: List[AlertAttachment]
        """

        self._attachments = attachments

    @property
    def category(self):
        """Gets the category of this AlertInfo.


        :return: The category of this AlertInfo.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this AlertInfo.


        :param category: The category of this AlertInfo.
        :type category: str
        """

        self._category = category

    @property
    def category_id(self):
        """Gets the category_id of this AlertInfo.


        :return: The category_id of this AlertInfo.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this AlertInfo.


        :param category_id: The category_id of this AlertInfo.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def event_id(self):
        """Gets the event_id of this AlertInfo.


        :return: The event_id of this AlertInfo.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this AlertInfo.


        :param event_id: The event_id of this AlertInfo.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def event_source_id(self):
        """Gets the event_source_id of this AlertInfo.


        :return: The event_source_id of this AlertInfo.
        :rtype: str
        """
        return self._event_source_id

    @event_source_id.setter
    def event_source_id(self, event_source_id):
        """Sets the event_source_id of this AlertInfo.


        :param event_source_id: The event_source_id of this AlertInfo.
        :type event_source_id: str
        """

        self._event_source_id = event_source_id

    @property
    def event_source_type(self):
        """Gets the event_source_type of this AlertInfo.


        :return: The event_source_type of this AlertInfo.
        :rtype: EventSourceTypes
        """
        return self._event_source_type

    @event_source_type.setter
    def event_source_type(self, event_source_type):
        """Sets the event_source_type of this AlertInfo.


        :param event_source_type: The event_source_type of this AlertInfo.
        :type event_source_type: EventSourceTypes
        """

        self._event_source_type = event_source_type

    @property
    def flags(self):
        """Gets the flags of this AlertInfo.


        :return: The flags of this AlertInfo.
        :rtype: int
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this AlertInfo.


        :param flags: The flags of this AlertInfo.
        :type flags: int
        """

        self._flags = flags

    @property
    def history(self):
        """Gets the history of this AlertInfo.


        :return: The history of this AlertInfo.
        :rtype: AlertHistoryInfoDetailed
        """
        return self._history

    @history.setter
    def history(self, history):
        """Sets the history of this AlertInfo.


        :param history: The history of this AlertInfo.
        :type history: AlertHistoryInfoDetailed
        """

        self._history = history

    @property
    def id(self):
        """Gets the id of this AlertInfo.


        :return: The id of this AlertInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertInfo.


        :param id: The id of this AlertInfo.
        :type id: str
        """

        self._id = id

    @property
    def last_modified(self):
        """Gets the last_modified of this AlertInfo.


        :return: The last_modified of this AlertInfo.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this AlertInfo.


        :param last_modified: The last_modified of this AlertInfo.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def parameters(self):
        """Gets the parameters of this AlertInfo.


        :return: The parameters of this AlertInfo.
        :rtype: List[EventParameterInfo]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this AlertInfo.


        :param parameters: The parameters of this AlertInfo.
        :type parameters: List[EventParameterInfo]
        """

        self._parameters = parameters

    @property
    def severity(self):
        """Gets the severity of this AlertInfo.


        :return: The severity of this AlertInfo.
        :rtype: AlertSeverities
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this AlertInfo.


        :param severity: The severity of this AlertInfo.
        :type severity: AlertSeverities
        """

        self._severity = severity

    @property
    def status(self):
        """Gets the status of this AlertInfo.


        :return: The status of this AlertInfo.
        :rtype: AlertStatusCodes
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AlertInfo.


        :param status: The status of this AlertInfo.
        :type status: AlertStatusCodes
        """

        self._status = status

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AlertInfo.


        :return: The subscription_id of this AlertInfo.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AlertInfo.


        :param subscription_id: The subscription_id of this AlertInfo.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def team_id(self):
        """Gets the team_id of this AlertInfo.


        :return: The team_id of this AlertInfo.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this AlertInfo.


        :param team_id: The team_id of this AlertInfo.
        :type team_id: str
        """

        self._team_id = team_id

    @property
    def text(self):
        """Gets the text of this AlertInfo.


        :return: The text of this AlertInfo.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this AlertInfo.


        :param text: The text of this AlertInfo.
        :type text: str
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this AlertInfo.


        :return: The title of this AlertInfo.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this AlertInfo.


        :param title: The title of this AlertInfo.
        :type title: str
        """

        self._title = title
