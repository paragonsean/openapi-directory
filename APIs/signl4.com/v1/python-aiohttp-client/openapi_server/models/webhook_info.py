# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhookInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, external_address: str=None, id: str=None, name: str=None, subscription_id: str=None, team_id: str=None):
        """WebhookInfo - a model defined in OpenAPI

        :param enabled: The enabled of this WebhookInfo.
        :param external_address: The external_address of this WebhookInfo.
        :param id: The id of this WebhookInfo.
        :param name: The name of this WebhookInfo.
        :param subscription_id: The subscription_id of this WebhookInfo.
        :param team_id: The team_id of this WebhookInfo.
        """
        self.openapi_types = {
            'enabled': bool,
            'external_address': str,
            'id': str,
            'name': str,
            'subscription_id': str,
            'team_id': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'external_address': 'externalAddress',
            'id': 'id',
            'name': 'name',
            'subscription_id': 'subscriptionId',
            'team_id': 'teamId'
        }

        self._enabled = enabled
        self._external_address = external_address
        self._id = id
        self._name = name
        self._subscription_id = subscription_id
        self._team_id = team_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebhookInfo of this WebhookInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this WebhookInfo.


        :return: The enabled of this WebhookInfo.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this WebhookInfo.


        :param enabled: The enabled of this WebhookInfo.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def external_address(self):
        """Gets the external_address of this WebhookInfo.


        :return: The external_address of this WebhookInfo.
        :rtype: str
        """
        return self._external_address

    @external_address.setter
    def external_address(self, external_address):
        """Sets the external_address of this WebhookInfo.


        :param external_address: The external_address of this WebhookInfo.
        :type external_address: str
        """

        self._external_address = external_address

    @property
    def id(self):
        """Gets the id of this WebhookInfo.


        :return: The id of this WebhookInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WebhookInfo.


        :param id: The id of this WebhookInfo.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this WebhookInfo.


        :return: The name of this WebhookInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WebhookInfo.


        :param name: The name of this WebhookInfo.
        :type name: str
        """

        self._name = name

    @property
    def subscription_id(self):
        """Gets the subscription_id of this WebhookInfo.


        :return: The subscription_id of this WebhookInfo.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this WebhookInfo.


        :param subscription_id: The subscription_id of this WebhookInfo.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def team_id(self):
        """Gets the team_id of this WebhookInfo.


        :return: The team_id of this WebhookInfo.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this WebhookInfo.


        :param team_id: The team_id of this WebhookInfo.
        :type team_id: str
        """

        self._team_id = team_id
