# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_annotation_info import AlertAnnotationInfo
from openapi_server.models.alert_delivery_status_info import AlertDeliveryStatusInfo
from openapi_server.models.alert_history_info_detailed import AlertHistoryInfoDetailed
from openapi_server.models.alert_status_codes import AlertStatusCodes
from openapi_server import util


class OverviewAlert(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_delivery_status: AlertDeliveryStatusInfo=None, annotations: List[AlertAnnotationInfo]=None, category_id: str=None, event_id: str=None, flags: int=None, history_detailed: AlertHistoryInfoDetailed=None, id: str=None, last_modified: datetime=None, required_acknowledgements: int=None, status: AlertStatusCodes=None, subscription_id: str=None, team_id: str=None, text: str=None, title: str=None):
        """OverviewAlert - a model defined in OpenAPI

        :param alert_delivery_status: The alert_delivery_status of this OverviewAlert.
        :param annotations: The annotations of this OverviewAlert.
        :param category_id: The category_id of this OverviewAlert.
        :param event_id: The event_id of this OverviewAlert.
        :param flags: The flags of this OverviewAlert.
        :param history_detailed: The history_detailed of this OverviewAlert.
        :param id: The id of this OverviewAlert.
        :param last_modified: The last_modified of this OverviewAlert.
        :param required_acknowledgements: The required_acknowledgements of this OverviewAlert.
        :param status: The status of this OverviewAlert.
        :param subscription_id: The subscription_id of this OverviewAlert.
        :param team_id: The team_id of this OverviewAlert.
        :param text: The text of this OverviewAlert.
        :param title: The title of this OverviewAlert.
        """
        self.openapi_types = {
            'alert_delivery_status': AlertDeliveryStatusInfo,
            'annotations': List[AlertAnnotationInfo],
            'category_id': str,
            'event_id': str,
            'flags': int,
            'history_detailed': AlertHistoryInfoDetailed,
            'id': str,
            'last_modified': datetime,
            'required_acknowledgements': int,
            'status': AlertStatusCodes,
            'subscription_id': str,
            'team_id': str,
            'text': str,
            'title': str
        }

        self.attribute_map = {
            'alert_delivery_status': 'alertDeliveryStatus',
            'annotations': 'annotations',
            'category_id': 'categoryId',
            'event_id': 'eventId',
            'flags': 'flags',
            'history_detailed': 'historyDetailed',
            'id': 'id',
            'last_modified': 'lastModified',
            'required_acknowledgements': 'requiredAcknowledgements',
            'status': 'status',
            'subscription_id': 'subscriptionId',
            'team_id': 'teamId',
            'text': 'text',
            'title': 'title'
        }

        self._alert_delivery_status = alert_delivery_status
        self._annotations = annotations
        self._category_id = category_id
        self._event_id = event_id
        self._flags = flags
        self._history_detailed = history_detailed
        self._id = id
        self._last_modified = last_modified
        self._required_acknowledgements = required_acknowledgements
        self._status = status
        self._subscription_id = subscription_id
        self._team_id = team_id
        self._text = text
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OverviewAlert':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OverviewAlert of this OverviewAlert.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_delivery_status(self):
        """Gets the alert_delivery_status of this OverviewAlert.


        :return: The alert_delivery_status of this OverviewAlert.
        :rtype: AlertDeliveryStatusInfo
        """
        return self._alert_delivery_status

    @alert_delivery_status.setter
    def alert_delivery_status(self, alert_delivery_status):
        """Sets the alert_delivery_status of this OverviewAlert.


        :param alert_delivery_status: The alert_delivery_status of this OverviewAlert.
        :type alert_delivery_status: AlertDeliveryStatusInfo
        """

        self._alert_delivery_status = alert_delivery_status

    @property
    def annotations(self):
        """Gets the annotations of this OverviewAlert.


        :return: The annotations of this OverviewAlert.
        :rtype: List[AlertAnnotationInfo]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this OverviewAlert.


        :param annotations: The annotations of this OverviewAlert.
        :type annotations: List[AlertAnnotationInfo]
        """

        self._annotations = annotations

    @property
    def category_id(self):
        """Gets the category_id of this OverviewAlert.


        :return: The category_id of this OverviewAlert.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this OverviewAlert.


        :param category_id: The category_id of this OverviewAlert.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def event_id(self):
        """Gets the event_id of this OverviewAlert.


        :return: The event_id of this OverviewAlert.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this OverviewAlert.


        :param event_id: The event_id of this OverviewAlert.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def flags(self):
        """Gets the flags of this OverviewAlert.


        :return: The flags of this OverviewAlert.
        :rtype: int
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this OverviewAlert.


        :param flags: The flags of this OverviewAlert.
        :type flags: int
        """

        self._flags = flags

    @property
    def history_detailed(self):
        """Gets the history_detailed of this OverviewAlert.


        :return: The history_detailed of this OverviewAlert.
        :rtype: AlertHistoryInfoDetailed
        """
        return self._history_detailed

    @history_detailed.setter
    def history_detailed(self, history_detailed):
        """Sets the history_detailed of this OverviewAlert.


        :param history_detailed: The history_detailed of this OverviewAlert.
        :type history_detailed: AlertHistoryInfoDetailed
        """

        self._history_detailed = history_detailed

    @property
    def id(self):
        """Gets the id of this OverviewAlert.


        :return: The id of this OverviewAlert.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OverviewAlert.


        :param id: The id of this OverviewAlert.
        :type id: str
        """

        self._id = id

    @property
    def last_modified(self):
        """Gets the last_modified of this OverviewAlert.


        :return: The last_modified of this OverviewAlert.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this OverviewAlert.


        :param last_modified: The last_modified of this OverviewAlert.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def required_acknowledgements(self):
        """Gets the required_acknowledgements of this OverviewAlert.


        :return: The required_acknowledgements of this OverviewAlert.
        :rtype: int
        """
        return self._required_acknowledgements

    @required_acknowledgements.setter
    def required_acknowledgements(self, required_acknowledgements):
        """Sets the required_acknowledgements of this OverviewAlert.


        :param required_acknowledgements: The required_acknowledgements of this OverviewAlert.
        :type required_acknowledgements: int
        """

        self._required_acknowledgements = required_acknowledgements

    @property
    def status(self):
        """Gets the status of this OverviewAlert.


        :return: The status of this OverviewAlert.
        :rtype: AlertStatusCodes
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OverviewAlert.


        :param status: The status of this OverviewAlert.
        :type status: AlertStatusCodes
        """

        self._status = status

    @property
    def subscription_id(self):
        """Gets the subscription_id of this OverviewAlert.


        :return: The subscription_id of this OverviewAlert.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this OverviewAlert.


        :param subscription_id: The subscription_id of this OverviewAlert.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def team_id(self):
        """Gets the team_id of this OverviewAlert.


        :return: The team_id of this OverviewAlert.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this OverviewAlert.


        :param team_id: The team_id of this OverviewAlert.
        :type team_id: str
        """

        self._team_id = team_id

    @property
    def text(self):
        """Gets the text of this OverviewAlert.


        :return: The text of this OverviewAlert.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this OverviewAlert.


        :param text: The text of this OverviewAlert.
        :type text: str
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this OverviewAlert.


        :return: The title of this OverviewAlert.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this OverviewAlert.


        :param title: The title of this OverviewAlert.
        :type title: str
        """

        self._title = title
