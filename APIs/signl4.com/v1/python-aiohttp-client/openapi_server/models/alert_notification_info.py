# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_notification_info_channel_type import AlertNotificationInfoChannelType
from openapi_server.models.alert_notification_info_message_status import AlertNotificationInfoMessageStatus
from openapi_server.models.alert_notification_info_user_status import AlertNotificationInfoUserStatus
from openapi_server import util


class AlertNotificationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, channel_type: AlertNotificationInfoChannelType=None, device_name: str=None, last_update: datetime=None, message_status: AlertNotificationInfoMessageStatus=None, user_id: str=None, user_status: AlertNotificationInfoUserStatus=None):
        """AlertNotificationInfo - a model defined in OpenAPI

        :param address: The address of this AlertNotificationInfo.
        :param channel_type: The channel_type of this AlertNotificationInfo.
        :param device_name: The device_name of this AlertNotificationInfo.
        :param last_update: The last_update of this AlertNotificationInfo.
        :param message_status: The message_status of this AlertNotificationInfo.
        :param user_id: The user_id of this AlertNotificationInfo.
        :param user_status: The user_status of this AlertNotificationInfo.
        """
        self.openapi_types = {
            'address': str,
            'channel_type': AlertNotificationInfoChannelType,
            'device_name': str,
            'last_update': datetime,
            'message_status': AlertNotificationInfoMessageStatus,
            'user_id': str,
            'user_status': AlertNotificationInfoUserStatus
        }

        self.attribute_map = {
            'address': 'address',
            'channel_type': 'channelType',
            'device_name': 'deviceName',
            'last_update': 'lastUpdate',
            'message_status': 'messageStatus',
            'user_id': 'userId',
            'user_status': 'userStatus'
        }

        self._address = address
        self._channel_type = channel_type
        self._device_name = device_name
        self._last_update = last_update
        self._message_status = message_status
        self._user_id = user_id
        self._user_status = user_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertNotificationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertNotificationInfo of this AlertNotificationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this AlertNotificationInfo.


        :return: The address of this AlertNotificationInfo.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AlertNotificationInfo.


        :param address: The address of this AlertNotificationInfo.
        :type address: str
        """

        self._address = address

    @property
    def channel_type(self):
        """Gets the channel_type of this AlertNotificationInfo.


        :return: The channel_type of this AlertNotificationInfo.
        :rtype: AlertNotificationInfoChannelType
        """
        return self._channel_type

    @channel_type.setter
    def channel_type(self, channel_type):
        """Sets the channel_type of this AlertNotificationInfo.


        :param channel_type: The channel_type of this AlertNotificationInfo.
        :type channel_type: AlertNotificationInfoChannelType
        """

        self._channel_type = channel_type

    @property
    def device_name(self):
        """Gets the device_name of this AlertNotificationInfo.


        :return: The device_name of this AlertNotificationInfo.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this AlertNotificationInfo.


        :param device_name: The device_name of this AlertNotificationInfo.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def last_update(self):
        """Gets the last_update of this AlertNotificationInfo.


        :return: The last_update of this AlertNotificationInfo.
        :rtype: datetime
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this AlertNotificationInfo.


        :param last_update: The last_update of this AlertNotificationInfo.
        :type last_update: datetime
        """

        self._last_update = last_update

    @property
    def message_status(self):
        """Gets the message_status of this AlertNotificationInfo.


        :return: The message_status of this AlertNotificationInfo.
        :rtype: AlertNotificationInfoMessageStatus
        """
        return self._message_status

    @message_status.setter
    def message_status(self, message_status):
        """Sets the message_status of this AlertNotificationInfo.


        :param message_status: The message_status of this AlertNotificationInfo.
        :type message_status: AlertNotificationInfoMessageStatus
        """

        self._message_status = message_status

    @property
    def user_id(self):
        """Gets the user_id of this AlertNotificationInfo.


        :return: The user_id of this AlertNotificationInfo.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AlertNotificationInfo.


        :param user_id: The user_id of this AlertNotificationInfo.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_status(self):
        """Gets the user_status of this AlertNotificationInfo.


        :return: The user_status of this AlertNotificationInfo.
        :rtype: AlertNotificationInfoUserStatus
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this AlertNotificationInfo.


        :param user_status: The user_status of this AlertNotificationInfo.
        :type user_status: AlertNotificationInfoUserStatus
        """

        self._user_status = user_status
