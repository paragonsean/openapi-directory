# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_filter_actions import AlertFilterActions
from openapi_server.models.alert_filter_modes import AlertFilterModes
from openapi_server.models.alert_response_modes import AlertResponseModes
from openapi_server.models.persistent_notification_modes import PersistentNotificationModes
from openapi_server.models.team_category_opt_out_modes import TeamCategoryOptOutModes
from openapi_server import util


class AlertSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter_action: AlertFilterActions=None, filter_mode: AlertFilterModes=None, opt_out_mode: TeamCategoryOptOutModes=None, persistent_notificication_mode: PersistentNotificationModes=None, response_mode: AlertResponseModes=None, response_time: int=None):
        """AlertSettings - a model defined in OpenAPI

        :param filter_action: The filter_action of this AlertSettings.
        :param filter_mode: The filter_mode of this AlertSettings.
        :param opt_out_mode: The opt_out_mode of this AlertSettings.
        :param persistent_notificication_mode: The persistent_notificication_mode of this AlertSettings.
        :param response_mode: The response_mode of this AlertSettings.
        :param response_time: The response_time of this AlertSettings.
        """
        self.openapi_types = {
            'filter_action': AlertFilterActions,
            'filter_mode': AlertFilterModes,
            'opt_out_mode': TeamCategoryOptOutModes,
            'persistent_notificication_mode': PersistentNotificationModes,
            'response_mode': AlertResponseModes,
            'response_time': int
        }

        self.attribute_map = {
            'filter_action': 'filterAction',
            'filter_mode': 'filterMode',
            'opt_out_mode': 'optOutMode',
            'persistent_notificication_mode': 'persistentNotificicationMode',
            'response_mode': 'responseMode',
            'response_time': 'responseTime'
        }

        self._filter_action = filter_action
        self._filter_mode = filter_mode
        self._opt_out_mode = opt_out_mode
        self._persistent_notificication_mode = persistent_notificication_mode
        self._response_mode = response_mode
        self._response_time = response_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertSettings of this AlertSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter_action(self):
        """Gets the filter_action of this AlertSettings.


        :return: The filter_action of this AlertSettings.
        :rtype: AlertFilterActions
        """
        return self._filter_action

    @filter_action.setter
    def filter_action(self, filter_action):
        """Sets the filter_action of this AlertSettings.


        :param filter_action: The filter_action of this AlertSettings.
        :type filter_action: AlertFilterActions
        """

        self._filter_action = filter_action

    @property
    def filter_mode(self):
        """Gets the filter_mode of this AlertSettings.


        :return: The filter_mode of this AlertSettings.
        :rtype: AlertFilterModes
        """
        return self._filter_mode

    @filter_mode.setter
    def filter_mode(self, filter_mode):
        """Sets the filter_mode of this AlertSettings.


        :param filter_mode: The filter_mode of this AlertSettings.
        :type filter_mode: AlertFilterModes
        """

        self._filter_mode = filter_mode

    @property
    def opt_out_mode(self):
        """Gets the opt_out_mode of this AlertSettings.


        :return: The opt_out_mode of this AlertSettings.
        :rtype: TeamCategoryOptOutModes
        """
        return self._opt_out_mode

    @opt_out_mode.setter
    def opt_out_mode(self, opt_out_mode):
        """Sets the opt_out_mode of this AlertSettings.


        :param opt_out_mode: The opt_out_mode of this AlertSettings.
        :type opt_out_mode: TeamCategoryOptOutModes
        """

        self._opt_out_mode = opt_out_mode

    @property
    def persistent_notificication_mode(self):
        """Gets the persistent_notificication_mode of this AlertSettings.


        :return: The persistent_notificication_mode of this AlertSettings.
        :rtype: PersistentNotificationModes
        """
        return self._persistent_notificication_mode

    @persistent_notificication_mode.setter
    def persistent_notificication_mode(self, persistent_notificication_mode):
        """Sets the persistent_notificication_mode of this AlertSettings.


        :param persistent_notificication_mode: The persistent_notificication_mode of this AlertSettings.
        :type persistent_notificication_mode: PersistentNotificationModes
        """

        self._persistent_notificication_mode = persistent_notificication_mode

    @property
    def response_mode(self):
        """Gets the response_mode of this AlertSettings.


        :return: The response_mode of this AlertSettings.
        :rtype: AlertResponseModes
        """
        return self._response_mode

    @response_mode.setter
    def response_mode(self, response_mode):
        """Sets the response_mode of this AlertSettings.


        :param response_mode: The response_mode of this AlertSettings.
        :type response_mode: AlertResponseModes
        """

        self._response_mode = response_mode

    @property
    def response_time(self):
        """Gets the response_time of this AlertSettings.


        :return: The response_time of this AlertSettings.
        :rtype: int
        """
        return self._response_time

    @response_time.setter
    def response_time(self, response_time):
        """Sets the response_time of this AlertSettings.


        :param response_time: The response_time of this AlertSettings.
        :type response_time: int
        """

        self._response_time = response_time
