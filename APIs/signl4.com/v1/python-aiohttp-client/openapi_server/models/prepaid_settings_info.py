# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrepaidSettingsInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, top_up_amount: int=None, top_up_enabled: bool=None, top_up_limit: int=None):
        """PrepaidSettingsInfo - a model defined in OpenAPI

        :param top_up_amount: The top_up_amount of this PrepaidSettingsInfo.
        :param top_up_enabled: The top_up_enabled of this PrepaidSettingsInfo.
        :param top_up_limit: The top_up_limit of this PrepaidSettingsInfo.
        """
        self.openapi_types = {
            'top_up_amount': int,
            'top_up_enabled': bool,
            'top_up_limit': int
        }

        self.attribute_map = {
            'top_up_amount': 'topUpAmount',
            'top_up_enabled': 'topUpEnabled',
            'top_up_limit': 'topUpLimit'
        }

        self._top_up_amount = top_up_amount
        self._top_up_enabled = top_up_enabled
        self._top_up_limit = top_up_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrepaidSettingsInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrepaidSettingsInfo of this PrepaidSettingsInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def top_up_amount(self):
        """Gets the top_up_amount of this PrepaidSettingsInfo.


        :return: The top_up_amount of this PrepaidSettingsInfo.
        :rtype: int
        """
        return self._top_up_amount

    @top_up_amount.setter
    def top_up_amount(self, top_up_amount):
        """Sets the top_up_amount of this PrepaidSettingsInfo.


        :param top_up_amount: The top_up_amount of this PrepaidSettingsInfo.
        :type top_up_amount: int
        """

        self._top_up_amount = top_up_amount

    @property
    def top_up_enabled(self):
        """Gets the top_up_enabled of this PrepaidSettingsInfo.


        :return: The top_up_enabled of this PrepaidSettingsInfo.
        :rtype: bool
        """
        return self._top_up_enabled

    @top_up_enabled.setter
    def top_up_enabled(self, top_up_enabled):
        """Sets the top_up_enabled of this PrepaidSettingsInfo.


        :param top_up_enabled: The top_up_enabled of this PrepaidSettingsInfo.
        :type top_up_enabled: bool
        """

        self._top_up_enabled = top_up_enabled

    @property
    def top_up_limit(self):
        """Gets the top_up_limit of this PrepaidSettingsInfo.


        :return: The top_up_limit of this PrepaidSettingsInfo.
        :rtype: int
        """
        return self._top_up_limit

    @top_up_limit.setter
    def top_up_limit(self, top_up_limit):
        """Sets the top_up_limit of this PrepaidSettingsInfo.


        :param top_up_limit: The top_up_limit of this PrepaidSettingsInfo.
        :type top_up_limit: int
        """

        self._top_up_limit = top_up_limit
