# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertAnnotationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_type: int=None, id: str=None, text: str=None, timestamp: datetime=None, user_id: str=None):
        """AlertAnnotationInfo - a model defined in OpenAPI

        :param annotation_type: The annotation_type of this AlertAnnotationInfo.
        :param id: The id of this AlertAnnotationInfo.
        :param text: The text of this AlertAnnotationInfo.
        :param timestamp: The timestamp of this AlertAnnotationInfo.
        :param user_id: The user_id of this AlertAnnotationInfo.
        """
        self.openapi_types = {
            'annotation_type': int,
            'id': str,
            'text': str,
            'timestamp': datetime,
            'user_id': str
        }

        self.attribute_map = {
            'annotation_type': 'annotationType',
            'id': 'id',
            'text': 'text',
            'timestamp': 'timestamp',
            'user_id': 'userId'
        }

        self._annotation_type = annotation_type
        self._id = id
        self._text = text
        self._timestamp = timestamp
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertAnnotationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertAnnotationInfo of this AlertAnnotationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_type(self):
        """Gets the annotation_type of this AlertAnnotationInfo.


        :return: The annotation_type of this AlertAnnotationInfo.
        :rtype: int
        """
        return self._annotation_type

    @annotation_type.setter
    def annotation_type(self, annotation_type):
        """Sets the annotation_type of this AlertAnnotationInfo.


        :param annotation_type: The annotation_type of this AlertAnnotationInfo.
        :type annotation_type: int
        """

        self._annotation_type = annotation_type

    @property
    def id(self):
        """Gets the id of this AlertAnnotationInfo.


        :return: The id of this AlertAnnotationInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertAnnotationInfo.


        :param id: The id of this AlertAnnotationInfo.
        :type id: str
        """

        self._id = id

    @property
    def text(self):
        """Gets the text of this AlertAnnotationInfo.


        :return: The text of this AlertAnnotationInfo.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this AlertAnnotationInfo.


        :param text: The text of this AlertAnnotationInfo.
        :type text: str
        """

        self._text = text

    @property
    def timestamp(self):
        """Gets the timestamp of this AlertAnnotationInfo.


        :return: The timestamp of this AlertAnnotationInfo.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this AlertAnnotationInfo.


        :param timestamp: The timestamp of this AlertAnnotationInfo.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def user_id(self):
        """Gets the user_id of this AlertAnnotationInfo.


        :return: The user_id of this AlertAnnotationInfo.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AlertAnnotationInfo.


        :param user_id: The user_id of this AlertAnnotationInfo.
        :type user_id: str
        """

        self._user_id = user_id
