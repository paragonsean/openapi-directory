# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.overview_alert import OverviewAlert
from openapi_server.models.paged_results_public_continuation_token import PagedResultsPublicContinuationToken
from openapi_server import util


class OverviewAlertPagedResultsPublic(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuation_token: PagedResultsPublicContinuationToken=None, has_more: bool=None, results: List[OverviewAlert]=None):
        """OverviewAlertPagedResultsPublic - a model defined in OpenAPI

        :param continuation_token: The continuation_token of this OverviewAlertPagedResultsPublic.
        :param has_more: The has_more of this OverviewAlertPagedResultsPublic.
        :param results: The results of this OverviewAlertPagedResultsPublic.
        """
        self.openapi_types = {
            'continuation_token': PagedResultsPublicContinuationToken,
            'has_more': bool,
            'results': List[OverviewAlert]
        }

        self.attribute_map = {
            'continuation_token': 'continuationToken',
            'has_more': 'hasMore',
            'results': 'results'
        }

        self._continuation_token = continuation_token
        self._has_more = has_more
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OverviewAlertPagedResultsPublic':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OverviewAlertPagedResultsPublic of this OverviewAlertPagedResultsPublic.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuation_token(self):
        """Gets the continuation_token of this OverviewAlertPagedResultsPublic.


        :return: The continuation_token of this OverviewAlertPagedResultsPublic.
        :rtype: PagedResultsPublicContinuationToken
        """
        return self._continuation_token

    @continuation_token.setter
    def continuation_token(self, continuation_token):
        """Sets the continuation_token of this OverviewAlertPagedResultsPublic.


        :param continuation_token: The continuation_token of this OverviewAlertPagedResultsPublic.
        :type continuation_token: PagedResultsPublicContinuationToken
        """

        self._continuation_token = continuation_token

    @property
    def has_more(self):
        """Gets the has_more of this OverviewAlertPagedResultsPublic.


        :return: The has_more of this OverviewAlertPagedResultsPublic.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this OverviewAlertPagedResultsPublic.


        :param has_more: The has_more of this OverviewAlertPagedResultsPublic.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def results(self):
        """Gets the results of this OverviewAlertPagedResultsPublic.


        :return: The results of this OverviewAlertPagedResultsPublic.
        :rtype: List[OverviewAlert]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this OverviewAlertPagedResultsPublic.


        :param results: The results of this OverviewAlertPagedResultsPublic.
        :type results: List[OverviewAlert]
        """

        self._results = results
