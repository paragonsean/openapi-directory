# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserDutyInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_status_change: datetime=None, on_duty: bool=None, on_manager_duty: bool=None, overdue: bool=None):
        """UserDutyInfo - a model defined in OpenAPI

        :param last_status_change: The last_status_change of this UserDutyInfo.
        :param on_duty: The on_duty of this UserDutyInfo.
        :param on_manager_duty: The on_manager_duty of this UserDutyInfo.
        :param overdue: The overdue of this UserDutyInfo.
        """
        self.openapi_types = {
            'last_status_change': datetime,
            'on_duty': bool,
            'on_manager_duty': bool,
            'overdue': bool
        }

        self.attribute_map = {
            'last_status_change': 'lastStatusChange',
            'on_duty': 'onDuty',
            'on_manager_duty': 'onManagerDuty',
            'overdue': 'overdue'
        }

        self._last_status_change = last_status_change
        self._on_duty = on_duty
        self._on_manager_duty = on_manager_duty
        self._overdue = overdue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserDutyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserDutyInfo of this UserDutyInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_status_change(self):
        """Gets the last_status_change of this UserDutyInfo.


        :return: The last_status_change of this UserDutyInfo.
        :rtype: datetime
        """
        return self._last_status_change

    @last_status_change.setter
    def last_status_change(self, last_status_change):
        """Sets the last_status_change of this UserDutyInfo.


        :param last_status_change: The last_status_change of this UserDutyInfo.
        :type last_status_change: datetime
        """

        self._last_status_change = last_status_change

    @property
    def on_duty(self):
        """Gets the on_duty of this UserDutyInfo.


        :return: The on_duty of this UserDutyInfo.
        :rtype: bool
        """
        return self._on_duty

    @on_duty.setter
    def on_duty(self, on_duty):
        """Sets the on_duty of this UserDutyInfo.


        :param on_duty: The on_duty of this UserDutyInfo.
        :type on_duty: bool
        """

        self._on_duty = on_duty

    @property
    def on_manager_duty(self):
        """Gets the on_manager_duty of this UserDutyInfo.


        :return: The on_manager_duty of this UserDutyInfo.
        :rtype: bool
        """
        return self._on_manager_duty

    @on_manager_duty.setter
    def on_manager_duty(self, on_manager_duty):
        """Sets the on_manager_duty of this UserDutyInfo.


        :param on_manager_duty: The on_manager_duty of this UserDutyInfo.
        :type on_manager_duty: bool
        """

        self._on_manager_duty = on_manager_duty

    @property
    def overdue(self):
        """Gets the overdue of this UserDutyInfo.


        :return: The overdue of this UserDutyInfo.
        :rtype: bool
        """
        return self._overdue

    @overdue.setter
    def overdue(self, overdue):
        """Sets the overdue of this UserDutyInfo.


        :param overdue: The overdue of this UserDutyInfo.
        :type overdue: bool
        """

        self._overdue = overdue
