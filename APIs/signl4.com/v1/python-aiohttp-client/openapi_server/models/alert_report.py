# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_counts import AlertCounts
from openapi_server import util


class AlertReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last24_hours: AlertCounts=None, subscription_id: str=None, team_current_duty: AlertCounts=None, team_id: str=None, team_last_duty: AlertCounts=None, user_id: str=None, user_last_duty_change: AlertCounts=None):
        """AlertReport - a model defined in OpenAPI

        :param last24_hours: The last24_hours of this AlertReport.
        :param subscription_id: The subscription_id of this AlertReport.
        :param team_current_duty: The team_current_duty of this AlertReport.
        :param team_id: The team_id of this AlertReport.
        :param team_last_duty: The team_last_duty of this AlertReport.
        :param user_id: The user_id of this AlertReport.
        :param user_last_duty_change: The user_last_duty_change of this AlertReport.
        """
        self.openapi_types = {
            'last24_hours': AlertCounts,
            'subscription_id': str,
            'team_current_duty': AlertCounts,
            'team_id': str,
            'team_last_duty': AlertCounts,
            'user_id': str,
            'user_last_duty_change': AlertCounts
        }

        self.attribute_map = {
            'last24_hours': 'last24Hours',
            'subscription_id': 'subscriptionId',
            'team_current_duty': 'teamCurrentDuty',
            'team_id': 'teamId',
            'team_last_duty': 'teamLastDuty',
            'user_id': 'userId',
            'user_last_duty_change': 'userLastDutyChange'
        }

        self._last24_hours = last24_hours
        self._subscription_id = subscription_id
        self._team_current_duty = team_current_duty
        self._team_id = team_id
        self._team_last_duty = team_last_duty
        self._user_id = user_id
        self._user_last_duty_change = user_last_duty_change

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertReport of this AlertReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last24_hours(self):
        """Gets the last24_hours of this AlertReport.


        :return: The last24_hours of this AlertReport.
        :rtype: AlertCounts
        """
        return self._last24_hours

    @last24_hours.setter
    def last24_hours(self, last24_hours):
        """Sets the last24_hours of this AlertReport.


        :param last24_hours: The last24_hours of this AlertReport.
        :type last24_hours: AlertCounts
        """

        self._last24_hours = last24_hours

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AlertReport.


        :return: The subscription_id of this AlertReport.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AlertReport.


        :param subscription_id: The subscription_id of this AlertReport.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def team_current_duty(self):
        """Gets the team_current_duty of this AlertReport.


        :return: The team_current_duty of this AlertReport.
        :rtype: AlertCounts
        """
        return self._team_current_duty

    @team_current_duty.setter
    def team_current_duty(self, team_current_duty):
        """Sets the team_current_duty of this AlertReport.


        :param team_current_duty: The team_current_duty of this AlertReport.
        :type team_current_duty: AlertCounts
        """

        self._team_current_duty = team_current_duty

    @property
    def team_id(self):
        """Gets the team_id of this AlertReport.


        :return: The team_id of this AlertReport.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this AlertReport.


        :param team_id: The team_id of this AlertReport.
        :type team_id: str
        """

        self._team_id = team_id

    @property
    def team_last_duty(self):
        """Gets the team_last_duty of this AlertReport.


        :return: The team_last_duty of this AlertReport.
        :rtype: AlertCounts
        """
        return self._team_last_duty

    @team_last_duty.setter
    def team_last_duty(self, team_last_duty):
        """Sets the team_last_duty of this AlertReport.


        :param team_last_duty: The team_last_duty of this AlertReport.
        :type team_last_duty: AlertCounts
        """

        self._team_last_duty = team_last_duty

    @property
    def user_id(self):
        """Gets the user_id of this AlertReport.


        :return: The user_id of this AlertReport.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AlertReport.


        :param user_id: The user_id of this AlertReport.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_last_duty_change(self):
        """Gets the user_last_duty_change of this AlertReport.


        :return: The user_last_duty_change of this AlertReport.
        :rtype: AlertCounts
        """
        return self._user_last_duty_change

    @user_last_duty_change.setter
    def user_last_duty_change(self, user_last_duty_change):
        """Sets the user_last_duty_change of this AlertReport.


        :param user_last_duty_change: The user_last_duty_change of this AlertReport.
        :type user_last_duty_change: AlertCounts
        """

        self._user_last_duty_change = user_last_duty_change
