# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, member_ids: List[str]=None, name: str=None, subscription_id: str=None, timezone: str=None):
        """TeamInfo - a model defined in OpenAPI

        :param id: The id of this TeamInfo.
        :param member_ids: The member_ids of this TeamInfo.
        :param name: The name of this TeamInfo.
        :param subscription_id: The subscription_id of this TeamInfo.
        :param timezone: The timezone of this TeamInfo.
        """
        self.openapi_types = {
            'id': str,
            'member_ids': List[str],
            'name': str,
            'subscription_id': str,
            'timezone': str
        }

        self.attribute_map = {
            'id': 'id',
            'member_ids': 'memberIds',
            'name': 'name',
            'subscription_id': 'subscriptionId',
            'timezone': 'timezone'
        }

        self._id = id
        self._member_ids = member_ids
        self._name = name
        self._subscription_id = subscription_id
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamInfo of this TeamInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TeamInfo.


        :return: The id of this TeamInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TeamInfo.


        :param id: The id of this TeamInfo.
        :type id: str
        """

        self._id = id

    @property
    def member_ids(self):
        """Gets the member_ids of this TeamInfo.


        :return: The member_ids of this TeamInfo.
        :rtype: List[str]
        """
        return self._member_ids

    @member_ids.setter
    def member_ids(self, member_ids):
        """Sets the member_ids of this TeamInfo.


        :param member_ids: The member_ids of this TeamInfo.
        :type member_ids: List[str]
        """

        self._member_ids = member_ids

    @property
    def name(self):
        """Gets the name of this TeamInfo.


        :return: The name of this TeamInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamInfo.


        :param name: The name of this TeamInfo.
        :type name: str
        """

        self._name = name

    @property
    def subscription_id(self):
        """Gets the subscription_id of this TeamInfo.


        :return: The subscription_id of this TeamInfo.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this TeamInfo.


        :param subscription_id: The subscription_id of this TeamInfo.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def timezone(self):
        """Gets the timezone of this TeamInfo.


        :return: The timezone of this TeamInfo.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this TeamInfo.


        :param timezone: The timezone of this TeamInfo.
        :type timezone: str
        """

        self._timezone = timezone
