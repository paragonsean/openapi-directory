# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_source_endpoint_types import EventSourceEndpointTypes
from openapi_server import util


class EventSourceEndpointInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, group_id: str=None, last_event_raised: datetime=None, subscription_id: str=None, team_id: str=None, type: EventSourceEndpointTypes=None):
        """EventSourceEndpointInfo - a model defined in OpenAPI

        :param address: The address of this EventSourceEndpointInfo.
        :param group_id: The group_id of this EventSourceEndpointInfo.
        :param last_event_raised: The last_event_raised of this EventSourceEndpointInfo.
        :param subscription_id: The subscription_id of this EventSourceEndpointInfo.
        :param team_id: The team_id of this EventSourceEndpointInfo.
        :param type: The type of this EventSourceEndpointInfo.
        """
        self.openapi_types = {
            'address': str,
            'group_id': str,
            'last_event_raised': datetime,
            'subscription_id': str,
            'team_id': str,
            'type': EventSourceEndpointTypes
        }

        self.attribute_map = {
            'address': 'address',
            'group_id': 'groupId',
            'last_event_raised': 'lastEventRaised',
            'subscription_id': 'subscriptionId',
            'team_id': 'teamId',
            'type': 'type'
        }

        self._address = address
        self._group_id = group_id
        self._last_event_raised = last_event_raised
        self._subscription_id = subscription_id
        self._team_id = team_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventSourceEndpointInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventSourceEndpointInfo of this EventSourceEndpointInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this EventSourceEndpointInfo.


        :return: The address of this EventSourceEndpointInfo.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this EventSourceEndpointInfo.


        :param address: The address of this EventSourceEndpointInfo.
        :type address: str
        """

        self._address = address

    @property
    def group_id(self):
        """Gets the group_id of this EventSourceEndpointInfo.


        :return: The group_id of this EventSourceEndpointInfo.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this EventSourceEndpointInfo.


        :param group_id: The group_id of this EventSourceEndpointInfo.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def last_event_raised(self):
        """Gets the last_event_raised of this EventSourceEndpointInfo.


        :return: The last_event_raised of this EventSourceEndpointInfo.
        :rtype: datetime
        """
        return self._last_event_raised

    @last_event_raised.setter
    def last_event_raised(self, last_event_raised):
        """Sets the last_event_raised of this EventSourceEndpointInfo.


        :param last_event_raised: The last_event_raised of this EventSourceEndpointInfo.
        :type last_event_raised: datetime
        """

        self._last_event_raised = last_event_raised

    @property
    def subscription_id(self):
        """Gets the subscription_id of this EventSourceEndpointInfo.


        :return: The subscription_id of this EventSourceEndpointInfo.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this EventSourceEndpointInfo.


        :param subscription_id: The subscription_id of this EventSourceEndpointInfo.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def team_id(self):
        """Gets the team_id of this EventSourceEndpointInfo.


        :return: The team_id of this EventSourceEndpointInfo.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this EventSourceEndpointInfo.


        :param team_id: The team_id of this EventSourceEndpointInfo.
        :type team_id: str
        """

        self._team_id = team_id

    @property
    def type(self):
        """Gets the type of this EventSourceEndpointInfo.


        :return: The type of this EventSourceEndpointInfo.
        :rtype: EventSourceEndpointTypes
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this EventSourceEndpointInfo.


        :param type: The type of this EventSourceEndpointInfo.
        :type type: EventSourceEndpointTypes
        """

        self._type = type
