# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.script_description_data import ScriptDescriptionData
from openapi_server.models.script_localization_detail import ScriptLocalizationDetail
from openapi_server import util


class InventoryScriptInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: object=None, data: ScriptDescriptionData=None, event_pattern: object=None, script_id: str=None, script_localization_details: List[ScriptLocalizationDetail]=None, script_name: str=None, visibility: str=None):
        """InventoryScriptInfo - a model defined in OpenAPI

        :param config: The config of this InventoryScriptInfo.
        :param data: The data of this InventoryScriptInfo.
        :param event_pattern: The event_pattern of this InventoryScriptInfo.
        :param script_id: The script_id of this InventoryScriptInfo.
        :param script_localization_details: The script_localization_details of this InventoryScriptInfo.
        :param script_name: The script_name of this InventoryScriptInfo.
        :param visibility: The visibility of this InventoryScriptInfo.
        """
        self.openapi_types = {
            'config': object,
            'data': ScriptDescriptionData,
            'event_pattern': object,
            'script_id': str,
            'script_localization_details': List[ScriptLocalizationDetail],
            'script_name': str,
            'visibility': str
        }

        self.attribute_map = {
            'config': 'config',
            'data': 'data',
            'event_pattern': 'eventPattern',
            'script_id': 'scriptId',
            'script_localization_details': 'scriptLocalizationDetails',
            'script_name': 'scriptName',
            'visibility': 'visibility'
        }

        self._config = config
        self._data = data
        self._event_pattern = event_pattern
        self._script_id = script_id
        self._script_localization_details = script_localization_details
        self._script_name = script_name
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryScriptInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryScriptInfo of this InventoryScriptInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this InventoryScriptInfo.


        :return: The config of this InventoryScriptInfo.
        :rtype: object
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this InventoryScriptInfo.


        :param config: The config of this InventoryScriptInfo.
        :type config: object
        """

        self._config = config

    @property
    def data(self):
        """Gets the data of this InventoryScriptInfo.


        :return: The data of this InventoryScriptInfo.
        :rtype: ScriptDescriptionData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this InventoryScriptInfo.


        :param data: The data of this InventoryScriptInfo.
        :type data: ScriptDescriptionData
        """

        self._data = data

    @property
    def event_pattern(self):
        """Gets the event_pattern of this InventoryScriptInfo.


        :return: The event_pattern of this InventoryScriptInfo.
        :rtype: object
        """
        return self._event_pattern

    @event_pattern.setter
    def event_pattern(self, event_pattern):
        """Sets the event_pattern of this InventoryScriptInfo.


        :param event_pattern: The event_pattern of this InventoryScriptInfo.
        :type event_pattern: object
        """

        self._event_pattern = event_pattern

    @property
    def script_id(self):
        """Gets the script_id of this InventoryScriptInfo.


        :return: The script_id of this InventoryScriptInfo.
        :rtype: str
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id):
        """Sets the script_id of this InventoryScriptInfo.


        :param script_id: The script_id of this InventoryScriptInfo.
        :type script_id: str
        """

        self._script_id = script_id

    @property
    def script_localization_details(self):
        """Gets the script_localization_details of this InventoryScriptInfo.


        :return: The script_localization_details of this InventoryScriptInfo.
        :rtype: List[ScriptLocalizationDetail]
        """
        return self._script_localization_details

    @script_localization_details.setter
    def script_localization_details(self, script_localization_details):
        """Sets the script_localization_details of this InventoryScriptInfo.


        :param script_localization_details: The script_localization_details of this InventoryScriptInfo.
        :type script_localization_details: List[ScriptLocalizationDetail]
        """

        self._script_localization_details = script_localization_details

    @property
    def script_name(self):
        """Gets the script_name of this InventoryScriptInfo.


        :return: The script_name of this InventoryScriptInfo.
        :rtype: str
        """
        return self._script_name

    @script_name.setter
    def script_name(self, script_name):
        """Sets the script_name of this InventoryScriptInfo.


        :param script_name: The script_name of this InventoryScriptInfo.
        :type script_name: str
        """

        self._script_name = script_name

    @property
    def visibility(self):
        """Gets the visibility of this InventoryScriptInfo.


        :return: The visibility of this InventoryScriptInfo.
        :rtype: str
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this InventoryScriptInfo.


        :param visibility: The visibility of this InventoryScriptInfo.
        :type visibility: str
        """

        self._visibility = visibility
