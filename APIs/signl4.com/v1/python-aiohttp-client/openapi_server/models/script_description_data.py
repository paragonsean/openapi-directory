# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScriptDescriptionData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, script_type: str=None, short_description: str=None):
        """ScriptDescriptionData - a model defined in OpenAPI

        :param description: The description of this ScriptDescriptionData.
        :param name: The name of this ScriptDescriptionData.
        :param script_type: The script_type of this ScriptDescriptionData.
        :param short_description: The short_description of this ScriptDescriptionData.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'script_type': str,
            'short_description': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'script_type': 'scriptType',
            'short_description': 'shortDescription'
        }

        self._description = description
        self._name = name
        self._script_type = script_type
        self._short_description = short_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScriptDescriptionData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScriptDescriptionData of this ScriptDescriptionData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ScriptDescriptionData.


        :return: The description of this ScriptDescriptionData.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ScriptDescriptionData.


        :param description: The description of this ScriptDescriptionData.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this ScriptDescriptionData.


        :return: The name of this ScriptDescriptionData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ScriptDescriptionData.


        :param name: The name of this ScriptDescriptionData.
        :type name: str
        """

        self._name = name

    @property
    def script_type(self):
        """Gets the script_type of this ScriptDescriptionData.


        :return: The script_type of this ScriptDescriptionData.
        :rtype: str
        """
        return self._script_type

    @script_type.setter
    def script_type(self, script_type):
        """Sets the script_type of this ScriptDescriptionData.


        :param script_type: The script_type of this ScriptDescriptionData.
        :type script_type: str
        """

        self._script_type = script_type

    @property
    def short_description(self):
        """Gets the short_description of this ScriptDescriptionData.


        :return: The short_description of this ScriptDescriptionData.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this ScriptDescriptionData.


        :param short_description: The short_description of this ScriptDescriptionData.
        :type short_description: str
        """

        self._short_description = short_description
