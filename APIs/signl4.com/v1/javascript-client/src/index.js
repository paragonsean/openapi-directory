/**
 * SIGNL4 API
 * <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright © Derdack GmbH<br></p>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AlertAnnotationInfo from './model/AlertAnnotationInfo';
import AlertAttachment from './model/AlertAttachment';
import AlertAttachmentInfo from './model/AlertAttachmentInfo';
import AlertCounts from './model/AlertCounts';
import AlertDeliveryStatusCodes from './model/AlertDeliveryStatusCodes';
import AlertDeliveryStatusInfo from './model/AlertDeliveryStatusInfo';
import AlertFilterActions from './model/AlertFilterActions';
import AlertFilterModes from './model/AlertFilterModes';
import AlertFilterPublic from './model/AlertFilterPublic';
import AlertHistoryInfoDetailed from './model/AlertHistoryInfoDetailed';
import AlertHistoryInfoEntry from './model/AlertHistoryInfoEntry';
import AlertHistoryInfoUserEntryType from './model/AlertHistoryInfoUserEntryType';
import AlertInfo from './model/AlertInfo';
import AlertNotificationInfo from './model/AlertNotificationInfo';
import AlertNotificationInfoChannelType from './model/AlertNotificationInfoChannelType';
import AlertNotificationInfoMessageStatus from './model/AlertNotificationInfoMessageStatus';
import AlertNotificationInfoUserStatus from './model/AlertNotificationInfoUserStatus';
import AlertReport from './model/AlertReport';
import AlertResponseModes from './model/AlertResponseModes';
import AlertSettings from './model/AlertSettings';
import AlertSeverities from './model/AlertSeverities';
import AlertStatusCodes from './model/AlertStatusCodes';
import CategoryAugmentation from './model/CategoryAugmentation';
import CategoryAugmentationType from './model/CategoryAugmentationType';
import CategoryInfo from './model/CategoryInfo';
import CategoryInfoOptions from './model/CategoryInfoOptions';
import CategoryMetrics from './model/CategoryMetrics';
import CategorySubscriptionInfo from './model/CategorySubscriptionInfo';
import CategorySubscriptionStatus from './model/CategorySubscriptionStatus';
import ChangeAlertStatusFilterInfo from './model/ChangeAlertStatusFilterInfo';
import ChangeAlertStatusInfo from './model/ChangeAlertStatusInfo';
import ChangeAlertStatusMultipleInfo from './model/ChangeAlertStatusMultipleInfo';
import ChannelPriceInfo from './model/ChannelPriceInfo';
import ChannelTypes from './model/ChannelTypes';
import ContactAddressInfo from './model/ContactAddressInfo';
import DeleteRangeInfo from './model/DeleteRangeInfo';
import Device from './model/Device';
import DeviceType from './model/DeviceType';
import DutySummaryInfo from './model/DutySummaryInfo';
import Encoding from './model/Encoding';
import ErrorResponseContent from './model/ErrorResponseContent';
import ErrorResponseContentBase from './model/ErrorResponseContentBase';
import EventFilter from './model/EventFilter';
import EventParameterInfo from './model/EventParameterInfo';
import EventParameterTypes from './model/EventParameterTypes';
import EventSeverities from './model/EventSeverities';
import EventSourceEndpointInfo from './model/EventSourceEndpointInfo';
import EventSourceEndpointTypes from './model/EventSourceEndpointTypes';
import EventSourceTypes from './model/EventSourceTypes';
import EventStatusCodes from './model/EventStatusCodes';
import InventoryScriptInfo from './model/InventoryScriptInfo';
import InvitedUserInfo from './model/InvitedUserInfo';
import KeywordMatchingType from './model/KeywordMatchingType';
import OverviewAlert from './model/OverviewAlert';
import OverviewAlertPagedResultsPublic from './model/OverviewAlertPagedResultsPublic';
import OverviewEvent from './model/OverviewEvent';
import OverviewEventPagedResultsPublic from './model/OverviewEventPagedResultsPublic';
import PagedResultsPublicContinuationToken from './model/PagedResultsPublicContinuationToken';
import PersistentNotificationModes from './model/PersistentNotificationModes';
import PrepaidBalanceInfo from './model/PrepaidBalanceInfo';
import PrepaidSettingsInfo from './model/PrepaidSettingsInfo';
import PrepaidTransactionInfo from './model/PrepaidTransactionInfo';
import RaiseAlertInfo from './model/RaiseAlertInfo';
import ScheduleInfo from './model/ScheduleInfo';
import ScriptDescriptionData from './model/ScriptDescriptionData';
import ScriptInstanceCustomUserData from './model/ScriptInstanceCustomUserData';
import ScriptInstanceDetails from './model/ScriptInstanceDetails';
import ScriptInstanceInfoRuntimeInformationModel from './model/ScriptInstanceInfoRuntimeInformationModel';
import ScriptInstanceInfoRuntimeStatus from './model/ScriptInstanceInfoRuntimeStatus';
import ScriptLocalizationDetail from './model/ScriptLocalizationDetail';
import StatusChangeScope from './model/StatusChangeScope';
import StringItemsWrapper from './model/StringItemsWrapper';
import SubscriptionFeature from './model/SubscriptionFeature';
import SubscriptionInfo from './model/SubscriptionInfo';
import SubscriptionProfile from './model/SubscriptionProfile';
import TeamCategoryOptOutModes from './model/TeamCategoryOptOutModes';
import TeamDutySummaryInfo from './model/TeamDutySummaryInfo';
import TeamInfo from './model/TeamInfo';
import TeamProfile from './model/TeamProfile';
import TeamSetupProgress from './model/TeamSetupProgress';
import UpdatePasswordInfo from './model/UpdatePasswordInfo';
import UserDeliveryStatusInfo from './model/UserDeliveryStatusInfo';
import UserDeliveryStatusInfoCodes from './model/UserDeliveryStatusInfoCodes';
import UserDutyInfo from './model/UserDutyInfo';
import UserImage from './model/UserImage';
import UserInfo from './model/UserInfo';
import UserInvitationInfo from './model/UserInvitationInfo';
import UserInvitationResult from './model/UserInvitationResult';
import UserInvite from './model/UserInvite';
import UserLicenseInfo from './model/UserLicenseInfo';
import UserMembership from './model/UserMembership';
import UserProfile from './model/UserProfile';
import UserSetupProgress from './model/UserSetupProgress';
import UsersInvitation from './model/UsersInvitation';
import WebhookBaseInfo from './model/WebhookBaseInfo';
import WebhookInfo from './model/WebhookInfo';
import AlertsApi from './api/AlertsApi';
import CategoriesApi from './api/CategoriesApi';
import DutiesApi from './api/DutiesApi';
import EventsApi from './api/EventsApi';
import PrepaidApi from './api/PrepaidApi';
import ScriptsApi from './api/ScriptsApi';
import SubscriptionsApi from './api/SubscriptionsApi';
import TeamsApi from './api/TeamsApi';
import TeamsMembershipsApi from './api/TeamsMembershipsApi';
import UsersApi from './api/UsersApi';
import WebhooksApi from './api/WebhooksApi';


/**
* &lt;p&gt;Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur&lt;/li&gt;&lt;li&gt;Retrieving alarms for logging purposes&lt;/li&gt;&lt;li&gt;Calendar integrations: Creation and management of on-call duties&lt;/li&gt;&lt;li&gt;Punch users in and out based on external calendars&lt;/li&gt;&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;AUTHENTICATION&lt;br&gt;Using the API requires an API key, which you can generate in the SIGNL4 portal under &#39;Developers&#39;.&lt;br&gt;This key must then be specified in a special header in every HTTP request.&lt;br&gt;This header is called &lt;b style&#x3D;&#39;color:#F8B41F&#39;&gt;X-S4-Api-Key&lt;/b&gt;.&lt;br&gt;&lt;br&gt;The base URL of the API is &lt;a rel&#x3D;&#39;noopener noreferrer&#39; target&#x3D;&#39;_blank&#39; href&#x3D;&#39;https://connect.signl4.com/api/&#39;&gt;https://connect.signl4.com/api/&lt;/a&gt;.&lt;br&gt;Copyright © Derdack GmbH&lt;br&gt;&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Signl4Api = require('index'); // See note below*.
* var xxxSvc = new Signl4Api.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Signl4Api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Signl4Api.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Signl4Api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AlertAnnotationInfo model constructor.
     * @property {module:model/AlertAnnotationInfo}
     */
    AlertAnnotationInfo,

    /**
     * The AlertAttachment model constructor.
     * @property {module:model/AlertAttachment}
     */
    AlertAttachment,

    /**
     * The AlertAttachmentInfo model constructor.
     * @property {module:model/AlertAttachmentInfo}
     */
    AlertAttachmentInfo,

    /**
     * The AlertCounts model constructor.
     * @property {module:model/AlertCounts}
     */
    AlertCounts,

    /**
     * The AlertDeliveryStatusCodes model constructor.
     * @property {module:model/AlertDeliveryStatusCodes}
     */
    AlertDeliveryStatusCodes,

    /**
     * The AlertDeliveryStatusInfo model constructor.
     * @property {module:model/AlertDeliveryStatusInfo}
     */
    AlertDeliveryStatusInfo,

    /**
     * The AlertFilterActions model constructor.
     * @property {module:model/AlertFilterActions}
     */
    AlertFilterActions,

    /**
     * The AlertFilterModes model constructor.
     * @property {module:model/AlertFilterModes}
     */
    AlertFilterModes,

    /**
     * The AlertFilterPublic model constructor.
     * @property {module:model/AlertFilterPublic}
     */
    AlertFilterPublic,

    /**
     * The AlertHistoryInfoDetailed model constructor.
     * @property {module:model/AlertHistoryInfoDetailed}
     */
    AlertHistoryInfoDetailed,

    /**
     * The AlertHistoryInfoEntry model constructor.
     * @property {module:model/AlertHistoryInfoEntry}
     */
    AlertHistoryInfoEntry,

    /**
     * The AlertHistoryInfoUserEntryType model constructor.
     * @property {module:model/AlertHistoryInfoUserEntryType}
     */
    AlertHistoryInfoUserEntryType,

    /**
     * The AlertInfo model constructor.
     * @property {module:model/AlertInfo}
     */
    AlertInfo,

    /**
     * The AlertNotificationInfo model constructor.
     * @property {module:model/AlertNotificationInfo}
     */
    AlertNotificationInfo,

    /**
     * The AlertNotificationInfoChannelType model constructor.
     * @property {module:model/AlertNotificationInfoChannelType}
     */
    AlertNotificationInfoChannelType,

    /**
     * The AlertNotificationInfoMessageStatus model constructor.
     * @property {module:model/AlertNotificationInfoMessageStatus}
     */
    AlertNotificationInfoMessageStatus,

    /**
     * The AlertNotificationInfoUserStatus model constructor.
     * @property {module:model/AlertNotificationInfoUserStatus}
     */
    AlertNotificationInfoUserStatus,

    /**
     * The AlertReport model constructor.
     * @property {module:model/AlertReport}
     */
    AlertReport,

    /**
     * The AlertResponseModes model constructor.
     * @property {module:model/AlertResponseModes}
     */
    AlertResponseModes,

    /**
     * The AlertSettings model constructor.
     * @property {module:model/AlertSettings}
     */
    AlertSettings,

    /**
     * The AlertSeverities model constructor.
     * @property {module:model/AlertSeverities}
     */
    AlertSeverities,

    /**
     * The AlertStatusCodes model constructor.
     * @property {module:model/AlertStatusCodes}
     */
    AlertStatusCodes,

    /**
     * The CategoryAugmentation model constructor.
     * @property {module:model/CategoryAugmentation}
     */
    CategoryAugmentation,

    /**
     * The CategoryAugmentationType model constructor.
     * @property {module:model/CategoryAugmentationType}
     */
    CategoryAugmentationType,

    /**
     * The CategoryInfo model constructor.
     * @property {module:model/CategoryInfo}
     */
    CategoryInfo,

    /**
     * The CategoryInfoOptions model constructor.
     * @property {module:model/CategoryInfoOptions}
     */
    CategoryInfoOptions,

    /**
     * The CategoryMetrics model constructor.
     * @property {module:model/CategoryMetrics}
     */
    CategoryMetrics,

    /**
     * The CategorySubscriptionInfo model constructor.
     * @property {module:model/CategorySubscriptionInfo}
     */
    CategorySubscriptionInfo,

    /**
     * The CategorySubscriptionStatus model constructor.
     * @property {module:model/CategorySubscriptionStatus}
     */
    CategorySubscriptionStatus,

    /**
     * The ChangeAlertStatusFilterInfo model constructor.
     * @property {module:model/ChangeAlertStatusFilterInfo}
     */
    ChangeAlertStatusFilterInfo,

    /**
     * The ChangeAlertStatusInfo model constructor.
     * @property {module:model/ChangeAlertStatusInfo}
     */
    ChangeAlertStatusInfo,

    /**
     * The ChangeAlertStatusMultipleInfo model constructor.
     * @property {module:model/ChangeAlertStatusMultipleInfo}
     */
    ChangeAlertStatusMultipleInfo,

    /**
     * The ChannelPriceInfo model constructor.
     * @property {module:model/ChannelPriceInfo}
     */
    ChannelPriceInfo,

    /**
     * The ChannelTypes model constructor.
     * @property {module:model/ChannelTypes}
     */
    ChannelTypes,

    /**
     * The ContactAddressInfo model constructor.
     * @property {module:model/ContactAddressInfo}
     */
    ContactAddressInfo,

    /**
     * The DeleteRangeInfo model constructor.
     * @property {module:model/DeleteRangeInfo}
     */
    DeleteRangeInfo,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceType model constructor.
     * @property {module:model/DeviceType}
     */
    DeviceType,

    /**
     * The DutySummaryInfo model constructor.
     * @property {module:model/DutySummaryInfo}
     */
    DutySummaryInfo,

    /**
     * The Encoding model constructor.
     * @property {module:model/Encoding}
     */
    Encoding,

    /**
     * The ErrorResponseContent model constructor.
     * @property {module:model/ErrorResponseContent}
     */
    ErrorResponseContent,

    /**
     * The ErrorResponseContentBase model constructor.
     * @property {module:model/ErrorResponseContentBase}
     */
    ErrorResponseContentBase,

    /**
     * The EventFilter model constructor.
     * @property {module:model/EventFilter}
     */
    EventFilter,

    /**
     * The EventParameterInfo model constructor.
     * @property {module:model/EventParameterInfo}
     */
    EventParameterInfo,

    /**
     * The EventParameterTypes model constructor.
     * @property {module:model/EventParameterTypes}
     */
    EventParameterTypes,

    /**
     * The EventSeverities model constructor.
     * @property {module:model/EventSeverities}
     */
    EventSeverities,

    /**
     * The EventSourceEndpointInfo model constructor.
     * @property {module:model/EventSourceEndpointInfo}
     */
    EventSourceEndpointInfo,

    /**
     * The EventSourceEndpointTypes model constructor.
     * @property {module:model/EventSourceEndpointTypes}
     */
    EventSourceEndpointTypes,

    /**
     * The EventSourceTypes model constructor.
     * @property {module:model/EventSourceTypes}
     */
    EventSourceTypes,

    /**
     * The EventStatusCodes model constructor.
     * @property {module:model/EventStatusCodes}
     */
    EventStatusCodes,

    /**
     * The InventoryScriptInfo model constructor.
     * @property {module:model/InventoryScriptInfo}
     */
    InventoryScriptInfo,

    /**
     * The InvitedUserInfo model constructor.
     * @property {module:model/InvitedUserInfo}
     */
    InvitedUserInfo,

    /**
     * The KeywordMatchingType model constructor.
     * @property {module:model/KeywordMatchingType}
     */
    KeywordMatchingType,

    /**
     * The OverviewAlert model constructor.
     * @property {module:model/OverviewAlert}
     */
    OverviewAlert,

    /**
     * The OverviewAlertPagedResultsPublic model constructor.
     * @property {module:model/OverviewAlertPagedResultsPublic}
     */
    OverviewAlertPagedResultsPublic,

    /**
     * The OverviewEvent model constructor.
     * @property {module:model/OverviewEvent}
     */
    OverviewEvent,

    /**
     * The OverviewEventPagedResultsPublic model constructor.
     * @property {module:model/OverviewEventPagedResultsPublic}
     */
    OverviewEventPagedResultsPublic,

    /**
     * The PagedResultsPublicContinuationToken model constructor.
     * @property {module:model/PagedResultsPublicContinuationToken}
     */
    PagedResultsPublicContinuationToken,

    /**
     * The PersistentNotificationModes model constructor.
     * @property {module:model/PersistentNotificationModes}
     */
    PersistentNotificationModes,

    /**
     * The PrepaidBalanceInfo model constructor.
     * @property {module:model/PrepaidBalanceInfo}
     */
    PrepaidBalanceInfo,

    /**
     * The PrepaidSettingsInfo model constructor.
     * @property {module:model/PrepaidSettingsInfo}
     */
    PrepaidSettingsInfo,

    /**
     * The PrepaidTransactionInfo model constructor.
     * @property {module:model/PrepaidTransactionInfo}
     */
    PrepaidTransactionInfo,

    /**
     * The RaiseAlertInfo model constructor.
     * @property {module:model/RaiseAlertInfo}
     */
    RaiseAlertInfo,

    /**
     * The ScheduleInfo model constructor.
     * @property {module:model/ScheduleInfo}
     */
    ScheduleInfo,

    /**
     * The ScriptDescriptionData model constructor.
     * @property {module:model/ScriptDescriptionData}
     */
    ScriptDescriptionData,

    /**
     * The ScriptInstanceCustomUserData model constructor.
     * @property {module:model/ScriptInstanceCustomUserData}
     */
    ScriptInstanceCustomUserData,

    /**
     * The ScriptInstanceDetails model constructor.
     * @property {module:model/ScriptInstanceDetails}
     */
    ScriptInstanceDetails,

    /**
     * The ScriptInstanceInfoRuntimeInformationModel model constructor.
     * @property {module:model/ScriptInstanceInfoRuntimeInformationModel}
     */
    ScriptInstanceInfoRuntimeInformationModel,

    /**
     * The ScriptInstanceInfoRuntimeStatus model constructor.
     * @property {module:model/ScriptInstanceInfoRuntimeStatus}
     */
    ScriptInstanceInfoRuntimeStatus,

    /**
     * The ScriptLocalizationDetail model constructor.
     * @property {module:model/ScriptLocalizationDetail}
     */
    ScriptLocalizationDetail,

    /**
     * The StatusChangeScope model constructor.
     * @property {module:model/StatusChangeScope}
     */
    StatusChangeScope,

    /**
     * The StringItemsWrapper model constructor.
     * @property {module:model/StringItemsWrapper}
     */
    StringItemsWrapper,

    /**
     * The SubscriptionFeature model constructor.
     * @property {module:model/SubscriptionFeature}
     */
    SubscriptionFeature,

    /**
     * The SubscriptionInfo model constructor.
     * @property {module:model/SubscriptionInfo}
     */
    SubscriptionInfo,

    /**
     * The SubscriptionProfile model constructor.
     * @property {module:model/SubscriptionProfile}
     */
    SubscriptionProfile,

    /**
     * The TeamCategoryOptOutModes model constructor.
     * @property {module:model/TeamCategoryOptOutModes}
     */
    TeamCategoryOptOutModes,

    /**
     * The TeamDutySummaryInfo model constructor.
     * @property {module:model/TeamDutySummaryInfo}
     */
    TeamDutySummaryInfo,

    /**
     * The TeamInfo model constructor.
     * @property {module:model/TeamInfo}
     */
    TeamInfo,

    /**
     * The TeamProfile model constructor.
     * @property {module:model/TeamProfile}
     */
    TeamProfile,

    /**
     * The TeamSetupProgress model constructor.
     * @property {module:model/TeamSetupProgress}
     */
    TeamSetupProgress,

    /**
     * The UpdatePasswordInfo model constructor.
     * @property {module:model/UpdatePasswordInfo}
     */
    UpdatePasswordInfo,

    /**
     * The UserDeliveryStatusInfo model constructor.
     * @property {module:model/UserDeliveryStatusInfo}
     */
    UserDeliveryStatusInfo,

    /**
     * The UserDeliveryStatusInfoCodes model constructor.
     * @property {module:model/UserDeliveryStatusInfoCodes}
     */
    UserDeliveryStatusInfoCodes,

    /**
     * The UserDutyInfo model constructor.
     * @property {module:model/UserDutyInfo}
     */
    UserDutyInfo,

    /**
     * The UserImage model constructor.
     * @property {module:model/UserImage}
     */
    UserImage,

    /**
     * The UserInfo model constructor.
     * @property {module:model/UserInfo}
     */
    UserInfo,

    /**
     * The UserInvitationInfo model constructor.
     * @property {module:model/UserInvitationInfo}
     */
    UserInvitationInfo,

    /**
     * The UserInvitationResult model constructor.
     * @property {module:model/UserInvitationResult}
     */
    UserInvitationResult,

    /**
     * The UserInvite model constructor.
     * @property {module:model/UserInvite}
     */
    UserInvite,

    /**
     * The UserLicenseInfo model constructor.
     * @property {module:model/UserLicenseInfo}
     */
    UserLicenseInfo,

    /**
     * The UserMembership model constructor.
     * @property {module:model/UserMembership}
     */
    UserMembership,

    /**
     * The UserProfile model constructor.
     * @property {module:model/UserProfile}
     */
    UserProfile,

    /**
     * The UserSetupProgress model constructor.
     * @property {module:model/UserSetupProgress}
     */
    UserSetupProgress,

    /**
     * The UsersInvitation model constructor.
     * @property {module:model/UsersInvitation}
     */
    UsersInvitation,

    /**
     * The WebhookBaseInfo model constructor.
     * @property {module:model/WebhookBaseInfo}
     */
    WebhookBaseInfo,

    /**
     * The WebhookInfo model constructor.
     * @property {module:model/WebhookInfo}
     */
    WebhookInfo,

    /**
    * The AlertsApi service constructor.
    * @property {module:api/AlertsApi}
    */
    AlertsApi,

    /**
    * The CategoriesApi service constructor.
    * @property {module:api/CategoriesApi}
    */
    CategoriesApi,

    /**
    * The DutiesApi service constructor.
    * @property {module:api/DutiesApi}
    */
    DutiesApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The PrepaidApi service constructor.
    * @property {module:api/PrepaidApi}
    */
    PrepaidApi,

    /**
    * The ScriptsApi service constructor.
    * @property {module:api/ScriptsApi}
    */
    ScriptsApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi,

    /**
    * The TeamsApi service constructor.
    * @property {module:api/TeamsApi}
    */
    TeamsApi,

    /**
    * The TeamsMembershipsApi service constructor.
    * @property {module:api/TeamsMembershipsApi}
    */
    TeamsMembershipsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};
