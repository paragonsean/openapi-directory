/**
 * SIGNL4 API
 * <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategoryMetrics.h
 *
 * 
 */

#ifndef OAICategoryMetrics_H
#define OAICategoryMetrics_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICategoryMetrics : public OAIObject {
public:
    OAICategoryMetrics();
    OAICategoryMetrics(QString json);
    ~OAICategoryMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    qint64 getLast24Hours() const;
    void setLast24Hours(const qint64 &last24_hours);
    bool is_last24_hours_Set() const;
    bool is_last24_hours_Valid() const;

    QDateTime getLastAlert() const;
    void setLastAlert(const QDateTime &last_alert);
    bool is_last_alert_Set() const;
    bool is_last_alert_Valid() const;

    qint32 getSubscriberCount() const;
    void setSubscriberCount(const qint32 &subscriber_count);
    bool is_subscriber_count_Set() const;
    bool is_subscriber_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    qint64 m_last24_hours;
    bool m_last24_hours_isSet;
    bool m_last24_hours_isValid;

    QDateTime m_last_alert;
    bool m_last_alert_isSet;
    bool m_last_alert_isValid;

    qint32 m_subscriber_count;
    bool m_subscriber_count_isSet;
    bool m_subscriber_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategoryMetrics)

#endif // OAICategoryMetrics_H
