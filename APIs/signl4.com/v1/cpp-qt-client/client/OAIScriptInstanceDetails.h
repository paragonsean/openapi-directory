/**
 * SIGNL4 API
 * <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScriptInstanceDetails.h
 *
 * 
 */

#ifndef OAIScriptInstanceDetails_H
#define OAIScriptInstanceDetails_H

#include <QJsonObject>

#include "OAIScriptInstanceInfoRuntimeInformationModel.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScriptInstanceInfoRuntimeInformationModel;

class OAIScriptInstanceDetails : public OAIObject {
public:
    OAIScriptInstanceDetails();
    OAIScriptInstanceDetails(QString json);
    ~OAIScriptInstanceDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QJsonValue getConfig() const;
    void setConfig(const QJsonValue &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QString getCustomScriptDescription() const;
    void setCustomScriptDescription(const QString &custom_script_description);
    bool is_custom_script_description_Set() const;
    bool is_custom_script_description_Valid() const;

    QString getCustomScriptName() const;
    void setCustomScriptName(const QString &custom_script_name);
    bool is_custom_script_name_Set() const;
    bool is_custom_script_name_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QJsonValue getEventPattern() const;
    void setEventPattern(const QJsonValue &event_pattern);
    bool is_event_pattern_Set() const;
    bool is_event_pattern_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    OAIScriptInstanceInfoRuntimeInformationModel getRuntimeInformation() const;
    void setRuntimeInformation(const OAIScriptInstanceInfoRuntimeInformationModel &runtime_information);
    bool is_runtime_information_Set() const;
    bool is_runtime_information_Valid() const;

    QString getScriptId() const;
    void setScriptId(const QString &script_id);
    bool is_script_id_Set() const;
    bool is_script_id_Valid() const;

    QString getScriptName() const;
    void setScriptName(const QString &script_name);
    bool is_script_name_Set() const;
    bool is_script_name_Valid() const;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    QString getTeamId() const;
    void setTeamId(const QString &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QJsonValue m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QString m_custom_script_description;
    bool m_custom_script_description_isSet;
    bool m_custom_script_description_isValid;

    QString m_custom_script_name;
    bool m_custom_script_name_isSet;
    bool m_custom_script_name_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QJsonValue m_event_pattern;
    bool m_event_pattern_isSet;
    bool m_event_pattern_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    OAIScriptInstanceInfoRuntimeInformationModel m_runtime_information;
    bool m_runtime_information_isSet;
    bool m_runtime_information_isValid;

    QString m_script_id;
    bool m_script_id_isSet;
    bool m_script_id_isValid;

    QString m_script_name;
    bool m_script_name_isSet;
    bool m_script_name_isValid;

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;

    QString m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScriptInstanceDetails)

#endif // OAIScriptInstanceDetails_H
