/**
 * SIGNL4 API
 * <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionInfo.h
 *
 * 
 */

#ifndef OAISubscriptionInfo_H
#define OAISubscriptionInfo_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubscriptionInfo : public OAIObject {
public:
    OAISubscriptionInfo();
    OAISubscriptionInfo(QString json);
    ~OAISubscriptionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBranchId() const;
    void setBranchId(const QString &branch_id);
    bool is_branch_id_Set() const;
    bool is_branch_id_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getExternalAccountId() const;
    void setExternalAccountId(const QString &external_account_id);
    bool is_external_account_id_Set() const;
    bool is_external_account_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getNextBilling() const;
    void setNextBilling(const QDateTime &next_billing);
    bool is_next_billing_Set() const;
    bool is_next_billing_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    QString getPlanCode() const;
    void setPlanCode(const QString &plan_code);
    bool is_plan_code_Set() const;
    bool is_plan_code_Valid() const;

    qint32 getPlanState() const;
    void setPlanState(const qint32 &plan_state);
    bool is_plan_state_Set() const;
    bool is_plan_state_Valid() const;

    bool isReferralEnabled() const;
    void setReferralEnabled(const bool &referral_enabled);
    bool is_referral_enabled_Set() const;
    bool is_referral_enabled_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_branch_id;
    bool m_branch_id_isSet;
    bool m_branch_id_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_external_account_id;
    bool m_external_account_id_isSet;
    bool m_external_account_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_next_billing;
    bool m_next_billing_isSet;
    bool m_next_billing_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    QString m_plan_code;
    bool m_plan_code_isSet;
    bool m_plan_code_isValid;

    qint32 m_plan_state;
    bool m_plan_state_isSet;
    bool m_plan_state_isValid;

    bool m_referral_enabled;
    bool m_referral_enabled_isSet;
    bool m_referral_enabled_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionInfo)

#endif // OAISubscriptionInfo_H
