/**
 * SIGNL4 API
 * <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRaiseAlertInfo.h
 *
 * 
 */

#ifndef OAIRaiseAlertInfo_H
#define OAIRaiseAlertInfo_H

#include <QJsonObject>

#include "OAIAlertAttachment.h"
#include "OAIAlertSeverities.h"
#include "OAIEventParameterInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlertAttachment;
class OAIEventParameterInfo;

class OAIRaiseAlertInfo : public OAIObject {
public:
    OAIRaiseAlertInfo();
    OAIRaiseAlertInfo(QString json);
    ~OAIRaiseAlertInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAlertAttachment> getAttachments() const;
    void setAttachments(const QList<OAIAlertAttachment> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    qint32 getFlags() const;
    void setFlags(const qint32 &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    QList<OAIEventParameterInfo> getParameters() const;
    void setParameters(const QList<OAIEventParameterInfo> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    OAIAlertSeverities getSeverity() const;
    void setSeverity(const OAIAlertSeverities &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAlertAttachment> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    qint32 m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    QList<OAIEventParameterInfo> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    OAIAlertSeverities m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRaiseAlertInfo)

#endif // OAIRaiseAlertInfo_H
