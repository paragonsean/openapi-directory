/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayMediaIntent.h
 *
 * 
 */

#ifndef OAIPlayMediaIntent_H
#define OAIPlayMediaIntent_H

#include <QJsonObject>

#include "OAIIntent.h"
#include "OAIMediaItem.h"
#include "OAIMediaSearch.h"
#include "OAIPlaybackQueueLocation.h"
#include "OAIPlaybackRepeatMode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaItem;
class OAIMediaSearch;

class OAIPlayMediaIntent : public OAIObject {
public:
    OAIPlayMediaIntent();
    OAIPlayMediaIntent(QString json);
    ~OAIPlayMediaIntent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRClass() const;
    void setRClass(const QString &r_class);
    bool is_r_class_Set() const;
    bool is_r_class_Valid() const;

    QList<OAIMediaItem> getMediaItems() const;
    void setMediaItems(const QList<OAIMediaItem> &media_items);
    bool is_media_items_Set() const;
    bool is_media_items_Valid() const;

    OAIMediaSearch getMediaSearch() const;
    void setMediaSearch(const OAIMediaSearch &media_search);
    bool is_media_search_Set() const;
    bool is_media_search_Valid() const;

    bool isPlayShuffled() const;
    void setPlayShuffled(const bool &play_shuffled);
    bool is_play_shuffled_Set() const;
    bool is_play_shuffled_Valid() const;

    OAIPlaybackQueueLocation getPlaybackQueueLocation() const;
    void setPlaybackQueueLocation(const OAIPlaybackQueueLocation &playback_queue_location);
    bool is_playback_queue_location_Set() const;
    bool is_playback_queue_location_Valid() const;

    OAIPlaybackRepeatMode getPlaybackRepeatMode() const;
    void setPlaybackRepeatMode(const OAIPlaybackRepeatMode &playback_repeat_mode);
    bool is_playback_repeat_mode_Set() const;
    bool is_playback_repeat_mode_Valid() const;

    double getPlaybackSpeed() const;
    void setPlaybackSpeed(const double &playback_speed);
    bool is_playback_speed_Set() const;
    bool is_playback_speed_Valid() const;

    bool isResumePlayback() const;
    void setResumePlayback(const bool &resume_playback);
    bool is_resume_playback_Set() const;
    bool is_resume_playback_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_class;
    bool m_r_class_isSet;
    bool m_r_class_isValid;

    QList<OAIMediaItem> m_media_items;
    bool m_media_items_isSet;
    bool m_media_items_isValid;

    OAIMediaSearch m_media_search;
    bool m_media_search_isSet;
    bool m_media_search_isValid;

    bool m_play_shuffled;
    bool m_play_shuffled_isSet;
    bool m_play_shuffled_isValid;

    OAIPlaybackQueueLocation m_playback_queue_location;
    bool m_playback_queue_location_isSet;
    bool m_playback_queue_location_isValid;

    OAIPlaybackRepeatMode m_playback_repeat_mode;
    bool m_playback_repeat_mode_isSet;
    bool m_playback_repeat_mode_isValid;

    double m_playback_speed;
    bool m_playback_speed_isSet;
    bool m_playback_speed_isValid;

    bool m_resume_playback;
    bool m_resume_playback_isSet;
    bool m_resume_playback_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayMediaIntent)

#endif // OAIPlayMediaIntent_H
