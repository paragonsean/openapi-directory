/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerContext.h
 *
 * 
 */

#ifndef OAIPlayerContext_H
#define OAIPlayerContext_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerContext : public OAIObject {
public:
    OAIPlayerContext();
    OAIPlayerContext(QString json);
    ~OAIPlayerContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivityIdentifier() const;
    void setActivityIdentifier(const QString &activity_identifier);
    bool is_activity_identifier_Set() const;
    bool is_activity_identifier_Valid() const;

    QString getContentIdentifier() const;
    void setContentIdentifier(const QString &content_identifier);
    bool is_content_identifier_Set() const;
    bool is_content_identifier_Valid() const;

    qint64 getOffsetInMillis() const;
    void setOffsetInMillis(const qint64 &offset_in_millis);
    bool is_offset_in_millis_Set() const;
    bool is_offset_in_millis_Valid() const;

    double getPlaybackSpeed() const;
    void setPlaybackSpeed(const double &playback_speed);
    bool is_playback_speed_Set() const;
    bool is_playback_speed_Valid() const;

    QString getQueueIdentifier() const;
    void setQueueIdentifier(const QString &queue_identifier);
    bool is_queue_identifier_Set() const;
    bool is_queue_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activity_identifier;
    bool m_activity_identifier_isSet;
    bool m_activity_identifier_isValid;

    QString m_content_identifier;
    bool m_content_identifier_isSet;
    bool m_content_identifier_isValid;

    qint64 m_offset_in_millis;
    bool m_offset_in_millis_isSet;
    bool m_offset_in_millis_isValid;

    double m_playback_speed;
    bool m_playback_speed_isSet;
    bool m_playback_speed_isValid;

    QString m_queue_identifier;
    bool m_queue_identifier_isSet;
    bool m_queue_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerContext)

#endif // OAIPlayerContext_H
