/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayMediaControlCommandSet.h
 *
 * 
 */

#ifndef OAIPlayMediaControlCommandSet_H
#define OAIPlayMediaControlCommandSet_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayMediaControlCommandSet : public OAIObject {
public:
    OAIPlayMediaControlCommandSet();
    OAIPlayMediaControlCommandSet(QString json);
    ~OAIPlayMediaControlCommandSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBookmarkTrack() const;
    void setBookmarkTrack(const bool &bookmark_track);
    bool is_bookmark_track_Set() const;
    bool is_bookmark_track_Valid() const;

    bool isDislikeTrack() const;
    void setDislikeTrack(const bool &dislike_track);
    bool is_dislike_track_Set() const;
    bool is_dislike_track_Valid() const;

    bool isLikeTrack() const;
    void setLikeTrack(const bool &like_track);
    bool is_like_track_Set() const;
    bool is_like_track_Valid() const;

    bool isNextTrack() const;
    void setNextTrack(const bool &next_track);
    bool is_next_track_Set() const;
    bool is_next_track_Valid() const;

    bool isPreferSkipBackward() const;
    void setPreferSkipBackward(const bool &prefer_skip_backward);
    bool is_prefer_skip_backward_Set() const;
    bool is_prefer_skip_backward_Valid() const;

    bool isPreferSkipForward() const;
    void setPreferSkipForward(const bool &prefer_skip_forward);
    bool is_prefer_skip_forward_Set() const;
    bool is_prefer_skip_forward_Valid() const;

    bool isPreviousTrack() const;
    void setPreviousTrack(const bool &previous_track);
    bool is_previous_track_Set() const;
    bool is_previous_track_Valid() const;

    bool isSeekToPlaybackPosition() const;
    void setSeekToPlaybackPosition(const bool &seek_to_playback_position);
    bool is_seek_to_playback_position_Set() const;
    bool is_seek_to_playback_position_Valid() const;

    bool isSkipBackward() const;
    void setSkipBackward(const bool &skip_backward);
    bool is_skip_backward_Set() const;
    bool is_skip_backward_Valid() const;

    bool isSkipForward() const;
    void setSkipForward(const bool &skip_forward);
    bool is_skip_forward_Set() const;
    bool is_skip_forward_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bookmark_track;
    bool m_bookmark_track_isSet;
    bool m_bookmark_track_isValid;

    bool m_dislike_track;
    bool m_dislike_track_isSet;
    bool m_dislike_track_isValid;

    bool m_like_track;
    bool m_like_track_isSet;
    bool m_like_track_isValid;

    bool m_next_track;
    bool m_next_track_isSet;
    bool m_next_track_isValid;

    bool m_prefer_skip_backward;
    bool m_prefer_skip_backward_isSet;
    bool m_prefer_skip_backward_isValid;

    bool m_prefer_skip_forward;
    bool m_prefer_skip_forward_isSet;
    bool m_prefer_skip_forward_isValid;

    bool m_previous_track;
    bool m_previous_track_isSet;
    bool m_previous_track_isValid;

    bool m_seek_to_playback_position;
    bool m_seek_to_playback_position_isSet;
    bool m_seek_to_playback_position_isValid;

    bool m_skip_backward;
    bool m_skip_backward_isSet;
    bool m_skip_backward_isValid;

    bool m_skip_forward;
    bool m_skip_forward_isSet;
    bool m_skip_forward_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayMediaControlCommandSet)

#endif // OAIPlayMediaControlCommandSet_H
