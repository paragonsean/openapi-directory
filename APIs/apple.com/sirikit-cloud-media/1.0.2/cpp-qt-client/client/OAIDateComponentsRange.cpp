/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDateComponentsRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDateComponentsRange::OAIDateComponentsRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDateComponentsRange::OAIDateComponentsRange() {
    this->initializeModel();
}

OAIDateComponentsRange::~OAIDateComponentsRange() {}

void OAIDateComponentsRange::initializeModel() {

    m_end_date_components_isSet = false;
    m_end_date_components_isValid = false;

    m_start_date_components_isSet = false;
    m_start_date_components_isValid = false;
}

void OAIDateComponentsRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDateComponentsRange::fromJsonObject(QJsonObject json) {

    m_end_date_components_isValid = ::OpenAPI::fromJsonValue(m_end_date_components, json[QString("endDateComponents")]);
    m_end_date_components_isSet = !json[QString("endDateComponents")].isNull() && m_end_date_components_isValid;

    m_start_date_components_isValid = ::OpenAPI::fromJsonValue(m_start_date_components, json[QString("startDateComponents")]);
    m_start_date_components_isSet = !json[QString("startDateComponents")].isNull() && m_start_date_components_isValid;
}

QString OAIDateComponentsRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDateComponentsRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_components.isSet()) {
        obj.insert(QString("endDateComponents"), ::OpenAPI::toJsonValue(m_end_date_components));
    }
    if (m_start_date_components.isSet()) {
        obj.insert(QString("startDateComponents"), ::OpenAPI::toJsonValue(m_start_date_components));
    }
    return obj;
}

OAIDateComponents OAIDateComponentsRange::getEndDateComponents() const {
    return m_end_date_components;
}
void OAIDateComponentsRange::setEndDateComponents(const OAIDateComponents &end_date_components) {
    m_end_date_components = end_date_components;
    m_end_date_components_isSet = true;
}

bool OAIDateComponentsRange::is_end_date_components_Set() const{
    return m_end_date_components_isSet;
}

bool OAIDateComponentsRange::is_end_date_components_Valid() const{
    return m_end_date_components_isValid;
}

OAIDateComponents OAIDateComponentsRange::getStartDateComponents() const {
    return m_start_date_components;
}
void OAIDateComponentsRange::setStartDateComponents(const OAIDateComponents &start_date_components) {
    m_start_date_components = start_date_components;
    m_start_date_components_isSet = true;
}

bool OAIDateComponentsRange::is_start_date_components_Set() const{
    return m_start_date_components_isSet;
}

bool OAIDateComponentsRange::is_start_date_components_Valid() const{
    return m_start_date_components_isValid;
}

bool OAIDateComponentsRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_components.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_components.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDateComponentsRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
