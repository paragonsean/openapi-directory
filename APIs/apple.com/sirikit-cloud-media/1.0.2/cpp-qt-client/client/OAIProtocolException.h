/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProtocolException.h
 *
 * 
 */

#ifndef OAIProtocolException_H
#define OAIProtocolException_H

#include <QJsonObject>

#include "OAIProtocolExceptionReason.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProtocolException : public OAIObject {
public:
    OAIProtocolException();
    OAIProtocolException(QString json);
    ~OAIProtocolException() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCode() const;
    void setCode(const qint64 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    qint32 getMethodIndex() const;
    void setMethodIndex(const qint32 &method_index);
    bool is_method_index_Set() const;
    bool is_method_index_Valid() const;

    QString getMethodName() const;
    void setMethodName(const QString &method_name);
    bool is_method_name_Set() const;
    bool is_method_name_Valid() const;

    OAIProtocolExceptionReason getReason() const;
    void setReason(const OAIProtocolExceptionReason &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    float getRetryWithDelay() const;
    void setRetryWithDelay(const float &retry_with_delay);
    bool is_retry_with_delay_Set() const;
    bool is_retry_with_delay_Valid() const;

    QList<QString> getTrace() const;
    void setTrace(const QList<QString> &trace);
    bool is_trace_Set() const;
    bool is_trace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    qint32 m_method_index;
    bool m_method_index_isSet;
    bool m_method_index_isValid;

    QString m_method_name;
    bool m_method_name_isSet;
    bool m_method_name_isValid;

    OAIProtocolExceptionReason m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    float m_retry_with_delay;
    bool m_retry_with_delay_isSet;
    bool m_retry_with_delay_isValid;

    QList<QString> m_trace;
    bool m_trace_isSet;
    bool m_trace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProtocolException)

#endif // OAIProtocolException_H
