/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlaybackRepeatMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlaybackRepeatMode::OAIPlaybackRepeatMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlaybackRepeatMode::OAIPlaybackRepeatMode() {
    this->initializeModel();
}

OAIPlaybackRepeatMode::~OAIPlaybackRepeatMode() {}

void OAIPlaybackRepeatMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPlaybackRepeatMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPlaybackRepeatMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackRepeatMode::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("none", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackRepeatMode::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("all", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackRepeatMode::ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("one", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackRepeatMode::ONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPlaybackRepeatMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPlaybackRepeatMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPlaybackRepeatMode::UNKNOWN:
            val = "unknown";
            break;
        case eOAIPlaybackRepeatMode::NONE:
            val = "none";
            break;
        case eOAIPlaybackRepeatMode::ALL:
            val = "all";
            break;
        case eOAIPlaybackRepeatMode::ONE:
            val = "one";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPlaybackRepeatMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPlaybackRepeatMode::eOAIPlaybackRepeatMode OAIPlaybackRepeatMode::getValue() const {
    return m_value;
}

void OAIPlaybackRepeatMode::setValue(const OAIPlaybackRepeatMode::eOAIPlaybackRepeatMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPlaybackRepeatMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIPlaybackRepeatMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
