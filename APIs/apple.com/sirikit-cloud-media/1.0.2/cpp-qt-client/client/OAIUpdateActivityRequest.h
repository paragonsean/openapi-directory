/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateActivityRequest.h
 *
 * 
 */

#ifndef OAIUpdateActivityRequest_H
#define OAIUpdateActivityRequest_H

#include <QJsonObject>

#include "OAIConstraints.h"
#include "OAIPlayerContext.h"
#include "OAIQueueActivityReportEvent.h"
#include "OAIUserActivity.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConstraints;
class OAIPlayerContext;
class OAIUserActivity;

class OAIUpdateActivityRequest : public OAIObject {
public:
    OAIUpdateActivityRequest();
    OAIUpdateActivityRequest(QString json);
    ~OAIUpdateActivityRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConstraints getConstraints() const;
    void setConstraints(const OAIConstraints &constraints);
    bool is_constraints_Set() const;
    bool is_constraints_Valid() const;

    OAIPlayerContext getNowPlaying() const;
    void setNowPlaying(const OAIPlayerContext &now_playing);
    bool is_now_playing_Set() const;
    bool is_now_playing_Valid() const;

    OAIPlayerContext getPreviouslyPlaying() const;
    void setPreviouslyPlaying(const OAIPlayerContext &previously_playing);
    bool is_previously_playing_Set() const;
    bool is_previously_playing_Valid() const;

    OAIQueueActivityReportEvent getReport() const;
    void setReport(const OAIQueueActivityReportEvent &report);
    bool is_report_Set() const;
    bool is_report_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIUserActivity getUserActivity() const;
    void setUserActivity(const OAIUserActivity &user_activity);
    bool is_user_activity_Set() const;
    bool is_user_activity_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConstraints m_constraints;
    bool m_constraints_isSet;
    bool m_constraints_isValid;

    OAIPlayerContext m_now_playing;
    bool m_now_playing_isSet;
    bool m_now_playing_isValid;

    OAIPlayerContext m_previously_playing;
    bool m_previously_playing_isSet;
    bool m_previously_playing_isValid;

    OAIQueueActivityReportEvent m_report;
    bool m_report_isSet;
    bool m_report_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIUserActivity m_user_activity;
    bool m_user_activity_isSet;
    bool m_user_activity_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateActivityRequest)

#endif // OAIUpdateActivityRequest_H
