/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlaybackQueueLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlaybackQueueLocation::OAIPlaybackQueueLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlaybackQueueLocation::OAIPlaybackQueueLocation() {
    this->initializeModel();
}

OAIPlaybackQueueLocation::~OAIPlaybackQueueLocation() {}

void OAIPlaybackQueueLocation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPlaybackQueueLocation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPlaybackQueueLocation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackQueueLocation::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("now", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackQueueLocation::NOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("next", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackQueueLocation::NEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("later", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlaybackQueueLocation::LATER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPlaybackQueueLocation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPlaybackQueueLocation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPlaybackQueueLocation::UNKNOWN:
            val = "unknown";
            break;
        case eOAIPlaybackQueueLocation::NOW:
            val = "now";
            break;
        case eOAIPlaybackQueueLocation::NEXT:
            val = "next";
            break;
        case eOAIPlaybackQueueLocation::LATER:
            val = "later";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPlaybackQueueLocation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPlaybackQueueLocation::eOAIPlaybackQueueLocation OAIPlaybackQueueLocation::getValue() const {
    return m_value;
}

void OAIPlaybackQueueLocation::setValue(const OAIPlaybackQueueLocation::eOAIPlaybackQueueLocation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPlaybackQueueLocation::isSet() const {
    
    return m_value_isSet;
}

bool OAIPlaybackQueueLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
