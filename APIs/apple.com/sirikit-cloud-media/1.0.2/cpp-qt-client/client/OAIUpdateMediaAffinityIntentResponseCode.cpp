/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMediaAffinityIntentResponseCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMediaAffinityIntentResponseCode::OAIUpdateMediaAffinityIntentResponseCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMediaAffinityIntentResponseCode::OAIUpdateMediaAffinityIntentResponseCode() {
    this->initializeModel();
}

OAIUpdateMediaAffinityIntentResponseCode::~OAIUpdateMediaAffinityIntentResponseCode() {}

void OAIUpdateMediaAffinityIntentResponseCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUpdateMediaAffinityIntentResponseCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUpdateMediaAffinityIntentResponseCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("unspecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMediaAffinityIntentResponseCode::UNSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("inProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMediaAffinityIntentResponseCode::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("success", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMediaAffinityIntentResponseCode::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failure", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMediaAffinityIntentResponseCode::FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failureRequiringAppLaunch", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMediaAffinityIntentResponseCode::FAILUREREQUIRINGAPPLAUNCH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUpdateMediaAffinityIntentResponseCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUpdateMediaAffinityIntentResponseCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUpdateMediaAffinityIntentResponseCode::UNSPECIFIED:
            val = "unspecified";
            break;
        case eOAIUpdateMediaAffinityIntentResponseCode::INPROGRESS:
            val = "inProgress";
            break;
        case eOAIUpdateMediaAffinityIntentResponseCode::SUCCESS:
            val = "success";
            break;
        case eOAIUpdateMediaAffinityIntentResponseCode::FAILURE:
            val = "failure";
            break;
        case eOAIUpdateMediaAffinityIntentResponseCode::FAILUREREQUIRINGAPPLAUNCH:
            val = "failureRequiringAppLaunch";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUpdateMediaAffinityIntentResponseCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUpdateMediaAffinityIntentResponseCode::eOAIUpdateMediaAffinityIntentResponseCode OAIUpdateMediaAffinityIntentResponseCode::getValue() const {
    return m_value;
}

void OAIUpdateMediaAffinityIntentResponseCode::setValue(const OAIUpdateMediaAffinityIntentResponseCode::eOAIUpdateMediaAffinityIntentResponseCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUpdateMediaAffinityIntentResponseCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIUpdateMediaAffinityIntentResponseCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
