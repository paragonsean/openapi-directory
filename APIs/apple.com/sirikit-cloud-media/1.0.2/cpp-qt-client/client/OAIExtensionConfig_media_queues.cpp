/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtensionConfig_media_queues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtensionConfig_media_queues::OAIExtensionConfig_media_queues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtensionConfig_media_queues::OAIExtensionConfig_media_queues() {
    this->initializeModel();
}

OAIExtensionConfig_media_queues::~OAIExtensionConfig_media_queues() {}

void OAIExtensionConfig_media_queues::initializeModel() {

    m_hdr_isSet = false;
    m_hdr_isValid = false;

    m_play_media_isSet = false;
    m_play_media_isValid = false;

    m_update_activity_isSet = false;
    m_update_activity_isValid = false;
}

void OAIExtensionConfig_media_queues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtensionConfig_media_queues::fromJsonObject(QJsonObject json) {

    m_hdr_isValid = ::OpenAPI::fromJsonValue(m_hdr, json[QString("hdr")]);
    m_hdr_isSet = !json[QString("hdr")].isNull() && m_hdr_isValid;

    m_play_media_isValid = ::OpenAPI::fromJsonValue(m_play_media, json[QString("playMedia")]);
    m_play_media_isSet = !json[QString("playMedia")].isNull() && m_play_media_isValid;

    m_update_activity_isValid = ::OpenAPI::fromJsonValue(m_update_activity, json[QString("updateActivity")]);
    m_update_activity_isSet = !json[QString("updateActivity")].isNull() && m_update_activity_isValid;
}

QString OAIExtensionConfig_media_queues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtensionConfig_media_queues::asJsonObject() const {
    QJsonObject obj;
    if (m_hdr_isSet) {
        obj.insert(QString("hdr"), ::OpenAPI::toJsonValue(m_hdr));
    }
    if (m_play_media.isSet()) {
        obj.insert(QString("playMedia"), ::OpenAPI::toJsonValue(m_play_media));
    }
    if (m_update_activity.isSet()) {
        obj.insert(QString("updateActivity"), ::OpenAPI::toJsonValue(m_update_activity));
    }
    return obj;
}

OAIObject OAIExtensionConfig_media_queues::getHdr() const {
    return m_hdr;
}
void OAIExtensionConfig_media_queues::setHdr(const OAIObject &hdr) {
    m_hdr = hdr;
    m_hdr_isSet = true;
}

bool OAIExtensionConfig_media_queues::is_hdr_Set() const{
    return m_hdr_isSet;
}

bool OAIExtensionConfig_media_queues::is_hdr_Valid() const{
    return m_hdr_isValid;
}

OAIExtensionConfig_media_queues_playMedia OAIExtensionConfig_media_queues::getPlayMedia() const {
    return m_play_media;
}
void OAIExtensionConfig_media_queues::setPlayMedia(const OAIExtensionConfig_media_queues_playMedia &play_media) {
    m_play_media = play_media;
    m_play_media_isSet = true;
}

bool OAIExtensionConfig_media_queues::is_play_media_Set() const{
    return m_play_media_isSet;
}

bool OAIExtensionConfig_media_queues::is_play_media_Valid() const{
    return m_play_media_isValid;
}

OAIExtensionConfig_media_queues_updateActivity OAIExtensionConfig_media_queues::getUpdateActivity() const {
    return m_update_activity;
}
void OAIExtensionConfig_media_queues::setUpdateActivity(const OAIExtensionConfig_media_queues_updateActivity &update_activity) {
    m_update_activity = update_activity;
    m_update_activity_isSet = true;
}

bool OAIExtensionConfig_media_queues::is_update_activity_Set() const{
    return m_update_activity_isSet;
}

bool OAIExtensionConfig_media_queues::is_update_activity_Valid() const{
    return m_update_activity_isValid;
}

bool OAIExtensionConfig_media_queues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hdr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_play_media.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_activity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtensionConfig_media_queues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
