/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDateComponents.h
 *
 * 
 */

#ifndef OAIDateComponents_H
#define OAIDateComponents_H

#include <QJsonObject>

#include "OAIExplicitDateComponents.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDateComponents : public OAIObject {
public:
    OAIDateComponents();
    OAIDateComponents(QString json);
    ~OAIDateComponents() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalendarIdentifier() const;
    void setCalendarIdentifier(const QString &calendar_identifier);
    bool is_calendar_identifier_Set() const;
    bool is_calendar_identifier_Valid() const;

    qint32 getDay() const;
    void setDay(const qint32 &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    qint32 getEra() const;
    void setEra(const qint32 &era);
    bool is_era_Set() const;
    bool is_era_Valid() const;

    qint32 getHour() const;
    void setHour(const qint32 &hour);
    bool is_hour_Set() const;
    bool is_hour_Valid() const;

    qint32 getMinute() const;
    void setMinute(const qint32 &minute);
    bool is_minute_Set() const;
    bool is_minute_Valid() const;

    qint32 getMonth() const;
    void setMonth(const qint32 &month);
    bool is_month_Set() const;
    bool is_month_Valid() const;

    qint32 getNanosecond() const;
    void setNanosecond(const qint32 &nanosecond);
    bool is_nanosecond_Set() const;
    bool is_nanosecond_Valid() const;

    qint32 getSecond() const;
    void setSecond(const qint32 &second);
    bool is_second_Set() const;
    bool is_second_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calendar_identifier;
    bool m_calendar_identifier_isSet;
    bool m_calendar_identifier_isValid;

    qint32 m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    qint32 m_era;
    bool m_era_isSet;
    bool m_era_isValid;

    qint32 m_hour;
    bool m_hour_isSet;
    bool m_hour_isValid;

    qint32 m_minute;
    bool m_minute_isSet;
    bool m_minute_isValid;

    qint32 m_month;
    bool m_month_isSet;
    bool m_month_isValid;

    qint32 m_nanosecond;
    bool m_nanosecond_isSet;
    bool m_nanosecond_isValid;

    qint32 m_second;
    bool m_second_isSet;
    bool m_second_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDateComponents)

#endif // OAIDateComponents_H
