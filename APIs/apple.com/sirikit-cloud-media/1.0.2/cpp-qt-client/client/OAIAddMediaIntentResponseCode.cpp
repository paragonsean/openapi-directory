/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddMediaIntentResponseCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddMediaIntentResponseCode::OAIAddMediaIntentResponseCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddMediaIntentResponseCode::OAIAddMediaIntentResponseCode() {
    this->initializeModel();
}

OAIAddMediaIntentResponseCode::~OAIAddMediaIntentResponseCode() {}

void OAIAddMediaIntentResponseCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAddMediaIntentResponseCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAddMediaIntentResponseCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("unspecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAddMediaIntentResponseCode::UNSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ready", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAddMediaIntentResponseCode::READY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("inProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAddMediaIntentResponseCode::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("success", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAddMediaIntentResponseCode::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failure", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAddMediaIntentResponseCode::FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failureRequiringAppLaunch", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAddMediaIntentResponseCode::FAILUREREQUIRINGAPPLAUNCH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAddMediaIntentResponseCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAddMediaIntentResponseCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAddMediaIntentResponseCode::UNSPECIFIED:
            val = "unspecified";
            break;
        case eOAIAddMediaIntentResponseCode::READY:
            val = "ready";
            break;
        case eOAIAddMediaIntentResponseCode::INPROGRESS:
            val = "inProgress";
            break;
        case eOAIAddMediaIntentResponseCode::SUCCESS:
            val = "success";
            break;
        case eOAIAddMediaIntentResponseCode::FAILURE:
            val = "failure";
            break;
        case eOAIAddMediaIntentResponseCode::FAILUREREQUIRINGAPPLAUNCH:
            val = "failureRequiringAppLaunch";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAddMediaIntentResponseCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAddMediaIntentResponseCode::eOAIAddMediaIntentResponseCode OAIAddMediaIntentResponseCode::getValue() const {
    return m_value;
}

void OAIAddMediaIntentResponseCode::setValue(const OAIAddMediaIntentResponseCode::eOAIAddMediaIntentResponseCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAddMediaIntentResponseCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIAddMediaIntentResponseCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
