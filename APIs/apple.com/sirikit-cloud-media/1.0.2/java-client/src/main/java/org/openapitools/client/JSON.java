/*
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntent.class, new TypeSelector<org.openapitools.client.model.AddMediaIntent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntent", org.openapitools.client.model.AddMediaIntent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandlingConfirmInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandlingHandleInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentHandlingInvocation.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentHandlingInvocation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentHandlingInvocation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandlingInvocation", org.openapitools.client.model.AddMediaIntentHandlingInvocation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentHandlingInvocationResponse.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentHandlingInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentHandlingInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandling.confirm", org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.handle", org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.resolveMediaDestination", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.resolveMediaItems", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("ProtocolException", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandlingConfirmInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandlingHandleInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandlingResolveMediaDestinationInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandlingResolveMediaItemsInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("ProtocolExceptionInvocationResponse", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandlingInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandlingResolveMediaDestinationInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandlingResolveMediaItemsInvocationResponse", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaIntentResponse.class, new TypeSelector<org.openapitools.client.model.AddMediaIntentResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaIntentResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentResponse", org.openapitools.client.model.AddMediaIntentResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaMediaDestinationResolutionResult.class, new TypeSelector<org.openapitools.client.model.AddMediaMediaDestinationResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaMediaDestinationResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaMediaDestinationResolutionResult", org.openapitools.client.model.AddMediaMediaDestinationResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.AddMediaMediaItemResolutionResult.class, new TypeSelector<org.openapitools.client.model.AddMediaMediaItemResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AddMediaMediaItemResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaMediaItemResolutionResult", org.openapitools.client.model.AddMediaMediaItemResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.BooleanResolutionResult.class, new TypeSelector<org.openapitools.client.model.BooleanResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.BooleanResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BooleanResolutionResult", org.openapitools.client.model.BooleanResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Intent.class, new TypeSelector<org.openapitools.client.model.Intent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Intent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntent", org.openapitools.client.model.AddMediaIntent.class);
                        classByDiscriminatorValue.put("PlayMediaIntent", org.openapitools.client.model.PlayMediaIntent.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntent", org.openapitools.client.model.UpdateMediaAffinityIntent.class);
                        classByDiscriminatorValue.put("Intent", org.openapitools.client.model.Intent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.IntentResolutionResult.class, new TypeSelector<org.openapitools.client.model.IntentResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.IntentResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaMediaItemResolutionResult", org.openapitools.client.model.AddMediaMediaItemResolutionResult.class);
                        classByDiscriminatorValue.put("BooleanResolutionResult", org.openapitools.client.model.BooleanResolutionResult.class);
                        classByDiscriminatorValue.put("MediaAffinityTypeResolutionResult", org.openapitools.client.model.MediaAffinityTypeResolutionResult.class);
                        classByDiscriminatorValue.put("PlayMediaMediaItemResolutionResult", org.openapitools.client.model.PlayMediaMediaItemResolutionResult.class);
                        classByDiscriminatorValue.put("PlaybackQueueLocationResolutionResult", org.openapitools.client.model.PlaybackQueueLocationResolutionResult.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityMediaItemResolutionResult", org.openapitools.client.model.UpdateMediaAffinityMediaItemResolutionResult.class);
                        classByDiscriminatorValue.put("AddMediaMediaDestinationResolutionResult", org.openapitools.client.model.AddMediaMediaDestinationResolutionResult.class);
                        classByDiscriminatorValue.put("PlaybackRepeatModeResolutionResult", org.openapitools.client.model.PlaybackRepeatModeResolutionResult.class);
                        classByDiscriminatorValue.put("IntentResolutionResult", org.openapitools.client.model.IntentResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.IntentResponse.class, new TypeSelector<org.openapitools.client.model.IntentResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.IntentResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentResponse", org.openapitools.client.model.AddMediaIntentResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentResponse", org.openapitools.client.model.PlayMediaIntentResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentResponse", org.openapitools.client.model.UpdateMediaAffinityIntentResponse.class);
                        classByDiscriminatorValue.put("IntentResponse", org.openapitools.client.model.IntentResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Invocation.class, new TypeSelector<org.openapitools.client.model.Invocation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Invocation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandling.confirm", org.openapitools.client.model.AddMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.handle", org.openapitools.client.model.AddMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.resolveMediaDestination", org.openapitools.client.model.AddMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.resolveMediaItems", org.openapitools.client.model.AddMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.handle", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolveMediaItems", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlayShuffled", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlaybackQueueLocation", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlaybackRepeatMode", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolveResumePlayback", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.handle", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.resolveAffinityType", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.resolveMediaItems", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation.class);
                        classByDiscriminatorValue.put("Invocation", org.openapitools.client.model.Invocation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.InvocationResponse.class, new TypeSelector<org.openapitools.client.model.InvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.InvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddMediaIntentHandling.confirm", org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.handle", org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.resolveMediaDestination", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.class);
                        classByDiscriminatorValue.put("AddMediaIntentHandling.resolveMediaItems", org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.handle", org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolveMediaItems", org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlayShuffled", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlaybackQueueLocation", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlaybackRepeatMode", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolveResumePlayback", org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse.class);
                        classByDiscriminatorValue.put("ProtocolException", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.handle", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.resolveAffinityType", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.resolveMediaItems", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("InvocationResponse", org.openapitools.client.model.InvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MediaAffinityTypeResolutionResult.class, new TypeSelector<org.openapitools.client.model.MediaAffinityTypeResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MediaAffinityTypeResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MediaAffinityTypeResolutionResult", org.openapitools.client.model.MediaAffinityTypeResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MediaDestination.class, new TypeSelector<org.openapitools.client.model.MediaDestination>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MediaDestination> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("library", org.openapitools.client.model.MediaDestinationLibrary.class);
                        classByDiscriminatorValue.put("playlist", org.openapitools.client.model.MediaDestinationPlaylist.class);
                        classByDiscriminatorValue.put("MediaDestination", org.openapitools.client.model.MediaDestination.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "mediaDestinationType"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MediaDestinationLibrary.class, new TypeSelector<org.openapitools.client.model.MediaDestinationLibrary>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MediaDestinationLibrary> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MediaDestinationLibrary", org.openapitools.client.model.MediaDestinationLibrary.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "mediaDestinationType"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MediaDestinationPlaylist.class, new TypeSelector<org.openapitools.client.model.MediaDestinationPlaylist>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MediaDestinationPlaylist> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MediaDestinationPlaylist", org.openapitools.client.model.MediaDestinationPlaylist.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "mediaDestinationType"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntent.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntent", org.openapitools.client.model.PlayMediaIntent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingHandleInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingInvocation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingInvocation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingInvocation", org.openapitools.client.model.PlayMediaIntentHandlingInvocation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.handle", org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolveMediaItems", org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlayShuffled", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlaybackQueueLocation", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolvePlaybackRepeatMode", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandling.resolveResumePlayback", org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse.class);
                        classByDiscriminatorValue.put("ProtocolException", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingHandleInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolveMediaItemsInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse.class);
                        classByDiscriminatorValue.put("ProtocolExceptionInvocationResponse", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolveMediaItemsInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse", org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaIntentResponse.class, new TypeSelector<org.openapitools.client.model.PlayMediaIntentResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaIntentResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaIntentResponse", org.openapitools.client.model.PlayMediaIntentResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlayMediaMediaItemResolutionResult.class, new TypeSelector<org.openapitools.client.model.PlayMediaMediaItemResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlayMediaMediaItemResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlayMediaMediaItemResolutionResult", org.openapitools.client.model.PlayMediaMediaItemResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlaybackQueueLocationResolutionResult.class, new TypeSelector<org.openapitools.client.model.PlaybackQueueLocationResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlaybackQueueLocationResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlaybackQueueLocationResolutionResult", org.openapitools.client.model.PlaybackQueueLocationResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.PlaybackRepeatModeResolutionResult.class, new TypeSelector<org.openapitools.client.model.PlaybackRepeatModeResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.PlaybackRepeatModeResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PlaybackRepeatModeResolutionResult", org.openapitools.client.model.PlaybackRepeatModeResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ProtocolExceptionInvocationResponse.class, new TypeSelector<org.openapitools.client.model.ProtocolExceptionInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ProtocolExceptionInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProtocolExceptionInvocationResponse", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntent.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntent>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntent", org.openapitools.client.model.UpdateMediaAffinityIntent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingHandleInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingInvocation", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocationResponse.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProtocolException", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.handle", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.resolveAffinityType", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandling.resolveMediaItems", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("ProtocolExceptionInvocationResponse", org.openapitools.client.model.ProtocolExceptionInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingHandleInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse.class);
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse", org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "method"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityIntentResponse.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityIntentResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityIntentResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityIntentResponse", org.openapitools.client.model.UpdateMediaAffinityIntentResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UpdateMediaAffinityMediaItemResolutionResult.class, new TypeSelector<org.openapitools.client.model.UpdateMediaAffinityMediaItemResolutionResult>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UpdateMediaAffinityMediaItemResolutionResult> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpdateMediaAffinityMediaItemResolutionResult", org.openapitools.client.model.UpdateMediaAffinityMediaItemResolutionResult.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "class"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentHandlingConfirmInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentHandlingHandleInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentHandlingInvocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentHandlingInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentHandlingResolveMediaItemsInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaIntentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaMediaDestinationResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddMediaMediaItemResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.BooleanResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Constraints.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Content.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContentAttributes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContentAttributesArtwork.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DateComponents.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DateComponentsRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExecutionMetrics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExplicitDateComponents.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigIntent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigIntentAddMedia.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigIntentPlayMedia.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigIntentUpdateMediaAffinity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigMedia.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigMediaQueues.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigMediaQueuesPlayMedia.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionConfigMediaQueuesUpdateActivity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExtensionEndpointConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MediaAffinityTypeResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MediaDestinationLibrary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MediaDestinationPlaylist.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MediaItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MediaSearch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaControl.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaControlActivity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaControlCommandSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingHandleInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingInvocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingResolveMediaItemsInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaIntentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaMediaItemResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayMediaRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlaybackQueueLocationResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlaybackRepeatModeResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PlayerContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProtocolException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProtocolExceptionInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Queue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.QueueControlMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.QueueInsertPointer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.QueuePlayPointer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Session.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateActivityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateActivityResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntentHandlingHandleInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntentHandlingInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityIntentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UpdateMediaAffinityMediaItemResolutionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.UserActivity.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
