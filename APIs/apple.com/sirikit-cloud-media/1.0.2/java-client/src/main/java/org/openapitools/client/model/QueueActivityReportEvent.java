/*
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets QueueActivityReportEvent
 */
@JsonAdapter(QueueActivityReportEvent.Adapter.class)
public enum QueueActivityReportEvent {
  
  PLAYING_ELAPSED("local.playing.elapsed"),
  
  PLAYING_PAUSED("local.playing.paused"),
  
  PLAYING_CONTINUED("local.playing.continued"),
  
  PLAYING_SCRUB("local.playing.scrub"),
  
  PLAYING_FAST_FORWARD("local.playing.fastForward"),
  
  PLAYING_FAST_REWIND("local.playing.fastRewind"),
  
  PLAYING_TRANSITIONED_NATURALLY("local.playing.transitioned.naturally"),
  
  PLAYING_TRANSITIONED_SKIP_NEXT("local.playing.transitioned.skip_next"),
  
  PLAYING_TRANSITIONED_SKIP_PREVIOUS("local.playing.transitioned.skip_previous"),
  
  PLAYING_TRANSITIONED_QUEUE_REPLACED("local.playing.transitioned.queue_replaced"),
  
  STOPPED_NATURALLY("local.stopped.naturally"),
  
  STOPPED_SKIP_PAST_END("local.stopped.skip_past_end"),
  
  COMMAND_LIKE("local.command.like"),
  
  COMMAND_DISLIKE("local.command.dislike"),
  
  COMMAND_BOOKMARK("local.command.bookmark");

  private String value;

  QueueActivityReportEvent(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static QueueActivityReportEvent fromValue(String value) {
    for (QueueActivityReportEvent b : QueueActivityReportEvent.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<QueueActivityReportEvent> {
    @Override
    public void write(final JsonWriter jsonWriter, final QueueActivityReportEvent enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public QueueActivityReportEvent read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return QueueActivityReportEvent.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    QueueActivityReportEvent.fromValue(value);
  }
}

