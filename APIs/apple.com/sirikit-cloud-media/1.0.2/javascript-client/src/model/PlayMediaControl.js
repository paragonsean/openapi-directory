/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlayMediaControlActivity from './PlayMediaControlActivity';
import PlayMediaControlCommandSet from './PlayMediaControlCommandSet';
import PlayMediaControlScheme from './PlayMediaControlScheme';

/**
 * The PlayMediaControl model module.
 * @module model/PlayMediaControl
 * @version 1.0.2
 */
class PlayMediaControl {
    /**
     * Constructs a new <code>PlayMediaControl</code>.
     * @alias module:model/PlayMediaControl
     * @param scheme {module:model/PlayMediaControlScheme} 
     */
    constructor(scheme) { 
        
        PlayMediaControl.initialize(this, scheme);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, scheme) { 
        obj['scheme'] = scheme;
    }

    /**
     * Constructs a <code>PlayMediaControl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayMediaControl} obj Optional instance to populate.
     * @return {module:model/PlayMediaControl} The populated <code>PlayMediaControl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayMediaControl();

            if (data.hasOwnProperty('activity')) {
                obj['activity'] = PlayMediaControlActivity.constructFromObject(data['activity']);
            }
            if (data.hasOwnProperty('commands')) {
                obj['commands'] = PlayMediaControlCommandSet.constructFromObject(data['commands']);
            }
            if (data.hasOwnProperty('scheme')) {
                obj['scheme'] = PlayMediaControlScheme.constructFromObject(data['scheme']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayMediaControl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayMediaControl</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PlayMediaControl.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `activity`
        if (data['activity']) { // data not null
          PlayMediaControlActivity.validateJSON(data['activity']);
        }
        // validate the optional field `commands`
        if (data['commands']) { // data not null
          PlayMediaControlCommandSet.validateJSON(data['commands']);
        }

        return true;
    }


}

PlayMediaControl.RequiredProperties = ["scheme"];

/**
 * @member {module:model/PlayMediaControlActivity} activity
 */
PlayMediaControl.prototype['activity'] = undefined;

/**
 * @member {module:model/PlayMediaControlCommandSet} commands
 */
PlayMediaControl.prototype['commands'] = undefined;

/**
 * @member {module:model/PlayMediaControlScheme} scheme
 */
PlayMediaControl.prototype['scheme'] = undefined;






export default PlayMediaControl;

