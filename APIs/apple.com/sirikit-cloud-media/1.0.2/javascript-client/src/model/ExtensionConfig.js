/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExtensionConfigIntent from './ExtensionConfigIntent';
import ExtensionConfigMedia from './ExtensionConfigMedia';

/**
 * The ExtensionConfig model module.
 * @module model/ExtensionConfig
 * @version 1.0.2
 */
class ExtensionConfig {
    /**
     * Constructs a new <code>ExtensionConfig</code>.
     * @alias module:model/ExtensionConfig
     * @param intent {module:model/ExtensionConfigIntent} 
     * @param media {module:model/ExtensionConfigMedia} 
     * @param version {String} 
     */
    constructor(intent, media, version) { 
        
        ExtensionConfig.initialize(this, intent, media, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, intent, media, version) { 
        obj['intent'] = intent;
        obj['media'] = media;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>ExtensionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtensionConfig} obj Optional instance to populate.
     * @return {module:model/ExtensionConfig} The populated <code>ExtensionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtensionConfig();

            if (data.hasOwnProperty('hdr')) {
                obj['hdr'] = ApiClient.convertToType(data['hdr'], Object);
            }
            if (data.hasOwnProperty('intent')) {
                obj['intent'] = ExtensionConfigIntent.constructFromObject(data['intent']);
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ExtensionConfigMedia.constructFromObject(data['media']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtensionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtensionConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExtensionConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `intent`
        if (data['intent']) { // data not null
          ExtensionConfigIntent.validateJSON(data['intent']);
        }
        // validate the optional field `media`
        if (data['media']) { // data not null
          ExtensionConfigMedia.validateJSON(data['media']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

ExtensionConfig.RequiredProperties = ["intent", "media", "version"];

/**
 * @member {Object} hdr
 */
ExtensionConfig.prototype['hdr'] = undefined;

/**
 * @member {module:model/ExtensionConfigIntent} intent
 */
ExtensionConfig.prototype['intent'] = undefined;

/**
 * @member {module:model/ExtensionConfigMedia} media
 */
ExtensionConfig.prototype['media'] = undefined;

/**
 * @member {String} url
 */
ExtensionConfig.prototype['url'] = undefined;

/**
 * @member {String} version
 */
ExtensionConfig.prototype['version'] = undefined;






export default ExtensionConfig;

