/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueueInsertPointer model module.
 * @module model/QueueInsertPointer
 * @version 1.0.2
 */
class QueueInsertPointer {
    /**
     * Constructs a new <code>QueueInsertPointer</code>.
     * @alias module:model/QueueInsertPointer
     */
    constructor() { 
        
        QueueInsertPointer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['replace'] = false;
    }

    /**
     * Constructs a <code>QueueInsertPointer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueueInsertPointer} obj Optional instance to populate.
     * @return {module:model/QueueInsertPointer} The populated <code>QueueInsertPointer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueueInsertPointer();

            if (data.hasOwnProperty('afterIdentifier')) {
                obj['afterIdentifier'] = ApiClient.convertToType(data['afterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('replace')) {
                obj['replace'] = ApiClient.convertToType(data['replace'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueueInsertPointer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueueInsertPointer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['afterIdentifier'] && !(typeof data['afterIdentifier'] === 'string' || data['afterIdentifier'] instanceof String)) {
            throw new Error("Expected the field `afterIdentifier` to be a primitive type in the JSON string but got " + data['afterIdentifier']);
        }

        return true;
    }


}



/**
 * @member {String} afterIdentifier
 */
QueueInsertPointer.prototype['afterIdentifier'] = undefined;

/**
 * @member {Boolean} replace
 * @default false
 */
QueueInsertPointer.prototype['replace'] = false;






export default QueueInsertPointer;

