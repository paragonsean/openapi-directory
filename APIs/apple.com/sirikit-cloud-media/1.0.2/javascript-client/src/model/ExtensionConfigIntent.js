/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExtensionConfigIntentAddMedia from './ExtensionConfigIntentAddMedia';
import ExtensionConfigIntentPlayMedia from './ExtensionConfigIntentPlayMedia';
import ExtensionConfigIntentUpdateMediaAffinity from './ExtensionConfigIntentUpdateMediaAffinity';

/**
 * The ExtensionConfigIntent model module.
 * @module model/ExtensionConfigIntent
 * @version 1.0.2
 */
class ExtensionConfigIntent {
    /**
     * Constructs a new <code>ExtensionConfigIntent</code>.
     * @alias module:model/ExtensionConfigIntent
     * @param playMedia {module:model/ExtensionConfigIntentPlayMedia} 
     */
    constructor(playMedia) { 
        
        ExtensionConfigIntent.initialize(this, playMedia);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, playMedia) { 
        obj['playMedia'] = playMedia;
    }

    /**
     * Constructs a <code>ExtensionConfigIntent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtensionConfigIntent} obj Optional instance to populate.
     * @return {module:model/ExtensionConfigIntent} The populated <code>ExtensionConfigIntent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtensionConfigIntent();

            if (data.hasOwnProperty('addMedia')) {
                obj['addMedia'] = ExtensionConfigIntentAddMedia.constructFromObject(data['addMedia']);
            }
            if (data.hasOwnProperty('hdr')) {
                obj['hdr'] = ApiClient.convertToType(data['hdr'], Object);
            }
            if (data.hasOwnProperty('playMedia')) {
                obj['playMedia'] = ExtensionConfigIntentPlayMedia.constructFromObject(data['playMedia']);
            }
            if (data.hasOwnProperty('updateMediaAffinity')) {
                obj['updateMediaAffinity'] = ExtensionConfigIntentUpdateMediaAffinity.constructFromObject(data['updateMediaAffinity']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtensionConfigIntent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtensionConfigIntent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExtensionConfigIntent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `addMedia`
        if (data['addMedia']) { // data not null
          ExtensionConfigIntentAddMedia.validateJSON(data['addMedia']);
        }
        // validate the optional field `playMedia`
        if (data['playMedia']) { // data not null
          ExtensionConfigIntentPlayMedia.validateJSON(data['playMedia']);
        }
        // validate the optional field `updateMediaAffinity`
        if (data['updateMediaAffinity']) { // data not null
          ExtensionConfigIntentUpdateMediaAffinity.validateJSON(data['updateMediaAffinity']);
        }

        return true;
    }


}

ExtensionConfigIntent.RequiredProperties = ["playMedia"];

/**
 * @member {module:model/ExtensionConfigIntentAddMedia} addMedia
 */
ExtensionConfigIntent.prototype['addMedia'] = undefined;

/**
 * @member {Object} hdr
 */
ExtensionConfigIntent.prototype['hdr'] = undefined;

/**
 * @member {module:model/ExtensionConfigIntentPlayMedia} playMedia
 */
ExtensionConfigIntent.prototype['playMedia'] = undefined;

/**
 * @member {module:model/ExtensionConfigIntentUpdateMediaAffinity} updateMediaAffinity
 */
ExtensionConfigIntent.prototype['updateMediaAffinity'] = undefined;






export default ExtensionConfigIntent;

