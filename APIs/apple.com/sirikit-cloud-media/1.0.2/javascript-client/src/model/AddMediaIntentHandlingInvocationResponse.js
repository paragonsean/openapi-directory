/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddMediaIntentHandlingConfirmInvocationResponse from './AddMediaIntentHandlingConfirmInvocationResponse';
import AddMediaIntentHandlingHandleInvocationResponse from './AddMediaIntentHandlingHandleInvocationResponse';
import AddMediaIntentHandlingResolveMediaDestinationInvocationResponse from './AddMediaIntentHandlingResolveMediaDestinationInvocationResponse';
import AddMediaIntentHandlingResolveMediaItemsInvocationResponse from './AddMediaIntentHandlingResolveMediaItemsInvocationResponse';
import ExecutionMetrics from './ExecutionMetrics';
import ProtocolException from './ProtocolException';
import ProtocolExceptionInvocationResponse from './ProtocolExceptionInvocationResponse';

/**
 * The AddMediaIntentHandlingInvocationResponse model module.
 * @module model/AddMediaIntentHandlingInvocationResponse
 * @version 1.0.2
 */
class AddMediaIntentHandlingInvocationResponse {
    /**
     * Constructs a new <code>AddMediaIntentHandlingInvocationResponse</code>.
     * @alias module:model/AddMediaIntentHandlingInvocationResponse
     * @param {(module:model/AddMediaIntentHandlingConfirmInvocationResponse|module:model/AddMediaIntentHandlingHandleInvocationResponse|module:model/AddMediaIntentHandlingResolveMediaDestinationInvocationResponse|module:model/AddMediaIntentHandlingResolveMediaItemsInvocationResponse|module:model/ProtocolExceptionInvocationResponse)} instance The actual instance to initialize AddMediaIntentHandlingInvocationResponse.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "AddMediaIntentHandlingResolveMediaItemsInvocationResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AddMediaIntentHandlingResolveMediaItemsInvocationResponse.validateJSON(instance); // throw an exception if no match
                // create AddMediaIntentHandlingResolveMediaItemsInvocationResponse from JS object
                this.actualInstance = AddMediaIntentHandlingResolveMediaItemsInvocationResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AddMediaIntentHandlingResolveMediaItemsInvocationResponse
            errorMessages.push("Failed to construct AddMediaIntentHandlingResolveMediaItemsInvocationResponse: " + err)
        }

        try {
            if (typeof instance === "AddMediaIntentHandlingResolveMediaDestinationInvocationResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.validateJSON(instance); // throw an exception if no match
                // create AddMediaIntentHandlingResolveMediaDestinationInvocationResponse from JS object
                this.actualInstance = AddMediaIntentHandlingResolveMediaDestinationInvocationResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AddMediaIntentHandlingResolveMediaDestinationInvocationResponse
            errorMessages.push("Failed to construct AddMediaIntentHandlingResolveMediaDestinationInvocationResponse: " + err)
        }

        try {
            if (typeof instance === "AddMediaIntentHandlingConfirmInvocationResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AddMediaIntentHandlingConfirmInvocationResponse.validateJSON(instance); // throw an exception if no match
                // create AddMediaIntentHandlingConfirmInvocationResponse from JS object
                this.actualInstance = AddMediaIntentHandlingConfirmInvocationResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AddMediaIntentHandlingConfirmInvocationResponse
            errorMessages.push("Failed to construct AddMediaIntentHandlingConfirmInvocationResponse: " + err)
        }

        try {
            if (typeof instance === "AddMediaIntentHandlingHandleInvocationResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AddMediaIntentHandlingHandleInvocationResponse.validateJSON(instance); // throw an exception if no match
                // create AddMediaIntentHandlingHandleInvocationResponse from JS object
                this.actualInstance = AddMediaIntentHandlingHandleInvocationResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AddMediaIntentHandlingHandleInvocationResponse
            errorMessages.push("Failed to construct AddMediaIntentHandlingHandleInvocationResponse: " + err)
        }

        try {
            if (typeof instance === "ProtocolExceptionInvocationResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ProtocolExceptionInvocationResponse.validateJSON(instance); // throw an exception if no match
                // create ProtocolExceptionInvocationResponse from JS object
                this.actualInstance = ProtocolExceptionInvocationResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ProtocolExceptionInvocationResponse
            errorMessages.push("Failed to construct ProtocolExceptionInvocationResponse: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `AddMediaIntentHandlingInvocationResponse` with oneOf schemas AddMediaIntentHandlingConfirmInvocationResponse, AddMediaIntentHandlingHandleInvocationResponse, AddMediaIntentHandlingResolveMediaDestinationInvocationResponse, AddMediaIntentHandlingResolveMediaItemsInvocationResponse, ProtocolExceptionInvocationResponse. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `AddMediaIntentHandlingInvocationResponse` with oneOf schemas AddMediaIntentHandlingConfirmInvocationResponse, AddMediaIntentHandlingHandleInvocationResponse, AddMediaIntentHandlingResolveMediaDestinationInvocationResponse, AddMediaIntentHandlingResolveMediaItemsInvocationResponse, ProtocolExceptionInvocationResponse. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>AddMediaIntentHandlingInvocationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddMediaIntentHandlingInvocationResponse} obj Optional instance to populate.
     * @return {module:model/AddMediaIntentHandlingInvocationResponse} The populated <code>AddMediaIntentHandlingInvocationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        return new AddMediaIntentHandlingInvocationResponse(data);
    }

    /**
     * Gets the actual instance, which can be <code>AddMediaIntentHandlingConfirmInvocationResponse</code>, <code>AddMediaIntentHandlingHandleInvocationResponse</code>, <code>AddMediaIntentHandlingResolveMediaDestinationInvocationResponse</code>, <code>AddMediaIntentHandlingResolveMediaItemsInvocationResponse</code>, <code>ProtocolExceptionInvocationResponse</code>.
     * @return {(module:model/AddMediaIntentHandlingConfirmInvocationResponse|module:model/AddMediaIntentHandlingHandleInvocationResponse|module:model/AddMediaIntentHandlingResolveMediaDestinationInvocationResponse|module:model/AddMediaIntentHandlingResolveMediaItemsInvocationResponse|module:model/ProtocolExceptionInvocationResponse)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AddMediaIntentHandlingConfirmInvocationResponse</code>, <code>AddMediaIntentHandlingHandleInvocationResponse</code>, <code>AddMediaIntentHandlingResolveMediaDestinationInvocationResponse</code>, <code>AddMediaIntentHandlingResolveMediaItemsInvocationResponse</code>, <code>ProtocolExceptionInvocationResponse</code>.
     * @param {(module:model/AddMediaIntentHandlingConfirmInvocationResponse|module:model/AddMediaIntentHandlingHandleInvocationResponse|module:model/AddMediaIntentHandlingResolveMediaDestinationInvocationResponse|module:model/AddMediaIntentHandlingResolveMediaItemsInvocationResponse|module:model/ProtocolExceptionInvocationResponse)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = AddMediaIntentHandlingInvocationResponse.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of AddMediaIntentHandlingInvocationResponse from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/AddMediaIntentHandlingInvocationResponse} An instance of AddMediaIntentHandlingInvocationResponse.
     */
    static fromJSON = function(json_string){
        return AddMediaIntentHandlingInvocationResponse.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {String} method
 */
AddMediaIntentHandlingInvocationResponse.prototype['method'] = undefined;

/**
 * @member {Object} result
 */
AddMediaIntentHandlingInvocationResponse.prototype['result'] = undefined;

/**
 * @member {String} debug
 */
AddMediaIntentHandlingInvocationResponse.prototype['debug'] = undefined;

/**
 * @member {module:model/ExecutionMetrics} metrics
 */
AddMediaIntentHandlingInvocationResponse.prototype['metrics'] = undefined;

/**
 * @member {module:model/ProtocolException} exception
 */
AddMediaIntentHandlingInvocationResponse.prototype['exception'] = undefined;


AddMediaIntentHandlingInvocationResponse.OneOf = ["AddMediaIntentHandlingConfirmInvocationResponse", "AddMediaIntentHandlingHandleInvocationResponse", "AddMediaIntentHandlingResolveMediaDestinationInvocationResponse", "AddMediaIntentHandlingResolveMediaItemsInvocationResponse", "ProtocolExceptionInvocationResponse"];

export default AddMediaIntentHandlingInvocationResponse;

