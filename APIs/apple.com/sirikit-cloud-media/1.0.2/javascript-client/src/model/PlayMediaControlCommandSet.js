/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlayMediaControlCommandSet model module.
 * @module model/PlayMediaControlCommandSet
 * @version 1.0.2
 */
class PlayMediaControlCommandSet {
    /**
     * Constructs a new <code>PlayMediaControlCommandSet</code>.
     * @alias module:model/PlayMediaControlCommandSet
     */
    constructor() { 
        
        PlayMediaControlCommandSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayMediaControlCommandSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayMediaControlCommandSet} obj Optional instance to populate.
     * @return {module:model/PlayMediaControlCommandSet} The populated <code>PlayMediaControlCommandSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayMediaControlCommandSet();

            if (data.hasOwnProperty('bookmarkTrack')) {
                obj['bookmarkTrack'] = ApiClient.convertToType(data['bookmarkTrack'], 'Boolean');
            }
            if (data.hasOwnProperty('dislikeTrack')) {
                obj['dislikeTrack'] = ApiClient.convertToType(data['dislikeTrack'], 'Boolean');
            }
            if (data.hasOwnProperty('likeTrack')) {
                obj['likeTrack'] = ApiClient.convertToType(data['likeTrack'], 'Boolean');
            }
            if (data.hasOwnProperty('nextTrack')) {
                obj['nextTrack'] = ApiClient.convertToType(data['nextTrack'], 'Boolean');
            }
            if (data.hasOwnProperty('preferSkipBackward')) {
                obj['preferSkipBackward'] = ApiClient.convertToType(data['preferSkipBackward'], 'Boolean');
            }
            if (data.hasOwnProperty('preferSkipForward')) {
                obj['preferSkipForward'] = ApiClient.convertToType(data['preferSkipForward'], 'Boolean');
            }
            if (data.hasOwnProperty('previousTrack')) {
                obj['previousTrack'] = ApiClient.convertToType(data['previousTrack'], 'Boolean');
            }
            if (data.hasOwnProperty('seekToPlaybackPosition')) {
                obj['seekToPlaybackPosition'] = ApiClient.convertToType(data['seekToPlaybackPosition'], 'Boolean');
            }
            if (data.hasOwnProperty('skipBackward')) {
                obj['skipBackward'] = ApiClient.convertToType(data['skipBackward'], 'Boolean');
            }
            if (data.hasOwnProperty('skipForward')) {
                obj['skipForward'] = ApiClient.convertToType(data['skipForward'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayMediaControlCommandSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayMediaControlCommandSet</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Boolean} bookmarkTrack
 */
PlayMediaControlCommandSet.prototype['bookmarkTrack'] = undefined;

/**
 * @member {Boolean} dislikeTrack
 */
PlayMediaControlCommandSet.prototype['dislikeTrack'] = undefined;

/**
 * @member {Boolean} likeTrack
 */
PlayMediaControlCommandSet.prototype['likeTrack'] = undefined;

/**
 * @member {Boolean} nextTrack
 */
PlayMediaControlCommandSet.prototype['nextTrack'] = undefined;

/**
 * @member {Boolean} preferSkipBackward
 */
PlayMediaControlCommandSet.prototype['preferSkipBackward'] = undefined;

/**
 * @member {Boolean} preferSkipForward
 */
PlayMediaControlCommandSet.prototype['preferSkipForward'] = undefined;

/**
 * @member {Boolean} previousTrack
 */
PlayMediaControlCommandSet.prototype['previousTrack'] = undefined;

/**
 * @member {Boolean} seekToPlaybackPosition
 */
PlayMediaControlCommandSet.prototype['seekToPlaybackPosition'] = undefined;

/**
 * @member {Boolean} skipBackward
 */
PlayMediaControlCommandSet.prototype['skipBackward'] = undefined;

/**
 * @member {Boolean} skipForward
 */
PlayMediaControlCommandSet.prototype['skipForward'] = undefined;






export default PlayMediaControlCommandSet;

