/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProtocolExceptionReason from './ProtocolExceptionReason';

/**
 * The ProtocolException model module.
 * @module model/ProtocolException
 * @version 1.0.2
 */
class ProtocolException {
    /**
     * Constructs a new <code>ProtocolException</code>.
     * @alias module:model/ProtocolException
     * @param reason {module:model/ProtocolExceptionReason} 
     */
    constructor(reason) { 
        
        ProtocolException.initialize(this, reason);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reason) { 
        obj['reason'] = reason;
        obj['retryWithDelay'] = -1;
    }

    /**
     * Constructs a <code>ProtocolException</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProtocolException} obj Optional instance to populate.
     * @return {module:model/ProtocolException} The populated <code>ProtocolException</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProtocolException();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('methodIndex')) {
                obj['methodIndex'] = ApiClient.convertToType(data['methodIndex'], 'Number');
            }
            if (data.hasOwnProperty('methodName')) {
                obj['methodName'] = ApiClient.convertToType(data['methodName'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ProtocolExceptionReason.constructFromObject(data['reason']);
            }
            if (data.hasOwnProperty('retryWithDelay')) {
                obj['retryWithDelay'] = ApiClient.convertToType(data['retryWithDelay'], 'Number');
            }
            if (data.hasOwnProperty('trace')) {
                obj['trace'] = ApiClient.convertToType(data['trace'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProtocolException</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProtocolException</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProtocolException.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['methodName'] && !(typeof data['methodName'] === 'string' || data['methodName'] instanceof String)) {
            throw new Error("Expected the field `methodName` to be a primitive type in the JSON string but got " + data['methodName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['trace'])) {
            throw new Error("Expected the field `trace` to be an array in the JSON data but got " + data['trace']);
        }

        return true;
    }


}

ProtocolException.RequiredProperties = ["reason"];

/**
 * @member {Number} code
 */
ProtocolException.prototype['code'] = undefined;

/**
 * @member {Number} methodIndex
 */
ProtocolException.prototype['methodIndex'] = undefined;

/**
 * @member {String} methodName
 */
ProtocolException.prototype['methodName'] = undefined;

/**
 * @member {module:model/ProtocolExceptionReason} reason
 */
ProtocolException.prototype['reason'] = undefined;

/**
 * @member {Number} retryWithDelay
 * @default -1
 */
ProtocolException.prototype['retryWithDelay'] = -1;

/**
 * @member {Array.<String>} trace
 */
ProtocolException.prototype['trace'] = undefined;






export default ProtocolException;

