/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IntentResolutionResult from './IntentResolutionResult';
import MediaItem from './MediaItem';
import UpdateMediaAffinityMediaItemUnsupportedReason from './UpdateMediaAffinityMediaItemUnsupportedReason';

/**
 * The UpdateMediaAffinityMediaItemResolutionResult model module.
 * @module model/UpdateMediaAffinityMediaItemResolutionResult
 * @version 1.0.2
 */
class UpdateMediaAffinityMediaItemResolutionResult {
    /**
     * Constructs a new <code>UpdateMediaAffinityMediaItemResolutionResult</code>.
     * @alias module:model/UpdateMediaAffinityMediaItemResolutionResult
     * @extends module:model/IntentResolutionResult
     * @implements module:model/IntentResolutionResult
     */
    constructor() { 
        IntentResolutionResult.initialize(this, _class);
        UpdateMediaAffinityMediaItemResolutionResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateMediaAffinityMediaItemResolutionResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateMediaAffinityMediaItemResolutionResult} obj Optional instance to populate.
     * @return {module:model/UpdateMediaAffinityMediaItemResolutionResult} The populated <code>UpdateMediaAffinityMediaItemResolutionResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateMediaAffinityMediaItemResolutionResult();
            IntentResolutionResult.constructFromObject(data, obj);
            IntentResolutionResult.constructFromObject(data, obj);

            if (data.hasOwnProperty('class')) {
                obj['class'] = ApiClient.convertToType(data['class'], 'String');
            }
            if (data.hasOwnProperty('confirmationRequired')) {
                obj['confirmationRequired'] = ApiClient.convertToType(data['confirmationRequired'], Object);
            }
            if (data.hasOwnProperty('disambiguation')) {
                obj['disambiguation'] = ApiClient.convertToType(data['disambiguation'], Object);
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], Object);
            }
            if (data.hasOwnProperty('unsupported')) {
                obj['unsupported'] = ApiClient.convertToType(data['unsupported'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateMediaAffinityMediaItemResolutionResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateMediaAffinityMediaItemResolutionResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['class'] && !(typeof data['class'] === 'string' || data['class'] instanceof String)) {
            throw new Error("Expected the field `class` to be a primitive type in the JSON string but got " + data['class']);
        }
        // validate the optional field `confirmationRequired`
        if (data['confirmationRequired']) { // data not null
          Object.validateJSON(data['confirmationRequired']);
        }
        // validate the optional field `disambiguation`
        if (data['disambiguation']) { // data not null
          Object.validateJSON(data['disambiguation']);
        }
        // validate the optional field `success`
        if (data['success']) { // data not null
          Object.validateJSON(data['success']);
        }
        // validate the optional field `unsupported`
        if (data['unsupported']) { // data not null
          Object.validateJSON(data['unsupported']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdateMediaAffinityMediaItemResolutionResult.ClassEnum} class
 */
UpdateMediaAffinityMediaItemResolutionResult.prototype['class'] = undefined;

/**
 * @member {Object} confirmationRequired
 */
UpdateMediaAffinityMediaItemResolutionResult.prototype['confirmationRequired'] = undefined;

/**
 * @member {Object} disambiguation
 */
UpdateMediaAffinityMediaItemResolutionResult.prototype['disambiguation'] = undefined;

/**
 * @member {Object} success
 */
UpdateMediaAffinityMediaItemResolutionResult.prototype['success'] = undefined;

/**
 * @member {Object} unsupported
 */
UpdateMediaAffinityMediaItemResolutionResult.prototype['unsupported'] = undefined;


// Implement IntentResolutionResult interface:
/**
 * @member {String} class
 */
IntentResolutionResult.prototype['class'] = undefined;
/**
 * @member {Object} needsValue
 */
IntentResolutionResult.prototype['needsValue'] = undefined;
/**
 * @member {Object} notRequired
 */
IntentResolutionResult.prototype['notRequired'] = undefined;
/**
 * @member {Object} unsupported
 */
IntentResolutionResult.prototype['unsupported'] = undefined;



/**
 * Allowed values for the <code>class</code> property.
 * @enum {String}
 * @readonly
 */
UpdateMediaAffinityMediaItemResolutionResult['ClassEnum'] = {

    /**
     * value: "UpdateMediaAffinityMediaItemResolutionResult"
     * @const
     */
    "UpdateMediaAffinityMediaItemResolutionResult": "UpdateMediaAffinityMediaItemResolutionResult"
};



export default UpdateMediaAffinityMediaItemResolutionResult;

