/**
 * SiriKit Cloud Media
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserActivity model module.
 * @module model/UserActivity
 * @version 1.0.2
 */
class UserActivity {
    /**
     * Constructs a new <code>UserActivity</code>.
     * @alias module:model/UserActivity
     * @param activityType {String} 
     * @param version {String} 
     */
    constructor(activityType, version) { 
        
        UserActivity.initialize(this, activityType, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activityType, version) { 
        obj['activityType'] = activityType;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>UserActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserActivity} obj Optional instance to populate.
     * @return {module:model/UserActivity} The populated <code>UserActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserActivity();

            if (data.hasOwnProperty('activityType')) {
                obj['activityType'] = ApiClient.convertToType(data['activityType'], 'String');
            }
            if (data.hasOwnProperty('persistentIdentifier')) {
                obj['persistentIdentifier'] = ApiClient.convertToType(data['persistentIdentifier'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('userInfo')) {
                obj['userInfo'] = ApiClient.convertToType(data['userInfo'], Object);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserActivity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserActivity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['activityType'] && !(typeof data['activityType'] === 'string' || data['activityType'] instanceof String)) {
            throw new Error("Expected the field `activityType` to be a primitive type in the JSON string but got " + data['activityType']);
        }
        // ensure the json data is a string
        if (data['persistentIdentifier'] && !(typeof data['persistentIdentifier'] === 'string' || data['persistentIdentifier'] instanceof String)) {
            throw new Error("Expected the field `persistentIdentifier` to be a primitive type in the JSON string but got " + data['persistentIdentifier']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

UserActivity.RequiredProperties = ["activityType", "version"];

/**
 * @member {String} activityType
 */
UserActivity.prototype['activityType'] = undefined;

/**
 * @member {String} persistentIdentifier
 */
UserActivity.prototype['persistentIdentifier'] = undefined;

/**
 * @member {String} title
 */
UserActivity.prototype['title'] = undefined;

/**
 * @member {Object} userInfo
 */
UserActivity.prototype['userInfo'] = undefined;

/**
 * @member {String} version
 */
UserActivity.prototype['version'] = undefined;






export default UserActivity;

