# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayMediaControlCommandSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bookmark_track: bool=None, dislike_track: bool=None, like_track: bool=None, next_track: bool=None, prefer_skip_backward: bool=None, prefer_skip_forward: bool=None, previous_track: bool=None, seek_to_playback_position: bool=None, skip_backward: bool=None, skip_forward: bool=None):
        """PlayMediaControlCommandSet - a model defined in OpenAPI

        :param bookmark_track: The bookmark_track of this PlayMediaControlCommandSet.
        :param dislike_track: The dislike_track of this PlayMediaControlCommandSet.
        :param like_track: The like_track of this PlayMediaControlCommandSet.
        :param next_track: The next_track of this PlayMediaControlCommandSet.
        :param prefer_skip_backward: The prefer_skip_backward of this PlayMediaControlCommandSet.
        :param prefer_skip_forward: The prefer_skip_forward of this PlayMediaControlCommandSet.
        :param previous_track: The previous_track of this PlayMediaControlCommandSet.
        :param seek_to_playback_position: The seek_to_playback_position of this PlayMediaControlCommandSet.
        :param skip_backward: The skip_backward of this PlayMediaControlCommandSet.
        :param skip_forward: The skip_forward of this PlayMediaControlCommandSet.
        """
        self.openapi_types = {
            'bookmark_track': bool,
            'dislike_track': bool,
            'like_track': bool,
            'next_track': bool,
            'prefer_skip_backward': bool,
            'prefer_skip_forward': bool,
            'previous_track': bool,
            'seek_to_playback_position': bool,
            'skip_backward': bool,
            'skip_forward': bool
        }

        self.attribute_map = {
            'bookmark_track': 'bookmarkTrack',
            'dislike_track': 'dislikeTrack',
            'like_track': 'likeTrack',
            'next_track': 'nextTrack',
            'prefer_skip_backward': 'preferSkipBackward',
            'prefer_skip_forward': 'preferSkipForward',
            'previous_track': 'previousTrack',
            'seek_to_playback_position': 'seekToPlaybackPosition',
            'skip_backward': 'skipBackward',
            'skip_forward': 'skipForward'
        }

        self._bookmark_track = bookmark_track
        self._dislike_track = dislike_track
        self._like_track = like_track
        self._next_track = next_track
        self._prefer_skip_backward = prefer_skip_backward
        self._prefer_skip_forward = prefer_skip_forward
        self._previous_track = previous_track
        self._seek_to_playback_position = seek_to_playback_position
        self._skip_backward = skip_backward
        self._skip_forward = skip_forward

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayMediaControlCommandSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayMediaControlCommandSet of this PlayMediaControlCommandSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bookmark_track(self):
        """Gets the bookmark_track of this PlayMediaControlCommandSet.


        :return: The bookmark_track of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._bookmark_track

    @bookmark_track.setter
    def bookmark_track(self, bookmark_track):
        """Sets the bookmark_track of this PlayMediaControlCommandSet.


        :param bookmark_track: The bookmark_track of this PlayMediaControlCommandSet.
        :type bookmark_track: bool
        """

        self._bookmark_track = bookmark_track

    @property
    def dislike_track(self):
        """Gets the dislike_track of this PlayMediaControlCommandSet.


        :return: The dislike_track of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._dislike_track

    @dislike_track.setter
    def dislike_track(self, dislike_track):
        """Sets the dislike_track of this PlayMediaControlCommandSet.


        :param dislike_track: The dislike_track of this PlayMediaControlCommandSet.
        :type dislike_track: bool
        """

        self._dislike_track = dislike_track

    @property
    def like_track(self):
        """Gets the like_track of this PlayMediaControlCommandSet.


        :return: The like_track of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._like_track

    @like_track.setter
    def like_track(self, like_track):
        """Sets the like_track of this PlayMediaControlCommandSet.


        :param like_track: The like_track of this PlayMediaControlCommandSet.
        :type like_track: bool
        """

        self._like_track = like_track

    @property
    def next_track(self):
        """Gets the next_track of this PlayMediaControlCommandSet.


        :return: The next_track of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._next_track

    @next_track.setter
    def next_track(self, next_track):
        """Sets the next_track of this PlayMediaControlCommandSet.


        :param next_track: The next_track of this PlayMediaControlCommandSet.
        :type next_track: bool
        """

        self._next_track = next_track

    @property
    def prefer_skip_backward(self):
        """Gets the prefer_skip_backward of this PlayMediaControlCommandSet.


        :return: The prefer_skip_backward of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._prefer_skip_backward

    @prefer_skip_backward.setter
    def prefer_skip_backward(self, prefer_skip_backward):
        """Sets the prefer_skip_backward of this PlayMediaControlCommandSet.


        :param prefer_skip_backward: The prefer_skip_backward of this PlayMediaControlCommandSet.
        :type prefer_skip_backward: bool
        """

        self._prefer_skip_backward = prefer_skip_backward

    @property
    def prefer_skip_forward(self):
        """Gets the prefer_skip_forward of this PlayMediaControlCommandSet.


        :return: The prefer_skip_forward of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._prefer_skip_forward

    @prefer_skip_forward.setter
    def prefer_skip_forward(self, prefer_skip_forward):
        """Sets the prefer_skip_forward of this PlayMediaControlCommandSet.


        :param prefer_skip_forward: The prefer_skip_forward of this PlayMediaControlCommandSet.
        :type prefer_skip_forward: bool
        """

        self._prefer_skip_forward = prefer_skip_forward

    @property
    def previous_track(self):
        """Gets the previous_track of this PlayMediaControlCommandSet.


        :return: The previous_track of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._previous_track

    @previous_track.setter
    def previous_track(self, previous_track):
        """Sets the previous_track of this PlayMediaControlCommandSet.


        :param previous_track: The previous_track of this PlayMediaControlCommandSet.
        :type previous_track: bool
        """

        self._previous_track = previous_track

    @property
    def seek_to_playback_position(self):
        """Gets the seek_to_playback_position of this PlayMediaControlCommandSet.


        :return: The seek_to_playback_position of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._seek_to_playback_position

    @seek_to_playback_position.setter
    def seek_to_playback_position(self, seek_to_playback_position):
        """Sets the seek_to_playback_position of this PlayMediaControlCommandSet.


        :param seek_to_playback_position: The seek_to_playback_position of this PlayMediaControlCommandSet.
        :type seek_to_playback_position: bool
        """

        self._seek_to_playback_position = seek_to_playback_position

    @property
    def skip_backward(self):
        """Gets the skip_backward of this PlayMediaControlCommandSet.


        :return: The skip_backward of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._skip_backward

    @skip_backward.setter
    def skip_backward(self, skip_backward):
        """Sets the skip_backward of this PlayMediaControlCommandSet.


        :param skip_backward: The skip_backward of this PlayMediaControlCommandSet.
        :type skip_backward: bool
        """

        self._skip_backward = skip_backward

    @property
    def skip_forward(self):
        """Gets the skip_forward of this PlayMediaControlCommandSet.


        :return: The skip_forward of this PlayMediaControlCommandSet.
        :rtype: bool
        """
        return self._skip_forward

    @skip_forward.setter
    def skip_forward(self, skip_forward):
        """Sets the skip_forward of this PlayMediaControlCommandSet.


        :param skip_forward: The skip_forward of this PlayMediaControlCommandSet.
        :type skip_forward: bool
        """

        self._skip_forward = skip_forward
