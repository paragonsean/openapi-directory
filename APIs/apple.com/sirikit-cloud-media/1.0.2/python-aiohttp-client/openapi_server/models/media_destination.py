# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MediaDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_destination_type: str=None):
        """MediaDestination - a model defined in OpenAPI

        :param media_destination_type: The media_destination_type of this MediaDestination.
        """
        self.openapi_types = {
            'media_destination_type': str
        }

        self.attribute_map = {
            'media_destination_type': 'mediaDestinationType'
        }

        self._media_destination_type = media_destination_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaDestination of this MediaDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_destination_type(self):
        """Gets the media_destination_type of this MediaDestination.


        :return: The media_destination_type of this MediaDestination.
        :rtype: str
        """
        return self._media_destination_type

    @media_destination_type.setter
    def media_destination_type(self, media_destination_type):
        """Sets the media_destination_type of this MediaDestination.


        :param media_destination_type: The media_destination_type of this MediaDestination.
        :type media_destination_type: str
        """
        allowed_values = ["library", "playlist"]  # noqa: E501
        if media_destination_type not in allowed_values:
            raise ValueError(
                "Invalid value for `media_destination_type` ({0}), must be one of {1}"
                .format(media_destination_type, allowed_values)
            )

        self._media_destination_type = media_destination_type
