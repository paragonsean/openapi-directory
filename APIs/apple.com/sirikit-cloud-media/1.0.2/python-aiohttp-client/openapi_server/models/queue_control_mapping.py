# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.play_media_control import PlayMediaControl
from openapi_server import util


class QueueControlMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: PlayMediaControl=None):
        """QueueControlMapping - a model defined in OpenAPI

        :param default: The default of this QueueControlMapping.
        """
        self.openapi_types = {
            'default': PlayMediaControl
        }

        self.attribute_map = {
            'default': 'default'
        }

        self._default = default

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueueControlMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueueControlMapping of this QueueControlMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this QueueControlMapping.


        :return: The default of this QueueControlMapping.
        :rtype: PlayMediaControl
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this QueueControlMapping.


        :param default: The default of this QueueControlMapping.
        :type default: PlayMediaControl
        """
        if default is None:
            raise ValueError("Invalid value for `default`, must not be `None`")

        self._default = default
