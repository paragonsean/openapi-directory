# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueuePlayPointer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_identifier: str=None, offset_in_millis: int=None):
        """QueuePlayPointer - a model defined in OpenAPI

        :param content_identifier: The content_identifier of this QueuePlayPointer.
        :param offset_in_millis: The offset_in_millis of this QueuePlayPointer.
        """
        self.openapi_types = {
            'content_identifier': str,
            'offset_in_millis': int
        }

        self.attribute_map = {
            'content_identifier': 'contentIdentifier',
            'offset_in_millis': 'offsetInMillis'
        }

        self._content_identifier = content_identifier
        self._offset_in_millis = offset_in_millis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueuePlayPointer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueuePlayPointer of this QueuePlayPointer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_identifier(self):
        """Gets the content_identifier of this QueuePlayPointer.


        :return: The content_identifier of this QueuePlayPointer.
        :rtype: str
        """
        return self._content_identifier

    @content_identifier.setter
    def content_identifier(self, content_identifier):
        """Sets the content_identifier of this QueuePlayPointer.


        :param content_identifier: The content_identifier of this QueuePlayPointer.
        :type content_identifier: str
        """
        if content_identifier is not None and len(content_identifier) > 1000:
            raise ValueError("Invalid value for `content_identifier`, length must be less than or equal to `1000`")
        if content_identifier is not None and len(content_identifier) < 1:
            raise ValueError("Invalid value for `content_identifier`, length must be greater than or equal to `1`")

        self._content_identifier = content_identifier

    @property
    def offset_in_millis(self):
        """Gets the offset_in_millis of this QueuePlayPointer.


        :return: The offset_in_millis of this QueuePlayPointer.
        :rtype: int
        """
        return self._offset_in_millis

    @offset_in_millis.setter
    def offset_in_millis(self, offset_in_millis):
        """Sets the offset_in_millis of this QueuePlayPointer.


        :param offset_in_millis: The offset_in_millis of this QueuePlayPointer.
        :type offset_in_millis: int
        """

        self._offset_in_millis = offset_in_millis
