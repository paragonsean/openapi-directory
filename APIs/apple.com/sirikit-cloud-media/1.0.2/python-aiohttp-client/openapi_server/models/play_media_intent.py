# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.intent import Intent
from openapi_server.models.media_item import MediaItem
from openapi_server.models.media_search import MediaSearch
from openapi_server.models.playback_queue_location import PlaybackQueueLocation
from openapi_server.models.playback_repeat_mode import PlaybackRepeatMode
from openapi_server import util


class PlayMediaIntent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _class: str=None, media_items: List[MediaItem]=None, media_search: MediaSearch=None, play_shuffled: bool=None, playback_queue_location: PlaybackQueueLocation=None, playback_repeat_mode: PlaybackRepeatMode=None, playback_speed: float=None, resume_playback: bool=None, identifier: str=None):
        """PlayMediaIntent - a model defined in OpenAPI

        :param _class: The _class of this PlayMediaIntent.
        :param media_items: The media_items of this PlayMediaIntent.
        :param media_search: The media_search of this PlayMediaIntent.
        :param play_shuffled: The play_shuffled of this PlayMediaIntent.
        :param playback_queue_location: The playback_queue_location of this PlayMediaIntent.
        :param playback_repeat_mode: The playback_repeat_mode of this PlayMediaIntent.
        :param playback_speed: The playback_speed of this PlayMediaIntent.
        :param resume_playback: The resume_playback of this PlayMediaIntent.
        :param identifier: The identifier of this PlayMediaIntent.
        """
        self.openapi_types = {
            '_class': str,
            'media_items': List[MediaItem],
            'media_search': MediaSearch,
            'play_shuffled': bool,
            'playback_queue_location': PlaybackQueueLocation,
            'playback_repeat_mode': PlaybackRepeatMode,
            'playback_speed': float,
            'resume_playback': bool,
            'identifier': str
        }

        self.attribute_map = {
            '_class': 'class',
            'media_items': 'mediaItems',
            'media_search': 'mediaSearch',
            'play_shuffled': 'playShuffled',
            'playback_queue_location': 'playbackQueueLocation',
            'playback_repeat_mode': 'playbackRepeatMode',
            'playback_speed': 'playbackSpeed',
            'resume_playback': 'resumePlayback',
            'identifier': 'identifier'
        }

        self.__class = _class
        self._media_items = media_items
        self._media_search = media_search
        self._play_shuffled = play_shuffled
        self._playback_queue_location = playback_queue_location
        self._playback_repeat_mode = playback_repeat_mode
        self._playback_speed = playback_speed
        self._resume_playback = resume_playback
        self._identifier = identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayMediaIntent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayMediaIntent of this PlayMediaIntent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _class(self):
        """Gets the _class of this PlayMediaIntent.


        :return: The _class of this PlayMediaIntent.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this PlayMediaIntent.


        :param _class: The _class of this PlayMediaIntent.
        :type _class: str
        """
        allowed_values = ["PlayMediaIntent"]  # noqa: E501
        if _class not in allowed_values:
            raise ValueError(
                "Invalid value for `_class` ({0}), must be one of {1}"
                .format(_class, allowed_values)
            )

        self.__class = _class

    @property
    def media_items(self):
        """Gets the media_items of this PlayMediaIntent.


        :return: The media_items of this PlayMediaIntent.
        :rtype: List[MediaItem]
        """
        return self._media_items

    @media_items.setter
    def media_items(self, media_items):
        """Sets the media_items of this PlayMediaIntent.


        :param media_items: The media_items of this PlayMediaIntent.
        :type media_items: List[MediaItem]
        """

        self._media_items = media_items

    @property
    def media_search(self):
        """Gets the media_search of this PlayMediaIntent.


        :return: The media_search of this PlayMediaIntent.
        :rtype: MediaSearch
        """
        return self._media_search

    @media_search.setter
    def media_search(self, media_search):
        """Sets the media_search of this PlayMediaIntent.


        :param media_search: The media_search of this PlayMediaIntent.
        :type media_search: MediaSearch
        """

        self._media_search = media_search

    @property
    def play_shuffled(self):
        """Gets the play_shuffled of this PlayMediaIntent.


        :return: The play_shuffled of this PlayMediaIntent.
        :rtype: bool
        """
        return self._play_shuffled

    @play_shuffled.setter
    def play_shuffled(self, play_shuffled):
        """Sets the play_shuffled of this PlayMediaIntent.


        :param play_shuffled: The play_shuffled of this PlayMediaIntent.
        :type play_shuffled: bool
        """

        self._play_shuffled = play_shuffled

    @property
    def playback_queue_location(self):
        """Gets the playback_queue_location of this PlayMediaIntent.


        :return: The playback_queue_location of this PlayMediaIntent.
        :rtype: PlaybackQueueLocation
        """
        return self._playback_queue_location

    @playback_queue_location.setter
    def playback_queue_location(self, playback_queue_location):
        """Sets the playback_queue_location of this PlayMediaIntent.


        :param playback_queue_location: The playback_queue_location of this PlayMediaIntent.
        :type playback_queue_location: PlaybackQueueLocation
        """

        self._playback_queue_location = playback_queue_location

    @property
    def playback_repeat_mode(self):
        """Gets the playback_repeat_mode of this PlayMediaIntent.


        :return: The playback_repeat_mode of this PlayMediaIntent.
        :rtype: PlaybackRepeatMode
        """
        return self._playback_repeat_mode

    @playback_repeat_mode.setter
    def playback_repeat_mode(self, playback_repeat_mode):
        """Sets the playback_repeat_mode of this PlayMediaIntent.


        :param playback_repeat_mode: The playback_repeat_mode of this PlayMediaIntent.
        :type playback_repeat_mode: PlaybackRepeatMode
        """

        self._playback_repeat_mode = playback_repeat_mode

    @property
    def playback_speed(self):
        """Gets the playback_speed of this PlayMediaIntent.


        :return: The playback_speed of this PlayMediaIntent.
        :rtype: float
        """
        return self._playback_speed

    @playback_speed.setter
    def playback_speed(self, playback_speed):
        """Sets the playback_speed of this PlayMediaIntent.


        :param playback_speed: The playback_speed of this PlayMediaIntent.
        :type playback_speed: float
        """

        self._playback_speed = playback_speed

    @property
    def resume_playback(self):
        """Gets the resume_playback of this PlayMediaIntent.


        :return: The resume_playback of this PlayMediaIntent.
        :rtype: bool
        """
        return self._resume_playback

    @resume_playback.setter
    def resume_playback(self, resume_playback):
        """Sets the resume_playback of this PlayMediaIntent.


        :param resume_playback: The resume_playback of this PlayMediaIntent.
        :type resume_playback: bool
        """

        self._resume_playback = resume_playback

    @property
    def identifier(self):
        """Gets the identifier of this PlayMediaIntent.


        :return: The identifier of this PlayMediaIntent.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this PlayMediaIntent.


        :param identifier: The identifier of this PlayMediaIntent.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")

        self._identifier = identifier
