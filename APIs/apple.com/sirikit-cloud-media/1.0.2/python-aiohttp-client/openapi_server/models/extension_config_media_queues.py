# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extension_config_media_queues_play_media import ExtensionConfigMediaQueuesPlayMedia
from openapi_server.models.extension_config_media_queues_update_activity import ExtensionConfigMediaQueuesUpdateActivity
from openapi_server import util


class ExtensionConfigMediaQueues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hdr: object=None, play_media: ExtensionConfigMediaQueuesPlayMedia=None, update_activity: ExtensionConfigMediaQueuesUpdateActivity=None):
        """ExtensionConfigMediaQueues - a model defined in OpenAPI

        :param hdr: The hdr of this ExtensionConfigMediaQueues.
        :param play_media: The play_media of this ExtensionConfigMediaQueues.
        :param update_activity: The update_activity of this ExtensionConfigMediaQueues.
        """
        self.openapi_types = {
            'hdr': object,
            'play_media': ExtensionConfigMediaQueuesPlayMedia,
            'update_activity': ExtensionConfigMediaQueuesUpdateActivity
        }

        self.attribute_map = {
            'hdr': 'hdr',
            'play_media': 'playMedia',
            'update_activity': 'updateActivity'
        }

        self._hdr = hdr
        self._play_media = play_media
        self._update_activity = update_activity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtensionConfigMediaQueues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtensionConfig_media_queues of this ExtensionConfigMediaQueues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hdr(self):
        """Gets the hdr of this ExtensionConfigMediaQueues.


        :return: The hdr of this ExtensionConfigMediaQueues.
        :rtype: object
        """
        return self._hdr

    @hdr.setter
    def hdr(self, hdr):
        """Sets the hdr of this ExtensionConfigMediaQueues.


        :param hdr: The hdr of this ExtensionConfigMediaQueues.
        :type hdr: object
        """

        self._hdr = hdr

    @property
    def play_media(self):
        """Gets the play_media of this ExtensionConfigMediaQueues.


        :return: The play_media of this ExtensionConfigMediaQueues.
        :rtype: ExtensionConfigMediaQueuesPlayMedia
        """
        return self._play_media

    @play_media.setter
    def play_media(self, play_media):
        """Sets the play_media of this ExtensionConfigMediaQueues.


        :param play_media: The play_media of this ExtensionConfigMediaQueues.
        :type play_media: ExtensionConfigMediaQueuesPlayMedia
        """

        self._play_media = play_media

    @property
    def update_activity(self):
        """Gets the update_activity of this ExtensionConfigMediaQueues.


        :return: The update_activity of this ExtensionConfigMediaQueues.
        :rtype: ExtensionConfigMediaQueuesUpdateActivity
        """
        return self._update_activity

    @update_activity.setter
    def update_activity(self, update_activity):
        """Sets the update_activity of this ExtensionConfigMediaQueues.


        :param update_activity: The update_activity of this ExtensionConfigMediaQueues.
        :type update_activity: ExtensionConfigMediaQueuesUpdateActivity
        """

        self._update_activity = update_activity
