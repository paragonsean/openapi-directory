# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.intent_resolution_result import IntentResolutionResult
from openapi_server.models.playback_queue_location import PlaybackQueueLocation
from openapi_server import util


class PlaybackQueueLocationResolutionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _class: str=None, confirmation_required: object=None, success: object=None, needs_value: object=None, not_required: object=None, unsupported: object=None):
        """PlaybackQueueLocationResolutionResult - a model defined in OpenAPI

        :param _class: The _class of this PlaybackQueueLocationResolutionResult.
        :param confirmation_required: The confirmation_required of this PlaybackQueueLocationResolutionResult.
        :param success: The success of this PlaybackQueueLocationResolutionResult.
        :param needs_value: The needs_value of this PlaybackQueueLocationResolutionResult.
        :param not_required: The not_required of this PlaybackQueueLocationResolutionResult.
        :param unsupported: The unsupported of this PlaybackQueueLocationResolutionResult.
        """
        self.openapi_types = {
            '_class': str,
            'confirmation_required': object,
            'success': object,
            'needs_value': object,
            'not_required': object,
            'unsupported': object
        }

        self.attribute_map = {
            '_class': 'class',
            'confirmation_required': 'confirmationRequired',
            'success': 'success',
            'needs_value': 'needsValue',
            'not_required': 'notRequired',
            'unsupported': 'unsupported'
        }

        self.__class = _class
        self._confirmation_required = confirmation_required
        self._success = success
        self._needs_value = needs_value
        self._not_required = not_required
        self._unsupported = unsupported

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaybackQueueLocationResolutionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaybackQueueLocationResolutionResult of this PlaybackQueueLocationResolutionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _class(self):
        """Gets the _class of this PlaybackQueueLocationResolutionResult.


        :return: The _class of this PlaybackQueueLocationResolutionResult.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this PlaybackQueueLocationResolutionResult.


        :param _class: The _class of this PlaybackQueueLocationResolutionResult.
        :type _class: str
        """
        allowed_values = ["PlaybackQueueLocationResolutionResult"]  # noqa: E501
        if _class not in allowed_values:
            raise ValueError(
                "Invalid value for `_class` ({0}), must be one of {1}"
                .format(_class, allowed_values)
            )

        self.__class = _class

    @property
    def confirmation_required(self):
        """Gets the confirmation_required of this PlaybackQueueLocationResolutionResult.


        :return: The confirmation_required of this PlaybackQueueLocationResolutionResult.
        :rtype: object
        """
        return self._confirmation_required

    @confirmation_required.setter
    def confirmation_required(self, confirmation_required):
        """Sets the confirmation_required of this PlaybackQueueLocationResolutionResult.


        :param confirmation_required: The confirmation_required of this PlaybackQueueLocationResolutionResult.
        :type confirmation_required: object
        """

        self._confirmation_required = confirmation_required

    @property
    def success(self):
        """Gets the success of this PlaybackQueueLocationResolutionResult.


        :return: The success of this PlaybackQueueLocationResolutionResult.
        :rtype: object
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this PlaybackQueueLocationResolutionResult.


        :param success: The success of this PlaybackQueueLocationResolutionResult.
        :type success: object
        """

        self._success = success

    @property
    def needs_value(self):
        """Gets the needs_value of this PlaybackQueueLocationResolutionResult.


        :return: The needs_value of this PlaybackQueueLocationResolutionResult.
        :rtype: object
        """
        return self._needs_value

    @needs_value.setter
    def needs_value(self, needs_value):
        """Sets the needs_value of this PlaybackQueueLocationResolutionResult.


        :param needs_value: The needs_value of this PlaybackQueueLocationResolutionResult.
        :type needs_value: object
        """

        self._needs_value = needs_value

    @property
    def not_required(self):
        """Gets the not_required of this PlaybackQueueLocationResolutionResult.


        :return: The not_required of this PlaybackQueueLocationResolutionResult.
        :rtype: object
        """
        return self._not_required

    @not_required.setter
    def not_required(self, not_required):
        """Sets the not_required of this PlaybackQueueLocationResolutionResult.


        :param not_required: The not_required of this PlaybackQueueLocationResolutionResult.
        :type not_required: object
        """

        self._not_required = not_required

    @property
    def unsupported(self):
        """Gets the unsupported of this PlaybackQueueLocationResolutionResult.


        :return: The unsupported of this PlaybackQueueLocationResolutionResult.
        :rtype: object
        """
        return self._unsupported

    @unsupported.setter
    def unsupported(self, unsupported):
        """Sets the unsupported of this PlaybackQueueLocationResolutionResult.


        :param unsupported: The unsupported of this PlaybackQueueLocationResolutionResult.
        :type unsupported: object
        """

        self._unsupported = unsupported
