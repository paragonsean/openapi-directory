/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.AppStoreVersionLocalizationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppStoreVersionLocalizationsApi', function() {
    describe('appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated', function() {
      it('should call appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated
        //instance.appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated', function() {
      it('should call appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated
        //instance.appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionLocalizationsCreateInstance', function() {
      it('should call appStoreVersionLocalizationsCreateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionLocalizationsCreateInstance
        //instance.appStoreVersionLocalizationsCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionLocalizationsDeleteInstance', function() {
      it('should call appStoreVersionLocalizationsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionLocalizationsDeleteInstance
        //instance.appStoreVersionLocalizationsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionLocalizationsGetInstance', function() {
      it('should call appStoreVersionLocalizationsGetInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionLocalizationsGetInstance
        //instance.appStoreVersionLocalizationsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionLocalizationsUpdateInstance', function() {
      it('should call appStoreVersionLocalizationsUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionLocalizationsUpdateInstance
        //instance.appStoreVersionLocalizationsUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
