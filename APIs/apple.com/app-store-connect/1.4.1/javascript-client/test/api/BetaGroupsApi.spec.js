/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.BetaGroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BetaGroupsApi', function() {
    describe('betaGroupsAppGetToOneRelated', function() {
      it('should call betaGroupsAppGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test betaGroupsAppGetToOneRelated
        //instance.betaGroupsAppGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBetaTestersCreateToManyRelationship', function() {
      it('should call betaGroupsBetaTestersCreateToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBetaTestersCreateToManyRelationship
        //instance.betaGroupsBetaTestersCreateToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBetaTestersDeleteToManyRelationship', function() {
      it('should call betaGroupsBetaTestersDeleteToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBetaTestersDeleteToManyRelationship
        //instance.betaGroupsBetaTestersDeleteToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBetaTestersGetToManyRelated', function() {
      it('should call betaGroupsBetaTestersGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBetaTestersGetToManyRelated
        //instance.betaGroupsBetaTestersGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBetaTestersGetToManyRelationship', function() {
      it('should call betaGroupsBetaTestersGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBetaTestersGetToManyRelationship
        //instance.betaGroupsBetaTestersGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBuildsCreateToManyRelationship', function() {
      it('should call betaGroupsBuildsCreateToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBuildsCreateToManyRelationship
        //instance.betaGroupsBuildsCreateToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBuildsDeleteToManyRelationship', function() {
      it('should call betaGroupsBuildsDeleteToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBuildsDeleteToManyRelationship
        //instance.betaGroupsBuildsDeleteToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBuildsGetToManyRelated', function() {
      it('should call betaGroupsBuildsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBuildsGetToManyRelated
        //instance.betaGroupsBuildsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsBuildsGetToManyRelationship', function() {
      it('should call betaGroupsBuildsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test betaGroupsBuildsGetToManyRelationship
        //instance.betaGroupsBuildsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsCreateInstance', function() {
      it('should call betaGroupsCreateInstance successfully', function(done) {
        //uncomment below and update the code to test betaGroupsCreateInstance
        //instance.betaGroupsCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsDeleteInstance', function() {
      it('should call betaGroupsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test betaGroupsDeleteInstance
        //instance.betaGroupsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsGetCollection', function() {
      it('should call betaGroupsGetCollection successfully', function(done) {
        //uncomment below and update the code to test betaGroupsGetCollection
        //instance.betaGroupsGetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsGetInstance', function() {
      it('should call betaGroupsGetInstance successfully', function(done) {
        //uncomment below and update the code to test betaGroupsGetInstance
        //instance.betaGroupsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('betaGroupsUpdateInstance', function() {
      it('should call betaGroupsUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test betaGroupsUpdateInstance
        //instance.betaGroupsUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
