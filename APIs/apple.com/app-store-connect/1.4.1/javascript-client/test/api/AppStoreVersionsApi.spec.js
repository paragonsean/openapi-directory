/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.AppStoreVersionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppStoreVersionsApi', function() {
    describe('appStoreVersionsAgeRatingDeclarationGetToOneRelated', function() {
      it('should call appStoreVersionsAgeRatingDeclarationGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsAgeRatingDeclarationGetToOneRelated
        //instance.appStoreVersionsAgeRatingDeclarationGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsAppStoreReviewDetailGetToOneRelated', function() {
      it('should call appStoreVersionsAppStoreReviewDetailGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsAppStoreReviewDetailGetToOneRelated
        //instance.appStoreVersionsAppStoreReviewDetailGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated', function() {
      it('should call appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated
        //instance.appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated', function() {
      it('should call appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated
        //instance.appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsAppStoreVersionSubmissionGetToOneRelated', function() {
      it('should call appStoreVersionsAppStoreVersionSubmissionGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsAppStoreVersionSubmissionGetToOneRelated
        //instance.appStoreVersionsAppStoreVersionSubmissionGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsBuildGetToOneRelated', function() {
      it('should call appStoreVersionsBuildGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsBuildGetToOneRelated
        //instance.appStoreVersionsBuildGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsBuildGetToOneRelationship', function() {
      it('should call appStoreVersionsBuildGetToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsBuildGetToOneRelationship
        //instance.appStoreVersionsBuildGetToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsBuildUpdateToOneRelationship', function() {
      it('should call appStoreVersionsBuildUpdateToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsBuildUpdateToOneRelationship
        //instance.appStoreVersionsBuildUpdateToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsCreateInstance', function() {
      it('should call appStoreVersionsCreateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsCreateInstance
        //instance.appStoreVersionsCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsDeleteInstance', function() {
      it('should call appStoreVersionsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsDeleteInstance
        //instance.appStoreVersionsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsGetInstance', function() {
      it('should call appStoreVersionsGetInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsGetInstance
        //instance.appStoreVersionsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsIdfaDeclarationGetToOneRelated', function() {
      it('should call appStoreVersionsIdfaDeclarationGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsIdfaDeclarationGetToOneRelated
        //instance.appStoreVersionsIdfaDeclarationGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsRoutingAppCoverageGetToOneRelated', function() {
      it('should call appStoreVersionsRoutingAppCoverageGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsRoutingAppCoverageGetToOneRelated
        //instance.appStoreVersionsRoutingAppCoverageGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionsUpdateInstance', function() {
      it('should call appStoreVersionsUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionsUpdateInstance
        //instance.appStoreVersionsUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
