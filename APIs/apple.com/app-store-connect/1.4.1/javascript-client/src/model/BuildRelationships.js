/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppEncryptionDeclarationRelationshipsApp from './AppEncryptionDeclarationRelationshipsApp';
import AppStoreReviewDetailRelationshipsAppStoreVersion from './AppStoreReviewDetailRelationshipsAppStoreVersion';
import BetaGroupRelationshipsBetaTesters from './BetaGroupRelationshipsBetaTesters';
import BuildRelationshipsAppEncryptionDeclaration from './BuildRelationshipsAppEncryptionDeclaration';
import BuildRelationshipsBetaAppReviewSubmission from './BuildRelationshipsBetaAppReviewSubmission';
import BuildRelationshipsBetaBuildLocalizations from './BuildRelationshipsBetaBuildLocalizations';
import BuildRelationshipsBuildBetaDetail from './BuildRelationshipsBuildBetaDetail';
import BuildRelationshipsIcons from './BuildRelationshipsIcons';
import BuildRelationshipsPreReleaseVersion from './BuildRelationshipsPreReleaseVersion';

/**
 * The BuildRelationships model module.
 * @module model/BuildRelationships
 * @version 1.4.1
 */
class BuildRelationships {
    /**
     * Constructs a new <code>BuildRelationships</code>.
     * @alias module:model/BuildRelationships
     */
    constructor() { 
        
        BuildRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildRelationships} obj Optional instance to populate.
     * @return {module:model/BuildRelationships} The populated <code>BuildRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildRelationships();

            if (data.hasOwnProperty('app')) {
                obj['app'] = AppEncryptionDeclarationRelationshipsApp.constructFromObject(data['app']);
            }
            if (data.hasOwnProperty('appEncryptionDeclaration')) {
                obj['appEncryptionDeclaration'] = BuildRelationshipsAppEncryptionDeclaration.constructFromObject(data['appEncryptionDeclaration']);
            }
            if (data.hasOwnProperty('appStoreVersion')) {
                obj['appStoreVersion'] = AppStoreReviewDetailRelationshipsAppStoreVersion.constructFromObject(data['appStoreVersion']);
            }
            if (data.hasOwnProperty('betaAppReviewSubmission')) {
                obj['betaAppReviewSubmission'] = BuildRelationshipsBetaAppReviewSubmission.constructFromObject(data['betaAppReviewSubmission']);
            }
            if (data.hasOwnProperty('betaBuildLocalizations')) {
                obj['betaBuildLocalizations'] = BuildRelationshipsBetaBuildLocalizations.constructFromObject(data['betaBuildLocalizations']);
            }
            if (data.hasOwnProperty('buildBetaDetail')) {
                obj['buildBetaDetail'] = BuildRelationshipsBuildBetaDetail.constructFromObject(data['buildBetaDetail']);
            }
            if (data.hasOwnProperty('icons')) {
                obj['icons'] = BuildRelationshipsIcons.constructFromObject(data['icons']);
            }
            if (data.hasOwnProperty('individualTesters')) {
                obj['individualTesters'] = BetaGroupRelationshipsBetaTesters.constructFromObject(data['individualTesters']);
            }
            if (data.hasOwnProperty('preReleaseVersion')) {
                obj['preReleaseVersion'] = BuildRelationshipsPreReleaseVersion.constructFromObject(data['preReleaseVersion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `app`
        if (data['app']) { // data not null
          AppEncryptionDeclarationRelationshipsApp.validateJSON(data['app']);
        }
        // validate the optional field `appEncryptionDeclaration`
        if (data['appEncryptionDeclaration']) { // data not null
          BuildRelationshipsAppEncryptionDeclaration.validateJSON(data['appEncryptionDeclaration']);
        }
        // validate the optional field `appStoreVersion`
        if (data['appStoreVersion']) { // data not null
          AppStoreReviewDetailRelationshipsAppStoreVersion.validateJSON(data['appStoreVersion']);
        }
        // validate the optional field `betaAppReviewSubmission`
        if (data['betaAppReviewSubmission']) { // data not null
          BuildRelationshipsBetaAppReviewSubmission.validateJSON(data['betaAppReviewSubmission']);
        }
        // validate the optional field `betaBuildLocalizations`
        if (data['betaBuildLocalizations']) { // data not null
          BuildRelationshipsBetaBuildLocalizations.validateJSON(data['betaBuildLocalizations']);
        }
        // validate the optional field `buildBetaDetail`
        if (data['buildBetaDetail']) { // data not null
          BuildRelationshipsBuildBetaDetail.validateJSON(data['buildBetaDetail']);
        }
        // validate the optional field `icons`
        if (data['icons']) { // data not null
          BuildRelationshipsIcons.validateJSON(data['icons']);
        }
        // validate the optional field `individualTesters`
        if (data['individualTesters']) { // data not null
          BetaGroupRelationshipsBetaTesters.validateJSON(data['individualTesters']);
        }
        // validate the optional field `preReleaseVersion`
        if (data['preReleaseVersion']) { // data not null
          BuildRelationshipsPreReleaseVersion.validateJSON(data['preReleaseVersion']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppEncryptionDeclarationRelationshipsApp} app
 */
BuildRelationships.prototype['app'] = undefined;

/**
 * @member {module:model/BuildRelationshipsAppEncryptionDeclaration} appEncryptionDeclaration
 */
BuildRelationships.prototype['appEncryptionDeclaration'] = undefined;

/**
 * @member {module:model/AppStoreReviewDetailRelationshipsAppStoreVersion} appStoreVersion
 */
BuildRelationships.prototype['appStoreVersion'] = undefined;

/**
 * @member {module:model/BuildRelationshipsBetaAppReviewSubmission} betaAppReviewSubmission
 */
BuildRelationships.prototype['betaAppReviewSubmission'] = undefined;

/**
 * @member {module:model/BuildRelationshipsBetaBuildLocalizations} betaBuildLocalizations
 */
BuildRelationships.prototype['betaBuildLocalizations'] = undefined;

/**
 * @member {module:model/BuildRelationshipsBuildBetaDetail} buildBetaDetail
 */
BuildRelationships.prototype['buildBetaDetail'] = undefined;

/**
 * @member {module:model/BuildRelationshipsIcons} icons
 */
BuildRelationships.prototype['icons'] = undefined;

/**
 * @member {module:model/BetaGroupRelationshipsBetaTesters} individualTesters
 */
BuildRelationships.prototype['individualTesters'] = undefined;

/**
 * @member {module:model/BuildRelationshipsPreReleaseVersion} preReleaseVersion
 */
BuildRelationships.prototype['preReleaseVersion'] = undefined;






export default BuildRelationships;

