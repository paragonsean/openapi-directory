/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppMediaAssetState from './AppMediaAssetState';
import ImageAsset from './ImageAsset';
import UploadOperation from './UploadOperation';

/**
 * The AppScreenshotAttributes model module.
 * @module model/AppScreenshotAttributes
 * @version 1.4.1
 */
class AppScreenshotAttributes {
    /**
     * Constructs a new <code>AppScreenshotAttributes</code>.
     * @alias module:model/AppScreenshotAttributes
     */
    constructor() { 
        
        AppScreenshotAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppScreenshotAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppScreenshotAttributes} obj Optional instance to populate.
     * @return {module:model/AppScreenshotAttributes} The populated <code>AppScreenshotAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppScreenshotAttributes();

            if (data.hasOwnProperty('assetDeliveryState')) {
                obj['assetDeliveryState'] = AppMediaAssetState.constructFromObject(data['assetDeliveryState']);
            }
            if (data.hasOwnProperty('assetToken')) {
                obj['assetToken'] = ApiClient.convertToType(data['assetToken'], 'String');
            }
            if (data.hasOwnProperty('assetType')) {
                obj['assetType'] = ApiClient.convertToType(data['assetType'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('fileSize')) {
                obj['fileSize'] = ApiClient.convertToType(data['fileSize'], 'Number');
            }
            if (data.hasOwnProperty('imageAsset')) {
                obj['imageAsset'] = ImageAsset.constructFromObject(data['imageAsset']);
            }
            if (data.hasOwnProperty('sourceFileChecksum')) {
                obj['sourceFileChecksum'] = ApiClient.convertToType(data['sourceFileChecksum'], 'String');
            }
            if (data.hasOwnProperty('uploadOperations')) {
                obj['uploadOperations'] = ApiClient.convertToType(data['uploadOperations'], [UploadOperation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppScreenshotAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppScreenshotAttributes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assetDeliveryState`
        if (data['assetDeliveryState']) { // data not null
          AppMediaAssetState.validateJSON(data['assetDeliveryState']);
        }
        // ensure the json data is a string
        if (data['assetToken'] && !(typeof data['assetToken'] === 'string' || data['assetToken'] instanceof String)) {
            throw new Error("Expected the field `assetToken` to be a primitive type in the JSON string but got " + data['assetToken']);
        }
        // ensure the json data is a string
        if (data['assetType'] && !(typeof data['assetType'] === 'string' || data['assetType'] instanceof String)) {
            throw new Error("Expected the field `assetType` to be a primitive type in the JSON string but got " + data['assetType']);
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        // validate the optional field `imageAsset`
        if (data['imageAsset']) { // data not null
          ImageAsset.validateJSON(data['imageAsset']);
        }
        // ensure the json data is a string
        if (data['sourceFileChecksum'] && !(typeof data['sourceFileChecksum'] === 'string' || data['sourceFileChecksum'] instanceof String)) {
            throw new Error("Expected the field `sourceFileChecksum` to be a primitive type in the JSON string but got " + data['sourceFileChecksum']);
        }
        if (data['uploadOperations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['uploadOperations'])) {
                throw new Error("Expected the field `uploadOperations` to be an array in the JSON data but got " + data['uploadOperations']);
            }
            // validate the optional field `uploadOperations` (array)
            for (const item of data['uploadOperations']) {
                UploadOperation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/AppMediaAssetState} assetDeliveryState
 */
AppScreenshotAttributes.prototype['assetDeliveryState'] = undefined;

/**
 * @member {String} assetToken
 */
AppScreenshotAttributes.prototype['assetToken'] = undefined;

/**
 * @member {String} assetType
 */
AppScreenshotAttributes.prototype['assetType'] = undefined;

/**
 * @member {String} fileName
 */
AppScreenshotAttributes.prototype['fileName'] = undefined;

/**
 * @member {Number} fileSize
 */
AppScreenshotAttributes.prototype['fileSize'] = undefined;

/**
 * @member {module:model/ImageAsset} imageAsset
 */
AppScreenshotAttributes.prototype['imageAsset'] = undefined;

/**
 * @member {String} sourceFileChecksum
 */
AppScreenshotAttributes.prototype['sourceFileChecksum'] = undefined;

/**
 * @member {Array.<module:model/UploadOperation>} uploadOperations
 */
AppScreenshotAttributes.prototype['uploadOperations'] = undefined;






export default AppScreenshotAttributes;

