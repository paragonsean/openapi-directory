/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PerfPowerMetricAttributes model module.
 * @module model/PerfPowerMetricAttributes
 * @version 1.4.1
 */
class PerfPowerMetricAttributes {
    /**
     * Constructs a new <code>PerfPowerMetricAttributes</code>.
     * @alias module:model/PerfPowerMetricAttributes
     */
    constructor() { 
        
        PerfPowerMetricAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerfPowerMetricAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerfPowerMetricAttributes} obj Optional instance to populate.
     * @return {module:model/PerfPowerMetricAttributes} The populated <code>PerfPowerMetricAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerfPowerMetricAttributes();

            if (data.hasOwnProperty('deviceType')) {
                obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
            }
            if (data.hasOwnProperty('metricType')) {
                obj['metricType'] = ApiClient.convertToType(data['metricType'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerfPowerMetricAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerfPowerMetricAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deviceType'] && !(typeof data['deviceType'] === 'string' || data['deviceType'] instanceof String)) {
            throw new Error("Expected the field `deviceType` to be a primitive type in the JSON string but got " + data['deviceType']);
        }
        // ensure the json data is a string
        if (data['metricType'] && !(typeof data['metricType'] === 'string' || data['metricType'] instanceof String)) {
            throw new Error("Expected the field `metricType` to be a primitive type in the JSON string but got " + data['metricType']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }

        return true;
    }


}



/**
 * @member {String} deviceType
 */
PerfPowerMetricAttributes.prototype['deviceType'] = undefined;

/**
 * @member {module:model/PerfPowerMetricAttributes.MetricTypeEnum} metricType
 */
PerfPowerMetricAttributes.prototype['metricType'] = undefined;

/**
 * @member {module:model/PerfPowerMetricAttributes.PlatformEnum} platform
 */
PerfPowerMetricAttributes.prototype['platform'] = undefined;





/**
 * Allowed values for the <code>metricType</code> property.
 * @enum {String}
 * @readonly
 */
PerfPowerMetricAttributes['MetricTypeEnum'] = {

    /**
     * value: "DISK"
     * @const
     */
    "DISK": "DISK",

    /**
     * value: "HANG"
     * @const
     */
    "HANG": "HANG",

    /**
     * value: "BATTERY"
     * @const
     */
    "BATTERY": "BATTERY",

    /**
     * value: "LAUNCH"
     * @const
     */
    "LAUNCH": "LAUNCH",

    /**
     * value: "MEMORY"
     * @const
     */
    "MEMORY": "MEMORY",

    /**
     * value: "ANIMATION"
     * @const
     */
    "ANIMATION": "ANIMATION",

    /**
     * value: "TERMINATION"
     * @const
     */
    "TERMINATION": "TERMINATION"
};


/**
 * Allowed values for the <code>platform</code> property.
 * @enum {String}
 * @readonly
 */
PerfPowerMetricAttributes['PlatformEnum'] = {

    /**
     * value: "IOS"
     * @const
     */
    "IOS": "IOS"
};



export default PerfPowerMetricAttributes;

