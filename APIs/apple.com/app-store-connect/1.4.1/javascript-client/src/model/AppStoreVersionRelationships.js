/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppEncryptionDeclarationRelationshipsApp from './AppEncryptionDeclarationRelationshipsApp';
import AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail from './AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail';
import AppStoreVersionRelationshipsAgeRatingDeclaration from './AppStoreVersionRelationshipsAgeRatingDeclaration';
import AppStoreVersionRelationshipsAppStoreVersionLocalizations from './AppStoreVersionRelationshipsAppStoreVersionLocalizations';
import AppStoreVersionRelationshipsAppStoreVersionPhasedRelease from './AppStoreVersionRelationshipsAppStoreVersionPhasedRelease';
import AppStoreVersionRelationshipsAppStoreVersionSubmission from './AppStoreVersionRelationshipsAppStoreVersionSubmission';
import AppStoreVersionRelationshipsBuild from './AppStoreVersionRelationshipsBuild';
import AppStoreVersionRelationshipsIdfaDeclaration from './AppStoreVersionRelationshipsIdfaDeclaration';
import AppStoreVersionRelationshipsRoutingAppCoverage from './AppStoreVersionRelationshipsRoutingAppCoverage';

/**
 * The AppStoreVersionRelationships model module.
 * @module model/AppStoreVersionRelationships
 * @version 1.4.1
 */
class AppStoreVersionRelationships {
    /**
     * Constructs a new <code>AppStoreVersionRelationships</code>.
     * @alias module:model/AppStoreVersionRelationships
     */
    constructor() { 
        
        AppStoreVersionRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppStoreVersionRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppStoreVersionRelationships} obj Optional instance to populate.
     * @return {module:model/AppStoreVersionRelationships} The populated <code>AppStoreVersionRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppStoreVersionRelationships();

            if (data.hasOwnProperty('ageRatingDeclaration')) {
                obj['ageRatingDeclaration'] = AppStoreVersionRelationshipsAgeRatingDeclaration.constructFromObject(data['ageRatingDeclaration']);
            }
            if (data.hasOwnProperty('app')) {
                obj['app'] = AppEncryptionDeclarationRelationshipsApp.constructFromObject(data['app']);
            }
            if (data.hasOwnProperty('appStoreReviewDetail')) {
                obj['appStoreReviewDetail'] = AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail.constructFromObject(data['appStoreReviewDetail']);
            }
            if (data.hasOwnProperty('appStoreVersionLocalizations')) {
                obj['appStoreVersionLocalizations'] = AppStoreVersionRelationshipsAppStoreVersionLocalizations.constructFromObject(data['appStoreVersionLocalizations']);
            }
            if (data.hasOwnProperty('appStoreVersionPhasedRelease')) {
                obj['appStoreVersionPhasedRelease'] = AppStoreVersionRelationshipsAppStoreVersionPhasedRelease.constructFromObject(data['appStoreVersionPhasedRelease']);
            }
            if (data.hasOwnProperty('appStoreVersionSubmission')) {
                obj['appStoreVersionSubmission'] = AppStoreVersionRelationshipsAppStoreVersionSubmission.constructFromObject(data['appStoreVersionSubmission']);
            }
            if (data.hasOwnProperty('build')) {
                obj['build'] = AppStoreVersionRelationshipsBuild.constructFromObject(data['build']);
            }
            if (data.hasOwnProperty('idfaDeclaration')) {
                obj['idfaDeclaration'] = AppStoreVersionRelationshipsIdfaDeclaration.constructFromObject(data['idfaDeclaration']);
            }
            if (data.hasOwnProperty('routingAppCoverage')) {
                obj['routingAppCoverage'] = AppStoreVersionRelationshipsRoutingAppCoverage.constructFromObject(data['routingAppCoverage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppStoreVersionRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppStoreVersionRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ageRatingDeclaration`
        if (data['ageRatingDeclaration']) { // data not null
          AppStoreVersionRelationshipsAgeRatingDeclaration.validateJSON(data['ageRatingDeclaration']);
        }
        // validate the optional field `app`
        if (data['app']) { // data not null
          AppEncryptionDeclarationRelationshipsApp.validateJSON(data['app']);
        }
        // validate the optional field `appStoreReviewDetail`
        if (data['appStoreReviewDetail']) { // data not null
          AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail.validateJSON(data['appStoreReviewDetail']);
        }
        // validate the optional field `appStoreVersionLocalizations`
        if (data['appStoreVersionLocalizations']) { // data not null
          AppStoreVersionRelationshipsAppStoreVersionLocalizations.validateJSON(data['appStoreVersionLocalizations']);
        }
        // validate the optional field `appStoreVersionPhasedRelease`
        if (data['appStoreVersionPhasedRelease']) { // data not null
          AppStoreVersionRelationshipsAppStoreVersionPhasedRelease.validateJSON(data['appStoreVersionPhasedRelease']);
        }
        // validate the optional field `appStoreVersionSubmission`
        if (data['appStoreVersionSubmission']) { // data not null
          AppStoreVersionRelationshipsAppStoreVersionSubmission.validateJSON(data['appStoreVersionSubmission']);
        }
        // validate the optional field `build`
        if (data['build']) { // data not null
          AppStoreVersionRelationshipsBuild.validateJSON(data['build']);
        }
        // validate the optional field `idfaDeclaration`
        if (data['idfaDeclaration']) { // data not null
          AppStoreVersionRelationshipsIdfaDeclaration.validateJSON(data['idfaDeclaration']);
        }
        // validate the optional field `routingAppCoverage`
        if (data['routingAppCoverage']) { // data not null
          AppStoreVersionRelationshipsRoutingAppCoverage.validateJSON(data['routingAppCoverage']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppStoreVersionRelationshipsAgeRatingDeclaration} ageRatingDeclaration
 */
AppStoreVersionRelationships.prototype['ageRatingDeclaration'] = undefined;

/**
 * @member {module:model/AppEncryptionDeclarationRelationshipsApp} app
 */
AppStoreVersionRelationships.prototype['app'] = undefined;

/**
 * @member {module:model/AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail} appStoreReviewDetail
 */
AppStoreVersionRelationships.prototype['appStoreReviewDetail'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsAppStoreVersionLocalizations} appStoreVersionLocalizations
 */
AppStoreVersionRelationships.prototype['appStoreVersionLocalizations'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsAppStoreVersionPhasedRelease} appStoreVersionPhasedRelease
 */
AppStoreVersionRelationships.prototype['appStoreVersionPhasedRelease'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsAppStoreVersionSubmission} appStoreVersionSubmission
 */
AppStoreVersionRelationships.prototype['appStoreVersionSubmission'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsBuild} build
 */
AppStoreVersionRelationships.prototype['build'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsIdfaDeclaration} idfaDeclaration
 */
AppStoreVersionRelationships.prototype['idfaDeclaration'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsRoutingAppCoverage} routingAppCoverage
 */
AppStoreVersionRelationships.prototype['routingAppCoverage'] = undefined;






export default AppStoreVersionRelationships;

