/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BundleId from './BundleId';
import BundleIdRelationships from './BundleIdRelationships';
import Certificate from './Certificate';
import CertificateAttributes from './CertificateAttributes';
import Device from './Device';
import ResourceLinks from './ResourceLinks';

/**
 * The ProfileResponseIncludedInner model module.
 * @module model/ProfileResponseIncludedInner
 * @version 1.4.1
 */
class ProfileResponseIncludedInner {
    /**
     * Constructs a new <code>ProfileResponseIncludedInner</code>.
     * @alias module:model/ProfileResponseIncludedInner
     * @param {(module:model/BundleId|module:model/Certificate|module:model/Device)} instance The actual instance to initialize ProfileResponseIncludedInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "BundleId") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                BundleId.validateJSON(instance); // throw an exception if no match
                // create BundleId from JS object
                this.actualInstance = BundleId.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into BundleId
            errorMessages.push("Failed to construct BundleId: " + err)
        }

        try {
            if (typeof instance === "Device") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Device.validateJSON(instance); // throw an exception if no match
                // create Device from JS object
                this.actualInstance = Device.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Device
            errorMessages.push("Failed to construct Device: " + err)
        }

        try {
            if (typeof instance === "Certificate") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Certificate.validateJSON(instance); // throw an exception if no match
                // create Certificate from JS object
                this.actualInstance = Certificate.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Certificate
            errorMessages.push("Failed to construct Certificate: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ProfileResponseIncludedInner` with oneOf schemas BundleId, Certificate, Device. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ProfileResponseIncludedInner` with oneOf schemas BundleId, Certificate, Device. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ProfileResponseIncludedInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileResponseIncludedInner} obj Optional instance to populate.
     * @return {module:model/ProfileResponseIncludedInner} The populated <code>ProfileResponseIncludedInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ProfileResponseIncludedInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>BundleId</code>, <code>Certificate</code>, <code>Device</code>.
     * @return {(module:model/BundleId|module:model/Certificate|module:model/Device)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>BundleId</code>, <code>Certificate</code>, <code>Device</code>.
     * @param {(module:model/BundleId|module:model/Certificate|module:model/Device)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ProfileResponseIncludedInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ProfileResponseIncludedInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ProfileResponseIncludedInner} An instance of ProfileResponseIncludedInner.
     */
    static fromJSON = function(json_string){
        return ProfileResponseIncludedInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CertificateAttributes} attributes
 */
ProfileResponseIncludedInner.prototype['attributes'] = undefined;

/**
 * @member {String} id
 */
ProfileResponseIncludedInner.prototype['id'] = undefined;

/**
 * @member {module:model/ResourceLinks} links
 */
ProfileResponseIncludedInner.prototype['links'] = undefined;

/**
 * @member {module:model/BundleIdRelationships} relationships
 */
ProfileResponseIncludedInner.prototype['relationships'] = undefined;

/**
 * @member {module:model/ProfileResponseIncludedInner.TypeEnum} type
 */
ProfileResponseIncludedInner.prototype['type'] = undefined;


ProfileResponseIncludedInner.OneOf = ["BundleId", "Certificate", "Device"];

export default ProfileResponseIncludedInner;

