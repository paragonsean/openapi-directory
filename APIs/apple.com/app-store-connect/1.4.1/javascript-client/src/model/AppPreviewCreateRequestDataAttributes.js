/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppPreviewCreateRequestDataAttributes model module.
 * @module model/AppPreviewCreateRequestDataAttributes
 * @version 1.4.1
 */
class AppPreviewCreateRequestDataAttributes {
    /**
     * Constructs a new <code>AppPreviewCreateRequestDataAttributes</code>.
     * @alias module:model/AppPreviewCreateRequestDataAttributes
     * @param fileName {String} 
     * @param fileSize {Number} 
     */
    constructor(fileName, fileSize) { 
        
        AppPreviewCreateRequestDataAttributes.initialize(this, fileName, fileSize);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileName, fileSize) { 
        obj['fileName'] = fileName;
        obj['fileSize'] = fileSize;
    }

    /**
     * Constructs a <code>AppPreviewCreateRequestDataAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppPreviewCreateRequestDataAttributes} obj Optional instance to populate.
     * @return {module:model/AppPreviewCreateRequestDataAttributes} The populated <code>AppPreviewCreateRequestDataAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppPreviewCreateRequestDataAttributes();

            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('fileSize')) {
                obj['fileSize'] = ApiClient.convertToType(data['fileSize'], 'Number');
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('previewFrameTimeCode')) {
                obj['previewFrameTimeCode'] = ApiClient.convertToType(data['previewFrameTimeCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppPreviewCreateRequestDataAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppPreviewCreateRequestDataAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppPreviewCreateRequestDataAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }
        // ensure the json data is a string
        if (data['previewFrameTimeCode'] && !(typeof data['previewFrameTimeCode'] === 'string' || data['previewFrameTimeCode'] instanceof String)) {
            throw new Error("Expected the field `previewFrameTimeCode` to be a primitive type in the JSON string but got " + data['previewFrameTimeCode']);
        }

        return true;
    }


}

AppPreviewCreateRequestDataAttributes.RequiredProperties = ["fileName", "fileSize"];

/**
 * @member {String} fileName
 */
AppPreviewCreateRequestDataAttributes.prototype['fileName'] = undefined;

/**
 * @member {Number} fileSize
 */
AppPreviewCreateRequestDataAttributes.prototype['fileSize'] = undefined;

/**
 * @member {String} mimeType
 */
AppPreviewCreateRequestDataAttributes.prototype['mimeType'] = undefined;

/**
 * @member {String} previewFrameTimeCode
 */
AppPreviewCreateRequestDataAttributes.prototype['previewFrameTimeCode'] = undefined;






export default AppPreviewCreateRequestDataAttributes;

