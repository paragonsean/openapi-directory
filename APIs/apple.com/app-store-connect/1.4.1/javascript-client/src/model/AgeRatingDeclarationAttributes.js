/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KidsAgeBand from './KidsAgeBand';

/**
 * The AgeRatingDeclarationAttributes model module.
 * @module model/AgeRatingDeclarationAttributes
 * @version 1.4.1
 */
class AgeRatingDeclarationAttributes {
    /**
     * Constructs a new <code>AgeRatingDeclarationAttributes</code>.
     * @alias module:model/AgeRatingDeclarationAttributes
     */
    constructor() { 
        
        AgeRatingDeclarationAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AgeRatingDeclarationAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgeRatingDeclarationAttributes} obj Optional instance to populate.
     * @return {module:model/AgeRatingDeclarationAttributes} The populated <code>AgeRatingDeclarationAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgeRatingDeclarationAttributes();

            if (data.hasOwnProperty('alcoholTobaccoOrDrugUseOrReferences')) {
                obj['alcoholTobaccoOrDrugUseOrReferences'] = ApiClient.convertToType(data['alcoholTobaccoOrDrugUseOrReferences'], 'String');
            }
            if (data.hasOwnProperty('contests')) {
                obj['contests'] = ApiClient.convertToType(data['contests'], 'String');
            }
            if (data.hasOwnProperty('gambling')) {
                obj['gambling'] = ApiClient.convertToType(data['gambling'], 'Boolean');
            }
            if (data.hasOwnProperty('gamblingAndContests')) {
                obj['gamblingAndContests'] = ApiClient.convertToType(data['gamblingAndContests'], 'Boolean');
            }
            if (data.hasOwnProperty('gamblingSimulated')) {
                obj['gamblingSimulated'] = ApiClient.convertToType(data['gamblingSimulated'], 'String');
            }
            if (data.hasOwnProperty('horrorOrFearThemes')) {
                obj['horrorOrFearThemes'] = ApiClient.convertToType(data['horrorOrFearThemes'], 'String');
            }
            if (data.hasOwnProperty('kidsAgeBand')) {
                obj['kidsAgeBand'] = KidsAgeBand.constructFromObject(data['kidsAgeBand']);
            }
            if (data.hasOwnProperty('matureOrSuggestiveThemes')) {
                obj['matureOrSuggestiveThemes'] = ApiClient.convertToType(data['matureOrSuggestiveThemes'], 'String');
            }
            if (data.hasOwnProperty('medicalOrTreatmentInformation')) {
                obj['medicalOrTreatmentInformation'] = ApiClient.convertToType(data['medicalOrTreatmentInformation'], 'String');
            }
            if (data.hasOwnProperty('profanityOrCrudeHumor')) {
                obj['profanityOrCrudeHumor'] = ApiClient.convertToType(data['profanityOrCrudeHumor'], 'String');
            }
            if (data.hasOwnProperty('seventeenPlus')) {
                obj['seventeenPlus'] = ApiClient.convertToType(data['seventeenPlus'], 'Boolean');
            }
            if (data.hasOwnProperty('sexualContentGraphicAndNudity')) {
                obj['sexualContentGraphicAndNudity'] = ApiClient.convertToType(data['sexualContentGraphicAndNudity'], 'String');
            }
            if (data.hasOwnProperty('sexualContentOrNudity')) {
                obj['sexualContentOrNudity'] = ApiClient.convertToType(data['sexualContentOrNudity'], 'String');
            }
            if (data.hasOwnProperty('unrestrictedWebAccess')) {
                obj['unrestrictedWebAccess'] = ApiClient.convertToType(data['unrestrictedWebAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('violenceCartoonOrFantasy')) {
                obj['violenceCartoonOrFantasy'] = ApiClient.convertToType(data['violenceCartoonOrFantasy'], 'String');
            }
            if (data.hasOwnProperty('violenceRealistic')) {
                obj['violenceRealistic'] = ApiClient.convertToType(data['violenceRealistic'], 'String');
            }
            if (data.hasOwnProperty('violenceRealisticProlongedGraphicOrSadistic')) {
                obj['violenceRealisticProlongedGraphicOrSadistic'] = ApiClient.convertToType(data['violenceRealisticProlongedGraphicOrSadistic'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AgeRatingDeclarationAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AgeRatingDeclarationAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alcoholTobaccoOrDrugUseOrReferences'] && !(typeof data['alcoholTobaccoOrDrugUseOrReferences'] === 'string' || data['alcoholTobaccoOrDrugUseOrReferences'] instanceof String)) {
            throw new Error("Expected the field `alcoholTobaccoOrDrugUseOrReferences` to be a primitive type in the JSON string but got " + data['alcoholTobaccoOrDrugUseOrReferences']);
        }
        // ensure the json data is a string
        if (data['contests'] && !(typeof data['contests'] === 'string' || data['contests'] instanceof String)) {
            throw new Error("Expected the field `contests` to be a primitive type in the JSON string but got " + data['contests']);
        }
        // ensure the json data is a string
        if (data['gamblingSimulated'] && !(typeof data['gamblingSimulated'] === 'string' || data['gamblingSimulated'] instanceof String)) {
            throw new Error("Expected the field `gamblingSimulated` to be a primitive type in the JSON string but got " + data['gamblingSimulated']);
        }
        // ensure the json data is a string
        if (data['horrorOrFearThemes'] && !(typeof data['horrorOrFearThemes'] === 'string' || data['horrorOrFearThemes'] instanceof String)) {
            throw new Error("Expected the field `horrorOrFearThemes` to be a primitive type in the JSON string but got " + data['horrorOrFearThemes']);
        }
        // ensure the json data is a string
        if (data['matureOrSuggestiveThemes'] && !(typeof data['matureOrSuggestiveThemes'] === 'string' || data['matureOrSuggestiveThemes'] instanceof String)) {
            throw new Error("Expected the field `matureOrSuggestiveThemes` to be a primitive type in the JSON string but got " + data['matureOrSuggestiveThemes']);
        }
        // ensure the json data is a string
        if (data['medicalOrTreatmentInformation'] && !(typeof data['medicalOrTreatmentInformation'] === 'string' || data['medicalOrTreatmentInformation'] instanceof String)) {
            throw new Error("Expected the field `medicalOrTreatmentInformation` to be a primitive type in the JSON string but got " + data['medicalOrTreatmentInformation']);
        }
        // ensure the json data is a string
        if (data['profanityOrCrudeHumor'] && !(typeof data['profanityOrCrudeHumor'] === 'string' || data['profanityOrCrudeHumor'] instanceof String)) {
            throw new Error("Expected the field `profanityOrCrudeHumor` to be a primitive type in the JSON string but got " + data['profanityOrCrudeHumor']);
        }
        // ensure the json data is a string
        if (data['sexualContentGraphicAndNudity'] && !(typeof data['sexualContentGraphicAndNudity'] === 'string' || data['sexualContentGraphicAndNudity'] instanceof String)) {
            throw new Error("Expected the field `sexualContentGraphicAndNudity` to be a primitive type in the JSON string but got " + data['sexualContentGraphicAndNudity']);
        }
        // ensure the json data is a string
        if (data['sexualContentOrNudity'] && !(typeof data['sexualContentOrNudity'] === 'string' || data['sexualContentOrNudity'] instanceof String)) {
            throw new Error("Expected the field `sexualContentOrNudity` to be a primitive type in the JSON string but got " + data['sexualContentOrNudity']);
        }
        // ensure the json data is a string
        if (data['violenceCartoonOrFantasy'] && !(typeof data['violenceCartoonOrFantasy'] === 'string' || data['violenceCartoonOrFantasy'] instanceof String)) {
            throw new Error("Expected the field `violenceCartoonOrFantasy` to be a primitive type in the JSON string but got " + data['violenceCartoonOrFantasy']);
        }
        // ensure the json data is a string
        if (data['violenceRealistic'] && !(typeof data['violenceRealistic'] === 'string' || data['violenceRealistic'] instanceof String)) {
            throw new Error("Expected the field `violenceRealistic` to be a primitive type in the JSON string but got " + data['violenceRealistic']);
        }
        // ensure the json data is a string
        if (data['violenceRealisticProlongedGraphicOrSadistic'] && !(typeof data['violenceRealisticProlongedGraphicOrSadistic'] === 'string' || data['violenceRealisticProlongedGraphicOrSadistic'] instanceof String)) {
            throw new Error("Expected the field `violenceRealisticProlongedGraphicOrSadistic` to be a primitive type in the JSON string but got " + data['violenceRealisticProlongedGraphicOrSadistic']);
        }

        return true;
    }


}



/**
 * @member {module:model/AgeRatingDeclarationAttributes.AlcoholTobaccoOrDrugUseOrReferencesEnum} alcoholTobaccoOrDrugUseOrReferences
 */
AgeRatingDeclarationAttributes.prototype['alcoholTobaccoOrDrugUseOrReferences'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.ContestsEnum} contests
 */
AgeRatingDeclarationAttributes.prototype['contests'] = undefined;

/**
 * @member {Boolean} gambling
 */
AgeRatingDeclarationAttributes.prototype['gambling'] = undefined;

/**
 * @member {Boolean} gamblingAndContests
 */
AgeRatingDeclarationAttributes.prototype['gamblingAndContests'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.GamblingSimulatedEnum} gamblingSimulated
 */
AgeRatingDeclarationAttributes.prototype['gamblingSimulated'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.HorrorOrFearThemesEnum} horrorOrFearThemes
 */
AgeRatingDeclarationAttributes.prototype['horrorOrFearThemes'] = undefined;

/**
 * @member {module:model/KidsAgeBand} kidsAgeBand
 */
AgeRatingDeclarationAttributes.prototype['kidsAgeBand'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.MatureOrSuggestiveThemesEnum} matureOrSuggestiveThemes
 */
AgeRatingDeclarationAttributes.prototype['matureOrSuggestiveThemes'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.MedicalOrTreatmentInformationEnum} medicalOrTreatmentInformation
 */
AgeRatingDeclarationAttributes.prototype['medicalOrTreatmentInformation'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.ProfanityOrCrudeHumorEnum} profanityOrCrudeHumor
 */
AgeRatingDeclarationAttributes.prototype['profanityOrCrudeHumor'] = undefined;

/**
 * @member {Boolean} seventeenPlus
 */
AgeRatingDeclarationAttributes.prototype['seventeenPlus'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.SexualContentGraphicAndNudityEnum} sexualContentGraphicAndNudity
 */
AgeRatingDeclarationAttributes.prototype['sexualContentGraphicAndNudity'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.SexualContentOrNudityEnum} sexualContentOrNudity
 */
AgeRatingDeclarationAttributes.prototype['sexualContentOrNudity'] = undefined;

/**
 * @member {Boolean} unrestrictedWebAccess
 */
AgeRatingDeclarationAttributes.prototype['unrestrictedWebAccess'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.ViolenceCartoonOrFantasyEnum} violenceCartoonOrFantasy
 */
AgeRatingDeclarationAttributes.prototype['violenceCartoonOrFantasy'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.ViolenceRealisticEnum} violenceRealistic
 */
AgeRatingDeclarationAttributes.prototype['violenceRealistic'] = undefined;

/**
 * @member {module:model/AgeRatingDeclarationAttributes.ViolenceRealisticProlongedGraphicOrSadisticEnum} violenceRealisticProlongedGraphicOrSadistic
 */
AgeRatingDeclarationAttributes.prototype['violenceRealisticProlongedGraphicOrSadistic'] = undefined;





/**
 * Allowed values for the <code>alcoholTobaccoOrDrugUseOrReferences</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['AlcoholTobaccoOrDrugUseOrReferencesEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>contests</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['ContestsEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>gamblingSimulated</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['GamblingSimulatedEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>horrorOrFearThemes</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['HorrorOrFearThemesEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>matureOrSuggestiveThemes</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['MatureOrSuggestiveThemesEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>medicalOrTreatmentInformation</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['MedicalOrTreatmentInformationEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>profanityOrCrudeHumor</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['ProfanityOrCrudeHumorEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>sexualContentGraphicAndNudity</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['SexualContentGraphicAndNudityEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>sexualContentOrNudity</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['SexualContentOrNudityEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>violenceCartoonOrFantasy</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['ViolenceCartoonOrFantasyEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>violenceRealistic</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['ViolenceRealisticEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};


/**
 * Allowed values for the <code>violenceRealisticProlongedGraphicOrSadistic</code> property.
 * @enum {String}
 * @readonly
 */
AgeRatingDeclarationAttributes['ViolenceRealisticProlongedGraphicOrSadisticEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "INFREQUENT_OR_MILD"
     * @const
     */
    "INFREQUENT_OR_MILD": "INFREQUENT_OR_MILD",

    /**
     * value: "FREQUENT_OR_INTENSE"
     * @const
     */
    "FREQUENT_OR_INTENSE": "FREQUENT_OR_INTENSE"
};



export default AgeRatingDeclarationAttributes;

