/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppRelationshipsAppInfos from './AppRelationshipsAppInfos';
import AppRelationshipsAppStoreVersions from './AppRelationshipsAppStoreVersions';
import AppRelationshipsAvailableTerritories from './AppRelationshipsAvailableTerritories';
import AppRelationshipsBetaAppLocalizations from './AppRelationshipsBetaAppLocalizations';
import AppRelationshipsBetaAppReviewDetail from './AppRelationshipsBetaAppReviewDetail';
import AppRelationshipsBetaGroups from './AppRelationshipsBetaGroups';
import AppRelationshipsBetaLicenseAgreement from './AppRelationshipsBetaLicenseAgreement';
import AppRelationshipsBuilds from './AppRelationshipsBuilds';
import AppRelationshipsEndUserLicenseAgreement from './AppRelationshipsEndUserLicenseAgreement';
import AppRelationshipsGameCenterEnabledVersions from './AppRelationshipsGameCenterEnabledVersions';
import AppRelationshipsInAppPurchases from './AppRelationshipsInAppPurchases';
import AppRelationshipsPreOrder from './AppRelationshipsPreOrder';
import AppRelationshipsPreReleaseVersions from './AppRelationshipsPreReleaseVersions';
import AppRelationshipsPrices from './AppRelationshipsPrices';

/**
 * The AppRelationships model module.
 * @module model/AppRelationships
 * @version 1.4.1
 */
class AppRelationships {
    /**
     * Constructs a new <code>AppRelationships</code>.
     * @alias module:model/AppRelationships
     */
    constructor() { 
        
        AppRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppRelationships} obj Optional instance to populate.
     * @return {module:model/AppRelationships} The populated <code>AppRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppRelationships();

            if (data.hasOwnProperty('appInfos')) {
                obj['appInfos'] = AppRelationshipsAppInfos.constructFromObject(data['appInfos']);
            }
            if (data.hasOwnProperty('appStoreVersions')) {
                obj['appStoreVersions'] = AppRelationshipsAppStoreVersions.constructFromObject(data['appStoreVersions']);
            }
            if (data.hasOwnProperty('availableTerritories')) {
                obj['availableTerritories'] = AppRelationshipsAvailableTerritories.constructFromObject(data['availableTerritories']);
            }
            if (data.hasOwnProperty('betaAppLocalizations')) {
                obj['betaAppLocalizations'] = AppRelationshipsBetaAppLocalizations.constructFromObject(data['betaAppLocalizations']);
            }
            if (data.hasOwnProperty('betaAppReviewDetail')) {
                obj['betaAppReviewDetail'] = AppRelationshipsBetaAppReviewDetail.constructFromObject(data['betaAppReviewDetail']);
            }
            if (data.hasOwnProperty('betaGroups')) {
                obj['betaGroups'] = AppRelationshipsBetaGroups.constructFromObject(data['betaGroups']);
            }
            if (data.hasOwnProperty('betaLicenseAgreement')) {
                obj['betaLicenseAgreement'] = AppRelationshipsBetaLicenseAgreement.constructFromObject(data['betaLicenseAgreement']);
            }
            if (data.hasOwnProperty('builds')) {
                obj['builds'] = AppRelationshipsBuilds.constructFromObject(data['builds']);
            }
            if (data.hasOwnProperty('endUserLicenseAgreement')) {
                obj['endUserLicenseAgreement'] = AppRelationshipsEndUserLicenseAgreement.constructFromObject(data['endUserLicenseAgreement']);
            }
            if (data.hasOwnProperty('gameCenterEnabledVersions')) {
                obj['gameCenterEnabledVersions'] = AppRelationshipsGameCenterEnabledVersions.constructFromObject(data['gameCenterEnabledVersions']);
            }
            if (data.hasOwnProperty('inAppPurchases')) {
                obj['inAppPurchases'] = AppRelationshipsInAppPurchases.constructFromObject(data['inAppPurchases']);
            }
            if (data.hasOwnProperty('preOrder')) {
                obj['preOrder'] = AppRelationshipsPreOrder.constructFromObject(data['preOrder']);
            }
            if (data.hasOwnProperty('preReleaseVersions')) {
                obj['preReleaseVersions'] = AppRelationshipsPreReleaseVersions.constructFromObject(data['preReleaseVersions']);
            }
            if (data.hasOwnProperty('prices')) {
                obj['prices'] = AppRelationshipsPrices.constructFromObject(data['prices']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appInfos`
        if (data['appInfos']) { // data not null
          AppRelationshipsAppInfos.validateJSON(data['appInfos']);
        }
        // validate the optional field `appStoreVersions`
        if (data['appStoreVersions']) { // data not null
          AppRelationshipsAppStoreVersions.validateJSON(data['appStoreVersions']);
        }
        // validate the optional field `availableTerritories`
        if (data['availableTerritories']) { // data not null
          AppRelationshipsAvailableTerritories.validateJSON(data['availableTerritories']);
        }
        // validate the optional field `betaAppLocalizations`
        if (data['betaAppLocalizations']) { // data not null
          AppRelationshipsBetaAppLocalizations.validateJSON(data['betaAppLocalizations']);
        }
        // validate the optional field `betaAppReviewDetail`
        if (data['betaAppReviewDetail']) { // data not null
          AppRelationshipsBetaAppReviewDetail.validateJSON(data['betaAppReviewDetail']);
        }
        // validate the optional field `betaGroups`
        if (data['betaGroups']) { // data not null
          AppRelationshipsBetaGroups.validateJSON(data['betaGroups']);
        }
        // validate the optional field `betaLicenseAgreement`
        if (data['betaLicenseAgreement']) { // data not null
          AppRelationshipsBetaLicenseAgreement.validateJSON(data['betaLicenseAgreement']);
        }
        // validate the optional field `builds`
        if (data['builds']) { // data not null
          AppRelationshipsBuilds.validateJSON(data['builds']);
        }
        // validate the optional field `endUserLicenseAgreement`
        if (data['endUserLicenseAgreement']) { // data not null
          AppRelationshipsEndUserLicenseAgreement.validateJSON(data['endUserLicenseAgreement']);
        }
        // validate the optional field `gameCenterEnabledVersions`
        if (data['gameCenterEnabledVersions']) { // data not null
          AppRelationshipsGameCenterEnabledVersions.validateJSON(data['gameCenterEnabledVersions']);
        }
        // validate the optional field `inAppPurchases`
        if (data['inAppPurchases']) { // data not null
          AppRelationshipsInAppPurchases.validateJSON(data['inAppPurchases']);
        }
        // validate the optional field `preOrder`
        if (data['preOrder']) { // data not null
          AppRelationshipsPreOrder.validateJSON(data['preOrder']);
        }
        // validate the optional field `preReleaseVersions`
        if (data['preReleaseVersions']) { // data not null
          AppRelationshipsPreReleaseVersions.validateJSON(data['preReleaseVersions']);
        }
        // validate the optional field `prices`
        if (data['prices']) { // data not null
          AppRelationshipsPrices.validateJSON(data['prices']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppRelationshipsAppInfos} appInfos
 */
AppRelationships.prototype['appInfos'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppStoreVersions} appStoreVersions
 */
AppRelationships.prototype['appStoreVersions'] = undefined;

/**
 * @member {module:model/AppRelationshipsAvailableTerritories} availableTerritories
 */
AppRelationships.prototype['availableTerritories'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaAppLocalizations} betaAppLocalizations
 */
AppRelationships.prototype['betaAppLocalizations'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaAppReviewDetail} betaAppReviewDetail
 */
AppRelationships.prototype['betaAppReviewDetail'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaGroups} betaGroups
 */
AppRelationships.prototype['betaGroups'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaLicenseAgreement} betaLicenseAgreement
 */
AppRelationships.prototype['betaLicenseAgreement'] = undefined;

/**
 * @member {module:model/AppRelationshipsBuilds} builds
 */
AppRelationships.prototype['builds'] = undefined;

/**
 * @member {module:model/AppRelationshipsEndUserLicenseAgreement} endUserLicenseAgreement
 */
AppRelationships.prototype['endUserLicenseAgreement'] = undefined;

/**
 * @member {module:model/AppRelationshipsGameCenterEnabledVersions} gameCenterEnabledVersions
 */
AppRelationships.prototype['gameCenterEnabledVersions'] = undefined;

/**
 * @member {module:model/AppRelationshipsInAppPurchases} inAppPurchases
 */
AppRelationships.prototype['inAppPurchases'] = undefined;

/**
 * @member {module:model/AppRelationshipsPreOrder} preOrder
 */
AppRelationships.prototype['preOrder'] = undefined;

/**
 * @member {module:model/AppRelationshipsPreReleaseVersions} preReleaseVersions
 */
AppRelationships.prototype['preReleaseVersions'] = undefined;

/**
 * @member {module:model/AppRelationshipsPrices} prices
 */
AppRelationships.prototype['prices'] = undefined;






export default AppRelationships;

