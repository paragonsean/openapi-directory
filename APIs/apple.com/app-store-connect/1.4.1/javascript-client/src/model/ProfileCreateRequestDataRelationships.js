/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BundleIdCapabilityCreateRequestDataRelationshipsBundleId from './BundleIdCapabilityCreateRequestDataRelationshipsBundleId';
import ProfileCreateRequestDataRelationshipsCertificates from './ProfileCreateRequestDataRelationshipsCertificates';
import ProfileCreateRequestDataRelationshipsDevices from './ProfileCreateRequestDataRelationshipsDevices';

/**
 * The ProfileCreateRequestDataRelationships model module.
 * @module model/ProfileCreateRequestDataRelationships
 * @version 1.4.1
 */
class ProfileCreateRequestDataRelationships {
    /**
     * Constructs a new <code>ProfileCreateRequestDataRelationships</code>.
     * @alias module:model/ProfileCreateRequestDataRelationships
     * @param bundleId {module:model/BundleIdCapabilityCreateRequestDataRelationshipsBundleId} 
     * @param certificates {module:model/ProfileCreateRequestDataRelationshipsCertificates} 
     */
    constructor(bundleId, certificates) { 
        
        ProfileCreateRequestDataRelationships.initialize(this, bundleId, certificates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bundleId, certificates) { 
        obj['bundleId'] = bundleId;
        obj['certificates'] = certificates;
    }

    /**
     * Constructs a <code>ProfileCreateRequestDataRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileCreateRequestDataRelationships} obj Optional instance to populate.
     * @return {module:model/ProfileCreateRequestDataRelationships} The populated <code>ProfileCreateRequestDataRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileCreateRequestDataRelationships();

            if (data.hasOwnProperty('bundleId')) {
                obj['bundleId'] = BundleIdCapabilityCreateRequestDataRelationshipsBundleId.constructFromObject(data['bundleId']);
            }
            if (data.hasOwnProperty('certificates')) {
                obj['certificates'] = ProfileCreateRequestDataRelationshipsCertificates.constructFromObject(data['certificates']);
            }
            if (data.hasOwnProperty('devices')) {
                obj['devices'] = ProfileCreateRequestDataRelationshipsDevices.constructFromObject(data['devices']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfileCreateRequestDataRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfileCreateRequestDataRelationships</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProfileCreateRequestDataRelationships.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `bundleId`
        if (data['bundleId']) { // data not null
          BundleIdCapabilityCreateRequestDataRelationshipsBundleId.validateJSON(data['bundleId']);
        }
        // validate the optional field `certificates`
        if (data['certificates']) { // data not null
          ProfileCreateRequestDataRelationshipsCertificates.validateJSON(data['certificates']);
        }
        // validate the optional field `devices`
        if (data['devices']) { // data not null
          ProfileCreateRequestDataRelationshipsDevices.validateJSON(data['devices']);
        }

        return true;
    }


}

ProfileCreateRequestDataRelationships.RequiredProperties = ["bundleId", "certificates"];

/**
 * @member {module:model/BundleIdCapabilityCreateRequestDataRelationshipsBundleId} bundleId
 */
ProfileCreateRequestDataRelationships.prototype['bundleId'] = undefined;

/**
 * @member {module:model/ProfileCreateRequestDataRelationshipsCertificates} certificates
 */
ProfileCreateRequestDataRelationships.prototype['certificates'] = undefined;

/**
 * @member {module:model/ProfileCreateRequestDataRelationshipsDevices} devices
 */
ProfileCreateRequestDataRelationships.prototype['devices'] = undefined;






export default ProfileCreateRequestDataRelationships;

