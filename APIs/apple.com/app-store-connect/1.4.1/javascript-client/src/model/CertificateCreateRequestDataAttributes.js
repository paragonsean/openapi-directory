/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CertificateType from './CertificateType';

/**
 * The CertificateCreateRequestDataAttributes model module.
 * @module model/CertificateCreateRequestDataAttributes
 * @version 1.4.1
 */
class CertificateCreateRequestDataAttributes {
    /**
     * Constructs a new <code>CertificateCreateRequestDataAttributes</code>.
     * @alias module:model/CertificateCreateRequestDataAttributes
     * @param certificateType {module:model/CertificateType} 
     * @param csrContent {String} 
     */
    constructor(certificateType, csrContent) { 
        
        CertificateCreateRequestDataAttributes.initialize(this, certificateType, csrContent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, certificateType, csrContent) { 
        obj['certificateType'] = certificateType;
        obj['csrContent'] = csrContent;
    }

    /**
     * Constructs a <code>CertificateCreateRequestDataAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateCreateRequestDataAttributes} obj Optional instance to populate.
     * @return {module:model/CertificateCreateRequestDataAttributes} The populated <code>CertificateCreateRequestDataAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateCreateRequestDataAttributes();

            if (data.hasOwnProperty('certificateType')) {
                obj['certificateType'] = CertificateType.constructFromObject(data['certificateType']);
            }
            if (data.hasOwnProperty('csrContent')) {
                obj['csrContent'] = ApiClient.convertToType(data['csrContent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateCreateRequestDataAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateCreateRequestDataAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CertificateCreateRequestDataAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['csrContent'] && !(typeof data['csrContent'] === 'string' || data['csrContent'] instanceof String)) {
            throw new Error("Expected the field `csrContent` to be a primitive type in the JSON string but got " + data['csrContent']);
        }

        return true;
    }


}

CertificateCreateRequestDataAttributes.RequiredProperties = ["certificateType", "csrContent"];

/**
 * @member {module:model/CertificateType} certificateType
 */
CertificateCreateRequestDataAttributes.prototype['certificateType'] = undefined;

/**
 * @member {String} csrContent
 */
CertificateCreateRequestDataAttributes.prototype['csrContent'] = undefined;






export default CertificateCreateRequestDataAttributes;

