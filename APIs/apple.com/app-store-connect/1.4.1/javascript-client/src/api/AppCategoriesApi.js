/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppCategoriesResponse from '../model/AppCategoriesResponse';
import AppCategoryResponse from '../model/AppCategoryResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppCategories service.
* @module api/AppCategoriesApi
* @version 1.4.1
*/
export default class AppCategoriesApi {

    /**
    * Constructs a new AppCategoriesApi. 
    * @alias module:api/AppCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appCategoriesGetCollection operation.
     * @callback module:api/AppCategoriesApi~appCategoriesGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterPlatforms] filter by attribute 'platforms'
     * @param {Array.<String>} [existsParent] filter by existence or non-existence of related 'parent'
     * @param {Array.<module:model/String>} [fieldsAppCategories] the fields to include for returned resources of type appCategories
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitSubcategories] maximum number of related subcategories returned (when they are included)
     * @param {module:api/AppCategoriesApi~appCategoriesGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppCategoriesResponse}
     */
    appCategoriesGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter[platforms]': this.apiClient.buildCollectionParam(opts['filterPlatforms'], 'csv'),
        'exists[parent]': this.apiClient.buildCollectionParam(opts['existsParent'], 'csv'),
        'fields[appCategories]': this.apiClient.buildCollectionParam(opts['fieldsAppCategories'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[subcategories]': opts['limitSubcategories']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/appCategories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appCategoriesGetInstance operation.
     * @callback module:api/AppCategoriesApi~appCategoriesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppCategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppCategories] the fields to include for returned resources of type appCategories
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitSubcategories] maximum number of related subcategories returned (when they are included)
     * @param {module:api/AppCategoriesApi~appCategoriesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppCategoryResponse}
     */
    appCategoriesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appCategoriesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appCategories]': this.apiClient.buildCollectionParam(opts['fieldsAppCategories'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[subcategories]': opts['limitSubcategories']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppCategoryResponse;
      return this.apiClient.callApi(
        '/v1/appCategories/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appCategoriesParentGetToOneRelated operation.
     * @callback module:api/AppCategoriesApi~appCategoriesParentGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppCategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppCategories] the fields to include for returned resources of type appCategories
     * @param {module:api/AppCategoriesApi~appCategoriesParentGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppCategoryResponse}
     */
    appCategoriesParentGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appCategoriesParentGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appCategories]': this.apiClient.buildCollectionParam(opts['fieldsAppCategories'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppCategoryResponse;
      return this.apiClient.callApi(
        '/v1/appCategories/{id}/parent', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appCategoriesSubcategoriesGetToManyRelated operation.
     * @callback module:api/AppCategoriesApi~appCategoriesSubcategoriesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppCategories] the fields to include for returned resources of type appCategories
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppCategoriesApi~appCategoriesSubcategoriesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppCategoriesResponse}
     */
    appCategoriesSubcategoriesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appCategoriesSubcategoriesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appCategories]': this.apiClient.buildCollectionParam(opts['fieldsAppCategories'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/appCategories/{id}/subcategories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
