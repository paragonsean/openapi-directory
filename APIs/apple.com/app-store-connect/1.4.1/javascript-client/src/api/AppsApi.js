/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppBetaTestersLinkagesRequest from '../model/AppBetaTestersLinkagesRequest';
import AppInfosResponse from '../model/AppInfosResponse';
import AppPreOrderResponse from '../model/AppPreOrderResponse';
import AppPricesResponse from '../model/AppPricesResponse';
import AppResponse from '../model/AppResponse';
import AppStoreVersionsResponse from '../model/AppStoreVersionsResponse';
import AppUpdateRequest from '../model/AppUpdateRequest';
import AppsResponse from '../model/AppsResponse';
import BetaAppLocalizationsResponse from '../model/BetaAppLocalizationsResponse';
import BetaAppReviewDetailResponse from '../model/BetaAppReviewDetailResponse';
import BetaGroupsResponse from '../model/BetaGroupsResponse';
import BetaLicenseAgreementResponse from '../model/BetaLicenseAgreementResponse';
import BuildsResponse from '../model/BuildsResponse';
import EndUserLicenseAgreementResponse from '../model/EndUserLicenseAgreementResponse';
import ErrorResponse from '../model/ErrorResponse';
import GameCenterEnabledVersionsResponse from '../model/GameCenterEnabledVersionsResponse';
import InAppPurchasesResponse from '../model/InAppPurchasesResponse';
import PerfPowerMetricsResponse from '../model/PerfPowerMetricsResponse';
import PreReleaseVersionsResponse from '../model/PreReleaseVersionsResponse';
import TerritoriesResponse from '../model/TerritoriesResponse';

/**
* Apps service.
* @module api/AppsApi
* @version 1.4.1
*/
export default class AppsApi {

    /**
    * Constructs a new AppsApi. 
    * @alias module:api/AppsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appsAppInfosGetToManyRelated operation.
     * @callback module:api/AppsApi~appsAppInfosGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppInfosResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAgeRatingDeclarations] the fields to include for returned resources of type ageRatingDeclarations
     * @param {Array.<module:model/String>} [fieldsAppInfos] the fields to include for returned resources of type appInfos
     * @param {Array.<module:model/String>} [fieldsAppCategories] the fields to include for returned resources of type appCategories
     * @param {Array.<module:model/String>} [fieldsAppInfoLocalizations] the fields to include for returned resources of type appInfoLocalizations
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppsApi~appsAppInfosGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppInfosResponse}
     */
    appsAppInfosGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsAppInfosGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[ageRatingDeclarations]': this.apiClient.buildCollectionParam(opts['fieldsAgeRatingDeclarations'], 'csv'),
        'fields[appInfos]': this.apiClient.buildCollectionParam(opts['fieldsAppInfos'], 'csv'),
        'fields[appCategories]': this.apiClient.buildCollectionParam(opts['fieldsAppCategories'], 'csv'),
        'fields[appInfoLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppInfoLocalizations'], 'csv'),
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppInfosResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/appInfos', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsAppStoreVersionsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsAppStoreVersionsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterAppStoreState] filter by attribute 'appStoreState'
     * @param {Array.<module:model/String>} [filterPlatform] filter by attribute 'platform'
     * @param {Array.<String>} [filterVersionString] filter by attribute 'versionString'
     * @param {Array.<String>} [filterId] filter by id(s)
     * @param {Array.<module:model/String>} [fieldsIdfaDeclarations] the fields to include for returned resources of type idfaDeclarations
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionLocalizations] the fields to include for returned resources of type appStoreVersionLocalizations
     * @param {Array.<module:model/String>} [fieldsRoutingAppCoverages] the fields to include for returned resources of type routingAppCoverages
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionPhasedReleases] the fields to include for returned resources of type appStoreVersionPhasedReleases
     * @param {Array.<module:model/String>} [fieldsAgeRatingDeclarations] the fields to include for returned resources of type ageRatingDeclarations
     * @param {Array.<module:model/String>} [fieldsAppStoreReviewDetails] the fields to include for returned resources of type appStoreReviewDetails
     * @param {Array.<module:model/String>} [fieldsAppStoreVersions] the fields to include for returned resources of type appStoreVersions
     * @param {Array.<module:model/String>} [fieldsBuilds] the fields to include for returned resources of type builds
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionSubmissions] the fields to include for returned resources of type appStoreVersionSubmissions
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppsApi~appsAppStoreVersionsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionsResponse}
     */
    appsAppStoreVersionsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsAppStoreVersionsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[appStoreState]': this.apiClient.buildCollectionParam(opts['filterAppStoreState'], 'csv'),
        'filter[platform]': this.apiClient.buildCollectionParam(opts['filterPlatform'], 'csv'),
        'filter[versionString]': this.apiClient.buildCollectionParam(opts['filterVersionString'], 'csv'),
        'filter[id]': this.apiClient.buildCollectionParam(opts['filterId'], 'csv'),
        'fields[idfaDeclarations]': this.apiClient.buildCollectionParam(opts['fieldsIdfaDeclarations'], 'csv'),
        'fields[appStoreVersionLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionLocalizations'], 'csv'),
        'fields[routingAppCoverages]': this.apiClient.buildCollectionParam(opts['fieldsRoutingAppCoverages'], 'csv'),
        'fields[appStoreVersionPhasedReleases]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionPhasedReleases'], 'csv'),
        'fields[ageRatingDeclarations]': this.apiClient.buildCollectionParam(opts['fieldsAgeRatingDeclarations'], 'csv'),
        'fields[appStoreReviewDetails]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreReviewDetails'], 'csv'),
        'fields[appStoreVersions]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersions'], 'csv'),
        'fields[builds]': this.apiClient.buildCollectionParam(opts['fieldsBuilds'], 'csv'),
        'fields[appStoreVersionSubmissions]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionSubmissions'], 'csv'),
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/appStoreVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsAvailableTerritoriesGetToManyRelated operation.
     * @callback module:api/AppsApi~appsAvailableTerritoriesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerritoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppsApi~appsAvailableTerritoriesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerritoriesResponse}
     */
    appsAvailableTerritoriesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsAvailableTerritoriesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerritoriesResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/availableTerritories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsBetaAppLocalizationsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsBetaAppLocalizationsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BetaAppLocalizationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBetaAppLocalizations] the fields to include for returned resources of type betaAppLocalizations
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppsApi~appsBetaAppLocalizationsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BetaAppLocalizationsResponse}
     */
    appsBetaAppLocalizationsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsBetaAppLocalizationsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[betaAppLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppLocalizations'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BetaAppLocalizationsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/betaAppLocalizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsBetaAppReviewDetailGetToOneRelated operation.
     * @callback module:api/AppsApi~appsBetaAppReviewDetailGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BetaAppReviewDetailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBetaAppReviewDetails] the fields to include for returned resources of type betaAppReviewDetails
     * @param {module:api/AppsApi~appsBetaAppReviewDetailGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BetaAppReviewDetailResponse}
     */
    appsBetaAppReviewDetailGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsBetaAppReviewDetailGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[betaAppReviewDetails]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppReviewDetails'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BetaAppReviewDetailResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/betaAppReviewDetail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsBetaGroupsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsBetaGroupsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BetaGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBetaGroups] the fields to include for returned resources of type betaGroups
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppsApi~appsBetaGroupsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BetaGroupsResponse}
     */
    appsBetaGroupsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsBetaGroupsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[betaGroups]': this.apiClient.buildCollectionParam(opts['fieldsBetaGroups'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BetaGroupsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/betaGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsBetaLicenseAgreementGetToOneRelated operation.
     * @callback module:api/AppsApi~appsBetaLicenseAgreementGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BetaLicenseAgreementResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBetaLicenseAgreements] the fields to include for returned resources of type betaLicenseAgreements
     * @param {module:api/AppsApi~appsBetaLicenseAgreementGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BetaLicenseAgreementResponse}
     */
    appsBetaLicenseAgreementGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsBetaLicenseAgreementGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[betaLicenseAgreements]': this.apiClient.buildCollectionParam(opts['fieldsBetaLicenseAgreements'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BetaLicenseAgreementResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/betaLicenseAgreement', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsBetaTestersDeleteToManyRelationship operation.
     * @callback module:api/AppsApi~appsBetaTestersDeleteToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppBetaTestersLinkagesRequest} appBetaTestersLinkagesRequest List of related linkages
     * @param {module:api/AppsApi~appsBetaTestersDeleteToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appsBetaTestersDeleteToManyRelationship(id, appBetaTestersLinkagesRequest, callback) {
      let postBody = appBetaTestersLinkagesRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsBetaTestersDeleteToManyRelationship");
      }
      // verify the required parameter 'appBetaTestersLinkagesRequest' is set
      if (appBetaTestersLinkagesRequest === undefined || appBetaTestersLinkagesRequest === null) {
        throw new Error("Missing the required parameter 'appBetaTestersLinkagesRequest' when calling appsBetaTestersDeleteToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/apps/{id}/relationships/betaTesters', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsBuildsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsBuildsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBuilds] the fields to include for returned resources of type builds
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppsApi~appsBuildsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildsResponse}
     */
    appsBuildsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsBuildsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[builds]': this.apiClient.buildCollectionParam(opts['fieldsBuilds'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/builds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsEndUserLicenseAgreementGetToOneRelated operation.
     * @callback module:api/AppsApi~appsEndUserLicenseAgreementGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EndUserLicenseAgreementResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsEndUserLicenseAgreements] the fields to include for returned resources of type endUserLicenseAgreements
     * @param {module:api/AppsApi~appsEndUserLicenseAgreementGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndUserLicenseAgreementResponse}
     */
    appsEndUserLicenseAgreementGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsEndUserLicenseAgreementGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[endUserLicenseAgreements]': this.apiClient.buildCollectionParam(opts['fieldsEndUserLicenseAgreements'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EndUserLicenseAgreementResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/endUserLicenseAgreement', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsGameCenterEnabledVersionsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsGameCenterEnabledVersionsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterEnabledVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterPlatform] filter by attribute 'platform'
     * @param {Array.<String>} [filterVersionString] filter by attribute 'versionString'
     * @param {Array.<String>} [filterId] filter by id(s)
     * @param {Array.<module:model/String>} [sort] comma-separated list of sort expressions; resources will be sorted as specified
     * @param {Array.<module:model/String>} [fieldsGameCenterEnabledVersions] the fields to include for returned resources of type gameCenterEnabledVersions
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppsApi~appsGameCenterEnabledVersionsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterEnabledVersionsResponse}
     */
    appsGameCenterEnabledVersionsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsGameCenterEnabledVersionsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[platform]': this.apiClient.buildCollectionParam(opts['filterPlatform'], 'csv'),
        'filter[versionString]': this.apiClient.buildCollectionParam(opts['filterVersionString'], 'csv'),
        'filter[id]': this.apiClient.buildCollectionParam(opts['filterId'], 'csv'),
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'csv'),
        'fields[gameCenterEnabledVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterEnabledVersions'], 'csv'),
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterEnabledVersionsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/gameCenterEnabledVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsGetCollection operation.
     * @callback module:api/AppsApi~appsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterAppStoreVersionsAppStoreState] filter by attribute 'appStoreVersions.appStoreState'
     * @param {Array.<module:model/String>} [filterAppStoreVersionsPlatform] filter by attribute 'appStoreVersions.platform'
     * @param {Array.<String>} [filterBundleId] filter by attribute 'bundleId'
     * @param {Array.<String>} [filterName] filter by attribute 'name'
     * @param {Array.<String>} [filterSku] filter by attribute 'sku'
     * @param {Array.<String>} [filterAppStoreVersions] filter by id(s) of related 'appStoreVersions'
     * @param {Array.<String>} [filterId] filter by id(s)
     * @param {Array.<String>} [existsGameCenterEnabledVersions] filter by existence or non-existence of related 'gameCenterEnabledVersions'
     * @param {Array.<module:model/String>} [sort] comma-separated list of sort expressions; resources will be sorted as specified
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Array.<module:model/String>} [fieldsBetaGroups] the fields to include for returned resources of type betaGroups
     * @param {Array.<module:model/String>} [fieldsPerfPowerMetrics] the fields to include for returned resources of type perfPowerMetrics
     * @param {Array.<module:model/String>} [fieldsAppInfos] the fields to include for returned resources of type appInfos
     * @param {Array.<module:model/String>} [fieldsAppPreOrders] the fields to include for returned resources of type appPreOrders
     * @param {Array.<module:model/String>} [fieldsPreReleaseVersions] the fields to include for returned resources of type preReleaseVersions
     * @param {Array.<module:model/String>} [fieldsAppPrices] the fields to include for returned resources of type appPrices
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [fieldsBetaAppReviewDetails] the fields to include for returned resources of type betaAppReviewDetails
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [fieldsGameCenterEnabledVersions] the fields to include for returned resources of type gameCenterEnabledVersions
     * @param {Array.<module:model/String>} [fieldsAppStoreVersions] the fields to include for returned resources of type appStoreVersions
     * @param {Array.<module:model/String>} [fieldsBuilds] the fields to include for returned resources of type builds
     * @param {Array.<module:model/String>} [fieldsBetaAppLocalizations] the fields to include for returned resources of type betaAppLocalizations
     * @param {Array.<module:model/String>} [fieldsBetaLicenseAgreements] the fields to include for returned resources of type betaLicenseAgreements
     * @param {Array.<module:model/String>} [fieldsEndUserLicenseAgreements] the fields to include for returned resources of type endUserLicenseAgreements
     * @param {Number} [limitAppInfos] maximum number of related appInfos returned (when they are included)
     * @param {Number} [limitAppStoreVersions] maximum number of related appStoreVersions returned (when they are included)
     * @param {Number} [limitAvailableTerritories] maximum number of related availableTerritories returned (when they are included)
     * @param {Number} [limitBetaAppLocalizations] maximum number of related betaAppLocalizations returned (when they are included)
     * @param {Number} [limitBetaGroups] maximum number of related betaGroups returned (when they are included)
     * @param {Number} [limitBuilds] maximum number of related builds returned (when they are included)
     * @param {Number} [limitGameCenterEnabledVersions] maximum number of related gameCenterEnabledVersions returned (when they are included)
     * @param {Number} [limitInAppPurchases] maximum number of related inAppPurchases returned (when they are included)
     * @param {Number} [limitPreReleaseVersions] maximum number of related preReleaseVersions returned (when they are included)
     * @param {Number} [limitPrices] maximum number of related prices returned (when they are included)
     * @param {module:api/AppsApi~appsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppsResponse}
     */
    appsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter[appStoreVersions.appStoreState]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersionsAppStoreState'], 'csv'),
        'filter[appStoreVersions.platform]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersionsPlatform'], 'csv'),
        'filter[bundleId]': this.apiClient.buildCollectionParam(opts['filterBundleId'], 'csv'),
        'filter[name]': this.apiClient.buildCollectionParam(opts['filterName'], 'csv'),
        'filter[sku]': this.apiClient.buildCollectionParam(opts['filterSku'], 'csv'),
        'filter[appStoreVersions]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersions'], 'csv'),
        'filter[id]': this.apiClient.buildCollectionParam(opts['filterId'], 'csv'),
        'exists[gameCenterEnabledVersions]': this.apiClient.buildCollectionParam(opts['existsGameCenterEnabledVersions'], 'csv'),
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'csv'),
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'fields[betaGroups]': this.apiClient.buildCollectionParam(opts['fieldsBetaGroups'], 'csv'),
        'fields[perfPowerMetrics]': this.apiClient.buildCollectionParam(opts['fieldsPerfPowerMetrics'], 'csv'),
        'fields[appInfos]': this.apiClient.buildCollectionParam(opts['fieldsAppInfos'], 'csv'),
        'fields[appPreOrders]': this.apiClient.buildCollectionParam(opts['fieldsAppPreOrders'], 'csv'),
        'fields[preReleaseVersions]': this.apiClient.buildCollectionParam(opts['fieldsPreReleaseVersions'], 'csv'),
        'fields[appPrices]': this.apiClient.buildCollectionParam(opts['fieldsAppPrices'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'fields[betaAppReviewDetails]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppReviewDetails'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'fields[gameCenterEnabledVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterEnabledVersions'], 'csv'),
        'fields[appStoreVersions]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersions'], 'csv'),
        'fields[builds]': this.apiClient.buildCollectionParam(opts['fieldsBuilds'], 'csv'),
        'fields[betaAppLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppLocalizations'], 'csv'),
        'fields[betaLicenseAgreements]': this.apiClient.buildCollectionParam(opts['fieldsBetaLicenseAgreements'], 'csv'),
        'fields[endUserLicenseAgreements]': this.apiClient.buildCollectionParam(opts['fieldsEndUserLicenseAgreements'], 'csv'),
        'limit[appInfos]': opts['limitAppInfos'],
        'limit[appStoreVersions]': opts['limitAppStoreVersions'],
        'limit[availableTerritories]': opts['limitAvailableTerritories'],
        'limit[betaAppLocalizations]': opts['limitBetaAppLocalizations'],
        'limit[betaGroups]': opts['limitBetaGroups'],
        'limit[builds]': opts['limitBuilds'],
        'limit[gameCenterEnabledVersions]': opts['limitGameCenterEnabledVersions'],
        'limit[inAppPurchases]': opts['limitInAppPurchases'],
        'limit[preReleaseVersions]': opts['limitPreReleaseVersions'],
        'limit[prices]': opts['limitPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppsResponse;
      return this.apiClient.callApi(
        '/v1/apps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsGetInstance operation.
     * @callback module:api/AppsApi~appsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Array.<module:model/String>} [fieldsBetaGroups] the fields to include for returned resources of type betaGroups
     * @param {Array.<module:model/String>} [fieldsPerfPowerMetrics] the fields to include for returned resources of type perfPowerMetrics
     * @param {Array.<module:model/String>} [fieldsAppInfos] the fields to include for returned resources of type appInfos
     * @param {Array.<module:model/String>} [fieldsAppPreOrders] the fields to include for returned resources of type appPreOrders
     * @param {Array.<module:model/String>} [fieldsPreReleaseVersions] the fields to include for returned resources of type preReleaseVersions
     * @param {Array.<module:model/String>} [fieldsAppPrices] the fields to include for returned resources of type appPrices
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [fieldsBetaAppReviewDetails] the fields to include for returned resources of type betaAppReviewDetails
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [fieldsGameCenterEnabledVersions] the fields to include for returned resources of type gameCenterEnabledVersions
     * @param {Array.<module:model/String>} [fieldsAppStoreVersions] the fields to include for returned resources of type appStoreVersions
     * @param {Array.<module:model/String>} [fieldsBuilds] the fields to include for returned resources of type builds
     * @param {Array.<module:model/String>} [fieldsBetaAppLocalizations] the fields to include for returned resources of type betaAppLocalizations
     * @param {Array.<module:model/String>} [fieldsBetaLicenseAgreements] the fields to include for returned resources of type betaLicenseAgreements
     * @param {Array.<module:model/String>} [fieldsEndUserLicenseAgreements] the fields to include for returned resources of type endUserLicenseAgreements
     * @param {Number} [limitAppInfos] maximum number of related appInfos returned (when they are included)
     * @param {Number} [limitAppStoreVersions] maximum number of related appStoreVersions returned (when they are included)
     * @param {Number} [limitAvailableTerritories] maximum number of related availableTerritories returned (when they are included)
     * @param {Number} [limitBetaAppLocalizations] maximum number of related betaAppLocalizations returned (when they are included)
     * @param {Number} [limitBetaGroups] maximum number of related betaGroups returned (when they are included)
     * @param {Number} [limitBuilds] maximum number of related builds returned (when they are included)
     * @param {Number} [limitGameCenterEnabledVersions] maximum number of related gameCenterEnabledVersions returned (when they are included)
     * @param {Number} [limitInAppPurchases] maximum number of related inAppPurchases returned (when they are included)
     * @param {Number} [limitPreReleaseVersions] maximum number of related preReleaseVersions returned (when they are included)
     * @param {Number} [limitPrices] maximum number of related prices returned (when they are included)
     * @param {module:api/AppsApi~appsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppResponse}
     */
    appsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'fields[betaGroups]': this.apiClient.buildCollectionParam(opts['fieldsBetaGroups'], 'csv'),
        'fields[perfPowerMetrics]': this.apiClient.buildCollectionParam(opts['fieldsPerfPowerMetrics'], 'csv'),
        'fields[appInfos]': this.apiClient.buildCollectionParam(opts['fieldsAppInfos'], 'csv'),
        'fields[appPreOrders]': this.apiClient.buildCollectionParam(opts['fieldsAppPreOrders'], 'csv'),
        'fields[preReleaseVersions]': this.apiClient.buildCollectionParam(opts['fieldsPreReleaseVersions'], 'csv'),
        'fields[appPrices]': this.apiClient.buildCollectionParam(opts['fieldsAppPrices'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'fields[betaAppReviewDetails]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppReviewDetails'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'fields[gameCenterEnabledVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterEnabledVersions'], 'csv'),
        'fields[appStoreVersions]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersions'], 'csv'),
        'fields[builds]': this.apiClient.buildCollectionParam(opts['fieldsBuilds'], 'csv'),
        'fields[betaAppLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppLocalizations'], 'csv'),
        'fields[betaLicenseAgreements]': this.apiClient.buildCollectionParam(opts['fieldsBetaLicenseAgreements'], 'csv'),
        'fields[endUserLicenseAgreements]': this.apiClient.buildCollectionParam(opts['fieldsEndUserLicenseAgreements'], 'csv'),
        'limit[appInfos]': opts['limitAppInfos'],
        'limit[appStoreVersions]': opts['limitAppStoreVersions'],
        'limit[availableTerritories]': opts['limitAvailableTerritories'],
        'limit[betaAppLocalizations]': opts['limitBetaAppLocalizations'],
        'limit[betaGroups]': opts['limitBetaGroups'],
        'limit[builds]': opts['limitBuilds'],
        'limit[gameCenterEnabledVersions]': opts['limitGameCenterEnabledVersions'],
        'limit[inAppPurchases]': opts['limitInAppPurchases'],
        'limit[preReleaseVersions]': opts['limitPreReleaseVersions'],
        'limit[prices]': opts['limitPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsInAppPurchasesGetToManyRelated operation.
     * @callback module:api/AppsApi~appsInAppPurchasesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterInAppPurchaseType] filter by attribute 'inAppPurchaseType'
     * @param {Array.<String>} [filterCanBeSubmitted] filter by canBeSubmitted
     * @param {Array.<module:model/String>} [sort] comma-separated list of sort expressions; resources will be sorted as specified
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppsApi~appsInAppPurchasesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasesResponse}
     */
    appsInAppPurchasesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsInAppPurchasesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[inAppPurchaseType]': this.apiClient.buildCollectionParam(opts['filterInAppPurchaseType'], 'csv'),
        'filter[canBeSubmitted]': this.apiClient.buildCollectionParam(opts['filterCanBeSubmitted'], 'csv'),
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasesResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/inAppPurchases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsPerfPowerMetricsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsPerfPowerMetricsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PerfPowerMetricsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterDeviceType] filter by attribute 'deviceType'
     * @param {Array.<module:model/String>} [filterMetricType] filter by attribute 'metricType'
     * @param {Array.<module:model/String>} [filterPlatform] filter by attribute 'platform'
     * @param {module:api/AppsApi~appsPerfPowerMetricsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PerfPowerMetricsResponse}
     */
    appsPerfPowerMetricsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsPerfPowerMetricsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[deviceType]': this.apiClient.buildCollectionParam(opts['filterDeviceType'], 'csv'),
        'filter[metricType]': this.apiClient.buildCollectionParam(opts['filterMetricType'], 'csv'),
        'filter[platform]': this.apiClient.buildCollectionParam(opts['filterPlatform'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PerfPowerMetricsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/perfPowerMetrics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsPreOrderGetToOneRelated operation.
     * @callback module:api/AppsApi~appsPreOrderGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppPreOrders] the fields to include for returned resources of type appPreOrders
     * @param {module:api/AppsApi~appsPreOrderGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreOrderResponse}
     */
    appsPreOrderGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsPreOrderGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appPreOrders]': this.apiClient.buildCollectionParam(opts['fieldsAppPreOrders'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPreOrderResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/preOrder', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsPreReleaseVersionsGetToManyRelated operation.
     * @callback module:api/AppsApi~appsPreReleaseVersionsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreReleaseVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsPreReleaseVersions] the fields to include for returned resources of type preReleaseVersions
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppsApi~appsPreReleaseVersionsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreReleaseVersionsResponse}
     */
    appsPreReleaseVersionsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsPreReleaseVersionsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[preReleaseVersions]': this.apiClient.buildCollectionParam(opts['fieldsPreReleaseVersions'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PreReleaseVersionsResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/preReleaseVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsPricesGetToManyRelated operation.
     * @callback module:api/AppsApi~appsPricesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPricesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppPrices] the fields to include for returned resources of type appPrices
     * @param {Array.<module:model/String>} [fieldsAppPriceTiers] the fields to include for returned resources of type appPriceTiers
     * @param {Array.<module:model/String>} [fieldsApps] the fields to include for returned resources of type apps
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppsApi~appsPricesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPricesResponse}
     */
    appsPricesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsPricesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appPrices]': this.apiClient.buildCollectionParam(opts['fieldsAppPrices'], 'csv'),
        'fields[appPriceTiers]': this.apiClient.buildCollectionParam(opts['fieldsAppPriceTiers'], 'csv'),
        'fields[apps]': this.apiClient.buildCollectionParam(opts['fieldsApps'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPricesResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}/prices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appsUpdateInstance operation.
     * @callback module:api/AppsApi~appsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppUpdateRequest} appUpdateRequest App representation
     * @param {module:api/AppsApi~appsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppResponse}
     */
    appsUpdateInstance(id, appUpdateRequest, callback) {
      let postBody = appUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appsUpdateInstance");
      }
      // verify the required parameter 'appUpdateRequest' is set
      if (appUpdateRequest === undefined || appUpdateRequest === null) {
        throw new Error("Missing the required parameter 'appUpdateRequest' when calling appsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppResponse;
      return this.apiClient.callApi(
        '/v1/apps/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
