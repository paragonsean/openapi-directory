/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppStoreReviewAttachmentsResponse from '../model/AppStoreReviewAttachmentsResponse';
import AppStoreReviewDetailCreateRequest from '../model/AppStoreReviewDetailCreateRequest';
import AppStoreReviewDetailResponse from '../model/AppStoreReviewDetailResponse';
import AppStoreReviewDetailUpdateRequest from '../model/AppStoreReviewDetailUpdateRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppStoreReviewDetails service.
* @module api/AppStoreReviewDetailsApi
* @version 1.4.1
*/
export default class AppStoreReviewDetailsApi {

    /**
    * Constructs a new AppStoreReviewDetailsApi. 
    * @alias module:api/AppStoreReviewDetailsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated operation.
     * @callback module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewAttachmentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppStoreReviewDetails] the fields to include for returned resources of type appStoreReviewDetails
     * @param {Array.<module:model/String>} [fieldsAppStoreReviewAttachments] the fields to include for returned resources of type appStoreReviewAttachments
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewAttachmentsResponse}
     */
    appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appStoreReviewDetails]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreReviewDetails'], 'csv'),
        'fields[appStoreReviewAttachments]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreReviewAttachments'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewAttachmentsResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreReviewDetailsCreateInstance operation.
     * @callback module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewDetailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppStoreReviewDetailCreateRequest} appStoreReviewDetailCreateRequest AppStoreReviewDetail representation
     * @param {module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewDetailResponse}
     */
    appStoreReviewDetailsCreateInstance(appStoreReviewDetailCreateRequest, callback) {
      let postBody = appStoreReviewDetailCreateRequest;
      // verify the required parameter 'appStoreReviewDetailCreateRequest' is set
      if (appStoreReviewDetailCreateRequest === undefined || appStoreReviewDetailCreateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreReviewDetailCreateRequest' when calling appStoreReviewDetailsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewDetailResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreReviewDetailsGetInstance operation.
     * @callback module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewDetailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppStoreReviewDetails] the fields to include for returned resources of type appStoreReviewDetails
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Array.<module:model/String>} [fieldsAppStoreReviewAttachments] the fields to include for returned resources of type appStoreReviewAttachments
     * @param {Number} [limitAppStoreReviewAttachments] maximum number of related appStoreReviewAttachments returned (when they are included)
     * @param {module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewDetailResponse}
     */
    appStoreReviewDetailsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreReviewDetailsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appStoreReviewDetails]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreReviewDetails'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'fields[appStoreReviewAttachments]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreReviewAttachments'], 'csv'),
        'limit[appStoreReviewAttachments]': opts['limitAppStoreReviewAttachments']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewDetailResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewDetails/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreReviewDetailsUpdateInstance operation.
     * @callback module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewDetailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppStoreReviewDetailUpdateRequest} appStoreReviewDetailUpdateRequest AppStoreReviewDetail representation
     * @param {module:api/AppStoreReviewDetailsApi~appStoreReviewDetailsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewDetailResponse}
     */
    appStoreReviewDetailsUpdateInstance(id, appStoreReviewDetailUpdateRequest, callback) {
      let postBody = appStoreReviewDetailUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreReviewDetailsUpdateInstance");
      }
      // verify the required parameter 'appStoreReviewDetailUpdateRequest' is set
      if (appStoreReviewDetailUpdateRequest === undefined || appStoreReviewDetailUpdateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreReviewDetailUpdateRequest' when calling appStoreReviewDetailsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewDetailResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewDetails/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
