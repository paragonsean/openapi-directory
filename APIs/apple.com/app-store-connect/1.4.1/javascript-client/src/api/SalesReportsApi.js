/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';

/**
* SalesReports service.
* @module api/SalesReportsApi
* @version 1.4.1
*/
export default class SalesReportsApi {

    /**
    * Constructs a new SalesReportsApi. 
    * @alias module:api/SalesReportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the salesReportsGetCollection operation.
     * @callback module:api/SalesReportsApi~salesReportsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Array.<module:model/String>} filterFrequency filter by attribute 'frequency'
     * @param {Array.<module:model/String>} filterReportSubType filter by attribute 'reportSubType'
     * @param {Array.<module:model/String>} filterReportType filter by attribute 'reportType'
     * @param {Array.<String>} filterVendorNumber filter by attribute 'vendorNumber'
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterReportDate] filter by attribute 'reportDate'
     * @param {Array.<String>} [filterVersion] filter by attribute 'version'
     * @param {module:api/SalesReportsApi~salesReportsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    salesReportsGetCollection(filterFrequency, filterReportSubType, filterReportType, filterVendorNumber, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'filterFrequency' is set
      if (filterFrequency === undefined || filterFrequency === null) {
        throw new Error("Missing the required parameter 'filterFrequency' when calling salesReportsGetCollection");
      }
      // verify the required parameter 'filterReportSubType' is set
      if (filterReportSubType === undefined || filterReportSubType === null) {
        throw new Error("Missing the required parameter 'filterReportSubType' when calling salesReportsGetCollection");
      }
      // verify the required parameter 'filterReportType' is set
      if (filterReportType === undefined || filterReportType === null) {
        throw new Error("Missing the required parameter 'filterReportType' when calling salesReportsGetCollection");
      }
      // verify the required parameter 'filterVendorNumber' is set
      if (filterVendorNumber === undefined || filterVendorNumber === null) {
        throw new Error("Missing the required parameter 'filterVendorNumber' when calling salesReportsGetCollection");
      }

      let pathParams = {
      };
      let queryParams = {
        'filter[frequency]': this.apiClient.buildCollectionParam(filterFrequency, 'csv'),
        'filter[reportDate]': this.apiClient.buildCollectionParam(opts['filterReportDate'], 'csv'),
        'filter[reportSubType]': this.apiClient.buildCollectionParam(filterReportSubType, 'csv'),
        'filter[reportType]': this.apiClient.buildCollectionParam(filterReportType, 'csv'),
        'filter[vendorNumber]': this.apiClient.buildCollectionParam(filterVendorNumber, 'csv'),
        'filter[version]': this.apiClient.buildCollectionParam(opts['filterVersion'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['gzip', 'application/json'];
      let returnType = File;
      return this.apiClient.callApi(
        '/v1/salesReports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
