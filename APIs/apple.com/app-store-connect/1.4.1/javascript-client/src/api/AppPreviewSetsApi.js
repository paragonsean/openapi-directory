/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppPreviewSetAppPreviewsLinkagesRequest from '../model/AppPreviewSetAppPreviewsLinkagesRequest';
import AppPreviewSetAppPreviewsLinkagesResponse from '../model/AppPreviewSetAppPreviewsLinkagesResponse';
import AppPreviewSetCreateRequest from '../model/AppPreviewSetCreateRequest';
import AppPreviewSetResponse from '../model/AppPreviewSetResponse';
import AppPreviewsResponse from '../model/AppPreviewsResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppPreviewSets service.
* @module api/AppPreviewSetsApi
* @version 1.4.1
*/
export default class AppPreviewSetsApi {

    /**
    * Constructs a new AppPreviewSetsApi. 
    * @alias module:api/AppPreviewSetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appPreviewSetsAppPreviewsGetToManyRelated operation.
     * @callback module:api/AppPreviewSetsApi~appPreviewSetsAppPreviewsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreviewsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppPreviews] the fields to include for returned resources of type appPreviews
     * @param {Array.<module:model/String>} [fieldsAppPreviewSets] the fields to include for returned resources of type appPreviewSets
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppPreviewSetsApi~appPreviewSetsAppPreviewsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreviewsResponse}
     */
    appPreviewSetsAppPreviewsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPreviewSetsAppPreviewsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appPreviews]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviews'], 'csv'),
        'fields[appPreviewSets]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviewSets'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPreviewsResponse;
      return this.apiClient.callApi(
        '/v1/appPreviewSets/{id}/appPreviews', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPreviewSetsAppPreviewsGetToManyRelationship operation.
     * @callback module:api/AppPreviewSetsApi~appPreviewSetsAppPreviewsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreviewSetAppPreviewsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppPreviewSetsApi~appPreviewSetsAppPreviewsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreviewSetAppPreviewsLinkagesResponse}
     */
    appPreviewSetsAppPreviewsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPreviewSetsAppPreviewsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPreviewSetAppPreviewsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appPreviewSets/{id}/relationships/appPreviews', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPreviewSetsAppPreviewsReplaceToManyRelationship operation.
     * @callback module:api/AppPreviewSetsApi~appPreviewSetsAppPreviewsReplaceToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppPreviewSetAppPreviewsLinkagesRequest} appPreviewSetAppPreviewsLinkagesRequest List of related linkages
     * @param {module:api/AppPreviewSetsApi~appPreviewSetsAppPreviewsReplaceToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appPreviewSetsAppPreviewsReplaceToManyRelationship(id, appPreviewSetAppPreviewsLinkagesRequest, callback) {
      let postBody = appPreviewSetAppPreviewsLinkagesRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPreviewSetsAppPreviewsReplaceToManyRelationship");
      }
      // verify the required parameter 'appPreviewSetAppPreviewsLinkagesRequest' is set
      if (appPreviewSetAppPreviewsLinkagesRequest === undefined || appPreviewSetAppPreviewsLinkagesRequest === null) {
        throw new Error("Missing the required parameter 'appPreviewSetAppPreviewsLinkagesRequest' when calling appPreviewSetsAppPreviewsReplaceToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appPreviewSets/{id}/relationships/appPreviews', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPreviewSetsCreateInstance operation.
     * @callback module:api/AppPreviewSetsApi~appPreviewSetsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreviewSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppPreviewSetCreateRequest} appPreviewSetCreateRequest AppPreviewSet representation
     * @param {module:api/AppPreviewSetsApi~appPreviewSetsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreviewSetResponse}
     */
    appPreviewSetsCreateInstance(appPreviewSetCreateRequest, callback) {
      let postBody = appPreviewSetCreateRequest;
      // verify the required parameter 'appPreviewSetCreateRequest' is set
      if (appPreviewSetCreateRequest === undefined || appPreviewSetCreateRequest === null) {
        throw new Error("Missing the required parameter 'appPreviewSetCreateRequest' when calling appPreviewSetsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppPreviewSetResponse;
      return this.apiClient.callApi(
        '/v1/appPreviewSets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPreviewSetsDeleteInstance operation.
     * @callback module:api/AppPreviewSetsApi~appPreviewSetsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/AppPreviewSetsApi~appPreviewSetsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appPreviewSetsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPreviewSetsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appPreviewSets/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPreviewSetsGetInstance operation.
     * @callback module:api/AppPreviewSetsApi~appPreviewSetsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreviewSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppPreviewSets] the fields to include for returned resources of type appPreviewSets
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Array.<module:model/String>} [fieldsAppPreviews] the fields to include for returned resources of type appPreviews
     * @param {Number} [limitAppPreviews] maximum number of related appPreviews returned (when they are included)
     * @param {module:api/AppPreviewSetsApi~appPreviewSetsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreviewSetResponse}
     */
    appPreviewSetsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPreviewSetsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appPreviewSets]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviewSets'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'fields[appPreviews]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviews'], 'csv'),
        'limit[appPreviews]': opts['limitAppPreviews']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPreviewSetResponse;
      return this.apiClient.callApi(
        '/v1/appPreviewSets/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
