/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppStoreReviewAttachmentCreateRequest from '../model/AppStoreReviewAttachmentCreateRequest';
import AppStoreReviewAttachmentResponse from '../model/AppStoreReviewAttachmentResponse';
import AppStoreReviewAttachmentUpdateRequest from '../model/AppStoreReviewAttachmentUpdateRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppStoreReviewAttachments service.
* @module api/AppStoreReviewAttachmentsApi
* @version 1.4.1
*/
export default class AppStoreReviewAttachmentsApi {

    /**
    * Constructs a new AppStoreReviewAttachmentsApi. 
    * @alias module:api/AppStoreReviewAttachmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appStoreReviewAttachmentsCreateInstance operation.
     * @callback module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewAttachmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppStoreReviewAttachmentCreateRequest} appStoreReviewAttachmentCreateRequest AppStoreReviewAttachment representation
     * @param {module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewAttachmentResponse}
     */
    appStoreReviewAttachmentsCreateInstance(appStoreReviewAttachmentCreateRequest, callback) {
      let postBody = appStoreReviewAttachmentCreateRequest;
      // verify the required parameter 'appStoreReviewAttachmentCreateRequest' is set
      if (appStoreReviewAttachmentCreateRequest === undefined || appStoreReviewAttachmentCreateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreReviewAttachmentCreateRequest' when calling appStoreReviewAttachmentsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewAttachmentResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewAttachments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreReviewAttachmentsDeleteInstance operation.
     * @callback module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appStoreReviewAttachmentsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreReviewAttachmentsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appStoreReviewAttachments/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreReviewAttachmentsGetInstance operation.
     * @callback module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewAttachmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppStoreReviewAttachments] the fields to include for returned resources of type appStoreReviewAttachments
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewAttachmentResponse}
     */
    appStoreReviewAttachmentsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreReviewAttachmentsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appStoreReviewAttachments]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreReviewAttachments'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewAttachmentResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewAttachments/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreReviewAttachmentsUpdateInstance operation.
     * @callback module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreReviewAttachmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppStoreReviewAttachmentUpdateRequest} appStoreReviewAttachmentUpdateRequest AppStoreReviewAttachment representation
     * @param {module:api/AppStoreReviewAttachmentsApi~appStoreReviewAttachmentsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreReviewAttachmentResponse}
     */
    appStoreReviewAttachmentsUpdateInstance(id, appStoreReviewAttachmentUpdateRequest, callback) {
      let postBody = appStoreReviewAttachmentUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreReviewAttachmentsUpdateInstance");
      }
      // verify the required parameter 'appStoreReviewAttachmentUpdateRequest' is set
      if (appStoreReviewAttachmentUpdateRequest === undefined || appStoreReviewAttachmentUpdateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreReviewAttachmentUpdateRequest' when calling appStoreReviewAttachmentsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreReviewAttachmentResponse;
      return this.apiClient.callApi(
        '/v1/appStoreReviewAttachments/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
