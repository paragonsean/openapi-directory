/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BundleIdCapabilityCreateRequest from '../model/BundleIdCapabilityCreateRequest';
import BundleIdCapabilityResponse from '../model/BundleIdCapabilityResponse';
import BundleIdCapabilityUpdateRequest from '../model/BundleIdCapabilityUpdateRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* BundleIdCapabilities service.
* @module api/BundleIdCapabilitiesApi
* @version 1.4.1
*/
export default class BundleIdCapabilitiesApi {

    /**
    * Constructs a new BundleIdCapabilitiesApi. 
    * @alias module:api/BundleIdCapabilitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bundleIdCapabilitiesCreateInstance operation.
     * @callback module:api/BundleIdCapabilitiesApi~bundleIdCapabilitiesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BundleIdCapabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/BundleIdCapabilityCreateRequest} bundleIdCapabilityCreateRequest BundleIdCapability representation
     * @param {module:api/BundleIdCapabilitiesApi~bundleIdCapabilitiesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BundleIdCapabilityResponse}
     */
    bundleIdCapabilitiesCreateInstance(bundleIdCapabilityCreateRequest, callback) {
      let postBody = bundleIdCapabilityCreateRequest;
      // verify the required parameter 'bundleIdCapabilityCreateRequest' is set
      if (bundleIdCapabilityCreateRequest === undefined || bundleIdCapabilityCreateRequest === null) {
        throw new Error("Missing the required parameter 'bundleIdCapabilityCreateRequest' when calling bundleIdCapabilitiesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BundleIdCapabilityResponse;
      return this.apiClient.callApi(
        '/v1/bundleIdCapabilities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bundleIdCapabilitiesDeleteInstance operation.
     * @callback module:api/BundleIdCapabilitiesApi~bundleIdCapabilitiesDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/BundleIdCapabilitiesApi~bundleIdCapabilitiesDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    bundleIdCapabilitiesDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling bundleIdCapabilitiesDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/bundleIdCapabilities/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bundleIdCapabilitiesUpdateInstance operation.
     * @callback module:api/BundleIdCapabilitiesApi~bundleIdCapabilitiesUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BundleIdCapabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/BundleIdCapabilityUpdateRequest} bundleIdCapabilityUpdateRequest BundleIdCapability representation
     * @param {module:api/BundleIdCapabilitiesApi~bundleIdCapabilitiesUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BundleIdCapabilityResponse}
     */
    bundleIdCapabilitiesUpdateInstance(id, bundleIdCapabilityUpdateRequest, callback) {
      let postBody = bundleIdCapabilityUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling bundleIdCapabilitiesUpdateInstance");
      }
      // verify the required parameter 'bundleIdCapabilityUpdateRequest' is set
      if (bundleIdCapabilityUpdateRequest === undefined || bundleIdCapabilityUpdateRequest === null) {
        throw new Error("Missing the required parameter 'bundleIdCapabilityUpdateRequest' when calling bundleIdCapabilitiesUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BundleIdCapabilityResponse;
      return this.apiClient.callApi(
        '/v1/bundleIdCapabilities/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
