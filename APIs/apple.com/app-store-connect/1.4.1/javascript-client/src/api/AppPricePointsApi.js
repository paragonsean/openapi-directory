/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppPricePointResponse from '../model/AppPricePointResponse';
import AppPricePointsResponse from '../model/AppPricePointsResponse';
import ErrorResponse from '../model/ErrorResponse';
import TerritoryResponse from '../model/TerritoryResponse';

/**
* AppPricePoints service.
* @module api/AppPricePointsApi
* @version 1.4.1
*/
export default class AppPricePointsApi {

    /**
    * Constructs a new AppPricePointsApi. 
    * @alias module:api/AppPricePointsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appPricePointsGetCollection operation.
     * @callback module:api/AppPricePointsApi~appPricePointsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPricePointsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterPriceTier] filter by id(s) of related 'priceTier'
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsAppPricePoints] the fields to include for returned resources of type appPricePoints
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {module:api/AppPricePointsApi~appPricePointsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPricePointsResponse}
     */
    appPricePointsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter[priceTier]': this.apiClient.buildCollectionParam(opts['filterPriceTier'], 'csv'),
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[appPricePoints]': this.apiClient.buildCollectionParam(opts['fieldsAppPricePoints'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPricePointsResponse;
      return this.apiClient.callApi(
        '/v1/appPricePoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPricePointsGetInstance operation.
     * @callback module:api/AppPricePointsApi~appPricePointsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPricePointResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppPricePoints] the fields to include for returned resources of type appPricePoints
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {module:api/AppPricePointsApi~appPricePointsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPricePointResponse}
     */
    appPricePointsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPricePointsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appPricePoints]': this.apiClient.buildCollectionParam(opts['fieldsAppPricePoints'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPricePointResponse;
      return this.apiClient.callApi(
        '/v1/appPricePoints/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPricePointsTerritoryGetToOneRelated operation.
     * @callback module:api/AppPricePointsApi~appPricePointsTerritoryGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerritoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {module:api/AppPricePointsApi~appPricePointsTerritoryGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerritoryResponse}
     */
    appPricePointsTerritoryGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPricePointsTerritoryGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerritoryResponse;
      return this.apiClient.callApi(
        '/v1/appPricePoints/{id}/territory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
