# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_encryption_declaration_relationships_app import AppEncryptionDeclarationRelationshipsApp
from openapi_server.models.app_store_review_detail_relationships_app_store_version import AppStoreReviewDetailRelationshipsAppStoreVersion
from openapi_server.models.beta_group_relationships_beta_testers import BetaGroupRelationshipsBetaTesters
from openapi_server.models.build_relationships_app_encryption_declaration import BuildRelationshipsAppEncryptionDeclaration
from openapi_server.models.build_relationships_beta_app_review_submission import BuildRelationshipsBetaAppReviewSubmission
from openapi_server.models.build_relationships_beta_build_localizations import BuildRelationshipsBetaBuildLocalizations
from openapi_server.models.build_relationships_build_beta_detail import BuildRelationshipsBuildBetaDetail
from openapi_server.models.build_relationships_icons import BuildRelationshipsIcons
from openapi_server.models.build_relationships_pre_release_version import BuildRelationshipsPreReleaseVersion
from openapi_server import util


class BuildRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app: AppEncryptionDeclarationRelationshipsApp=None, app_encryption_declaration: BuildRelationshipsAppEncryptionDeclaration=None, app_store_version: AppStoreReviewDetailRelationshipsAppStoreVersion=None, beta_app_review_submission: BuildRelationshipsBetaAppReviewSubmission=None, beta_build_localizations: BuildRelationshipsBetaBuildLocalizations=None, build_beta_detail: BuildRelationshipsBuildBetaDetail=None, icons: BuildRelationshipsIcons=None, individual_testers: BetaGroupRelationshipsBetaTesters=None, pre_release_version: BuildRelationshipsPreReleaseVersion=None):
        """BuildRelationships - a model defined in OpenAPI

        :param app: The app of this BuildRelationships.
        :param app_encryption_declaration: The app_encryption_declaration of this BuildRelationships.
        :param app_store_version: The app_store_version of this BuildRelationships.
        :param beta_app_review_submission: The beta_app_review_submission of this BuildRelationships.
        :param beta_build_localizations: The beta_build_localizations of this BuildRelationships.
        :param build_beta_detail: The build_beta_detail of this BuildRelationships.
        :param icons: The icons of this BuildRelationships.
        :param individual_testers: The individual_testers of this BuildRelationships.
        :param pre_release_version: The pre_release_version of this BuildRelationships.
        """
        self.openapi_types = {
            'app': AppEncryptionDeclarationRelationshipsApp,
            'app_encryption_declaration': BuildRelationshipsAppEncryptionDeclaration,
            'app_store_version': AppStoreReviewDetailRelationshipsAppStoreVersion,
            'beta_app_review_submission': BuildRelationshipsBetaAppReviewSubmission,
            'beta_build_localizations': BuildRelationshipsBetaBuildLocalizations,
            'build_beta_detail': BuildRelationshipsBuildBetaDetail,
            'icons': BuildRelationshipsIcons,
            'individual_testers': BetaGroupRelationshipsBetaTesters,
            'pre_release_version': BuildRelationshipsPreReleaseVersion
        }

        self.attribute_map = {
            'app': 'app',
            'app_encryption_declaration': 'appEncryptionDeclaration',
            'app_store_version': 'appStoreVersion',
            'beta_app_review_submission': 'betaAppReviewSubmission',
            'beta_build_localizations': 'betaBuildLocalizations',
            'build_beta_detail': 'buildBetaDetail',
            'icons': 'icons',
            'individual_testers': 'individualTesters',
            'pre_release_version': 'preReleaseVersion'
        }

        self._app = app
        self._app_encryption_declaration = app_encryption_declaration
        self._app_store_version = app_store_version
        self._beta_app_review_submission = beta_app_review_submission
        self._beta_build_localizations = beta_build_localizations
        self._build_beta_detail = build_beta_detail
        self._icons = icons
        self._individual_testers = individual_testers
        self._pre_release_version = pre_release_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Build_relationships of this BuildRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app(self):
        """Gets the app of this BuildRelationships.


        :return: The app of this BuildRelationships.
        :rtype: AppEncryptionDeclarationRelationshipsApp
        """
        return self._app

    @app.setter
    def app(self, app):
        """Sets the app of this BuildRelationships.


        :param app: The app of this BuildRelationships.
        :type app: AppEncryptionDeclarationRelationshipsApp
        """

        self._app = app

    @property
    def app_encryption_declaration(self):
        """Gets the app_encryption_declaration of this BuildRelationships.


        :return: The app_encryption_declaration of this BuildRelationships.
        :rtype: BuildRelationshipsAppEncryptionDeclaration
        """
        return self._app_encryption_declaration

    @app_encryption_declaration.setter
    def app_encryption_declaration(self, app_encryption_declaration):
        """Sets the app_encryption_declaration of this BuildRelationships.


        :param app_encryption_declaration: The app_encryption_declaration of this BuildRelationships.
        :type app_encryption_declaration: BuildRelationshipsAppEncryptionDeclaration
        """

        self._app_encryption_declaration = app_encryption_declaration

    @property
    def app_store_version(self):
        """Gets the app_store_version of this BuildRelationships.


        :return: The app_store_version of this BuildRelationships.
        :rtype: AppStoreReviewDetailRelationshipsAppStoreVersion
        """
        return self._app_store_version

    @app_store_version.setter
    def app_store_version(self, app_store_version):
        """Sets the app_store_version of this BuildRelationships.


        :param app_store_version: The app_store_version of this BuildRelationships.
        :type app_store_version: AppStoreReviewDetailRelationshipsAppStoreVersion
        """

        self._app_store_version = app_store_version

    @property
    def beta_app_review_submission(self):
        """Gets the beta_app_review_submission of this BuildRelationships.


        :return: The beta_app_review_submission of this BuildRelationships.
        :rtype: BuildRelationshipsBetaAppReviewSubmission
        """
        return self._beta_app_review_submission

    @beta_app_review_submission.setter
    def beta_app_review_submission(self, beta_app_review_submission):
        """Sets the beta_app_review_submission of this BuildRelationships.


        :param beta_app_review_submission: The beta_app_review_submission of this BuildRelationships.
        :type beta_app_review_submission: BuildRelationshipsBetaAppReviewSubmission
        """

        self._beta_app_review_submission = beta_app_review_submission

    @property
    def beta_build_localizations(self):
        """Gets the beta_build_localizations of this BuildRelationships.


        :return: The beta_build_localizations of this BuildRelationships.
        :rtype: BuildRelationshipsBetaBuildLocalizations
        """
        return self._beta_build_localizations

    @beta_build_localizations.setter
    def beta_build_localizations(self, beta_build_localizations):
        """Sets the beta_build_localizations of this BuildRelationships.


        :param beta_build_localizations: The beta_build_localizations of this BuildRelationships.
        :type beta_build_localizations: BuildRelationshipsBetaBuildLocalizations
        """

        self._beta_build_localizations = beta_build_localizations

    @property
    def build_beta_detail(self):
        """Gets the build_beta_detail of this BuildRelationships.


        :return: The build_beta_detail of this BuildRelationships.
        :rtype: BuildRelationshipsBuildBetaDetail
        """
        return self._build_beta_detail

    @build_beta_detail.setter
    def build_beta_detail(self, build_beta_detail):
        """Sets the build_beta_detail of this BuildRelationships.


        :param build_beta_detail: The build_beta_detail of this BuildRelationships.
        :type build_beta_detail: BuildRelationshipsBuildBetaDetail
        """

        self._build_beta_detail = build_beta_detail

    @property
    def icons(self):
        """Gets the icons of this BuildRelationships.


        :return: The icons of this BuildRelationships.
        :rtype: BuildRelationshipsIcons
        """
        return self._icons

    @icons.setter
    def icons(self, icons):
        """Sets the icons of this BuildRelationships.


        :param icons: The icons of this BuildRelationships.
        :type icons: BuildRelationshipsIcons
        """

        self._icons = icons

    @property
    def individual_testers(self):
        """Gets the individual_testers of this BuildRelationships.


        :return: The individual_testers of this BuildRelationships.
        :rtype: BetaGroupRelationshipsBetaTesters
        """
        return self._individual_testers

    @individual_testers.setter
    def individual_testers(self, individual_testers):
        """Sets the individual_testers of this BuildRelationships.


        :param individual_testers: The individual_testers of this BuildRelationships.
        :type individual_testers: BetaGroupRelationshipsBetaTesters
        """

        self._individual_testers = individual_testers

    @property
    def pre_release_version(self):
        """Gets the pre_release_version of this BuildRelationships.


        :return: The pre_release_version of this BuildRelationships.
        :rtype: BuildRelationshipsPreReleaseVersion
        """
        return self._pre_release_version

    @pre_release_version.setter
    def pre_release_version(self, pre_release_version):
        """Sets the pre_release_version of this BuildRelationships.


        :param pre_release_version: The pre_release_version of this BuildRelationships.
        :type pre_release_version: BuildRelationshipsPreReleaseVersion
        """

        self._pre_release_version = pre_release_version
