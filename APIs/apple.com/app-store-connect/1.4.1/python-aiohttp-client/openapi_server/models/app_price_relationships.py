# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_encryption_declaration_relationships_app import AppEncryptionDeclarationRelationshipsApp
from openapi_server.models.app_price_relationships_price_tier import AppPriceRelationshipsPriceTier
from openapi_server import util


class AppPriceRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app: AppEncryptionDeclarationRelationshipsApp=None, price_tier: AppPriceRelationshipsPriceTier=None):
        """AppPriceRelationships - a model defined in OpenAPI

        :param app: The app of this AppPriceRelationships.
        :param price_tier: The price_tier of this AppPriceRelationships.
        """
        self.openapi_types = {
            'app': AppEncryptionDeclarationRelationshipsApp,
            'price_tier': AppPriceRelationshipsPriceTier
        }

        self.attribute_map = {
            'app': 'app',
            'price_tier': 'priceTier'
        }

        self._app = app
        self._price_tier = price_tier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppPriceRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppPrice_relationships of this AppPriceRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app(self):
        """Gets the app of this AppPriceRelationships.


        :return: The app of this AppPriceRelationships.
        :rtype: AppEncryptionDeclarationRelationshipsApp
        """
        return self._app

    @app.setter
    def app(self, app):
        """Sets the app of this AppPriceRelationships.


        :param app: The app of this AppPriceRelationships.
        :type app: AppEncryptionDeclarationRelationshipsApp
        """

        self._app = app

    @property
    def price_tier(self):
        """Gets the price_tier of this AppPriceRelationships.


        :return: The price_tier of this AppPriceRelationships.
        :rtype: AppPriceRelationshipsPriceTier
        """
        return self._price_tier

    @price_tier.setter
    def price_tier(self, price_tier):
        """Sets the price_tier of this AppPriceRelationships.


        :param price_tier: The price_tier of this AppPriceRelationships.
        :type price_tier: AppPriceRelationshipsPriceTier
        """

        self._price_tier = price_tier
