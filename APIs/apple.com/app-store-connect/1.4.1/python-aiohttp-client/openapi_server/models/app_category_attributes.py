# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.platform import Platform
from openapi_server import util


class AppCategoryAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, platforms: List[Platform]=None):
        """AppCategoryAttributes - a model defined in OpenAPI

        :param platforms: The platforms of this AppCategoryAttributes.
        """
        self.openapi_types = {
            'platforms': List[Platform]
        }

        self.attribute_map = {
            'platforms': 'platforms'
        }

        self._platforms = platforms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppCategoryAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppCategory_attributes of this AppCategoryAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def platforms(self):
        """Gets the platforms of this AppCategoryAttributes.


        :return: The platforms of this AppCategoryAttributes.
        :rtype: List[Platform]
        """
        return self._platforms

    @platforms.setter
    def platforms(self, platforms):
        """Sets the platforms of this AppCategoryAttributes.


        :param platforms: The platforms of this AppCategoryAttributes.
        :type platforms: List[Platform]
        """

        self._platforms = platforms
