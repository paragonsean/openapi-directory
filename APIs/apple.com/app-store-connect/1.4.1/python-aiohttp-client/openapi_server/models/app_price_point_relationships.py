# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_price_point_relationships_territory import AppPricePointRelationshipsTerritory
from openapi_server.models.app_price_relationships_price_tier import AppPriceRelationshipsPriceTier
from openapi_server import util


class AppPricePointRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, price_tier: AppPriceRelationshipsPriceTier=None, territory: AppPricePointRelationshipsTerritory=None):
        """AppPricePointRelationships - a model defined in OpenAPI

        :param price_tier: The price_tier of this AppPricePointRelationships.
        :param territory: The territory of this AppPricePointRelationships.
        """
        self.openapi_types = {
            'price_tier': AppPriceRelationshipsPriceTier,
            'territory': AppPricePointRelationshipsTerritory
        }

        self.attribute_map = {
            'price_tier': 'priceTier',
            'territory': 'territory'
        }

        self._price_tier = price_tier
        self._territory = territory

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppPricePointRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppPricePoint_relationships of this AppPricePointRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price_tier(self):
        """Gets the price_tier of this AppPricePointRelationships.


        :return: The price_tier of this AppPricePointRelationships.
        :rtype: AppPriceRelationshipsPriceTier
        """
        return self._price_tier

    @price_tier.setter
    def price_tier(self, price_tier):
        """Sets the price_tier of this AppPricePointRelationships.


        :param price_tier: The price_tier of this AppPricePointRelationships.
        :type price_tier: AppPriceRelationshipsPriceTier
        """

        self._price_tier = price_tier

    @property
    def territory(self):
        """Gets the territory of this AppPricePointRelationships.


        :return: The territory of this AppPricePointRelationships.
        :rtype: AppPricePointRelationshipsTerritory
        """
        return self._territory

    @territory.setter
    def territory(self, territory):
        """Sets the territory of this AppPricePointRelationships.


        :param territory: The territory of this AppPricePointRelationships.
        :type territory: AppPricePointRelationshipsTerritory
        """

        self._territory = territory
