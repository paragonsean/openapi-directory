# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_category_relationships_parent import AppCategoryRelationshipsParent
from openapi_server.models.app_category_relationships_subcategories import AppCategoryRelationshipsSubcategories
from openapi_server import util


class AppCategoryRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent: AppCategoryRelationshipsParent=None, subcategories: AppCategoryRelationshipsSubcategories=None):
        """AppCategoryRelationships - a model defined in OpenAPI

        :param parent: The parent of this AppCategoryRelationships.
        :param subcategories: The subcategories of this AppCategoryRelationships.
        """
        self.openapi_types = {
            'parent': AppCategoryRelationshipsParent,
            'subcategories': AppCategoryRelationshipsSubcategories
        }

        self.attribute_map = {
            'parent': 'parent',
            'subcategories': 'subcategories'
        }

        self._parent = parent
        self._subcategories = subcategories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppCategoryRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppCategory_relationships of this AppCategoryRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent(self):
        """Gets the parent of this AppCategoryRelationships.


        :return: The parent of this AppCategoryRelationships.
        :rtype: AppCategoryRelationshipsParent
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this AppCategoryRelationships.


        :param parent: The parent of this AppCategoryRelationships.
        :type parent: AppCategoryRelationshipsParent
        """

        self._parent = parent

    @property
    def subcategories(self):
        """Gets the subcategories of this AppCategoryRelationships.


        :return: The subcategories of this AppCategoryRelationships.
        :rtype: AppCategoryRelationshipsSubcategories
        """
        return self._subcategories

    @subcategories.setter
    def subcategories(self, subcategories):
        """Sets the subcategories of this AppCategoryRelationships.


        :param subcategories: The subcategories of this AppCategoryRelationships.
        :type subcategories: AppCategoryRelationshipsSubcategories
        """

        self._subcategories = subcategories
