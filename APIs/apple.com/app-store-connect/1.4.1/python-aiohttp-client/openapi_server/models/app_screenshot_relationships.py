# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_screenshot_relationships_app_screenshot_set import AppScreenshotRelationshipsAppScreenshotSet
from openapi_server import util


class AppScreenshotRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_screenshot_set: AppScreenshotRelationshipsAppScreenshotSet=None):
        """AppScreenshotRelationships - a model defined in OpenAPI

        :param app_screenshot_set: The app_screenshot_set of this AppScreenshotRelationships.
        """
        self.openapi_types = {
            'app_screenshot_set': AppScreenshotRelationshipsAppScreenshotSet
        }

        self.attribute_map = {
            'app_screenshot_set': 'appScreenshotSet'
        }

        self._app_screenshot_set = app_screenshot_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppScreenshotRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppScreenshot_relationships of this AppScreenshotRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_screenshot_set(self):
        """Gets the app_screenshot_set of this AppScreenshotRelationships.


        :return: The app_screenshot_set of this AppScreenshotRelationships.
        :rtype: AppScreenshotRelationshipsAppScreenshotSet
        """
        return self._app_screenshot_set

    @app_screenshot_set.setter
    def app_screenshot_set(self, app_screenshot_set):
        """Sets the app_screenshot_set of this AppScreenshotRelationships.


        :param app_screenshot_set: The app_screenshot_set of this AppScreenshotRelationships.
        :type app_screenshot_set: AppScreenshotRelationshipsAppScreenshotSet
        """

        self._app_screenshot_set = app_screenshot_set
