# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_update_request_data_relationships_available_territories import AppUpdateRequestDataRelationshipsAvailableTerritories
from openapi_server import util


class EndUserLicenseAgreementUpdateRequestDataRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, territories: AppUpdateRequestDataRelationshipsAvailableTerritories=None):
        """EndUserLicenseAgreementUpdateRequestDataRelationships - a model defined in OpenAPI

        :param territories: The territories of this EndUserLicenseAgreementUpdateRequestDataRelationships.
        """
        self.openapi_types = {
            'territories': AppUpdateRequestDataRelationshipsAvailableTerritories
        }

        self.attribute_map = {
            'territories': 'territories'
        }

        self._territories = territories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndUserLicenseAgreementUpdateRequestDataRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndUserLicenseAgreementUpdateRequest_data_relationships of this EndUserLicenseAgreementUpdateRequestDataRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def territories(self):
        """Gets the territories of this EndUserLicenseAgreementUpdateRequestDataRelationships.


        :return: The territories of this EndUserLicenseAgreementUpdateRequestDataRelationships.
        :rtype: AppUpdateRequestDataRelationshipsAvailableTerritories
        """
        return self._territories

    @territories.setter
    def territories(self, territories):
        """Sets the territories of this EndUserLicenseAgreementUpdateRequestDataRelationships.


        :param territories: The territories of this EndUserLicenseAgreementUpdateRequestDataRelationships.
        :type territories: AppUpdateRequestDataRelationshipsAvailableTerritories
        """

        self._territories = territories
