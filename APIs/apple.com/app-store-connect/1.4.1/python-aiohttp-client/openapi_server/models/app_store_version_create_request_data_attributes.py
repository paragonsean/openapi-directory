# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.platform import Platform
from openapi_server import util


class AppStoreVersionCreateRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copyright: str=None, earliest_release_date: datetime=None, platform: Platform=None, release_type: str=None, uses_idfa: bool=None, version_string: str=None):
        """AppStoreVersionCreateRequestDataAttributes - a model defined in OpenAPI

        :param copyright: The copyright of this AppStoreVersionCreateRequestDataAttributes.
        :param earliest_release_date: The earliest_release_date of this AppStoreVersionCreateRequestDataAttributes.
        :param platform: The platform of this AppStoreVersionCreateRequestDataAttributes.
        :param release_type: The release_type of this AppStoreVersionCreateRequestDataAttributes.
        :param uses_idfa: The uses_idfa of this AppStoreVersionCreateRequestDataAttributes.
        :param version_string: The version_string of this AppStoreVersionCreateRequestDataAttributes.
        """
        self.openapi_types = {
            'copyright': str,
            'earliest_release_date': datetime,
            'platform': Platform,
            'release_type': str,
            'uses_idfa': bool,
            'version_string': str
        }

        self.attribute_map = {
            'copyright': 'copyright',
            'earliest_release_date': 'earliestReleaseDate',
            'platform': 'platform',
            'release_type': 'releaseType',
            'uses_idfa': 'usesIdfa',
            'version_string': 'versionString'
        }

        self._copyright = copyright
        self._earliest_release_date = earliest_release_date
        self._platform = platform
        self._release_type = release_type
        self._uses_idfa = uses_idfa
        self._version_string = version_string

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppStoreVersionCreateRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppStoreVersionCreateRequest_data_attributes of this AppStoreVersionCreateRequestDataAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copyright(self):
        """Gets the copyright of this AppStoreVersionCreateRequestDataAttributes.


        :return: The copyright of this AppStoreVersionCreateRequestDataAttributes.
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this AppStoreVersionCreateRequestDataAttributes.


        :param copyright: The copyright of this AppStoreVersionCreateRequestDataAttributes.
        :type copyright: str
        """

        self._copyright = copyright

    @property
    def earliest_release_date(self):
        """Gets the earliest_release_date of this AppStoreVersionCreateRequestDataAttributes.


        :return: The earliest_release_date of this AppStoreVersionCreateRequestDataAttributes.
        :rtype: datetime
        """
        return self._earliest_release_date

    @earliest_release_date.setter
    def earliest_release_date(self, earliest_release_date):
        """Sets the earliest_release_date of this AppStoreVersionCreateRequestDataAttributes.


        :param earliest_release_date: The earliest_release_date of this AppStoreVersionCreateRequestDataAttributes.
        :type earliest_release_date: datetime
        """

        self._earliest_release_date = earliest_release_date

    @property
    def platform(self):
        """Gets the platform of this AppStoreVersionCreateRequestDataAttributes.


        :return: The platform of this AppStoreVersionCreateRequestDataAttributes.
        :rtype: Platform
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this AppStoreVersionCreateRequestDataAttributes.


        :param platform: The platform of this AppStoreVersionCreateRequestDataAttributes.
        :type platform: Platform
        """
        if platform is None:
            raise ValueError("Invalid value for `platform`, must not be `None`")

        self._platform = platform

    @property
    def release_type(self):
        """Gets the release_type of this AppStoreVersionCreateRequestDataAttributes.


        :return: The release_type of this AppStoreVersionCreateRequestDataAttributes.
        :rtype: str
        """
        return self._release_type

    @release_type.setter
    def release_type(self, release_type):
        """Sets the release_type of this AppStoreVersionCreateRequestDataAttributes.


        :param release_type: The release_type of this AppStoreVersionCreateRequestDataAttributes.
        :type release_type: str
        """
        allowed_values = ["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]  # noqa: E501
        if release_type not in allowed_values:
            raise ValueError(
                "Invalid value for `release_type` ({0}), must be one of {1}"
                .format(release_type, allowed_values)
            )

        self._release_type = release_type

    @property
    def uses_idfa(self):
        """Gets the uses_idfa of this AppStoreVersionCreateRequestDataAttributes.


        :return: The uses_idfa of this AppStoreVersionCreateRequestDataAttributes.
        :rtype: bool
        """
        return self._uses_idfa

    @uses_idfa.setter
    def uses_idfa(self, uses_idfa):
        """Sets the uses_idfa of this AppStoreVersionCreateRequestDataAttributes.


        :param uses_idfa: The uses_idfa of this AppStoreVersionCreateRequestDataAttributes.
        :type uses_idfa: bool
        """

        self._uses_idfa = uses_idfa

    @property
    def version_string(self):
        """Gets the version_string of this AppStoreVersionCreateRequestDataAttributes.


        :return: The version_string of this AppStoreVersionCreateRequestDataAttributes.
        :rtype: str
        """
        return self._version_string

    @version_string.setter
    def version_string(self, version_string):
        """Sets the version_string of this AppStoreVersionCreateRequestDataAttributes.


        :param version_string: The version_string of this AppStoreVersionCreateRequestDataAttributes.
        :type version_string: str
        """
        if version_string is None:
            raise ValueError("Invalid value for `version_string`, must not be `None`")

        self._version_string = version_string
