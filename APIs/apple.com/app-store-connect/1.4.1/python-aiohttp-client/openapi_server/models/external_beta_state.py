# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExternalBetaState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    PROCESSING = 'PROCESSING'
    PROCESSING_EXCEPTION = 'PROCESSING_EXCEPTION'
    MISSING_EXPORT_COMPLIANCE = 'MISSING_EXPORT_COMPLIANCE'
    READY_FOR_BETA_TESTING = 'READY_FOR_BETA_TESTING'
    IN_BETA_TESTING = 'IN_BETA_TESTING'
    EXPIRED = 'EXPIRED'
    READY_FOR_BETA_SUBMISSION = 'READY_FOR_BETA_SUBMISSION'
    IN_EXPORT_COMPLIANCE_REVIEW = 'IN_EXPORT_COMPLIANCE_REVIEW'
    WAITING_FOR_BETA_REVIEW = 'WAITING_FOR_BETA_REVIEW'
    IN_BETA_REVIEW = 'IN_BETA_REVIEW'
    BETA_REJECTED = 'BETA_REJECTED'
    BETA_APPROVED = 'BETA_APPROVED'

    def __init__(self):
        """ExternalBetaState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExternalBetaState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExternalBetaState of this ExternalBetaState.
        """
        return util.deserialize_model(dikt, cls)
