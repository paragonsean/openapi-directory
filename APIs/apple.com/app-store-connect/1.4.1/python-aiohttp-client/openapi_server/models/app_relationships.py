# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_relationships_app_infos import AppRelationshipsAppInfos
from openapi_server.models.app_relationships_app_store_versions import AppRelationshipsAppStoreVersions
from openapi_server.models.app_relationships_available_territories import AppRelationshipsAvailableTerritories
from openapi_server.models.app_relationships_beta_app_localizations import AppRelationshipsBetaAppLocalizations
from openapi_server.models.app_relationships_beta_app_review_detail import AppRelationshipsBetaAppReviewDetail
from openapi_server.models.app_relationships_beta_groups import AppRelationshipsBetaGroups
from openapi_server.models.app_relationships_beta_license_agreement import AppRelationshipsBetaLicenseAgreement
from openapi_server.models.app_relationships_builds import AppRelationshipsBuilds
from openapi_server.models.app_relationships_end_user_license_agreement import AppRelationshipsEndUserLicenseAgreement
from openapi_server.models.app_relationships_game_center_enabled_versions import AppRelationshipsGameCenterEnabledVersions
from openapi_server.models.app_relationships_in_app_purchases import AppRelationshipsInAppPurchases
from openapi_server.models.app_relationships_pre_order import AppRelationshipsPreOrder
from openapi_server.models.app_relationships_pre_release_versions import AppRelationshipsPreReleaseVersions
from openapi_server.models.app_relationships_prices import AppRelationshipsPrices
from openapi_server import util


class AppRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_infos: AppRelationshipsAppInfos=None, app_store_versions: AppRelationshipsAppStoreVersions=None, available_territories: AppRelationshipsAvailableTerritories=None, beta_app_localizations: AppRelationshipsBetaAppLocalizations=None, beta_app_review_detail: AppRelationshipsBetaAppReviewDetail=None, beta_groups: AppRelationshipsBetaGroups=None, beta_license_agreement: AppRelationshipsBetaLicenseAgreement=None, builds: AppRelationshipsBuilds=None, end_user_license_agreement: AppRelationshipsEndUserLicenseAgreement=None, game_center_enabled_versions: AppRelationshipsGameCenterEnabledVersions=None, in_app_purchases: AppRelationshipsInAppPurchases=None, pre_order: AppRelationshipsPreOrder=None, pre_release_versions: AppRelationshipsPreReleaseVersions=None, prices: AppRelationshipsPrices=None):
        """AppRelationships - a model defined in OpenAPI

        :param app_infos: The app_infos of this AppRelationships.
        :param app_store_versions: The app_store_versions of this AppRelationships.
        :param available_territories: The available_territories of this AppRelationships.
        :param beta_app_localizations: The beta_app_localizations of this AppRelationships.
        :param beta_app_review_detail: The beta_app_review_detail of this AppRelationships.
        :param beta_groups: The beta_groups of this AppRelationships.
        :param beta_license_agreement: The beta_license_agreement of this AppRelationships.
        :param builds: The builds of this AppRelationships.
        :param end_user_license_agreement: The end_user_license_agreement of this AppRelationships.
        :param game_center_enabled_versions: The game_center_enabled_versions of this AppRelationships.
        :param in_app_purchases: The in_app_purchases of this AppRelationships.
        :param pre_order: The pre_order of this AppRelationships.
        :param pre_release_versions: The pre_release_versions of this AppRelationships.
        :param prices: The prices of this AppRelationships.
        """
        self.openapi_types = {
            'app_infos': AppRelationshipsAppInfos,
            'app_store_versions': AppRelationshipsAppStoreVersions,
            'available_territories': AppRelationshipsAvailableTerritories,
            'beta_app_localizations': AppRelationshipsBetaAppLocalizations,
            'beta_app_review_detail': AppRelationshipsBetaAppReviewDetail,
            'beta_groups': AppRelationshipsBetaGroups,
            'beta_license_agreement': AppRelationshipsBetaLicenseAgreement,
            'builds': AppRelationshipsBuilds,
            'end_user_license_agreement': AppRelationshipsEndUserLicenseAgreement,
            'game_center_enabled_versions': AppRelationshipsGameCenterEnabledVersions,
            'in_app_purchases': AppRelationshipsInAppPurchases,
            'pre_order': AppRelationshipsPreOrder,
            'pre_release_versions': AppRelationshipsPreReleaseVersions,
            'prices': AppRelationshipsPrices
        }

        self.attribute_map = {
            'app_infos': 'appInfos',
            'app_store_versions': 'appStoreVersions',
            'available_territories': 'availableTerritories',
            'beta_app_localizations': 'betaAppLocalizations',
            'beta_app_review_detail': 'betaAppReviewDetail',
            'beta_groups': 'betaGroups',
            'beta_license_agreement': 'betaLicenseAgreement',
            'builds': 'builds',
            'end_user_license_agreement': 'endUserLicenseAgreement',
            'game_center_enabled_versions': 'gameCenterEnabledVersions',
            'in_app_purchases': 'inAppPurchases',
            'pre_order': 'preOrder',
            'pre_release_versions': 'preReleaseVersions',
            'prices': 'prices'
        }

        self._app_infos = app_infos
        self._app_store_versions = app_store_versions
        self._available_territories = available_territories
        self._beta_app_localizations = beta_app_localizations
        self._beta_app_review_detail = beta_app_review_detail
        self._beta_groups = beta_groups
        self._beta_license_agreement = beta_license_agreement
        self._builds = builds
        self._end_user_license_agreement = end_user_license_agreement
        self._game_center_enabled_versions = game_center_enabled_versions
        self._in_app_purchases = in_app_purchases
        self._pre_order = pre_order
        self._pre_release_versions = pre_release_versions
        self._prices = prices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The App_relationships of this AppRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_infos(self):
        """Gets the app_infos of this AppRelationships.


        :return: The app_infos of this AppRelationships.
        :rtype: AppRelationshipsAppInfos
        """
        return self._app_infos

    @app_infos.setter
    def app_infos(self, app_infos):
        """Sets the app_infos of this AppRelationships.


        :param app_infos: The app_infos of this AppRelationships.
        :type app_infos: AppRelationshipsAppInfos
        """

        self._app_infos = app_infos

    @property
    def app_store_versions(self):
        """Gets the app_store_versions of this AppRelationships.


        :return: The app_store_versions of this AppRelationships.
        :rtype: AppRelationshipsAppStoreVersions
        """
        return self._app_store_versions

    @app_store_versions.setter
    def app_store_versions(self, app_store_versions):
        """Sets the app_store_versions of this AppRelationships.


        :param app_store_versions: The app_store_versions of this AppRelationships.
        :type app_store_versions: AppRelationshipsAppStoreVersions
        """

        self._app_store_versions = app_store_versions

    @property
    def available_territories(self):
        """Gets the available_territories of this AppRelationships.


        :return: The available_territories of this AppRelationships.
        :rtype: AppRelationshipsAvailableTerritories
        """
        return self._available_territories

    @available_territories.setter
    def available_territories(self, available_territories):
        """Sets the available_territories of this AppRelationships.


        :param available_territories: The available_territories of this AppRelationships.
        :type available_territories: AppRelationshipsAvailableTerritories
        """

        self._available_territories = available_territories

    @property
    def beta_app_localizations(self):
        """Gets the beta_app_localizations of this AppRelationships.


        :return: The beta_app_localizations of this AppRelationships.
        :rtype: AppRelationshipsBetaAppLocalizations
        """
        return self._beta_app_localizations

    @beta_app_localizations.setter
    def beta_app_localizations(self, beta_app_localizations):
        """Sets the beta_app_localizations of this AppRelationships.


        :param beta_app_localizations: The beta_app_localizations of this AppRelationships.
        :type beta_app_localizations: AppRelationshipsBetaAppLocalizations
        """

        self._beta_app_localizations = beta_app_localizations

    @property
    def beta_app_review_detail(self):
        """Gets the beta_app_review_detail of this AppRelationships.


        :return: The beta_app_review_detail of this AppRelationships.
        :rtype: AppRelationshipsBetaAppReviewDetail
        """
        return self._beta_app_review_detail

    @beta_app_review_detail.setter
    def beta_app_review_detail(self, beta_app_review_detail):
        """Sets the beta_app_review_detail of this AppRelationships.


        :param beta_app_review_detail: The beta_app_review_detail of this AppRelationships.
        :type beta_app_review_detail: AppRelationshipsBetaAppReviewDetail
        """

        self._beta_app_review_detail = beta_app_review_detail

    @property
    def beta_groups(self):
        """Gets the beta_groups of this AppRelationships.


        :return: The beta_groups of this AppRelationships.
        :rtype: AppRelationshipsBetaGroups
        """
        return self._beta_groups

    @beta_groups.setter
    def beta_groups(self, beta_groups):
        """Sets the beta_groups of this AppRelationships.


        :param beta_groups: The beta_groups of this AppRelationships.
        :type beta_groups: AppRelationshipsBetaGroups
        """

        self._beta_groups = beta_groups

    @property
    def beta_license_agreement(self):
        """Gets the beta_license_agreement of this AppRelationships.


        :return: The beta_license_agreement of this AppRelationships.
        :rtype: AppRelationshipsBetaLicenseAgreement
        """
        return self._beta_license_agreement

    @beta_license_agreement.setter
    def beta_license_agreement(self, beta_license_agreement):
        """Sets the beta_license_agreement of this AppRelationships.


        :param beta_license_agreement: The beta_license_agreement of this AppRelationships.
        :type beta_license_agreement: AppRelationshipsBetaLicenseAgreement
        """

        self._beta_license_agreement = beta_license_agreement

    @property
    def builds(self):
        """Gets the builds of this AppRelationships.


        :return: The builds of this AppRelationships.
        :rtype: AppRelationshipsBuilds
        """
        return self._builds

    @builds.setter
    def builds(self, builds):
        """Sets the builds of this AppRelationships.


        :param builds: The builds of this AppRelationships.
        :type builds: AppRelationshipsBuilds
        """

        self._builds = builds

    @property
    def end_user_license_agreement(self):
        """Gets the end_user_license_agreement of this AppRelationships.


        :return: The end_user_license_agreement of this AppRelationships.
        :rtype: AppRelationshipsEndUserLicenseAgreement
        """
        return self._end_user_license_agreement

    @end_user_license_agreement.setter
    def end_user_license_agreement(self, end_user_license_agreement):
        """Sets the end_user_license_agreement of this AppRelationships.


        :param end_user_license_agreement: The end_user_license_agreement of this AppRelationships.
        :type end_user_license_agreement: AppRelationshipsEndUserLicenseAgreement
        """

        self._end_user_license_agreement = end_user_license_agreement

    @property
    def game_center_enabled_versions(self):
        """Gets the game_center_enabled_versions of this AppRelationships.


        :return: The game_center_enabled_versions of this AppRelationships.
        :rtype: AppRelationshipsGameCenterEnabledVersions
        """
        return self._game_center_enabled_versions

    @game_center_enabled_versions.setter
    def game_center_enabled_versions(self, game_center_enabled_versions):
        """Sets the game_center_enabled_versions of this AppRelationships.


        :param game_center_enabled_versions: The game_center_enabled_versions of this AppRelationships.
        :type game_center_enabled_versions: AppRelationshipsGameCenterEnabledVersions
        """

        self._game_center_enabled_versions = game_center_enabled_versions

    @property
    def in_app_purchases(self):
        """Gets the in_app_purchases of this AppRelationships.


        :return: The in_app_purchases of this AppRelationships.
        :rtype: AppRelationshipsInAppPurchases
        """
        return self._in_app_purchases

    @in_app_purchases.setter
    def in_app_purchases(self, in_app_purchases):
        """Sets the in_app_purchases of this AppRelationships.


        :param in_app_purchases: The in_app_purchases of this AppRelationships.
        :type in_app_purchases: AppRelationshipsInAppPurchases
        """

        self._in_app_purchases = in_app_purchases

    @property
    def pre_order(self):
        """Gets the pre_order of this AppRelationships.


        :return: The pre_order of this AppRelationships.
        :rtype: AppRelationshipsPreOrder
        """
        return self._pre_order

    @pre_order.setter
    def pre_order(self, pre_order):
        """Sets the pre_order of this AppRelationships.


        :param pre_order: The pre_order of this AppRelationships.
        :type pre_order: AppRelationshipsPreOrder
        """

        self._pre_order = pre_order

    @property
    def pre_release_versions(self):
        """Gets the pre_release_versions of this AppRelationships.


        :return: The pre_release_versions of this AppRelationships.
        :rtype: AppRelationshipsPreReleaseVersions
        """
        return self._pre_release_versions

    @pre_release_versions.setter
    def pre_release_versions(self, pre_release_versions):
        """Sets the pre_release_versions of this AppRelationships.


        :param pre_release_versions: The pre_release_versions of this AppRelationships.
        :type pre_release_versions: AppRelationshipsPreReleaseVersions
        """

        self._pre_release_versions = pre_release_versions

    @property
    def prices(self):
        """Gets the prices of this AppRelationships.


        :return: The prices of this AppRelationships.
        :rtype: AppRelationshipsPrices
        """
        return self._prices

    @prices.setter
    def prices(self, prices):
        """Sets the prices of this AppRelationships.


        :param prices: The prices of this AppRelationships.
        :type prices: AppRelationshipsPrices
        """

        self._prices = prices
