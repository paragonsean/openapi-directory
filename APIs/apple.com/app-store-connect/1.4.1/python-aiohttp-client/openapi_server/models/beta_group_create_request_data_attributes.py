# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BetaGroupCreateRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feedback_enabled: bool=None, name: str=None, public_link_enabled: bool=None, public_link_limit: int=None, public_link_limit_enabled: bool=None):
        """BetaGroupCreateRequestDataAttributes - a model defined in OpenAPI

        :param feedback_enabled: The feedback_enabled of this BetaGroupCreateRequestDataAttributes.
        :param name: The name of this BetaGroupCreateRequestDataAttributes.
        :param public_link_enabled: The public_link_enabled of this BetaGroupCreateRequestDataAttributes.
        :param public_link_limit: The public_link_limit of this BetaGroupCreateRequestDataAttributes.
        :param public_link_limit_enabled: The public_link_limit_enabled of this BetaGroupCreateRequestDataAttributes.
        """
        self.openapi_types = {
            'feedback_enabled': bool,
            'name': str,
            'public_link_enabled': bool,
            'public_link_limit': int,
            'public_link_limit_enabled': bool
        }

        self.attribute_map = {
            'feedback_enabled': 'feedbackEnabled',
            'name': 'name',
            'public_link_enabled': 'publicLinkEnabled',
            'public_link_limit': 'publicLinkLimit',
            'public_link_limit_enabled': 'publicLinkLimitEnabled'
        }

        self._feedback_enabled = feedback_enabled
        self._name = name
        self._public_link_enabled = public_link_enabled
        self._public_link_limit = public_link_limit
        self._public_link_limit_enabled = public_link_limit_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BetaGroupCreateRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BetaGroupCreateRequest_data_attributes of this BetaGroupCreateRequestDataAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feedback_enabled(self):
        """Gets the feedback_enabled of this BetaGroupCreateRequestDataAttributes.


        :return: The feedback_enabled of this BetaGroupCreateRequestDataAttributes.
        :rtype: bool
        """
        return self._feedback_enabled

    @feedback_enabled.setter
    def feedback_enabled(self, feedback_enabled):
        """Sets the feedback_enabled of this BetaGroupCreateRequestDataAttributes.


        :param feedback_enabled: The feedback_enabled of this BetaGroupCreateRequestDataAttributes.
        :type feedback_enabled: bool
        """

        self._feedback_enabled = feedback_enabled

    @property
    def name(self):
        """Gets the name of this BetaGroupCreateRequestDataAttributes.


        :return: The name of this BetaGroupCreateRequestDataAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BetaGroupCreateRequestDataAttributes.


        :param name: The name of this BetaGroupCreateRequestDataAttributes.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def public_link_enabled(self):
        """Gets the public_link_enabled of this BetaGroupCreateRequestDataAttributes.


        :return: The public_link_enabled of this BetaGroupCreateRequestDataAttributes.
        :rtype: bool
        """
        return self._public_link_enabled

    @public_link_enabled.setter
    def public_link_enabled(self, public_link_enabled):
        """Sets the public_link_enabled of this BetaGroupCreateRequestDataAttributes.


        :param public_link_enabled: The public_link_enabled of this BetaGroupCreateRequestDataAttributes.
        :type public_link_enabled: bool
        """

        self._public_link_enabled = public_link_enabled

    @property
    def public_link_limit(self):
        """Gets the public_link_limit of this BetaGroupCreateRequestDataAttributes.


        :return: The public_link_limit of this BetaGroupCreateRequestDataAttributes.
        :rtype: int
        """
        return self._public_link_limit

    @public_link_limit.setter
    def public_link_limit(self, public_link_limit):
        """Sets the public_link_limit of this BetaGroupCreateRequestDataAttributes.


        :param public_link_limit: The public_link_limit of this BetaGroupCreateRequestDataAttributes.
        :type public_link_limit: int
        """

        self._public_link_limit = public_link_limit

    @property
    def public_link_limit_enabled(self):
        """Gets the public_link_limit_enabled of this BetaGroupCreateRequestDataAttributes.


        :return: The public_link_limit_enabled of this BetaGroupCreateRequestDataAttributes.
        :rtype: bool
        """
        return self._public_link_limit_enabled

    @public_link_limit_enabled.setter
    def public_link_limit_enabled(self, public_link_limit_enabled):
        """Sets the public_link_limit_enabled of this BetaGroupCreateRequestDataAttributes.


        :param public_link_limit_enabled: The public_link_limit_enabled of this BetaGroupCreateRequestDataAttributes.
        :type public_link_limit_enabled: bool
        """

        self._public_link_limit_enabled = public_link_limit_enabled
