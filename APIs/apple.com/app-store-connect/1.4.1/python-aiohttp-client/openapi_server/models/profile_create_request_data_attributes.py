# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfileCreateRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, profile_type: str=None):
        """ProfileCreateRequestDataAttributes - a model defined in OpenAPI

        :param name: The name of this ProfileCreateRequestDataAttributes.
        :param profile_type: The profile_type of this ProfileCreateRequestDataAttributes.
        """
        self.openapi_types = {
            'name': str,
            'profile_type': str
        }

        self.attribute_map = {
            'name': 'name',
            'profile_type': 'profileType'
        }

        self._name = name
        self._profile_type = profile_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileCreateRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileCreateRequest_data_attributes of this ProfileCreateRequestDataAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ProfileCreateRequestDataAttributes.


        :return: The name of this ProfileCreateRequestDataAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProfileCreateRequestDataAttributes.


        :param name: The name of this ProfileCreateRequestDataAttributes.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def profile_type(self):
        """Gets the profile_type of this ProfileCreateRequestDataAttributes.


        :return: The profile_type of this ProfileCreateRequestDataAttributes.
        :rtype: str
        """
        return self._profile_type

    @profile_type.setter
    def profile_type(self, profile_type):
        """Sets the profile_type of this ProfileCreateRequestDataAttributes.


        :param profile_type: The profile_type of this ProfileCreateRequestDataAttributes.
        :type profile_type: str
        """
        allowed_values = ["IOS_APP_DEVELOPMENT", "IOS_APP_STORE", "IOS_APP_ADHOC", "IOS_APP_INHOUSE", "MAC_APP_DEVELOPMENT", "MAC_APP_STORE", "MAC_APP_DIRECT", "TVOS_APP_DEVELOPMENT", "TVOS_APP_STORE", "TVOS_APP_ADHOC", "TVOS_APP_INHOUSE", "MAC_CATALYST_APP_DEVELOPMENT", "MAC_CATALYST_APP_STORE", "MAC_CATALYST_APP_DIRECT"]  # noqa: E501
        if profile_type not in allowed_values:
            raise ValueError(
                "Invalid value for `profile_type` ({0}), must be one of {1}"
                .format(profile_type, allowed_values)
            )

        self._profile_type = profile_type
