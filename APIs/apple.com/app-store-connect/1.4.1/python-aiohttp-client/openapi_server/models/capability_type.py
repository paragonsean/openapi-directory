# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CapabilityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ICLOUD = 'ICLOUD'
    IN_APP_PURCHASE = 'IN_APP_PURCHASE'
    GAME_CENTER = 'GAME_CENTER'
    PUSH_NOTIFICATIONS = 'PUSH_NOTIFICATIONS'
    WALLET = 'WALLET'
    INTER_APP_AUDIO = 'INTER_APP_AUDIO'
    MAPS = 'MAPS'
    ASSOCIATED_DOMAINS = 'ASSOCIATED_DOMAINS'
    PERSONAL_VPN = 'PERSONAL_VPN'
    APP_GROUPS = 'APP_GROUPS'
    HEALTHKIT = 'HEALTHKIT'
    HOMEKIT = 'HOMEKIT'
    WIRELESS_ACCESSORY_CONFIGURATION = 'WIRELESS_ACCESSORY_CONFIGURATION'
    APPLE_PAY = 'APPLE_PAY'
    DATA_PROTECTION = 'DATA_PROTECTION'
    SIRIKIT = 'SIRIKIT'
    NETWORK_EXTENSIONS = 'NETWORK_EXTENSIONS'
    MULTIPATH = 'MULTIPATH'
    HOT_SPOT = 'HOT_SPOT'
    NFC_TAG_READING = 'NFC_TAG_READING'
    CLASSKIT = 'CLASSKIT'
    AUTOFILL_CREDENTIAL_PROVIDER = 'AUTOFILL_CREDENTIAL_PROVIDER'
    ACCESS_WIFI_INFORMATION = 'ACCESS_WIFI_INFORMATION'
    NETWORK_CUSTOM_PROTOCOL = 'NETWORK_CUSTOM_PROTOCOL'
    COREMEDIA_HLS_LOW_LATENCY = 'COREMEDIA_HLS_LOW_LATENCY'
    SYSTEM_EXTENSION_INSTALL = 'SYSTEM_EXTENSION_INSTALL'
    USER_MANAGEMENT = 'USER_MANAGEMENT'
    APPLE_ID_AUTH = 'APPLE_ID_AUTH'

    def __init__(self):
        """CapabilityType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapabilityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapabilityType of this CapabilityType.
        """
        return util.deserialize_model(dikt, cls)
