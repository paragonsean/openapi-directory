# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_pre_order_create_request_data_relationships_app import AppPreOrderCreateRequestDataRelationshipsApp
from openapi_server.models.beta_group_create_request_data_relationships_beta_testers import BetaGroupCreateRequestDataRelationshipsBetaTesters
from openapi_server.models.beta_group_create_request_data_relationships_builds import BetaGroupCreateRequestDataRelationshipsBuilds
from openapi_server import util


class BetaGroupCreateRequestDataRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app: AppPreOrderCreateRequestDataRelationshipsApp=None, beta_testers: BetaGroupCreateRequestDataRelationshipsBetaTesters=None, builds: BetaGroupCreateRequestDataRelationshipsBuilds=None):
        """BetaGroupCreateRequestDataRelationships - a model defined in OpenAPI

        :param app: The app of this BetaGroupCreateRequestDataRelationships.
        :param beta_testers: The beta_testers of this BetaGroupCreateRequestDataRelationships.
        :param builds: The builds of this BetaGroupCreateRequestDataRelationships.
        """
        self.openapi_types = {
            'app': AppPreOrderCreateRequestDataRelationshipsApp,
            'beta_testers': BetaGroupCreateRequestDataRelationshipsBetaTesters,
            'builds': BetaGroupCreateRequestDataRelationshipsBuilds
        }

        self.attribute_map = {
            'app': 'app',
            'beta_testers': 'betaTesters',
            'builds': 'builds'
        }

        self._app = app
        self._beta_testers = beta_testers
        self._builds = builds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BetaGroupCreateRequestDataRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BetaGroupCreateRequest_data_relationships of this BetaGroupCreateRequestDataRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app(self):
        """Gets the app of this BetaGroupCreateRequestDataRelationships.


        :return: The app of this BetaGroupCreateRequestDataRelationships.
        :rtype: AppPreOrderCreateRequestDataRelationshipsApp
        """
        return self._app

    @app.setter
    def app(self, app):
        """Sets the app of this BetaGroupCreateRequestDataRelationships.


        :param app: The app of this BetaGroupCreateRequestDataRelationships.
        :type app: AppPreOrderCreateRequestDataRelationshipsApp
        """
        if app is None:
            raise ValueError("Invalid value for `app`, must not be `None`")

        self._app = app

    @property
    def beta_testers(self):
        """Gets the beta_testers of this BetaGroupCreateRequestDataRelationships.


        :return: The beta_testers of this BetaGroupCreateRequestDataRelationships.
        :rtype: BetaGroupCreateRequestDataRelationshipsBetaTesters
        """
        return self._beta_testers

    @beta_testers.setter
    def beta_testers(self, beta_testers):
        """Sets the beta_testers of this BetaGroupCreateRequestDataRelationships.


        :param beta_testers: The beta_testers of this BetaGroupCreateRequestDataRelationships.
        :type beta_testers: BetaGroupCreateRequestDataRelationshipsBetaTesters
        """

        self._beta_testers = beta_testers

    @property
    def builds(self):
        """Gets the builds of this BetaGroupCreateRequestDataRelationships.


        :return: The builds of this BetaGroupCreateRequestDataRelationships.
        :rtype: BetaGroupCreateRequestDataRelationshipsBuilds
        """
        return self._builds

    @builds.setter
    def builds(self, builds):
        """Sets the builds of this BetaGroupCreateRequestDataRelationships.


        :param builds: The builds of this BetaGroupCreateRequestDataRelationships.
        :type builds: BetaGroupCreateRequestDataRelationshipsBuilds
        """

        self._builds = builds
