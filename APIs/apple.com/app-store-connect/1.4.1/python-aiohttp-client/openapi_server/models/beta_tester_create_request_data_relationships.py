# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beta_group_create_request_data_relationships_builds import BetaGroupCreateRequestDataRelationshipsBuilds
from openapi_server.models.beta_tester_create_request_data_relationships_beta_groups import BetaTesterCreateRequestDataRelationshipsBetaGroups
from openapi_server import util


class BetaTesterCreateRequestDataRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, beta_groups: BetaTesterCreateRequestDataRelationshipsBetaGroups=None, builds: BetaGroupCreateRequestDataRelationshipsBuilds=None):
        """BetaTesterCreateRequestDataRelationships - a model defined in OpenAPI

        :param beta_groups: The beta_groups of this BetaTesterCreateRequestDataRelationships.
        :param builds: The builds of this BetaTesterCreateRequestDataRelationships.
        """
        self.openapi_types = {
            'beta_groups': BetaTesterCreateRequestDataRelationshipsBetaGroups,
            'builds': BetaGroupCreateRequestDataRelationshipsBuilds
        }

        self.attribute_map = {
            'beta_groups': 'betaGroups',
            'builds': 'builds'
        }

        self._beta_groups = beta_groups
        self._builds = builds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BetaTesterCreateRequestDataRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BetaTesterCreateRequest_data_relationships of this BetaTesterCreateRequestDataRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def beta_groups(self):
        """Gets the beta_groups of this BetaTesterCreateRequestDataRelationships.


        :return: The beta_groups of this BetaTesterCreateRequestDataRelationships.
        :rtype: BetaTesterCreateRequestDataRelationshipsBetaGroups
        """
        return self._beta_groups

    @beta_groups.setter
    def beta_groups(self, beta_groups):
        """Sets the beta_groups of this BetaTesterCreateRequestDataRelationships.


        :param beta_groups: The beta_groups of this BetaTesterCreateRequestDataRelationships.
        :type beta_groups: BetaTesterCreateRequestDataRelationshipsBetaGroups
        """

        self._beta_groups = beta_groups

    @property
    def builds(self):
        """Gets the builds of this BetaTesterCreateRequestDataRelationships.


        :return: The builds of this BetaTesterCreateRequestDataRelationships.
        :rtype: BetaGroupCreateRequestDataRelationshipsBuilds
        """
        return self._builds

    @builds.setter
    def builds(self, builds):
        """Sets the builds of this BetaTesterCreateRequestDataRelationships.


        :param builds: The builds of this BetaTesterCreateRequestDataRelationships.
        :type builds: BetaGroupCreateRequestDataRelationshipsBuilds
        """

        self._builds = builds
