# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.screenshot_display_type import ScreenshotDisplayType
from openapi_server import util


class AppScreenshotSetAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, screenshot_display_type: ScreenshotDisplayType=None):
        """AppScreenshotSetAttributes - a model defined in OpenAPI

        :param screenshot_display_type: The screenshot_display_type of this AppScreenshotSetAttributes.
        """
        self.openapi_types = {
            'screenshot_display_type': ScreenshotDisplayType
        }

        self.attribute_map = {
            'screenshot_display_type': 'screenshotDisplayType'
        }

        self._screenshot_display_type = screenshot_display_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppScreenshotSetAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppScreenshotSet_attributes of this AppScreenshotSetAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def screenshot_display_type(self):
        """Gets the screenshot_display_type of this AppScreenshotSetAttributes.


        :return: The screenshot_display_type of this AppScreenshotSetAttributes.
        :rtype: ScreenshotDisplayType
        """
        return self._screenshot_display_type

    @screenshot_display_type.setter
    def screenshot_display_type(self, screenshot_display_type):
        """Sets the screenshot_display_type of this AppScreenshotSetAttributes.


        :param screenshot_display_type: The screenshot_display_type of this AppScreenshotSetAttributes.
        :type screenshot_display_type: ScreenshotDisplayType
        """

        self._screenshot_display_type = screenshot_display_type
