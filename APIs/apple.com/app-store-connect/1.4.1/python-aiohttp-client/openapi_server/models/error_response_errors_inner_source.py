# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.json_pointer import JsonPointer
from openapi_server.models.parameter import Parameter
from openapi_server import util


class ErrorResponseErrorsInnerSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pointer: str=None, parameter: str=None):
        """ErrorResponseErrorsInnerSource - a model defined in OpenAPI

        :param pointer: The pointer of this ErrorResponseErrorsInnerSource.
        :param parameter: The parameter of this ErrorResponseErrorsInnerSource.
        """
        self.openapi_types = {
            'pointer': str,
            'parameter': str
        }

        self.attribute_map = {
            'pointer': 'pointer',
            'parameter': 'parameter'
        }

        self._pointer = pointer
        self._parameter = parameter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorResponseErrorsInnerSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorResponse_errors_inner_source of this ErrorResponseErrorsInnerSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pointer(self):
        """Gets the pointer of this ErrorResponseErrorsInnerSource.


        :return: The pointer of this ErrorResponseErrorsInnerSource.
        :rtype: str
        """
        return self._pointer

    @pointer.setter
    def pointer(self, pointer):
        """Sets the pointer of this ErrorResponseErrorsInnerSource.


        :param pointer: The pointer of this ErrorResponseErrorsInnerSource.
        :type pointer: str
        """

        self._pointer = pointer

    @property
    def parameter(self):
        """Gets the parameter of this ErrorResponseErrorsInnerSource.


        :return: The parameter of this ErrorResponseErrorsInnerSource.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter):
        """Sets the parameter of this ErrorResponseErrorsInnerSource.


        :param parameter: The parameter of this ErrorResponseErrorsInnerSource.
        :type parameter: str
        """

        self._parameter = parameter
