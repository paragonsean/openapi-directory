# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bundle_id_platform import BundleIdPlatform
from openapi_server.models.certificate_type import CertificateType
from openapi_server import util


class CertificateAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_content: str=None, certificate_type: CertificateType=None, display_name: str=None, expiration_date: datetime=None, name: str=None, platform: BundleIdPlatform=None, serial_number: str=None):
        """CertificateAttributes - a model defined in OpenAPI

        :param certificate_content: The certificate_content of this CertificateAttributes.
        :param certificate_type: The certificate_type of this CertificateAttributes.
        :param display_name: The display_name of this CertificateAttributes.
        :param expiration_date: The expiration_date of this CertificateAttributes.
        :param name: The name of this CertificateAttributes.
        :param platform: The platform of this CertificateAttributes.
        :param serial_number: The serial_number of this CertificateAttributes.
        """
        self.openapi_types = {
            'certificate_content': str,
            'certificate_type': CertificateType,
            'display_name': str,
            'expiration_date': datetime,
            'name': str,
            'platform': BundleIdPlatform,
            'serial_number': str
        }

        self.attribute_map = {
            'certificate_content': 'certificateContent',
            'certificate_type': 'certificateType',
            'display_name': 'displayName',
            'expiration_date': 'expirationDate',
            'name': 'name',
            'platform': 'platform',
            'serial_number': 'serialNumber'
        }

        self._certificate_content = certificate_content
        self._certificate_type = certificate_type
        self._display_name = display_name
        self._expiration_date = expiration_date
        self._name = name
        self._platform = platform
        self._serial_number = serial_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Certificate_attributes of this CertificateAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_content(self):
        """Gets the certificate_content of this CertificateAttributes.


        :return: The certificate_content of this CertificateAttributes.
        :rtype: str
        """
        return self._certificate_content

    @certificate_content.setter
    def certificate_content(self, certificate_content):
        """Sets the certificate_content of this CertificateAttributes.


        :param certificate_content: The certificate_content of this CertificateAttributes.
        :type certificate_content: str
        """

        self._certificate_content = certificate_content

    @property
    def certificate_type(self):
        """Gets the certificate_type of this CertificateAttributes.


        :return: The certificate_type of this CertificateAttributes.
        :rtype: CertificateType
        """
        return self._certificate_type

    @certificate_type.setter
    def certificate_type(self, certificate_type):
        """Sets the certificate_type of this CertificateAttributes.


        :param certificate_type: The certificate_type of this CertificateAttributes.
        :type certificate_type: CertificateType
        """

        self._certificate_type = certificate_type

    @property
    def display_name(self):
        """Gets the display_name of this CertificateAttributes.


        :return: The display_name of this CertificateAttributes.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CertificateAttributes.


        :param display_name: The display_name of this CertificateAttributes.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def expiration_date(self):
        """Gets the expiration_date of this CertificateAttributes.


        :return: The expiration_date of this CertificateAttributes.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this CertificateAttributes.


        :param expiration_date: The expiration_date of this CertificateAttributes.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date

    @property
    def name(self):
        """Gets the name of this CertificateAttributes.


        :return: The name of this CertificateAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CertificateAttributes.


        :param name: The name of this CertificateAttributes.
        :type name: str
        """

        self._name = name

    @property
    def platform(self):
        """Gets the platform of this CertificateAttributes.


        :return: The platform of this CertificateAttributes.
        :rtype: BundleIdPlatform
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this CertificateAttributes.


        :param platform: The platform of this CertificateAttributes.
        :type platform: BundleIdPlatform
        """

        self._platform = platform

    @property
    def serial_number(self):
        """Gets the serial_number of this CertificateAttributes.


        :return: The serial_number of this CertificateAttributes.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this CertificateAttributes.


        :param serial_number: The serial_number of this CertificateAttributes.
        :type serial_number: str
        """

        self._serial_number = serial_number
