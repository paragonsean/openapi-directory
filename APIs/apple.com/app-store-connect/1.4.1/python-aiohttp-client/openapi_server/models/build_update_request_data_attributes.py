# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuildUpdateRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expired: bool=None, uses_non_exempt_encryption: bool=None):
        """BuildUpdateRequestDataAttributes - a model defined in OpenAPI

        :param expired: The expired of this BuildUpdateRequestDataAttributes.
        :param uses_non_exempt_encryption: The uses_non_exempt_encryption of this BuildUpdateRequestDataAttributes.
        """
        self.openapi_types = {
            'expired': bool,
            'uses_non_exempt_encryption': bool
        }

        self.attribute_map = {
            'expired': 'expired',
            'uses_non_exempt_encryption': 'usesNonExemptEncryption'
        }

        self._expired = expired
        self._uses_non_exempt_encryption = uses_non_exempt_encryption

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildUpdateRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildUpdateRequest_data_attributes of this BuildUpdateRequestDataAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expired(self):
        """Gets the expired of this BuildUpdateRequestDataAttributes.


        :return: The expired of this BuildUpdateRequestDataAttributes.
        :rtype: bool
        """
        return self._expired

    @expired.setter
    def expired(self, expired):
        """Sets the expired of this BuildUpdateRequestDataAttributes.


        :param expired: The expired of this BuildUpdateRequestDataAttributes.
        :type expired: bool
        """

        self._expired = expired

    @property
    def uses_non_exempt_encryption(self):
        """Gets the uses_non_exempt_encryption of this BuildUpdateRequestDataAttributes.


        :return: The uses_non_exempt_encryption of this BuildUpdateRequestDataAttributes.
        :rtype: bool
        """
        return self._uses_non_exempt_encryption

    @uses_non_exempt_encryption.setter
    def uses_non_exempt_encryption(self, uses_non_exempt_encryption):
        """Sets the uses_non_exempt_encryption of this BuildUpdateRequestDataAttributes.


        :param uses_non_exempt_encryption: The uses_non_exempt_encryption of this BuildUpdateRequestDataAttributes.
        :type uses_non_exempt_encryption: bool
        """

        self._uses_non_exempt_encryption = uses_non_exempt_encryption
