/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPagingInformation_paging.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPagingInformation_paging::OAIPagingInformation_paging(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPagingInformation_paging::OAIPagingInformation_paging() {
    this->initializeModel();
}

OAIPagingInformation_paging::~OAIPagingInformation_paging() {}

void OAIPagingInformation_paging::initializeModel() {

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIPagingInformation_paging::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPagingInformation_paging::fromJsonObject(QJsonObject json) {

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIPagingInformation_paging::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPagingInformation_paging::asJsonObject() const {
    QJsonObject obj;
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

qint32 OAIPagingInformation_paging::getLimit() const {
    return m_limit;
}
void OAIPagingInformation_paging::setLimit(const qint32 &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIPagingInformation_paging::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIPagingInformation_paging::is_limit_Valid() const{
    return m_limit_isValid;
}

qint32 OAIPagingInformation_paging::getTotal() const {
    return m_total;
}
void OAIPagingInformation_paging::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIPagingInformation_paging::is_total_Set() const{
    return m_total_isSet;
}

bool OAIPagingInformation_paging::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIPagingInformation_paging::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPagingInformation_paging::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_limit_isValid && m_total_isValid && true;
}

} // namespace OpenAPI
