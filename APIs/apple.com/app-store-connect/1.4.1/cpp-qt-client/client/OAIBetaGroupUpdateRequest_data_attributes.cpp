/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBetaGroupUpdateRequest_data_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBetaGroupUpdateRequest_data_attributes::OAIBetaGroupUpdateRequest_data_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBetaGroupUpdateRequest_data_attributes::OAIBetaGroupUpdateRequest_data_attributes() {
    this->initializeModel();
}

OAIBetaGroupUpdateRequest_data_attributes::~OAIBetaGroupUpdateRequest_data_attributes() {}

void OAIBetaGroupUpdateRequest_data_attributes::initializeModel() {

    m_feedback_enabled_isSet = false;
    m_feedback_enabled_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_public_link_enabled_isSet = false;
    m_public_link_enabled_isValid = false;

    m_public_link_limit_isSet = false;
    m_public_link_limit_isValid = false;

    m_public_link_limit_enabled_isSet = false;
    m_public_link_limit_enabled_isValid = false;
}

void OAIBetaGroupUpdateRequest_data_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBetaGroupUpdateRequest_data_attributes::fromJsonObject(QJsonObject json) {

    m_feedback_enabled_isValid = ::OpenAPI::fromJsonValue(m_feedback_enabled, json[QString("feedbackEnabled")]);
    m_feedback_enabled_isSet = !json[QString("feedbackEnabled")].isNull() && m_feedback_enabled_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_public_link_enabled_isValid = ::OpenAPI::fromJsonValue(m_public_link_enabled, json[QString("publicLinkEnabled")]);
    m_public_link_enabled_isSet = !json[QString("publicLinkEnabled")].isNull() && m_public_link_enabled_isValid;

    m_public_link_limit_isValid = ::OpenAPI::fromJsonValue(m_public_link_limit, json[QString("publicLinkLimit")]);
    m_public_link_limit_isSet = !json[QString("publicLinkLimit")].isNull() && m_public_link_limit_isValid;

    m_public_link_limit_enabled_isValid = ::OpenAPI::fromJsonValue(m_public_link_limit_enabled, json[QString("publicLinkLimitEnabled")]);
    m_public_link_limit_enabled_isSet = !json[QString("publicLinkLimitEnabled")].isNull() && m_public_link_limit_enabled_isValid;
}

QString OAIBetaGroupUpdateRequest_data_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBetaGroupUpdateRequest_data_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_feedback_enabled_isSet) {
        obj.insert(QString("feedbackEnabled"), ::OpenAPI::toJsonValue(m_feedback_enabled));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_public_link_enabled_isSet) {
        obj.insert(QString("publicLinkEnabled"), ::OpenAPI::toJsonValue(m_public_link_enabled));
    }
    if (m_public_link_limit_isSet) {
        obj.insert(QString("publicLinkLimit"), ::OpenAPI::toJsonValue(m_public_link_limit));
    }
    if (m_public_link_limit_enabled_isSet) {
        obj.insert(QString("publicLinkLimitEnabled"), ::OpenAPI::toJsonValue(m_public_link_limit_enabled));
    }
    return obj;
}

bool OAIBetaGroupUpdateRequest_data_attributes::isFeedbackEnabled() const {
    return m_feedback_enabled;
}
void OAIBetaGroupUpdateRequest_data_attributes::setFeedbackEnabled(const bool &feedback_enabled) {
    m_feedback_enabled = feedback_enabled;
    m_feedback_enabled_isSet = true;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_feedback_enabled_Set() const{
    return m_feedback_enabled_isSet;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_feedback_enabled_Valid() const{
    return m_feedback_enabled_isValid;
}

QString OAIBetaGroupUpdateRequest_data_attributes::getName() const {
    return m_name;
}
void OAIBetaGroupUpdateRequest_data_attributes::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIBetaGroupUpdateRequest_data_attributes::isPublicLinkEnabled() const {
    return m_public_link_enabled;
}
void OAIBetaGroupUpdateRequest_data_attributes::setPublicLinkEnabled(const bool &public_link_enabled) {
    m_public_link_enabled = public_link_enabled;
    m_public_link_enabled_isSet = true;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_public_link_enabled_Set() const{
    return m_public_link_enabled_isSet;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_public_link_enabled_Valid() const{
    return m_public_link_enabled_isValid;
}

qint32 OAIBetaGroupUpdateRequest_data_attributes::getPublicLinkLimit() const {
    return m_public_link_limit;
}
void OAIBetaGroupUpdateRequest_data_attributes::setPublicLinkLimit(const qint32 &public_link_limit) {
    m_public_link_limit = public_link_limit;
    m_public_link_limit_isSet = true;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_public_link_limit_Set() const{
    return m_public_link_limit_isSet;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_public_link_limit_Valid() const{
    return m_public_link_limit_isValid;
}

bool OAIBetaGroupUpdateRequest_data_attributes::isPublicLinkLimitEnabled() const {
    return m_public_link_limit_enabled;
}
void OAIBetaGroupUpdateRequest_data_attributes::setPublicLinkLimitEnabled(const bool &public_link_limit_enabled) {
    m_public_link_limit_enabled = public_link_limit_enabled;
    m_public_link_limit_enabled_isSet = true;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_public_link_limit_enabled_Set() const{
    return m_public_link_limit_enabled_isSet;
}

bool OAIBetaGroupUpdateRequest_data_attributes::is_public_link_limit_enabled_Valid() const{
    return m_public_link_limit_enabled_isValid;
}

bool OAIBetaGroupUpdateRequest_data_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_feedback_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_link_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_link_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_link_limit_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBetaGroupUpdateRequest_data_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
