/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppCategory_relationships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppCategory_relationships::OAIAppCategory_relationships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppCategory_relationships::OAIAppCategory_relationships() {
    this->initializeModel();
}

OAIAppCategory_relationships::~OAIAppCategory_relationships() {}

void OAIAppCategory_relationships::initializeModel() {

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_subcategories_isSet = false;
    m_subcategories_isValid = false;
}

void OAIAppCategory_relationships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppCategory_relationships::fromJsonObject(QJsonObject json) {

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_subcategories_isValid = ::OpenAPI::fromJsonValue(m_subcategories, json[QString("subcategories")]);
    m_subcategories_isSet = !json[QString("subcategories")].isNull() && m_subcategories_isValid;
}

QString OAIAppCategory_relationships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppCategory_relationships::asJsonObject() const {
    QJsonObject obj;
    if (m_parent.isSet()) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_subcategories.isSet()) {
        obj.insert(QString("subcategories"), ::OpenAPI::toJsonValue(m_subcategories));
    }
    return obj;
}

OAIAppCategory_relationships_parent OAIAppCategory_relationships::getParent() const {
    return m_parent;
}
void OAIAppCategory_relationships::setParent(const OAIAppCategory_relationships_parent &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIAppCategory_relationships::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIAppCategory_relationships::is_parent_Valid() const{
    return m_parent_isValid;
}

OAIAppCategory_relationships_subcategories OAIAppCategory_relationships::getSubcategories() const {
    return m_subcategories;
}
void OAIAppCategory_relationships::setSubcategories(const OAIAppCategory_relationships_subcategories &subcategories) {
    m_subcategories = subcategories;
    m_subcategories_isSet = true;
}

bool OAIAppCategory_relationships::is_subcategories_Set() const{
    return m_subcategories_isSet;
}

bool OAIAppCategory_relationships::is_subcategories_Valid() const{
    return m_subcategories_isValid;
}

bool OAIAppCategory_relationships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subcategories.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppCategory_relationships::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
