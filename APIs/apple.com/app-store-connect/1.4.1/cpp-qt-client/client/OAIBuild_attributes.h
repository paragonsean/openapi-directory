/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuild_attributes.h
 *
 * 
 */

#ifndef OAIBuild_attributes_H
#define OAIBuild_attributes_H

#include <QJsonObject>

#include "OAIImageAsset.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageAsset;

class OAIBuild_attributes : public OAIObject {
public:
    OAIBuild_attributes();
    OAIBuild_attributes(QString json);
    ~OAIBuild_attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    bool isExpired() const;
    void setExpired(const bool &expired);
    bool is_expired_Set() const;
    bool is_expired_Valid() const;

    OAIImageAsset getIconAssetToken() const;
    void setIconAssetToken(const OAIImageAsset &icon_asset_token);
    bool is_icon_asset_token_Set() const;
    bool is_icon_asset_token_Valid() const;

    QString getMinOsVersion() const;
    void setMinOsVersion(const QString &min_os_version);
    bool is_min_os_version_Set() const;
    bool is_min_os_version_Valid() const;

    QString getProcessingState() const;
    void setProcessingState(const QString &processing_state);
    bool is_processing_state_Set() const;
    bool is_processing_state_Valid() const;

    QDateTime getUploadedDate() const;
    void setUploadedDate(const QDateTime &uploaded_date);
    bool is_uploaded_date_Set() const;
    bool is_uploaded_date_Valid() const;

    bool isUsesNonExemptEncryption() const;
    void setUsesNonExemptEncryption(const bool &uses_non_exempt_encryption);
    bool is_uses_non_exempt_encryption_Set() const;
    bool is_uses_non_exempt_encryption_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    bool m_expired;
    bool m_expired_isSet;
    bool m_expired_isValid;

    OAIImageAsset m_icon_asset_token;
    bool m_icon_asset_token_isSet;
    bool m_icon_asset_token_isValid;

    QString m_min_os_version;
    bool m_min_os_version_isSet;
    bool m_min_os_version_isValid;

    QString m_processing_state;
    bool m_processing_state_isSet;
    bool m_processing_state_isValid;

    QDateTime m_uploaded_date;
    bool m_uploaded_date_isSet;
    bool m_uploaded_date_isValid;

    bool m_uses_non_exempt_encryption;
    bool m_uses_non_exempt_encryption_isSet;
    bool m_uses_non_exempt_encryption_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuild_attributes)

#endif // OAIBuild_attributes_H
