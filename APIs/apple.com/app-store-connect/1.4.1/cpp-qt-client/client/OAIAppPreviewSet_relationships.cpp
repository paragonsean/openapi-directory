/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppPreviewSet_relationships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppPreviewSet_relationships::OAIAppPreviewSet_relationships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppPreviewSet_relationships::OAIAppPreviewSet_relationships() {
    this->initializeModel();
}

OAIAppPreviewSet_relationships::~OAIAppPreviewSet_relationships() {}

void OAIAppPreviewSet_relationships::initializeModel() {

    m_app_previews_isSet = false;
    m_app_previews_isValid = false;

    m_app_store_version_localization_isSet = false;
    m_app_store_version_localization_isValid = false;
}

void OAIAppPreviewSet_relationships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppPreviewSet_relationships::fromJsonObject(QJsonObject json) {

    m_app_previews_isValid = ::OpenAPI::fromJsonValue(m_app_previews, json[QString("appPreviews")]);
    m_app_previews_isSet = !json[QString("appPreviews")].isNull() && m_app_previews_isValid;

    m_app_store_version_localization_isValid = ::OpenAPI::fromJsonValue(m_app_store_version_localization, json[QString("appStoreVersionLocalization")]);
    m_app_store_version_localization_isSet = !json[QString("appStoreVersionLocalization")].isNull() && m_app_store_version_localization_isValid;
}

QString OAIAppPreviewSet_relationships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppPreviewSet_relationships::asJsonObject() const {
    QJsonObject obj;
    if (m_app_previews.isSet()) {
        obj.insert(QString("appPreviews"), ::OpenAPI::toJsonValue(m_app_previews));
    }
    if (m_app_store_version_localization.isSet()) {
        obj.insert(QString("appStoreVersionLocalization"), ::OpenAPI::toJsonValue(m_app_store_version_localization));
    }
    return obj;
}

OAIAppPreviewSet_relationships_appPreviews OAIAppPreviewSet_relationships::getAppPreviews() const {
    return m_app_previews;
}
void OAIAppPreviewSet_relationships::setAppPreviews(const OAIAppPreviewSet_relationships_appPreviews &app_previews) {
    m_app_previews = app_previews;
    m_app_previews_isSet = true;
}

bool OAIAppPreviewSet_relationships::is_app_previews_Set() const{
    return m_app_previews_isSet;
}

bool OAIAppPreviewSet_relationships::is_app_previews_Valid() const{
    return m_app_previews_isValid;
}

OAIAppPreviewSet_relationships_appStoreVersionLocalization OAIAppPreviewSet_relationships::getAppStoreVersionLocalization() const {
    return m_app_store_version_localization;
}
void OAIAppPreviewSet_relationships::setAppStoreVersionLocalization(const OAIAppPreviewSet_relationships_appStoreVersionLocalization &app_store_version_localization) {
    m_app_store_version_localization = app_store_version_localization;
    m_app_store_version_localization_isSet = true;
}

bool OAIAppPreviewSet_relationships::is_app_store_version_localization_Set() const{
    return m_app_store_version_localization_isSet;
}

bool OAIAppPreviewSet_relationships::is_app_store_version_localization_Valid() const{
    return m_app_store_version_localization_isValid;
}

bool OAIAppPreviewSet_relationships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_previews.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_store_version_localization.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppPreviewSet_relationships::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
