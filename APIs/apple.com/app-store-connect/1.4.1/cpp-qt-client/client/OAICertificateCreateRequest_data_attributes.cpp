/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateCreateRequest_data_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateCreateRequest_data_attributes::OAICertificateCreateRequest_data_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateCreateRequest_data_attributes::OAICertificateCreateRequest_data_attributes() {
    this->initializeModel();
}

OAICertificateCreateRequest_data_attributes::~OAICertificateCreateRequest_data_attributes() {}

void OAICertificateCreateRequest_data_attributes::initializeModel() {

    m_certificate_type_isSet = false;
    m_certificate_type_isValid = false;

    m_csr_content_isSet = false;
    m_csr_content_isValid = false;
}

void OAICertificateCreateRequest_data_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateCreateRequest_data_attributes::fromJsonObject(QJsonObject json) {

    m_certificate_type_isValid = ::OpenAPI::fromJsonValue(m_certificate_type, json[QString("certificateType")]);
    m_certificate_type_isSet = !json[QString("certificateType")].isNull() && m_certificate_type_isValid;

    m_csr_content_isValid = ::OpenAPI::fromJsonValue(m_csr_content, json[QString("csrContent")]);
    m_csr_content_isSet = !json[QString("csrContent")].isNull() && m_csr_content_isValid;
}

QString OAICertificateCreateRequest_data_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateCreateRequest_data_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate_type.isSet()) {
        obj.insert(QString("certificateType"), ::OpenAPI::toJsonValue(m_certificate_type));
    }
    if (m_csr_content_isSet) {
        obj.insert(QString("csrContent"), ::OpenAPI::toJsonValue(m_csr_content));
    }
    return obj;
}

OAICertificateType OAICertificateCreateRequest_data_attributes::getCertificateType() const {
    return m_certificate_type;
}
void OAICertificateCreateRequest_data_attributes::setCertificateType(const OAICertificateType &certificate_type) {
    m_certificate_type = certificate_type;
    m_certificate_type_isSet = true;
}

bool OAICertificateCreateRequest_data_attributes::is_certificate_type_Set() const{
    return m_certificate_type_isSet;
}

bool OAICertificateCreateRequest_data_attributes::is_certificate_type_Valid() const{
    return m_certificate_type_isValid;
}

QString OAICertificateCreateRequest_data_attributes::getCsrContent() const {
    return m_csr_content;
}
void OAICertificateCreateRequest_data_attributes::setCsrContent(const QString &csr_content) {
    m_csr_content = csr_content;
    m_csr_content_isSet = true;
}

bool OAICertificateCreateRequest_data_attributes::is_csr_content_Set() const{
    return m_csr_content_isSet;
}

bool OAICertificateCreateRequest_data_attributes::is_csr_content_Valid() const{
    return m_csr_content_isValid;
}

bool OAICertificateCreateRequest_data_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_csr_content_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateCreateRequest_data_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_certificate_type_isValid && m_csr_content_isValid && true;
}

} // namespace OpenAPI
