/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserRole.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserRole::OAIUserRole(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserRole::OAIUserRole() {
    this->initializeModel();
}

OAIUserRole::~OAIUserRole() {}

void OAIUserRole::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUserRole::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUserRole::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ADMIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::ADMIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FINANCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::FINANCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TECHNICAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::TECHNICAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCOUNT_HOLDER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::ACCOUNT_HOLDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("READ_ONLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::READ_ONLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SALES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::SALES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::MARKETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APP_MANAGER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::APP_MANAGER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEVELOPER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::DEVELOPER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCESS_TO_REPORTS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::ACCESS_TO_REPORTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOMER_SUPPORT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::CUSTOMER_SUPPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATE_APPS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::CREATE_APPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CLOUD_MANAGED_DEVELOPER_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::CLOUD_MANAGED_DEVELOPER_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CLOUD_MANAGED_APP_DISTRIBUTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserRole::CLOUD_MANAGED_APP_DISTRIBUTION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUserRole::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUserRole::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUserRole::ADMIN:
            val = "ADMIN";
            break;
        case eOAIUserRole::FINANCE:
            val = "FINANCE";
            break;
        case eOAIUserRole::TECHNICAL:
            val = "TECHNICAL";
            break;
        case eOAIUserRole::ACCOUNT_HOLDER:
            val = "ACCOUNT_HOLDER";
            break;
        case eOAIUserRole::READ_ONLY:
            val = "READ_ONLY";
            break;
        case eOAIUserRole::SALES:
            val = "SALES";
            break;
        case eOAIUserRole::MARKETING:
            val = "MARKETING";
            break;
        case eOAIUserRole::APP_MANAGER:
            val = "APP_MANAGER";
            break;
        case eOAIUserRole::DEVELOPER:
            val = "DEVELOPER";
            break;
        case eOAIUserRole::ACCESS_TO_REPORTS:
            val = "ACCESS_TO_REPORTS";
            break;
        case eOAIUserRole::CUSTOMER_SUPPORT:
            val = "CUSTOMER_SUPPORT";
            break;
        case eOAIUserRole::CREATE_APPS:
            val = "CREATE_APPS";
            break;
        case eOAIUserRole::CLOUD_MANAGED_DEVELOPER_ID:
            val = "CLOUD_MANAGED_DEVELOPER_ID";
            break;
        case eOAIUserRole::CLOUD_MANAGED_APP_DISTRIBUTION:
            val = "CLOUD_MANAGED_APP_DISTRIBUTION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUserRole::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUserRole::eOAIUserRole OAIUserRole::getValue() const {
    return m_value;
}

void OAIUserRole::setValue(const OAIUserRole::eOAIUserRole& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUserRole::isSet() const {
    
    return m_value_isSet;
}

bool OAIUserRole::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
