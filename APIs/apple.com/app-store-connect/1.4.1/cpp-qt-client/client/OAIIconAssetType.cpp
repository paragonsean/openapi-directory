/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIconAssetType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIconAssetType::OAIIconAssetType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIconAssetType::OAIIconAssetType() {
    this->initializeModel();
}

OAIIconAssetType::~OAIIconAssetType() {}

void OAIIconAssetType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIconAssetType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIconAssetType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("APP_STORE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIconAssetType::APP_STORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MESSAGES_APP_STORE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIconAssetType::MESSAGES_APP_STORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WATCH_APP_STORE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIconAssetType::WATCH_APP_STORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TV_OS_HOME_SCREEN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIconAssetType::TV_OS_HOME_SCREEN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TV_OS_TOP_SHELF", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIconAssetType::TV_OS_TOP_SHELF;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIconAssetType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIconAssetType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIconAssetType::APP_STORE:
            val = "APP_STORE";
            break;
        case eOAIIconAssetType::MESSAGES_APP_STORE:
            val = "MESSAGES_APP_STORE";
            break;
        case eOAIIconAssetType::WATCH_APP_STORE:
            val = "WATCH_APP_STORE";
            break;
        case eOAIIconAssetType::TV_OS_HOME_SCREEN:
            val = "TV_OS_HOME_SCREEN";
            break;
        case eOAIIconAssetType::TV_OS_TOP_SHELF:
            val = "TV_OS_TOP_SHELF";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIconAssetType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIconAssetType::eOAIIconAssetType OAIIconAssetType::getValue() const {
    return m_value;
}

void OAIIconAssetType::setValue(const OAIIconAssetType::eOAIIconAssetType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIconAssetType::isSet() const {
    
    return m_value_isSet;
}

bool OAIIconAssetType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
