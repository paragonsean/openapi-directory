/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBetaAppLocalization_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBetaAppLocalization_attributes::OAIBetaAppLocalization_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBetaAppLocalization_attributes::OAIBetaAppLocalization_attributes() {
    this->initializeModel();
}

OAIBetaAppLocalization_attributes::~OAIBetaAppLocalization_attributes() {}

void OAIBetaAppLocalization_attributes::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_feedback_email_isSet = false;
    m_feedback_email_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_marketing_url_isSet = false;
    m_marketing_url_isValid = false;

    m_privacy_policy_url_isSet = false;
    m_privacy_policy_url_isValid = false;

    m_tv_os_privacy_policy_isSet = false;
    m_tv_os_privacy_policy_isValid = false;
}

void OAIBetaAppLocalization_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBetaAppLocalization_attributes::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_feedback_email_isValid = ::OpenAPI::fromJsonValue(m_feedback_email, json[QString("feedbackEmail")]);
    m_feedback_email_isSet = !json[QString("feedbackEmail")].isNull() && m_feedback_email_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_marketing_url_isValid = ::OpenAPI::fromJsonValue(m_marketing_url, json[QString("marketingUrl")]);
    m_marketing_url_isSet = !json[QString("marketingUrl")].isNull() && m_marketing_url_isValid;

    m_privacy_policy_url_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy_url, json[QString("privacyPolicyUrl")]);
    m_privacy_policy_url_isSet = !json[QString("privacyPolicyUrl")].isNull() && m_privacy_policy_url_isValid;

    m_tv_os_privacy_policy_isValid = ::OpenAPI::fromJsonValue(m_tv_os_privacy_policy, json[QString("tvOsPrivacyPolicy")]);
    m_tv_os_privacy_policy_isSet = !json[QString("tvOsPrivacyPolicy")].isNull() && m_tv_os_privacy_policy_isValid;
}

QString OAIBetaAppLocalization_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBetaAppLocalization_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_feedback_email_isSet) {
        obj.insert(QString("feedbackEmail"), ::OpenAPI::toJsonValue(m_feedback_email));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_marketing_url_isSet) {
        obj.insert(QString("marketingUrl"), ::OpenAPI::toJsonValue(m_marketing_url));
    }
    if (m_privacy_policy_url_isSet) {
        obj.insert(QString("privacyPolicyUrl"), ::OpenAPI::toJsonValue(m_privacy_policy_url));
    }
    if (m_tv_os_privacy_policy_isSet) {
        obj.insert(QString("tvOsPrivacyPolicy"), ::OpenAPI::toJsonValue(m_tv_os_privacy_policy));
    }
    return obj;
}

QString OAIBetaAppLocalization_attributes::getDescription() const {
    return m_description;
}
void OAIBetaAppLocalization_attributes::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBetaAppLocalization_attributes::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBetaAppLocalization_attributes::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIBetaAppLocalization_attributes::getFeedbackEmail() const {
    return m_feedback_email;
}
void OAIBetaAppLocalization_attributes::setFeedbackEmail(const QString &feedback_email) {
    m_feedback_email = feedback_email;
    m_feedback_email_isSet = true;
}

bool OAIBetaAppLocalization_attributes::is_feedback_email_Set() const{
    return m_feedback_email_isSet;
}

bool OAIBetaAppLocalization_attributes::is_feedback_email_Valid() const{
    return m_feedback_email_isValid;
}

QString OAIBetaAppLocalization_attributes::getLocale() const {
    return m_locale;
}
void OAIBetaAppLocalization_attributes::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIBetaAppLocalization_attributes::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIBetaAppLocalization_attributes::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIBetaAppLocalization_attributes::getMarketingUrl() const {
    return m_marketing_url;
}
void OAIBetaAppLocalization_attributes::setMarketingUrl(const QString &marketing_url) {
    m_marketing_url = marketing_url;
    m_marketing_url_isSet = true;
}

bool OAIBetaAppLocalization_attributes::is_marketing_url_Set() const{
    return m_marketing_url_isSet;
}

bool OAIBetaAppLocalization_attributes::is_marketing_url_Valid() const{
    return m_marketing_url_isValid;
}

QString OAIBetaAppLocalization_attributes::getPrivacyPolicyUrl() const {
    return m_privacy_policy_url;
}
void OAIBetaAppLocalization_attributes::setPrivacyPolicyUrl(const QString &privacy_policy_url) {
    m_privacy_policy_url = privacy_policy_url;
    m_privacy_policy_url_isSet = true;
}

bool OAIBetaAppLocalization_attributes::is_privacy_policy_url_Set() const{
    return m_privacy_policy_url_isSet;
}

bool OAIBetaAppLocalization_attributes::is_privacy_policy_url_Valid() const{
    return m_privacy_policy_url_isValid;
}

QString OAIBetaAppLocalization_attributes::getTvOsPrivacyPolicy() const {
    return m_tv_os_privacy_policy;
}
void OAIBetaAppLocalization_attributes::setTvOsPrivacyPolicy(const QString &tv_os_privacy_policy) {
    m_tv_os_privacy_policy = tv_os_privacy_policy;
    m_tv_os_privacy_policy_isSet = true;
}

bool OAIBetaAppLocalization_attributes::is_tv_os_privacy_policy_Set() const{
    return m_tv_os_privacy_policy_isSet;
}

bool OAIBetaAppLocalization_attributes::is_tv_os_privacy_policy_Valid() const{
    return m_tv_os_privacy_policy_isValid;
}

bool OAIBetaAppLocalization_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tv_os_privacy_policy_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBetaAppLocalization_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
