/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppStoreVersionPhasedRelease_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppStoreVersionPhasedRelease_attributes::OAIAppStoreVersionPhasedRelease_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppStoreVersionPhasedRelease_attributes::OAIAppStoreVersionPhasedRelease_attributes() {
    this->initializeModel();
}

OAIAppStoreVersionPhasedRelease_attributes::~OAIAppStoreVersionPhasedRelease_attributes() {}

void OAIAppStoreVersionPhasedRelease_attributes::initializeModel() {

    m_current_day_number_isSet = false;
    m_current_day_number_isValid = false;

    m_phased_release_state_isSet = false;
    m_phased_release_state_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_total_pause_duration_isSet = false;
    m_total_pause_duration_isValid = false;
}

void OAIAppStoreVersionPhasedRelease_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppStoreVersionPhasedRelease_attributes::fromJsonObject(QJsonObject json) {

    m_current_day_number_isValid = ::OpenAPI::fromJsonValue(m_current_day_number, json[QString("currentDayNumber")]);
    m_current_day_number_isSet = !json[QString("currentDayNumber")].isNull() && m_current_day_number_isValid;

    m_phased_release_state_isValid = ::OpenAPI::fromJsonValue(m_phased_release_state, json[QString("phasedReleaseState")]);
    m_phased_release_state_isSet = !json[QString("phasedReleaseState")].isNull() && m_phased_release_state_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_total_pause_duration_isValid = ::OpenAPI::fromJsonValue(m_total_pause_duration, json[QString("totalPauseDuration")]);
    m_total_pause_duration_isSet = !json[QString("totalPauseDuration")].isNull() && m_total_pause_duration_isValid;
}

QString OAIAppStoreVersionPhasedRelease_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppStoreVersionPhasedRelease_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_current_day_number_isSet) {
        obj.insert(QString("currentDayNumber"), ::OpenAPI::toJsonValue(m_current_day_number));
    }
    if (m_phased_release_state.isSet()) {
        obj.insert(QString("phasedReleaseState"), ::OpenAPI::toJsonValue(m_phased_release_state));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_total_pause_duration_isSet) {
        obj.insert(QString("totalPauseDuration"), ::OpenAPI::toJsonValue(m_total_pause_duration));
    }
    return obj;
}

qint32 OAIAppStoreVersionPhasedRelease_attributes::getCurrentDayNumber() const {
    return m_current_day_number;
}
void OAIAppStoreVersionPhasedRelease_attributes::setCurrentDayNumber(const qint32 &current_day_number) {
    m_current_day_number = current_day_number;
    m_current_day_number_isSet = true;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_current_day_number_Set() const{
    return m_current_day_number_isSet;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_current_day_number_Valid() const{
    return m_current_day_number_isValid;
}

OAIPhasedReleaseState OAIAppStoreVersionPhasedRelease_attributes::getPhasedReleaseState() const {
    return m_phased_release_state;
}
void OAIAppStoreVersionPhasedRelease_attributes::setPhasedReleaseState(const OAIPhasedReleaseState &phased_release_state) {
    m_phased_release_state = phased_release_state;
    m_phased_release_state_isSet = true;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_phased_release_state_Set() const{
    return m_phased_release_state_isSet;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_phased_release_state_Valid() const{
    return m_phased_release_state_isValid;
}

QDateTime OAIAppStoreVersionPhasedRelease_attributes::getStartDate() const {
    return m_start_date;
}
void OAIAppStoreVersionPhasedRelease_attributes::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_start_date_Valid() const{
    return m_start_date_isValid;
}

qint32 OAIAppStoreVersionPhasedRelease_attributes::getTotalPauseDuration() const {
    return m_total_pause_duration;
}
void OAIAppStoreVersionPhasedRelease_attributes::setTotalPauseDuration(const qint32 &total_pause_duration) {
    m_total_pause_duration = total_pause_duration;
    m_total_pause_duration_isSet = true;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_total_pause_duration_Set() const{
    return m_total_pause_duration_isSet;
}

bool OAIAppStoreVersionPhasedRelease_attributes::is_total_pause_duration_Valid() const{
    return m_total_pause_duration_isValid;
}

bool OAIAppStoreVersionPhasedRelease_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_day_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phased_release_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_pause_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppStoreVersionPhasedRelease_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
