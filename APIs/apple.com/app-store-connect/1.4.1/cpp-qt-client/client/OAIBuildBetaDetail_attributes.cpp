/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildBetaDetail_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildBetaDetail_attributes::OAIBuildBetaDetail_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildBetaDetail_attributes::OAIBuildBetaDetail_attributes() {
    this->initializeModel();
}

OAIBuildBetaDetail_attributes::~OAIBuildBetaDetail_attributes() {}

void OAIBuildBetaDetail_attributes::initializeModel() {

    m_auto_notify_enabled_isSet = false;
    m_auto_notify_enabled_isValid = false;

    m_external_build_state_isSet = false;
    m_external_build_state_isValid = false;

    m_internal_build_state_isSet = false;
    m_internal_build_state_isValid = false;
}

void OAIBuildBetaDetail_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildBetaDetail_attributes::fromJsonObject(QJsonObject json) {

    m_auto_notify_enabled_isValid = ::OpenAPI::fromJsonValue(m_auto_notify_enabled, json[QString("autoNotifyEnabled")]);
    m_auto_notify_enabled_isSet = !json[QString("autoNotifyEnabled")].isNull() && m_auto_notify_enabled_isValid;

    m_external_build_state_isValid = ::OpenAPI::fromJsonValue(m_external_build_state, json[QString("externalBuildState")]);
    m_external_build_state_isSet = !json[QString("externalBuildState")].isNull() && m_external_build_state_isValid;

    m_internal_build_state_isValid = ::OpenAPI::fromJsonValue(m_internal_build_state, json[QString("internalBuildState")]);
    m_internal_build_state_isSet = !json[QString("internalBuildState")].isNull() && m_internal_build_state_isValid;
}

QString OAIBuildBetaDetail_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildBetaDetail_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_notify_enabled_isSet) {
        obj.insert(QString("autoNotifyEnabled"), ::OpenAPI::toJsonValue(m_auto_notify_enabled));
    }
    if (m_external_build_state.isSet()) {
        obj.insert(QString("externalBuildState"), ::OpenAPI::toJsonValue(m_external_build_state));
    }
    if (m_internal_build_state.isSet()) {
        obj.insert(QString("internalBuildState"), ::OpenAPI::toJsonValue(m_internal_build_state));
    }
    return obj;
}

bool OAIBuildBetaDetail_attributes::isAutoNotifyEnabled() const {
    return m_auto_notify_enabled;
}
void OAIBuildBetaDetail_attributes::setAutoNotifyEnabled(const bool &auto_notify_enabled) {
    m_auto_notify_enabled = auto_notify_enabled;
    m_auto_notify_enabled_isSet = true;
}

bool OAIBuildBetaDetail_attributes::is_auto_notify_enabled_Set() const{
    return m_auto_notify_enabled_isSet;
}

bool OAIBuildBetaDetail_attributes::is_auto_notify_enabled_Valid() const{
    return m_auto_notify_enabled_isValid;
}

OAIExternalBetaState OAIBuildBetaDetail_attributes::getExternalBuildState() const {
    return m_external_build_state;
}
void OAIBuildBetaDetail_attributes::setExternalBuildState(const OAIExternalBetaState &external_build_state) {
    m_external_build_state = external_build_state;
    m_external_build_state_isSet = true;
}

bool OAIBuildBetaDetail_attributes::is_external_build_state_Set() const{
    return m_external_build_state_isSet;
}

bool OAIBuildBetaDetail_attributes::is_external_build_state_Valid() const{
    return m_external_build_state_isValid;
}

OAIInternalBetaState OAIBuildBetaDetail_attributes::getInternalBuildState() const {
    return m_internal_build_state;
}
void OAIBuildBetaDetail_attributes::setInternalBuildState(const OAIInternalBetaState &internal_build_state) {
    m_internal_build_state = internal_build_state;
    m_internal_build_state_isSet = true;
}

bool OAIBuildBetaDetail_attributes::is_internal_build_state_Set() const{
    return m_internal_build_state_isSet;
}

bool OAIBuildBetaDetail_attributes::is_internal_build_state_Valid() const{
    return m_internal_build_state_isValid;
}

bool OAIBuildBetaDetail_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_notify_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_build_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_internal_build_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildBetaDetail_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
