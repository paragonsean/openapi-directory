/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppPreOrder_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppPreOrder_attributes::OAIAppPreOrder_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppPreOrder_attributes::OAIAppPreOrder_attributes() {
    this->initializeModel();
}

OAIAppPreOrder_attributes::~OAIAppPreOrder_attributes() {}

void OAIAppPreOrder_attributes::initializeModel() {

    m_app_release_date_isSet = false;
    m_app_release_date_isValid = false;

    m_pre_order_available_date_isSet = false;
    m_pre_order_available_date_isValid = false;
}

void OAIAppPreOrder_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppPreOrder_attributes::fromJsonObject(QJsonObject json) {

    m_app_release_date_isValid = ::OpenAPI::fromJsonValue(m_app_release_date, json[QString("appReleaseDate")]);
    m_app_release_date_isSet = !json[QString("appReleaseDate")].isNull() && m_app_release_date_isValid;

    m_pre_order_available_date_isValid = ::OpenAPI::fromJsonValue(m_pre_order_available_date, json[QString("preOrderAvailableDate")]);
    m_pre_order_available_date_isSet = !json[QString("preOrderAvailableDate")].isNull() && m_pre_order_available_date_isValid;
}

QString OAIAppPreOrder_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppPreOrder_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_app_release_date_isSet) {
        obj.insert(QString("appReleaseDate"), ::OpenAPI::toJsonValue(m_app_release_date));
    }
    if (m_pre_order_available_date_isSet) {
        obj.insert(QString("preOrderAvailableDate"), ::OpenAPI::toJsonValue(m_pre_order_available_date));
    }
    return obj;
}

QDate OAIAppPreOrder_attributes::getAppReleaseDate() const {
    return m_app_release_date;
}
void OAIAppPreOrder_attributes::setAppReleaseDate(const QDate &app_release_date) {
    m_app_release_date = app_release_date;
    m_app_release_date_isSet = true;
}

bool OAIAppPreOrder_attributes::is_app_release_date_Set() const{
    return m_app_release_date_isSet;
}

bool OAIAppPreOrder_attributes::is_app_release_date_Valid() const{
    return m_app_release_date_isValid;
}

QDate OAIAppPreOrder_attributes::getPreOrderAvailableDate() const {
    return m_pre_order_available_date;
}
void OAIAppPreOrder_attributes::setPreOrderAvailableDate(const QDate &pre_order_available_date) {
    m_pre_order_available_date = pre_order_available_date;
    m_pre_order_available_date_isSet = true;
}

bool OAIAppPreOrder_attributes::is_pre_order_available_date_Set() const{
    return m_pre_order_available_date_isSet;
}

bool OAIAppPreOrder_attributes::is_pre_order_available_date_Valid() const{
    return m_pre_order_available_date_isValid;
}

bool OAIAppPreOrder_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_release_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_order_available_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppPreOrder_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
