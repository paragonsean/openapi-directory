/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppStoreReviewAttachment_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppStoreReviewAttachment_attributes::OAIAppStoreReviewAttachment_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppStoreReviewAttachment_attributes::OAIAppStoreReviewAttachment_attributes() {
    this->initializeModel();
}

OAIAppStoreReviewAttachment_attributes::~OAIAppStoreReviewAttachment_attributes() {}

void OAIAppStoreReviewAttachment_attributes::initializeModel() {

    m_asset_delivery_state_isSet = false;
    m_asset_delivery_state_isValid = false;

    m_file_name_isSet = false;
    m_file_name_isValid = false;

    m_file_size_isSet = false;
    m_file_size_isValid = false;

    m_source_file_checksum_isSet = false;
    m_source_file_checksum_isValid = false;

    m_upload_operations_isSet = false;
    m_upload_operations_isValid = false;
}

void OAIAppStoreReviewAttachment_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppStoreReviewAttachment_attributes::fromJsonObject(QJsonObject json) {

    m_asset_delivery_state_isValid = ::OpenAPI::fromJsonValue(m_asset_delivery_state, json[QString("assetDeliveryState")]);
    m_asset_delivery_state_isSet = !json[QString("assetDeliveryState")].isNull() && m_asset_delivery_state_isValid;

    m_file_name_isValid = ::OpenAPI::fromJsonValue(m_file_name, json[QString("fileName")]);
    m_file_name_isSet = !json[QString("fileName")].isNull() && m_file_name_isValid;

    m_file_size_isValid = ::OpenAPI::fromJsonValue(m_file_size, json[QString("fileSize")]);
    m_file_size_isSet = !json[QString("fileSize")].isNull() && m_file_size_isValid;

    m_source_file_checksum_isValid = ::OpenAPI::fromJsonValue(m_source_file_checksum, json[QString("sourceFileChecksum")]);
    m_source_file_checksum_isSet = !json[QString("sourceFileChecksum")].isNull() && m_source_file_checksum_isValid;

    m_upload_operations_isValid = ::OpenAPI::fromJsonValue(m_upload_operations, json[QString("uploadOperations")]);
    m_upload_operations_isSet = !json[QString("uploadOperations")].isNull() && m_upload_operations_isValid;
}

QString OAIAppStoreReviewAttachment_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppStoreReviewAttachment_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_delivery_state.isSet()) {
        obj.insert(QString("assetDeliveryState"), ::OpenAPI::toJsonValue(m_asset_delivery_state));
    }
    if (m_file_name_isSet) {
        obj.insert(QString("fileName"), ::OpenAPI::toJsonValue(m_file_name));
    }
    if (m_file_size_isSet) {
        obj.insert(QString("fileSize"), ::OpenAPI::toJsonValue(m_file_size));
    }
    if (m_source_file_checksum_isSet) {
        obj.insert(QString("sourceFileChecksum"), ::OpenAPI::toJsonValue(m_source_file_checksum));
    }
    if (m_upload_operations.size() > 0) {
        obj.insert(QString("uploadOperations"), ::OpenAPI::toJsonValue(m_upload_operations));
    }
    return obj;
}

OAIAppMediaAssetState OAIAppStoreReviewAttachment_attributes::getAssetDeliveryState() const {
    return m_asset_delivery_state;
}
void OAIAppStoreReviewAttachment_attributes::setAssetDeliveryState(const OAIAppMediaAssetState &asset_delivery_state) {
    m_asset_delivery_state = asset_delivery_state;
    m_asset_delivery_state_isSet = true;
}

bool OAIAppStoreReviewAttachment_attributes::is_asset_delivery_state_Set() const{
    return m_asset_delivery_state_isSet;
}

bool OAIAppStoreReviewAttachment_attributes::is_asset_delivery_state_Valid() const{
    return m_asset_delivery_state_isValid;
}

QString OAIAppStoreReviewAttachment_attributes::getFileName() const {
    return m_file_name;
}
void OAIAppStoreReviewAttachment_attributes::setFileName(const QString &file_name) {
    m_file_name = file_name;
    m_file_name_isSet = true;
}

bool OAIAppStoreReviewAttachment_attributes::is_file_name_Set() const{
    return m_file_name_isSet;
}

bool OAIAppStoreReviewAttachment_attributes::is_file_name_Valid() const{
    return m_file_name_isValid;
}

qint32 OAIAppStoreReviewAttachment_attributes::getFileSize() const {
    return m_file_size;
}
void OAIAppStoreReviewAttachment_attributes::setFileSize(const qint32 &file_size) {
    m_file_size = file_size;
    m_file_size_isSet = true;
}

bool OAIAppStoreReviewAttachment_attributes::is_file_size_Set() const{
    return m_file_size_isSet;
}

bool OAIAppStoreReviewAttachment_attributes::is_file_size_Valid() const{
    return m_file_size_isValid;
}

QString OAIAppStoreReviewAttachment_attributes::getSourceFileChecksum() const {
    return m_source_file_checksum;
}
void OAIAppStoreReviewAttachment_attributes::setSourceFileChecksum(const QString &source_file_checksum) {
    m_source_file_checksum = source_file_checksum;
    m_source_file_checksum_isSet = true;
}

bool OAIAppStoreReviewAttachment_attributes::is_source_file_checksum_Set() const{
    return m_source_file_checksum_isSet;
}

bool OAIAppStoreReviewAttachment_attributes::is_source_file_checksum_Valid() const{
    return m_source_file_checksum_isValid;
}

QList<OAIUploadOperation> OAIAppStoreReviewAttachment_attributes::getUploadOperations() const {
    return m_upload_operations;
}
void OAIAppStoreReviewAttachment_attributes::setUploadOperations(const QList<OAIUploadOperation> &upload_operations) {
    m_upload_operations = upload_operations;
    m_upload_operations_isSet = true;
}

bool OAIAppStoreReviewAttachment_attributes::is_upload_operations_Set() const{
    return m_upload_operations_isSet;
}

bool OAIAppStoreReviewAttachment_attributes::is_upload_operations_Valid() const{
    return m_upload_operations_isValid;
}

bool OAIAppStoreReviewAttachment_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_delivery_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_file_checksum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_operations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppStoreReviewAttachment_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
