/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppInfoUpdateRequest_data_relationships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppInfoUpdateRequest_data_relationships::OAIAppInfoUpdateRequest_data_relationships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppInfoUpdateRequest_data_relationships::OAIAppInfoUpdateRequest_data_relationships() {
    this->initializeModel();
}

OAIAppInfoUpdateRequest_data_relationships::~OAIAppInfoUpdateRequest_data_relationships() {}

void OAIAppInfoUpdateRequest_data_relationships::initializeModel() {

    m_primary_category_isSet = false;
    m_primary_category_isValid = false;

    m_primary_subcategory_one_isSet = false;
    m_primary_subcategory_one_isValid = false;

    m_primary_subcategory_two_isSet = false;
    m_primary_subcategory_two_isValid = false;

    m_secondary_category_isSet = false;
    m_secondary_category_isValid = false;

    m_secondary_subcategory_one_isSet = false;
    m_secondary_subcategory_one_isValid = false;

    m_secondary_subcategory_two_isSet = false;
    m_secondary_subcategory_two_isValid = false;
}

void OAIAppInfoUpdateRequest_data_relationships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppInfoUpdateRequest_data_relationships::fromJsonObject(QJsonObject json) {

    m_primary_category_isValid = ::OpenAPI::fromJsonValue(m_primary_category, json[QString("primaryCategory")]);
    m_primary_category_isSet = !json[QString("primaryCategory")].isNull() && m_primary_category_isValid;

    m_primary_subcategory_one_isValid = ::OpenAPI::fromJsonValue(m_primary_subcategory_one, json[QString("primarySubcategoryOne")]);
    m_primary_subcategory_one_isSet = !json[QString("primarySubcategoryOne")].isNull() && m_primary_subcategory_one_isValid;

    m_primary_subcategory_two_isValid = ::OpenAPI::fromJsonValue(m_primary_subcategory_two, json[QString("primarySubcategoryTwo")]);
    m_primary_subcategory_two_isSet = !json[QString("primarySubcategoryTwo")].isNull() && m_primary_subcategory_two_isValid;

    m_secondary_category_isValid = ::OpenAPI::fromJsonValue(m_secondary_category, json[QString("secondaryCategory")]);
    m_secondary_category_isSet = !json[QString("secondaryCategory")].isNull() && m_secondary_category_isValid;

    m_secondary_subcategory_one_isValid = ::OpenAPI::fromJsonValue(m_secondary_subcategory_one, json[QString("secondarySubcategoryOne")]);
    m_secondary_subcategory_one_isSet = !json[QString("secondarySubcategoryOne")].isNull() && m_secondary_subcategory_one_isValid;

    m_secondary_subcategory_two_isValid = ::OpenAPI::fromJsonValue(m_secondary_subcategory_two, json[QString("secondarySubcategoryTwo")]);
    m_secondary_subcategory_two_isSet = !json[QString("secondarySubcategoryTwo")].isNull() && m_secondary_subcategory_two_isValid;
}

QString OAIAppInfoUpdateRequest_data_relationships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppInfoUpdateRequest_data_relationships::asJsonObject() const {
    QJsonObject obj;
    if (m_primary_category.isSet()) {
        obj.insert(QString("primaryCategory"), ::OpenAPI::toJsonValue(m_primary_category));
    }
    if (m_primary_subcategory_one.isSet()) {
        obj.insert(QString("primarySubcategoryOne"), ::OpenAPI::toJsonValue(m_primary_subcategory_one));
    }
    if (m_primary_subcategory_two.isSet()) {
        obj.insert(QString("primarySubcategoryTwo"), ::OpenAPI::toJsonValue(m_primary_subcategory_two));
    }
    if (m_secondary_category.isSet()) {
        obj.insert(QString("secondaryCategory"), ::OpenAPI::toJsonValue(m_secondary_category));
    }
    if (m_secondary_subcategory_one.isSet()) {
        obj.insert(QString("secondarySubcategoryOne"), ::OpenAPI::toJsonValue(m_secondary_subcategory_one));
    }
    if (m_secondary_subcategory_two.isSet()) {
        obj.insert(QString("secondarySubcategoryTwo"), ::OpenAPI::toJsonValue(m_secondary_subcategory_two));
    }
    return obj;
}

OAIAppInfoUpdateRequest_data_relationships_primaryCategory OAIAppInfoUpdateRequest_data_relationships::getPrimaryCategory() const {
    return m_primary_category;
}
void OAIAppInfoUpdateRequest_data_relationships::setPrimaryCategory(const OAIAppInfoUpdateRequest_data_relationships_primaryCategory &primary_category) {
    m_primary_category = primary_category;
    m_primary_category_isSet = true;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_primary_category_Set() const{
    return m_primary_category_isSet;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_primary_category_Valid() const{
    return m_primary_category_isValid;
}

OAIAppInfoUpdateRequest_data_relationships_primaryCategory OAIAppInfoUpdateRequest_data_relationships::getPrimarySubcategoryOne() const {
    return m_primary_subcategory_one;
}
void OAIAppInfoUpdateRequest_data_relationships::setPrimarySubcategoryOne(const OAIAppInfoUpdateRequest_data_relationships_primaryCategory &primary_subcategory_one) {
    m_primary_subcategory_one = primary_subcategory_one;
    m_primary_subcategory_one_isSet = true;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_primary_subcategory_one_Set() const{
    return m_primary_subcategory_one_isSet;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_primary_subcategory_one_Valid() const{
    return m_primary_subcategory_one_isValid;
}

OAIAppInfoUpdateRequest_data_relationships_primaryCategory OAIAppInfoUpdateRequest_data_relationships::getPrimarySubcategoryTwo() const {
    return m_primary_subcategory_two;
}
void OAIAppInfoUpdateRequest_data_relationships::setPrimarySubcategoryTwo(const OAIAppInfoUpdateRequest_data_relationships_primaryCategory &primary_subcategory_two) {
    m_primary_subcategory_two = primary_subcategory_two;
    m_primary_subcategory_two_isSet = true;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_primary_subcategory_two_Set() const{
    return m_primary_subcategory_two_isSet;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_primary_subcategory_two_Valid() const{
    return m_primary_subcategory_two_isValid;
}

OAIAppInfoUpdateRequest_data_relationships_primaryCategory OAIAppInfoUpdateRequest_data_relationships::getSecondaryCategory() const {
    return m_secondary_category;
}
void OAIAppInfoUpdateRequest_data_relationships::setSecondaryCategory(const OAIAppInfoUpdateRequest_data_relationships_primaryCategory &secondary_category) {
    m_secondary_category = secondary_category;
    m_secondary_category_isSet = true;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_secondary_category_Set() const{
    return m_secondary_category_isSet;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_secondary_category_Valid() const{
    return m_secondary_category_isValid;
}

OAIAppInfoUpdateRequest_data_relationships_primaryCategory OAIAppInfoUpdateRequest_data_relationships::getSecondarySubcategoryOne() const {
    return m_secondary_subcategory_one;
}
void OAIAppInfoUpdateRequest_data_relationships::setSecondarySubcategoryOne(const OAIAppInfoUpdateRequest_data_relationships_primaryCategory &secondary_subcategory_one) {
    m_secondary_subcategory_one = secondary_subcategory_one;
    m_secondary_subcategory_one_isSet = true;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_secondary_subcategory_one_Set() const{
    return m_secondary_subcategory_one_isSet;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_secondary_subcategory_one_Valid() const{
    return m_secondary_subcategory_one_isValid;
}

OAIAppInfoUpdateRequest_data_relationships_primaryCategory OAIAppInfoUpdateRequest_data_relationships::getSecondarySubcategoryTwo() const {
    return m_secondary_subcategory_two;
}
void OAIAppInfoUpdateRequest_data_relationships::setSecondarySubcategoryTwo(const OAIAppInfoUpdateRequest_data_relationships_primaryCategory &secondary_subcategory_two) {
    m_secondary_subcategory_two = secondary_subcategory_two;
    m_secondary_subcategory_two_isSet = true;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_secondary_subcategory_two_Set() const{
    return m_secondary_subcategory_two_isSet;
}

bool OAIAppInfoUpdateRequest_data_relationships::is_secondary_subcategory_two_Valid() const{
    return m_secondary_subcategory_two_isValid;
}

bool OAIAppInfoUpdateRequest_data_relationships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_primary_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_subcategory_one.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_subcategory_two.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_subcategory_one.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_subcategory_two.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppInfoUpdateRequest_data_relationships::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
