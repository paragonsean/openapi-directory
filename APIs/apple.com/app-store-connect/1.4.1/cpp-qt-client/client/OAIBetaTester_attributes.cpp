/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBetaTester_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBetaTester_attributes::OAIBetaTester_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBetaTester_attributes::OAIBetaTester_attributes() {
    this->initializeModel();
}

OAIBetaTester_attributes::~OAIBetaTester_attributes() {}

void OAIBetaTester_attributes::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_invite_type_isSet = false;
    m_invite_type_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;
}

void OAIBetaTester_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBetaTester_attributes::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_invite_type_isValid = ::OpenAPI::fromJsonValue(m_invite_type, json[QString("inviteType")]);
    m_invite_type_isSet = !json[QString("inviteType")].isNull() && m_invite_type_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;
}

QString OAIBetaTester_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBetaTester_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_invite_type.isSet()) {
        obj.insert(QString("inviteType"), ::OpenAPI::toJsonValue(m_invite_type));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    return obj;
}

QString OAIBetaTester_attributes::getEmail() const {
    return m_email;
}
void OAIBetaTester_attributes::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIBetaTester_attributes::is_email_Set() const{
    return m_email_isSet;
}

bool OAIBetaTester_attributes::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIBetaTester_attributes::getFirstName() const {
    return m_first_name;
}
void OAIBetaTester_attributes::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIBetaTester_attributes::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIBetaTester_attributes::is_first_name_Valid() const{
    return m_first_name_isValid;
}

OAIBetaInviteType OAIBetaTester_attributes::getInviteType() const {
    return m_invite_type;
}
void OAIBetaTester_attributes::setInviteType(const OAIBetaInviteType &invite_type) {
    m_invite_type = invite_type;
    m_invite_type_isSet = true;
}

bool OAIBetaTester_attributes::is_invite_type_Set() const{
    return m_invite_type_isSet;
}

bool OAIBetaTester_attributes::is_invite_type_Valid() const{
    return m_invite_type_isValid;
}

QString OAIBetaTester_attributes::getLastName() const {
    return m_last_name;
}
void OAIBetaTester_attributes::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIBetaTester_attributes::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIBetaTester_attributes::is_last_name_Valid() const{
    return m_last_name_isValid;
}

bool OAIBetaTester_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invite_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBetaTester_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
