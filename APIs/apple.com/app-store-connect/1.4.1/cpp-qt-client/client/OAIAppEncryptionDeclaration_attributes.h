/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppEncryptionDeclaration_attributes.h
 *
 * 
 */

#ifndef OAIAppEncryptionDeclaration_attributes_H
#define OAIAppEncryptionDeclaration_attributes_H

#include <QJsonObject>

#include "OAIAppEncryptionDeclarationState.h"
#include "OAIPlatform.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAppEncryptionDeclaration_attributes : public OAIObject {
public:
    OAIAppEncryptionDeclaration_attributes();
    OAIAppEncryptionDeclaration_attributes(QString json);
    ~OAIAppEncryptionDeclaration_attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppEncryptionDeclarationState getAppEncryptionDeclarationState() const;
    void setAppEncryptionDeclarationState(const OAIAppEncryptionDeclarationState &app_encryption_declaration_state);
    bool is_app_encryption_declaration_state_Set() const;
    bool is_app_encryption_declaration_state_Valid() const;

    bool isAvailableOnFrenchStore() const;
    void setAvailableOnFrenchStore(const bool &available_on_french_store);
    bool is_available_on_french_store_Set() const;
    bool is_available_on_french_store_Valid() const;

    QString getCodeValue() const;
    void setCodeValue(const QString &code_value);
    bool is_code_value_Set() const;
    bool is_code_value_Valid() const;

    bool isContainsProprietaryCryptography() const;
    void setContainsProprietaryCryptography(const bool &contains_proprietary_cryptography);
    bool is_contains_proprietary_cryptography_Set() const;
    bool is_contains_proprietary_cryptography_Valid() const;

    bool isContainsThirdPartyCryptography() const;
    void setContainsThirdPartyCryptography(const bool &contains_third_party_cryptography);
    bool is_contains_third_party_cryptography_Set() const;
    bool is_contains_third_party_cryptography_Valid() const;

    QString getDocumentName() const;
    void setDocumentName(const QString &document_name);
    bool is_document_name_Set() const;
    bool is_document_name_Valid() const;

    QString getDocumentType() const;
    void setDocumentType(const QString &document_type);
    bool is_document_type_Set() const;
    bool is_document_type_Valid() const;

    QString getDocumentUrl() const;
    void setDocumentUrl(const QString &document_url);
    bool is_document_url_Set() const;
    bool is_document_url_Valid() const;

    bool isExempt() const;
    void setExempt(const bool &exempt);
    bool is_exempt_Set() const;
    bool is_exempt_Valid() const;

    OAIPlatform getPlatform() const;
    void setPlatform(const OAIPlatform &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QDateTime getUploadedDate() const;
    void setUploadedDate(const QDateTime &uploaded_date);
    bool is_uploaded_date_Set() const;
    bool is_uploaded_date_Valid() const;

    bool isUsesEncryption() const;
    void setUsesEncryption(const bool &uses_encryption);
    bool is_uses_encryption_Set() const;
    bool is_uses_encryption_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppEncryptionDeclarationState m_app_encryption_declaration_state;
    bool m_app_encryption_declaration_state_isSet;
    bool m_app_encryption_declaration_state_isValid;

    bool m_available_on_french_store;
    bool m_available_on_french_store_isSet;
    bool m_available_on_french_store_isValid;

    QString m_code_value;
    bool m_code_value_isSet;
    bool m_code_value_isValid;

    bool m_contains_proprietary_cryptography;
    bool m_contains_proprietary_cryptography_isSet;
    bool m_contains_proprietary_cryptography_isValid;

    bool m_contains_third_party_cryptography;
    bool m_contains_third_party_cryptography_isSet;
    bool m_contains_third_party_cryptography_isValid;

    QString m_document_name;
    bool m_document_name_isSet;
    bool m_document_name_isValid;

    QString m_document_type;
    bool m_document_type_isSet;
    bool m_document_type_isValid;

    QString m_document_url;
    bool m_document_url_isSet;
    bool m_document_url_isValid;

    bool m_exempt;
    bool m_exempt_isSet;
    bool m_exempt_isValid;

    OAIPlatform m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QDateTime m_uploaded_date;
    bool m_uploaded_date_isSet;
    bool m_uploaded_date_isValid;

    bool m_uses_encryption;
    bool m_uses_encryption_isSet;
    bool m_uses_encryption_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppEncryptionDeclaration_attributes)

#endif // OAIAppEncryptionDeclaration_attributes_H
