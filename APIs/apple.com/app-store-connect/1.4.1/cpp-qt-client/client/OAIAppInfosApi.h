/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIAppInfosApi_H
#define OAI_OAIAppInfosApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIAgeRatingDeclarationResponse.h"
#include "OAIAppCategoryResponse.h"
#include "OAIAppInfoLocalizationsResponse.h"
#include "OAIAppInfoResponse.h"
#include "OAIAppInfoUpdateRequest.h"
#include "OAIErrorResponse.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIAppInfosApi : public QObject {
    Q_OBJECT

public:
    OAIAppInfosApi(const int timeOut = 0);
    ~OAIAppInfosApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_age_rating_declarations QList<QString> [optional]
    */
    virtual void appInfosAgeRatingDeclarationGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_age_rating_declarations = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  filter_locale QList<QString> [optional]
    * @param[in]  fields_app_infos QList<QString> [optional]
    * @param[in]  fields_app_info_localizations QList<QString> [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  include QList<QString> [optional]
    */
    virtual void appInfosAppInfoLocalizationsGetToManyRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &filter_locale = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_infos = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_info_localizations = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QList<QString>> &include = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_infos QList<QString> [optional]
    * @param[in]  include QList<QString> [optional]
    * @param[in]  fields_age_rating_declarations QList<QString> [optional]
    * @param[in]  fields_app_categories QList<QString> [optional]
    * @param[in]  fields_app_info_localizations QList<QString> [optional]
    * @param[in]  limit_app_info_localizations qint32 [optional]
    */
    virtual void appInfosGetInstance(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_infos = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<QList<QString>> &include = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<QList<QString>> &fields_age_rating_declarations = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_info_localizations = ::OpenAPI::OptionalParam<QList<QString>>(), const ::OpenAPI::OptionalParam<qint32> &limit_app_info_localizations = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_categories QList<QString> [optional]
    */
    virtual void appInfosPrimaryCategoryGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_categories QList<QString> [optional]
    */
    virtual void appInfosPrimarySubcategoryOneGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_categories QList<QString> [optional]
    */
    virtual void appInfosPrimarySubcategoryTwoGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_categories QList<QString> [optional]
    */
    virtual void appInfosSecondaryCategoryGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_categories QList<QString> [optional]
    */
    virtual void appInfosSecondarySubcategoryOneGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  fields_app_categories QList<QString> [optional]
    */
    virtual void appInfosSecondarySubcategoryTwoGetToOneRelated(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &fields_app_categories = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_app_info_update_request OAIAppInfoUpdateRequest [required]
    */
    virtual void appInfosUpdateInstance(const QString &id, const OAIAppInfoUpdateRequest &oai_app_info_update_request);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void appInfosAgeRatingDeclarationGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosAppInfoLocalizationsGetToManyRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosGetInstanceCallback(OAIHttpRequestWorker *worker);
    void appInfosPrimaryCategoryGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosPrimarySubcategoryOneGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosPrimarySubcategoryTwoGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosSecondaryCategoryGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosSecondarySubcategoryOneGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosSecondarySubcategoryTwoGetToOneRelatedCallback(OAIHttpRequestWorker *worker);
    void appInfosUpdateInstanceCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void appInfosAgeRatingDeclarationGetToOneRelatedSignal(OAIAgeRatingDeclarationResponse summary);
    void appInfosAppInfoLocalizationsGetToManyRelatedSignal(OAIAppInfoLocalizationsResponse summary);
    void appInfosGetInstanceSignal(OAIAppInfoResponse summary);
    void appInfosPrimaryCategoryGetToOneRelatedSignal(OAIAppCategoryResponse summary);
    void appInfosPrimarySubcategoryOneGetToOneRelatedSignal(OAIAppCategoryResponse summary);
    void appInfosPrimarySubcategoryTwoGetToOneRelatedSignal(OAIAppCategoryResponse summary);
    void appInfosSecondaryCategoryGetToOneRelatedSignal(OAIAppCategoryResponse summary);
    void appInfosSecondarySubcategoryOneGetToOneRelatedSignal(OAIAppCategoryResponse summary);
    void appInfosSecondarySubcategoryTwoGetToOneRelatedSignal(OAIAppCategoryResponse summary);
    void appInfosUpdateInstanceSignal(OAIAppInfoResponse summary);


    void appInfosAgeRatingDeclarationGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAgeRatingDeclarationResponse summary);
    void appInfosAppInfoLocalizationsGetToManyRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppInfoLocalizationsResponse summary);
    void appInfosGetInstanceSignalFull(OAIHttpRequestWorker *worker, OAIAppInfoResponse summary);
    void appInfosPrimaryCategoryGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppCategoryResponse summary);
    void appInfosPrimarySubcategoryOneGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppCategoryResponse summary);
    void appInfosPrimarySubcategoryTwoGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppCategoryResponse summary);
    void appInfosSecondaryCategoryGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppCategoryResponse summary);
    void appInfosSecondarySubcategoryOneGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppCategoryResponse summary);
    void appInfosSecondarySubcategoryTwoGetToOneRelatedSignalFull(OAIHttpRequestWorker *worker, OAIAppCategoryResponse summary);
    void appInfosUpdateInstanceSignalFull(OAIHttpRequestWorker *worker, OAIAppInfoResponse summary);

    Q_DECL_DEPRECATED_X("Use appInfosAgeRatingDeclarationGetToOneRelatedSignalError() instead")
    void appInfosAgeRatingDeclarationGetToOneRelatedSignalE(OAIAgeRatingDeclarationResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosAgeRatingDeclarationGetToOneRelatedSignalError(OAIAgeRatingDeclarationResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosAppInfoLocalizationsGetToManyRelatedSignalError() instead")
    void appInfosAppInfoLocalizationsGetToManyRelatedSignalE(OAIAppInfoLocalizationsResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosAppInfoLocalizationsGetToManyRelatedSignalError(OAIAppInfoLocalizationsResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosGetInstanceSignalError() instead")
    void appInfosGetInstanceSignalE(OAIAppInfoResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosGetInstanceSignalError(OAIAppInfoResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosPrimaryCategoryGetToOneRelatedSignalError() instead")
    void appInfosPrimaryCategoryGetToOneRelatedSignalE(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosPrimaryCategoryGetToOneRelatedSignalError(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosPrimarySubcategoryOneGetToOneRelatedSignalError() instead")
    void appInfosPrimarySubcategoryOneGetToOneRelatedSignalE(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosPrimarySubcategoryOneGetToOneRelatedSignalError(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosPrimarySubcategoryTwoGetToOneRelatedSignalError() instead")
    void appInfosPrimarySubcategoryTwoGetToOneRelatedSignalE(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosPrimarySubcategoryTwoGetToOneRelatedSignalError(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosSecondaryCategoryGetToOneRelatedSignalError() instead")
    void appInfosSecondaryCategoryGetToOneRelatedSignalE(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosSecondaryCategoryGetToOneRelatedSignalError(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosSecondarySubcategoryOneGetToOneRelatedSignalError() instead")
    void appInfosSecondarySubcategoryOneGetToOneRelatedSignalE(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosSecondarySubcategoryOneGetToOneRelatedSignalError(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosSecondarySubcategoryTwoGetToOneRelatedSignalError() instead")
    void appInfosSecondarySubcategoryTwoGetToOneRelatedSignalE(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosSecondarySubcategoryTwoGetToOneRelatedSignalError(OAIAppCategoryResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosUpdateInstanceSignalError() instead")
    void appInfosUpdateInstanceSignalE(OAIAppInfoResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosUpdateInstanceSignalError(OAIAppInfoResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use appInfosAgeRatingDeclarationGetToOneRelatedSignalErrorFull() instead")
    void appInfosAgeRatingDeclarationGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosAgeRatingDeclarationGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosAppInfoLocalizationsGetToManyRelatedSignalErrorFull() instead")
    void appInfosAppInfoLocalizationsGetToManyRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosAppInfoLocalizationsGetToManyRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosGetInstanceSignalErrorFull() instead")
    void appInfosGetInstanceSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosGetInstanceSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosPrimaryCategoryGetToOneRelatedSignalErrorFull() instead")
    void appInfosPrimaryCategoryGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosPrimaryCategoryGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosPrimarySubcategoryOneGetToOneRelatedSignalErrorFull() instead")
    void appInfosPrimarySubcategoryOneGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosPrimarySubcategoryOneGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosPrimarySubcategoryTwoGetToOneRelatedSignalErrorFull() instead")
    void appInfosPrimarySubcategoryTwoGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosPrimarySubcategoryTwoGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosSecondaryCategoryGetToOneRelatedSignalErrorFull() instead")
    void appInfosSecondaryCategoryGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosSecondaryCategoryGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosSecondarySubcategoryOneGetToOneRelatedSignalErrorFull() instead")
    void appInfosSecondarySubcategoryOneGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosSecondarySubcategoryOneGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosSecondarySubcategoryTwoGetToOneRelatedSignalErrorFull() instead")
    void appInfosSecondarySubcategoryTwoGetToOneRelatedSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosSecondarySubcategoryTwoGetToOneRelatedSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use appInfosUpdateInstanceSignalErrorFull() instead")
    void appInfosUpdateInstanceSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void appInfosUpdateInstanceSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
