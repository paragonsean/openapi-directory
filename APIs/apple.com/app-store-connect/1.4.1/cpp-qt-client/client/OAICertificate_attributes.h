/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificate_attributes.h
 *
 * 
 */

#ifndef OAICertificate_attributes_H
#define OAICertificate_attributes_H

#include <QJsonObject>

#include "OAIBundleIdPlatform.h"
#include "OAICertificateType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificate_attributes : public OAIObject {
public:
    OAICertificate_attributes();
    OAICertificate_attributes(QString json);
    ~OAICertificate_attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateContent() const;
    void setCertificateContent(const QString &certificate_content);
    bool is_certificate_content_Set() const;
    bool is_certificate_content_Valid() const;

    OAICertificateType getCertificateType() const;
    void setCertificateType(const OAICertificateType &certificate_type);
    bool is_certificate_type_Set() const;
    bool is_certificate_type_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIBundleIdPlatform getPlatform() const;
    void setPlatform(const OAIBundleIdPlatform &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_content;
    bool m_certificate_content_isSet;
    bool m_certificate_content_isValid;

    OAICertificateType m_certificate_type;
    bool m_certificate_type_isSet;
    bool m_certificate_type_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIBundleIdPlatform m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificate_attributes)

#endif // OAICertificate_attributes_H
