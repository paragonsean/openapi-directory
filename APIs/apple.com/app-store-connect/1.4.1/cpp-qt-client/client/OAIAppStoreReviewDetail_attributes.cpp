/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppStoreReviewDetail_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppStoreReviewDetail_attributes::OAIAppStoreReviewDetail_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppStoreReviewDetail_attributes::OAIAppStoreReviewDetail_attributes() {
    this->initializeModel();
}

OAIAppStoreReviewDetail_attributes::~OAIAppStoreReviewDetail_attributes() {}

void OAIAppStoreReviewDetail_attributes::initializeModel() {

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_first_name_isSet = false;
    m_contact_first_name_isValid = false;

    m_contact_last_name_isSet = false;
    m_contact_last_name_isValid = false;

    m_contact_phone_isSet = false;
    m_contact_phone_isValid = false;

    m_demo_account_name_isSet = false;
    m_demo_account_name_isValid = false;

    m_demo_account_password_isSet = false;
    m_demo_account_password_isValid = false;

    m_demo_account_required_isSet = false;
    m_demo_account_required_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;
}

void OAIAppStoreReviewDetail_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppStoreReviewDetail_attributes::fromJsonObject(QJsonObject json) {

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("contactEmail")]);
    m_contact_email_isSet = !json[QString("contactEmail")].isNull() && m_contact_email_isValid;

    m_contact_first_name_isValid = ::OpenAPI::fromJsonValue(m_contact_first_name, json[QString("contactFirstName")]);
    m_contact_first_name_isSet = !json[QString("contactFirstName")].isNull() && m_contact_first_name_isValid;

    m_contact_last_name_isValid = ::OpenAPI::fromJsonValue(m_contact_last_name, json[QString("contactLastName")]);
    m_contact_last_name_isSet = !json[QString("contactLastName")].isNull() && m_contact_last_name_isValid;

    m_contact_phone_isValid = ::OpenAPI::fromJsonValue(m_contact_phone, json[QString("contactPhone")]);
    m_contact_phone_isSet = !json[QString("contactPhone")].isNull() && m_contact_phone_isValid;

    m_demo_account_name_isValid = ::OpenAPI::fromJsonValue(m_demo_account_name, json[QString("demoAccountName")]);
    m_demo_account_name_isSet = !json[QString("demoAccountName")].isNull() && m_demo_account_name_isValid;

    m_demo_account_password_isValid = ::OpenAPI::fromJsonValue(m_demo_account_password, json[QString("demoAccountPassword")]);
    m_demo_account_password_isSet = !json[QString("demoAccountPassword")].isNull() && m_demo_account_password_isValid;

    m_demo_account_required_isValid = ::OpenAPI::fromJsonValue(m_demo_account_required, json[QString("demoAccountRequired")]);
    m_demo_account_required_isSet = !json[QString("demoAccountRequired")].isNull() && m_demo_account_required_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;
}

QString OAIAppStoreReviewDetail_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppStoreReviewDetail_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_email_isSet) {
        obj.insert(QString("contactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_first_name_isSet) {
        obj.insert(QString("contactFirstName"), ::OpenAPI::toJsonValue(m_contact_first_name));
    }
    if (m_contact_last_name_isSet) {
        obj.insert(QString("contactLastName"), ::OpenAPI::toJsonValue(m_contact_last_name));
    }
    if (m_contact_phone_isSet) {
        obj.insert(QString("contactPhone"), ::OpenAPI::toJsonValue(m_contact_phone));
    }
    if (m_demo_account_name_isSet) {
        obj.insert(QString("demoAccountName"), ::OpenAPI::toJsonValue(m_demo_account_name));
    }
    if (m_demo_account_password_isSet) {
        obj.insert(QString("demoAccountPassword"), ::OpenAPI::toJsonValue(m_demo_account_password));
    }
    if (m_demo_account_required_isSet) {
        obj.insert(QString("demoAccountRequired"), ::OpenAPI::toJsonValue(m_demo_account_required));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    return obj;
}

QString OAIAppStoreReviewDetail_attributes::getContactEmail() const {
    return m_contact_email;
}
void OAIAppStoreReviewDetail_attributes::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAIAppStoreReviewDetail_attributes::getContactFirstName() const {
    return m_contact_first_name;
}
void OAIAppStoreReviewDetail_attributes::setContactFirstName(const QString &contact_first_name) {
    m_contact_first_name = contact_first_name;
    m_contact_first_name_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_first_name_Set() const{
    return m_contact_first_name_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_first_name_Valid() const{
    return m_contact_first_name_isValid;
}

QString OAIAppStoreReviewDetail_attributes::getContactLastName() const {
    return m_contact_last_name;
}
void OAIAppStoreReviewDetail_attributes::setContactLastName(const QString &contact_last_name) {
    m_contact_last_name = contact_last_name;
    m_contact_last_name_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_last_name_Set() const{
    return m_contact_last_name_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_last_name_Valid() const{
    return m_contact_last_name_isValid;
}

QString OAIAppStoreReviewDetail_attributes::getContactPhone() const {
    return m_contact_phone;
}
void OAIAppStoreReviewDetail_attributes::setContactPhone(const QString &contact_phone) {
    m_contact_phone = contact_phone;
    m_contact_phone_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_phone_Set() const{
    return m_contact_phone_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_contact_phone_Valid() const{
    return m_contact_phone_isValid;
}

QString OAIAppStoreReviewDetail_attributes::getDemoAccountName() const {
    return m_demo_account_name;
}
void OAIAppStoreReviewDetail_attributes::setDemoAccountName(const QString &demo_account_name) {
    m_demo_account_name = demo_account_name;
    m_demo_account_name_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_demo_account_name_Set() const{
    return m_demo_account_name_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_demo_account_name_Valid() const{
    return m_demo_account_name_isValid;
}

QString OAIAppStoreReviewDetail_attributes::getDemoAccountPassword() const {
    return m_demo_account_password;
}
void OAIAppStoreReviewDetail_attributes::setDemoAccountPassword(const QString &demo_account_password) {
    m_demo_account_password = demo_account_password;
    m_demo_account_password_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_demo_account_password_Set() const{
    return m_demo_account_password_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_demo_account_password_Valid() const{
    return m_demo_account_password_isValid;
}

bool OAIAppStoreReviewDetail_attributes::isDemoAccountRequired() const {
    return m_demo_account_required;
}
void OAIAppStoreReviewDetail_attributes::setDemoAccountRequired(const bool &demo_account_required) {
    m_demo_account_required = demo_account_required;
    m_demo_account_required_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_demo_account_required_Set() const{
    return m_demo_account_required_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_demo_account_required_Valid() const{
    return m_demo_account_required_isValid;
}

QString OAIAppStoreReviewDetail_attributes::getNotes() const {
    return m_notes;
}
void OAIAppStoreReviewDetail_attributes::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIAppStoreReviewDetail_attributes::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIAppStoreReviewDetail_attributes::is_notes_Valid() const{
    return m_notes_isValid;
}

bool OAIAppStoreReviewDetail_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demo_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demo_account_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demo_account_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppStoreReviewDetail_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
