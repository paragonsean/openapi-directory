/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIdfaDeclarationCreateRequest_data_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIdfaDeclarationCreateRequest_data_attributes::OAIIdfaDeclarationCreateRequest_data_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIdfaDeclarationCreateRequest_data_attributes::OAIIdfaDeclarationCreateRequest_data_attributes() {
    this->initializeModel();
}

OAIIdfaDeclarationCreateRequest_data_attributes::~OAIIdfaDeclarationCreateRequest_data_attributes() {}

void OAIIdfaDeclarationCreateRequest_data_attributes::initializeModel() {

    m_attributes_action_with_previous_ad_isSet = false;
    m_attributes_action_with_previous_ad_isValid = false;

    m_attributes_app_installation_to_previous_ad_isSet = false;
    m_attributes_app_installation_to_previous_ad_isValid = false;

    m_honors_limited_ad_tracking_isSet = false;
    m_honors_limited_ad_tracking_isValid = false;

    m_serves_ads_isSet = false;
    m_serves_ads_isValid = false;
}

void OAIIdfaDeclarationCreateRequest_data_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIdfaDeclarationCreateRequest_data_attributes::fromJsonObject(QJsonObject json) {

    m_attributes_action_with_previous_ad_isValid = ::OpenAPI::fromJsonValue(m_attributes_action_with_previous_ad, json[QString("attributesActionWithPreviousAd")]);
    m_attributes_action_with_previous_ad_isSet = !json[QString("attributesActionWithPreviousAd")].isNull() && m_attributes_action_with_previous_ad_isValid;

    m_attributes_app_installation_to_previous_ad_isValid = ::OpenAPI::fromJsonValue(m_attributes_app_installation_to_previous_ad, json[QString("attributesAppInstallationToPreviousAd")]);
    m_attributes_app_installation_to_previous_ad_isSet = !json[QString("attributesAppInstallationToPreviousAd")].isNull() && m_attributes_app_installation_to_previous_ad_isValid;

    m_honors_limited_ad_tracking_isValid = ::OpenAPI::fromJsonValue(m_honors_limited_ad_tracking, json[QString("honorsLimitedAdTracking")]);
    m_honors_limited_ad_tracking_isSet = !json[QString("honorsLimitedAdTracking")].isNull() && m_honors_limited_ad_tracking_isValid;

    m_serves_ads_isValid = ::OpenAPI::fromJsonValue(m_serves_ads, json[QString("servesAds")]);
    m_serves_ads_isSet = !json[QString("servesAds")].isNull() && m_serves_ads_isValid;
}

QString OAIIdfaDeclarationCreateRequest_data_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIdfaDeclarationCreateRequest_data_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes_action_with_previous_ad_isSet) {
        obj.insert(QString("attributesActionWithPreviousAd"), ::OpenAPI::toJsonValue(m_attributes_action_with_previous_ad));
    }
    if (m_attributes_app_installation_to_previous_ad_isSet) {
        obj.insert(QString("attributesAppInstallationToPreviousAd"), ::OpenAPI::toJsonValue(m_attributes_app_installation_to_previous_ad));
    }
    if (m_honors_limited_ad_tracking_isSet) {
        obj.insert(QString("honorsLimitedAdTracking"), ::OpenAPI::toJsonValue(m_honors_limited_ad_tracking));
    }
    if (m_serves_ads_isSet) {
        obj.insert(QString("servesAds"), ::OpenAPI::toJsonValue(m_serves_ads));
    }
    return obj;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::isAttributesActionWithPreviousAd() const {
    return m_attributes_action_with_previous_ad;
}
void OAIIdfaDeclarationCreateRequest_data_attributes::setAttributesActionWithPreviousAd(const bool &attributes_action_with_previous_ad) {
    m_attributes_action_with_previous_ad = attributes_action_with_previous_ad;
    m_attributes_action_with_previous_ad_isSet = true;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_attributes_action_with_previous_ad_Set() const{
    return m_attributes_action_with_previous_ad_isSet;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_attributes_action_with_previous_ad_Valid() const{
    return m_attributes_action_with_previous_ad_isValid;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::isAttributesAppInstallationToPreviousAd() const {
    return m_attributes_app_installation_to_previous_ad;
}
void OAIIdfaDeclarationCreateRequest_data_attributes::setAttributesAppInstallationToPreviousAd(const bool &attributes_app_installation_to_previous_ad) {
    m_attributes_app_installation_to_previous_ad = attributes_app_installation_to_previous_ad;
    m_attributes_app_installation_to_previous_ad_isSet = true;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_attributes_app_installation_to_previous_ad_Set() const{
    return m_attributes_app_installation_to_previous_ad_isSet;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_attributes_app_installation_to_previous_ad_Valid() const{
    return m_attributes_app_installation_to_previous_ad_isValid;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::isHonorsLimitedAdTracking() const {
    return m_honors_limited_ad_tracking;
}
void OAIIdfaDeclarationCreateRequest_data_attributes::setHonorsLimitedAdTracking(const bool &honors_limited_ad_tracking) {
    m_honors_limited_ad_tracking = honors_limited_ad_tracking;
    m_honors_limited_ad_tracking_isSet = true;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_honors_limited_ad_tracking_Set() const{
    return m_honors_limited_ad_tracking_isSet;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_honors_limited_ad_tracking_Valid() const{
    return m_honors_limited_ad_tracking_isValid;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::isServesAds() const {
    return m_serves_ads;
}
void OAIIdfaDeclarationCreateRequest_data_attributes::setServesAds(const bool &serves_ads) {
    m_serves_ads = serves_ads;
    m_serves_ads_isSet = true;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_serves_ads_Set() const{
    return m_serves_ads_isSet;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::is_serves_ads_Valid() const{
    return m_serves_ads_isValid;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes_action_with_previous_ad_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes_app_installation_to_previous_ad_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_honors_limited_ad_tracking_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serves_ads_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIdfaDeclarationCreateRequest_data_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attributes_action_with_previous_ad_isValid && m_attributes_app_installation_to_previous_ad_isValid && m_honors_limited_ad_tracking_isValid && m_serves_ads_isValid && true;
}

} // namespace OpenAPI
