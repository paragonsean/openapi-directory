/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AppEncryptionDeclarationRelationshipsApp;
import org.openapitools.client.model.AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail;
import org.openapitools.client.model.AppStoreVersionRelationshipsAgeRatingDeclaration;
import org.openapitools.client.model.AppStoreVersionRelationshipsAppStoreVersionLocalizations;
import org.openapitools.client.model.AppStoreVersionRelationshipsAppStoreVersionPhasedRelease;
import org.openapitools.client.model.AppStoreVersionRelationshipsAppStoreVersionSubmission;
import org.openapitools.client.model.AppStoreVersionRelationshipsBuild;
import org.openapitools.client.model.AppStoreVersionRelationshipsIdfaDeclaration;
import org.openapitools.client.model.AppStoreVersionRelationshipsRoutingAppCoverage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppStoreVersionRelationships
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppStoreVersionRelationships {
  public static final String SERIALIZED_NAME_AGE_RATING_DECLARATION = "ageRatingDeclaration";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_AGE_RATING_DECLARATION)
  private AppStoreVersionRelationshipsAgeRatingDeclaration ageRatingDeclaration;

  public static final String SERIALIZED_NAME_APP = "app";
  @SerializedName(SERIALIZED_NAME_APP)
  private AppEncryptionDeclarationRelationshipsApp app;

  public static final String SERIALIZED_NAME_APP_STORE_REVIEW_DETAIL = "appStoreReviewDetail";
  @SerializedName(SERIALIZED_NAME_APP_STORE_REVIEW_DETAIL)
  private AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail appStoreReviewDetail;

  public static final String SERIALIZED_NAME_APP_STORE_VERSION_LOCALIZATIONS = "appStoreVersionLocalizations";
  @SerializedName(SERIALIZED_NAME_APP_STORE_VERSION_LOCALIZATIONS)
  private AppStoreVersionRelationshipsAppStoreVersionLocalizations appStoreVersionLocalizations;

  public static final String SERIALIZED_NAME_APP_STORE_VERSION_PHASED_RELEASE = "appStoreVersionPhasedRelease";
  @SerializedName(SERIALIZED_NAME_APP_STORE_VERSION_PHASED_RELEASE)
  private AppStoreVersionRelationshipsAppStoreVersionPhasedRelease appStoreVersionPhasedRelease;

  public static final String SERIALIZED_NAME_APP_STORE_VERSION_SUBMISSION = "appStoreVersionSubmission";
  @SerializedName(SERIALIZED_NAME_APP_STORE_VERSION_SUBMISSION)
  private AppStoreVersionRelationshipsAppStoreVersionSubmission appStoreVersionSubmission;

  public static final String SERIALIZED_NAME_BUILD = "build";
  @SerializedName(SERIALIZED_NAME_BUILD)
  private AppStoreVersionRelationshipsBuild build;

  public static final String SERIALIZED_NAME_IDFA_DECLARATION = "idfaDeclaration";
  @SerializedName(SERIALIZED_NAME_IDFA_DECLARATION)
  private AppStoreVersionRelationshipsIdfaDeclaration idfaDeclaration;

  public static final String SERIALIZED_NAME_ROUTING_APP_COVERAGE = "routingAppCoverage";
  @SerializedName(SERIALIZED_NAME_ROUTING_APP_COVERAGE)
  private AppStoreVersionRelationshipsRoutingAppCoverage routingAppCoverage;

  public AppStoreVersionRelationships() {
  }

  @Deprecated
  public AppStoreVersionRelationships ageRatingDeclaration(AppStoreVersionRelationshipsAgeRatingDeclaration ageRatingDeclaration) {
    this.ageRatingDeclaration = ageRatingDeclaration;
    return this;
  }

  /**
   * Get ageRatingDeclaration
   * @return ageRatingDeclaration
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsAgeRatingDeclaration getAgeRatingDeclaration() {
    return ageRatingDeclaration;
  }

  @Deprecated
  public void setAgeRatingDeclaration(AppStoreVersionRelationshipsAgeRatingDeclaration ageRatingDeclaration) {
    this.ageRatingDeclaration = ageRatingDeclaration;
  }


  public AppStoreVersionRelationships app(AppEncryptionDeclarationRelationshipsApp app) {
    this.app = app;
    return this;
  }

  /**
   * Get app
   * @return app
   */
  @javax.annotation.Nullable
  public AppEncryptionDeclarationRelationshipsApp getApp() {
    return app;
  }

  public void setApp(AppEncryptionDeclarationRelationshipsApp app) {
    this.app = app;
  }


  public AppStoreVersionRelationships appStoreReviewDetail(AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail appStoreReviewDetail) {
    this.appStoreReviewDetail = appStoreReviewDetail;
    return this;
  }

  /**
   * Get appStoreReviewDetail
   * @return appStoreReviewDetail
   */
  @javax.annotation.Nullable
  public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail getAppStoreReviewDetail() {
    return appStoreReviewDetail;
  }

  public void setAppStoreReviewDetail(AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail appStoreReviewDetail) {
    this.appStoreReviewDetail = appStoreReviewDetail;
  }


  public AppStoreVersionRelationships appStoreVersionLocalizations(AppStoreVersionRelationshipsAppStoreVersionLocalizations appStoreVersionLocalizations) {
    this.appStoreVersionLocalizations = appStoreVersionLocalizations;
    return this;
  }

  /**
   * Get appStoreVersionLocalizations
   * @return appStoreVersionLocalizations
   */
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsAppStoreVersionLocalizations getAppStoreVersionLocalizations() {
    return appStoreVersionLocalizations;
  }

  public void setAppStoreVersionLocalizations(AppStoreVersionRelationshipsAppStoreVersionLocalizations appStoreVersionLocalizations) {
    this.appStoreVersionLocalizations = appStoreVersionLocalizations;
  }


  public AppStoreVersionRelationships appStoreVersionPhasedRelease(AppStoreVersionRelationshipsAppStoreVersionPhasedRelease appStoreVersionPhasedRelease) {
    this.appStoreVersionPhasedRelease = appStoreVersionPhasedRelease;
    return this;
  }

  /**
   * Get appStoreVersionPhasedRelease
   * @return appStoreVersionPhasedRelease
   */
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsAppStoreVersionPhasedRelease getAppStoreVersionPhasedRelease() {
    return appStoreVersionPhasedRelease;
  }

  public void setAppStoreVersionPhasedRelease(AppStoreVersionRelationshipsAppStoreVersionPhasedRelease appStoreVersionPhasedRelease) {
    this.appStoreVersionPhasedRelease = appStoreVersionPhasedRelease;
  }


  public AppStoreVersionRelationships appStoreVersionSubmission(AppStoreVersionRelationshipsAppStoreVersionSubmission appStoreVersionSubmission) {
    this.appStoreVersionSubmission = appStoreVersionSubmission;
    return this;
  }

  /**
   * Get appStoreVersionSubmission
   * @return appStoreVersionSubmission
   */
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsAppStoreVersionSubmission getAppStoreVersionSubmission() {
    return appStoreVersionSubmission;
  }

  public void setAppStoreVersionSubmission(AppStoreVersionRelationshipsAppStoreVersionSubmission appStoreVersionSubmission) {
    this.appStoreVersionSubmission = appStoreVersionSubmission;
  }


  public AppStoreVersionRelationships build(AppStoreVersionRelationshipsBuild build) {
    this.build = build;
    return this;
  }

  /**
   * Get build
   * @return build
   */
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsBuild getBuild() {
    return build;
  }

  public void setBuild(AppStoreVersionRelationshipsBuild build) {
    this.build = build;
  }


  public AppStoreVersionRelationships idfaDeclaration(AppStoreVersionRelationshipsIdfaDeclaration idfaDeclaration) {
    this.idfaDeclaration = idfaDeclaration;
    return this;
  }

  /**
   * Get idfaDeclaration
   * @return idfaDeclaration
   */
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsIdfaDeclaration getIdfaDeclaration() {
    return idfaDeclaration;
  }

  public void setIdfaDeclaration(AppStoreVersionRelationshipsIdfaDeclaration idfaDeclaration) {
    this.idfaDeclaration = idfaDeclaration;
  }


  public AppStoreVersionRelationships routingAppCoverage(AppStoreVersionRelationshipsRoutingAppCoverage routingAppCoverage) {
    this.routingAppCoverage = routingAppCoverage;
    return this;
  }

  /**
   * Get routingAppCoverage
   * @return routingAppCoverage
   */
  @javax.annotation.Nullable
  public AppStoreVersionRelationshipsRoutingAppCoverage getRoutingAppCoverage() {
    return routingAppCoverage;
  }

  public void setRoutingAppCoverage(AppStoreVersionRelationshipsRoutingAppCoverage routingAppCoverage) {
    this.routingAppCoverage = routingAppCoverage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppStoreVersionRelationships appStoreVersionRelationships = (AppStoreVersionRelationships) o;
    return Objects.equals(this.ageRatingDeclaration, appStoreVersionRelationships.ageRatingDeclaration) &&
        Objects.equals(this.app, appStoreVersionRelationships.app) &&
        Objects.equals(this.appStoreReviewDetail, appStoreVersionRelationships.appStoreReviewDetail) &&
        Objects.equals(this.appStoreVersionLocalizations, appStoreVersionRelationships.appStoreVersionLocalizations) &&
        Objects.equals(this.appStoreVersionPhasedRelease, appStoreVersionRelationships.appStoreVersionPhasedRelease) &&
        Objects.equals(this.appStoreVersionSubmission, appStoreVersionRelationships.appStoreVersionSubmission) &&
        Objects.equals(this.build, appStoreVersionRelationships.build) &&
        Objects.equals(this.idfaDeclaration, appStoreVersionRelationships.idfaDeclaration) &&
        Objects.equals(this.routingAppCoverage, appStoreVersionRelationships.routingAppCoverage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ageRatingDeclaration, app, appStoreReviewDetail, appStoreVersionLocalizations, appStoreVersionPhasedRelease, appStoreVersionSubmission, build, idfaDeclaration, routingAppCoverage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppStoreVersionRelationships {\n");
    sb.append("    ageRatingDeclaration: ").append(toIndentedString(ageRatingDeclaration)).append("\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    appStoreReviewDetail: ").append(toIndentedString(appStoreReviewDetail)).append("\n");
    sb.append("    appStoreVersionLocalizations: ").append(toIndentedString(appStoreVersionLocalizations)).append("\n");
    sb.append("    appStoreVersionPhasedRelease: ").append(toIndentedString(appStoreVersionPhasedRelease)).append("\n");
    sb.append("    appStoreVersionSubmission: ").append(toIndentedString(appStoreVersionSubmission)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    idfaDeclaration: ").append(toIndentedString(idfaDeclaration)).append("\n");
    sb.append("    routingAppCoverage: ").append(toIndentedString(routingAppCoverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ageRatingDeclaration");
    openapiFields.add("app");
    openapiFields.add("appStoreReviewDetail");
    openapiFields.add("appStoreVersionLocalizations");
    openapiFields.add("appStoreVersionPhasedRelease");
    openapiFields.add("appStoreVersionSubmission");
    openapiFields.add("build");
    openapiFields.add("idfaDeclaration");
    openapiFields.add("routingAppCoverage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppStoreVersionRelationships
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppStoreVersionRelationships.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppStoreVersionRelationships is not found in the empty JSON string", AppStoreVersionRelationships.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppStoreVersionRelationships.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppStoreVersionRelationships` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ageRatingDeclaration`
      if (jsonObj.get("ageRatingDeclaration") != null && !jsonObj.get("ageRatingDeclaration").isJsonNull()) {
        AppStoreVersionRelationshipsAgeRatingDeclaration.validateJsonElement(jsonObj.get("ageRatingDeclaration"));
      }
      // validate the optional field `app`
      if (jsonObj.get("app") != null && !jsonObj.get("app").isJsonNull()) {
        AppEncryptionDeclarationRelationshipsApp.validateJsonElement(jsonObj.get("app"));
      }
      // validate the optional field `appStoreReviewDetail`
      if (jsonObj.get("appStoreReviewDetail") != null && !jsonObj.get("appStoreReviewDetail").isJsonNull()) {
        AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail.validateJsonElement(jsonObj.get("appStoreReviewDetail"));
      }
      // validate the optional field `appStoreVersionLocalizations`
      if (jsonObj.get("appStoreVersionLocalizations") != null && !jsonObj.get("appStoreVersionLocalizations").isJsonNull()) {
        AppStoreVersionRelationshipsAppStoreVersionLocalizations.validateJsonElement(jsonObj.get("appStoreVersionLocalizations"));
      }
      // validate the optional field `appStoreVersionPhasedRelease`
      if (jsonObj.get("appStoreVersionPhasedRelease") != null && !jsonObj.get("appStoreVersionPhasedRelease").isJsonNull()) {
        AppStoreVersionRelationshipsAppStoreVersionPhasedRelease.validateJsonElement(jsonObj.get("appStoreVersionPhasedRelease"));
      }
      // validate the optional field `appStoreVersionSubmission`
      if (jsonObj.get("appStoreVersionSubmission") != null && !jsonObj.get("appStoreVersionSubmission").isJsonNull()) {
        AppStoreVersionRelationshipsAppStoreVersionSubmission.validateJsonElement(jsonObj.get("appStoreVersionSubmission"));
      }
      // validate the optional field `build`
      if (jsonObj.get("build") != null && !jsonObj.get("build").isJsonNull()) {
        AppStoreVersionRelationshipsBuild.validateJsonElement(jsonObj.get("build"));
      }
      // validate the optional field `idfaDeclaration`
      if (jsonObj.get("idfaDeclaration") != null && !jsonObj.get("idfaDeclaration").isJsonNull()) {
        AppStoreVersionRelationshipsIdfaDeclaration.validateJsonElement(jsonObj.get("idfaDeclaration"));
      }
      // validate the optional field `routingAppCoverage`
      if (jsonObj.get("routingAppCoverage") != null && !jsonObj.get("routingAppCoverage").isJsonNull()) {
        AppStoreVersionRelationshipsRoutingAppCoverage.validateJsonElement(jsonObj.get("routingAppCoverage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppStoreVersionRelationships.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppStoreVersionRelationships' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppStoreVersionRelationships> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppStoreVersionRelationships.class));

       return (TypeAdapter<T>) new TypeAdapter<AppStoreVersionRelationships>() {
           @Override
           public void write(JsonWriter out, AppStoreVersionRelationships value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppStoreVersionRelationships read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppStoreVersionRelationships given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppStoreVersionRelationships
   * @throws IOException if the JSON string is invalid with respect to AppStoreVersionRelationships
   */
  public static AppStoreVersionRelationships fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppStoreVersionRelationships.class);
  }

  /**
   * Convert an instance of AppStoreVersionRelationships to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

