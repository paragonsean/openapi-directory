/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AppEncryptionDeclarationRelationshipsApp;
import org.openapitools.client.model.AppStoreReviewDetailRelationshipsAppStoreVersion;
import org.openapitools.client.model.BetaGroupRelationshipsBetaTesters;
import org.openapitools.client.model.BuildRelationshipsAppEncryptionDeclaration;
import org.openapitools.client.model.BuildRelationshipsBetaAppReviewSubmission;
import org.openapitools.client.model.BuildRelationshipsBetaBuildLocalizations;
import org.openapitools.client.model.BuildRelationshipsBuildBetaDetail;
import org.openapitools.client.model.BuildRelationshipsIcons;
import org.openapitools.client.model.BuildRelationshipsPreReleaseVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BuildRelationships
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BuildRelationships {
  public static final String SERIALIZED_NAME_APP = "app";
  @SerializedName(SERIALIZED_NAME_APP)
  private AppEncryptionDeclarationRelationshipsApp app;

  public static final String SERIALIZED_NAME_APP_ENCRYPTION_DECLARATION = "appEncryptionDeclaration";
  @SerializedName(SERIALIZED_NAME_APP_ENCRYPTION_DECLARATION)
  private BuildRelationshipsAppEncryptionDeclaration appEncryptionDeclaration;

  public static final String SERIALIZED_NAME_APP_STORE_VERSION = "appStoreVersion";
  @SerializedName(SERIALIZED_NAME_APP_STORE_VERSION)
  private AppStoreReviewDetailRelationshipsAppStoreVersion appStoreVersion;

  public static final String SERIALIZED_NAME_BETA_APP_REVIEW_SUBMISSION = "betaAppReviewSubmission";
  @SerializedName(SERIALIZED_NAME_BETA_APP_REVIEW_SUBMISSION)
  private BuildRelationshipsBetaAppReviewSubmission betaAppReviewSubmission;

  public static final String SERIALIZED_NAME_BETA_BUILD_LOCALIZATIONS = "betaBuildLocalizations";
  @SerializedName(SERIALIZED_NAME_BETA_BUILD_LOCALIZATIONS)
  private BuildRelationshipsBetaBuildLocalizations betaBuildLocalizations;

  public static final String SERIALIZED_NAME_BUILD_BETA_DETAIL = "buildBetaDetail";
  @SerializedName(SERIALIZED_NAME_BUILD_BETA_DETAIL)
  private BuildRelationshipsBuildBetaDetail buildBetaDetail;

  public static final String SERIALIZED_NAME_ICONS = "icons";
  @SerializedName(SERIALIZED_NAME_ICONS)
  private BuildRelationshipsIcons icons;

  public static final String SERIALIZED_NAME_INDIVIDUAL_TESTERS = "individualTesters";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_TESTERS)
  private BetaGroupRelationshipsBetaTesters individualTesters;

  public static final String SERIALIZED_NAME_PRE_RELEASE_VERSION = "preReleaseVersion";
  @SerializedName(SERIALIZED_NAME_PRE_RELEASE_VERSION)
  private BuildRelationshipsPreReleaseVersion preReleaseVersion;

  public BuildRelationships() {
  }

  public BuildRelationships app(AppEncryptionDeclarationRelationshipsApp app) {
    this.app = app;
    return this;
  }

  /**
   * Get app
   * @return app
   */
  @javax.annotation.Nullable
  public AppEncryptionDeclarationRelationshipsApp getApp() {
    return app;
  }

  public void setApp(AppEncryptionDeclarationRelationshipsApp app) {
    this.app = app;
  }


  public BuildRelationships appEncryptionDeclaration(BuildRelationshipsAppEncryptionDeclaration appEncryptionDeclaration) {
    this.appEncryptionDeclaration = appEncryptionDeclaration;
    return this;
  }

  /**
   * Get appEncryptionDeclaration
   * @return appEncryptionDeclaration
   */
  @javax.annotation.Nullable
  public BuildRelationshipsAppEncryptionDeclaration getAppEncryptionDeclaration() {
    return appEncryptionDeclaration;
  }

  public void setAppEncryptionDeclaration(BuildRelationshipsAppEncryptionDeclaration appEncryptionDeclaration) {
    this.appEncryptionDeclaration = appEncryptionDeclaration;
  }


  public BuildRelationships appStoreVersion(AppStoreReviewDetailRelationshipsAppStoreVersion appStoreVersion) {
    this.appStoreVersion = appStoreVersion;
    return this;
  }

  /**
   * Get appStoreVersion
   * @return appStoreVersion
   */
  @javax.annotation.Nullable
  public AppStoreReviewDetailRelationshipsAppStoreVersion getAppStoreVersion() {
    return appStoreVersion;
  }

  public void setAppStoreVersion(AppStoreReviewDetailRelationshipsAppStoreVersion appStoreVersion) {
    this.appStoreVersion = appStoreVersion;
  }


  public BuildRelationships betaAppReviewSubmission(BuildRelationshipsBetaAppReviewSubmission betaAppReviewSubmission) {
    this.betaAppReviewSubmission = betaAppReviewSubmission;
    return this;
  }

  /**
   * Get betaAppReviewSubmission
   * @return betaAppReviewSubmission
   */
  @javax.annotation.Nullable
  public BuildRelationshipsBetaAppReviewSubmission getBetaAppReviewSubmission() {
    return betaAppReviewSubmission;
  }

  public void setBetaAppReviewSubmission(BuildRelationshipsBetaAppReviewSubmission betaAppReviewSubmission) {
    this.betaAppReviewSubmission = betaAppReviewSubmission;
  }


  public BuildRelationships betaBuildLocalizations(BuildRelationshipsBetaBuildLocalizations betaBuildLocalizations) {
    this.betaBuildLocalizations = betaBuildLocalizations;
    return this;
  }

  /**
   * Get betaBuildLocalizations
   * @return betaBuildLocalizations
   */
  @javax.annotation.Nullable
  public BuildRelationshipsBetaBuildLocalizations getBetaBuildLocalizations() {
    return betaBuildLocalizations;
  }

  public void setBetaBuildLocalizations(BuildRelationshipsBetaBuildLocalizations betaBuildLocalizations) {
    this.betaBuildLocalizations = betaBuildLocalizations;
  }


  public BuildRelationships buildBetaDetail(BuildRelationshipsBuildBetaDetail buildBetaDetail) {
    this.buildBetaDetail = buildBetaDetail;
    return this;
  }

  /**
   * Get buildBetaDetail
   * @return buildBetaDetail
   */
  @javax.annotation.Nullable
  public BuildRelationshipsBuildBetaDetail getBuildBetaDetail() {
    return buildBetaDetail;
  }

  public void setBuildBetaDetail(BuildRelationshipsBuildBetaDetail buildBetaDetail) {
    this.buildBetaDetail = buildBetaDetail;
  }


  public BuildRelationships icons(BuildRelationshipsIcons icons) {
    this.icons = icons;
    return this;
  }

  /**
   * Get icons
   * @return icons
   */
  @javax.annotation.Nullable
  public BuildRelationshipsIcons getIcons() {
    return icons;
  }

  public void setIcons(BuildRelationshipsIcons icons) {
    this.icons = icons;
  }


  public BuildRelationships individualTesters(BetaGroupRelationshipsBetaTesters individualTesters) {
    this.individualTesters = individualTesters;
    return this;
  }

  /**
   * Get individualTesters
   * @return individualTesters
   */
  @javax.annotation.Nullable
  public BetaGroupRelationshipsBetaTesters getIndividualTesters() {
    return individualTesters;
  }

  public void setIndividualTesters(BetaGroupRelationshipsBetaTesters individualTesters) {
    this.individualTesters = individualTesters;
  }


  public BuildRelationships preReleaseVersion(BuildRelationshipsPreReleaseVersion preReleaseVersion) {
    this.preReleaseVersion = preReleaseVersion;
    return this;
  }

  /**
   * Get preReleaseVersion
   * @return preReleaseVersion
   */
  @javax.annotation.Nullable
  public BuildRelationshipsPreReleaseVersion getPreReleaseVersion() {
    return preReleaseVersion;
  }

  public void setPreReleaseVersion(BuildRelationshipsPreReleaseVersion preReleaseVersion) {
    this.preReleaseVersion = preReleaseVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildRelationships buildRelationships = (BuildRelationships) o;
    return Objects.equals(this.app, buildRelationships.app) &&
        Objects.equals(this.appEncryptionDeclaration, buildRelationships.appEncryptionDeclaration) &&
        Objects.equals(this.appStoreVersion, buildRelationships.appStoreVersion) &&
        Objects.equals(this.betaAppReviewSubmission, buildRelationships.betaAppReviewSubmission) &&
        Objects.equals(this.betaBuildLocalizations, buildRelationships.betaBuildLocalizations) &&
        Objects.equals(this.buildBetaDetail, buildRelationships.buildBetaDetail) &&
        Objects.equals(this.icons, buildRelationships.icons) &&
        Objects.equals(this.individualTesters, buildRelationships.individualTesters) &&
        Objects.equals(this.preReleaseVersion, buildRelationships.preReleaseVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(app, appEncryptionDeclaration, appStoreVersion, betaAppReviewSubmission, betaBuildLocalizations, buildBetaDetail, icons, individualTesters, preReleaseVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildRelationships {\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    appEncryptionDeclaration: ").append(toIndentedString(appEncryptionDeclaration)).append("\n");
    sb.append("    appStoreVersion: ").append(toIndentedString(appStoreVersion)).append("\n");
    sb.append("    betaAppReviewSubmission: ").append(toIndentedString(betaAppReviewSubmission)).append("\n");
    sb.append("    betaBuildLocalizations: ").append(toIndentedString(betaBuildLocalizations)).append("\n");
    sb.append("    buildBetaDetail: ").append(toIndentedString(buildBetaDetail)).append("\n");
    sb.append("    icons: ").append(toIndentedString(icons)).append("\n");
    sb.append("    individualTesters: ").append(toIndentedString(individualTesters)).append("\n");
    sb.append("    preReleaseVersion: ").append(toIndentedString(preReleaseVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app");
    openapiFields.add("appEncryptionDeclaration");
    openapiFields.add("appStoreVersion");
    openapiFields.add("betaAppReviewSubmission");
    openapiFields.add("betaBuildLocalizations");
    openapiFields.add("buildBetaDetail");
    openapiFields.add("icons");
    openapiFields.add("individualTesters");
    openapiFields.add("preReleaseVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BuildRelationships
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BuildRelationships.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BuildRelationships is not found in the empty JSON string", BuildRelationships.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BuildRelationships.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BuildRelationships` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `app`
      if (jsonObj.get("app") != null && !jsonObj.get("app").isJsonNull()) {
        AppEncryptionDeclarationRelationshipsApp.validateJsonElement(jsonObj.get("app"));
      }
      // validate the optional field `appEncryptionDeclaration`
      if (jsonObj.get("appEncryptionDeclaration") != null && !jsonObj.get("appEncryptionDeclaration").isJsonNull()) {
        BuildRelationshipsAppEncryptionDeclaration.validateJsonElement(jsonObj.get("appEncryptionDeclaration"));
      }
      // validate the optional field `appStoreVersion`
      if (jsonObj.get("appStoreVersion") != null && !jsonObj.get("appStoreVersion").isJsonNull()) {
        AppStoreReviewDetailRelationshipsAppStoreVersion.validateJsonElement(jsonObj.get("appStoreVersion"));
      }
      // validate the optional field `betaAppReviewSubmission`
      if (jsonObj.get("betaAppReviewSubmission") != null && !jsonObj.get("betaAppReviewSubmission").isJsonNull()) {
        BuildRelationshipsBetaAppReviewSubmission.validateJsonElement(jsonObj.get("betaAppReviewSubmission"));
      }
      // validate the optional field `betaBuildLocalizations`
      if (jsonObj.get("betaBuildLocalizations") != null && !jsonObj.get("betaBuildLocalizations").isJsonNull()) {
        BuildRelationshipsBetaBuildLocalizations.validateJsonElement(jsonObj.get("betaBuildLocalizations"));
      }
      // validate the optional field `buildBetaDetail`
      if (jsonObj.get("buildBetaDetail") != null && !jsonObj.get("buildBetaDetail").isJsonNull()) {
        BuildRelationshipsBuildBetaDetail.validateJsonElement(jsonObj.get("buildBetaDetail"));
      }
      // validate the optional field `icons`
      if (jsonObj.get("icons") != null && !jsonObj.get("icons").isJsonNull()) {
        BuildRelationshipsIcons.validateJsonElement(jsonObj.get("icons"));
      }
      // validate the optional field `individualTesters`
      if (jsonObj.get("individualTesters") != null && !jsonObj.get("individualTesters").isJsonNull()) {
        BetaGroupRelationshipsBetaTesters.validateJsonElement(jsonObj.get("individualTesters"));
      }
      // validate the optional field `preReleaseVersion`
      if (jsonObj.get("preReleaseVersion") != null && !jsonObj.get("preReleaseVersion").isJsonNull()) {
        BuildRelationshipsPreReleaseVersion.validateJsonElement(jsonObj.get("preReleaseVersion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BuildRelationships.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BuildRelationships' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BuildRelationships> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BuildRelationships.class));

       return (TypeAdapter<T>) new TypeAdapter<BuildRelationships>() {
           @Override
           public void write(JsonWriter out, BuildRelationships value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BuildRelationships read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BuildRelationships given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BuildRelationships
   * @throws IOException if the JSON string is invalid with respect to BuildRelationships
   */
  public static BuildRelationships fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BuildRelationships.class);
  }

  /**
   * Convert an instance of BuildRelationships to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

