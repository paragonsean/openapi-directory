/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BetaAppLocalizationCreateRequestDataAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BetaAppLocalizationCreateRequestDataAttributes {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FEEDBACK_EMAIL = "feedbackEmail";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_EMAIL)
  private String feedbackEmail;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_MARKETING_URL = "marketingUrl";
  @SerializedName(SERIALIZED_NAME_MARKETING_URL)
  private String marketingUrl;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_URL = "privacyPolicyUrl";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_URL)
  private String privacyPolicyUrl;

  public static final String SERIALIZED_NAME_TV_OS_PRIVACY_POLICY = "tvOsPrivacyPolicy";
  @SerializedName(SERIALIZED_NAME_TV_OS_PRIVACY_POLICY)
  private String tvOsPrivacyPolicy;

  public BetaAppLocalizationCreateRequestDataAttributes() {
  }

  public BetaAppLocalizationCreateRequestDataAttributes description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public BetaAppLocalizationCreateRequestDataAttributes feedbackEmail(String feedbackEmail) {
    this.feedbackEmail = feedbackEmail;
    return this;
  }

  /**
   * Get feedbackEmail
   * @return feedbackEmail
   */
  @javax.annotation.Nullable
  public String getFeedbackEmail() {
    return feedbackEmail;
  }

  public void setFeedbackEmail(String feedbackEmail) {
    this.feedbackEmail = feedbackEmail;
  }


  public BetaAppLocalizationCreateRequestDataAttributes locale(String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Get locale
   * @return locale
   */
  @javax.annotation.Nonnull
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  public BetaAppLocalizationCreateRequestDataAttributes marketingUrl(String marketingUrl) {
    this.marketingUrl = marketingUrl;
    return this;
  }

  /**
   * Get marketingUrl
   * @return marketingUrl
   */
  @javax.annotation.Nullable
  public String getMarketingUrl() {
    return marketingUrl;
  }

  public void setMarketingUrl(String marketingUrl) {
    this.marketingUrl = marketingUrl;
  }


  public BetaAppLocalizationCreateRequestDataAttributes privacyPolicyUrl(String privacyPolicyUrl) {
    this.privacyPolicyUrl = privacyPolicyUrl;
    return this;
  }

  /**
   * Get privacyPolicyUrl
   * @return privacyPolicyUrl
   */
  @javax.annotation.Nullable
  public String getPrivacyPolicyUrl() {
    return privacyPolicyUrl;
  }

  public void setPrivacyPolicyUrl(String privacyPolicyUrl) {
    this.privacyPolicyUrl = privacyPolicyUrl;
  }


  public BetaAppLocalizationCreateRequestDataAttributes tvOsPrivacyPolicy(String tvOsPrivacyPolicy) {
    this.tvOsPrivacyPolicy = tvOsPrivacyPolicy;
    return this;
  }

  /**
   * Get tvOsPrivacyPolicy
   * @return tvOsPrivacyPolicy
   */
  @javax.annotation.Nullable
  public String getTvOsPrivacyPolicy() {
    return tvOsPrivacyPolicy;
  }

  public void setTvOsPrivacyPolicy(String tvOsPrivacyPolicy) {
    this.tvOsPrivacyPolicy = tvOsPrivacyPolicy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BetaAppLocalizationCreateRequestDataAttributes betaAppLocalizationCreateRequestDataAttributes = (BetaAppLocalizationCreateRequestDataAttributes) o;
    return Objects.equals(this.description, betaAppLocalizationCreateRequestDataAttributes.description) &&
        Objects.equals(this.feedbackEmail, betaAppLocalizationCreateRequestDataAttributes.feedbackEmail) &&
        Objects.equals(this.locale, betaAppLocalizationCreateRequestDataAttributes.locale) &&
        Objects.equals(this.marketingUrl, betaAppLocalizationCreateRequestDataAttributes.marketingUrl) &&
        Objects.equals(this.privacyPolicyUrl, betaAppLocalizationCreateRequestDataAttributes.privacyPolicyUrl) &&
        Objects.equals(this.tvOsPrivacyPolicy, betaAppLocalizationCreateRequestDataAttributes.tvOsPrivacyPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, feedbackEmail, locale, marketingUrl, privacyPolicyUrl, tvOsPrivacyPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BetaAppLocalizationCreateRequestDataAttributes {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    feedbackEmail: ").append(toIndentedString(feedbackEmail)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    marketingUrl: ").append(toIndentedString(marketingUrl)).append("\n");
    sb.append("    privacyPolicyUrl: ").append(toIndentedString(privacyPolicyUrl)).append("\n");
    sb.append("    tvOsPrivacyPolicy: ").append(toIndentedString(tvOsPrivacyPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("feedbackEmail");
    openapiFields.add("locale");
    openapiFields.add("marketingUrl");
    openapiFields.add("privacyPolicyUrl");
    openapiFields.add("tvOsPrivacyPolicy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("locale");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BetaAppLocalizationCreateRequestDataAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BetaAppLocalizationCreateRequestDataAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BetaAppLocalizationCreateRequestDataAttributes is not found in the empty JSON string", BetaAppLocalizationCreateRequestDataAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BetaAppLocalizationCreateRequestDataAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BetaAppLocalizationCreateRequestDataAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BetaAppLocalizationCreateRequestDataAttributes.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("feedbackEmail") != null && !jsonObj.get("feedbackEmail").isJsonNull()) && !jsonObj.get("feedbackEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedbackEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedbackEmail").toString()));
      }
      if (!jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if ((jsonObj.get("marketingUrl") != null && !jsonObj.get("marketingUrl").isJsonNull()) && !jsonObj.get("marketingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketingUrl").toString()));
      }
      if ((jsonObj.get("privacyPolicyUrl") != null && !jsonObj.get("privacyPolicyUrl").isJsonNull()) && !jsonObj.get("privacyPolicyUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacyPolicyUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacyPolicyUrl").toString()));
      }
      if ((jsonObj.get("tvOsPrivacyPolicy") != null && !jsonObj.get("tvOsPrivacyPolicy").isJsonNull()) && !jsonObj.get("tvOsPrivacyPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tvOsPrivacyPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tvOsPrivacyPolicy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BetaAppLocalizationCreateRequestDataAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BetaAppLocalizationCreateRequestDataAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BetaAppLocalizationCreateRequestDataAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BetaAppLocalizationCreateRequestDataAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<BetaAppLocalizationCreateRequestDataAttributes>() {
           @Override
           public void write(JsonWriter out, BetaAppLocalizationCreateRequestDataAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BetaAppLocalizationCreateRequestDataAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BetaAppLocalizationCreateRequestDataAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BetaAppLocalizationCreateRequestDataAttributes
   * @throws IOException if the JSON string is invalid with respect to BetaAppLocalizationCreateRequestDataAttributes
   */
  public static BetaAppLocalizationCreateRequestDataAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BetaAppLocalizationCreateRequestDataAttributes.class);
  }

  /**
   * Convert an instance of BetaAppLocalizationCreateRequestDataAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

