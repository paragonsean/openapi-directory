/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BetaGroupUpdateRequestDataAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BetaGroupUpdateRequestDataAttributes {
  public static final String SERIALIZED_NAME_FEEDBACK_ENABLED = "feedbackEnabled";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_ENABLED)
  private Boolean feedbackEnabled;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PUBLIC_LINK_ENABLED = "publicLinkEnabled";
  @SerializedName(SERIALIZED_NAME_PUBLIC_LINK_ENABLED)
  private Boolean publicLinkEnabled;

  public static final String SERIALIZED_NAME_PUBLIC_LINK_LIMIT = "publicLinkLimit";
  @SerializedName(SERIALIZED_NAME_PUBLIC_LINK_LIMIT)
  private Integer publicLinkLimit;

  public static final String SERIALIZED_NAME_PUBLIC_LINK_LIMIT_ENABLED = "publicLinkLimitEnabled";
  @SerializedName(SERIALIZED_NAME_PUBLIC_LINK_LIMIT_ENABLED)
  private Boolean publicLinkLimitEnabled;

  public BetaGroupUpdateRequestDataAttributes() {
  }

  public BetaGroupUpdateRequestDataAttributes feedbackEnabled(Boolean feedbackEnabled) {
    this.feedbackEnabled = feedbackEnabled;
    return this;
  }

  /**
   * Get feedbackEnabled
   * @return feedbackEnabled
   */
  @javax.annotation.Nullable
  public Boolean getFeedbackEnabled() {
    return feedbackEnabled;
  }

  public void setFeedbackEnabled(Boolean feedbackEnabled) {
    this.feedbackEnabled = feedbackEnabled;
  }


  public BetaGroupUpdateRequestDataAttributes name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public BetaGroupUpdateRequestDataAttributes publicLinkEnabled(Boolean publicLinkEnabled) {
    this.publicLinkEnabled = publicLinkEnabled;
    return this;
  }

  /**
   * Get publicLinkEnabled
   * @return publicLinkEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPublicLinkEnabled() {
    return publicLinkEnabled;
  }

  public void setPublicLinkEnabled(Boolean publicLinkEnabled) {
    this.publicLinkEnabled = publicLinkEnabled;
  }


  public BetaGroupUpdateRequestDataAttributes publicLinkLimit(Integer publicLinkLimit) {
    this.publicLinkLimit = publicLinkLimit;
    return this;
  }

  /**
   * Get publicLinkLimit
   * @return publicLinkLimit
   */
  @javax.annotation.Nullable
  public Integer getPublicLinkLimit() {
    return publicLinkLimit;
  }

  public void setPublicLinkLimit(Integer publicLinkLimit) {
    this.publicLinkLimit = publicLinkLimit;
  }


  public BetaGroupUpdateRequestDataAttributes publicLinkLimitEnabled(Boolean publicLinkLimitEnabled) {
    this.publicLinkLimitEnabled = publicLinkLimitEnabled;
    return this;
  }

  /**
   * Get publicLinkLimitEnabled
   * @return publicLinkLimitEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPublicLinkLimitEnabled() {
    return publicLinkLimitEnabled;
  }

  public void setPublicLinkLimitEnabled(Boolean publicLinkLimitEnabled) {
    this.publicLinkLimitEnabled = publicLinkLimitEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BetaGroupUpdateRequestDataAttributes betaGroupUpdateRequestDataAttributes = (BetaGroupUpdateRequestDataAttributes) o;
    return Objects.equals(this.feedbackEnabled, betaGroupUpdateRequestDataAttributes.feedbackEnabled) &&
        Objects.equals(this.name, betaGroupUpdateRequestDataAttributes.name) &&
        Objects.equals(this.publicLinkEnabled, betaGroupUpdateRequestDataAttributes.publicLinkEnabled) &&
        Objects.equals(this.publicLinkLimit, betaGroupUpdateRequestDataAttributes.publicLinkLimit) &&
        Objects.equals(this.publicLinkLimitEnabled, betaGroupUpdateRequestDataAttributes.publicLinkLimitEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedbackEnabled, name, publicLinkEnabled, publicLinkLimit, publicLinkLimitEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BetaGroupUpdateRequestDataAttributes {\n");
    sb.append("    feedbackEnabled: ").append(toIndentedString(feedbackEnabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    publicLinkEnabled: ").append(toIndentedString(publicLinkEnabled)).append("\n");
    sb.append("    publicLinkLimit: ").append(toIndentedString(publicLinkLimit)).append("\n");
    sb.append("    publicLinkLimitEnabled: ").append(toIndentedString(publicLinkLimitEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("feedbackEnabled");
    openapiFields.add("name");
    openapiFields.add("publicLinkEnabled");
    openapiFields.add("publicLinkLimit");
    openapiFields.add("publicLinkLimitEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BetaGroupUpdateRequestDataAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BetaGroupUpdateRequestDataAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BetaGroupUpdateRequestDataAttributes is not found in the empty JSON string", BetaGroupUpdateRequestDataAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BetaGroupUpdateRequestDataAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BetaGroupUpdateRequestDataAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BetaGroupUpdateRequestDataAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BetaGroupUpdateRequestDataAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BetaGroupUpdateRequestDataAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BetaGroupUpdateRequestDataAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<BetaGroupUpdateRequestDataAttributes>() {
           @Override
           public void write(JsonWriter out, BetaGroupUpdateRequestDataAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BetaGroupUpdateRequestDataAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BetaGroupUpdateRequestDataAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BetaGroupUpdateRequestDataAttributes
   * @throws IOException if the JSON string is invalid with respect to BetaGroupUpdateRequestDataAttributes
   */
  public static BetaGroupUpdateRequestDataAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BetaGroupUpdateRequestDataAttributes.class);
  }

  /**
   * Convert an instance of BetaGroupUpdateRequestDataAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

