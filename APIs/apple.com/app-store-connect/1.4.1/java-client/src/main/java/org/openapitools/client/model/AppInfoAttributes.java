/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AppStoreAgeRating;
import org.openapitools.client.model.AppStoreVersionState;
import org.openapitools.client.model.BrazilAgeRating;
import org.openapitools.client.model.KidsAgeBand;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppInfoAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppInfoAttributes {
  public static final String SERIALIZED_NAME_APP_STORE_AGE_RATING = "appStoreAgeRating";
  @SerializedName(SERIALIZED_NAME_APP_STORE_AGE_RATING)
  private AppStoreAgeRating appStoreAgeRating;

  public static final String SERIALIZED_NAME_APP_STORE_STATE = "appStoreState";
  @SerializedName(SERIALIZED_NAME_APP_STORE_STATE)
  private AppStoreVersionState appStoreState;

  public static final String SERIALIZED_NAME_BRAZIL_AGE_RATING = "brazilAgeRating";
  @SerializedName(SERIALIZED_NAME_BRAZIL_AGE_RATING)
  private BrazilAgeRating brazilAgeRating;

  public static final String SERIALIZED_NAME_KIDS_AGE_BAND = "kidsAgeBand";
  @SerializedName(SERIALIZED_NAME_KIDS_AGE_BAND)
  private KidsAgeBand kidsAgeBand;

  public AppInfoAttributes() {
  }

  public AppInfoAttributes appStoreAgeRating(AppStoreAgeRating appStoreAgeRating) {
    this.appStoreAgeRating = appStoreAgeRating;
    return this;
  }

  /**
   * Get appStoreAgeRating
   * @return appStoreAgeRating
   */
  @javax.annotation.Nullable
  public AppStoreAgeRating getAppStoreAgeRating() {
    return appStoreAgeRating;
  }

  public void setAppStoreAgeRating(AppStoreAgeRating appStoreAgeRating) {
    this.appStoreAgeRating = appStoreAgeRating;
  }


  public AppInfoAttributes appStoreState(AppStoreVersionState appStoreState) {
    this.appStoreState = appStoreState;
    return this;
  }

  /**
   * Get appStoreState
   * @return appStoreState
   */
  @javax.annotation.Nullable
  public AppStoreVersionState getAppStoreState() {
    return appStoreState;
  }

  public void setAppStoreState(AppStoreVersionState appStoreState) {
    this.appStoreState = appStoreState;
  }


  public AppInfoAttributes brazilAgeRating(BrazilAgeRating brazilAgeRating) {
    this.brazilAgeRating = brazilAgeRating;
    return this;
  }

  /**
   * Get brazilAgeRating
   * @return brazilAgeRating
   */
  @javax.annotation.Nullable
  public BrazilAgeRating getBrazilAgeRating() {
    return brazilAgeRating;
  }

  public void setBrazilAgeRating(BrazilAgeRating brazilAgeRating) {
    this.brazilAgeRating = brazilAgeRating;
  }


  public AppInfoAttributes kidsAgeBand(KidsAgeBand kidsAgeBand) {
    this.kidsAgeBand = kidsAgeBand;
    return this;
  }

  /**
   * Get kidsAgeBand
   * @return kidsAgeBand
   */
  @javax.annotation.Nullable
  public KidsAgeBand getKidsAgeBand() {
    return kidsAgeBand;
  }

  public void setKidsAgeBand(KidsAgeBand kidsAgeBand) {
    this.kidsAgeBand = kidsAgeBand;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppInfoAttributes appInfoAttributes = (AppInfoAttributes) o;
    return Objects.equals(this.appStoreAgeRating, appInfoAttributes.appStoreAgeRating) &&
        Objects.equals(this.appStoreState, appInfoAttributes.appStoreState) &&
        Objects.equals(this.brazilAgeRating, appInfoAttributes.brazilAgeRating) &&
        Objects.equals(this.kidsAgeBand, appInfoAttributes.kidsAgeBand);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appStoreAgeRating, appStoreState, brazilAgeRating, kidsAgeBand);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppInfoAttributes {\n");
    sb.append("    appStoreAgeRating: ").append(toIndentedString(appStoreAgeRating)).append("\n");
    sb.append("    appStoreState: ").append(toIndentedString(appStoreState)).append("\n");
    sb.append("    brazilAgeRating: ").append(toIndentedString(brazilAgeRating)).append("\n");
    sb.append("    kidsAgeBand: ").append(toIndentedString(kidsAgeBand)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appStoreAgeRating");
    openapiFields.add("appStoreState");
    openapiFields.add("brazilAgeRating");
    openapiFields.add("kidsAgeBand");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppInfoAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppInfoAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppInfoAttributes is not found in the empty JSON string", AppInfoAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppInfoAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppInfoAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appStoreAgeRating`
      if (jsonObj.get("appStoreAgeRating") != null && !jsonObj.get("appStoreAgeRating").isJsonNull()) {
        AppStoreAgeRating.validateJsonElement(jsonObj.get("appStoreAgeRating"));
      }
      // validate the optional field `appStoreState`
      if (jsonObj.get("appStoreState") != null && !jsonObj.get("appStoreState").isJsonNull()) {
        AppStoreVersionState.validateJsonElement(jsonObj.get("appStoreState"));
      }
      // validate the optional field `brazilAgeRating`
      if (jsonObj.get("brazilAgeRating") != null && !jsonObj.get("brazilAgeRating").isJsonNull()) {
        BrazilAgeRating.validateJsonElement(jsonObj.get("brazilAgeRating"));
      }
      // validate the optional field `kidsAgeBand`
      if (jsonObj.get("kidsAgeBand") != null && !jsonObj.get("kidsAgeBand").isJsonNull()) {
        KidsAgeBand.validateJsonElement(jsonObj.get("kidsAgeBand"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppInfoAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppInfoAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppInfoAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppInfoAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<AppInfoAttributes>() {
           @Override
           public void write(JsonWriter out, AppInfoAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppInfoAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppInfoAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppInfoAttributes
   * @throws IOException if the JSON string is invalid with respect to AppInfoAttributes
   */
  public static AppInfoAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppInfoAttributes.class);
  }

  /**
   * Convert an instance of AppInfoAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

