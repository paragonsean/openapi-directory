/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AppRelationshipsAppInfos;
import org.openapitools.client.model.AppRelationshipsAppStoreVersions;
import org.openapitools.client.model.AppRelationshipsAvailableTerritories;
import org.openapitools.client.model.AppRelationshipsBetaAppLocalizations;
import org.openapitools.client.model.AppRelationshipsBetaAppReviewDetail;
import org.openapitools.client.model.AppRelationshipsBetaGroups;
import org.openapitools.client.model.AppRelationshipsBetaLicenseAgreement;
import org.openapitools.client.model.AppRelationshipsBuilds;
import org.openapitools.client.model.AppRelationshipsEndUserLicenseAgreement;
import org.openapitools.client.model.AppRelationshipsGameCenterEnabledVersions;
import org.openapitools.client.model.AppRelationshipsInAppPurchases;
import org.openapitools.client.model.AppRelationshipsPreOrder;
import org.openapitools.client.model.AppRelationshipsPreReleaseVersions;
import org.openapitools.client.model.AppRelationshipsPrices;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppRelationships
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppRelationships {
  public static final String SERIALIZED_NAME_APP_INFOS = "appInfos";
  @SerializedName(SERIALIZED_NAME_APP_INFOS)
  private AppRelationshipsAppInfos appInfos;

  public static final String SERIALIZED_NAME_APP_STORE_VERSIONS = "appStoreVersions";
  @SerializedName(SERIALIZED_NAME_APP_STORE_VERSIONS)
  private AppRelationshipsAppStoreVersions appStoreVersions;

  public static final String SERIALIZED_NAME_AVAILABLE_TERRITORIES = "availableTerritories";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_TERRITORIES)
  private AppRelationshipsAvailableTerritories availableTerritories;

  public static final String SERIALIZED_NAME_BETA_APP_LOCALIZATIONS = "betaAppLocalizations";
  @SerializedName(SERIALIZED_NAME_BETA_APP_LOCALIZATIONS)
  private AppRelationshipsBetaAppLocalizations betaAppLocalizations;

  public static final String SERIALIZED_NAME_BETA_APP_REVIEW_DETAIL = "betaAppReviewDetail";
  @SerializedName(SERIALIZED_NAME_BETA_APP_REVIEW_DETAIL)
  private AppRelationshipsBetaAppReviewDetail betaAppReviewDetail;

  public static final String SERIALIZED_NAME_BETA_GROUPS = "betaGroups";
  @SerializedName(SERIALIZED_NAME_BETA_GROUPS)
  private AppRelationshipsBetaGroups betaGroups;

  public static final String SERIALIZED_NAME_BETA_LICENSE_AGREEMENT = "betaLicenseAgreement";
  @SerializedName(SERIALIZED_NAME_BETA_LICENSE_AGREEMENT)
  private AppRelationshipsBetaLicenseAgreement betaLicenseAgreement;

  public static final String SERIALIZED_NAME_BUILDS = "builds";
  @SerializedName(SERIALIZED_NAME_BUILDS)
  private AppRelationshipsBuilds builds;

  public static final String SERIALIZED_NAME_END_USER_LICENSE_AGREEMENT = "endUserLicenseAgreement";
  @SerializedName(SERIALIZED_NAME_END_USER_LICENSE_AGREEMENT)
  private AppRelationshipsEndUserLicenseAgreement endUserLicenseAgreement;

  public static final String SERIALIZED_NAME_GAME_CENTER_ENABLED_VERSIONS = "gameCenterEnabledVersions";
  @SerializedName(SERIALIZED_NAME_GAME_CENTER_ENABLED_VERSIONS)
  private AppRelationshipsGameCenterEnabledVersions gameCenterEnabledVersions;

  public static final String SERIALIZED_NAME_IN_APP_PURCHASES = "inAppPurchases";
  @SerializedName(SERIALIZED_NAME_IN_APP_PURCHASES)
  private AppRelationshipsInAppPurchases inAppPurchases;

  public static final String SERIALIZED_NAME_PRE_ORDER = "preOrder";
  @SerializedName(SERIALIZED_NAME_PRE_ORDER)
  private AppRelationshipsPreOrder preOrder;

  public static final String SERIALIZED_NAME_PRE_RELEASE_VERSIONS = "preReleaseVersions";
  @SerializedName(SERIALIZED_NAME_PRE_RELEASE_VERSIONS)
  private AppRelationshipsPreReleaseVersions preReleaseVersions;

  public static final String SERIALIZED_NAME_PRICES = "prices";
  @SerializedName(SERIALIZED_NAME_PRICES)
  private AppRelationshipsPrices prices;

  public AppRelationships() {
  }

  public AppRelationships appInfos(AppRelationshipsAppInfos appInfos) {
    this.appInfos = appInfos;
    return this;
  }

  /**
   * Get appInfos
   * @return appInfos
   */
  @javax.annotation.Nullable
  public AppRelationshipsAppInfos getAppInfos() {
    return appInfos;
  }

  public void setAppInfos(AppRelationshipsAppInfos appInfos) {
    this.appInfos = appInfos;
  }


  public AppRelationships appStoreVersions(AppRelationshipsAppStoreVersions appStoreVersions) {
    this.appStoreVersions = appStoreVersions;
    return this;
  }

  /**
   * Get appStoreVersions
   * @return appStoreVersions
   */
  @javax.annotation.Nullable
  public AppRelationshipsAppStoreVersions getAppStoreVersions() {
    return appStoreVersions;
  }

  public void setAppStoreVersions(AppRelationshipsAppStoreVersions appStoreVersions) {
    this.appStoreVersions = appStoreVersions;
  }


  public AppRelationships availableTerritories(AppRelationshipsAvailableTerritories availableTerritories) {
    this.availableTerritories = availableTerritories;
    return this;
  }

  /**
   * Get availableTerritories
   * @return availableTerritories
   */
  @javax.annotation.Nullable
  public AppRelationshipsAvailableTerritories getAvailableTerritories() {
    return availableTerritories;
  }

  public void setAvailableTerritories(AppRelationshipsAvailableTerritories availableTerritories) {
    this.availableTerritories = availableTerritories;
  }


  public AppRelationships betaAppLocalizations(AppRelationshipsBetaAppLocalizations betaAppLocalizations) {
    this.betaAppLocalizations = betaAppLocalizations;
    return this;
  }

  /**
   * Get betaAppLocalizations
   * @return betaAppLocalizations
   */
  @javax.annotation.Nullable
  public AppRelationshipsBetaAppLocalizations getBetaAppLocalizations() {
    return betaAppLocalizations;
  }

  public void setBetaAppLocalizations(AppRelationshipsBetaAppLocalizations betaAppLocalizations) {
    this.betaAppLocalizations = betaAppLocalizations;
  }


  public AppRelationships betaAppReviewDetail(AppRelationshipsBetaAppReviewDetail betaAppReviewDetail) {
    this.betaAppReviewDetail = betaAppReviewDetail;
    return this;
  }

  /**
   * Get betaAppReviewDetail
   * @return betaAppReviewDetail
   */
  @javax.annotation.Nullable
  public AppRelationshipsBetaAppReviewDetail getBetaAppReviewDetail() {
    return betaAppReviewDetail;
  }

  public void setBetaAppReviewDetail(AppRelationshipsBetaAppReviewDetail betaAppReviewDetail) {
    this.betaAppReviewDetail = betaAppReviewDetail;
  }


  public AppRelationships betaGroups(AppRelationshipsBetaGroups betaGroups) {
    this.betaGroups = betaGroups;
    return this;
  }

  /**
   * Get betaGroups
   * @return betaGroups
   */
  @javax.annotation.Nullable
  public AppRelationshipsBetaGroups getBetaGroups() {
    return betaGroups;
  }

  public void setBetaGroups(AppRelationshipsBetaGroups betaGroups) {
    this.betaGroups = betaGroups;
  }


  public AppRelationships betaLicenseAgreement(AppRelationshipsBetaLicenseAgreement betaLicenseAgreement) {
    this.betaLicenseAgreement = betaLicenseAgreement;
    return this;
  }

  /**
   * Get betaLicenseAgreement
   * @return betaLicenseAgreement
   */
  @javax.annotation.Nullable
  public AppRelationshipsBetaLicenseAgreement getBetaLicenseAgreement() {
    return betaLicenseAgreement;
  }

  public void setBetaLicenseAgreement(AppRelationshipsBetaLicenseAgreement betaLicenseAgreement) {
    this.betaLicenseAgreement = betaLicenseAgreement;
  }


  public AppRelationships builds(AppRelationshipsBuilds builds) {
    this.builds = builds;
    return this;
  }

  /**
   * Get builds
   * @return builds
   */
  @javax.annotation.Nullable
  public AppRelationshipsBuilds getBuilds() {
    return builds;
  }

  public void setBuilds(AppRelationshipsBuilds builds) {
    this.builds = builds;
  }


  public AppRelationships endUserLicenseAgreement(AppRelationshipsEndUserLicenseAgreement endUserLicenseAgreement) {
    this.endUserLicenseAgreement = endUserLicenseAgreement;
    return this;
  }

  /**
   * Get endUserLicenseAgreement
   * @return endUserLicenseAgreement
   */
  @javax.annotation.Nullable
  public AppRelationshipsEndUserLicenseAgreement getEndUserLicenseAgreement() {
    return endUserLicenseAgreement;
  }

  public void setEndUserLicenseAgreement(AppRelationshipsEndUserLicenseAgreement endUserLicenseAgreement) {
    this.endUserLicenseAgreement = endUserLicenseAgreement;
  }


  public AppRelationships gameCenterEnabledVersions(AppRelationshipsGameCenterEnabledVersions gameCenterEnabledVersions) {
    this.gameCenterEnabledVersions = gameCenterEnabledVersions;
    return this;
  }

  /**
   * Get gameCenterEnabledVersions
   * @return gameCenterEnabledVersions
   */
  @javax.annotation.Nullable
  public AppRelationshipsGameCenterEnabledVersions getGameCenterEnabledVersions() {
    return gameCenterEnabledVersions;
  }

  public void setGameCenterEnabledVersions(AppRelationshipsGameCenterEnabledVersions gameCenterEnabledVersions) {
    this.gameCenterEnabledVersions = gameCenterEnabledVersions;
  }


  public AppRelationships inAppPurchases(AppRelationshipsInAppPurchases inAppPurchases) {
    this.inAppPurchases = inAppPurchases;
    return this;
  }

  /**
   * Get inAppPurchases
   * @return inAppPurchases
   */
  @javax.annotation.Nullable
  public AppRelationshipsInAppPurchases getInAppPurchases() {
    return inAppPurchases;
  }

  public void setInAppPurchases(AppRelationshipsInAppPurchases inAppPurchases) {
    this.inAppPurchases = inAppPurchases;
  }


  public AppRelationships preOrder(AppRelationshipsPreOrder preOrder) {
    this.preOrder = preOrder;
    return this;
  }

  /**
   * Get preOrder
   * @return preOrder
   */
  @javax.annotation.Nullable
  public AppRelationshipsPreOrder getPreOrder() {
    return preOrder;
  }

  public void setPreOrder(AppRelationshipsPreOrder preOrder) {
    this.preOrder = preOrder;
  }


  public AppRelationships preReleaseVersions(AppRelationshipsPreReleaseVersions preReleaseVersions) {
    this.preReleaseVersions = preReleaseVersions;
    return this;
  }

  /**
   * Get preReleaseVersions
   * @return preReleaseVersions
   */
  @javax.annotation.Nullable
  public AppRelationshipsPreReleaseVersions getPreReleaseVersions() {
    return preReleaseVersions;
  }

  public void setPreReleaseVersions(AppRelationshipsPreReleaseVersions preReleaseVersions) {
    this.preReleaseVersions = preReleaseVersions;
  }


  public AppRelationships prices(AppRelationshipsPrices prices) {
    this.prices = prices;
    return this;
  }

  /**
   * Get prices
   * @return prices
   */
  @javax.annotation.Nullable
  public AppRelationshipsPrices getPrices() {
    return prices;
  }

  public void setPrices(AppRelationshipsPrices prices) {
    this.prices = prices;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppRelationships appRelationships = (AppRelationships) o;
    return Objects.equals(this.appInfos, appRelationships.appInfos) &&
        Objects.equals(this.appStoreVersions, appRelationships.appStoreVersions) &&
        Objects.equals(this.availableTerritories, appRelationships.availableTerritories) &&
        Objects.equals(this.betaAppLocalizations, appRelationships.betaAppLocalizations) &&
        Objects.equals(this.betaAppReviewDetail, appRelationships.betaAppReviewDetail) &&
        Objects.equals(this.betaGroups, appRelationships.betaGroups) &&
        Objects.equals(this.betaLicenseAgreement, appRelationships.betaLicenseAgreement) &&
        Objects.equals(this.builds, appRelationships.builds) &&
        Objects.equals(this.endUserLicenseAgreement, appRelationships.endUserLicenseAgreement) &&
        Objects.equals(this.gameCenterEnabledVersions, appRelationships.gameCenterEnabledVersions) &&
        Objects.equals(this.inAppPurchases, appRelationships.inAppPurchases) &&
        Objects.equals(this.preOrder, appRelationships.preOrder) &&
        Objects.equals(this.preReleaseVersions, appRelationships.preReleaseVersions) &&
        Objects.equals(this.prices, appRelationships.prices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appInfos, appStoreVersions, availableTerritories, betaAppLocalizations, betaAppReviewDetail, betaGroups, betaLicenseAgreement, builds, endUserLicenseAgreement, gameCenterEnabledVersions, inAppPurchases, preOrder, preReleaseVersions, prices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppRelationships {\n");
    sb.append("    appInfos: ").append(toIndentedString(appInfos)).append("\n");
    sb.append("    appStoreVersions: ").append(toIndentedString(appStoreVersions)).append("\n");
    sb.append("    availableTerritories: ").append(toIndentedString(availableTerritories)).append("\n");
    sb.append("    betaAppLocalizations: ").append(toIndentedString(betaAppLocalizations)).append("\n");
    sb.append("    betaAppReviewDetail: ").append(toIndentedString(betaAppReviewDetail)).append("\n");
    sb.append("    betaGroups: ").append(toIndentedString(betaGroups)).append("\n");
    sb.append("    betaLicenseAgreement: ").append(toIndentedString(betaLicenseAgreement)).append("\n");
    sb.append("    builds: ").append(toIndentedString(builds)).append("\n");
    sb.append("    endUserLicenseAgreement: ").append(toIndentedString(endUserLicenseAgreement)).append("\n");
    sb.append("    gameCenterEnabledVersions: ").append(toIndentedString(gameCenterEnabledVersions)).append("\n");
    sb.append("    inAppPurchases: ").append(toIndentedString(inAppPurchases)).append("\n");
    sb.append("    preOrder: ").append(toIndentedString(preOrder)).append("\n");
    sb.append("    preReleaseVersions: ").append(toIndentedString(preReleaseVersions)).append("\n");
    sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appInfos");
    openapiFields.add("appStoreVersions");
    openapiFields.add("availableTerritories");
    openapiFields.add("betaAppLocalizations");
    openapiFields.add("betaAppReviewDetail");
    openapiFields.add("betaGroups");
    openapiFields.add("betaLicenseAgreement");
    openapiFields.add("builds");
    openapiFields.add("endUserLicenseAgreement");
    openapiFields.add("gameCenterEnabledVersions");
    openapiFields.add("inAppPurchases");
    openapiFields.add("preOrder");
    openapiFields.add("preReleaseVersions");
    openapiFields.add("prices");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppRelationships
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppRelationships.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppRelationships is not found in the empty JSON string", AppRelationships.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppRelationships.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppRelationships` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appInfos`
      if (jsonObj.get("appInfos") != null && !jsonObj.get("appInfos").isJsonNull()) {
        AppRelationshipsAppInfos.validateJsonElement(jsonObj.get("appInfos"));
      }
      // validate the optional field `appStoreVersions`
      if (jsonObj.get("appStoreVersions") != null && !jsonObj.get("appStoreVersions").isJsonNull()) {
        AppRelationshipsAppStoreVersions.validateJsonElement(jsonObj.get("appStoreVersions"));
      }
      // validate the optional field `availableTerritories`
      if (jsonObj.get("availableTerritories") != null && !jsonObj.get("availableTerritories").isJsonNull()) {
        AppRelationshipsAvailableTerritories.validateJsonElement(jsonObj.get("availableTerritories"));
      }
      // validate the optional field `betaAppLocalizations`
      if (jsonObj.get("betaAppLocalizations") != null && !jsonObj.get("betaAppLocalizations").isJsonNull()) {
        AppRelationshipsBetaAppLocalizations.validateJsonElement(jsonObj.get("betaAppLocalizations"));
      }
      // validate the optional field `betaAppReviewDetail`
      if (jsonObj.get("betaAppReviewDetail") != null && !jsonObj.get("betaAppReviewDetail").isJsonNull()) {
        AppRelationshipsBetaAppReviewDetail.validateJsonElement(jsonObj.get("betaAppReviewDetail"));
      }
      // validate the optional field `betaGroups`
      if (jsonObj.get("betaGroups") != null && !jsonObj.get("betaGroups").isJsonNull()) {
        AppRelationshipsBetaGroups.validateJsonElement(jsonObj.get("betaGroups"));
      }
      // validate the optional field `betaLicenseAgreement`
      if (jsonObj.get("betaLicenseAgreement") != null && !jsonObj.get("betaLicenseAgreement").isJsonNull()) {
        AppRelationshipsBetaLicenseAgreement.validateJsonElement(jsonObj.get("betaLicenseAgreement"));
      }
      // validate the optional field `builds`
      if (jsonObj.get("builds") != null && !jsonObj.get("builds").isJsonNull()) {
        AppRelationshipsBuilds.validateJsonElement(jsonObj.get("builds"));
      }
      // validate the optional field `endUserLicenseAgreement`
      if (jsonObj.get("endUserLicenseAgreement") != null && !jsonObj.get("endUserLicenseAgreement").isJsonNull()) {
        AppRelationshipsEndUserLicenseAgreement.validateJsonElement(jsonObj.get("endUserLicenseAgreement"));
      }
      // validate the optional field `gameCenterEnabledVersions`
      if (jsonObj.get("gameCenterEnabledVersions") != null && !jsonObj.get("gameCenterEnabledVersions").isJsonNull()) {
        AppRelationshipsGameCenterEnabledVersions.validateJsonElement(jsonObj.get("gameCenterEnabledVersions"));
      }
      // validate the optional field `inAppPurchases`
      if (jsonObj.get("inAppPurchases") != null && !jsonObj.get("inAppPurchases").isJsonNull()) {
        AppRelationshipsInAppPurchases.validateJsonElement(jsonObj.get("inAppPurchases"));
      }
      // validate the optional field `preOrder`
      if (jsonObj.get("preOrder") != null && !jsonObj.get("preOrder").isJsonNull()) {
        AppRelationshipsPreOrder.validateJsonElement(jsonObj.get("preOrder"));
      }
      // validate the optional field `preReleaseVersions`
      if (jsonObj.get("preReleaseVersions") != null && !jsonObj.get("preReleaseVersions").isJsonNull()) {
        AppRelationshipsPreReleaseVersions.validateJsonElement(jsonObj.get("preReleaseVersions"));
      }
      // validate the optional field `prices`
      if (jsonObj.get("prices") != null && !jsonObj.get("prices").isJsonNull()) {
        AppRelationshipsPrices.validateJsonElement(jsonObj.get("prices"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppRelationships.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppRelationships' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppRelationships> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppRelationships.class));

       return (TypeAdapter<T>) new TypeAdapter<AppRelationships>() {
           @Override
           public void write(JsonWriter out, AppRelationships value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppRelationships read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppRelationships given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppRelationships
   * @throws IOException if the JSON string is invalid with respect to AppRelationships
   */
  public static AppRelationships fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppRelationships.class);
  }

  /**
   * Convert an instance of AppRelationships to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

