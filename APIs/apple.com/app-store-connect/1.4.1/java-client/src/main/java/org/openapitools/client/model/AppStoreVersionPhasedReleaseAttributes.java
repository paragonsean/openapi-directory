/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PhasedReleaseState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppStoreVersionPhasedReleaseAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppStoreVersionPhasedReleaseAttributes {
  public static final String SERIALIZED_NAME_CURRENT_DAY_NUMBER = "currentDayNumber";
  @SerializedName(SERIALIZED_NAME_CURRENT_DAY_NUMBER)
  private Integer currentDayNumber;

  public static final String SERIALIZED_NAME_PHASED_RELEASE_STATE = "phasedReleaseState";
  @SerializedName(SERIALIZED_NAME_PHASED_RELEASE_STATE)
  private PhasedReleaseState phasedReleaseState;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_TOTAL_PAUSE_DURATION = "totalPauseDuration";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAUSE_DURATION)
  private Integer totalPauseDuration;

  public AppStoreVersionPhasedReleaseAttributes() {
  }

  public AppStoreVersionPhasedReleaseAttributes currentDayNumber(Integer currentDayNumber) {
    this.currentDayNumber = currentDayNumber;
    return this;
  }

  /**
   * Get currentDayNumber
   * @return currentDayNumber
   */
  @javax.annotation.Nullable
  public Integer getCurrentDayNumber() {
    return currentDayNumber;
  }

  public void setCurrentDayNumber(Integer currentDayNumber) {
    this.currentDayNumber = currentDayNumber;
  }


  public AppStoreVersionPhasedReleaseAttributes phasedReleaseState(PhasedReleaseState phasedReleaseState) {
    this.phasedReleaseState = phasedReleaseState;
    return this;
  }

  /**
   * Get phasedReleaseState
   * @return phasedReleaseState
   */
  @javax.annotation.Nullable
  public PhasedReleaseState getPhasedReleaseState() {
    return phasedReleaseState;
  }

  public void setPhasedReleaseState(PhasedReleaseState phasedReleaseState) {
    this.phasedReleaseState = phasedReleaseState;
  }


  public AppStoreVersionPhasedReleaseAttributes startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public AppStoreVersionPhasedReleaseAttributes totalPauseDuration(Integer totalPauseDuration) {
    this.totalPauseDuration = totalPauseDuration;
    return this;
  }

  /**
   * Get totalPauseDuration
   * @return totalPauseDuration
   */
  @javax.annotation.Nullable
  public Integer getTotalPauseDuration() {
    return totalPauseDuration;
  }

  public void setTotalPauseDuration(Integer totalPauseDuration) {
    this.totalPauseDuration = totalPauseDuration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppStoreVersionPhasedReleaseAttributes appStoreVersionPhasedReleaseAttributes = (AppStoreVersionPhasedReleaseAttributes) o;
    return Objects.equals(this.currentDayNumber, appStoreVersionPhasedReleaseAttributes.currentDayNumber) &&
        Objects.equals(this.phasedReleaseState, appStoreVersionPhasedReleaseAttributes.phasedReleaseState) &&
        Objects.equals(this.startDate, appStoreVersionPhasedReleaseAttributes.startDate) &&
        Objects.equals(this.totalPauseDuration, appStoreVersionPhasedReleaseAttributes.totalPauseDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentDayNumber, phasedReleaseState, startDate, totalPauseDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppStoreVersionPhasedReleaseAttributes {\n");
    sb.append("    currentDayNumber: ").append(toIndentedString(currentDayNumber)).append("\n");
    sb.append("    phasedReleaseState: ").append(toIndentedString(phasedReleaseState)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    totalPauseDuration: ").append(toIndentedString(totalPauseDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currentDayNumber");
    openapiFields.add("phasedReleaseState");
    openapiFields.add("startDate");
    openapiFields.add("totalPauseDuration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppStoreVersionPhasedReleaseAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppStoreVersionPhasedReleaseAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppStoreVersionPhasedReleaseAttributes is not found in the empty JSON string", AppStoreVersionPhasedReleaseAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppStoreVersionPhasedReleaseAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppStoreVersionPhasedReleaseAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `phasedReleaseState`
      if (jsonObj.get("phasedReleaseState") != null && !jsonObj.get("phasedReleaseState").isJsonNull()) {
        PhasedReleaseState.validateJsonElement(jsonObj.get("phasedReleaseState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppStoreVersionPhasedReleaseAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppStoreVersionPhasedReleaseAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppStoreVersionPhasedReleaseAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppStoreVersionPhasedReleaseAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<AppStoreVersionPhasedReleaseAttributes>() {
           @Override
           public void write(JsonWriter out, AppStoreVersionPhasedReleaseAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppStoreVersionPhasedReleaseAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppStoreVersionPhasedReleaseAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppStoreVersionPhasedReleaseAttributes
   * @throws IOException if the JSON string is invalid with respect to AppStoreVersionPhasedReleaseAttributes
   */
  public static AppStoreVersionPhasedReleaseAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppStoreVersionPhasedReleaseAttributes.class);
  }

  /**
   * Convert an instance of AppStoreVersionPhasedReleaseAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

