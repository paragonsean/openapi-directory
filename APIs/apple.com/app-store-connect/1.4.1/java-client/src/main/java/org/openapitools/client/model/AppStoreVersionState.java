/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AppStoreVersionState
 */
@JsonAdapter(AppStoreVersionState.Adapter.class)
public enum AppStoreVersionState {
  
  DEVELOPER_REMOVED_FROM_SALE("DEVELOPER_REMOVED_FROM_SALE"),
  
  DEVELOPER_REJECTED("DEVELOPER_REJECTED"),
  
  IN_REVIEW("IN_REVIEW"),
  
  INVALID_BINARY("INVALID_BINARY"),
  
  METADATA_REJECTED("METADATA_REJECTED"),
  
  PENDING_APPLE_RELEASE("PENDING_APPLE_RELEASE"),
  
  PENDING_CONTRACT("PENDING_CONTRACT"),
  
  PENDING_DEVELOPER_RELEASE("PENDING_DEVELOPER_RELEASE"),
  
  PREPARE_FOR_SUBMISSION("PREPARE_FOR_SUBMISSION"),
  
  PREORDER_READY_FOR_SALE("PREORDER_READY_FOR_SALE"),
  
  PROCESSING_FOR_APP_STORE("PROCESSING_FOR_APP_STORE"),
  
  READY_FOR_SALE("READY_FOR_SALE"),
  
  REJECTED("REJECTED"),
  
  REMOVED_FROM_SALE("REMOVED_FROM_SALE"),
  
  WAITING_FOR_EXPORT_COMPLIANCE("WAITING_FOR_EXPORT_COMPLIANCE"),
  
  WAITING_FOR_REVIEW("WAITING_FOR_REVIEW"),
  
  REPLACED_WITH_NEW_VERSION("REPLACED_WITH_NEW_VERSION");

  private String value;

  AppStoreVersionState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AppStoreVersionState fromValue(String value) {
    for (AppStoreVersionState b : AppStoreVersionState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AppStoreVersionState> {
    @Override
    public void write(final JsonWriter jsonWriter, final AppStoreVersionState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AppStoreVersionState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AppStoreVersionState.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AppStoreVersionState.fromValue(value);
  }
}

