/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ScreenshotDisplayType
 */
@JsonAdapter(ScreenshotDisplayType.Adapter.class)
public enum ScreenshotDisplayType {
  
  APP_IPHONE_65("APP_IPHONE_65"),
  
  APP_IPHONE_58("APP_IPHONE_58"),
  
  APP_IPHONE_55("APP_IPHONE_55"),
  
  APP_IPHONE_47("APP_IPHONE_47"),
  
  APP_IPHONE_40("APP_IPHONE_40"),
  
  APP_IPHONE_35("APP_IPHONE_35"),
  
  APP_IPAD_PRO_3_GEN_129("APP_IPAD_PRO_3GEN_129"),
  
  APP_IPAD_PRO_3_GEN_11("APP_IPAD_PRO_3GEN_11"),
  
  APP_IPAD_PRO_129("APP_IPAD_PRO_129"),
  
  APP_IPAD_105("APP_IPAD_105"),
  
  APP_IPAD_97("APP_IPAD_97"),
  
  APP_DESKTOP("APP_DESKTOP"),
  
  APP_WATCH_SERIES_4("APP_WATCH_SERIES_4"),
  
  APP_WATCH_SERIES_3("APP_WATCH_SERIES_3"),
  
  APP_APPLE_TV("APP_APPLE_TV"),
  
  IMESSAGE_APP_IPHONE_65("IMESSAGE_APP_IPHONE_65"),
  
  IMESSAGE_APP_IPHONE_58("IMESSAGE_APP_IPHONE_58"),
  
  IMESSAGE_APP_IPHONE_55("IMESSAGE_APP_IPHONE_55"),
  
  IMESSAGE_APP_IPHONE_47("IMESSAGE_APP_IPHONE_47"),
  
  IMESSAGE_APP_IPHONE_40("IMESSAGE_APP_IPHONE_40"),
  
  IMESSAGE_APP_IPAD_PRO_3_GEN_129("IMESSAGE_APP_IPAD_PRO_3GEN_129"),
  
  IMESSAGE_APP_IPAD_PRO_3_GEN_11("IMESSAGE_APP_IPAD_PRO_3GEN_11"),
  
  IMESSAGE_APP_IPAD_PRO_129("IMESSAGE_APP_IPAD_PRO_129"),
  
  IMESSAGE_APP_IPAD_105("IMESSAGE_APP_IPAD_105"),
  
  IMESSAGE_APP_IPAD_97("IMESSAGE_APP_IPAD_97");

  private String value;

  ScreenshotDisplayType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ScreenshotDisplayType fromValue(String value) {
    for (ScreenshotDisplayType b : ScreenshotDisplayType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ScreenshotDisplayType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ScreenshotDisplayType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ScreenshotDisplayType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ScreenshotDisplayType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ScreenshotDisplayType.fromValue(value);
  }
}

