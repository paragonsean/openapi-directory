/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppStoreVersionLocalizationUpdateRequestDataAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:33:02.423773-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppStoreVersionLocalizationUpdateRequestDataAttributes {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private String keywords;

  public static final String SERIALIZED_NAME_MARKETING_URL = "marketingUrl";
  @SerializedName(SERIALIZED_NAME_MARKETING_URL)
  private URI marketingUrl;

  public static final String SERIALIZED_NAME_PROMOTIONAL_TEXT = "promotionalText";
  @SerializedName(SERIALIZED_NAME_PROMOTIONAL_TEXT)
  private String promotionalText;

  public static final String SERIALIZED_NAME_SUPPORT_URL = "supportUrl";
  @SerializedName(SERIALIZED_NAME_SUPPORT_URL)
  private URI supportUrl;

  public static final String SERIALIZED_NAME_WHATS_NEW = "whatsNew";
  @SerializedName(SERIALIZED_NAME_WHATS_NEW)
  private String whatsNew;

  public AppStoreVersionLocalizationUpdateRequestDataAttributes() {
  }

  public AppStoreVersionLocalizationUpdateRequestDataAttributes description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AppStoreVersionLocalizationUpdateRequestDataAttributes keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }


  public AppStoreVersionLocalizationUpdateRequestDataAttributes marketingUrl(URI marketingUrl) {
    this.marketingUrl = marketingUrl;
    return this;
  }

  /**
   * Get marketingUrl
   * @return marketingUrl
   */
  @javax.annotation.Nullable
  public URI getMarketingUrl() {
    return marketingUrl;
  }

  public void setMarketingUrl(URI marketingUrl) {
    this.marketingUrl = marketingUrl;
  }


  public AppStoreVersionLocalizationUpdateRequestDataAttributes promotionalText(String promotionalText) {
    this.promotionalText = promotionalText;
    return this;
  }

  /**
   * Get promotionalText
   * @return promotionalText
   */
  @javax.annotation.Nullable
  public String getPromotionalText() {
    return promotionalText;
  }

  public void setPromotionalText(String promotionalText) {
    this.promotionalText = promotionalText;
  }


  public AppStoreVersionLocalizationUpdateRequestDataAttributes supportUrl(URI supportUrl) {
    this.supportUrl = supportUrl;
    return this;
  }

  /**
   * Get supportUrl
   * @return supportUrl
   */
  @javax.annotation.Nullable
  public URI getSupportUrl() {
    return supportUrl;
  }

  public void setSupportUrl(URI supportUrl) {
    this.supportUrl = supportUrl;
  }


  public AppStoreVersionLocalizationUpdateRequestDataAttributes whatsNew(String whatsNew) {
    this.whatsNew = whatsNew;
    return this;
  }

  /**
   * Get whatsNew
   * @return whatsNew
   */
  @javax.annotation.Nullable
  public String getWhatsNew() {
    return whatsNew;
  }

  public void setWhatsNew(String whatsNew) {
    this.whatsNew = whatsNew;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppStoreVersionLocalizationUpdateRequestDataAttributes appStoreVersionLocalizationUpdateRequestDataAttributes = (AppStoreVersionLocalizationUpdateRequestDataAttributes) o;
    return Objects.equals(this.description, appStoreVersionLocalizationUpdateRequestDataAttributes.description) &&
        Objects.equals(this.keywords, appStoreVersionLocalizationUpdateRequestDataAttributes.keywords) &&
        Objects.equals(this.marketingUrl, appStoreVersionLocalizationUpdateRequestDataAttributes.marketingUrl) &&
        Objects.equals(this.promotionalText, appStoreVersionLocalizationUpdateRequestDataAttributes.promotionalText) &&
        Objects.equals(this.supportUrl, appStoreVersionLocalizationUpdateRequestDataAttributes.supportUrl) &&
        Objects.equals(this.whatsNew, appStoreVersionLocalizationUpdateRequestDataAttributes.whatsNew);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, keywords, marketingUrl, promotionalText, supportUrl, whatsNew);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppStoreVersionLocalizationUpdateRequestDataAttributes {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    marketingUrl: ").append(toIndentedString(marketingUrl)).append("\n");
    sb.append("    promotionalText: ").append(toIndentedString(promotionalText)).append("\n");
    sb.append("    supportUrl: ").append(toIndentedString(supportUrl)).append("\n");
    sb.append("    whatsNew: ").append(toIndentedString(whatsNew)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("keywords");
    openapiFields.add("marketingUrl");
    openapiFields.add("promotionalText");
    openapiFields.add("supportUrl");
    openapiFields.add("whatsNew");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppStoreVersionLocalizationUpdateRequestDataAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppStoreVersionLocalizationUpdateRequestDataAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppStoreVersionLocalizationUpdateRequestDataAttributes is not found in the empty JSON string", AppStoreVersionLocalizationUpdateRequestDataAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppStoreVersionLocalizationUpdateRequestDataAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppStoreVersionLocalizationUpdateRequestDataAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull()) && !jsonObj.get("keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
      }
      if ((jsonObj.get("marketingUrl") != null && !jsonObj.get("marketingUrl").isJsonNull()) && !jsonObj.get("marketingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketingUrl").toString()));
      }
      if ((jsonObj.get("promotionalText") != null && !jsonObj.get("promotionalText").isJsonNull()) && !jsonObj.get("promotionalText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionalText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promotionalText").toString()));
      }
      if ((jsonObj.get("supportUrl") != null && !jsonObj.get("supportUrl").isJsonNull()) && !jsonObj.get("supportUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportUrl").toString()));
      }
      if ((jsonObj.get("whatsNew") != null && !jsonObj.get("whatsNew").isJsonNull()) && !jsonObj.get("whatsNew").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `whatsNew` to be a primitive type in the JSON string but got `%s`", jsonObj.get("whatsNew").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppStoreVersionLocalizationUpdateRequestDataAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppStoreVersionLocalizationUpdateRequestDataAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppStoreVersionLocalizationUpdateRequestDataAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppStoreVersionLocalizationUpdateRequestDataAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<AppStoreVersionLocalizationUpdateRequestDataAttributes>() {
           @Override
           public void write(JsonWriter out, AppStoreVersionLocalizationUpdateRequestDataAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppStoreVersionLocalizationUpdateRequestDataAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppStoreVersionLocalizationUpdateRequestDataAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppStoreVersionLocalizationUpdateRequestDataAttributes
   * @throws IOException if the JSON string is invalid with respect to AppStoreVersionLocalizationUpdateRequestDataAttributes
   */
  public static AppStoreVersionLocalizationUpdateRequestDataAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppStoreVersionLocalizationUpdateRequestDataAttributes.class);
  }

  /**
   * Convert an instance of AppStoreVersionLocalizationUpdateRequestDataAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

