/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeviceCreateRequest;
import org.openapitools.client.model.DeviceResponse;
import org.openapitools.client.model.DeviceUpdateRequest;
import org.openapitools.client.model.DevicesResponse;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DevicesApi
 */
@Disabled
public class DevicesApiTest {

    private final DevicesApi api = new DevicesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicesCreateInstanceTest() throws ApiException {
        DeviceCreateRequest deviceCreateRequest = null;
        DeviceResponse response = api.devicesCreateInstance(deviceCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicesGetCollectionTest() throws ApiException {
        List<String> filterName = null;
        List<String> filterPlatform = null;
        List<String> filterStatus = null;
        List<String> filterUdid = null;
        List<String> filterId = null;
        List<String> sort = null;
        List<String> fieldsDevices = null;
        Integer limit = null;
        DevicesResponse response = api.devicesGetCollection(filterName, filterPlatform, filterStatus, filterUdid, filterId, sort, fieldsDevices, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicesGetInstanceTest() throws ApiException {
        String id = null;
        List<String> fieldsDevices = null;
        DeviceResponse response = api.devicesGetInstance(id, fieldsDevices);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicesUpdateInstanceTest() throws ApiException {
        String id = null;
        DeviceUpdateRequest deviceUpdateRequest = null;
        DeviceResponse response = api.devicesUpdateInstance(id, deviceUpdateRequest);
        // TODO: test validations
    }

}
