/*
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppResponse;
import org.openapitools.client.model.BetaGroupBetaTestersLinkagesRequest;
import org.openapitools.client.model.BetaGroupBetaTestersLinkagesResponse;
import org.openapitools.client.model.BetaGroupBuildsLinkagesRequest;
import org.openapitools.client.model.BetaGroupBuildsLinkagesResponse;
import org.openapitools.client.model.BetaGroupCreateRequest;
import org.openapitools.client.model.BetaGroupResponse;
import org.openapitools.client.model.BetaGroupUpdateRequest;
import org.openapitools.client.model.BetaGroupsResponse;
import org.openapitools.client.model.BetaTestersResponse;
import org.openapitools.client.model.BuildsResponse;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BetaGroupsApi
 */
@Disabled
public class BetaGroupsApiTest {

    private final BetaGroupsApi api = new BetaGroupsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsAppGetToOneRelatedTest() throws ApiException {
        String id = null;
        List<String> fieldsApps = null;
        AppResponse response = api.betaGroupsAppGetToOneRelated(id, fieldsApps);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBetaTestersCreateToManyRelationshipTest() throws ApiException {
        String id = null;
        BetaGroupBetaTestersLinkagesRequest betaGroupBetaTestersLinkagesRequest = null;
        api.betaGroupsBetaTestersCreateToManyRelationship(id, betaGroupBetaTestersLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBetaTestersDeleteToManyRelationshipTest() throws ApiException {
        String id = null;
        BetaGroupBetaTestersLinkagesRequest betaGroupBetaTestersLinkagesRequest = null;
        api.betaGroupsBetaTestersDeleteToManyRelationship(id, betaGroupBetaTestersLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBetaTestersGetToManyRelatedTest() throws ApiException {
        String id = null;
        List<String> fieldsBetaTesters = null;
        Integer limit = null;
        BetaTestersResponse response = api.betaGroupsBetaTestersGetToManyRelated(id, fieldsBetaTesters, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBetaTestersGetToManyRelationshipTest() throws ApiException {
        String id = null;
        Integer limit = null;
        BetaGroupBetaTestersLinkagesResponse response = api.betaGroupsBetaTestersGetToManyRelationship(id, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBuildsCreateToManyRelationshipTest() throws ApiException {
        String id = null;
        BetaGroupBuildsLinkagesRequest betaGroupBuildsLinkagesRequest = null;
        api.betaGroupsBuildsCreateToManyRelationship(id, betaGroupBuildsLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBuildsDeleteToManyRelationshipTest() throws ApiException {
        String id = null;
        BetaGroupBuildsLinkagesRequest betaGroupBuildsLinkagesRequest = null;
        api.betaGroupsBuildsDeleteToManyRelationship(id, betaGroupBuildsLinkagesRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBuildsGetToManyRelatedTest() throws ApiException {
        String id = null;
        List<String> fieldsBuilds = null;
        Integer limit = null;
        BuildsResponse response = api.betaGroupsBuildsGetToManyRelated(id, fieldsBuilds, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsBuildsGetToManyRelationshipTest() throws ApiException {
        String id = null;
        Integer limit = null;
        BetaGroupBuildsLinkagesResponse response = api.betaGroupsBuildsGetToManyRelationship(id, limit);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsCreateInstanceTest() throws ApiException {
        BetaGroupCreateRequest betaGroupCreateRequest = null;
        BetaGroupResponse response = api.betaGroupsCreateInstance(betaGroupCreateRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsDeleteInstanceTest() throws ApiException {
        String id = null;
        api.betaGroupsDeleteInstance(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsGetCollectionTest() throws ApiException {
        List<String> filterIsInternalGroup = null;
        List<String> filterName = null;
        List<String> filterPublicLink = null;
        List<String> filterPublicLinkEnabled = null;
        List<String> filterPublicLinkLimitEnabled = null;
        List<String> filterApp = null;
        List<String> filterBuilds = null;
        List<String> filterId = null;
        List<String> sort = null;
        List<String> fieldsBetaGroups = null;
        Integer limit = null;
        List<String> include = null;
        List<String> fieldsBuilds = null;
        List<String> fieldsBetaTesters = null;
        List<String> fieldsApps = null;
        Integer limitBetaTesters = null;
        Integer limitBuilds = null;
        BetaGroupsResponse response = api.betaGroupsGetCollection(filterIsInternalGroup, filterName, filterPublicLink, filterPublicLinkEnabled, filterPublicLinkLimitEnabled, filterApp, filterBuilds, filterId, sort, fieldsBetaGroups, limit, include, fieldsBuilds, fieldsBetaTesters, fieldsApps, limitBetaTesters, limitBuilds);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsGetInstanceTest() throws ApiException {
        String id = null;
        List<String> fieldsBetaGroups = null;
        List<String> include = null;
        List<String> fieldsBuilds = null;
        List<String> fieldsBetaTesters = null;
        List<String> fieldsApps = null;
        Integer limitBetaTesters = null;
        Integer limitBuilds = null;
        BetaGroupResponse response = api.betaGroupsGetInstance(id, fieldsBetaGroups, include, fieldsBuilds, fieldsBetaTesters, fieldsApps, limitBetaTesters, limitBuilds);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void betaGroupsUpdateInstanceTest() throws ApiException {
        String id = null;
        BetaGroupUpdateRequest betaGroupUpdateRequest = null;
        BetaGroupResponse response = api.betaGroupsUpdateInstance(id, betaGroupUpdateRequest);
        // TODO: test validations
    }

}
