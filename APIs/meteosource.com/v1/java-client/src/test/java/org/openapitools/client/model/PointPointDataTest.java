/*
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PointPointAlerts;
import org.openapitools.client.model.PointPointCurrentData;
import org.openapitools.client.model.PointPointDaily;
import org.openapitools.client.model.PointPointHourly;
import org.openapitools.client.model.PointPointMinutely;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PointPointData
 */
public class PointPointDataTest {
    private final PointPointData model = new PointPointData();

    /**
     * Model tests for PointPointData
     */
    @Test
    public void testPointPointData() {
        // TODO: test PointPointData
    }

    /**
     * Test the property 'alerts'
     */
    @Test
    public void alertsTest() {
        // TODO: test alerts
    }

    /**
     * Test the property 'current'
     */
    @Test
    public void currentTest() {
        // TODO: test current
    }

    /**
     * Test the property 'daily'
     */
    @Test
    public void dailyTest() {
        // TODO: test daily
    }

    /**
     * Test the property 'elevation'
     */
    @Test
    public void elevationTest() {
        // TODO: test elevation
    }

    /**
     * Test the property 'hourly'
     */
    @Test
    public void hourlyTest() {
        // TODO: test hourly
    }

    /**
     * Test the property 'lat'
     */
    @Test
    public void latTest() {
        // TODO: test lat
    }

    /**
     * Test the property 'lon'
     */
    @Test
    public void lonTest() {
        // TODO: test lon
    }

    /**
     * Test the property 'minutely'
     */
    @Test
    public void minutelyTest() {
        // TODO: test minutely
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'units'
     */
    @Test
    public void unitsTest() {
        // TODO: test units
    }

}
