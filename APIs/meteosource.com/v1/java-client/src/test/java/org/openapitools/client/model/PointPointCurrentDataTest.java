/*
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.PointPointCurrentPrecipitationData;
import org.openapitools.client.model.PointPointCurrentWindData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PointPointCurrentData
 */
public class PointPointCurrentDataTest {
    private final PointPointCurrentData model = new PointPointCurrentData();

    /**
     * Model tests for PointPointCurrentData
     */
    @Test
    public void testPointPointCurrentData() {
        // TODO: test PointPointCurrentData
    }

    /**
     * Test the property 'cloudCover'
     */
    @Test
    public void cloudCoverTest() {
        // TODO: test cloudCover
    }

    /**
     * Test the property 'dewPoint'
     */
    @Test
    public void dewPointTest() {
        // TODO: test dewPoint
    }

    /**
     * Test the property 'feelsLike'
     */
    @Test
    public void feelsLikeTest() {
        // TODO: test feelsLike
    }

    /**
     * Test the property 'humidity'
     */
    @Test
    public void humidityTest() {
        // TODO: test humidity
    }

    /**
     * Test the property 'icon'
     */
    @Test
    public void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'iconNum'
     */
    @Test
    public void iconNumTest() {
        // TODO: test iconNum
    }

    /**
     * Test the property 'irradiance'
     */
    @Test
    public void irradianceTest() {
        // TODO: test irradiance
    }

    /**
     * Test the property 'ozone'
     */
    @Test
    public void ozoneTest() {
        // TODO: test ozone
    }

    /**
     * Test the property 'precipitation'
     */
    @Test
    public void precipitationTest() {
        // TODO: test precipitation
    }

    /**
     * Test the property 'pressure'
     */
    @Test
    public void pressureTest() {
        // TODO: test pressure
    }

    /**
     * Test the property 'summary'
     */
    @Test
    public void summaryTest() {
        // TODO: test summary
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'uvIndex'
     */
    @Test
    public void uvIndexTest() {
        // TODO: test uvIndex
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'wind'
     */
    @Test
    public void windTest() {
        // TODO: test wind
    }

    /**
     * Test the property 'windChill'
     */
    @Test
    public void windChillTest() {
        // TODO: test windChill
    }

}
