# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AirQualityPointHourlyData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aerosol_550: float=None, air_quality: float=None, co_surface: float=None, _date: datetime=None, dust_550nm: float=None, dust_mixing_ratio_05: float=None, no2_surface: float=None, no_surface: float=None, ozone_surface: float=None, ozone_total: float=None, pm10: float=None, pm25: float=None, so2_surface: float=None):
        """AirQualityPointHourlyData - a model defined in OpenAPI

        :param aerosol_550: The aerosol_550 of this AirQualityPointHourlyData.
        :param air_quality: The air_quality of this AirQualityPointHourlyData.
        :param co_surface: The co_surface of this AirQualityPointHourlyData.
        :param _date: The _date of this AirQualityPointHourlyData.
        :param dust_550nm: The dust_550nm of this AirQualityPointHourlyData.
        :param dust_mixing_ratio_05: The dust_mixing_ratio_05 of this AirQualityPointHourlyData.
        :param no2_surface: The no2_surface of this AirQualityPointHourlyData.
        :param no_surface: The no_surface of this AirQualityPointHourlyData.
        :param ozone_surface: The ozone_surface of this AirQualityPointHourlyData.
        :param ozone_total: The ozone_total of this AirQualityPointHourlyData.
        :param pm10: The pm10 of this AirQualityPointHourlyData.
        :param pm25: The pm25 of this AirQualityPointHourlyData.
        :param so2_surface: The so2_surface of this AirQualityPointHourlyData.
        """
        self.openapi_types = {
            'aerosol_550': float,
            'air_quality': float,
            'co_surface': float,
            '_date': datetime,
            'dust_550nm': float,
            'dust_mixing_ratio_05': float,
            'no2_surface': float,
            'no_surface': float,
            'ozone_surface': float,
            'ozone_total': float,
            'pm10': float,
            'pm25': float,
            'so2_surface': float
        }

        self.attribute_map = {
            'aerosol_550': 'aerosol_550',
            'air_quality': 'air_quality',
            'co_surface': 'co_surface',
            '_date': 'date',
            'dust_550nm': 'dust_550nm',
            'dust_mixing_ratio_05': 'dust_mixing_ratio_05',
            'no2_surface': 'no2_surface',
            'no_surface': 'no_surface',
            'ozone_surface': 'ozone_surface',
            'ozone_total': 'ozone_total',
            'pm10': 'pm10',
            'pm25': 'pm25',
            'so2_surface': 'so2_surface'
        }

        self._aerosol_550 = aerosol_550
        self._air_quality = air_quality
        self._co_surface = co_surface
        self.__date = _date
        self._dust_550nm = dust_550nm
        self._dust_mixing_ratio_05 = dust_mixing_ratio_05
        self._no2_surface = no2_surface
        self._no_surface = no_surface
        self._ozone_surface = ozone_surface
        self._ozone_total = ozone_total
        self._pm10 = pm10
        self._pm25 = pm25
        self._so2_surface = so2_surface

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirQualityPointHourlyData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirQuality_PointHourlyData of this AirQualityPointHourlyData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aerosol_550(self):
        """Gets the aerosol_550 of this AirQualityPointHourlyData.

        Total aerosol optical depth at 550 nm. Unit: dimensionless

        :return: The aerosol_550 of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._aerosol_550

    @aerosol_550.setter
    def aerosol_550(self, aerosol_550):
        """Sets the aerosol_550 of this AirQualityPointHourlyData.

        Total aerosol optical depth at 550 nm. Unit: dimensionless

        :param aerosol_550: The aerosol_550 of this AirQualityPointHourlyData.
        :type aerosol_550: float
        """

        self._aerosol_550 = aerosol_550

    @property
    def air_quality(self):
        """Gets the air_quality of this AirQualityPointHourlyData.

        Air quality index. The following values can appear:  * 1 - Very good * 2 - Good * 3 - Medium * 4 - Poor * 5 - Very poor * 6 - Extremely poor  Unit: index

        :return: The air_quality of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._air_quality

    @air_quality.setter
    def air_quality(self, air_quality):
        """Sets the air_quality of this AirQualityPointHourlyData.

        Air quality index. The following values can appear:  * 1 - Very good * 2 - Good * 3 - Medium * 4 - Poor * 5 - Very poor * 6 - Extremely poor  Unit: index

        :param air_quality: The air_quality of this AirQualityPointHourlyData.
        :type air_quality: float
        """

        self._air_quality = air_quality

    @property
    def co_surface(self):
        """Gets the co_surface of this AirQualityPointHourlyData.

        Carbon monoxide at surface level. Unit: µg/m3

        :return: The co_surface of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._co_surface

    @co_surface.setter
    def co_surface(self, co_surface):
        """Sets the co_surface of this AirQualityPointHourlyData.

        Carbon monoxide at surface level. Unit: µg/m3

        :param co_surface: The co_surface of this AirQualityPointHourlyData.
        :type co_surface: float
        """

        self._co_surface = co_surface

    @property
    def _date(self):
        """Gets the _date of this AirQualityPointHourlyData.

        Datetime in YYYY-MM-DDTHH:MM:SS format.

        :return: The _date of this AirQualityPointHourlyData.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AirQualityPointHourlyData.

        Datetime in YYYY-MM-DDTHH:MM:SS format.

        :param _date: The _date of this AirQualityPointHourlyData.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def dust_550nm(self):
        """Gets the dust_550nm of this AirQualityPointHourlyData.

        Dust aerosol optical depth at 550 nm. Unit: dimensionless

        :return: The dust_550nm of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._dust_550nm

    @dust_550nm.setter
    def dust_550nm(self, dust_550nm):
        """Sets the dust_550nm of this AirQualityPointHourlyData.

        Dust aerosol optical depth at 550 nm. Unit: dimensionless

        :param dust_550nm: The dust_550nm of this AirQualityPointHourlyData.
        :type dust_550nm: float
        """

        self._dust_550nm = dust_550nm

    @property
    def dust_mixing_ratio_05(self):
        """Gets the dust_mixing_ratio_05 of this AirQualityPointHourlyData.

        Dust aerosol (0.55 - 0.9 µm) mixing ratio. Unit: kg/kg

        :return: The dust_mixing_ratio_05 of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._dust_mixing_ratio_05

    @dust_mixing_ratio_05.setter
    def dust_mixing_ratio_05(self, dust_mixing_ratio_05):
        """Sets the dust_mixing_ratio_05 of this AirQualityPointHourlyData.

        Dust aerosol (0.55 - 0.9 µm) mixing ratio. Unit: kg/kg

        :param dust_mixing_ratio_05: The dust_mixing_ratio_05 of this AirQualityPointHourlyData.
        :type dust_mixing_ratio_05: float
        """

        self._dust_mixing_ratio_05 = dust_mixing_ratio_05

    @property
    def no2_surface(self):
        """Gets the no2_surface of this AirQualityPointHourlyData.

        Nitrogen dioxide at surface level. Unit: µg/m3

        :return: The no2_surface of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._no2_surface

    @no2_surface.setter
    def no2_surface(self, no2_surface):
        """Sets the no2_surface of this AirQualityPointHourlyData.

        Nitrogen dioxide at surface level. Unit: µg/m3

        :param no2_surface: The no2_surface of this AirQualityPointHourlyData.
        :type no2_surface: float
        """

        self._no2_surface = no2_surface

    @property
    def no_surface(self):
        """Gets the no_surface of this AirQualityPointHourlyData.

        Nitrogen monoxide at surface level. Unit: µg/m3

        :return: The no_surface of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._no_surface

    @no_surface.setter
    def no_surface(self, no_surface):
        """Sets the no_surface of this AirQualityPointHourlyData.

        Nitrogen monoxide at surface level. Unit: µg/m3

        :param no_surface: The no_surface of this AirQualityPointHourlyData.
        :type no_surface: float
        """

        self._no_surface = no_surface

    @property
    def ozone_surface(self):
        """Gets the ozone_surface of this AirQualityPointHourlyData.

        Ozone. Unit: µg/m3

        :return: The ozone_surface of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._ozone_surface

    @ozone_surface.setter
    def ozone_surface(self, ozone_surface):
        """Sets the ozone_surface of this AirQualityPointHourlyData.

        Ozone. Unit: µg/m3

        :param ozone_surface: The ozone_surface of this AirQualityPointHourlyData.
        :type ozone_surface: float
        """

        self._ozone_surface = ozone_surface

    @property
    def ozone_total(self):
        """Gets the ozone_total of this AirQualityPointHourlyData.

        Total column ozone. Unit: Dobson

        :return: The ozone_total of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._ozone_total

    @ozone_total.setter
    def ozone_total(self, ozone_total):
        """Sets the ozone_total of this AirQualityPointHourlyData.

        Total column ozone. Unit: Dobson

        :param ozone_total: The ozone_total of this AirQualityPointHourlyData.
        :type ozone_total: float
        """

        self._ozone_total = ozone_total

    @property
    def pm10(self):
        """Gets the pm10 of this AirQualityPointHourlyData.

        Particulate matter d < 10 µm (PM10). Unit: µg/m3

        :return: The pm10 of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._pm10

    @pm10.setter
    def pm10(self, pm10):
        """Sets the pm10 of this AirQualityPointHourlyData.

        Particulate matter d < 10 µm (PM10). Unit: µg/m3

        :param pm10: The pm10 of this AirQualityPointHourlyData.
        :type pm10: float
        """

        self._pm10 = pm10

    @property
    def pm25(self):
        """Gets the pm25 of this AirQualityPointHourlyData.

        Particulate matter d < 2.5 µm (PM2.5). Unit: µg/m3

        :return: The pm25 of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._pm25

    @pm25.setter
    def pm25(self, pm25):
        """Sets the pm25 of this AirQualityPointHourlyData.

        Particulate matter d < 2.5 µm (PM2.5). Unit: µg/m3

        :param pm25: The pm25 of this AirQualityPointHourlyData.
        :type pm25: float
        """

        self._pm25 = pm25

    @property
    def so2_surface(self):
        """Gets the so2_surface of this AirQualityPointHourlyData.

        Sulphur dioxide at surface level. Unit: µg/m3

        :return: The so2_surface of this AirQualityPointHourlyData.
        :rtype: float
        """
        return self._so2_surface

    @so2_surface.setter
    def so2_surface(self, so2_surface):
        """Sets the so2_surface of this AirQualityPointHourlyData.

        Sulphur dioxide at surface level. Unit: µg/m3

        :param so2_surface: The so2_surface of this AirQualityPointHourlyData.
        :type so2_surface: float
        """

        self._so2_surface = so2_surface
