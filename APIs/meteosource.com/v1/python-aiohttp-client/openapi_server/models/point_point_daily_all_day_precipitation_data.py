# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PointPointDailyAllDayPrecipitationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: float=None, type: file=None):
        """PointPointDailyAllDayPrecipitationData - a model defined in OpenAPI

        :param total: The total of this PointPointDailyAllDayPrecipitationData.
        :param type: The type of this PointPointDailyAllDayPrecipitationData.
        """
        self.openapi_types = {
            'total': float,
            'type': file
        }

        self.attribute_map = {
            'total': 'total',
            'type': 'type'
        }

        self._total = total
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PointPointDailyAllDayPrecipitationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Point_PointDailyAllDayPrecipitationData of this PointPointDailyAllDayPrecipitationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this PointPointDailyAllDayPrecipitationData.

        Total precipitation amount accumulated since last hour. (allday sum) Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h

        :return: The total of this PointPointDailyAllDayPrecipitationData.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this PointPointDailyAllDayPrecipitationData.

        Total precipitation amount accumulated since last hour. (allday sum) Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h

        :param total: The total of this PointPointDailyAllDayPrecipitationData.
        :type total: float
        """

        self._total = total

    @property
    def type(self):
        """Gets the type of this PointPointDailyAllDayPrecipitationData.

        Precipitation type, may be one of:  * `none`, it there is no precipitation * `rain` * `snow` * `rain_snow` * `ice pellets` * `frozen rain`  Unit: precipitation type

        :return: The type of this PointPointDailyAllDayPrecipitationData.
        :rtype: file
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PointPointDailyAllDayPrecipitationData.

        Precipitation type, may be one of:  * `none`, it there is no precipitation * `rain` * `snow` * `rain_snow` * `ice pellets` * `frozen rain`  Unit: precipitation type

        :param type: The type of this PointPointDailyAllDayPrecipitationData.
        :type type: file
        """

        self._type = type
