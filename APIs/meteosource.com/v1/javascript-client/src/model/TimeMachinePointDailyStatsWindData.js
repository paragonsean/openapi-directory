/**
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TimeMachinePointDailyStatsWindData model module.
 * @module model/TimeMachinePointDailyStatsWindData
 * @version v1
 */
class TimeMachinePointDailyStatsWindData {
    /**
     * Constructs a new <code>TimeMachinePointDailyStatsWindData</code>.
     * @alias module:model/TimeMachinePointDailyStatsWindData
     */
    constructor() { 
        
        TimeMachinePointDailyStatsWindData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeMachinePointDailyStatsWindData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeMachinePointDailyStatsWindData} obj Optional instance to populate.
     * @return {module:model/TimeMachinePointDailyStatsWindData} The populated <code>TimeMachinePointDailyStatsWindData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeMachinePointDailyStatsWindData();

            if (data.hasOwnProperty('avg_angle')) {
                obj['avg_angle'] = ApiClient.convertToType(data['avg_angle'], 'Number');
            }
            if (data.hasOwnProperty('avg_dir')) {
                obj['avg_dir'] = ApiClient.convertToType(data['avg_dir'], File);
            }
            if (data.hasOwnProperty('avg_speed')) {
                obj['avg_speed'] = ApiClient.convertToType(data['avg_speed'], 'Number');
            }
            if (data.hasOwnProperty('max_gust')) {
                obj['max_gust'] = ApiClient.convertToType(data['max_gust'], 'Number');
            }
            if (data.hasOwnProperty('max_speed')) {
                obj['max_speed'] = ApiClient.convertToType(data['max_speed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeMachinePointDailyStatsWindData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeMachinePointDailyStatsWindData</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Long-term average wind angle. Unit: deg
 * @member {Number} avg_angle
 */
TimeMachinePointDailyStatsWindData.prototype['avg_angle'] = undefined;

/**
 * Long-term average wind direction in 'N', 'NNE', 'NE', ... 'NNW' format. Unit: 16dir
 * @member {File} avg_dir
 */
TimeMachinePointDailyStatsWindData.prototype['avg_dir'] = undefined;

/**
 * Long-term average wind speed. Units: metric = m/s, us = mph, uk = mph, ca = km/h
 * @member {Number} avg_speed
 */
TimeMachinePointDailyStatsWindData.prototype['avg_speed'] = undefined;

/**
 * Historical daily maximum wind gust speed. Units: metric = m/s, us = mph, uk = mph, ca = km/h
 * @member {Number} max_gust
 */
TimeMachinePointDailyStatsWindData.prototype['max_gust'] = undefined;

/**
 * Historical daily maximum wind speed. Units: metric = m/s, us = mph, uk = mph, ca = km/h
 * @member {Number} max_speed
 */
TimeMachinePointDailyStatsWindData.prototype['max_speed'] = undefined;






export default TimeMachinePointDailyStatsWindData;

