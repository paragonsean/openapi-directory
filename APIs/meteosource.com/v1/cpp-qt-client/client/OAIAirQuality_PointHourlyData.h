/**
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAirQuality_PointHourlyData.h
 *
 * 
 */

#ifndef OAIAirQuality_PointHourlyData_H
#define OAIAirQuality_PointHourlyData_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAirQuality_PointHourlyData : public OAIObject {
public:
    OAIAirQuality_PointHourlyData();
    OAIAirQuality_PointHourlyData(QString json);
    ~OAIAirQuality_PointHourlyData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAerosol550() const;
    void setAerosol550(const double &aerosol_550);
    bool is_aerosol_550_Set() const;
    bool is_aerosol_550_Valid() const;

    double getAirQuality() const;
    void setAirQuality(const double &air_quality);
    bool is_air_quality_Set() const;
    bool is_air_quality_Valid() const;

    double getCoSurface() const;
    void setCoSurface(const double &co_surface);
    bool is_co_surface_Set() const;
    bool is_co_surface_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    double getDust550nm() const;
    void setDust550nm(const double &dust_550nm);
    bool is_dust_550nm_Set() const;
    bool is_dust_550nm_Valid() const;

    double getDustMixingRatio05() const;
    void setDustMixingRatio05(const double &dust_mixing_ratio_05);
    bool is_dust_mixing_ratio_05_Set() const;
    bool is_dust_mixing_ratio_05_Valid() const;

    double getNo2Surface() const;
    void setNo2Surface(const double &no2_surface);
    bool is_no2_surface_Set() const;
    bool is_no2_surface_Valid() const;

    double getNoSurface() const;
    void setNoSurface(const double &no_surface);
    bool is_no_surface_Set() const;
    bool is_no_surface_Valid() const;

    double getOzoneSurface() const;
    void setOzoneSurface(const double &ozone_surface);
    bool is_ozone_surface_Set() const;
    bool is_ozone_surface_Valid() const;

    double getOzoneTotal() const;
    void setOzoneTotal(const double &ozone_total);
    bool is_ozone_total_Set() const;
    bool is_ozone_total_Valid() const;

    double getPm10() const;
    void setPm10(const double &pm10);
    bool is_pm10_Set() const;
    bool is_pm10_Valid() const;

    double getPm25() const;
    void setPm25(const double &pm25);
    bool is_pm25_Set() const;
    bool is_pm25_Valid() const;

    double getSo2Surface() const;
    void setSo2Surface(const double &so2_surface);
    bool is_so2_surface_Set() const;
    bool is_so2_surface_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_aerosol_550;
    bool m_aerosol_550_isSet;
    bool m_aerosol_550_isValid;

    double m_air_quality;
    bool m_air_quality_isSet;
    bool m_air_quality_isValid;

    double m_co_surface;
    bool m_co_surface_isSet;
    bool m_co_surface_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    double m_dust_550nm;
    bool m_dust_550nm_isSet;
    bool m_dust_550nm_isValid;

    double m_dust_mixing_ratio_05;
    bool m_dust_mixing_ratio_05_isSet;
    bool m_dust_mixing_ratio_05_isValid;

    double m_no2_surface;
    bool m_no2_surface_isSet;
    bool m_no2_surface_isValid;

    double m_no_surface;
    bool m_no_surface_isSet;
    bool m_no_surface_isValid;

    double m_ozone_surface;
    bool m_ozone_surface_isSet;
    bool m_ozone_surface_isValid;

    double m_ozone_total;
    bool m_ozone_total_isSet;
    bool m_ozone_total_isValid;

    double m_pm10;
    bool m_pm10_isSet;
    bool m_pm10_isValid;

    double m_pm25;
    bool m_pm25_isSet;
    bool m_pm25_isValid;

    double m_so2_surface;
    bool m_so2_surface_isSet;
    bool m_so2_surface_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAirQuality_PointHourlyData)

#endif // OAIAirQuality_PointHourlyData_H
