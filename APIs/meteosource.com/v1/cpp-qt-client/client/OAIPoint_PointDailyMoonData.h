/**
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPoint_PointDailyMoonData.h
 *
 * 
 */

#ifndef OAIPoint_PointDailyMoonData_H
#define OAIPoint_PointDailyMoonData_H

#include <QJsonObject>

#include "OAIHttpFileElement.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPoint_PointDailyMoonData : public OAIObject {
public:
    OAIPoint_PointDailyMoonData();
    OAIPoint_PointDailyMoonData(QString json);
    ~OAIPoint_PointDailyMoonData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysDown() const;
    void setAlwaysDown(const bool &always_down);
    bool is_always_down_Set() const;
    bool is_always_down_Valid() const;

    bool isAlwaysUp() const;
    void setAlwaysUp(const bool &always_up);
    bool is_always_up_Set() const;
    bool is_always_up_Valid() const;

    OAIHttpFileElement getPhase() const;
    void setPhase(const OAIHttpFileElement &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    QDateTime getRise() const;
    void setRise(const QDateTime &rise);
    bool is_rise_Set() const;
    bool is_rise_Valid() const;

    QDateTime getRSet() const;
    void setRSet(const QDateTime &r_set);
    bool is_r_set_Set() const;
    bool is_r_set_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_down;
    bool m_always_down_isSet;
    bool m_always_down_isValid;

    bool m_always_up;
    bool m_always_up_isSet;
    bool m_always_up_isValid;

    OAIHttpFileElement m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    QDateTime m_rise;
    bool m_rise_isSet;
    bool m_rise_isValid;

    QDateTime m_r_set;
    bool m_r_set_isSet;
    bool m_r_set_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPoint_PointDailyMoonData)

#endif // OAIPoint_PointDailyMoonData_H
