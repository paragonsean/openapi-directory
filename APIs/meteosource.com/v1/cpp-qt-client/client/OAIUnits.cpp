/**
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnits::OAIUnits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnits::OAIUnits() {
    this->initializeModel();
}

OAIUnits::~OAIUnits() {}

void OAIUnits::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUnits::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUnits::fromJson(QString jsonString) {
    
    if ( jsonString.compare("auto", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnits::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("metric", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnits::METRIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("us", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnits::US;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("uk", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnits::UK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ca", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnits::CA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUnits::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUnits::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUnits::AUTO:
            val = "auto";
            break;
        case eOAIUnits::METRIC:
            val = "metric";
            break;
        case eOAIUnits::US:
            val = "us";
            break;
        case eOAIUnits::UK:
            val = "uk";
            break;
        case eOAIUnits::CA:
            val = "ca";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUnits::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUnits::eOAIUnits OAIUnits::getValue() const {
    return m_value;
}

void OAIUnits::setValue(const OAIUnits::eOAIUnits& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUnits::isSet() const {
    
    return m_value_isSet;
}

bool OAIUnits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
