/**
 * Interactive documentation for your Premium plan
 *   This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeMachine_PointDailyStatsTemperatureData.h
 *
 * 
 */

#ifndef OAITimeMachine_PointDailyStatsTemperatureData_H
#define OAITimeMachine_PointDailyStatsTemperatureData_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimeMachine_PointDailyStatsTemperatureData : public OAIObject {
public:
    OAITimeMachine_PointDailyStatsTemperatureData();
    OAITimeMachine_PointDailyStatsTemperatureData(QString json);
    ~OAITimeMachine_PointDailyStatsTemperatureData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAvg() const;
    void setAvg(const double &avg);
    bool is_avg_Set() const;
    bool is_avg_Valid() const;

    double getAvgMax() const;
    void setAvgMax(const double &avg_max);
    bool is_avg_max_Set() const;
    bool is_avg_max_Valid() const;

    double getAvgMin() const;
    void setAvgMin(const double &avg_min);
    bool is_avg_min_Set() const;
    bool is_avg_min_Valid() const;

    double getRecordMax() const;
    void setRecordMax(const double &record_max);
    bool is_record_max_Set() const;
    bool is_record_max_Valid() const;

    double getRecordMin() const;
    void setRecordMin(const double &record_min);
    bool is_record_min_Set() const;
    bool is_record_min_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_avg;
    bool m_avg_isSet;
    bool m_avg_isValid;

    double m_avg_max;
    bool m_avg_max_isSet;
    bool m_avg_max_isValid;

    double m_avg_min;
    bool m_avg_min_isSet;
    bool m_avg_min_isValid;

    double m_record_max;
    bool m_record_max_isSet;
    bool m_record_max_isValid;

    double m_record_min;
    bool m_record_min_isSet;
    bool m_record_min_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeMachine_PointDailyStatsTemperatureData)

#endif // OAITimeMachine_PointDailyStatsTemperatureData_H
