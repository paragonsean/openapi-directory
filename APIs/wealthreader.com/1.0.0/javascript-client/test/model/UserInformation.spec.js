/**
 * Wealth Reader API
 * Las APIs regulatorias basadas en PSD2 proporcionan acceso a cierta información financiera como saldos de cuentas bancarias y transacciones. Sin embargo, hay otras fuentes de información patrimonial que no son accesibles por estas APIs. La API de Wealth Reader amplía la información ofrecida por las APIs regulatorias proporcionando acceso en tiempo real a las fuentes patrimoniales adicionales en cualquier entidad del mundo. Existen otros dos documentos relacionados que te ayudarán a integrar la API de Wealth Reader. Uno es la guía de integración del widget Javascript: https://docs-es.wealthreader.com/, y el  otro una colección Postman basada en esta documentación.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@wealthreader.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WealthReaderApi);
  }
}(this, function(expect, WealthReaderApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WealthReaderApi.UserInformation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserInformation', function() {
    it('should create an instance of UserInformation', function() {
      // uncomment below and update the code to test UserInformation
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be.a(WealthReaderApi.UserInformation);
    });

    it('should have the property ID (base name: "ID")', function() {
      // uncomment below and update the code to test the property ID
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property birthDate (base name: "birth_date")', function() {
      // uncomment below and update the code to test the property birthDate
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property birthPlace (base name: "birth_place")', function() {
      // uncomment below and update the code to test the property birthPlace
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property cellPhone (base name: "cell_phone")', function() {
      // uncomment below and update the code to test the property cellPhone
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property job (base name: "job")', function() {
      // uncomment below and update the code to test the property job
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property maritalStatus (base name: "marital_status")', function() {
      // uncomment below and update the code to test the property maritalStatus
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new WealthReaderApi.UserInformation();
      //expect(instance).to.be();
    });

  });

}));
