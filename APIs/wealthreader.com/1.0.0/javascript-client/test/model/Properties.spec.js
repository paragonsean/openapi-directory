/**
 * Wealth Reader API
 * Las APIs regulatorias basadas en PSD2 proporcionan acceso a cierta información financiera como saldos de cuentas bancarias y transacciones. Sin embargo, hay otras fuentes de información patrimonial que no son accesibles por estas APIs. La API de Wealth Reader amplía la información ofrecida por las APIs regulatorias proporcionando acceso en tiempo real a las fuentes patrimoniales adicionales en cualquier entidad del mundo. Existen otros dos documentos relacionados que te ayudarán a integrar la API de Wealth Reader. Uno es la guía de integración del widget Javascript: https://docs-es.wealthreader.com/, y el  otro una colección Postman basada en esta documentación.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@wealthreader.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WealthReaderApi);
  }
}(this, function(expect, WealthReaderApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WealthReaderApi.Properties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Properties', function() {
    it('should create an instance of Properties', function() {
      // uncomment below and update the code to test Properties
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be.a(WealthReaderApi.Properties);
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property historicPrices (base name: "historic_prices")', function() {
      // uncomment below and update the code to test the property historicPrices
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property purpose (base name: "purpose")', function() {
      // uncomment below and update the code to test the property purpose
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property tradingPrice (base name: "trading_price")', function() {
      // uncomment below and update the code to test the property tradingPrice
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property tradingYear (base name: "trading_year")', function() {
      // uncomment below and update the code to test the property tradingYear
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new WealthReaderApi.Properties();
      //expect(instance).to.be();
    });

  });

}));
