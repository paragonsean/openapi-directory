/**
 * Wealth Reader API
 * Las APIs regulatorias basadas en PSD2 proporcionan acceso a cierta información financiera como saldos de cuentas bancarias y transacciones. Sin embargo, hay otras fuentes de información patrimonial que no son accesibles por estas APIs. La API de Wealth Reader amplía la información ofrecida por las APIs regulatorias proporcionando acceso en tiempo real a las fuentes patrimoniales adicionales en cualquier entidad del mundo. Existen otros dos documentos relacionados que te ayudarán a integrar la API de Wealth Reader. Uno es la guía de integración del widget Javascript: https://docs-es.wealthreader.com/, y el  otro una colección Postman basada en esta documentación.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@wealthreader.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Accounts from './model/Accounts';
import Cards from './model/Cards';
import Contracts from './model/Contracts';
import Entities from './model/Entities';
import EntityData from './model/EntityData';
import EntityDataAnyOf from './model/EntityDataAnyOf';
import EntityDataAnyOf1 from './model/EntityDataAnyOf1';
import EntityDataAnyOf2 from './model/EntityDataAnyOf2';
import EntityDataAnyOf3 from './model/EntityDataAnyOf3';
import Error from './model/Error';
import ErrorCodes from './model/ErrorCodes';
import ErrorDetail from './model/ErrorDetail';
import Owner from './model/Owner';
import Portfolios from './model/Portfolios';
import Properties from './model/Properties';
import PropertiesHistoricPricesInner from './model/PropertiesHistoricPricesInner';
import Statistics from './model/Statistics';
import UserInformation from './model/UserInformation';
import EntityDataApi from './api/EntityDataApi';


/**
* Las APIs regulatorias basadas en PSD2 proporcionan acceso a cierta información financiera como saldos de cuentas bancarias y transacciones. Sin embargo, hay otras fuentes de información patrimonial que no son accesibles por estas APIs. La API de Wealth Reader amplía la información ofrecida por las APIs regulatorias proporcionando acceso en tiempo real a las fuentes patrimoniales adicionales en cualquier entidad del mundo. Existen otros dos documentos relacionados que te ayudarán a integrar la API de Wealth Reader. Uno es la guía de integración del widget Javascript: https://docs-es.wealthreader.com/, y el  otro una colección Postman basada en esta documentación..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WealthReaderApi = require('index'); // See note below*.
* var xxxSvc = new WealthReaderApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WealthReaderApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WealthReaderApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WealthReaderApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Accounts model constructor.
     * @property {module:model/Accounts}
     */
    Accounts,

    /**
     * The Cards model constructor.
     * @property {module:model/Cards}
     */
    Cards,

    /**
     * The Contracts model constructor.
     * @property {module:model/Contracts}
     */
    Contracts,

    /**
     * The Entities model constructor.
     * @property {module:model/Entities}
     */
    Entities,

    /**
     * The EntityData model constructor.
     * @property {module:model/EntityData}
     */
    EntityData,

    /**
     * The EntityDataAnyOf model constructor.
     * @property {module:model/EntityDataAnyOf}
     */
    EntityDataAnyOf,

    /**
     * The EntityDataAnyOf1 model constructor.
     * @property {module:model/EntityDataAnyOf1}
     */
    EntityDataAnyOf1,

    /**
     * The EntityDataAnyOf2 model constructor.
     * @property {module:model/EntityDataAnyOf2}
     */
    EntityDataAnyOf2,

    /**
     * The EntityDataAnyOf3 model constructor.
     * @property {module:model/EntityDataAnyOf3}
     */
    EntityDataAnyOf3,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorCodes model constructor.
     * @property {module:model/ErrorCodes}
     */
    ErrorCodes,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The Owner model constructor.
     * @property {module:model/Owner}
     */
    Owner,

    /**
     * The Portfolios model constructor.
     * @property {module:model/Portfolios}
     */
    Portfolios,

    /**
     * The Properties model constructor.
     * @property {module:model/Properties}
     */
    Properties,

    /**
     * The PropertiesHistoricPricesInner model constructor.
     * @property {module:model/PropertiesHistoricPricesInner}
     */
    PropertiesHistoricPricesInner,

    /**
     * The Statistics model constructor.
     * @property {module:model/Statistics}
     */
    Statistics,

    /**
     * The UserInformation model constructor.
     * @property {module:model/UserInformation}
     */
    UserInformation,

    /**
    * The EntityDataApi service constructor.
    * @property {module:api/EntityDataApi}
    */
    EntityDataApi
};
