/*
 * Prime ReportStream
 * A router of public health data from multiple senders and receivers
 *
 * The version of the OpenAPI document: 0.2.0-oas3
 * Contact: reportstream@cdc.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Organization;
import org.openapitools.client.model.Receiver;
import org.openapitools.client.model.Report;
import org.openapitools.client.model.Sender;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Post a report to the data hub
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportsPostTest() throws ApiException {
        String client = null;
        String body = null;
        String option = null;
        List<String> _default = null;
        List<String> routeTo = null;
        Report response = api.reportsPost(client, body, option, _default, routeTo);
        // TODO: test validations
    }

    /**
     * The settings for all organizations of the system. Must have admin access.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsGetTest() throws ApiException {
        List<Organization> response = api.settingsOrganizationsGet();
        // TODO: test validations
    }

    /**
     * Retrived the last modified for all settings of the system. Must have admin access.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsHeadTest() throws ApiException {
        api.settingsOrganizationsHead();
        // TODO: test validations
    }

    /**
     * Delete an organization (and the associated receivers and senders)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameDeleteTest() throws ApiException {
        String organizationName = null;
        Organization response = api.settingsOrganizationsOrganizationNameDelete(organizationName);
        // TODO: test validations
    }

    /**
     * A single organization settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameGetTest() throws ApiException {
        String organizationName = null;
        Organization response = api.settingsOrganizationsOrganizationNameGet(organizationName);
        // TODO: test validations
    }

    /**
     * Create or update the direct settings associated with an organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNamePutTest() throws ApiException {
        String organizationName = null;
        Organization organization = null;
        Organization response = api.settingsOrganizationsOrganizationNamePut(organizationName, organization);
        // TODO: test validations
    }

    /**
     * A list of receivers and their current settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameReceiversGetTest() throws ApiException {
        String organizationName = null;
        List<Receiver> response = api.settingsOrganizationsOrganizationNameReceiversGet(organizationName);
        // TODO: test validations
    }

    /**
     * Delete a receiver
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameReceiversReceiverNameDeleteTest() throws ApiException {
        String organizationName = null;
        String receiverName = null;
        Receiver response = api.settingsOrganizationsOrganizationNameReceiversReceiverNameDelete(organizationName, receiverName);
        // TODO: test validations
    }

    /**
     * The settings of a single of receiver
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameReceiversReceiverNameGetTest() throws ApiException {
        String organizationName = null;
        String receiverName = null;
        Receiver response = api.settingsOrganizationsOrganizationNameReceiversReceiverNameGet(organizationName, receiverName);
        // TODO: test validations
    }

    /**
     * Update a single reciever
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameReceiversReceiverNamePutTest() throws ApiException {
        String organizationName = null;
        String receiverName = null;
        Receiver receiver = null;
        Receiver response = api.settingsOrganizationsOrganizationNameReceiversReceiverNamePut(organizationName, receiverName, receiver);
        // TODO: test validations
    }

    /**
     * A list of senders
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameSendersGetTest() throws ApiException {
        String organizationName = null;
        List<Sender> response = api.settingsOrganizationsOrganizationNameSendersGet(organizationName);
        // TODO: test validations
    }

    /**
     * Delete a sender
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameSendersSenderNameDeleteTest() throws ApiException {
        String organizationName = null;
        String senderName = null;
        Sender response = api.settingsOrganizationsOrganizationNameSendersSenderNameDelete(organizationName, senderName);
        // TODO: test validations
    }

    /**
     * The settings of a single of sender
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameSendersSenderNameGetTest() throws ApiException {
        String organizationName = null;
        String senderName = null;
        Sender response = api.settingsOrganizationsOrganizationNameSendersSenderNameGet(organizationName, senderName);
        // TODO: test validations
    }

    /**
     * Update a single sender
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settingsOrganizationsOrganizationNameSendersSenderNamePutTest() throws ApiException {
        String organizationName = null;
        String senderName = null;
        Sender sender = null;
        List<Sender> response = api.settingsOrganizationsOrganizationNameSendersSenderNamePut(organizationName, senderName, sender);
        // TODO: test validations
    }

}
