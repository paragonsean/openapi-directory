/**
 * Prime ReportStream
 * A router of public health data from multiple senders and receivers
 *
 * The version of the OpenAPI document: 0.2.0-oas3
 * Contact: reportstream@cdc.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReport.h
 *
 * 
 */

#ifndef OAIReport_H
#define OAIReport_H

#include <QJsonObject>

#include "OAIDestination.h"
#include "OAIDetail.h"
#include "OAIItemRouting.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestination;
class OAIDetail;
class OAIItemRouting;

class OAIReport : public OAIObject {
public:
    OAIReport();
    OAIReport(QString json);
    ~OAIReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDestinationCount() const;
    void setDestinationCount(const qint32 &destination_count);
    bool is_destination_count_Set() const;
    bool is_destination_count_Valid() const;

    QList<OAIDestination> getDestinations() const;
    void setDestinations(const QList<OAIDestination> &destinations);
    bool is_destinations_Set() const;
    bool is_destinations_Valid() const;

    qint32 getErrorCount() const;
    void setErrorCount(const qint32 &error_count);
    bool is_error_count_Set() const;
    bool is_error_count_Valid() const;

    QList<OAIDetail> getErrors() const;
    void setErrors(const QList<OAIDetail> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getReportItemCount() const;
    void setReportItemCount(const qint32 &report_item_count);
    bool is_report_item_count_Set() const;
    bool is_report_item_count_Valid() const;

    QList<OAIItemRouting> getRouting() const;
    void setRouting(const QList<OAIItemRouting> &routing);
    bool is_routing_Set() const;
    bool is_routing_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    qint32 getWarningCount() const;
    void setWarningCount(const qint32 &warning_count);
    bool is_warning_count_Set() const;
    bool is_warning_count_Valid() const;

    QList<OAIDetail> getWarnings() const;
    void setWarnings(const QList<OAIDetail> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_destination_count;
    bool m_destination_count_isSet;
    bool m_destination_count_isValid;

    QList<OAIDestination> m_destinations;
    bool m_destinations_isSet;
    bool m_destinations_isValid;

    qint32 m_error_count;
    bool m_error_count_isSet;
    bool m_error_count_isValid;

    QList<OAIDetail> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_report_item_count;
    bool m_report_item_count_isSet;
    bool m_report_item_count_isValid;

    QList<OAIItemRouting> m_routing;
    bool m_routing_isSet;
    bool m_routing_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    qint32 m_warning_count;
    bool m_warning_count_isSet;
    bool m_warning_count_isValid;

    QList<OAIDetail> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReport)

#endif // OAIReport_H
