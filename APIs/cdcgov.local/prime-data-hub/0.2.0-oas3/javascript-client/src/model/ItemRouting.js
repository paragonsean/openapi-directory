/**
 * Prime ReportStream
 * A router of public health data from multiple senders and receivers
 *
 * The version of the OpenAPI document: 0.2.0-oas3
 * Contact: reportstream@cdc.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItemRouting model module.
 * @module model/ItemRouting
 * @version 0.2.0-oas3
 */
class ItemRouting {
    /**
     * Constructs a new <code>ItemRouting</code>.
     * @alias module:model/ItemRouting
     */
    constructor() { 
        
        ItemRouting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ItemRouting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemRouting} obj Optional instance to populate.
     * @return {module:model/ItemRouting} The populated <code>ItemRouting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItemRouting();

            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], ['String']);
            }
            if (data.hasOwnProperty('reportIndex')) {
                obj['reportIndex'] = ApiClient.convertToType(data['reportIndex'], 'Number');
            }
            if (data.hasOwnProperty('trackingId')) {
                obj['trackingId'] = ApiClient.convertToType(data['trackingId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItemRouting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItemRouting</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['destinations'])) {
            throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
        }
        // ensure the json data is a string
        if (data['trackingId'] && !(typeof data['trackingId'] === 'string' || data['trackingId'] instanceof String)) {
            throw new Error("Expected the field `trackingId` to be a primitive type in the JSON string but got " + data['trackingId']);
        }

        return true;
    }


}



/**
 * The organization and service destinations
 * @member {Array.<String>} destinations
 */
ItemRouting.prototype['destinations'] = undefined;

/**
 * the index of the item in the submitted report (0 based)
 * @member {Number} reportIndex
 */
ItemRouting.prototype['reportIndex'] = undefined;

/**
 * The tracking id provided by the sender defined in the schema, null otherwise
 * @member {String} trackingId
 */
ItemRouting.prototype['trackingId'] = undefined;






export default ItemRouting;

