/**
 * Prime ReportStream
 * A router of public health data from multiple senders and receivers
 *
 * The version of the OpenAPI document: 0.2.0-oas3
 * Contact: reportstream@cdc.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PrimeReportStream);
  }
}(this, function(expect, PrimeReportStream) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PrimeReportStream.ReceiverTranslationsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReceiverTranslationsInner', function() {
    it('should create an instance of ReceiverTranslationsInner', function() {
      // uncomment below and update the code to test ReceiverTranslationsInner
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be.a(PrimeReportStream.ReceiverTranslationsInner);
    });

    it('should have the property format (base name: "format")', function() {
      // uncomment below and update the code to test the property format
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property nameFormat (base name: "nameFormat")', function() {
      // uncomment below and update the code to test the property nameFormat
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property receivingOrganization (base name: "receivingOrganization")', function() {
      // uncomment below and update the code to test the property receivingOrganization
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property schemaName (base name: "schemaName")', function() {
      // uncomment below and update the code to test the property schemaName
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property transport (base name: "transport")', function() {
      // uncomment below and update the code to test the property transport
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property convertTimestampToDateTime (base name: "convertTimestampToDateTime")', function() {
      // uncomment below and update the code to test the property convertTimestampToDateTime
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property defaultAoeToUnknown (base name: "defaultAoeToUnknown")', function() {
      // uncomment below and update the code to test the property defaultAoeToUnknown
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property includeAOE (base name: "includeAOE")', function() {
      // uncomment below and update the code to test the property includeAOE
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberFormatting (base name: "phoneNumberFormatting")', function() {
      // uncomment below and update the code to test the property phoneNumberFormatting
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property receivingApplicationName (base name: "receivingApplicationName")', function() {
      // uncomment below and update the code to test the property receivingApplicationName
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property receivingApplicationOID (base name: "receivingApplicationOID")', function() {
      // uncomment below and update the code to test the property receivingApplicationOID
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property receivingFacilityName (base name: "receivingFacilityName")', function() {
      // uncomment below and update the code to test the property receivingFacilityName
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property receivingFacilityOID (base name: "receivingFacilityOID")', function() {
      // uncomment below and update the code to test the property receivingFacilityOID
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property reportingFacilityId (base name: "reportingFacilityId")', function() {
      // uncomment below and update the code to test the property reportingFacilityId
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property reportingFacilityIdType (base name: "reportingFacilityIdType")', function() {
      // uncomment below and update the code to test the property reportingFacilityIdType
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property reportingFacilityName (base name: "reportingFacilityName")', function() {
      // uncomment below and update the code to test the property reportingFacilityName
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property suppressAoe (base name: "suppressAoe")', function() {
      // uncomment below and update the code to test the property suppressAoe
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property suppressHl7Fields (base name: "suppressHl7Fields")', function() {
      // uncomment below and update the code to test the property suppressHl7Fields
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property suppressQstForAoe (base name: "suppressQstForAoe")', function() {
      // uncomment below and update the code to test the property suppressQstForAoe
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property truncateHDNamespaceIds (base name: "truncateHDNamespaceIds")', function() {
      // uncomment below and update the code to test the property truncateHDNamespaceIds
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property useBatchHeaders (base name: "useBatchHeaders")', function() {
      // uncomment below and update the code to test the property useBatchHeaders
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property useBlankInsteadOfUnknown (base name: "useBlankInsteadOfUnknown")', function() {
      // uncomment below and update the code to test the property useBlankInsteadOfUnknown
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property usePid14ForPatientEmail (base name: "usePid14ForPatientEmail")', function() {
      // uncomment below and update the code to test the property usePid14ForPatientEmail
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

    it('should have the property useTestProcessingMode (base name: "useTestProcessingMode")', function() {
      // uncomment below and update the code to test the property useTestProcessingMode
      //var instance = new PrimeReportStream.ReceiverTranslationsInner();
      //expect(instance).to.be();
    });

  });

}));
