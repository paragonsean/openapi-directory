/**
 * Prime ReportStream
 * A router of public health data from multiple senders and receivers
 *
 * The version of the OpenAPI document: 0.2.0-oas3
 * Contact: reportstream@cdc.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PrimeReportStream);
  }
}(this, function(expect, PrimeReportStream) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PrimeReportStream.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('reportsPost', function() {
      it('should call reportsPost successfully', function(done) {
        //uncomment below and update the code to test reportsPost
        //instance.reportsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsGet', function() {
      it('should call settingsOrganizationsGet successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsGet
        //instance.settingsOrganizationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsHead', function() {
      it('should call settingsOrganizationsHead successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsHead
        //instance.settingsOrganizationsHead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameDelete', function() {
      it('should call settingsOrganizationsOrganizationNameDelete successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameDelete
        //instance.settingsOrganizationsOrganizationNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameGet', function() {
      it('should call settingsOrganizationsOrganizationNameGet successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameGet
        //instance.settingsOrganizationsOrganizationNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNamePut', function() {
      it('should call settingsOrganizationsOrganizationNamePut successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNamePut
        //instance.settingsOrganizationsOrganizationNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameReceiversGet', function() {
      it('should call settingsOrganizationsOrganizationNameReceiversGet successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameReceiversGet
        //instance.settingsOrganizationsOrganizationNameReceiversGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameReceiversReceiverNameDelete', function() {
      it('should call settingsOrganizationsOrganizationNameReceiversReceiverNameDelete successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameReceiversReceiverNameDelete
        //instance.settingsOrganizationsOrganizationNameReceiversReceiverNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameReceiversReceiverNameGet', function() {
      it('should call settingsOrganizationsOrganizationNameReceiversReceiverNameGet successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameReceiversReceiverNameGet
        //instance.settingsOrganizationsOrganizationNameReceiversReceiverNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameReceiversReceiverNamePut', function() {
      it('should call settingsOrganizationsOrganizationNameReceiversReceiverNamePut successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameReceiversReceiverNamePut
        //instance.settingsOrganizationsOrganizationNameReceiversReceiverNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameSendersGet', function() {
      it('should call settingsOrganizationsOrganizationNameSendersGet successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameSendersGet
        //instance.settingsOrganizationsOrganizationNameSendersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameSendersSenderNameDelete', function() {
      it('should call settingsOrganizationsOrganizationNameSendersSenderNameDelete successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameSendersSenderNameDelete
        //instance.settingsOrganizationsOrganizationNameSendersSenderNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameSendersSenderNameGet', function() {
      it('should call settingsOrganizationsOrganizationNameSendersSenderNameGet successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameSendersSenderNameGet
        //instance.settingsOrganizationsOrganizationNameSendersSenderNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsOrganizationsOrganizationNameSendersSenderNamePut', function() {
      it('should call settingsOrganizationsOrganizationNameSendersSenderNamePut successfully', function(done) {
        //uncomment below and update the code to test settingsOrganizationsOrganizationNameSendersSenderNamePut
        //instance.settingsOrganizationsOrganizationNameSendersSenderNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
