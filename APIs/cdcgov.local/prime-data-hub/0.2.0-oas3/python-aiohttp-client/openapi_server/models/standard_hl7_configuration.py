# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.standard_hl7_configuration_transport import StandardHL7ConfigurationTransport
from openapi_server import util


class StandardHL7Configuration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, convert_timestamp_to_date_time: str=None, default_aoe_to_unknown: bool=False, include_aoe: bool=None, name_format: str='standard', phone_number_formatting: str='STANDARD', receiving_application_name: str=None, receiving_application_oid: str=None, receiving_facility_name: str=None, receiving_facility_oid: str=None, receiving_organization: str=None, reporting_facility_id: str=None, reporting_facility_id_type: str=None, reporting_facility_name: str=None, suppress_aoe: bool=False, suppress_hl7_fields: str=None, suppress_qst_for_aoe: bool=False, transport: StandardHL7ConfigurationTransport=None, truncate_hd_namespace_ids: bool=False, type: str=None, use_batch_headers: bool=None, use_blank_instead_of_unknown: str=None, use_pid14_for_patient_email: bool=False, use_test_processing_mode: bool=False):
        """StandardHL7Configuration - a model defined in OpenAPI

        :param convert_timestamp_to_date_time: The convert_timestamp_to_date_time of this StandardHL7Configuration.
        :param default_aoe_to_unknown: The default_aoe_to_unknown of this StandardHL7Configuration.
        :param include_aoe: The include_aoe of this StandardHL7Configuration.
        :param name_format: The name_format of this StandardHL7Configuration.
        :param phone_number_formatting: The phone_number_formatting of this StandardHL7Configuration.
        :param receiving_application_name: The receiving_application_name of this StandardHL7Configuration.
        :param receiving_application_oid: The receiving_application_oid of this StandardHL7Configuration.
        :param receiving_facility_name: The receiving_facility_name of this StandardHL7Configuration.
        :param receiving_facility_oid: The receiving_facility_oid of this StandardHL7Configuration.
        :param receiving_organization: The receiving_organization of this StandardHL7Configuration.
        :param reporting_facility_id: The reporting_facility_id of this StandardHL7Configuration.
        :param reporting_facility_id_type: The reporting_facility_id_type of this StandardHL7Configuration.
        :param reporting_facility_name: The reporting_facility_name of this StandardHL7Configuration.
        :param suppress_aoe: The suppress_aoe of this StandardHL7Configuration.
        :param suppress_hl7_fields: The suppress_hl7_fields of this StandardHL7Configuration.
        :param suppress_qst_for_aoe: The suppress_qst_for_aoe of this StandardHL7Configuration.
        :param transport: The transport of this StandardHL7Configuration.
        :param truncate_hd_namespace_ids: The truncate_hd_namespace_ids of this StandardHL7Configuration.
        :param type: The type of this StandardHL7Configuration.
        :param use_batch_headers: The use_batch_headers of this StandardHL7Configuration.
        :param use_blank_instead_of_unknown: The use_blank_instead_of_unknown of this StandardHL7Configuration.
        :param use_pid14_for_patient_email: The use_pid14_for_patient_email of this StandardHL7Configuration.
        :param use_test_processing_mode: The use_test_processing_mode of this StandardHL7Configuration.
        """
        self.openapi_types = {
            'convert_timestamp_to_date_time': str,
            'default_aoe_to_unknown': bool,
            'include_aoe': bool,
            'name_format': str,
            'phone_number_formatting': str,
            'receiving_application_name': str,
            'receiving_application_oid': str,
            'receiving_facility_name': str,
            'receiving_facility_oid': str,
            'receiving_organization': str,
            'reporting_facility_id': str,
            'reporting_facility_id_type': str,
            'reporting_facility_name': str,
            'suppress_aoe': bool,
            'suppress_hl7_fields': str,
            'suppress_qst_for_aoe': bool,
            'transport': StandardHL7ConfigurationTransport,
            'truncate_hd_namespace_ids': bool,
            'type': str,
            'use_batch_headers': bool,
            'use_blank_instead_of_unknown': str,
            'use_pid14_for_patient_email': bool,
            'use_test_processing_mode': bool
        }

        self.attribute_map = {
            'convert_timestamp_to_date_time': 'convertTimestampToDateTime',
            'default_aoe_to_unknown': 'defaultAoeToUnknown',
            'include_aoe': 'includeAOE',
            'name_format': 'nameFormat',
            'phone_number_formatting': 'phoneNumberFormatting',
            'receiving_application_name': 'receivingApplicationName',
            'receiving_application_oid': 'receivingApplicationOID',
            'receiving_facility_name': 'receivingFacilityName',
            'receiving_facility_oid': 'receivingFacilityOID',
            'receiving_organization': 'receivingOrganization',
            'reporting_facility_id': 'reportingFacilityId',
            'reporting_facility_id_type': 'reportingFacilityIdType',
            'reporting_facility_name': 'reportingFacilityName',
            'suppress_aoe': 'suppressAoe',
            'suppress_hl7_fields': 'suppressHl7Fields',
            'suppress_qst_for_aoe': 'suppressQstForAoe',
            'transport': 'transport',
            'truncate_hd_namespace_ids': 'truncateHDNamespaceIds',
            'type': 'type',
            'use_batch_headers': 'useBatchHeaders',
            'use_blank_instead_of_unknown': 'useBlankInsteadOfUnknown',
            'use_pid14_for_patient_email': 'usePid14ForPatientEmail',
            'use_test_processing_mode': 'useTestProcessingMode'
        }

        self._convert_timestamp_to_date_time = convert_timestamp_to_date_time
        self._default_aoe_to_unknown = default_aoe_to_unknown
        self._include_aoe = include_aoe
        self._name_format = name_format
        self._phone_number_formatting = phone_number_formatting
        self._receiving_application_name = receiving_application_name
        self._receiving_application_oid = receiving_application_oid
        self._receiving_facility_name = receiving_facility_name
        self._receiving_facility_oid = receiving_facility_oid
        self._receiving_organization = receiving_organization
        self._reporting_facility_id = reporting_facility_id
        self._reporting_facility_id_type = reporting_facility_id_type
        self._reporting_facility_name = reporting_facility_name
        self._suppress_aoe = suppress_aoe
        self._suppress_hl7_fields = suppress_hl7_fields
        self._suppress_qst_for_aoe = suppress_qst_for_aoe
        self._transport = transport
        self._truncate_hd_namespace_ids = truncate_hd_namespace_ids
        self._type = type
        self._use_batch_headers = use_batch_headers
        self._use_blank_instead_of_unknown = use_blank_instead_of_unknown
        self._use_pid14_for_patient_email = use_pid14_for_patient_email
        self._use_test_processing_mode = use_test_processing_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StandardHL7Configuration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StandardHL7Configuration of this StandardHL7Configuration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def convert_timestamp_to_date_time(self):
        """Gets the convert_timestamp_to_date_time of this StandardHL7Configuration.

        A comma delimited list of HL7 fields to convert to the yyyMMddHHmmss format

        :return: The convert_timestamp_to_date_time of this StandardHL7Configuration.
        :rtype: str
        """
        return self._convert_timestamp_to_date_time

    @convert_timestamp_to_date_time.setter
    def convert_timestamp_to_date_time(self, convert_timestamp_to_date_time):
        """Sets the convert_timestamp_to_date_time of this StandardHL7Configuration.

        A comma delimited list of HL7 fields to convert to the yyyMMddHHmmss format

        :param convert_timestamp_to_date_time: The convert_timestamp_to_date_time of this StandardHL7Configuration.
        :type convert_timestamp_to_date_time: str
        """

        self._convert_timestamp_to_date_time = convert_timestamp_to_date_time

    @property
    def default_aoe_to_unknown(self):
        """Gets the default_aoe_to_unknown of this StandardHL7Configuration.

        Default the AOE result to UNK

        :return: The default_aoe_to_unknown of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._default_aoe_to_unknown

    @default_aoe_to_unknown.setter
    def default_aoe_to_unknown(self, default_aoe_to_unknown):
        """Sets the default_aoe_to_unknown of this StandardHL7Configuration.

        Default the AOE result to UNK

        :param default_aoe_to_unknown: The default_aoe_to_unknown of this StandardHL7Configuration.
        :type default_aoe_to_unknown: bool
        """

        self._default_aoe_to_unknown = default_aoe_to_unknown

    @property
    def include_aoe(self):
        """Gets the include_aoe of this StandardHL7Configuration.

        Include the AOE

        :return: The include_aoe of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._include_aoe

    @include_aoe.setter
    def include_aoe(self, include_aoe):
        """Sets the include_aoe of this StandardHL7Configuration.

        Include the AOE

        :param include_aoe: The include_aoe of this StandardHL7Configuration.
        :type include_aoe: bool
        """
        if include_aoe is None:
            raise ValueError("Invalid value for `include_aoe`, must not be `None`")

        self._include_aoe = include_aoe

    @property
    def name_format(self):
        """Gets the name_format of this StandardHL7Configuration.

        The format to use for the file name generated by the translation

        :return: The name_format of this StandardHL7Configuration.
        :rtype: str
        """
        return self._name_format

    @name_format.setter
    def name_format(self, name_format):
        """Sets the name_format of this StandardHL7Configuration.

        The format to use for the file name generated by the translation

        :param name_format: The name_format of this StandardHL7Configuration.
        :type name_format: str
        """

        self._name_format = name_format

    @property
    def phone_number_formatting(self):
        """Gets the phone_number_formatting of this StandardHL7Configuration.

        How to format phone numbers (XTN fields)

        :return: The phone_number_formatting of this StandardHL7Configuration.
        :rtype: str
        """
        return self._phone_number_formatting

    @phone_number_formatting.setter
    def phone_number_formatting(self, phone_number_formatting):
        """Sets the phone_number_formatting of this StandardHL7Configuration.

        How to format phone numbers (XTN fields)

        :param phone_number_formatting: The phone_number_formatting of this StandardHL7Configuration.
        :type phone_number_formatting: str
        """
        allowed_values = ["STANDARD", "ONLY_DIGITS_IN_COMPONENT_ONE", "AREA_LOCAL_IN_COMPONENT_ONE"]  # noqa: E501
        if phone_number_formatting not in allowed_values:
            raise ValueError(
                "Invalid value for `phone_number_formatting` ({0}), must be one of {1}"
                .format(phone_number_formatting, allowed_values)
            )

        self._phone_number_formatting = phone_number_formatting

    @property
    def receiving_application_name(self):
        """Gets the receiving_application_name of this StandardHL7Configuration.

        The receiving application name (needed for HL7 formats)

        :return: The receiving_application_name of this StandardHL7Configuration.
        :rtype: str
        """
        return self._receiving_application_name

    @receiving_application_name.setter
    def receiving_application_name(self, receiving_application_name):
        """Sets the receiving_application_name of this StandardHL7Configuration.

        The receiving application name (needed for HL7 formats)

        :param receiving_application_name: The receiving_application_name of this StandardHL7Configuration.
        :type receiving_application_name: str
        """

        self._receiving_application_name = receiving_application_name

    @property
    def receiving_application_oid(self):
        """Gets the receiving_application_oid of this StandardHL7Configuration.

        The receiving application OID

        :return: The receiving_application_oid of this StandardHL7Configuration.
        :rtype: str
        """
        return self._receiving_application_oid

    @receiving_application_oid.setter
    def receiving_application_oid(self, receiving_application_oid):
        """Sets the receiving_application_oid of this StandardHL7Configuration.

        The receiving application OID

        :param receiving_application_oid: The receiving_application_oid of this StandardHL7Configuration.
        :type receiving_application_oid: str
        """

        self._receiving_application_oid = receiving_application_oid

    @property
    def receiving_facility_name(self):
        """Gets the receiving_facility_name of this StandardHL7Configuration.

        The receiving facility name

        :return: The receiving_facility_name of this StandardHL7Configuration.
        :rtype: str
        """
        return self._receiving_facility_name

    @receiving_facility_name.setter
    def receiving_facility_name(self, receiving_facility_name):
        """Sets the receiving_facility_name of this StandardHL7Configuration.

        The receiving facility name

        :param receiving_facility_name: The receiving_facility_name of this StandardHL7Configuration.
        :type receiving_facility_name: str
        """

        self._receiving_facility_name = receiving_facility_name

    @property
    def receiving_facility_oid(self):
        """Gets the receiving_facility_oid of this StandardHL7Configuration.

        The receiving facility name

        :return: The receiving_facility_oid of this StandardHL7Configuration.
        :rtype: str
        """
        return self._receiving_facility_oid

    @receiving_facility_oid.setter
    def receiving_facility_oid(self, receiving_facility_oid):
        """Sets the receiving_facility_oid of this StandardHL7Configuration.

        The receiving facility name

        :param receiving_facility_oid: The receiving_facility_oid of this StandardHL7Configuration.
        :type receiving_facility_oid: str
        """

        self._receiving_facility_oid = receiving_facility_oid

    @property
    def receiving_organization(self):
        """Gets the receiving_organization of this StandardHL7Configuration.

        The name of the receiving organization in the message

        :return: The receiving_organization of this StandardHL7Configuration.
        :rtype: str
        """
        return self._receiving_organization

    @receiving_organization.setter
    def receiving_organization(self, receiving_organization):
        """Sets the receiving_organization of this StandardHL7Configuration.

        The name of the receiving organization in the message

        :param receiving_organization: The receiving_organization of this StandardHL7Configuration.
        :type receiving_organization: str
        """

        self._receiving_organization = receiving_organization

    @property
    def reporting_facility_id(self):
        """Gets the reporting_facility_id of this StandardHL7Configuration.

        The reporting facility id (if different from CDC PRIME's OID)

        :return: The reporting_facility_id of this StandardHL7Configuration.
        :rtype: str
        """
        return self._reporting_facility_id

    @reporting_facility_id.setter
    def reporting_facility_id(self, reporting_facility_id):
        """Sets the reporting_facility_id of this StandardHL7Configuration.

        The reporting facility id (if different from CDC PRIME's OID)

        :param reporting_facility_id: The reporting_facility_id of this StandardHL7Configuration.
        :type reporting_facility_id: str
        """

        self._reporting_facility_id = reporting_facility_id

    @property
    def reporting_facility_id_type(self):
        """Gets the reporting_facility_id_type of this StandardHL7Configuration.

        The reporting facility id type (if different from OID)

        :return: The reporting_facility_id_type of this StandardHL7Configuration.
        :rtype: str
        """
        return self._reporting_facility_id_type

    @reporting_facility_id_type.setter
    def reporting_facility_id_type(self, reporting_facility_id_type):
        """Sets the reporting_facility_id_type of this StandardHL7Configuration.

        The reporting facility id type (if different from OID)

        :param reporting_facility_id_type: The reporting_facility_id_type of this StandardHL7Configuration.
        :type reporting_facility_id_type: str
        """

        self._reporting_facility_id_type = reporting_facility_id_type

    @property
    def reporting_facility_name(self):
        """Gets the reporting_facility_name of this StandardHL7Configuration.

        The reporting facility name (if different from CDC PRIME)

        :return: The reporting_facility_name of this StandardHL7Configuration.
        :rtype: str
        """
        return self._reporting_facility_name

    @reporting_facility_name.setter
    def reporting_facility_name(self, reporting_facility_name):
        """Sets the reporting_facility_name of this StandardHL7Configuration.

        The reporting facility name (if different from CDC PRIME)

        :param reporting_facility_name: The reporting_facility_name of this StandardHL7Configuration.
        :type reporting_facility_name: str
        """

        self._reporting_facility_name = reporting_facility_name

    @property
    def suppress_aoe(self):
        """Gets the suppress_aoe of this StandardHL7Configuration.

        Suppress the AOE OBX results

        :return: The suppress_aoe of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._suppress_aoe

    @suppress_aoe.setter
    def suppress_aoe(self, suppress_aoe):
        """Sets the suppress_aoe of this StandardHL7Configuration.

        Suppress the AOE OBX results

        :param suppress_aoe: The suppress_aoe of this StandardHL7Configuration.
        :type suppress_aoe: bool
        """

        self._suppress_aoe = suppress_aoe

    @property
    def suppress_hl7_fields(self):
        """Gets the suppress_hl7_fields of this StandardHL7Configuration.

        A comma delimited list of HL7 fields to suppress

        :return: The suppress_hl7_fields of this StandardHL7Configuration.
        :rtype: str
        """
        return self._suppress_hl7_fields

    @suppress_hl7_fields.setter
    def suppress_hl7_fields(self, suppress_hl7_fields):
        """Sets the suppress_hl7_fields of this StandardHL7Configuration.

        A comma delimited list of HL7 fields to suppress

        :param suppress_hl7_fields: The suppress_hl7_fields of this StandardHL7Configuration.
        :type suppress_hl7_fields: str
        """

        self._suppress_hl7_fields = suppress_hl7_fields

    @property
    def suppress_qst_for_aoe(self):
        """Gets the suppress_qst_for_aoe of this StandardHL7Configuration.

        Suppress QST component is AOE OBX segments

        :return: The suppress_qst_for_aoe of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._suppress_qst_for_aoe

    @suppress_qst_for_aoe.setter
    def suppress_qst_for_aoe(self, suppress_qst_for_aoe):
        """Sets the suppress_qst_for_aoe of this StandardHL7Configuration.

        Suppress QST component is AOE OBX segments

        :param suppress_qst_for_aoe: The suppress_qst_for_aoe of this StandardHL7Configuration.
        :type suppress_qst_for_aoe: bool
        """

        self._suppress_qst_for_aoe = suppress_qst_for_aoe

    @property
    def transport(self):
        """Gets the transport of this StandardHL7Configuration.


        :return: The transport of this StandardHL7Configuration.
        :rtype: StandardHL7ConfigurationTransport
        """
        return self._transport

    @transport.setter
    def transport(self, transport):
        """Sets the transport of this StandardHL7Configuration.


        :param transport: The transport of this StandardHL7Configuration.
        :type transport: StandardHL7ConfigurationTransport
        """
        if transport is None:
            raise ValueError("Invalid value for `transport`, must not be `None`")

        self._transport = transport

    @property
    def truncate_hd_namespace_ids(self):
        """Gets the truncate_hd_namespace_ids of this StandardHL7Configuration.

        Truncate the HD fields to HD_TRUNCATION_LIMIT

        :return: The truncate_hd_namespace_ids of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._truncate_hd_namespace_ids

    @truncate_hd_namespace_ids.setter
    def truncate_hd_namespace_ids(self, truncate_hd_namespace_ids):
        """Sets the truncate_hd_namespace_ids of this StandardHL7Configuration.

        Truncate the HD fields to HD_TRUNCATION_LIMIT

        :param truncate_hd_namespace_ids: The truncate_hd_namespace_ids of this StandardHL7Configuration.
        :type truncate_hd_namespace_ids: bool
        """

        self._truncate_hd_namespace_ids = truncate_hd_namespace_ids

    @property
    def type(self):
        """Gets the type of this StandardHL7Configuration.

        The discrimenator

        :return: The type of this StandardHL7Configuration.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StandardHL7Configuration.

        The discrimenator

        :param type: The type of this StandardHL7Configuration.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def use_batch_headers(self):
        """Gets the use_batch_headers of this StandardHL7Configuration.

        Use BHS and FHS header

        :return: The use_batch_headers of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._use_batch_headers

    @use_batch_headers.setter
    def use_batch_headers(self, use_batch_headers):
        """Sets the use_batch_headers of this StandardHL7Configuration.

        Use BHS and FHS header

        :param use_batch_headers: The use_batch_headers of this StandardHL7Configuration.
        :type use_batch_headers: bool
        """
        if use_batch_headers is None:
            raise ValueError("Invalid value for `use_batch_headers`, must not be `None`")

        self._use_batch_headers = use_batch_headers

    @property
    def use_blank_instead_of_unknown(self):
        """Gets the use_blank_instead_of_unknown of this StandardHL7Configuration.

        A comma delimited list of element names that should use blank instead of unknown

        :return: The use_blank_instead_of_unknown of this StandardHL7Configuration.
        :rtype: str
        """
        return self._use_blank_instead_of_unknown

    @use_blank_instead_of_unknown.setter
    def use_blank_instead_of_unknown(self, use_blank_instead_of_unknown):
        """Sets the use_blank_instead_of_unknown of this StandardHL7Configuration.

        A comma delimited list of element names that should use blank instead of unknown

        :param use_blank_instead_of_unknown: The use_blank_instead_of_unknown of this StandardHL7Configuration.
        :type use_blank_instead_of_unknown: str
        """

        self._use_blank_instead_of_unknown = use_blank_instead_of_unknown

    @property
    def use_pid14_for_patient_email(self):
        """Gets the use_pid14_for_patient_email of this StandardHL7Configuration.

        Use the PID-14 field for patient email instead of the standard PID-13 field

        :return: The use_pid14_for_patient_email of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._use_pid14_for_patient_email

    @use_pid14_for_patient_email.setter
    def use_pid14_for_patient_email(self, use_pid14_for_patient_email):
        """Sets the use_pid14_for_patient_email of this StandardHL7Configuration.

        Use the PID-14 field for patient email instead of the standard PID-13 field

        :param use_pid14_for_patient_email: The use_pid14_for_patient_email of this StandardHL7Configuration.
        :type use_pid14_for_patient_email: bool
        """

        self._use_pid14_for_patient_email = use_pid14_for_patient_email

    @property
    def use_test_processing_mode(self):
        """Gets the use_test_processing_mode of this StandardHL7Configuration.

        Set a test process mode flag

        :return: The use_test_processing_mode of this StandardHL7Configuration.
        :rtype: bool
        """
        return self._use_test_processing_mode

    @use_test_processing_mode.setter
    def use_test_processing_mode(self, use_test_processing_mode):
        """Sets the use_test_processing_mode of this StandardHL7Configuration.

        Set a test process mode flag

        :param use_test_processing_mode: The use_test_processing_mode of this StandardHL7Configuration.
        :type use_test_processing_mode: bool
        """

        self._use_test_processing_mode = use_test_processing_mode
