/**
 * HERE Network Positioning API v2
 * Positioning API accepts requests with radio network measurements and replies with corresponding location estimate. For more details and examples, see [Developer's Guide](https://developer.here.com/documentation/positioning). Cellular measurements are given in terms defined in 3GPP and 3GGP2 specifications, see the corresponsing documentation at http://www.3gpp.org.  Breaking changes from v1:   - JSON fields     `altaccuracy`, `baselat`, `baselng`, `cellparams`, `pilotpower`, `pnoffset`, `powrx`, `rxlevel`,     have been deprecated and replaced with     `altAccuracy`, `baseLat`, `baseLng`, `cellParams`, `pilotPower`, `pnOffset`, `rss`, `rxLevel`     respectively.   - Dependent parameters combined as a subobject.     - CDMA, GSM, WCDMA, TD-SCDMA and LTE local identification parameters for serving cell moved under `localId` property.     - GSM neighbor global ID: `lac` and `cid` for neighbor cell moved under `globalIdentity` property. 
 *
 * The version of the OpenAPI document: 2.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiHealthStatus from '../model/ApiHealthStatus';
import ApiVersion from '../model/ApiVersion';

/**
* APIInformation service.
* @module api/APIInformationApi
* @version 2.1.1
*/
export default class APIInformationApi {

    /**
    * Constructs a new APIInformationApi. 
    * @alias module:api/APIInformationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getApiVersion operation.
     * @callback module:api/APIInformationApi~getApiVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API version
     * Retrieves API Specification version information
     * @param {module:api/APIInformationApi~getApiVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiVersion}
     */
    getApiVersion(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey', 'AccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiVersion;
      return this.apiClient.callApi(
        '/version', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getHealth operation.
     * @callback module:api/APIInformationApi~getHealthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiHealthStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Service health
     * Tests basic health of the service
     * @param {module:api/APIInformationApi~getHealthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiHealthStatus}
     */
    getHealth(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey', 'AccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiHealthStatus;
      return this.apiClient.callApi(
        '/health', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
