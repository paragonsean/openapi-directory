openapi: 3.0.0
info:
  contact:
    email: support@pdfblocks.com
    name: PDF Blocks Support
    url: https://www.pdfblocks.com/support
  description: "PDF Blocks is a secure, reliable, and fast API to work with PDF documents.\
    \ Actions include: Merge PDF documents, add or remove passwords, add watermarks,\
    \ remove, extract, reverse, and rotate pages, and more."
  termsOfService: https://www.pdfblocks.com/terms
  title: PDF Blocks API
  version: 1.5.0
  x-apisguru-categories:
  - text
  x-logo:
    url: https://www.pdfblocks.com/assets/images/pdfblocks-logo.svg
  x-origin:
  - format: openapi
    url: https://www.pdfblocks.com/assets/specs/pdfblocks.openapi.yaml
    version: "3.0"
  x-providerName: pdfblocks.com
externalDocs:
  description: Documentation and examples
  url: https://www.pdfblocks.com/docs/api/v1
servers:
- description: Global endpoint (default).
  url: https://api.pdfblocks.com
- description: European-only endpoint.
  url: https://eu.api.pdfblocks.com
security:
- apiKey: []
paths:
  /v1/add_password:
    post:
      description: Protect a PDF document with a password. Encrypt the PDF document
        to prevent unauthorized access.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/add-password
      operationId: add_password_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addPasswordV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Add a password to a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/add_restrictions:
    post:
      description: "Add restrictions to prevent copying, printing, and modifying a\
        \ PDF document."
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/add-restrictions
      operationId: add_restrictions_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addRestrictionsV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Add restrictions to a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/add_watermark/image:
    post:
      description: Add an image watermark to each page of a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/add-watermark-image
      operationId: add_image_watermark_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addImageWatermarkV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Add an image watermark to a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/add_watermark/text:
    post:
      description: Add a text watermark to each page of a PDF document. Choose from
        several watermark templates.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/add-watermark-text
      operationId: add_text_watermark_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addTextWatermarkV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Add a text watermark to a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/extract_pages:
    post:
      description: Extract one or more pages from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/extract-pages
      operationId: extract_pages_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/extractPagesV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Extract pages from a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/merge_documents:
    post:
      description: Combine multiple PDF documents into a single PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/merge-documents
      operationId: merge_documents_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/mergeDocumentsV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Merge PDF documents
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/remove_pages:
    post:
      description: Remove one or more pages from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/remove-pages
      operationId: remove_pages_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/removePagesV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Remove pages from a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/remove_password:
    post:
      description: Remove the password from an encrypted PDF document. The PDF document
        will no longer require a password to open.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/remove-password
      operationId: remove_password_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/removePasswordV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Remove the password from a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/remove_restrictions:
    post:
      description: Remove all the restrictions from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/remove-restrictions
      operationId: remove_restrictions_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/removeRestrictionsV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Remove the restrictions from a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/remove_signatures:
    post:
      description: Remove the cryptographic signatures and timestamps from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/remove-signatures
      operationId: remove_signatures_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/removeRestrictionsV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Remove the signatures from a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/reverse_pages:
    post:
      description: Reverse the order of the pages of a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/reverse-pages
      operationId: reverse_pages_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/removeRestrictionsV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Reverse the pages of a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/rotate_pages:
    post:
      description: Rotate one or more pages in a PDF document.
      externalDocs:
        description: Documentation and examples
        url: https://www.pdfblocks.com/docs/api/v1/rotate-pages
      operationId: rotate_pages_v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/rotatePagesV1_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/pdf:
              schema:
                description: The output PDF document
                format: binary
                type: string
          description: The document was processed succesfully.
        "4XX":
          content:
            application/problem+json:
              example:
                errors:
                  file:
                  - Could not parse the PDF document. The file may be invalid or corrupt.
                status: 400
                title: One or more validation errors occurred.
                type: https://www.pdfblocks.com/docs/api/v1/error/400
              schema:
                $ref: '#/components/schemas/addPasswordV1_4XX_response'
          description: Error
      summary: Rotate pages in a PDF
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  responses:
    error:
      content:
        application/problem+json:
          example:
            errors:
              file:
              - Could not parse the PDF document. The file may be invalid or corrupt.
            status: 400
            title: One or more validation errors occurred.
            type: https://www.pdfblocks.com/docs/api/v1/error/400
          schema:
            $ref: '#/components/schemas/addPasswordV1_4XX_response'
      description: Error
    success:
      content:
        application/pdf:
          schema:
            description: The output PDF document
            format: binary
            type: string
      description: The document was processed succesfully.
  schemas:
    addRestrictionsV1_request:
      properties:
        allow_accessibility:
          default: true
          description: "If false, accessibility programs can't read the text or images\
            \ of the document."
          type: boolean
        allow_assemble_document:
          default: true
          description: "If false, the user can't assemble or manipulate the document."
          type: boolean
        allow_change_content:
          default: true
          description: "If false, the user can't change the content of the document."
          type: boolean
        allow_comment_and_fill_form:
          default: true
          description: "If false, the user can't add, edit or modify annotations or\
            \ fill form fields."
          type: boolean
        allow_copy_content:
          default: true
          description: "If false, the user can't copy text and images to the clipboard."
          type: boolean
        allow_fill_form:
          default: true
          description: "If false, the user can't fill forms fields."
          type: boolean
        allow_print:
          default: true
          description: "If false, the user can't print the document."
          type: boolean
        allow_print_high_resolution:
          default: true
          description: "If false, the user can't print the document in high resolution."
          type: boolean
        encryption_algorithm:
          default: AES-128
          description: The algorithm used to encrypt the PDF document.
          enum:
          - AES-128
          - AES-256
          example: AES-128
          type: string
        file:
          description: The input PDF document
          format: binary
          type: string
        owner_password:
          description: The password required to open and change permissions of the
            PDF document.
          example: pa$$word
          maxLength: 32
          minLength: 4
          pattern: "^[\\x20-\\x7e]{4,32}$"
          type: string
        user_password:
          description: "The password required to open the PDF document. If the `user_password`\
            \ is not set, the user will be able to open the document without a password."
          example: pa$$word
          maxLength: 32
          minLength: 4
          pattern: "^[\\x20-\\x7e]{4,32}$"
          type: string
      required:
      - file
      - owner_password
      type: object
    addPasswordV1_request:
      properties:
        encryption_algorithm:
          default: AES-128
          description: The algorithm used to encrypt the PDF document.
          enum:
          - AES-128
          - AES-256
          example: AES-128
          type: string
        file:
          description: The input PDF document
          format: binary
          type: string
        password:
          description: The password required to open the file.
          example: pa$$word
          maxLength: 32
          minLength: 4
          pattern: "^[\\x20-\\x7e]{4,32}$"
          type: string
      required:
      - file
      - password
      type: object
    rotatePagesV1_request:
      properties:
        angle:
          description: The angle of rotation of the pages. Positive angles rotate
            the pages clockwise. Negative angles rotate the pages counter-clockwise.
          enum:
          - 0
          - 90
          - 180
          - 270
          - -90
          - -180
          - -270
          example: 90
          format: int32
          type: integer
        file:
          description: The input PDF document
          format: binary
          type: string
        first_page:
          description: "The first page of the range to rotate in the PDF document.\
            \ If empty, it defaults to the first page of the document."
          format: int32
          minimum: 1
          type: integer
        last_page:
          description: "The last page of the range to rotate in the PDF document.\
            \ If empty, it defaults to the last page of the document."
          format: int32
          minimum: 1
          type: integer
      required:
      - angle
      - file
      type: object
    addPasswordV1_4XX_response:
      properties:
        errors:
          title: errors
          type: object
        status:
          title: status
          type: integer
        title:
          title: title
          type: string
        type:
          format: url
          title: type
          type: string
      title: addPasswordV1_4XX_response
      type: object
    addTextWatermarkV1_request:
      properties:
        color:
          default: Gray
          description: The color of the text watermark.
          enum:
          - Red
          - Blue
          - Gray
          - Black
          example: Gray
          type: string
        file:
          description: The input PDF document
          format: binary
          type: string
        line_1:
          description: The first line of text of the watermark.
          example: Jane Doe
          maxLength: 32
          type: string
        line_2:
          description: The second line of text of the watermark.
          example: "ACME, Inc"
          maxLength: 32
          type: string
        line_3:
          description: The third line of text of the watermark.
          example: Confidential
          maxLength: 32
          type: string
        margin:
          default: 1
          description: The distance in inches from the border of the page to the text
            watermark.
          example: 1
          format: float
          minimum: 0
          type: number
        template:
          default: 1001
          description: "The [id of the text watermark template](https://www.pdfblocks.com/docs/api/v1/text-watermark-templates.pdf)."
          example: 1001
          format: int32
          maximum: 66537
          minimum: 1001
          type: integer
        transparency:
          default: 75
          description: The transparency level for the text watermark from 0 (opaque)
            to 100 (transparent).
          example: 75
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - file
      - line_1
      type: object
    mergeDocumentsV1_request:
      properties:
        file:
          description: The array of PDF documents. PDF documents will be merged in
            the same order they are inserted into this array.
          items:
            description: An input PDF document.
            format: binary
            type: string
          type: array
      type: object
    removeRestrictionsV1_request:
      properties:
        file:
          description: The input PDF document
          format: binary
          type: string
      required:
      - file
      type: object
    addImageWatermarkV1_request:
      properties:
        file:
          description: The input PDF document
          format: binary
          type: string
        image:
          description: The image to add as a watermark. The format of the image can
            be either PNG or JPEG.
          format: binary
          type: string
        margin:
          default: 1
          description: The distance in inches from the border of the page to the image
            watermark.
          example: 1
          format: float
          minimum: 0
          type: number
        transparency:
          default: 50
          description: The transparency level for the image watermark from 0 (opaque)
            to 100 (transparent).
          example: 50
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - file
      - image
      type: object
    removePasswordV1_request:
      properties:
        file:
          description: The input PDF document
          format: binary
          type: string
        password:
          description: The password required to open the file.
          example: pa$$word
          maxLength: 256
          type: string
      required:
      - file
      - password
      type: object
    extractPagesV1_request:
      properties:
        file:
          description: The input PDF document
          format: binary
          type: string
        first_page:
          description: "The first page of the range to extract. If empty, it defaults\
            \ to the first page of the PDF document."
          format: int32
          minimum: 1
          type: integer
        last_page:
          description: "The last page of the range to extract. If empty, it defaults\
            \ to the last page of the PDF document."
          format: int32
          minimum: 1
          type: integer
      required:
      - file
      type: object
    removePagesV1_request:
      properties:
        file:
          description: The input PDF document
          format: binary
          type: string
        first_page:
          description: "The first page of the range to remove from the PDF document.\
            \ If empty, it defaults to the first page of the document."
          format: int32
          minimum: 1
          type: integer
        last_page:
          description: "The last page of the range to remove from the PDF document.\
            \ If empty, it defaults to the last page of the document."
          format: int32
          minimum: 1
          type: integer
      required:
      - file
      type: object
  securitySchemes:
    apiKey:
      description: "Find your API key in [your dashboard](https://dashboard.pdfblocks.com/users/sign_in),\
        \ or [get a free API key](https://www.pdfblocks.com/try-free)."
      in: header
      name: X-Api-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
