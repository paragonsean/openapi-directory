/**
 * PTV Timetable API - Version 3
 * The PTV Timetable API provides direct access to Public Transport Victoriaâ€™s public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * Documentation for Version 2 of the PTV Timetable API  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.    Credits: This page has been based on Steve Bennett's http://opentransportdata.org/, used with permission.  
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V3StopDepartureRequestRouteDirection model module.
 * @module model/V3StopDepartureRequestRouteDirection
 * @version v3
 */
class V3StopDepartureRequestRouteDirection {
    /**
     * Constructs a new <code>V3StopDepartureRequestRouteDirection</code>.
     * @alias module:model/V3StopDepartureRequestRouteDirection
     * @param directionName {String} Name of direction of travel; values returned by Directions API - v3/directions
     */
    constructor(directionName) { 
        
        V3StopDepartureRequestRouteDirection.initialize(this, directionName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, directionName) { 
        obj['direction_name'] = directionName;
    }

    /**
     * Constructs a <code>V3StopDepartureRequestRouteDirection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V3StopDepartureRequestRouteDirection} obj Optional instance to populate.
     * @return {module:model/V3StopDepartureRequestRouteDirection} The populated <code>V3StopDepartureRequestRouteDirection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V3StopDepartureRequestRouteDirection();

            if (data.hasOwnProperty('direction_id')) {
                obj['direction_id'] = ApiClient.convertToType(data['direction_id'], 'Number');
            }
            if (data.hasOwnProperty('direction_name')) {
                obj['direction_name'] = ApiClient.convertToType(data['direction_name'], 'String');
            }
            if (data.hasOwnProperty('route_id')) {
                obj['route_id'] = ApiClient.convertToType(data['route_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V3StopDepartureRequestRouteDirection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V3StopDepartureRequestRouteDirection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of V3StopDepartureRequestRouteDirection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['direction_name'] && !(typeof data['direction_name'] === 'string' || data['direction_name'] instanceof String)) {
            throw new Error("Expected the field `direction_name` to be a primitive type in the JSON string but got " + data['direction_name']);
        }
        // ensure the json data is a string
        if (data['route_id'] && !(typeof data['route_id'] === 'string' || data['route_id'] instanceof String)) {
            throw new Error("Expected the field `route_id` to be a primitive type in the JSON string but got " + data['route_id']);
        }

        return true;
    }


}

V3StopDepartureRequestRouteDirection.RequiredProperties = ["direction_name"];

/**
 * Direction of travel identifier; values returned by Directions API - v3/directions
 * @member {Number} direction_id
 */
V3StopDepartureRequestRouteDirection.prototype['direction_id'] = undefined;

/**
 * Name of direction of travel; values returned by Directions API - v3/directions
 * @member {String} direction_name
 */
V3StopDepartureRequestRouteDirection.prototype['direction_name'] = undefined;

/**
 * Identifier of route; values returned by Routes API - v3/routes
 * @member {String} route_id
 */
V3StopDepartureRequestRouteDirection.prototype['route_id'] = undefined;






export default V3StopDepartureRequestRouteDirection;

