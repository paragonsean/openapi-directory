/**
 * PTV Timetable API - Version 3
 * The PTV Timetable API provides direct access to Public Transport Victoriaâ€™s public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * Documentation for Version 2 of the PTV Timetable API  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.    Credits: This page has been based on Steve Bennett's http://opentransportdata.org/, used with permission.  
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV3_ResultOutlet.h
 *
 * 
 */

#ifndef OAIV3_ResultOutlet_H
#define OAIV3_ResultOutlet_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIV3_ResultOutlet : public OAIObject {
public:
    OAIV3_ResultOutlet();
    OAIV3_ResultOutlet(QString json);
    ~OAIV3_ResultOutlet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOutletBusiness() const;
    void setOutletBusiness(const QString &outlet_business);
    bool is_outlet_business_Set() const;
    bool is_outlet_business_Valid() const;

    QString getOutletBusinessHourFri() const;
    void setOutletBusinessHourFri(const QString &outlet_business_hour_fri);
    bool is_outlet_business_hour_fri_Set() const;
    bool is_outlet_business_hour_fri_Valid() const;

    QString getOutletBusinessHourMon() const;
    void setOutletBusinessHourMon(const QString &outlet_business_hour_mon);
    bool is_outlet_business_hour_mon_Set() const;
    bool is_outlet_business_hour_mon_Valid() const;

    QString getOutletBusinessHourSat() const;
    void setOutletBusinessHourSat(const QString &outlet_business_hour_sat);
    bool is_outlet_business_hour_sat_Set() const;
    bool is_outlet_business_hour_sat_Valid() const;

    QString getOutletBusinessHourSun() const;
    void setOutletBusinessHourSun(const QString &outlet_business_hour_sun);
    bool is_outlet_business_hour_sun_Set() const;
    bool is_outlet_business_hour_sun_Valid() const;

    QString getOutletBusinessHourThur() const;
    void setOutletBusinessHourThur(const QString &outlet_business_hour_thur);
    bool is_outlet_business_hour_thur_Set() const;
    bool is_outlet_business_hour_thur_Valid() const;

    QString getOutletBusinessHourTue() const;
    void setOutletBusinessHourTue(const QString &outlet_business_hour_tue);
    bool is_outlet_business_hour_tue_Set() const;
    bool is_outlet_business_hour_tue_Valid() const;

    QString getOutletBusinessHourWed() const;
    void setOutletBusinessHourWed(const QString &outlet_business_hour_wed);
    bool is_outlet_business_hour_wed_Set() const;
    bool is_outlet_business_hour_wed_Valid() const;

    float getOutletDistance() const;
    void setOutletDistance(const float &outlet_distance);
    bool is_outlet_distance_Set() const;
    bool is_outlet_distance_Valid() const;

    float getOutletLatitude() const;
    void setOutletLatitude(const float &outlet_latitude);
    bool is_outlet_latitude_Set() const;
    bool is_outlet_latitude_Valid() const;

    float getOutletLongitude() const;
    void setOutletLongitude(const float &outlet_longitude);
    bool is_outlet_longitude_Set() const;
    bool is_outlet_longitude_Valid() const;

    QString getOutletName() const;
    void setOutletName(const QString &outlet_name);
    bool is_outlet_name_Set() const;
    bool is_outlet_name_Valid() const;

    QString getOutletNotes() const;
    void setOutletNotes(const QString &outlet_notes);
    bool is_outlet_notes_Set() const;
    bool is_outlet_notes_Valid() const;

    qint32 getOutletPostcode() const;
    void setOutletPostcode(const qint32 &outlet_postcode);
    bool is_outlet_postcode_Set() const;
    bool is_outlet_postcode_Valid() const;

    QString getOutletSlidSpid() const;
    void setOutletSlidSpid(const QString &outlet_slid_spid);
    bool is_outlet_slid_spid_Set() const;
    bool is_outlet_slid_spid_Valid() const;

    QString getOutletSuburb() const;
    void setOutletSuburb(const QString &outlet_suburb);
    bool is_outlet_suburb_Set() const;
    bool is_outlet_suburb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_outlet_business;
    bool m_outlet_business_isSet;
    bool m_outlet_business_isValid;

    QString m_outlet_business_hour_fri;
    bool m_outlet_business_hour_fri_isSet;
    bool m_outlet_business_hour_fri_isValid;

    QString m_outlet_business_hour_mon;
    bool m_outlet_business_hour_mon_isSet;
    bool m_outlet_business_hour_mon_isValid;

    QString m_outlet_business_hour_sat;
    bool m_outlet_business_hour_sat_isSet;
    bool m_outlet_business_hour_sat_isValid;

    QString m_outlet_business_hour_sun;
    bool m_outlet_business_hour_sun_isSet;
    bool m_outlet_business_hour_sun_isValid;

    QString m_outlet_business_hour_thur;
    bool m_outlet_business_hour_thur_isSet;
    bool m_outlet_business_hour_thur_isValid;

    QString m_outlet_business_hour_tue;
    bool m_outlet_business_hour_tue_isSet;
    bool m_outlet_business_hour_tue_isValid;

    QString m_outlet_business_hour_wed;
    bool m_outlet_business_hour_wed_isSet;
    bool m_outlet_business_hour_wed_isValid;

    float m_outlet_distance;
    bool m_outlet_distance_isSet;
    bool m_outlet_distance_isValid;

    float m_outlet_latitude;
    bool m_outlet_latitude_isSet;
    bool m_outlet_latitude_isValid;

    float m_outlet_longitude;
    bool m_outlet_longitude_isSet;
    bool m_outlet_longitude_isValid;

    QString m_outlet_name;
    bool m_outlet_name_isSet;
    bool m_outlet_name_isValid;

    QString m_outlet_notes;
    bool m_outlet_notes_isSet;
    bool m_outlet_notes_isValid;

    qint32 m_outlet_postcode;
    bool m_outlet_postcode_isSet;
    bool m_outlet_postcode_isValid;

    QString m_outlet_slid_spid;
    bool m_outlet_slid_spid_isSet;
    bool m_outlet_slid_spid_isValid;

    QString m_outlet_suburb;
    bool m_outlet_suburb_isSet;
    bool m_outlet_suburb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV3_ResultOutlet)

#endif // OAIV3_ResultOutlet_H
