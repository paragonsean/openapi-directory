/**
 * PTV Timetable API - Version 3
 * The PTV Timetable API provides direct access to Public Transport Victoriaâ€™s public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * Documentation for Version 2 of the PTV Timetable API  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.    Credits: This page has been based on Steve Bennett's http://opentransportdata.org/, used with permission.  
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV3_Disruptions.h
 *
 * 
 */

#ifndef OAIV3_Disruptions_H
#define OAIV3_Disruptions_H

#include <QJsonObject>

#include "OAIV3_Disruption.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV3_Disruption;

class OAIV3_Disruptions : public OAIObject {
public:
    OAIV3_Disruptions();
    OAIV3_Disruptions(QString json);
    ~OAIV3_Disruptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIV3_Disruption> getFerry() const;
    void setFerry(const QList<OAIV3_Disruption> &ferry);
    bool is_ferry_Set() const;
    bool is_ferry_Valid() const;

    QList<OAIV3_Disruption> getGeneral() const;
    void setGeneral(const QList<OAIV3_Disruption> &general);
    bool is_general_Set() const;
    bool is_general_Valid() const;

    QList<OAIV3_Disruption> getInterstateTrain() const;
    void setInterstateTrain(const QList<OAIV3_Disruption> &interstate_train);
    bool is_interstate_train_Set() const;
    bool is_interstate_train_Valid() const;

    QList<OAIV3_Disruption> getMetroBus() const;
    void setMetroBus(const QList<OAIV3_Disruption> &metro_bus);
    bool is_metro_bus_Set() const;
    bool is_metro_bus_Valid() const;

    QList<OAIV3_Disruption> getMetroTrain() const;
    void setMetroTrain(const QList<OAIV3_Disruption> &metro_train);
    bool is_metro_train_Set() const;
    bool is_metro_train_Valid() const;

    QList<OAIV3_Disruption> getMetroTram() const;
    void setMetroTram(const QList<OAIV3_Disruption> &metro_tram);
    bool is_metro_tram_Set() const;
    bool is_metro_tram_Valid() const;

    QList<OAIV3_Disruption> getNightBus() const;
    void setNightBus(const QList<OAIV3_Disruption> &night_bus);
    bool is_night_bus_Set() const;
    bool is_night_bus_Valid() const;

    QList<OAIV3_Disruption> getRegionalBus() const;
    void setRegionalBus(const QList<OAIV3_Disruption> &regional_bus);
    bool is_regional_bus_Set() const;
    bool is_regional_bus_Valid() const;

    QList<OAIV3_Disruption> getRegionalCoach() const;
    void setRegionalCoach(const QList<OAIV3_Disruption> &regional_coach);
    bool is_regional_coach_Set() const;
    bool is_regional_coach_Valid() const;

    QList<OAIV3_Disruption> getRegionalTrain() const;
    void setRegionalTrain(const QList<OAIV3_Disruption> &regional_train);
    bool is_regional_train_Set() const;
    bool is_regional_train_Valid() const;

    QList<OAIV3_Disruption> getSchoolBus() const;
    void setSchoolBus(const QList<OAIV3_Disruption> &school_bus);
    bool is_school_bus_Set() const;
    bool is_school_bus_Valid() const;

    QList<OAIV3_Disruption> getSkybus() const;
    void setSkybus(const QList<OAIV3_Disruption> &skybus);
    bool is_skybus_Set() const;
    bool is_skybus_Valid() const;

    QList<OAIV3_Disruption> getTaxi() const;
    void setTaxi(const QList<OAIV3_Disruption> &taxi);
    bool is_taxi_Set() const;
    bool is_taxi_Valid() const;

    QList<OAIV3_Disruption> getTelebus() const;
    void setTelebus(const QList<OAIV3_Disruption> &telebus);
    bool is_telebus_Set() const;
    bool is_telebus_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIV3_Disruption> m_ferry;
    bool m_ferry_isSet;
    bool m_ferry_isValid;

    QList<OAIV3_Disruption> m_general;
    bool m_general_isSet;
    bool m_general_isValid;

    QList<OAIV3_Disruption> m_interstate_train;
    bool m_interstate_train_isSet;
    bool m_interstate_train_isValid;

    QList<OAIV3_Disruption> m_metro_bus;
    bool m_metro_bus_isSet;
    bool m_metro_bus_isValid;

    QList<OAIV3_Disruption> m_metro_train;
    bool m_metro_train_isSet;
    bool m_metro_train_isValid;

    QList<OAIV3_Disruption> m_metro_tram;
    bool m_metro_tram_isSet;
    bool m_metro_tram_isValid;

    QList<OAIV3_Disruption> m_night_bus;
    bool m_night_bus_isSet;
    bool m_night_bus_isValid;

    QList<OAIV3_Disruption> m_regional_bus;
    bool m_regional_bus_isSet;
    bool m_regional_bus_isValid;

    QList<OAIV3_Disruption> m_regional_coach;
    bool m_regional_coach_isSet;
    bool m_regional_coach_isValid;

    QList<OAIV3_Disruption> m_regional_train;
    bool m_regional_train_isSet;
    bool m_regional_train_isValid;

    QList<OAIV3_Disruption> m_school_bus;
    bool m_school_bus_isSet;
    bool m_school_bus_isValid;

    QList<OAIV3_Disruption> m_skybus;
    bool m_skybus_isSet;
    bool m_skybus_isValid;

    QList<OAIV3_Disruption> m_taxi;
    bool m_taxi_isSet;
    bool m_taxi_isValid;

    QList<OAIV3_Disruption> m_telebus;
    bool m_telebus_isSet;
    bool m_telebus_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV3_Disruptions)

#endif // OAIV3_Disruptions_H
