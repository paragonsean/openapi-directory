# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V3Status(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health: int=None, version: str=None):
        """V3Status - a model defined in OpenAPI

        :param health: The health of this V3Status.
        :param version: The version of this V3Status.
        """
        self.openapi_types = {
            'health': int,
            'version': str
        }

        self.attribute_map = {
            'health': 'health',
            'version': 'version'
        }

        self._health = health
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V3Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V3.Status of this V3Status.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health(self):
        """Gets the health of this V3Status.

        API system health status (0=offline, 1=online)

        :return: The health of this V3Status.
        :rtype: int
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this V3Status.

        API system health status (0=offline, 1=online)

        :param health: The health of this V3Status.
        :type health: int
        """
        allowed_values = [0, 1]  # noqa: E501
        if health not in allowed_values:
            raise ValueError(
                "Invalid value for `health` ({0}), must be one of {1}"
                .format(health, allowed_values)
            )

        self._health = health

    @property
    def version(self):
        """Gets the version of this V3Status.

        API Version number

        :return: The version of this V3Status.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this V3Status.

        API Version number

        :param version: The version of this V3Status.
        :type version: str
        """

        self._version = version
