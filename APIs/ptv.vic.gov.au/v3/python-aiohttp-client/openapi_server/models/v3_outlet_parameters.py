# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V3OutletParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_results: int=None):
        """V3OutletParameters - a model defined in OpenAPI

        :param max_results: The max_results of this V3OutletParameters.
        """
        self.openapi_types = {
            'max_results': int
        }

        self.attribute_map = {
            'max_results': 'max_results'
        }

        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V3OutletParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V3.OutletParameters of this V3OutletParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_results(self):
        """Gets the max_results of this V3OutletParameters.

        Maximum number of results returned (default = 30)

        :return: The max_results of this V3OutletParameters.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this V3OutletParameters.

        Maximum number of results returned (default = 30)

        :param max_results: The max_results of this V3OutletParameters.
        :type max_results: int
        """

        self._max_results = max_results
