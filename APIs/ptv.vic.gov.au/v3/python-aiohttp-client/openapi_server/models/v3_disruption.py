# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v3_disruption_route import V3DisruptionRoute
from openapi_server.models.v3_disruption_stop import V3DisruptionStop
from openapi_server import util


class V3Disruption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, colour: str=None, description: str=None, display_on_board: bool=None, display_status: bool=None, disruption_id: int=None, disruption_status: str=None, disruption_type: str=None, from_date: datetime=None, last_updated: datetime=None, published_on: datetime=None, routes: List[V3DisruptionRoute]=None, stops: List[V3DisruptionStop]=None, title: str=None, to_date: datetime=None, url: str=None):
        """V3Disruption - a model defined in OpenAPI

        :param colour: The colour of this V3Disruption.
        :param description: The description of this V3Disruption.
        :param display_on_board: The display_on_board of this V3Disruption.
        :param display_status: The display_status of this V3Disruption.
        :param disruption_id: The disruption_id of this V3Disruption.
        :param disruption_status: The disruption_status of this V3Disruption.
        :param disruption_type: The disruption_type of this V3Disruption.
        :param from_date: The from_date of this V3Disruption.
        :param last_updated: The last_updated of this V3Disruption.
        :param published_on: The published_on of this V3Disruption.
        :param routes: The routes of this V3Disruption.
        :param stops: The stops of this V3Disruption.
        :param title: The title of this V3Disruption.
        :param to_date: The to_date of this V3Disruption.
        :param url: The url of this V3Disruption.
        """
        self.openapi_types = {
            'colour': str,
            'description': str,
            'display_on_board': bool,
            'display_status': bool,
            'disruption_id': int,
            'disruption_status': str,
            'disruption_type': str,
            'from_date': datetime,
            'last_updated': datetime,
            'published_on': datetime,
            'routes': List[V3DisruptionRoute],
            'stops': List[V3DisruptionStop],
            'title': str,
            'to_date': datetime,
            'url': str
        }

        self.attribute_map = {
            'colour': 'colour',
            'description': 'description',
            'display_on_board': 'display_on_board',
            'display_status': 'display_status',
            'disruption_id': 'disruption_id',
            'disruption_status': 'disruption_status',
            'disruption_type': 'disruption_type',
            'from_date': 'from_date',
            'last_updated': 'last_updated',
            'published_on': 'published_on',
            'routes': 'routes',
            'stops': 'stops',
            'title': 'title',
            'to_date': 'to_date',
            'url': 'url'
        }

        self._colour = colour
        self._description = description
        self._display_on_board = display_on_board
        self._display_status = display_status
        self._disruption_id = disruption_id
        self._disruption_status = disruption_status
        self._disruption_type = disruption_type
        self._from_date = from_date
        self._last_updated = last_updated
        self._published_on = published_on
        self._routes = routes
        self._stops = stops
        self._title = title
        self._to_date = to_date
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V3Disruption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V3.Disruption of this V3Disruption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def colour(self):
        """Gets the colour of this V3Disruption.


        :return: The colour of this V3Disruption.
        :rtype: str
        """
        return self._colour

    @colour.setter
    def colour(self, colour):
        """Sets the colour of this V3Disruption.


        :param colour: The colour of this V3Disruption.
        :type colour: str
        """

        self._colour = colour

    @property
    def description(self):
        """Gets the description of this V3Disruption.

        Description of the disruption

        :return: The description of this V3Disruption.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this V3Disruption.

        Description of the disruption

        :param description: The description of this V3Disruption.
        :type description: str
        """

        self._description = description

    @property
    def display_on_board(self):
        """Gets the display_on_board of this V3Disruption.


        :return: The display_on_board of this V3Disruption.
        :rtype: bool
        """
        return self._display_on_board

    @display_on_board.setter
    def display_on_board(self, display_on_board):
        """Sets the display_on_board of this V3Disruption.


        :param display_on_board: The display_on_board of this V3Disruption.
        :type display_on_board: bool
        """

        self._display_on_board = display_on_board

    @property
    def display_status(self):
        """Gets the display_status of this V3Disruption.


        :return: The display_status of this V3Disruption.
        :rtype: bool
        """
        return self._display_status

    @display_status.setter
    def display_status(self, display_status):
        """Sets the display_status of this V3Disruption.


        :param display_status: The display_status of this V3Disruption.
        :type display_status: bool
        """

        self._display_status = display_status

    @property
    def disruption_id(self):
        """Gets the disruption_id of this V3Disruption.

        Disruption information identifier

        :return: The disruption_id of this V3Disruption.
        :rtype: int
        """
        return self._disruption_id

    @disruption_id.setter
    def disruption_id(self, disruption_id):
        """Sets the disruption_id of this V3Disruption.

        Disruption information identifier

        :param disruption_id: The disruption_id of this V3Disruption.
        :type disruption_id: int
        """

        self._disruption_id = disruption_id

    @property
    def disruption_status(self):
        """Gets the disruption_status of this V3Disruption.

        Status of the disruption (e.g. \"Planned\", \"Current\")

        :return: The disruption_status of this V3Disruption.
        :rtype: str
        """
        return self._disruption_status

    @disruption_status.setter
    def disruption_status(self, disruption_status):
        """Sets the disruption_status of this V3Disruption.

        Status of the disruption (e.g. \"Planned\", \"Current\")

        :param disruption_status: The disruption_status of this V3Disruption.
        :type disruption_status: str
        """

        self._disruption_status = disruption_status

    @property
    def disruption_type(self):
        """Gets the disruption_type of this V3Disruption.

        Type of disruption

        :return: The disruption_type of this V3Disruption.
        :rtype: str
        """
        return self._disruption_type

    @disruption_type.setter
    def disruption_type(self, disruption_type):
        """Sets the disruption_type of this V3Disruption.

        Type of disruption

        :param disruption_type: The disruption_type of this V3Disruption.
        :type disruption_type: str
        """

        self._disruption_type = disruption_type

    @property
    def from_date(self):
        """Gets the from_date of this V3Disruption.

        Date and time at which disruption begins, in ISO 8601 UTC format

        :return: The from_date of this V3Disruption.
        :rtype: datetime
        """
        return self._from_date

    @from_date.setter
    def from_date(self, from_date):
        """Sets the from_date of this V3Disruption.

        Date and time at which disruption begins, in ISO 8601 UTC format

        :param from_date: The from_date of this V3Disruption.
        :type from_date: datetime
        """

        self._from_date = from_date

    @property
    def last_updated(self):
        """Gets the last_updated of this V3Disruption.

        Date and time disruption information was last updated by PTV, in ISO 8601 UTC format

        :return: The last_updated of this V3Disruption.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this V3Disruption.

        Date and time disruption information was last updated by PTV, in ISO 8601 UTC format

        :param last_updated: The last_updated of this V3Disruption.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def published_on(self):
        """Gets the published_on of this V3Disruption.

        Date and time disruption information is published on PTV website, in ISO 8601 UTC format

        :return: The published_on of this V3Disruption.
        :rtype: datetime
        """
        return self._published_on

    @published_on.setter
    def published_on(self, published_on):
        """Sets the published_on of this V3Disruption.

        Date and time disruption information is published on PTV website, in ISO 8601 UTC format

        :param published_on: The published_on of this V3Disruption.
        :type published_on: datetime
        """

        self._published_on = published_on

    @property
    def routes(self):
        """Gets the routes of this V3Disruption.

        Route relevant to a disruption (if applicable)

        :return: The routes of this V3Disruption.
        :rtype: List[V3DisruptionRoute]
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """Sets the routes of this V3Disruption.

        Route relevant to a disruption (if applicable)

        :param routes: The routes of this V3Disruption.
        :type routes: List[V3DisruptionRoute]
        """

        self._routes = routes

    @property
    def stops(self):
        """Gets the stops of this V3Disruption.

        Stop relevant to a disruption (if applicable)

        :return: The stops of this V3Disruption.
        :rtype: List[V3DisruptionStop]
        """
        return self._stops

    @stops.setter
    def stops(self, stops):
        """Sets the stops of this V3Disruption.

        Stop relevant to a disruption (if applicable)

        :param stops: The stops of this V3Disruption.
        :type stops: List[V3DisruptionStop]
        """

        self._stops = stops

    @property
    def title(self):
        """Gets the title of this V3Disruption.

        Headline title summarising disruption information

        :return: The title of this V3Disruption.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this V3Disruption.

        Headline title summarising disruption information

        :param title: The title of this V3Disruption.
        :type title: str
        """

        self._title = title

    @property
    def to_date(self):
        """Gets the to_date of this V3Disruption.

        Date and time at which disruption ends, in ISO 8601 UTC format (returns null if unknown)

        :return: The to_date of this V3Disruption.
        :rtype: datetime
        """
        return self._to_date

    @to_date.setter
    def to_date(self, to_date):
        """Sets the to_date of this V3Disruption.

        Date and time at which disruption ends, in ISO 8601 UTC format (returns null if unknown)

        :param to_date: The to_date of this V3Disruption.
        :type to_date: datetime
        """

        self._to_date = to_date

    @property
    def url(self):
        """Gets the url of this V3Disruption.

        URL of relevant article on PTV website

        :return: The url of this V3Disruption.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this V3Disruption.

        URL of relevant article on PTV website

        :param url: The url of this V3Disruption.
        :type url: str
        """

        self._url = url
