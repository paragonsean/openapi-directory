# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v3_bulk_departures_route_direction_response import V3BulkDeparturesRouteDirectionResponse
from openapi_server.models.v3_departure import V3Departure
from openapi_server import util


class V3BulkDeparturesUpdateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, departures: List[V3Departure]=None, requested_route_direction: V3BulkDeparturesRouteDirectionResponse=None, route_direction: V3BulkDeparturesRouteDirectionResponse=None, route_direction_status: int=None, route_type: int=None, stop_id: int=None):
        """V3BulkDeparturesUpdateResponse - a model defined in OpenAPI

        :param departures: The departures of this V3BulkDeparturesUpdateResponse.
        :param requested_route_direction: The requested_route_direction of this V3BulkDeparturesUpdateResponse.
        :param route_direction: The route_direction of this V3BulkDeparturesUpdateResponse.
        :param route_direction_status: The route_direction_status of this V3BulkDeparturesUpdateResponse.
        :param route_type: The route_type of this V3BulkDeparturesUpdateResponse.
        :param stop_id: The stop_id of this V3BulkDeparturesUpdateResponse.
        """
        self.openapi_types = {
            'departures': List[V3Departure],
            'requested_route_direction': V3BulkDeparturesRouteDirectionResponse,
            'route_direction': V3BulkDeparturesRouteDirectionResponse,
            'route_direction_status': int,
            'route_type': int,
            'stop_id': int
        }

        self.attribute_map = {
            'departures': 'departures',
            'requested_route_direction': 'requested_route_direction',
            'route_direction': 'route_direction',
            'route_direction_status': 'route_direction_status',
            'route_type': 'route_type',
            'stop_id': 'stop_id'
        }

        self._departures = departures
        self._requested_route_direction = requested_route_direction
        self._route_direction = route_direction
        self._route_direction_status = route_direction_status
        self._route_type = route_type
        self._stop_id = stop_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V3BulkDeparturesUpdateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V3.BulkDeparturesUpdateResponse of this V3BulkDeparturesUpdateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def departures(self):
        """Gets the departures of this V3BulkDeparturesUpdateResponse.

        Timetabled and real-time service departures

        :return: The departures of this V3BulkDeparturesUpdateResponse.
        :rtype: List[V3Departure]
        """
        return self._departures

    @departures.setter
    def departures(self, departures):
        """Sets the departures of this V3BulkDeparturesUpdateResponse.

        Timetabled and real-time service departures

        :param departures: The departures of this V3BulkDeparturesUpdateResponse.
        :type departures: List[V3Departure]
        """

        self._departures = departures

    @property
    def requested_route_direction(self):
        """Gets the requested_route_direction of this V3BulkDeparturesUpdateResponse.


        :return: The requested_route_direction of this V3BulkDeparturesUpdateResponse.
        :rtype: V3BulkDeparturesRouteDirectionResponse
        """
        return self._requested_route_direction

    @requested_route_direction.setter
    def requested_route_direction(self, requested_route_direction):
        """Sets the requested_route_direction of this V3BulkDeparturesUpdateResponse.


        :param requested_route_direction: The requested_route_direction of this V3BulkDeparturesUpdateResponse.
        :type requested_route_direction: V3BulkDeparturesRouteDirectionResponse
        """

        self._requested_route_direction = requested_route_direction

    @property
    def route_direction(self):
        """Gets the route_direction of this V3BulkDeparturesUpdateResponse.


        :return: The route_direction of this V3BulkDeparturesUpdateResponse.
        :rtype: V3BulkDeparturesRouteDirectionResponse
        """
        return self._route_direction

    @route_direction.setter
    def route_direction(self, route_direction):
        """Sets the route_direction of this V3BulkDeparturesUpdateResponse.


        :param route_direction: The route_direction of this V3BulkDeparturesUpdateResponse.
        :type route_direction: V3BulkDeparturesRouteDirectionResponse
        """

        self._route_direction = route_direction

    @property
    def route_direction_status(self):
        """Gets the route_direction_status of this V3BulkDeparturesUpdateResponse.

        The status of the route direction (changed | unchanged).              If changed, requests should change the requested_route_direction for the route_direction supplied.

        :return: The route_direction_status of this V3BulkDeparturesUpdateResponse.
        :rtype: int
        """
        return self._route_direction_status

    @route_direction_status.setter
    def route_direction_status(self, route_direction_status):
        """Sets the route_direction_status of this V3BulkDeparturesUpdateResponse.

        The status of the route direction (changed | unchanged).              If changed, requests should change the requested_route_direction for the route_direction supplied.

        :param route_direction_status: The route_direction_status of this V3BulkDeparturesUpdateResponse.
        :type route_direction_status: int
        """
        allowed_values = [0, 1]  # noqa: E501
        if route_direction_status not in allowed_values:
            raise ValueError(
                "Invalid value for `route_direction_status` ({0}), must be one of {1}"
                .format(route_direction_status, allowed_values)
            )

        self._route_direction_status = route_direction_status

    @property
    def route_type(self):
        """Gets the route_type of this V3BulkDeparturesUpdateResponse.

        Transport mode identifier

        :return: The route_type of this V3BulkDeparturesUpdateResponse.
        :rtype: int
        """
        return self._route_type

    @route_type.setter
    def route_type(self, route_type):
        """Sets the route_type of this V3BulkDeparturesUpdateResponse.

        Transport mode identifier

        :param route_type: The route_type of this V3BulkDeparturesUpdateResponse.
        :type route_type: int
        """

        self._route_type = route_type

    @property
    def stop_id(self):
        """Gets the stop_id of this V3BulkDeparturesUpdateResponse.

        Stop identifier

        :return: The stop_id of this V3BulkDeparturesUpdateResponse.
        :rtype: int
        """
        return self._stop_id

    @stop_id.setter
    def stop_id(self, stop_id):
        """Sets the stop_id of this V3BulkDeparturesUpdateResponse.

        Stop identifier

        :param stop_id: The stop_id of this V3BulkDeparturesUpdateResponse.
        :type stop_id: int
        """

        self._stop_id = stop_id
