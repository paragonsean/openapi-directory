# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v3_run import V3Run
from openapi_server.models.v3_status import V3Status
from openapi_server import util


class V3RunResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, run: V3Run=None, status: V3Status=None):
        """V3RunResponse - a model defined in OpenAPI

        :param run: The run of this V3RunResponse.
        :param status: The status of this V3RunResponse.
        """
        self.openapi_types = {
            'run': V3Run,
            'status': V3Status
        }

        self.attribute_map = {
            'run': 'run',
            'status': 'status'
        }

        self._run = run
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V3RunResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V3.RunResponse of this V3RunResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def run(self):
        """Gets the run of this V3RunResponse.


        :return: The run of this V3RunResponse.
        :rtype: V3Run
        """
        return self._run

    @run.setter
    def run(self, run):
        """Sets the run of this V3RunResponse.


        :param run: The run of this V3RunResponse.
        :type run: V3Run
        """

        self._run = run

    @property
    def status(self):
        """Gets the status of this V3RunResponse.


        :return: The status of this V3RunResponse.
        :rtype: V3Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V3RunResponse.


        :param status: The status of this V3RunResponse.
        :type status: V3Status
        """

        self._status = status
