# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v3_disruption_mode import V3DisruptionMode
from openapi_server.models.v3_status import V3Status
from openapi_server import util


class V3DisruptionModesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disruption_modes: List[V3DisruptionMode]=None, status: V3Status=None):
        """V3DisruptionModesResponse - a model defined in OpenAPI

        :param disruption_modes: The disruption_modes of this V3DisruptionModesResponse.
        :param status: The status of this V3DisruptionModesResponse.
        """
        self.openapi_types = {
            'disruption_modes': List[V3DisruptionMode],
            'status': V3Status
        }

        self.attribute_map = {
            'disruption_modes': 'disruption_modes',
            'status': 'status'
        }

        self._disruption_modes = disruption_modes
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V3DisruptionModesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V3.DisruptionModesResponse of this V3DisruptionModesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disruption_modes(self):
        """Gets the disruption_modes of this V3DisruptionModesResponse.

        Transport mode identifiers

        :return: The disruption_modes of this V3DisruptionModesResponse.
        :rtype: List[V3DisruptionMode]
        """
        return self._disruption_modes

    @disruption_modes.setter
    def disruption_modes(self, disruption_modes):
        """Sets the disruption_modes of this V3DisruptionModesResponse.

        Transport mode identifiers

        :param disruption_modes: The disruption_modes of this V3DisruptionModesResponse.
        :type disruption_modes: List[V3DisruptionMode]
        """

        self._disruption_modes = disruption_modes

    @property
    def status(self):
        """Gets the status of this V3DisruptionModesResponse.


        :return: The status of this V3DisruptionModesResponse.
        :rtype: V3Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V3DisruptionModesResponse.


        :param status: The status of this V3DisruptionModesResponse.
        :type status: V3Status
        """

        self._status = status
