/**
 * ProxyKingdom-Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProxy.h
 *
 * 
 */

#ifndef OAIProxy_H
#define OAIProxy_H

#include <QJsonObject>

#include "OAIIsp.h"
#include "OAILocation.h"
#include "OAITimings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIsp;
class OAILocation;
class OAITimings;

class OAIProxy : public OAIObject {
public:
    OAIProxy();
    OAIProxy(QString json);
    ~OAIProxy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessType() const;
    void setAccessType(const QString &access_type);
    bool is_access_type_Set() const;
    bool is_access_type_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    bool isIsSsl() const;
    void setIsSsl(const bool &is_ssl);
    bool is_is_ssl_Set() const;
    bool is_is_ssl_Valid() const;

    OAIIsp getIsp() const;
    void setIsp(const OAIIsp &isp);
    bool is_isp_Set() const;
    bool is_isp_Valid() const;

    QString getLastTested() const;
    void setLastTested(const QString &last_tested);
    bool is_last_tested_Set() const;
    bool is_last_tested_Valid() const;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    OAITimings getTimings() const;
    void setTimings(const OAITimings &timings);
    bool is_timings_Set() const;
    bool is_timings_Valid() const;

    float getUptime() const;
    void setUptime(const float &uptime);
    bool is_uptime_Set() const;
    bool is_uptime_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_type;
    bool m_access_type_isSet;
    bool m_access_type_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    bool m_is_ssl;
    bool m_is_ssl_isSet;
    bool m_is_ssl_isValid;

    OAIIsp m_isp;
    bool m_isp_isSet;
    bool m_isp_isValid;

    QString m_last_tested;
    bool m_last_tested_isSet;
    bool m_last_tested_isValid;

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    OAITimings m_timings;
    bool m_timings_isSet;
    bool m_timings_isValid;

    float m_uptime;
    bool m_uptime_isSet;
    bool m_uptime_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProxy)

#endif // OAIProxy_H
