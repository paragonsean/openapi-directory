/**
 * ProxyKingdom-Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocation.h
 *
 * 
 */

#ifndef OAILocation_H
#define OAILocation_H

#include <QJsonObject>

#include "OAIContinent.h"
#include "OAICountry.h"
#include "OAISubdivision.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContinent;
class OAICountry;
class OAISubdivision;

class OAILocation : public OAIObject {
public:
    OAILocation();
    OAILocation(QString json);
    ~OAILocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAccuracyRadius() const;
    void setAccuracyRadius(const qint32 &accuracy_radius);
    bool is_accuracy_radius_Set() const;
    bool is_accuracy_radius_Valid() const;

    QString getCityName() const;
    void setCityName(const QString &city_name);
    bool is_city_name_Set() const;
    bool is_city_name_Valid() const;

    OAIContinent getContinent() const;
    void setContinent(const OAIContinent &continent);
    bool is_continent_Set() const;
    bool is_continent_Valid() const;

    OAICountry getCountry() const;
    void setCountry(const OAICountry &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    float getLatitude() const;
    void setLatitude(const float &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    float getLongitude() const;
    void setLongitude(const float &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QList<OAISubdivision> getSubdivisions() const;
    void setSubdivisions(const QList<OAISubdivision> &subdivisions);
    bool is_subdivisions_Set() const;
    bool is_subdivisions_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_accuracy_radius;
    bool m_accuracy_radius_isSet;
    bool m_accuracy_radius_isValid;

    QString m_city_name;
    bool m_city_name_isSet;
    bool m_city_name_isValid;

    OAIContinent m_continent;
    bool m_continent_isSet;
    bool m_continent_isValid;

    OAICountry m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    float m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    float m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QList<OAISubdivision> m_subdivisions;
    bool m_subdivisions_isSet;
    bool m_subdivisions_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocation)

#endif // OAILocation_H
