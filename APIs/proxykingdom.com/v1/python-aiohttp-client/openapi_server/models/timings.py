# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Timings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connect_time: float=None, first_byte_time: float=None, response_time: float=None):
        """Timings - a model defined in OpenAPI

        :param connect_time: The connect_time of this Timings.
        :param first_byte_time: The first_byte_time of this Timings.
        :param response_time: The response_time of this Timings.
        """
        self.openapi_types = {
            'connect_time': float,
            'first_byte_time': float,
            'response_time': float
        }

        self.attribute_map = {
            'connect_time': 'connectTime',
            'first_byte_time': 'firstByteTime',
            'response_time': 'responseTime'
        }

        self._connect_time = connect_time
        self._first_byte_time = first_byte_time
        self._response_time = response_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Timings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Timings of this Timings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connect_time(self):
        """Gets the connect_time of this Timings.


        :return: The connect_time of this Timings.
        :rtype: float
        """
        return self._connect_time

    @connect_time.setter
    def connect_time(self, connect_time):
        """Sets the connect_time of this Timings.


        :param connect_time: The connect_time of this Timings.
        :type connect_time: float
        """

        self._connect_time = connect_time

    @property
    def first_byte_time(self):
        """Gets the first_byte_time of this Timings.


        :return: The first_byte_time of this Timings.
        :rtype: float
        """
        return self._first_byte_time

    @first_byte_time.setter
    def first_byte_time(self, first_byte_time):
        """Sets the first_byte_time of this Timings.


        :param first_byte_time: The first_byte_time of this Timings.
        :type first_byte_time: float
        """

        self._first_byte_time = first_byte_time

    @property
    def response_time(self):
        """Gets the response_time of this Timings.


        :return: The response_time of this Timings.
        :rtype: float
        """
        return self._response_time

    @response_time.setter
    def response_time(self, response_time):
        """Sets the response_time of this Timings.


        :param response_time: The response_time of this Timings.
        :type response_time: float
        """

        self._response_time = response_time
