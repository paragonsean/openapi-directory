/*
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Country;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.UiLanguage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:00.947845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserSettings {
  public static final String SERIALIZED_NAME_ACCOUNTANT_EMAIL = "AccountantEmail";
  @SerializedName(SERIALIZED_NAME_ACCOUNTANT_EMAIL)
  private String accountantEmail;

  public static final String SERIALIZED_NAME_ADDRESS = "Address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_API_KEY = "ApiKey";
  @SerializedName(SERIALIZED_NAME_API_KEY)
  private String apiKey;

  public static final String SERIALIZED_NAME_API_SECRET = "ApiSecret";
  @SerializedName(SERIALIZED_NAME_API_SECRET)
  private String apiSecret;

  public static final String SERIALIZED_NAME_BACKGROUND_IMAGE = "BackgroundImage";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_IMAGE)
  private String backgroundImage;

  public static final String SERIALIZED_NAME_BANK = "Bank";
  @SerializedName(SERIALIZED_NAME_BANK)
  private String bank;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT = "BankAccount";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT)
  private String bankAccount;

  public static final String SERIALIZED_NAME_CNAME = "Cname";
  @SerializedName(SERIALIZED_NAME_CNAME)
  private String cname;

  public static final String SERIALIZED_NAME_COMPANY_REGISTRATION_NUMBER = "CompanyRegistrationNumber";
  @SerializedName(SERIALIZED_NAME_COMPANY_REGISTRATION_NUMBER)
  private String companyRegistrationNumber;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private Country country;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "CountryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private Integer countryId;

  public static final String SERIALIZED_NAME_CURRENCY = "Currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private Currency currency;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "CurrencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private Integer currencyId;

  public static final String SERIALIZED_NAME_CURRENCY_SYMBOL = "CurrencySymbol";
  @SerializedName(SERIALIZED_NAME_CURRENCY_SYMBOL)
  private String currencySymbol;

  public static final String SERIALIZED_NAME_DEFAULT_DATE_FORMAT = "DefaultDateFormat";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DATE_FORMAT)
  private String defaultDateFormat;

  public static final String SERIALIZED_NAME_DEFAULT_DUE_DATE_IN_DAYS = "DefaultDueDateInDays";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DUE_DATE_IN_DAYS)
  private Integer defaultDueDateInDays;

  public static final String SERIALIZED_NAME_DO_NOT_TRACK = "DoNotTrack";
  @SerializedName(SERIALIZED_NAME_DO_NOT_TRACK)
  private Boolean doNotTrack;

  public static final String SERIALIZED_NAME_ENABLE_CLIENT_PORTAL = "EnableClientPortal";
  @SerializedName(SERIALIZED_NAME_ENABLE_CLIENT_PORTAL)
  private Boolean enableClientPortal;

  public static final String SERIALIZED_NAME_ENABLE_PREDICTIVE_INVOICING = "EnablePredictiveInvoicing";
  @SerializedName(SERIALIZED_NAME_ENABLE_PREDICTIVE_INVOICING)
  private Boolean enablePredictiveInvoicing;

  public static final String SERIALIZED_NAME_ENABLE_RECURRING_INVOICING = "EnableRecurringInvoicing";
  @SerializedName(SERIALIZED_NAME_ENABLE_RECURRING_INVOICING)
  private Boolean enableRecurringInvoicing;

  public static final String SERIALIZED_NAME_HAS_INVOICE_LOGO = "HasInvoiceLogo";
  @SerializedName(SERIALIZED_NAME_HAS_INVOICE_LOGO)
  private Boolean hasInvoiceLogo;

  public static final String SERIALIZED_NAME_IBAN = "Iban";
  @SerializedName(SERIALIZED_NAME_IBAN)
  private String iban;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  /**
   * Gets or Sets invoiceTemplate
   */
  @JsonAdapter(InvoiceTemplateEnum.Adapter.class)
  public enum InvoiceTemplateEnum {
    DEFAULT("Default"),
    
    TEMPLATE1("Template1"),
    
    TEMPLATE2("Template2");

    private String value;

    InvoiceTemplateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InvoiceTemplateEnum fromValue(String value) {
      for (InvoiceTemplateEnum b : InvoiceTemplateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InvoiceTemplateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InvoiceTemplateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InvoiceTemplateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InvoiceTemplateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      InvoiceTemplateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INVOICE_TEMPLATE = "InvoiceTemplate";
  @SerializedName(SERIALIZED_NAME_INVOICE_TEMPLATE)
  private InvoiceTemplateEnum invoiceTemplate;

  public static final String SERIALIZED_NAME_INVOICE_TEMPLATE_COLOR_HEX = "InvoiceTemplateColorHex";
  @SerializedName(SERIALIZED_NAME_INVOICE_TEMPLATE_COLOR_HEX)
  private String invoiceTemplateColorHex;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "PhoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  /**
   * Gets or Sets profession
   */
  @JsonAdapter(ProfessionEnum.Adapter.class)
  public enum ProfessionEnum {
    OTHER("Other"),
    
    DESIGN_AND_CREATIVE("DesignAndCreative"),
    
    SOFTWARE_DEVELOPMENT("SoftwareDevelopment"),
    
    CONTENT_WRITING_AND_MARKETING("ContentWritingAndMarketing"),
    
    FREELANCERS("Freelancers"),
    
    CONSULTANTS("Consultants"),
    
    SMES("Smes"),
    
    ENTERPRISE("Enterprise"),
    
    E_COMMERCE("ECommerce"),
    
    INDIVIDUAL("Individual");

    private String value;

    ProfessionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProfessionEnum fromValue(String value) {
      for (ProfessionEnum b : ProfessionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProfessionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProfessionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProfessionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProfessionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProfessionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROFESSION = "Profession";
  @SerializedName(SERIALIZED_NAME_PROFESSION)
  private ProfessionEnum profession;

  public static final String SERIALIZED_NAME_RECEIVE_SMS_NOTIFICATIONS = "ReceiveSmsNotifications";
  @SerializedName(SERIALIZED_NAME_RECEIVE_SMS_NOTIFICATIONS)
  private Boolean receiveSmsNotifications;

  /**
   * Gets or Sets referralProgram
   */
  @JsonAdapter(ReferralProgramEnum.Adapter.class)
  public enum ReferralProgramEnum {
    ENABLED("Enabled"),
    
    DISABLED("Disabled");

    private String value;

    ReferralProgramEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReferralProgramEnum fromValue(String value) {
      for (ReferralProgramEnum b : ReferralProgramEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReferralProgramEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReferralProgramEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReferralProgramEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReferralProgramEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReferralProgramEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REFERRAL_PROGRAM = "ReferralProgram";
  @SerializedName(SERIALIZED_NAME_REFERRAL_PROGRAM)
  private ReferralProgramEnum referralProgram;

  /**
   * Gets or Sets storeCheckoutFields
   */
  @JsonAdapter(StoreCheckoutFieldsEnum.Adapter.class)
  public enum StoreCheckoutFieldsEnum {
    SHOW_MINIMUM_REQUIRED_FIELDS("ShowMinimumRequiredFields"),
    
    SHOW_ALL_FIELDS("ShowAllFields");

    private String value;

    StoreCheckoutFieldsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StoreCheckoutFieldsEnum fromValue(String value) {
      for (StoreCheckoutFieldsEnum b : StoreCheckoutFieldsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StoreCheckoutFieldsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StoreCheckoutFieldsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StoreCheckoutFieldsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StoreCheckoutFieldsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StoreCheckoutFieldsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STORE_CHECKOUT_FIELDS = "StoreCheckoutFields";
  @SerializedName(SERIALIZED_NAME_STORE_CHECKOUT_FIELDS)
  private StoreCheckoutFieldsEnum storeCheckoutFields;

  public static final String SERIALIZED_NAME_STORE_COLOR_HEX = "StoreColorHex";
  @SerializedName(SERIALIZED_NAME_STORE_COLOR_HEX)
  private String storeColorHex;

  public static final String SERIALIZED_NAME_STORE_CURRENCY = "StoreCurrency";
  @SerializedName(SERIALIZED_NAME_STORE_CURRENCY)
  private Currency storeCurrency;

  public static final String SERIALIZED_NAME_STORE_CURRENCY_ID = "StoreCurrencyId";
  @SerializedName(SERIALIZED_NAME_STORE_CURRENCY_ID)
  private Integer storeCurrencyId;

  public static final String SERIALIZED_NAME_STORE_CUSTOM_JAVA_SCRIPT = "StoreCustomJavaScript";
  @SerializedName(SERIALIZED_NAME_STORE_CUSTOM_JAVA_SCRIPT)
  private String storeCustomJavaScript;

  public static final String SERIALIZED_NAME_STORE_DESCRIPTION = "StoreDescription";
  @SerializedName(SERIALIZED_NAME_STORE_DESCRIPTION)
  private String storeDescription;

  public static final String SERIALIZED_NAME_STORE_EMAIL = "StoreEmail";
  @SerializedName(SERIALIZED_NAME_STORE_EMAIL)
  private String storeEmail;

  public static final String SERIALIZED_NAME_STORE_LANGUAGE = "StoreLanguage";
  @SerializedName(SERIALIZED_NAME_STORE_LANGUAGE)
  private UiLanguage storeLanguage;

  public static final String SERIALIZED_NAME_STORE_LANGUAGE_ID = "StoreLanguageId";
  @SerializedName(SERIALIZED_NAME_STORE_LANGUAGE_ID)
  private Integer storeLanguageId;

  public static final String SERIALIZED_NAME_STORE_NAME = "StoreName";
  @SerializedName(SERIALIZED_NAME_STORE_NAME)
  private String storeName;

  public static final String SERIALIZED_NAME_STORE_PURCHASE_EMAIL_MESSAGE = "StorePurchaseEmailMessage";
  @SerializedName(SERIALIZED_NAME_STORE_PURCHASE_EMAIL_MESSAGE)
  private String storePurchaseEmailMessage;

  public static final String SERIALIZED_NAME_STORE_PURCHASE_THANK_YOU_MESSAGE = "StorePurchaseThankYouMessage";
  @SerializedName(SERIALIZED_NAME_STORE_PURCHASE_THANK_YOU_MESSAGE)
  private String storePurchaseThankYouMessage;

  public static final String SERIALIZED_NAME_STORE_TEXT_COLOR_HEX = "StoreTextColorHex";
  @SerializedName(SERIALIZED_NAME_STORE_TEXT_COLOR_HEX)
  private String storeTextColorHex;

  public static final String SERIALIZED_NAME_STORE_URL = "StoreUrl";
  @SerializedName(SERIALIZED_NAME_STORE_URL)
  private String storeUrl;

  public static final String SERIALIZED_NAME_SUBSCRIBE_TO_PRODUCT_EMAILS = "SubscribeToProductEmails";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE_TO_PRODUCT_EMAILS)
  private Boolean subscribeToProductEmails;

  public static final String SERIALIZED_NAME_SWIFT = "Swift";
  @SerializedName(SERIALIZED_NAME_SWIFT)
  private String swift;

  public static final String SERIALIZED_NAME_TERMS = "Terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private String terms;

  public static final String SERIALIZED_NAME_USER_ID = "UserId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_SIGNATURE = "UserSignature";
  @SerializedName(SERIALIZED_NAME_USER_SIGNATURE)
  private String userSignature;

  public static final String SERIALIZED_NAME_VAT_NUMBER = "VatNumber";
  @SerializedName(SERIALIZED_NAME_VAT_NUMBER)
  private String vatNumber;

  public static final String SERIALIZED_NAME_YEARS_OF_EXPERIENCE = "YearsOfExperience";
  @SerializedName(SERIALIZED_NAME_YEARS_OF_EXPERIENCE)
  private Integer yearsOfExperience;

  public UserSettings() {
  }

  public UserSettings accountantEmail(String accountantEmail) {
    this.accountantEmail = accountantEmail;
    return this;
  }

  /**
   * Get accountantEmail
   * @return accountantEmail
   */
  @javax.annotation.Nullable
  public String getAccountantEmail() {
    return accountantEmail;
  }

  public void setAccountantEmail(String accountantEmail) {
    this.accountantEmail = accountantEmail;
  }


  public UserSettings address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public UserSettings apiKey(String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  /**
   * Get apiKey
   * @return apiKey
   */
  @javax.annotation.Nullable
  public String getApiKey() {
    return apiKey;
  }

  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }


  public UserSettings apiSecret(String apiSecret) {
    this.apiSecret = apiSecret;
    return this;
  }

  /**
   * Get apiSecret
   * @return apiSecret
   */
  @javax.annotation.Nullable
  public String getApiSecret() {
    return apiSecret;
  }

  public void setApiSecret(String apiSecret) {
    this.apiSecret = apiSecret;
  }


  public UserSettings backgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
    return this;
  }

  /**
   * Get backgroundImage
   * @return backgroundImage
   */
  @javax.annotation.Nullable
  public String getBackgroundImage() {
    return backgroundImage;
  }

  public void setBackgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
  }


  public UserSettings bank(String bank) {
    this.bank = bank;
    return this;
  }

  /**
   * Get bank
   * @return bank
   */
  @javax.annotation.Nullable
  public String getBank() {
    return bank;
  }

  public void setBank(String bank) {
    this.bank = bank;
  }


  public UserSettings bankAccount(String bankAccount) {
    this.bankAccount = bankAccount;
    return this;
  }

  /**
   * Get bankAccount
   * @return bankAccount
   */
  @javax.annotation.Nullable
  public String getBankAccount() {
    return bankAccount;
  }

  public void setBankAccount(String bankAccount) {
    this.bankAccount = bankAccount;
  }


  public UserSettings cname(String cname) {
    this.cname = cname;
    return this;
  }

  /**
   * Get cname
   * @return cname
   */
  @javax.annotation.Nullable
  public String getCname() {
    return cname;
  }

  public void setCname(String cname) {
    this.cname = cname;
  }


  public UserSettings companyRegistrationNumber(String companyRegistrationNumber) {
    this.companyRegistrationNumber = companyRegistrationNumber;
    return this;
  }

  /**
   * Get companyRegistrationNumber
   * @return companyRegistrationNumber
   */
  @javax.annotation.Nullable
  public String getCompanyRegistrationNumber() {
    return companyRegistrationNumber;
  }

  public void setCompanyRegistrationNumber(String companyRegistrationNumber) {
    this.companyRegistrationNumber = companyRegistrationNumber;
  }


  public UserSettings country(Country country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public Country getCountry() {
    return country;
  }

  public void setCountry(Country country) {
    this.country = country;
  }


  public UserSettings countryId(Integer countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public Integer getCountryId() {
    return countryId;
  }

  public void setCountryId(Integer countryId) {
    this.countryId = countryId;
  }


  public UserSettings currency(Currency currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public UserSettings currencyId(Integer currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public Integer getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Integer currencyId) {
    this.currencyId = currencyId;
  }


  public UserSettings currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

  /**
   * Get currencySymbol
   * @return currencySymbol
   */
  @javax.annotation.Nullable
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }


  public UserSettings defaultDateFormat(String defaultDateFormat) {
    this.defaultDateFormat = defaultDateFormat;
    return this;
  }

  /**
   * Get defaultDateFormat
   * @return defaultDateFormat
   */
  @javax.annotation.Nullable
  public String getDefaultDateFormat() {
    return defaultDateFormat;
  }

  public void setDefaultDateFormat(String defaultDateFormat) {
    this.defaultDateFormat = defaultDateFormat;
  }


  public UserSettings defaultDueDateInDays(Integer defaultDueDateInDays) {
    this.defaultDueDateInDays = defaultDueDateInDays;
    return this;
  }

  /**
   * Get defaultDueDateInDays
   * @return defaultDueDateInDays
   */
  @javax.annotation.Nullable
  public Integer getDefaultDueDateInDays() {
    return defaultDueDateInDays;
  }

  public void setDefaultDueDateInDays(Integer defaultDueDateInDays) {
    this.defaultDueDateInDays = defaultDueDateInDays;
  }


  public UserSettings doNotTrack(Boolean doNotTrack) {
    this.doNotTrack = doNotTrack;
    return this;
  }

  /**
   * Get doNotTrack
   * @return doNotTrack
   */
  @javax.annotation.Nullable
  public Boolean getDoNotTrack() {
    return doNotTrack;
  }

  public void setDoNotTrack(Boolean doNotTrack) {
    this.doNotTrack = doNotTrack;
  }


  public UserSettings enableClientPortal(Boolean enableClientPortal) {
    this.enableClientPortal = enableClientPortal;
    return this;
  }

  /**
   * Get enableClientPortal
   * @return enableClientPortal
   */
  @javax.annotation.Nullable
  public Boolean getEnableClientPortal() {
    return enableClientPortal;
  }

  public void setEnableClientPortal(Boolean enableClientPortal) {
    this.enableClientPortal = enableClientPortal;
  }


  public UserSettings enablePredictiveInvoicing(Boolean enablePredictiveInvoicing) {
    this.enablePredictiveInvoicing = enablePredictiveInvoicing;
    return this;
  }

  /**
   * Get enablePredictiveInvoicing
   * @return enablePredictiveInvoicing
   */
  @javax.annotation.Nullable
  public Boolean getEnablePredictiveInvoicing() {
    return enablePredictiveInvoicing;
  }

  public void setEnablePredictiveInvoicing(Boolean enablePredictiveInvoicing) {
    this.enablePredictiveInvoicing = enablePredictiveInvoicing;
  }


  public UserSettings enableRecurringInvoicing(Boolean enableRecurringInvoicing) {
    this.enableRecurringInvoicing = enableRecurringInvoicing;
    return this;
  }

  /**
   * Get enableRecurringInvoicing
   * @return enableRecurringInvoicing
   */
  @javax.annotation.Nullable
  public Boolean getEnableRecurringInvoicing() {
    return enableRecurringInvoicing;
  }

  public void setEnableRecurringInvoicing(Boolean enableRecurringInvoicing) {
    this.enableRecurringInvoicing = enableRecurringInvoicing;
  }


  public UserSettings hasInvoiceLogo(Boolean hasInvoiceLogo) {
    this.hasInvoiceLogo = hasInvoiceLogo;
    return this;
  }

  /**
   * Get hasInvoiceLogo
   * @return hasInvoiceLogo
   */
  @javax.annotation.Nullable
  public Boolean getHasInvoiceLogo() {
    return hasInvoiceLogo;
  }

  public void setHasInvoiceLogo(Boolean hasInvoiceLogo) {
    this.hasInvoiceLogo = hasInvoiceLogo;
  }


  public UserSettings iban(String iban) {
    this.iban = iban;
    return this;
  }

  /**
   * Get iban
   * @return iban
   */
  @javax.annotation.Nullable
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }


  public UserSettings id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public UserSettings invoiceTemplate(InvoiceTemplateEnum invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
    return this;
  }

  /**
   * Get invoiceTemplate
   * @return invoiceTemplate
   */
  @javax.annotation.Nullable
  public InvoiceTemplateEnum getInvoiceTemplate() {
    return invoiceTemplate;
  }

  public void setInvoiceTemplate(InvoiceTemplateEnum invoiceTemplate) {
    this.invoiceTemplate = invoiceTemplate;
  }


  public UserSettings invoiceTemplateColorHex(String invoiceTemplateColorHex) {
    this.invoiceTemplateColorHex = invoiceTemplateColorHex;
    return this;
  }

  /**
   * Get invoiceTemplateColorHex
   * @return invoiceTemplateColorHex
   */
  @javax.annotation.Nullable
  public String getInvoiceTemplateColorHex() {
    return invoiceTemplateColorHex;
  }

  public void setInvoiceTemplateColorHex(String invoiceTemplateColorHex) {
    this.invoiceTemplateColorHex = invoiceTemplateColorHex;
  }


  public UserSettings phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public UserSettings profession(ProfessionEnum profession) {
    this.profession = profession;
    return this;
  }

  /**
   * Get profession
   * @return profession
   */
  @javax.annotation.Nullable
  public ProfessionEnum getProfession() {
    return profession;
  }

  public void setProfession(ProfessionEnum profession) {
    this.profession = profession;
  }


  public UserSettings receiveSmsNotifications(Boolean receiveSmsNotifications) {
    this.receiveSmsNotifications = receiveSmsNotifications;
    return this;
  }

  /**
   * Get receiveSmsNotifications
   * @return receiveSmsNotifications
   */
  @javax.annotation.Nullable
  public Boolean getReceiveSmsNotifications() {
    return receiveSmsNotifications;
  }

  public void setReceiveSmsNotifications(Boolean receiveSmsNotifications) {
    this.receiveSmsNotifications = receiveSmsNotifications;
  }


  public UserSettings referralProgram(ReferralProgramEnum referralProgram) {
    this.referralProgram = referralProgram;
    return this;
  }

  /**
   * Get referralProgram
   * @return referralProgram
   */
  @javax.annotation.Nullable
  public ReferralProgramEnum getReferralProgram() {
    return referralProgram;
  }

  public void setReferralProgram(ReferralProgramEnum referralProgram) {
    this.referralProgram = referralProgram;
  }


  public UserSettings storeCheckoutFields(StoreCheckoutFieldsEnum storeCheckoutFields) {
    this.storeCheckoutFields = storeCheckoutFields;
    return this;
  }

  /**
   * Get storeCheckoutFields
   * @return storeCheckoutFields
   */
  @javax.annotation.Nullable
  public StoreCheckoutFieldsEnum getStoreCheckoutFields() {
    return storeCheckoutFields;
  }

  public void setStoreCheckoutFields(StoreCheckoutFieldsEnum storeCheckoutFields) {
    this.storeCheckoutFields = storeCheckoutFields;
  }


  public UserSettings storeColorHex(String storeColorHex) {
    this.storeColorHex = storeColorHex;
    return this;
  }

  /**
   * Get storeColorHex
   * @return storeColorHex
   */
  @javax.annotation.Nullable
  public String getStoreColorHex() {
    return storeColorHex;
  }

  public void setStoreColorHex(String storeColorHex) {
    this.storeColorHex = storeColorHex;
  }


  public UserSettings storeCurrency(Currency storeCurrency) {
    this.storeCurrency = storeCurrency;
    return this;
  }

  /**
   * Get storeCurrency
   * @return storeCurrency
   */
  @javax.annotation.Nullable
  public Currency getStoreCurrency() {
    return storeCurrency;
  }

  public void setStoreCurrency(Currency storeCurrency) {
    this.storeCurrency = storeCurrency;
  }


  public UserSettings storeCurrencyId(Integer storeCurrencyId) {
    this.storeCurrencyId = storeCurrencyId;
    return this;
  }

  /**
   * Get storeCurrencyId
   * @return storeCurrencyId
   */
  @javax.annotation.Nullable
  public Integer getStoreCurrencyId() {
    return storeCurrencyId;
  }

  public void setStoreCurrencyId(Integer storeCurrencyId) {
    this.storeCurrencyId = storeCurrencyId;
  }


  public UserSettings storeCustomJavaScript(String storeCustomJavaScript) {
    this.storeCustomJavaScript = storeCustomJavaScript;
    return this;
  }

  /**
   * Get storeCustomJavaScript
   * @return storeCustomJavaScript
   */
  @javax.annotation.Nullable
  public String getStoreCustomJavaScript() {
    return storeCustomJavaScript;
  }

  public void setStoreCustomJavaScript(String storeCustomJavaScript) {
    this.storeCustomJavaScript = storeCustomJavaScript;
  }


  public UserSettings storeDescription(String storeDescription) {
    this.storeDescription = storeDescription;
    return this;
  }

  /**
   * Get storeDescription
   * @return storeDescription
   */
  @javax.annotation.Nullable
  public String getStoreDescription() {
    return storeDescription;
  }

  public void setStoreDescription(String storeDescription) {
    this.storeDescription = storeDescription;
  }


  public UserSettings storeEmail(String storeEmail) {
    this.storeEmail = storeEmail;
    return this;
  }

  /**
   * Get storeEmail
   * @return storeEmail
   */
  @javax.annotation.Nullable
  public String getStoreEmail() {
    return storeEmail;
  }

  public void setStoreEmail(String storeEmail) {
    this.storeEmail = storeEmail;
  }


  public UserSettings storeLanguage(UiLanguage storeLanguage) {
    this.storeLanguage = storeLanguage;
    return this;
  }

  /**
   * Get storeLanguage
   * @return storeLanguage
   */
  @javax.annotation.Nullable
  public UiLanguage getStoreLanguage() {
    return storeLanguage;
  }

  public void setStoreLanguage(UiLanguage storeLanguage) {
    this.storeLanguage = storeLanguage;
  }


  public UserSettings storeLanguageId(Integer storeLanguageId) {
    this.storeLanguageId = storeLanguageId;
    return this;
  }

  /**
   * Get storeLanguageId
   * @return storeLanguageId
   */
  @javax.annotation.Nullable
  public Integer getStoreLanguageId() {
    return storeLanguageId;
  }

  public void setStoreLanguageId(Integer storeLanguageId) {
    this.storeLanguageId = storeLanguageId;
  }


  public UserSettings storeName(String storeName) {
    this.storeName = storeName;
    return this;
  }

  /**
   * Get storeName
   * @return storeName
   */
  @javax.annotation.Nullable
  public String getStoreName() {
    return storeName;
  }

  public void setStoreName(String storeName) {
    this.storeName = storeName;
  }


  public UserSettings storePurchaseEmailMessage(String storePurchaseEmailMessage) {
    this.storePurchaseEmailMessage = storePurchaseEmailMessage;
    return this;
  }

  /**
   * Get storePurchaseEmailMessage
   * @return storePurchaseEmailMessage
   */
  @javax.annotation.Nullable
  public String getStorePurchaseEmailMessage() {
    return storePurchaseEmailMessage;
  }

  public void setStorePurchaseEmailMessage(String storePurchaseEmailMessage) {
    this.storePurchaseEmailMessage = storePurchaseEmailMessage;
  }


  public UserSettings storePurchaseThankYouMessage(String storePurchaseThankYouMessage) {
    this.storePurchaseThankYouMessage = storePurchaseThankYouMessage;
    return this;
  }

  /**
   * Get storePurchaseThankYouMessage
   * @return storePurchaseThankYouMessage
   */
  @javax.annotation.Nullable
  public String getStorePurchaseThankYouMessage() {
    return storePurchaseThankYouMessage;
  }

  public void setStorePurchaseThankYouMessage(String storePurchaseThankYouMessage) {
    this.storePurchaseThankYouMessage = storePurchaseThankYouMessage;
  }


  public UserSettings storeTextColorHex(String storeTextColorHex) {
    this.storeTextColorHex = storeTextColorHex;
    return this;
  }

  /**
   * Get storeTextColorHex
   * @return storeTextColorHex
   */
  @javax.annotation.Nullable
  public String getStoreTextColorHex() {
    return storeTextColorHex;
  }

  public void setStoreTextColorHex(String storeTextColorHex) {
    this.storeTextColorHex = storeTextColorHex;
  }


  public UserSettings storeUrl(String storeUrl) {
    this.storeUrl = storeUrl;
    return this;
  }

  /**
   * Get storeUrl
   * @return storeUrl
   */
  @javax.annotation.Nullable
  public String getStoreUrl() {
    return storeUrl;
  }

  public void setStoreUrl(String storeUrl) {
    this.storeUrl = storeUrl;
  }


  public UserSettings subscribeToProductEmails(Boolean subscribeToProductEmails) {
    this.subscribeToProductEmails = subscribeToProductEmails;
    return this;
  }

  /**
   * Get subscribeToProductEmails
   * @return subscribeToProductEmails
   */
  @javax.annotation.Nullable
  public Boolean getSubscribeToProductEmails() {
    return subscribeToProductEmails;
  }

  public void setSubscribeToProductEmails(Boolean subscribeToProductEmails) {
    this.subscribeToProductEmails = subscribeToProductEmails;
  }


  public UserSettings swift(String swift) {
    this.swift = swift;
    return this;
  }

  /**
   * Get swift
   * @return swift
   */
  @javax.annotation.Nullable
  public String getSwift() {
    return swift;
  }

  public void setSwift(String swift) {
    this.swift = swift;
  }


  public UserSettings terms(String terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   */
  @javax.annotation.Nullable
  public String getTerms() {
    return terms;
  }

  public void setTerms(String terms) {
    this.terms = terms;
  }


  public UserSettings userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public UserSettings userSignature(String userSignature) {
    this.userSignature = userSignature;
    return this;
  }

  /**
   * Get userSignature
   * @return userSignature
   */
  @javax.annotation.Nullable
  public String getUserSignature() {
    return userSignature;
  }

  public void setUserSignature(String userSignature) {
    this.userSignature = userSignature;
  }


  public UserSettings vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

  /**
   * Get vatNumber
   * @return vatNumber
   */
  @javax.annotation.Nullable
  public String getVatNumber() {
    return vatNumber;
  }

  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }


  public UserSettings yearsOfExperience(Integer yearsOfExperience) {
    this.yearsOfExperience = yearsOfExperience;
    return this;
  }

  /**
   * Get yearsOfExperience
   * @return yearsOfExperience
   */
  @javax.annotation.Nullable
  public Integer getYearsOfExperience() {
    return yearsOfExperience;
  }

  public void setYearsOfExperience(Integer yearsOfExperience) {
    this.yearsOfExperience = yearsOfExperience;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSettings userSettings = (UserSettings) o;
    return Objects.equals(this.accountantEmail, userSettings.accountantEmail) &&
        Objects.equals(this.address, userSettings.address) &&
        Objects.equals(this.apiKey, userSettings.apiKey) &&
        Objects.equals(this.apiSecret, userSettings.apiSecret) &&
        Objects.equals(this.backgroundImage, userSettings.backgroundImage) &&
        Objects.equals(this.bank, userSettings.bank) &&
        Objects.equals(this.bankAccount, userSettings.bankAccount) &&
        Objects.equals(this.cname, userSettings.cname) &&
        Objects.equals(this.companyRegistrationNumber, userSettings.companyRegistrationNumber) &&
        Objects.equals(this.country, userSettings.country) &&
        Objects.equals(this.countryId, userSettings.countryId) &&
        Objects.equals(this.currency, userSettings.currency) &&
        Objects.equals(this.currencyId, userSettings.currencyId) &&
        Objects.equals(this.currencySymbol, userSettings.currencySymbol) &&
        Objects.equals(this.defaultDateFormat, userSettings.defaultDateFormat) &&
        Objects.equals(this.defaultDueDateInDays, userSettings.defaultDueDateInDays) &&
        Objects.equals(this.doNotTrack, userSettings.doNotTrack) &&
        Objects.equals(this.enableClientPortal, userSettings.enableClientPortal) &&
        Objects.equals(this.enablePredictiveInvoicing, userSettings.enablePredictiveInvoicing) &&
        Objects.equals(this.enableRecurringInvoicing, userSettings.enableRecurringInvoicing) &&
        Objects.equals(this.hasInvoiceLogo, userSettings.hasInvoiceLogo) &&
        Objects.equals(this.iban, userSettings.iban) &&
        Objects.equals(this.id, userSettings.id) &&
        Objects.equals(this.invoiceTemplate, userSettings.invoiceTemplate) &&
        Objects.equals(this.invoiceTemplateColorHex, userSettings.invoiceTemplateColorHex) &&
        Objects.equals(this.phoneNumber, userSettings.phoneNumber) &&
        Objects.equals(this.profession, userSettings.profession) &&
        Objects.equals(this.receiveSmsNotifications, userSettings.receiveSmsNotifications) &&
        Objects.equals(this.referralProgram, userSettings.referralProgram) &&
        Objects.equals(this.storeCheckoutFields, userSettings.storeCheckoutFields) &&
        Objects.equals(this.storeColorHex, userSettings.storeColorHex) &&
        Objects.equals(this.storeCurrency, userSettings.storeCurrency) &&
        Objects.equals(this.storeCurrencyId, userSettings.storeCurrencyId) &&
        Objects.equals(this.storeCustomJavaScript, userSettings.storeCustomJavaScript) &&
        Objects.equals(this.storeDescription, userSettings.storeDescription) &&
        Objects.equals(this.storeEmail, userSettings.storeEmail) &&
        Objects.equals(this.storeLanguage, userSettings.storeLanguage) &&
        Objects.equals(this.storeLanguageId, userSettings.storeLanguageId) &&
        Objects.equals(this.storeName, userSettings.storeName) &&
        Objects.equals(this.storePurchaseEmailMessage, userSettings.storePurchaseEmailMessage) &&
        Objects.equals(this.storePurchaseThankYouMessage, userSettings.storePurchaseThankYouMessage) &&
        Objects.equals(this.storeTextColorHex, userSettings.storeTextColorHex) &&
        Objects.equals(this.storeUrl, userSettings.storeUrl) &&
        Objects.equals(this.subscribeToProductEmails, userSettings.subscribeToProductEmails) &&
        Objects.equals(this.swift, userSettings.swift) &&
        Objects.equals(this.terms, userSettings.terms) &&
        Objects.equals(this.userId, userSettings.userId) &&
        Objects.equals(this.userSignature, userSettings.userSignature) &&
        Objects.equals(this.vatNumber, userSettings.vatNumber) &&
        Objects.equals(this.yearsOfExperience, userSettings.yearsOfExperience);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountantEmail, address, apiKey, apiSecret, backgroundImage, bank, bankAccount, cname, companyRegistrationNumber, country, countryId, currency, currencyId, currencySymbol, defaultDateFormat, defaultDueDateInDays, doNotTrack, enableClientPortal, enablePredictiveInvoicing, enableRecurringInvoicing, hasInvoiceLogo, iban, id, invoiceTemplate, invoiceTemplateColorHex, phoneNumber, profession, receiveSmsNotifications, referralProgram, storeCheckoutFields, storeColorHex, storeCurrency, storeCurrencyId, storeCustomJavaScript, storeDescription, storeEmail, storeLanguage, storeLanguageId, storeName, storePurchaseEmailMessage, storePurchaseThankYouMessage, storeTextColorHex, storeUrl, subscribeToProductEmails, swift, terms, userId, userSignature, vatNumber, yearsOfExperience);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSettings {\n");
    sb.append("    accountantEmail: ").append(toIndentedString(accountantEmail)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    apiSecret: ").append(toIndentedString(apiSecret)).append("\n");
    sb.append("    backgroundImage: ").append(toIndentedString(backgroundImage)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    cname: ").append(toIndentedString(cname)).append("\n");
    sb.append("    companyRegistrationNumber: ").append(toIndentedString(companyRegistrationNumber)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    defaultDateFormat: ").append(toIndentedString(defaultDateFormat)).append("\n");
    sb.append("    defaultDueDateInDays: ").append(toIndentedString(defaultDueDateInDays)).append("\n");
    sb.append("    doNotTrack: ").append(toIndentedString(doNotTrack)).append("\n");
    sb.append("    enableClientPortal: ").append(toIndentedString(enableClientPortal)).append("\n");
    sb.append("    enablePredictiveInvoicing: ").append(toIndentedString(enablePredictiveInvoicing)).append("\n");
    sb.append("    enableRecurringInvoicing: ").append(toIndentedString(enableRecurringInvoicing)).append("\n");
    sb.append("    hasInvoiceLogo: ").append(toIndentedString(hasInvoiceLogo)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoiceTemplate: ").append(toIndentedString(invoiceTemplate)).append("\n");
    sb.append("    invoiceTemplateColorHex: ").append(toIndentedString(invoiceTemplateColorHex)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    profession: ").append(toIndentedString(profession)).append("\n");
    sb.append("    receiveSmsNotifications: ").append(toIndentedString(receiveSmsNotifications)).append("\n");
    sb.append("    referralProgram: ").append(toIndentedString(referralProgram)).append("\n");
    sb.append("    storeCheckoutFields: ").append(toIndentedString(storeCheckoutFields)).append("\n");
    sb.append("    storeColorHex: ").append(toIndentedString(storeColorHex)).append("\n");
    sb.append("    storeCurrency: ").append(toIndentedString(storeCurrency)).append("\n");
    sb.append("    storeCurrencyId: ").append(toIndentedString(storeCurrencyId)).append("\n");
    sb.append("    storeCustomJavaScript: ").append(toIndentedString(storeCustomJavaScript)).append("\n");
    sb.append("    storeDescription: ").append(toIndentedString(storeDescription)).append("\n");
    sb.append("    storeEmail: ").append(toIndentedString(storeEmail)).append("\n");
    sb.append("    storeLanguage: ").append(toIndentedString(storeLanguage)).append("\n");
    sb.append("    storeLanguageId: ").append(toIndentedString(storeLanguageId)).append("\n");
    sb.append("    storeName: ").append(toIndentedString(storeName)).append("\n");
    sb.append("    storePurchaseEmailMessage: ").append(toIndentedString(storePurchaseEmailMessage)).append("\n");
    sb.append("    storePurchaseThankYouMessage: ").append(toIndentedString(storePurchaseThankYouMessage)).append("\n");
    sb.append("    storeTextColorHex: ").append(toIndentedString(storeTextColorHex)).append("\n");
    sb.append("    storeUrl: ").append(toIndentedString(storeUrl)).append("\n");
    sb.append("    subscribeToProductEmails: ").append(toIndentedString(subscribeToProductEmails)).append("\n");
    sb.append("    swift: ").append(toIndentedString(swift)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userSignature: ").append(toIndentedString(userSignature)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    yearsOfExperience: ").append(toIndentedString(yearsOfExperience)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountantEmail");
    openapiFields.add("Address");
    openapiFields.add("ApiKey");
    openapiFields.add("ApiSecret");
    openapiFields.add("BackgroundImage");
    openapiFields.add("Bank");
    openapiFields.add("BankAccount");
    openapiFields.add("Cname");
    openapiFields.add("CompanyRegistrationNumber");
    openapiFields.add("Country");
    openapiFields.add("CountryId");
    openapiFields.add("Currency");
    openapiFields.add("CurrencyId");
    openapiFields.add("CurrencySymbol");
    openapiFields.add("DefaultDateFormat");
    openapiFields.add("DefaultDueDateInDays");
    openapiFields.add("DoNotTrack");
    openapiFields.add("EnableClientPortal");
    openapiFields.add("EnablePredictiveInvoicing");
    openapiFields.add("EnableRecurringInvoicing");
    openapiFields.add("HasInvoiceLogo");
    openapiFields.add("Iban");
    openapiFields.add("Id");
    openapiFields.add("InvoiceTemplate");
    openapiFields.add("InvoiceTemplateColorHex");
    openapiFields.add("PhoneNumber");
    openapiFields.add("Profession");
    openapiFields.add("ReceiveSmsNotifications");
    openapiFields.add("ReferralProgram");
    openapiFields.add("StoreCheckoutFields");
    openapiFields.add("StoreColorHex");
    openapiFields.add("StoreCurrency");
    openapiFields.add("StoreCurrencyId");
    openapiFields.add("StoreCustomJavaScript");
    openapiFields.add("StoreDescription");
    openapiFields.add("StoreEmail");
    openapiFields.add("StoreLanguage");
    openapiFields.add("StoreLanguageId");
    openapiFields.add("StoreName");
    openapiFields.add("StorePurchaseEmailMessage");
    openapiFields.add("StorePurchaseThankYouMessage");
    openapiFields.add("StoreTextColorHex");
    openapiFields.add("StoreUrl");
    openapiFields.add("SubscribeToProductEmails");
    openapiFields.add("Swift");
    openapiFields.add("Terms");
    openapiFields.add("UserId");
    openapiFields.add("UserSignature");
    openapiFields.add("VatNumber");
    openapiFields.add("YearsOfExperience");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserSettings is not found in the empty JSON string", UserSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AccountantEmail") != null && !jsonObj.get("AccountantEmail").isJsonNull()) && !jsonObj.get("AccountantEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountantEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccountantEmail").toString()));
      }
      if ((jsonObj.get("Address") != null && !jsonObj.get("Address").isJsonNull()) && !jsonObj.get("Address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Address").toString()));
      }
      if ((jsonObj.get("ApiKey") != null && !jsonObj.get("ApiKey").isJsonNull()) && !jsonObj.get("ApiKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ApiKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ApiKey").toString()));
      }
      if ((jsonObj.get("ApiSecret") != null && !jsonObj.get("ApiSecret").isJsonNull()) && !jsonObj.get("ApiSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ApiSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ApiSecret").toString()));
      }
      if ((jsonObj.get("BackgroundImage") != null && !jsonObj.get("BackgroundImage").isJsonNull()) && !jsonObj.get("BackgroundImage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BackgroundImage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BackgroundImage").toString()));
      }
      if ((jsonObj.get("Bank") != null && !jsonObj.get("Bank").isJsonNull()) && !jsonObj.get("Bank").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Bank` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Bank").toString()));
      }
      if ((jsonObj.get("BankAccount") != null && !jsonObj.get("BankAccount").isJsonNull()) && !jsonObj.get("BankAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BankAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BankAccount").toString()));
      }
      if ((jsonObj.get("Cname") != null && !jsonObj.get("Cname").isJsonNull()) && !jsonObj.get("Cname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Cname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Cname").toString()));
      }
      if ((jsonObj.get("CompanyRegistrationNumber") != null && !jsonObj.get("CompanyRegistrationNumber").isJsonNull()) && !jsonObj.get("CompanyRegistrationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompanyRegistrationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompanyRegistrationNumber").toString()));
      }
      // validate the optional field `Country`
      if (jsonObj.get("Country") != null && !jsonObj.get("Country").isJsonNull()) {
        Country.validateJsonElement(jsonObj.get("Country"));
      }
      // validate the optional field `Currency`
      if (jsonObj.get("Currency") != null && !jsonObj.get("Currency").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("Currency"));
      }
      if ((jsonObj.get("CurrencySymbol") != null && !jsonObj.get("CurrencySymbol").isJsonNull()) && !jsonObj.get("CurrencySymbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrencySymbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrencySymbol").toString()));
      }
      if ((jsonObj.get("DefaultDateFormat") != null && !jsonObj.get("DefaultDateFormat").isJsonNull()) && !jsonObj.get("DefaultDateFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DefaultDateFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DefaultDateFormat").toString()));
      }
      if ((jsonObj.get("Iban") != null && !jsonObj.get("Iban").isJsonNull()) && !jsonObj.get("Iban").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Iban` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Iban").toString()));
      }
      if ((jsonObj.get("InvoiceTemplate") != null && !jsonObj.get("InvoiceTemplate").isJsonNull()) && !jsonObj.get("InvoiceTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceTemplate").toString()));
      }
      // validate the optional field `InvoiceTemplate`
      if (jsonObj.get("InvoiceTemplate") != null && !jsonObj.get("InvoiceTemplate").isJsonNull()) {
        InvoiceTemplateEnum.validateJsonElement(jsonObj.get("InvoiceTemplate"));
      }
      if ((jsonObj.get("InvoiceTemplateColorHex") != null && !jsonObj.get("InvoiceTemplateColorHex").isJsonNull()) && !jsonObj.get("InvoiceTemplateColorHex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceTemplateColorHex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceTemplateColorHex").toString()));
      }
      if ((jsonObj.get("PhoneNumber") != null && !jsonObj.get("PhoneNumber").isJsonNull()) && !jsonObj.get("PhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PhoneNumber").toString()));
      }
      if ((jsonObj.get("Profession") != null && !jsonObj.get("Profession").isJsonNull()) && !jsonObj.get("Profession").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Profession` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Profession").toString()));
      }
      // validate the optional field `Profession`
      if (jsonObj.get("Profession") != null && !jsonObj.get("Profession").isJsonNull()) {
        ProfessionEnum.validateJsonElement(jsonObj.get("Profession"));
      }
      if ((jsonObj.get("ReferralProgram") != null && !jsonObj.get("ReferralProgram").isJsonNull()) && !jsonObj.get("ReferralProgram").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReferralProgram` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReferralProgram").toString()));
      }
      // validate the optional field `ReferralProgram`
      if (jsonObj.get("ReferralProgram") != null && !jsonObj.get("ReferralProgram").isJsonNull()) {
        ReferralProgramEnum.validateJsonElement(jsonObj.get("ReferralProgram"));
      }
      if ((jsonObj.get("StoreCheckoutFields") != null && !jsonObj.get("StoreCheckoutFields").isJsonNull()) && !jsonObj.get("StoreCheckoutFields").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreCheckoutFields` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreCheckoutFields").toString()));
      }
      // validate the optional field `StoreCheckoutFields`
      if (jsonObj.get("StoreCheckoutFields") != null && !jsonObj.get("StoreCheckoutFields").isJsonNull()) {
        StoreCheckoutFieldsEnum.validateJsonElement(jsonObj.get("StoreCheckoutFields"));
      }
      if ((jsonObj.get("StoreColorHex") != null && !jsonObj.get("StoreColorHex").isJsonNull()) && !jsonObj.get("StoreColorHex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreColorHex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreColorHex").toString()));
      }
      // validate the optional field `StoreCurrency`
      if (jsonObj.get("StoreCurrency") != null && !jsonObj.get("StoreCurrency").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("StoreCurrency"));
      }
      if ((jsonObj.get("StoreCustomJavaScript") != null && !jsonObj.get("StoreCustomJavaScript").isJsonNull()) && !jsonObj.get("StoreCustomJavaScript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreCustomJavaScript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreCustomJavaScript").toString()));
      }
      if ((jsonObj.get("StoreDescription") != null && !jsonObj.get("StoreDescription").isJsonNull()) && !jsonObj.get("StoreDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreDescription").toString()));
      }
      if ((jsonObj.get("StoreEmail") != null && !jsonObj.get("StoreEmail").isJsonNull()) && !jsonObj.get("StoreEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreEmail").toString()));
      }
      // validate the optional field `StoreLanguage`
      if (jsonObj.get("StoreLanguage") != null && !jsonObj.get("StoreLanguage").isJsonNull()) {
        UiLanguage.validateJsonElement(jsonObj.get("StoreLanguage"));
      }
      if ((jsonObj.get("StoreName") != null && !jsonObj.get("StoreName").isJsonNull()) && !jsonObj.get("StoreName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreName").toString()));
      }
      if ((jsonObj.get("StorePurchaseEmailMessage") != null && !jsonObj.get("StorePurchaseEmailMessage").isJsonNull()) && !jsonObj.get("StorePurchaseEmailMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StorePurchaseEmailMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StorePurchaseEmailMessage").toString()));
      }
      if ((jsonObj.get("StorePurchaseThankYouMessage") != null && !jsonObj.get("StorePurchaseThankYouMessage").isJsonNull()) && !jsonObj.get("StorePurchaseThankYouMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StorePurchaseThankYouMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StorePurchaseThankYouMessage").toString()));
      }
      if ((jsonObj.get("StoreTextColorHex") != null && !jsonObj.get("StoreTextColorHex").isJsonNull()) && !jsonObj.get("StoreTextColorHex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreTextColorHex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreTextColorHex").toString()));
      }
      if ((jsonObj.get("StoreUrl") != null && !jsonObj.get("StoreUrl").isJsonNull()) && !jsonObj.get("StoreUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StoreUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StoreUrl").toString()));
      }
      if ((jsonObj.get("Swift") != null && !jsonObj.get("Swift").isJsonNull()) && !jsonObj.get("Swift").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Swift` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Swift").toString()));
      }
      if ((jsonObj.get("Terms") != null && !jsonObj.get("Terms").isJsonNull()) && !jsonObj.get("Terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Terms").toString()));
      }
      if ((jsonObj.get("UserSignature") != null && !jsonObj.get("UserSignature").isJsonNull()) && !jsonObj.get("UserSignature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserSignature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserSignature").toString()));
      }
      if ((jsonObj.get("VatNumber") != null && !jsonObj.get("VatNumber").isJsonNull()) && !jsonObj.get("VatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VatNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<UserSettings>() {
           @Override
           public void write(JsonWriter out, UserSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserSettings
   * @throws IOException if the JSON string is invalid with respect to UserSettings
   */
  public static UserSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserSettings.class);
  }

  /**
   * Convert an instance of UserSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

