/*
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EstimationCreateItemApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:00.947845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EstimationCreateItemApiModel {
  public static final String SERIALIZED_NAME_COST = "Cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private Double cost;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISCOUNT_PERCENTAGE = "DiscountPercentage";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_PERCENTAGE)
  private Double discountPercentage;

  public static final String SERIALIZED_NAME_QUANTITY = "Quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Double quantity;

  public static final String SERIALIZED_NAME_TAX_ID = "TaxId";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private Integer taxId;

  public static final String SERIALIZED_NAME_TAX_PERCENTAGE = "TaxPercentage";
  @SerializedName(SERIALIZED_NAME_TAX_PERCENTAGE)
  private Double taxPercentage;

  public static final String SERIALIZED_NAME_WORK_TYPE_ID = "WorkTypeId";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE_ID)
  private Integer workTypeId;

  public EstimationCreateItemApiModel() {
  }

  public EstimationCreateItemApiModel cost(Double cost) {
    this.cost = cost;
    return this;
  }

  /**
   * Amount per unit
   * @return cost
   */
  @javax.annotation.Nullable
  public Double getCost() {
    return cost;
  }

  public void setCost(Double cost) {
    this.cost = cost;
  }


  public EstimationCreateItemApiModel description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Additional description attached to the estimation item
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public EstimationCreateItemApiModel discountPercentage(Double discountPercentage) {
    this.discountPercentage = discountPercentage;
    return this;
  }

  /**
   * Discount percentage for the overall amount
   * @return discountPercentage
   */
  @javax.annotation.Nullable
  public Double getDiscountPercentage() {
    return discountPercentage;
  }

  public void setDiscountPercentage(Double discountPercentage) {
    this.discountPercentage = discountPercentage;
  }


  public EstimationCreateItemApiModel quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Quantity in total used for the work type
   * @return quantity
   */
  @javax.annotation.Nullable
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public EstimationCreateItemApiModel taxId(Integer taxId) {
    this.taxId = taxId;
    return this;
  }

  /**
   * Tax applied on the item
   * @return taxId
   */
  @javax.annotation.Nullable
  public Integer getTaxId() {
    return taxId;
  }

  public void setTaxId(Integer taxId) {
    this.taxId = taxId;
  }


  public EstimationCreateItemApiModel taxPercentage(Double taxPercentage) {
    this.taxPercentage = taxPercentage;
    return this;
  }

  /**
   * Task percentage. Ex: 18%
   * @return taxPercentage
   */
  @javax.annotation.Nullable
  public Double getTaxPercentage() {
    return taxPercentage;
  }

  public void setTaxPercentage(Double taxPercentage) {
    this.taxPercentage = taxPercentage;
  }


  public EstimationCreateItemApiModel workTypeId(Integer workTypeId) {
    this.workTypeId = workTypeId;
    return this;
  }

  /**
   * Work type (Name of the service)
   * @return workTypeId
   */
  @javax.annotation.Nullable
  public Integer getWorkTypeId() {
    return workTypeId;
  }

  public void setWorkTypeId(Integer workTypeId) {
    this.workTypeId = workTypeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimationCreateItemApiModel estimationCreateItemApiModel = (EstimationCreateItemApiModel) o;
    return Objects.equals(this.cost, estimationCreateItemApiModel.cost) &&
        Objects.equals(this.description, estimationCreateItemApiModel.description) &&
        Objects.equals(this.discountPercentage, estimationCreateItemApiModel.discountPercentage) &&
        Objects.equals(this.quantity, estimationCreateItemApiModel.quantity) &&
        Objects.equals(this.taxId, estimationCreateItemApiModel.taxId) &&
        Objects.equals(this.taxPercentage, estimationCreateItemApiModel.taxPercentage) &&
        Objects.equals(this.workTypeId, estimationCreateItemApiModel.workTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, description, discountPercentage, quantity, taxId, taxPercentage, workTypeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimationCreateItemApiModel {\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discountPercentage: ").append(toIndentedString(discountPercentage)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    taxPercentage: ").append(toIndentedString(taxPercentage)).append("\n");
    sb.append("    workTypeId: ").append(toIndentedString(workTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Cost");
    openapiFields.add("Description");
    openapiFields.add("DiscountPercentage");
    openapiFields.add("Quantity");
    openapiFields.add("TaxId");
    openapiFields.add("TaxPercentage");
    openapiFields.add("WorkTypeId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EstimationCreateItemApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EstimationCreateItemApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EstimationCreateItemApiModel is not found in the empty JSON string", EstimationCreateItemApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EstimationCreateItemApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EstimationCreateItemApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EstimationCreateItemApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EstimationCreateItemApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EstimationCreateItemApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EstimationCreateItemApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EstimationCreateItemApiModel>() {
           @Override
           public void write(JsonWriter out, EstimationCreateItemApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EstimationCreateItemApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EstimationCreateItemApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EstimationCreateItemApiModel
   * @throws IOException if the JSON string is invalid with respect to EstimationCreateItemApiModel
   */
  public static EstimationCreateItemApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EstimationCreateItemApiModel.class);
  }

  /**
   * Convert an instance of EstimationCreateItemApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

