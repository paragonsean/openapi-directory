/*
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ClientDetailsApiModel;
import org.openapitools.client.model.CurrencyDetailsApiModel;
import org.openapitools.client.model.InvoiceRecurringApiModel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceDetailsApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:00.947845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceDetailsApiModel {
  public static final String SERIALIZED_NAME_ACCESS_TOKEN = "AccessToken";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN)
  private String accessToken;

  public static final String SERIALIZED_NAME_CLIENT = "Client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private ClientDetailsApiModel client;

  public static final String SERIALIZED_NAME_CLONED_FROM_ID = "ClonedFromId";
  @SerializedName(SERIALIZED_NAME_CLONED_FROM_ID)
  private Integer clonedFromId;

  public static final String SERIALIZED_NAME_CURRENCY = "Currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyDetailsApiModel currency;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "DiscountAmount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private Double discountAmount;

  public static final String SERIALIZED_NAME_DUEDATE = "Duedate";
  @SerializedName(SERIALIZED_NAME_DUEDATE)
  private OffsetDateTime duedate;

  public static final String SERIALIZED_NAME_ENABLE_PARTIAL_PAYMENTS = "EnablePartialPayments";
  @SerializedName(SERIALIZED_NAME_ENABLE_PARTIAL_PAYMENTS)
  private Boolean enablePartialPayments;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INVOICE_CATEGORY_ID = "InvoiceCategoryId";
  @SerializedName(SERIALIZED_NAME_INVOICE_CATEGORY_ID)
  private Integer invoiceCategoryId;

  public static final String SERIALIZED_NAME_ISSUED_ON = "IssuedOn";
  @SerializedName(SERIALIZED_NAME_ISSUED_ON)
  private OffsetDateTime issuedOn;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_NUMBER = "Number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_PO_NUMBER = "PoNumber";
  @SerializedName(SERIALIZED_NAME_PO_NUMBER)
  private String poNumber;

  public static final String SERIALIZED_NAME_RECURRING_PROFILE = "RecurringProfile";
  @SerializedName(SERIALIZED_NAME_RECURRING_PROFILE)
  private InvoiceRecurringApiModel recurringProfile;

  public static final String SERIALIZED_NAME_RECURRING_PROFILE_ID = "RecurringProfileId";
  @SerializedName(SERIALIZED_NAME_RECURRING_PROFILE_ID)
  private Integer recurringProfileId;

  public static final String SERIALIZED_NAME_SHOULD_SEND_REMINDERS = "ShouldSendReminders";
  @SerializedName(SERIALIZED_NAME_SHOULD_SEND_REMINDERS)
  private Boolean shouldSendReminders;

  /**
   * Indicate the status of the invoice (paid/unpaid/overdue)
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    DRAFT("Draft"),
    
    PAID("Paid"),
    
    UNPAID("Unpaid"),
    
    OVERDUE("Overdue"),
    
    VOID("Void");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_SUB_TOTAL_AMOUNT = "SubTotalAmount";
  @SerializedName(SERIALIZED_NAME_SUB_TOTAL_AMOUNT)
  private Double subTotalAmount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "TaxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private Double taxAmount;

  public static final String SERIALIZED_NAME_TERMS = "Terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private String terms;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "TotalAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private Double totalAmount;

  public InvoiceDetailsApiModel() {
  }

  public InvoiceDetailsApiModel accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

  /**
   * Security access token used for accessing the invoice anonymously
   * @return accessToken
   */
  @javax.annotation.Nullable
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }


  public InvoiceDetailsApiModel client(ClientDetailsApiModel client) {
    this.client = client;
    return this;
  }

  /**
   * Get client
   * @return client
   */
  @javax.annotation.Nullable
  public ClientDetailsApiModel getClient() {
    return client;
  }

  public void setClient(ClientDetailsApiModel client) {
    this.client = client;
  }


  public InvoiceDetailsApiModel clonedFromId(Integer clonedFromId) {
    this.clonedFromId = clonedFromId;
    return this;
  }

  /**
   * Indicate from which invoice this invoice has been cloned from
   * @return clonedFromId
   */
  @javax.annotation.Nullable
  public Integer getClonedFromId() {
    return clonedFromId;
  }

  public void setClonedFromId(Integer clonedFromId) {
    this.clonedFromId = clonedFromId;
  }


  public InvoiceDetailsApiModel currency(CurrencyDetailsApiModel currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public CurrencyDetailsApiModel getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyDetailsApiModel currency) {
    this.currency = currency;
  }


  public InvoiceDetailsApiModel discountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

  /**
   * Amount that goes as a discount
   * @return discountAmount
   */
  @javax.annotation.Nullable
  public Double getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
  }


  public InvoiceDetailsApiModel duedate(OffsetDateTime duedate) {
    this.duedate = duedate;
    return this;
  }

  /**
   * Indicates when the invoice will be proclamed as due
   * @return duedate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDuedate() {
    return duedate;
  }

  public void setDuedate(OffsetDateTime duedate) {
    this.duedate = duedate;
  }


  public InvoiceDetailsApiModel enablePartialPayments(Boolean enablePartialPayments) {
    this.enablePartialPayments = enablePartialPayments;
    return this;
  }

  /**
   * Indicate that the invoice allows the user to pay the invoice partially
   * @return enablePartialPayments
   */
  @javax.annotation.Nullable
  public Boolean getEnablePartialPayments() {
    return enablePartialPayments;
  }

  public void setEnablePartialPayments(Boolean enablePartialPayments) {
    this.enablePartialPayments = enablePartialPayments;
  }


  public InvoiceDetailsApiModel id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Invoice id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public InvoiceDetailsApiModel invoiceCategoryId(Integer invoiceCategoryId) {
    this.invoiceCategoryId = invoiceCategoryId;
    return this;
  }

  /**
   * Hold the id of the invoice category
   * @return invoiceCategoryId
   */
  @javax.annotation.Nullable
  public Integer getInvoiceCategoryId() {
    return invoiceCategoryId;
  }

  public void setInvoiceCategoryId(Integer invoiceCategoryId) {
    this.invoiceCategoryId = invoiceCategoryId;
  }


  public InvoiceDetailsApiModel issuedOn(OffsetDateTime issuedOn) {
    this.issuedOn = issuedOn;
    return this;
  }

  /**
   * Indicates when the invoice was issued
   * @return issuedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getIssuedOn() {
    return issuedOn;
  }

  public void setIssuedOn(OffsetDateTime issuedOn) {
    this.issuedOn = issuedOn;
  }


  public InvoiceDetailsApiModel notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Internal note regarding the invoice
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public InvoiceDetailsApiModel number(String number) {
    this.number = number;
    return this;
  }

  /**
   * Unique invoice number
   * @return number
   */
  @javax.annotation.Nullable
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }


  public InvoiceDetailsApiModel poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

  /**
   * Unique number generated by the buyer
   * @return poNumber
   */
  @javax.annotation.Nullable
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }


  public InvoiceDetailsApiModel recurringProfile(InvoiceRecurringApiModel recurringProfile) {
    this.recurringProfile = recurringProfile;
    return this;
  }

  /**
   * Get recurringProfile
   * @return recurringProfile
   */
  @javax.annotation.Nullable
  public InvoiceRecurringApiModel getRecurringProfile() {
    return recurringProfile;
  }

  public void setRecurringProfile(InvoiceRecurringApiModel recurringProfile) {
    this.recurringProfile = recurringProfile;
  }


  public InvoiceDetailsApiModel recurringProfileId(Integer recurringProfileId) {
    this.recurringProfileId = recurringProfileId;
    return this;
  }

  /**
   * Hold the id of the recurring profile
   * @return recurringProfileId
   */
  @javax.annotation.Nullable
  public Integer getRecurringProfileId() {
    return recurringProfileId;
  }

  public void setRecurringProfileId(Integer recurringProfileId) {
    this.recurringProfileId = recurringProfileId;
  }


  public InvoiceDetailsApiModel shouldSendReminders(Boolean shouldSendReminders) {
    this.shouldSendReminders = shouldSendReminders;
    return this;
  }

  /**
   * Should send email reminders to client?
   * @return shouldSendReminders
   */
  @javax.annotation.Nullable
  public Boolean getShouldSendReminders() {
    return shouldSendReminders;
  }

  public void setShouldSendReminders(Boolean shouldSendReminders) {
    this.shouldSendReminders = shouldSendReminders;
  }


  public InvoiceDetailsApiModel status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Indicate the status of the invoice (paid/unpaid/overdue)
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public InvoiceDetailsApiModel subTotalAmount(Double subTotalAmount) {
    this.subTotalAmount = subTotalAmount;
    return this;
  }

  /**
   * Total amount of the invoice without tax
   * @return subTotalAmount
   */
  @javax.annotation.Nullable
  public Double getSubTotalAmount() {
    return subTotalAmount;
  }

  public void setSubTotalAmount(Double subTotalAmount) {
    this.subTotalAmount = subTotalAmount;
  }


  public InvoiceDetailsApiModel taxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Amount that goes to the tax
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public Double getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
  }


  public InvoiceDetailsApiModel terms(String terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Terms of agreement
   * @return terms
   */
  @javax.annotation.Nullable
  public String getTerms() {
    return terms;
  }

  public void setTerms(String terms) {
    this.terms = terms;
  }


  public InvoiceDetailsApiModel totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Total amount of the invoice with tax
   * @return totalAmount
   */
  @javax.annotation.Nullable
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceDetailsApiModel invoiceDetailsApiModel = (InvoiceDetailsApiModel) o;
    return Objects.equals(this.accessToken, invoiceDetailsApiModel.accessToken) &&
        Objects.equals(this.client, invoiceDetailsApiModel.client) &&
        Objects.equals(this.clonedFromId, invoiceDetailsApiModel.clonedFromId) &&
        Objects.equals(this.currency, invoiceDetailsApiModel.currency) &&
        Objects.equals(this.discountAmount, invoiceDetailsApiModel.discountAmount) &&
        Objects.equals(this.duedate, invoiceDetailsApiModel.duedate) &&
        Objects.equals(this.enablePartialPayments, invoiceDetailsApiModel.enablePartialPayments) &&
        Objects.equals(this.id, invoiceDetailsApiModel.id) &&
        Objects.equals(this.invoiceCategoryId, invoiceDetailsApiModel.invoiceCategoryId) &&
        Objects.equals(this.issuedOn, invoiceDetailsApiModel.issuedOn) &&
        Objects.equals(this.notes, invoiceDetailsApiModel.notes) &&
        Objects.equals(this.number, invoiceDetailsApiModel.number) &&
        Objects.equals(this.poNumber, invoiceDetailsApiModel.poNumber) &&
        Objects.equals(this.recurringProfile, invoiceDetailsApiModel.recurringProfile) &&
        Objects.equals(this.recurringProfileId, invoiceDetailsApiModel.recurringProfileId) &&
        Objects.equals(this.shouldSendReminders, invoiceDetailsApiModel.shouldSendReminders) &&
        Objects.equals(this.status, invoiceDetailsApiModel.status) &&
        Objects.equals(this.subTotalAmount, invoiceDetailsApiModel.subTotalAmount) &&
        Objects.equals(this.taxAmount, invoiceDetailsApiModel.taxAmount) &&
        Objects.equals(this.terms, invoiceDetailsApiModel.terms) &&
        Objects.equals(this.totalAmount, invoiceDetailsApiModel.totalAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, client, clonedFromId, currency, discountAmount, duedate, enablePartialPayments, id, invoiceCategoryId, issuedOn, notes, number, poNumber, recurringProfile, recurringProfileId, shouldSendReminders, status, subTotalAmount, taxAmount, terms, totalAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceDetailsApiModel {\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    clonedFromId: ").append(toIndentedString(clonedFromId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    duedate: ").append(toIndentedString(duedate)).append("\n");
    sb.append("    enablePartialPayments: ").append(toIndentedString(enablePartialPayments)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoiceCategoryId: ").append(toIndentedString(invoiceCategoryId)).append("\n");
    sb.append("    issuedOn: ").append(toIndentedString(issuedOn)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("    recurringProfile: ").append(toIndentedString(recurringProfile)).append("\n");
    sb.append("    recurringProfileId: ").append(toIndentedString(recurringProfileId)).append("\n");
    sb.append("    shouldSendReminders: ").append(toIndentedString(shouldSendReminders)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subTotalAmount: ").append(toIndentedString(subTotalAmount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccessToken");
    openapiFields.add("Client");
    openapiFields.add("ClonedFromId");
    openapiFields.add("Currency");
    openapiFields.add("DiscountAmount");
    openapiFields.add("Duedate");
    openapiFields.add("EnablePartialPayments");
    openapiFields.add("Id");
    openapiFields.add("InvoiceCategoryId");
    openapiFields.add("IssuedOn");
    openapiFields.add("Notes");
    openapiFields.add("Number");
    openapiFields.add("PoNumber");
    openapiFields.add("RecurringProfile");
    openapiFields.add("RecurringProfileId");
    openapiFields.add("ShouldSendReminders");
    openapiFields.add("Status");
    openapiFields.add("SubTotalAmount");
    openapiFields.add("TaxAmount");
    openapiFields.add("Terms");
    openapiFields.add("TotalAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceDetailsApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceDetailsApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceDetailsApiModel is not found in the empty JSON string", InvoiceDetailsApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceDetailsApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceDetailsApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AccessToken") != null && !jsonObj.get("AccessToken").isJsonNull()) && !jsonObj.get("AccessToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccessToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccessToken").toString()));
      }
      // validate the optional field `Client`
      if (jsonObj.get("Client") != null && !jsonObj.get("Client").isJsonNull()) {
        ClientDetailsApiModel.validateJsonElement(jsonObj.get("Client"));
      }
      // validate the optional field `Currency`
      if (jsonObj.get("Currency") != null && !jsonObj.get("Currency").isJsonNull()) {
        CurrencyDetailsApiModel.validateJsonElement(jsonObj.get("Currency"));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if ((jsonObj.get("Number") != null && !jsonObj.get("Number").isJsonNull()) && !jsonObj.get("Number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Number").toString()));
      }
      if ((jsonObj.get("PoNumber") != null && !jsonObj.get("PoNumber").isJsonNull()) && !jsonObj.get("PoNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PoNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PoNumber").toString()));
      }
      // validate the optional field `RecurringProfile`
      if (jsonObj.get("RecurringProfile") != null && !jsonObj.get("RecurringProfile").isJsonNull()) {
        InvoiceRecurringApiModel.validateJsonElement(jsonObj.get("RecurringProfile"));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("Status"));
      }
      if ((jsonObj.get("Terms") != null && !jsonObj.get("Terms").isJsonNull()) && !jsonObj.get("Terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Terms").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceDetailsApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceDetailsApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceDetailsApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceDetailsApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceDetailsApiModel>() {
           @Override
           public void write(JsonWriter out, InvoiceDetailsApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceDetailsApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceDetailsApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceDetailsApiModel
   * @throws IOException if the JSON string is invalid with respect to InvoiceDetailsApiModel
   */
  public static InvoiceDetailsApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceDetailsApiModel.class);
  }

  /**
   * Convert an instance of InvoiceDetailsApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

