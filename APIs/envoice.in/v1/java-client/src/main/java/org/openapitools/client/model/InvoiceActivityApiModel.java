/*
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceActivityApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:00.947845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceActivityApiModel {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "InvoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private String invoiceNumber;

  public static final String SERIALIZED_NAME_LINK = "Link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  /**
   * Type of the activity
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CREATED("Created"),
    
    DRAFT("Draft"),
    
    CLONED("Cloned"),
    
    SENT_VIA_EMAIL("SentViaEmail"),
    
    SENT_VIA_SMS("SentViaSms"),
    
    SENT_REMINDER_VIA_EMAIL("SentReminderViaEmail"),
    
    SENT_REMINDER_VIA_SMS("SentReminderViaSms"),
    
    OPENED("Opened"),
    
    VIEWED("Viewed"),
    
    REJECTED("Rejected"),
    
    UPDATED("Updated"),
    
    PAID("Paid"),
    
    UNPAID("Unpaid"),
    
    OVERDUE("Overdue"),
    
    NEW_MANUAL_PAYMENT("NewManualPayment"),
    
    NEW_PAYMENT_WITH_PAYPAL("NewPaymentWithPaypal"),
    
    NEW_PAYMENT_WITH_STRIPE("NewPaymentWithStripe"),
    
    NEW_PAYMENT_WITH_PAYONEER("NewPaymentWithPayoneer"),
    
    SENT_TO_ACCOUNTANT("SentToAccountant"),
    
    DOWNLOADED_AS_PDF("DownloadedAsPdf"),
    
    MARK_AS_PAID_BY_THE_CLIENT("MarkAsPaidByTheClient"),
    
    OPENED_ATTACHMENT("OpenedAttachment"),
    
    NEW_PAYMENT_WITH_SQUARE("NewPaymentWithSquare"),
    
    NEW_PAYMENT_WITH_KLIK_AND_PAY("NewPaymentWithKlikAndPay"),
    
    NEW_PAYMENT_WITH_RAZORPAY("NewPaymentWithRazorpay"),
    
    NEW_PAYMENT_WITH_WEPAY("NewPaymentWithWepay"),
    
    NEW_PAYMENT_WITH_HALKBANK("NewPaymentWithHalkbank"),
    
    CHANGE_STATUS("ChangeStatus"),
    
    ORDER_UPDATED("OrderUpdated"),
    
    ORDER_CREATED("OrderCreated"),
    
    NEW_PAYMENT_WITH_TWO_CHECKOUT("NewPaymentWithTwoCheckout"),
    
    NEW_PAYMENT_WITH_PAYMENT_WALL("NewPaymentWithPaymentWall"),
    
    NEW_PAYMENT_WITH_BAMBORA_EU("NewPaymentWithBamboraEU"),
    
    NEW_PAYMENT_WITH_BAMBORA_NA("NewPaymentWithBamboraNA"),
    
    VOID("Void"),
    
    NEW_PAYMENT_WITH_NLB("NewPaymentWithNlb"),
    
    NEW_PAYMENT_WITH_AUTHORIZE_NET("NewPaymentWithAuthorizeNet"),
    
    NEW_PAYMENT_WITH_BRAINTREE("NewPaymentWithBraintree"),
    
    ESTIMATION_CREATED("EstimationCreated"),
    
    ESTIMATION_DRAFT("EstimationDraft"),
    
    ESTIMATION_CLONED("EstimationCloned"),
    
    ESTIMATION_SENT_VIA_EMAIL("EstimationSentViaEmail"),
    
    ESTIMATION_OPENED("EstimationOpened"),
    
    ESTIMATION_VIEWED("EstimationViewed"),
    
    ESTIMATION_ACCEPTED("EstimationAccepted"),
    
    ESTIMATION_REJECTED("EstimationRejected"),
    
    ESTIMATION_UPDATED("EstimationUpdated"),
    
    ESTIMATION_DOWNLOADED_AS_PDF("EstimationDownloadedAsPdf"),
    
    INVOICE_DIGITALLY_SIGNED("InvoiceDigitallySigned");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public InvoiceActivityApiModel() {
  }

  public InvoiceActivityApiModel id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Id of invoice activity
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public InvoiceActivityApiModel invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * Indicates to which invoice this activity refers to
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public InvoiceActivityApiModel link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Url which point out to a certain activity action. Ex: Click to view the payment
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public InvoiceActivityApiModel message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Message associated with the activity
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public InvoiceActivityApiModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the activity
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceActivityApiModel invoiceActivityApiModel = (InvoiceActivityApiModel) o;
    return Objects.equals(this.id, invoiceActivityApiModel.id) &&
        Objects.equals(this.invoiceNumber, invoiceActivityApiModel.invoiceNumber) &&
        Objects.equals(this.link, invoiceActivityApiModel.link) &&
        Objects.equals(this.message, invoiceActivityApiModel.message) &&
        Objects.equals(this.type, invoiceActivityApiModel.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, invoiceNumber, link, message, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceActivityApiModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("InvoiceNumber");
    openapiFields.add("Link");
    openapiFields.add("Message");
    openapiFields.add("Type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceActivityApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceActivityApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceActivityApiModel is not found in the empty JSON string", InvoiceActivityApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceActivityApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceActivityApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("InvoiceNumber") != null && !jsonObj.get("InvoiceNumber").isJsonNull()) && !jsonObj.get("InvoiceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceNumber").toString()));
      }
      if ((jsonObj.get("Link") != null && !jsonObj.get("Link").isJsonNull()) && !jsonObj.get("Link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Link").toString()));
      }
      if ((jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) && !jsonObj.get("Message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Message").toString()));
      }
      if ((jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("Type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceActivityApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceActivityApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceActivityApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceActivityApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceActivityApiModel>() {
           @Override
           public void write(JsonWriter out, InvoiceActivityApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceActivityApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceActivityApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceActivityApiModel
   * @throws IOException if the JSON string is invalid with respect to InvoiceActivityApiModel
   */
  public static InvoiceActivityApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceActivityApiModel.class);
  }

  /**
   * Convert an instance of InvoiceActivityApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

