/*
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CurrencyDetailsApiModel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductDetailsApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:00.947845-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductDetailsApiModel {
  public static final String SERIALIZED_NAME_ACCESS_TOKEN = "AccessToken";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN)
  private String accessToken;

  public static final String SERIALIZED_NAME_AFTER_PAYMENT_DESCRIPTION = "AfterPaymentDescription";
  @SerializedName(SERIALIZED_NAME_AFTER_PAYMENT_DESCRIPTION)
  private String afterPaymentDescription;

  public static final String SERIALIZED_NAME_BUTTON_CALL_TO_ACTION = "ButtonCallToAction";
  @SerializedName(SERIALIZED_NAME_BUTTON_CALL_TO_ACTION)
  private String buttonCallToAction;

  public static final String SERIALIZED_NAME_CURRENCY = "Currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyDetailsApiModel currency;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "CurrencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private Integer currencyId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_FEATURED = "IsFeatured";
  @SerializedName(SERIALIZED_NAME_IS_FEATURED)
  private Boolean isFeatured;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "ShippingAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private Double shippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_DESCRIPTION = "ShippingDescription";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DESCRIPTION)
  private String shippingDescription;

  /**
   * Product availability status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("Active"),
    
    NOT_AVAILABLE("NotAvailable"),
    
    INACTIVE("Inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_SUB_TOTAL_AMOUNT = "SubTotalAmount";
  @SerializedName(SERIALIZED_NAME_SUB_TOTAL_AMOUNT)
  private Double subTotalAmount;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "TotalAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private Double totalAmount;

  public static final String SERIALIZED_NAME_TOTAL_WITH_SHIPPING = "TotalWithShipping";
  @SerializedName(SERIALIZED_NAME_TOTAL_WITH_SHIPPING)
  private Double totalWithShipping;

  public static final String SERIALIZED_NAME_WHAT_HAPPENS_NEXT_DESCRIPTION = "WhatHappensNextDescription";
  @SerializedName(SERIALIZED_NAME_WHAT_HAPPENS_NEXT_DESCRIPTION)
  private String whatHappensNextDescription;

  public ProductDetailsApiModel() {
  }

  public ProductDetailsApiModel accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

  /**
   * Product short link
   * @return accessToken
   */
  @javax.annotation.Nullable
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }


  public ProductDetailsApiModel afterPaymentDescription(String afterPaymentDescription) {
    this.afterPaymentDescription = afterPaymentDescription;
    return this;
  }

  /**
   * After payment description
   * @return afterPaymentDescription
   */
  @javax.annotation.Nullable
  public String getAfterPaymentDescription() {
    return afterPaymentDescription;
  }

  public void setAfterPaymentDescription(String afterPaymentDescription) {
    this.afterPaymentDescription = afterPaymentDescription;
  }


  public ProductDetailsApiModel buttonCallToAction(String buttonCallToAction) {
    this.buttonCallToAction = buttonCallToAction;
    return this;
  }

  /**
   * Default button call to action  Ex: Buy now, subscribe, ...
   * @return buttonCallToAction
   */
  @javax.annotation.Nullable
  public String getButtonCallToAction() {
    return buttonCallToAction;
  }

  public void setButtonCallToAction(String buttonCallToAction) {
    this.buttonCallToAction = buttonCallToAction;
  }


  public ProductDetailsApiModel currency(CurrencyDetailsApiModel currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public CurrencyDetailsApiModel getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyDetailsApiModel currency) {
    this.currency = currency;
  }


  public ProductDetailsApiModel currencyId(Integer currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Foreign key Currency
   * @return currencyId
   */
  @javax.annotation.Nullable
  public Integer getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Integer currencyId) {
    this.currencyId = currencyId;
  }


  public ProductDetailsApiModel description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Product description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ProductDetailsApiModel id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Product id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ProductDetailsApiModel isFeatured(Boolean isFeatured) {
    this.isFeatured = isFeatured;
    return this;
  }

  /**
   * Indicate that the product is set as featured
   * @return isFeatured
   */
  @javax.annotation.Nullable
  public Boolean getIsFeatured() {
    return isFeatured;
  }

  public void setIsFeatured(Boolean isFeatured) {
    this.isFeatured = isFeatured;
  }


  public ProductDetailsApiModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Product alias
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ProductDetailsApiModel shippingAmount(Double shippingAmount) {
    this.shippingAmount = shippingAmount;
    return this;
  }

  /**
   * Cost for shipping the product
   * @return shippingAmount
   */
  @javax.annotation.Nullable
  public Double getShippingAmount() {
    return shippingAmount;
  }

  public void setShippingAmount(Double shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public ProductDetailsApiModel shippingDescription(String shippingDescription) {
    this.shippingDescription = shippingDescription;
    return this;
  }

  /**
   * Client instructions for shipping
   * @return shippingDescription
   */
  @javax.annotation.Nullable
  public String getShippingDescription() {
    return shippingDescription;
  }

  public void setShippingDescription(String shippingDescription) {
    this.shippingDescription = shippingDescription;
  }


  public ProductDetailsApiModel status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Product availability status
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ProductDetailsApiModel subTotalAmount(Double subTotalAmount) {
    this.subTotalAmount = subTotalAmount;
    return this;
  }

  /**
   * Subtotal amount of product
   * @return subTotalAmount
   */
  @javax.annotation.Nullable
  public Double getSubTotalAmount() {
    return subTotalAmount;
  }

  public void setSubTotalAmount(Double subTotalAmount) {
    this.subTotalAmount = subTotalAmount;
  }


  public ProductDetailsApiModel totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Total amount of product
   * @return totalAmount
   */
  @javax.annotation.Nullable
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }


  public ProductDetailsApiModel totalWithShipping(Double totalWithShipping) {
    this.totalWithShipping = totalWithShipping;
    return this;
  }

  /**
   * Total amount of product with shipping
   * @return totalWithShipping
   */
  @javax.annotation.Nullable
  public Double getTotalWithShipping() {
    return totalWithShipping;
  }

  public void setTotalWithShipping(Double totalWithShipping) {
    this.totalWithShipping = totalWithShipping;
  }


  public ProductDetailsApiModel whatHappensNextDescription(String whatHappensNextDescription) {
    this.whatHappensNextDescription = whatHappensNextDescription;
    return this;
  }

  /**
   * What happens next description
   * @return whatHappensNextDescription
   */
  @javax.annotation.Nullable
  public String getWhatHappensNextDescription() {
    return whatHappensNextDescription;
  }

  public void setWhatHappensNextDescription(String whatHappensNextDescription) {
    this.whatHappensNextDescription = whatHappensNextDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductDetailsApiModel productDetailsApiModel = (ProductDetailsApiModel) o;
    return Objects.equals(this.accessToken, productDetailsApiModel.accessToken) &&
        Objects.equals(this.afterPaymentDescription, productDetailsApiModel.afterPaymentDescription) &&
        Objects.equals(this.buttonCallToAction, productDetailsApiModel.buttonCallToAction) &&
        Objects.equals(this.currency, productDetailsApiModel.currency) &&
        Objects.equals(this.currencyId, productDetailsApiModel.currencyId) &&
        Objects.equals(this.description, productDetailsApiModel.description) &&
        Objects.equals(this.id, productDetailsApiModel.id) &&
        Objects.equals(this.isFeatured, productDetailsApiModel.isFeatured) &&
        Objects.equals(this.name, productDetailsApiModel.name) &&
        Objects.equals(this.shippingAmount, productDetailsApiModel.shippingAmount) &&
        Objects.equals(this.shippingDescription, productDetailsApiModel.shippingDescription) &&
        Objects.equals(this.status, productDetailsApiModel.status) &&
        Objects.equals(this.subTotalAmount, productDetailsApiModel.subTotalAmount) &&
        Objects.equals(this.totalAmount, productDetailsApiModel.totalAmount) &&
        Objects.equals(this.totalWithShipping, productDetailsApiModel.totalWithShipping) &&
        Objects.equals(this.whatHappensNextDescription, productDetailsApiModel.whatHappensNextDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, afterPaymentDescription, buttonCallToAction, currency, currencyId, description, id, isFeatured, name, shippingAmount, shippingDescription, status, subTotalAmount, totalAmount, totalWithShipping, whatHappensNextDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductDetailsApiModel {\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    afterPaymentDescription: ").append(toIndentedString(afterPaymentDescription)).append("\n");
    sb.append("    buttonCallToAction: ").append(toIndentedString(buttonCallToAction)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isFeatured: ").append(toIndentedString(isFeatured)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingDescription: ").append(toIndentedString(shippingDescription)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subTotalAmount: ").append(toIndentedString(subTotalAmount)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    totalWithShipping: ").append(toIndentedString(totalWithShipping)).append("\n");
    sb.append("    whatHappensNextDescription: ").append(toIndentedString(whatHappensNextDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccessToken");
    openapiFields.add("AfterPaymentDescription");
    openapiFields.add("ButtonCallToAction");
    openapiFields.add("Currency");
    openapiFields.add("CurrencyId");
    openapiFields.add("Description");
    openapiFields.add("Id");
    openapiFields.add("IsFeatured");
    openapiFields.add("Name");
    openapiFields.add("ShippingAmount");
    openapiFields.add("ShippingDescription");
    openapiFields.add("Status");
    openapiFields.add("SubTotalAmount");
    openapiFields.add("TotalAmount");
    openapiFields.add("TotalWithShipping");
    openapiFields.add("WhatHappensNextDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductDetailsApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductDetailsApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductDetailsApiModel is not found in the empty JSON string", ProductDetailsApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductDetailsApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductDetailsApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AccessToken") != null && !jsonObj.get("AccessToken").isJsonNull()) && !jsonObj.get("AccessToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccessToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccessToken").toString()));
      }
      if ((jsonObj.get("AfterPaymentDescription") != null && !jsonObj.get("AfterPaymentDescription").isJsonNull()) && !jsonObj.get("AfterPaymentDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AfterPaymentDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AfterPaymentDescription").toString()));
      }
      if ((jsonObj.get("ButtonCallToAction") != null && !jsonObj.get("ButtonCallToAction").isJsonNull()) && !jsonObj.get("ButtonCallToAction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ButtonCallToAction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ButtonCallToAction").toString()));
      }
      // validate the optional field `Currency`
      if (jsonObj.get("Currency") != null && !jsonObj.get("Currency").isJsonNull()) {
        CurrencyDetailsApiModel.validateJsonElement(jsonObj.get("Currency"));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("ShippingDescription") != null && !jsonObj.get("ShippingDescription").isJsonNull()) && !jsonObj.get("ShippingDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingDescription").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("Status"));
      }
      if ((jsonObj.get("WhatHappensNextDescription") != null && !jsonObj.get("WhatHappensNextDescription").isJsonNull()) && !jsonObj.get("WhatHappensNextDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WhatHappensNextDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WhatHappensNextDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductDetailsApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductDetailsApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductDetailsApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductDetailsApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductDetailsApiModel>() {
           @Override
           public void write(JsonWriter out, ProductDetailsApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductDetailsApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductDetailsApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductDetailsApiModel
   * @throws IOException if the JSON string is invalid with respect to ProductDetailsApiModel
   */
  public static ProductDetailsApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductDetailsApiModel.class);
  }

  /**
   * Convert an instance of ProductDetailsApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

