# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaymentGatewayInputField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_configurable: bool=None, name: str=None, type: str=None, value: str=None, values: List[str]=None):
        """PaymentGatewayInputField - a model defined in OpenAPI

        :param is_configurable: The is_configurable of this PaymentGatewayInputField.
        :param name: The name of this PaymentGatewayInputField.
        :param type: The type of this PaymentGatewayInputField.
        :param value: The value of this PaymentGatewayInputField.
        :param values: The values of this PaymentGatewayInputField.
        """
        self.openapi_types = {
            'is_configurable': bool,
            'name': str,
            'type': str,
            'value': str,
            'values': List[str]
        }

        self.attribute_map = {
            'is_configurable': 'IsConfigurable',
            'name': 'Name',
            'type': 'Type',
            'value': 'Value',
            'values': 'Values'
        }

        self._is_configurable = is_configurable
        self._name = name
        self._type = type
        self._value = value
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentGatewayInputField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentGatewayInputField of this PaymentGatewayInputField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_configurable(self):
        """Gets the is_configurable of this PaymentGatewayInputField.


        :return: The is_configurable of this PaymentGatewayInputField.
        :rtype: bool
        """
        return self._is_configurable

    @is_configurable.setter
    def is_configurable(self, is_configurable):
        """Sets the is_configurable of this PaymentGatewayInputField.


        :param is_configurable: The is_configurable of this PaymentGatewayInputField.
        :type is_configurable: bool
        """

        self._is_configurable = is_configurable

    @property
    def name(self):
        """Gets the name of this PaymentGatewayInputField.


        :return: The name of this PaymentGatewayInputField.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PaymentGatewayInputField.


        :param name: The name of this PaymentGatewayInputField.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this PaymentGatewayInputField.


        :return: The type of this PaymentGatewayInputField.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PaymentGatewayInputField.


        :param type: The type of this PaymentGatewayInputField.
        :type type: str
        """
        allowed_values = ["Input", "Dropdown"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def value(self):
        """Gets the value of this PaymentGatewayInputField.


        :return: The value of this PaymentGatewayInputField.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this PaymentGatewayInputField.


        :param value: The value of this PaymentGatewayInputField.
        :type value: str
        """

        self._value = value

    @property
    def values(self):
        """Gets the values of this PaymentGatewayInputField.


        :return: The values of this PaymentGatewayInputField.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this PaymentGatewayInputField.


        :param values: The values of this PaymentGatewayInputField.
        :type values: List[str]
        """

        self._values = values
