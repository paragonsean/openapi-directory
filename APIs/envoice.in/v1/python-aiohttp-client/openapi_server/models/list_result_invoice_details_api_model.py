# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_error_info import IErrorInfo
from openapi_server.models.invoice_details_api_model import InvoiceDetailsApiModel
from openapi_server import util


class ListResultInvoiceDetailsApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, error_messages: List[IErrorInfo]=None, is_faulted: bool=None, result: List[InvoiceDetailsApiModel]=None, total_count: int=None):
        """ListResultInvoiceDetailsApiModel - a model defined in OpenAPI

        :param count: The count of this ListResultInvoiceDetailsApiModel.
        :param error_messages: The error_messages of this ListResultInvoiceDetailsApiModel.
        :param is_faulted: The is_faulted of this ListResultInvoiceDetailsApiModel.
        :param result: The result of this ListResultInvoiceDetailsApiModel.
        :param total_count: The total_count of this ListResultInvoiceDetailsApiModel.
        """
        self.openapi_types = {
            'count': int,
            'error_messages': List[IErrorInfo],
            'is_faulted': bool,
            'result': List[InvoiceDetailsApiModel],
            'total_count': int
        }

        self.attribute_map = {
            'count': 'Count',
            'error_messages': 'ErrorMessages',
            'is_faulted': 'IsFaulted',
            'result': 'Result',
            'total_count': 'TotalCount'
        }

        self._count = count
        self._error_messages = error_messages
        self._is_faulted = is_faulted
        self._result = result
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListResultInvoiceDetailsApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListResult_InvoiceDetailsApiModel_ of this ListResultInvoiceDetailsApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this ListResultInvoiceDetailsApiModel.


        :return: The count of this ListResultInvoiceDetailsApiModel.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ListResultInvoiceDetailsApiModel.


        :param count: The count of this ListResultInvoiceDetailsApiModel.
        :type count: int
        """

        self._count = count

    @property
    def error_messages(self):
        """Gets the error_messages of this ListResultInvoiceDetailsApiModel.


        :return: The error_messages of this ListResultInvoiceDetailsApiModel.
        :rtype: List[IErrorInfo]
        """
        return self._error_messages

    @error_messages.setter
    def error_messages(self, error_messages):
        """Sets the error_messages of this ListResultInvoiceDetailsApiModel.


        :param error_messages: The error_messages of this ListResultInvoiceDetailsApiModel.
        :type error_messages: List[IErrorInfo]
        """

        self._error_messages = error_messages

    @property
    def is_faulted(self):
        """Gets the is_faulted of this ListResultInvoiceDetailsApiModel.


        :return: The is_faulted of this ListResultInvoiceDetailsApiModel.
        :rtype: bool
        """
        return self._is_faulted

    @is_faulted.setter
    def is_faulted(self, is_faulted):
        """Sets the is_faulted of this ListResultInvoiceDetailsApiModel.


        :param is_faulted: The is_faulted of this ListResultInvoiceDetailsApiModel.
        :type is_faulted: bool
        """

        self._is_faulted = is_faulted

    @property
    def result(self):
        """Gets the result of this ListResultInvoiceDetailsApiModel.


        :return: The result of this ListResultInvoiceDetailsApiModel.
        :rtype: List[InvoiceDetailsApiModel]
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ListResultInvoiceDetailsApiModel.


        :param result: The result of this ListResultInvoiceDetailsApiModel.
        :type result: List[InvoiceDetailsApiModel]
        """

        self._result = result

    @property
    def total_count(self):
        """Gets the total_count of this ListResultInvoiceDetailsApiModel.


        :return: The total_count of this ListResultInvoiceDetailsApiModel.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this ListResultInvoiceDetailsApiModel.


        :param total_count: The total_count of this ListResultInvoiceDetailsApiModel.
        :type total_count: int
        """

        self._total_count = total_count
