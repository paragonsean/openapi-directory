# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page: int=None, page_size: int=None):
        """QueryOptions - a model defined in OpenAPI

        :param page: The page of this QueryOptions.
        :param page_size: The page_size of this QueryOptions.
        """
        self.openapi_types = {
            'page': int,
            'page_size': int
        }

        self.attribute_map = {
            'page': 'Page',
            'page_size': 'PageSize'
        }

        self._page = page
        self._page_size = page_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryOptions of this QueryOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page(self):
        """Gets the page of this QueryOptions.


        :return: The page of this QueryOptions.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this QueryOptions.


        :param page: The page of this QueryOptions.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self):
        """Gets the page_size of this QueryOptions.


        :return: The page_size of this QueryOptions.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this QueryOptions.


        :param page_size: The page_size of this QueryOptions.
        :type page_size: int
        """

        self._page_size = page_size
