# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoiceActivityApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, invoice_number: str=None, link: str=None, message: str=None, type: str=None):
        """InvoiceActivityApiModel - a model defined in OpenAPI

        :param id: The id of this InvoiceActivityApiModel.
        :param invoice_number: The invoice_number of this InvoiceActivityApiModel.
        :param link: The link of this InvoiceActivityApiModel.
        :param message: The message of this InvoiceActivityApiModel.
        :param type: The type of this InvoiceActivityApiModel.
        """
        self.openapi_types = {
            'id': int,
            'invoice_number': str,
            'link': str,
            'message': str,
            'type': str
        }

        self.attribute_map = {
            'id': 'Id',
            'invoice_number': 'InvoiceNumber',
            'link': 'Link',
            'message': 'Message',
            'type': 'Type'
        }

        self._id = id
        self._invoice_number = invoice_number
        self._link = link
        self._message = message
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceActivityApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceActivityApiModel of this InvoiceActivityApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this InvoiceActivityApiModel.

        Id of invoice activity

        :return: The id of this InvoiceActivityApiModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvoiceActivityApiModel.

        Id of invoice activity

        :param id: The id of this InvoiceActivityApiModel.
        :type id: int
        """

        self._id = id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this InvoiceActivityApiModel.

        Indicates to which invoice this activity refers to

        :return: The invoice_number of this InvoiceActivityApiModel.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this InvoiceActivityApiModel.

        Indicates to which invoice this activity refers to

        :param invoice_number: The invoice_number of this InvoiceActivityApiModel.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number

    @property
    def link(self):
        """Gets the link of this InvoiceActivityApiModel.

        Url which point out to a certain activity action. Ex: Click to view the payment

        :return: The link of this InvoiceActivityApiModel.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this InvoiceActivityApiModel.

        Url which point out to a certain activity action. Ex: Click to view the payment

        :param link: The link of this InvoiceActivityApiModel.
        :type link: str
        """

        self._link = link

    @property
    def message(self):
        """Gets the message of this InvoiceActivityApiModel.

        Message associated with the activity

        :return: The message of this InvoiceActivityApiModel.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InvoiceActivityApiModel.

        Message associated with the activity

        :param message: The message of this InvoiceActivityApiModel.
        :type message: str
        """

        self._message = message

    @property
    def type(self):
        """Gets the type of this InvoiceActivityApiModel.

        Type of the activity

        :return: The type of this InvoiceActivityApiModel.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InvoiceActivityApiModel.

        Type of the activity

        :param type: The type of this InvoiceActivityApiModel.
        :type type: str
        """
        allowed_values = ["Created", "Draft", "Cloned", "SentViaEmail", "SentViaSms", "SentReminderViaEmail", "SentReminderViaSms", "Opened", "Viewed", "Rejected", "Updated", "Paid", "Unpaid", "Overdue", "NewManualPayment", "NewPaymentWithPaypal", "NewPaymentWithStripe", "NewPaymentWithPayoneer", "SentToAccountant", "DownloadedAsPdf", "MarkAsPaidByTheClient", "OpenedAttachment", "NewPaymentWithSquare", "NewPaymentWithKlikAndPay", "NewPaymentWithRazorpay", "NewPaymentWithWepay", "NewPaymentWithHalkbank", "ChangeStatus", "OrderUpdated", "OrderCreated", "NewPaymentWithTwoCheckout", "NewPaymentWithPaymentWall", "NewPaymentWithBamboraEU", "NewPaymentWithBamboraNA", "Void", "NewPaymentWithNlb", "NewPaymentWithAuthorizeNet", "NewPaymentWithBraintree", "EstimationCreated", "EstimationDraft", "EstimationCloned", "EstimationSentViaEmail", "EstimationOpened", "EstimationViewed", "EstimationAccepted", "EstimationRejected", "EstimationUpdated", "EstimationDownloadedAsPdf", "InvoiceDigitallySigned"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
