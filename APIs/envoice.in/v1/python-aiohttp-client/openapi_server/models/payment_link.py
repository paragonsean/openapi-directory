# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client import Client
from openapi_server.models.currency import Currency
from openapi_server.models.invoice import Invoice
from openapi_server.models.payment_link_item import PaymentLinkItem
from openapi_server.models.user import User
from openapi_server import util


class PaymentLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, client: Client=None, client_id: int=None, currency: Currency=None, currency_id: int=None, discount_amount: float=None, id: int=None, invoice: Invoice=None, items: List[PaymentLinkItem]=None, number: str=None, sub_total_amount: float=None, tax_amount: float=None, total_amount: float=None, user: User=None, user_id: int=None):
        """PaymentLink - a model defined in OpenAPI

        :param access_token: The access_token of this PaymentLink.
        :param client: The client of this PaymentLink.
        :param client_id: The client_id of this PaymentLink.
        :param currency: The currency of this PaymentLink.
        :param currency_id: The currency_id of this PaymentLink.
        :param discount_amount: The discount_amount of this PaymentLink.
        :param id: The id of this PaymentLink.
        :param invoice: The invoice of this PaymentLink.
        :param items: The items of this PaymentLink.
        :param number: The number of this PaymentLink.
        :param sub_total_amount: The sub_total_amount of this PaymentLink.
        :param tax_amount: The tax_amount of this PaymentLink.
        :param total_amount: The total_amount of this PaymentLink.
        :param user: The user of this PaymentLink.
        :param user_id: The user_id of this PaymentLink.
        """
        self.openapi_types = {
            'access_token': str,
            'client': Client,
            'client_id': int,
            'currency': Currency,
            'currency_id': int,
            'discount_amount': float,
            'id': int,
            'invoice': Invoice,
            'items': List[PaymentLinkItem],
            'number': str,
            'sub_total_amount': float,
            'tax_amount': float,
            'total_amount': float,
            'user': User,
            'user_id': int
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'client': 'Client',
            'client_id': 'ClientId',
            'currency': 'Currency',
            'currency_id': 'CurrencyId',
            'discount_amount': 'DiscountAmount',
            'id': 'Id',
            'invoice': 'Invoice',
            'items': 'Items',
            'number': 'Number',
            'sub_total_amount': 'SubTotalAmount',
            'tax_amount': 'TaxAmount',
            'total_amount': 'TotalAmount',
            'user': 'User',
            'user_id': 'UserId'
        }

        self._access_token = access_token
        self._client = client
        self._client_id = client_id
        self._currency = currency
        self._currency_id = currency_id
        self._discount_amount = discount_amount
        self._id = id
        self._invoice = invoice
        self._items = items
        self._number = number
        self._sub_total_amount = sub_total_amount
        self._tax_amount = tax_amount
        self._total_amount = total_amount
        self._user = user
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentLink of this PaymentLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this PaymentLink.


        :return: The access_token of this PaymentLink.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this PaymentLink.


        :param access_token: The access_token of this PaymentLink.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def client(self):
        """Gets the client of this PaymentLink.


        :return: The client of this PaymentLink.
        :rtype: Client
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this PaymentLink.


        :param client: The client of this PaymentLink.
        :type client: Client
        """

        self._client = client

    @property
    def client_id(self):
        """Gets the client_id of this PaymentLink.


        :return: The client_id of this PaymentLink.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this PaymentLink.


        :param client_id: The client_id of this PaymentLink.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def currency(self):
        """Gets the currency of this PaymentLink.


        :return: The currency of this PaymentLink.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this PaymentLink.


        :param currency: The currency of this PaymentLink.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def currency_id(self):
        """Gets the currency_id of this PaymentLink.


        :return: The currency_id of this PaymentLink.
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this PaymentLink.


        :param currency_id: The currency_id of this PaymentLink.
        :type currency_id: int
        """

        self._currency_id = currency_id

    @property
    def discount_amount(self):
        """Gets the discount_amount of this PaymentLink.


        :return: The discount_amount of this PaymentLink.
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this PaymentLink.


        :param discount_amount: The discount_amount of this PaymentLink.
        :type discount_amount: float
        """

        self._discount_amount = discount_amount

    @property
    def id(self):
        """Gets the id of this PaymentLink.


        :return: The id of this PaymentLink.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PaymentLink.


        :param id: The id of this PaymentLink.
        :type id: int
        """

        self._id = id

    @property
    def invoice(self):
        """Gets the invoice of this PaymentLink.


        :return: The invoice of this PaymentLink.
        :rtype: Invoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this PaymentLink.


        :param invoice: The invoice of this PaymentLink.
        :type invoice: Invoice
        """

        self._invoice = invoice

    @property
    def items(self):
        """Gets the items of this PaymentLink.


        :return: The items of this PaymentLink.
        :rtype: List[PaymentLinkItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this PaymentLink.


        :param items: The items of this PaymentLink.
        :type items: List[PaymentLinkItem]
        """

        self._items = items

    @property
    def number(self):
        """Gets the number of this PaymentLink.


        :return: The number of this PaymentLink.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this PaymentLink.


        :param number: The number of this PaymentLink.
        :type number: str
        """

        self._number = number

    @property
    def sub_total_amount(self):
        """Gets the sub_total_amount of this PaymentLink.


        :return: The sub_total_amount of this PaymentLink.
        :rtype: float
        """
        return self._sub_total_amount

    @sub_total_amount.setter
    def sub_total_amount(self, sub_total_amount):
        """Sets the sub_total_amount of this PaymentLink.


        :param sub_total_amount: The sub_total_amount of this PaymentLink.
        :type sub_total_amount: float
        """

        self._sub_total_amount = sub_total_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this PaymentLink.


        :return: The tax_amount of this PaymentLink.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this PaymentLink.


        :param tax_amount: The tax_amount of this PaymentLink.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def total_amount(self):
        """Gets the total_amount of this PaymentLink.


        :return: The total_amount of this PaymentLink.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this PaymentLink.


        :param total_amount: The total_amount of this PaymentLink.
        :type total_amount: float
        """

        self._total_amount = total_amount

    @property
    def user(self):
        """Gets the user of this PaymentLink.


        :return: The user of this PaymentLink.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this PaymentLink.


        :param user: The user of this PaymentLink.
        :type user: User
        """

        self._user = user

    @property
    def user_id(self):
        """Gets the user_id of this PaymentLink.


        :return: The user_id of this PaymentLink.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this PaymentLink.


        :param user_id: The user_id of this PaymentLink.
        :type user_id: int
        """

        self._user_id = user_id
