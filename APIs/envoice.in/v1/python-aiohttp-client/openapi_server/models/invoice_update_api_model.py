# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invoice_gateway_api_model import InvoiceGatewayApiModel
from openapi_server.models.invoice_recurring_api_model import InvoiceRecurringApiModel
from openapi_server.models.invoice_update_attachment_api_model import InvoiceUpdateAttachmentApiModel
from openapi_server.models.invoice_update_item_api_model import InvoiceUpdateItemApiModel
from openapi_server import util


class InvoiceUpdateApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachments: List[InvoiceUpdateAttachmentApiModel]=None, client_id: int=None, cloned_from_id: int=None, currency_id: int=None, duedate: datetime=None, id: int=None, invoice_category_id: int=None, issued_on: datetime=None, items: List[InvoiceUpdateItemApiModel]=None, notes: str=None, number: str=None, payment_gateways: List[InvoiceGatewayApiModel]=None, po_number: str=None, recurring_profile: InvoiceRecurringApiModel=None, recurring_profile_id: int=None, should_send_reminders: bool=None, status: str=None, terms: str=None):
        """InvoiceUpdateApiModel - a model defined in OpenAPI

        :param attachments: The attachments of this InvoiceUpdateApiModel.
        :param client_id: The client_id of this InvoiceUpdateApiModel.
        :param cloned_from_id: The cloned_from_id of this InvoiceUpdateApiModel.
        :param currency_id: The currency_id of this InvoiceUpdateApiModel.
        :param duedate: The duedate of this InvoiceUpdateApiModel.
        :param id: The id of this InvoiceUpdateApiModel.
        :param invoice_category_id: The invoice_category_id of this InvoiceUpdateApiModel.
        :param issued_on: The issued_on of this InvoiceUpdateApiModel.
        :param items: The items of this InvoiceUpdateApiModel.
        :param notes: The notes of this InvoiceUpdateApiModel.
        :param number: The number of this InvoiceUpdateApiModel.
        :param payment_gateways: The payment_gateways of this InvoiceUpdateApiModel.
        :param po_number: The po_number of this InvoiceUpdateApiModel.
        :param recurring_profile: The recurring_profile of this InvoiceUpdateApiModel.
        :param recurring_profile_id: The recurring_profile_id of this InvoiceUpdateApiModel.
        :param should_send_reminders: The should_send_reminders of this InvoiceUpdateApiModel.
        :param status: The status of this InvoiceUpdateApiModel.
        :param terms: The terms of this InvoiceUpdateApiModel.
        """
        self.openapi_types = {
            'attachments': List[InvoiceUpdateAttachmentApiModel],
            'client_id': int,
            'cloned_from_id': int,
            'currency_id': int,
            'duedate': datetime,
            'id': int,
            'invoice_category_id': int,
            'issued_on': datetime,
            'items': List[InvoiceUpdateItemApiModel],
            'notes': str,
            'number': str,
            'payment_gateways': List[InvoiceGatewayApiModel],
            'po_number': str,
            'recurring_profile': InvoiceRecurringApiModel,
            'recurring_profile_id': int,
            'should_send_reminders': bool,
            'status': str,
            'terms': str
        }

        self.attribute_map = {
            'attachments': 'Attachments',
            'client_id': 'ClientId',
            'cloned_from_id': 'ClonedFromId',
            'currency_id': 'CurrencyId',
            'duedate': 'Duedate',
            'id': 'Id',
            'invoice_category_id': 'InvoiceCategoryId',
            'issued_on': 'IssuedOn',
            'items': 'Items',
            'notes': 'Notes',
            'number': 'Number',
            'payment_gateways': 'PaymentGateways',
            'po_number': 'PoNumber',
            'recurring_profile': 'RecurringProfile',
            'recurring_profile_id': 'RecurringProfileId',
            'should_send_reminders': 'ShouldSendReminders',
            'status': 'Status',
            'terms': 'Terms'
        }

        self._attachments = attachments
        self._client_id = client_id
        self._cloned_from_id = cloned_from_id
        self._currency_id = currency_id
        self._duedate = duedate
        self._id = id
        self._invoice_category_id = invoice_category_id
        self._issued_on = issued_on
        self._items = items
        self._notes = notes
        self._number = number
        self._payment_gateways = payment_gateways
        self._po_number = po_number
        self._recurring_profile = recurring_profile
        self._recurring_profile_id = recurring_profile_id
        self._should_send_reminders = should_send_reminders
        self._status = status
        self._terms = terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceUpdateApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceUpdateApiModel of this InvoiceUpdateApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachments(self):
        """Gets the attachments of this InvoiceUpdateApiModel.

        List of invoice attachments

        :return: The attachments of this InvoiceUpdateApiModel.
        :rtype: List[InvoiceUpdateAttachmentApiModel]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this InvoiceUpdateApiModel.

        List of invoice attachments

        :param attachments: The attachments of this InvoiceUpdateApiModel.
        :type attachments: List[InvoiceUpdateAttachmentApiModel]
        """

        self._attachments = attachments

    @property
    def client_id(self):
        """Gets the client_id of this InvoiceUpdateApiModel.

        The client to whom this invoice is assigned

        :return: The client_id of this InvoiceUpdateApiModel.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this InvoiceUpdateApiModel.

        The client to whom this invoice is assigned

        :param client_id: The client_id of this InvoiceUpdateApiModel.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def cloned_from_id(self):
        """Gets the cloned_from_id of this InvoiceUpdateApiModel.

        Indicate from which invoice this invoice has been cloned from

        :return: The cloned_from_id of this InvoiceUpdateApiModel.
        :rtype: int
        """
        return self._cloned_from_id

    @cloned_from_id.setter
    def cloned_from_id(self, cloned_from_id):
        """Sets the cloned_from_id of this InvoiceUpdateApiModel.

        Indicate from which invoice this invoice has been cloned from

        :param cloned_from_id: The cloned_from_id of this InvoiceUpdateApiModel.
        :type cloned_from_id: int
        """

        self._cloned_from_id = cloned_from_id

    @property
    def currency_id(self):
        """Gets the currency_id of this InvoiceUpdateApiModel.

        Id of the currency for the invoice amounts

        :return: The currency_id of this InvoiceUpdateApiModel.
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this InvoiceUpdateApiModel.

        Id of the currency for the invoice amounts

        :param currency_id: The currency_id of this InvoiceUpdateApiModel.
        :type currency_id: int
        """

        self._currency_id = currency_id

    @property
    def duedate(self):
        """Gets the duedate of this InvoiceUpdateApiModel.

        Indicates when the invoice will be proclamed as due

        :return: The duedate of this InvoiceUpdateApiModel.
        :rtype: datetime
        """
        return self._duedate

    @duedate.setter
    def duedate(self, duedate):
        """Sets the duedate of this InvoiceUpdateApiModel.

        Indicates when the invoice will be proclamed as due

        :param duedate: The duedate of this InvoiceUpdateApiModel.
        :type duedate: datetime
        """

        self._duedate = duedate

    @property
    def id(self):
        """Gets the id of this InvoiceUpdateApiModel.

        Invoice id

        :return: The id of this InvoiceUpdateApiModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvoiceUpdateApiModel.

        Invoice id

        :param id: The id of this InvoiceUpdateApiModel.
        :type id: int
        """

        self._id = id

    @property
    def invoice_category_id(self):
        """Gets the invoice_category_id of this InvoiceUpdateApiModel.

        Hold the id of the invoice category

        :return: The invoice_category_id of this InvoiceUpdateApiModel.
        :rtype: int
        """
        return self._invoice_category_id

    @invoice_category_id.setter
    def invoice_category_id(self, invoice_category_id):
        """Sets the invoice_category_id of this InvoiceUpdateApiModel.

        Hold the id of the invoice category

        :param invoice_category_id: The invoice_category_id of this InvoiceUpdateApiModel.
        :type invoice_category_id: int
        """

        self._invoice_category_id = invoice_category_id

    @property
    def issued_on(self):
        """Gets the issued_on of this InvoiceUpdateApiModel.

        Indicates when the invoice was issued

        :return: The issued_on of this InvoiceUpdateApiModel.
        :rtype: datetime
        """
        return self._issued_on

    @issued_on.setter
    def issued_on(self, issued_on):
        """Sets the issued_on of this InvoiceUpdateApiModel.

        Indicates when the invoice was issued

        :param issued_on: The issued_on of this InvoiceUpdateApiModel.
        :type issued_on: datetime
        """

        self._issued_on = issued_on

    @property
    def items(self):
        """Gets the items of this InvoiceUpdateApiModel.

        List of invoice items

        :return: The items of this InvoiceUpdateApiModel.
        :rtype: List[InvoiceUpdateItemApiModel]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this InvoiceUpdateApiModel.

        List of invoice items

        :param items: The items of this InvoiceUpdateApiModel.
        :type items: List[InvoiceUpdateItemApiModel]
        """

        self._items = items

    @property
    def notes(self):
        """Gets the notes of this InvoiceUpdateApiModel.

        Internal note regarding the invoice

        :return: The notes of this InvoiceUpdateApiModel.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this InvoiceUpdateApiModel.

        Internal note regarding the invoice

        :param notes: The notes of this InvoiceUpdateApiModel.
        :type notes: str
        """

        self._notes = notes

    @property
    def number(self):
        """Gets the number of this InvoiceUpdateApiModel.

        Unique invoice number

        :return: The number of this InvoiceUpdateApiModel.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this InvoiceUpdateApiModel.

        Unique invoice number

        :param number: The number of this InvoiceUpdateApiModel.
        :type number: str
        """

        self._number = number

    @property
    def payment_gateways(self):
        """Gets the payment_gateways of this InvoiceUpdateApiModel.

        List of enabled payment gateways for this invoice

        :return: The payment_gateways of this InvoiceUpdateApiModel.
        :rtype: List[InvoiceGatewayApiModel]
        """
        return self._payment_gateways

    @payment_gateways.setter
    def payment_gateways(self, payment_gateways):
        """Sets the payment_gateways of this InvoiceUpdateApiModel.

        List of enabled payment gateways for this invoice

        :param payment_gateways: The payment_gateways of this InvoiceUpdateApiModel.
        :type payment_gateways: List[InvoiceGatewayApiModel]
        """

        self._payment_gateways = payment_gateways

    @property
    def po_number(self):
        """Gets the po_number of this InvoiceUpdateApiModel.

        Unique number generated by the buyer

        :return: The po_number of this InvoiceUpdateApiModel.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this InvoiceUpdateApiModel.

        Unique number generated by the buyer

        :param po_number: The po_number of this InvoiceUpdateApiModel.
        :type po_number: str
        """

        self._po_number = po_number

    @property
    def recurring_profile(self):
        """Gets the recurring_profile of this InvoiceUpdateApiModel.


        :return: The recurring_profile of this InvoiceUpdateApiModel.
        :rtype: InvoiceRecurringApiModel
        """
        return self._recurring_profile

    @recurring_profile.setter
    def recurring_profile(self, recurring_profile):
        """Sets the recurring_profile of this InvoiceUpdateApiModel.


        :param recurring_profile: The recurring_profile of this InvoiceUpdateApiModel.
        :type recurring_profile: InvoiceRecurringApiModel
        """

        self._recurring_profile = recurring_profile

    @property
    def recurring_profile_id(self):
        """Gets the recurring_profile_id of this InvoiceUpdateApiModel.

        Hold the id of the recurring profile

        :return: The recurring_profile_id of this InvoiceUpdateApiModel.
        :rtype: int
        """
        return self._recurring_profile_id

    @recurring_profile_id.setter
    def recurring_profile_id(self, recurring_profile_id):
        """Sets the recurring_profile_id of this InvoiceUpdateApiModel.

        Hold the id of the recurring profile

        :param recurring_profile_id: The recurring_profile_id of this InvoiceUpdateApiModel.
        :type recurring_profile_id: int
        """

        self._recurring_profile_id = recurring_profile_id

    @property
    def should_send_reminders(self):
        """Gets the should_send_reminders of this InvoiceUpdateApiModel.

        Should send email reminders to client?

        :return: The should_send_reminders of this InvoiceUpdateApiModel.
        :rtype: bool
        """
        return self._should_send_reminders

    @should_send_reminders.setter
    def should_send_reminders(self, should_send_reminders):
        """Sets the should_send_reminders of this InvoiceUpdateApiModel.

        Should send email reminders to client?

        :param should_send_reminders: The should_send_reminders of this InvoiceUpdateApiModel.
        :type should_send_reminders: bool
        """

        self._should_send_reminders = should_send_reminders

    @property
    def status(self):
        """Gets the status of this InvoiceUpdateApiModel.

        Indicate the status of the invoice (paid/unpaid/overdue)

        :return: The status of this InvoiceUpdateApiModel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InvoiceUpdateApiModel.

        Indicate the status of the invoice (paid/unpaid/overdue)

        :param status: The status of this InvoiceUpdateApiModel.
        :type status: str
        """
        allowed_values = ["Draft", "Paid", "Unpaid", "Overdue", "Void"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def terms(self):
        """Gets the terms of this InvoiceUpdateApiModel.

        Terms of agreement

        :return: The terms of this InvoiceUpdateApiModel.
        :rtype: str
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this InvoiceUpdateApiModel.

        Terms of agreement

        :param terms: The terms of this InvoiceUpdateApiModel.
        :type terms: str
        """

        self._terms = terms
