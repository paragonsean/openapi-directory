# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client import Client
from openapi_server import util


class AdditionalClientEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client: Client=None, client_id: int=None, email: str=None, id: int=None):
        """AdditionalClientEmail - a model defined in OpenAPI

        :param client: The client of this AdditionalClientEmail.
        :param client_id: The client_id of this AdditionalClientEmail.
        :param email: The email of this AdditionalClientEmail.
        :param id: The id of this AdditionalClientEmail.
        """
        self.openapi_types = {
            'client': Client,
            'client_id': int,
            'email': str,
            'id': int
        }

        self.attribute_map = {
            'client': 'Client',
            'client_id': 'ClientId',
            'email': 'Email',
            'id': 'Id'
        }

        self._client = client
        self._client_id = client_id
        self._email = email
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalClientEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalClientEmail of this AdditionalClientEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client(self):
        """Gets the client of this AdditionalClientEmail.


        :return: The client of this AdditionalClientEmail.
        :rtype: Client
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this AdditionalClientEmail.


        :param client: The client of this AdditionalClientEmail.
        :type client: Client
        """

        self._client = client

    @property
    def client_id(self):
        """Gets the client_id of this AdditionalClientEmail.


        :return: The client_id of this AdditionalClientEmail.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this AdditionalClientEmail.


        :param client_id: The client_id of this AdditionalClientEmail.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def email(self):
        """Gets the email of this AdditionalClientEmail.


        :return: The email of this AdditionalClientEmail.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AdditionalClientEmail.


        :param email: The email of this AdditionalClientEmail.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this AdditionalClientEmail.


        :return: The id of this AdditionalClientEmail.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdditionalClientEmail.


        :param id: The id of this AdditionalClientEmail.
        :type id: int
        """

        self._id = id
