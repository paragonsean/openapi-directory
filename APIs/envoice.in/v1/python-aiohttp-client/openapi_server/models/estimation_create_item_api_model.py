# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EstimationCreateItemApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost: float=None, description: str=None, discount_percentage: float=None, quantity: float=None, tax_id: int=None, tax_percentage: float=None, work_type_id: int=None):
        """EstimationCreateItemApiModel - a model defined in OpenAPI

        :param cost: The cost of this EstimationCreateItemApiModel.
        :param description: The description of this EstimationCreateItemApiModel.
        :param discount_percentage: The discount_percentage of this EstimationCreateItemApiModel.
        :param quantity: The quantity of this EstimationCreateItemApiModel.
        :param tax_id: The tax_id of this EstimationCreateItemApiModel.
        :param tax_percentage: The tax_percentage of this EstimationCreateItemApiModel.
        :param work_type_id: The work_type_id of this EstimationCreateItemApiModel.
        """
        self.openapi_types = {
            'cost': float,
            'description': str,
            'discount_percentage': float,
            'quantity': float,
            'tax_id': int,
            'tax_percentage': float,
            'work_type_id': int
        }

        self.attribute_map = {
            'cost': 'Cost',
            'description': 'Description',
            'discount_percentage': 'DiscountPercentage',
            'quantity': 'Quantity',
            'tax_id': 'TaxId',
            'tax_percentage': 'TaxPercentage',
            'work_type_id': 'WorkTypeId'
        }

        self._cost = cost
        self._description = description
        self._discount_percentage = discount_percentage
        self._quantity = quantity
        self._tax_id = tax_id
        self._tax_percentage = tax_percentage
        self._work_type_id = work_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimationCreateItemApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimationCreateItemApiModel of this EstimationCreateItemApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost(self):
        """Gets the cost of this EstimationCreateItemApiModel.

        Amount per unit

        :return: The cost of this EstimationCreateItemApiModel.
        :rtype: float
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this EstimationCreateItemApiModel.

        Amount per unit

        :param cost: The cost of this EstimationCreateItemApiModel.
        :type cost: float
        """

        self._cost = cost

    @property
    def description(self):
        """Gets the description of this EstimationCreateItemApiModel.

        Additional description attached to the estimation item

        :return: The description of this EstimationCreateItemApiModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EstimationCreateItemApiModel.

        Additional description attached to the estimation item

        :param description: The description of this EstimationCreateItemApiModel.
        :type description: str
        """

        self._description = description

    @property
    def discount_percentage(self):
        """Gets the discount_percentage of this EstimationCreateItemApiModel.

        Discount percentage for the overall amount

        :return: The discount_percentage of this EstimationCreateItemApiModel.
        :rtype: float
        """
        return self._discount_percentage

    @discount_percentage.setter
    def discount_percentage(self, discount_percentage):
        """Sets the discount_percentage of this EstimationCreateItemApiModel.

        Discount percentage for the overall amount

        :param discount_percentage: The discount_percentage of this EstimationCreateItemApiModel.
        :type discount_percentage: float
        """

        self._discount_percentage = discount_percentage

    @property
    def quantity(self):
        """Gets the quantity of this EstimationCreateItemApiModel.

        Quantity in total used for the work type

        :return: The quantity of this EstimationCreateItemApiModel.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this EstimationCreateItemApiModel.

        Quantity in total used for the work type

        :param quantity: The quantity of this EstimationCreateItemApiModel.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def tax_id(self):
        """Gets the tax_id of this EstimationCreateItemApiModel.

        Tax applied on the item

        :return: The tax_id of this EstimationCreateItemApiModel.
        :rtype: int
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id):
        """Sets the tax_id of this EstimationCreateItemApiModel.

        Tax applied on the item

        :param tax_id: The tax_id of this EstimationCreateItemApiModel.
        :type tax_id: int
        """

        self._tax_id = tax_id

    @property
    def tax_percentage(self):
        """Gets the tax_percentage of this EstimationCreateItemApiModel.

        Task percentage. Ex: 18%

        :return: The tax_percentage of this EstimationCreateItemApiModel.
        :rtype: float
        """
        return self._tax_percentage

    @tax_percentage.setter
    def tax_percentage(self, tax_percentage):
        """Sets the tax_percentage of this EstimationCreateItemApiModel.

        Task percentage. Ex: 18%

        :param tax_percentage: The tax_percentage of this EstimationCreateItemApiModel.
        :type tax_percentage: float
        """

        self._tax_percentage = tax_percentage

    @property
    def work_type_id(self):
        """Gets the work_type_id of this EstimationCreateItemApiModel.

        Work type (Name of the service)

        :return: The work_type_id of this EstimationCreateItemApiModel.
        :rtype: int
        """
        return self._work_type_id

    @work_type_id.setter
    def work_type_id(self, work_type_id):
        """Sets the work_type_id of this EstimationCreateItemApiModel.

        Work type (Name of the service)

        :param work_type_id: The work_type_id of this EstimationCreateItemApiModel.
        :type work_type_id: int
        """

        self._work_type_id = work_type_id
