# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_details_api_model import CurrencyDetailsApiModel
from openapi_server.models.order_billing_details_api_model import OrderBillingDetailsApiModel
from openapi_server.models.order_shipping_details_api_model import OrderShippingDetailsApiModel
from openapi_server import util


class OrderDetailsApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, after_payment_description: str=None, coupon_code: str=None, currency: CurrencyDetailsApiModel=None, currency_id: int=None, description: str=None, discount_amount: float=None, id: int=None, name: str=None, note: str=None, order_billing_details: OrderBillingDetailsApiModel=None, order_shipping_details: OrderShippingDetailsApiModel=None, product_id: int=None, referral: str=None, shipping_amount: float=None, shipping_description: str=None, status: str=None, sub_total_amount: float=None, tax_amount: float=None, total_amount: float=None, total_with_shipping: float=None, what_happens_next_description: str=None):
        """OrderDetailsApiModel - a model defined in OpenAPI

        :param access_token: The access_token of this OrderDetailsApiModel.
        :param after_payment_description: The after_payment_description of this OrderDetailsApiModel.
        :param coupon_code: The coupon_code of this OrderDetailsApiModel.
        :param currency: The currency of this OrderDetailsApiModel.
        :param currency_id: The currency_id of this OrderDetailsApiModel.
        :param description: The description of this OrderDetailsApiModel.
        :param discount_amount: The discount_amount of this OrderDetailsApiModel.
        :param id: The id of this OrderDetailsApiModel.
        :param name: The name of this OrderDetailsApiModel.
        :param note: The note of this OrderDetailsApiModel.
        :param order_billing_details: The order_billing_details of this OrderDetailsApiModel.
        :param order_shipping_details: The order_shipping_details of this OrderDetailsApiModel.
        :param product_id: The product_id of this OrderDetailsApiModel.
        :param referral: The referral of this OrderDetailsApiModel.
        :param shipping_amount: The shipping_amount of this OrderDetailsApiModel.
        :param shipping_description: The shipping_description of this OrderDetailsApiModel.
        :param status: The status of this OrderDetailsApiModel.
        :param sub_total_amount: The sub_total_amount of this OrderDetailsApiModel.
        :param tax_amount: The tax_amount of this OrderDetailsApiModel.
        :param total_amount: The total_amount of this OrderDetailsApiModel.
        :param total_with_shipping: The total_with_shipping of this OrderDetailsApiModel.
        :param what_happens_next_description: The what_happens_next_description of this OrderDetailsApiModel.
        """
        self.openapi_types = {
            'access_token': str,
            'after_payment_description': str,
            'coupon_code': str,
            'currency': CurrencyDetailsApiModel,
            'currency_id': int,
            'description': str,
            'discount_amount': float,
            'id': int,
            'name': str,
            'note': str,
            'order_billing_details': OrderBillingDetailsApiModel,
            'order_shipping_details': OrderShippingDetailsApiModel,
            'product_id': int,
            'referral': str,
            'shipping_amount': float,
            'shipping_description': str,
            'status': str,
            'sub_total_amount': float,
            'tax_amount': float,
            'total_amount': float,
            'total_with_shipping': float,
            'what_happens_next_description': str
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'after_payment_description': 'AfterPaymentDescription',
            'coupon_code': 'CouponCode',
            'currency': 'Currency',
            'currency_id': 'CurrencyId',
            'description': 'Description',
            'discount_amount': 'DiscountAmount',
            'id': 'Id',
            'name': 'Name',
            'note': 'Note',
            'order_billing_details': 'OrderBillingDetails',
            'order_shipping_details': 'OrderShippingDetails',
            'product_id': 'ProductId',
            'referral': 'Referral',
            'shipping_amount': 'ShippingAmount',
            'shipping_description': 'ShippingDescription',
            'status': 'Status',
            'sub_total_amount': 'SubTotalAmount',
            'tax_amount': 'TaxAmount',
            'total_amount': 'TotalAmount',
            'total_with_shipping': 'TotalWithShipping',
            'what_happens_next_description': 'WhatHappensNextDescription'
        }

        self._access_token = access_token
        self._after_payment_description = after_payment_description
        self._coupon_code = coupon_code
        self._currency = currency
        self._currency_id = currency_id
        self._description = description
        self._discount_amount = discount_amount
        self._id = id
        self._name = name
        self._note = note
        self._order_billing_details = order_billing_details
        self._order_shipping_details = order_shipping_details
        self._product_id = product_id
        self._referral = referral
        self._shipping_amount = shipping_amount
        self._shipping_description = shipping_description
        self._status = status
        self._sub_total_amount = sub_total_amount
        self._tax_amount = tax_amount
        self._total_amount = total_amount
        self._total_with_shipping = total_with_shipping
        self._what_happens_next_description = what_happens_next_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderDetailsApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderDetailsApiModel of this OrderDetailsApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this OrderDetailsApiModel.

        Product short link

        :return: The access_token of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this OrderDetailsApiModel.

        Product short link

        :param access_token: The access_token of this OrderDetailsApiModel.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def after_payment_description(self):
        """Gets the after_payment_description of this OrderDetailsApiModel.

        After payment description

        :return: The after_payment_description of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._after_payment_description

    @after_payment_description.setter
    def after_payment_description(self, after_payment_description):
        """Sets the after_payment_description of this OrderDetailsApiModel.

        After payment description

        :param after_payment_description: The after_payment_description of this OrderDetailsApiModel.
        :type after_payment_description: str
        """

        self._after_payment_description = after_payment_description

    @property
    def coupon_code(self):
        """Gets the coupon_code of this OrderDetailsApiModel.

        Coupon to apply in order to get the discount

        :return: The coupon_code of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._coupon_code

    @coupon_code.setter
    def coupon_code(self, coupon_code):
        """Sets the coupon_code of this OrderDetailsApiModel.

        Coupon to apply in order to get the discount

        :param coupon_code: The coupon_code of this OrderDetailsApiModel.
        :type coupon_code: str
        """

        self._coupon_code = coupon_code

    @property
    def currency(self):
        """Gets the currency of this OrderDetailsApiModel.


        :return: The currency of this OrderDetailsApiModel.
        :rtype: CurrencyDetailsApiModel
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OrderDetailsApiModel.


        :param currency: The currency of this OrderDetailsApiModel.
        :type currency: CurrencyDetailsApiModel
        """

        self._currency = currency

    @property
    def currency_id(self):
        """Gets the currency_id of this OrderDetailsApiModel.

        Foreign key Currency

        :return: The currency_id of this OrderDetailsApiModel.
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this OrderDetailsApiModel.

        Foreign key Currency

        :param currency_id: The currency_id of this OrderDetailsApiModel.
        :type currency_id: int
        """

        self._currency_id = currency_id

    @property
    def description(self):
        """Gets the description of this OrderDetailsApiModel.

        Product description

        :return: The description of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OrderDetailsApiModel.

        Product description

        :param description: The description of this OrderDetailsApiModel.
        :type description: str
        """

        self._description = description

    @property
    def discount_amount(self):
        """Gets the discount_amount of this OrderDetailsApiModel.

        Discount amount

        :return: The discount_amount of this OrderDetailsApiModel.
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this OrderDetailsApiModel.

        Discount amount

        :param discount_amount: The discount_amount of this OrderDetailsApiModel.
        :type discount_amount: float
        """

        self._discount_amount = discount_amount

    @property
    def id(self):
        """Gets the id of this OrderDetailsApiModel.

        Order id

        :return: The id of this OrderDetailsApiModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderDetailsApiModel.

        Order id

        :param id: The id of this OrderDetailsApiModel.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this OrderDetailsApiModel.

        Product alias

        :return: The name of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderDetailsApiModel.

        Product alias

        :param name: The name of this OrderDetailsApiModel.
        :type name: str
        """

        self._name = name

    @property
    def note(self):
        """Gets the note of this OrderDetailsApiModel.

        Customer note to seller

        :return: The note of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this OrderDetailsApiModel.

        Customer note to seller

        :param note: The note of this OrderDetailsApiModel.
        :type note: str
        """

        self._note = note

    @property
    def order_billing_details(self):
        """Gets the order_billing_details of this OrderDetailsApiModel.


        :return: The order_billing_details of this OrderDetailsApiModel.
        :rtype: OrderBillingDetailsApiModel
        """
        return self._order_billing_details

    @order_billing_details.setter
    def order_billing_details(self, order_billing_details):
        """Sets the order_billing_details of this OrderDetailsApiModel.


        :param order_billing_details: The order_billing_details of this OrderDetailsApiModel.
        :type order_billing_details: OrderBillingDetailsApiModel
        """

        self._order_billing_details = order_billing_details

    @property
    def order_shipping_details(self):
        """Gets the order_shipping_details of this OrderDetailsApiModel.


        :return: The order_shipping_details of this OrderDetailsApiModel.
        :rtype: OrderShippingDetailsApiModel
        """
        return self._order_shipping_details

    @order_shipping_details.setter
    def order_shipping_details(self, order_shipping_details):
        """Sets the order_shipping_details of this OrderDetailsApiModel.


        :param order_shipping_details: The order_shipping_details of this OrderDetailsApiModel.
        :type order_shipping_details: OrderShippingDetailsApiModel
        """

        self._order_shipping_details = order_shipping_details

    @property
    def product_id(self):
        """Gets the product_id of this OrderDetailsApiModel.

        Product id

        :return: The product_id of this OrderDetailsApiModel.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this OrderDetailsApiModel.

        Product id

        :param product_id: The product_id of this OrderDetailsApiModel.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def referral(self):
        """Gets the referral of this OrderDetailsApiModel.

        Represent the referral for this order

        :return: The referral of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._referral

    @referral.setter
    def referral(self, referral):
        """Sets the referral of this OrderDetailsApiModel.

        Represent the referral for this order

        :param referral: The referral of this OrderDetailsApiModel.
        :type referral: str
        """

        self._referral = referral

    @property
    def shipping_amount(self):
        """Gets the shipping_amount of this OrderDetailsApiModel.

        Cost for shipping the product

        :return: The shipping_amount of this OrderDetailsApiModel.
        :rtype: float
        """
        return self._shipping_amount

    @shipping_amount.setter
    def shipping_amount(self, shipping_amount):
        """Sets the shipping_amount of this OrderDetailsApiModel.

        Cost for shipping the product

        :param shipping_amount: The shipping_amount of this OrderDetailsApiModel.
        :type shipping_amount: float
        """

        self._shipping_amount = shipping_amount

    @property
    def shipping_description(self):
        """Gets the shipping_description of this OrderDetailsApiModel.

        Client instructions for shipping

        :return: The shipping_description of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._shipping_description

    @shipping_description.setter
    def shipping_description(self, shipping_description):
        """Sets the shipping_description of this OrderDetailsApiModel.

        Client instructions for shipping

        :param shipping_description: The shipping_description of this OrderDetailsApiModel.
        :type shipping_description: str
        """

        self._shipping_description = shipping_description

    @property
    def status(self):
        """Gets the status of this OrderDetailsApiModel.

        Order status

        :return: The status of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderDetailsApiModel.

        Order status

        :param status: The status of this OrderDetailsApiModel.
        :type status: str
        """
        allowed_values = ["PendingPayment", "Processing", "Shipped", "Completed", "OnHold", "Cancelled", "Refunded", "Failed"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def sub_total_amount(self):
        """Gets the sub_total_amount of this OrderDetailsApiModel.

        Sub total amount

        :return: The sub_total_amount of this OrderDetailsApiModel.
        :rtype: float
        """
        return self._sub_total_amount

    @sub_total_amount.setter
    def sub_total_amount(self, sub_total_amount):
        """Sets the sub_total_amount of this OrderDetailsApiModel.

        Sub total amount

        :param sub_total_amount: The sub_total_amount of this OrderDetailsApiModel.
        :type sub_total_amount: float
        """

        self._sub_total_amount = sub_total_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this OrderDetailsApiModel.

        Tax amount

        :return: The tax_amount of this OrderDetailsApiModel.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this OrderDetailsApiModel.

        Tax amount

        :param tax_amount: The tax_amount of this OrderDetailsApiModel.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def total_amount(self):
        """Gets the total_amount of this OrderDetailsApiModel.

        Total amount

        :return: The total_amount of this OrderDetailsApiModel.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this OrderDetailsApiModel.

        Total amount

        :param total_amount: The total_amount of this OrderDetailsApiModel.
        :type total_amount: float
        """

        self._total_amount = total_amount

    @property
    def total_with_shipping(self):
        """Gets the total_with_shipping of this OrderDetailsApiModel.

        Total amount with shipping

        :return: The total_with_shipping of this OrderDetailsApiModel.
        :rtype: float
        """
        return self._total_with_shipping

    @total_with_shipping.setter
    def total_with_shipping(self, total_with_shipping):
        """Sets the total_with_shipping of this OrderDetailsApiModel.

        Total amount with shipping

        :param total_with_shipping: The total_with_shipping of this OrderDetailsApiModel.
        :type total_with_shipping: float
        """

        self._total_with_shipping = total_with_shipping

    @property
    def what_happens_next_description(self):
        """Gets the what_happens_next_description of this OrderDetailsApiModel.

        What happens next description

        :return: The what_happens_next_description of this OrderDetailsApiModel.
        :rtype: str
        """
        return self._what_happens_next_description

    @what_happens_next_description.setter
    def what_happens_next_description(self, what_happens_next_description):
        """Sets the what_happens_next_description of this OrderDetailsApiModel.

        What happens next description

        :param what_happens_next_description: The what_happens_next_description of this OrderDetailsApiModel.
        :type what_happens_next_description: str
        """

        self._what_happens_next_description = what_happens_next_description
