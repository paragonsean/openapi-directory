# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Currency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, id: int=None, name: str=None, symbol: str=None, value: str=None):
        """Currency - a model defined in OpenAPI

        :param code: The code of this Currency.
        :param id: The id of this Currency.
        :param name: The name of this Currency.
        :param symbol: The symbol of this Currency.
        :param value: The value of this Currency.
        """
        self.openapi_types = {
            'code': str,
            'id': int,
            'name': str,
            'symbol': str,
            'value': str
        }

        self.attribute_map = {
            'code': 'Code',
            'id': 'Id',
            'name': 'Name',
            'symbol': 'Symbol',
            'value': 'Value'
        }

        self._code = code
        self._id = id
        self._name = name
        self._symbol = symbol
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Currency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Currency of this Currency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Currency.


        :return: The code of this Currency.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Currency.


        :param code: The code of this Currency.
        :type code: str
        """

        self._code = code

    @property
    def id(self):
        """Gets the id of this Currency.


        :return: The id of this Currency.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Currency.


        :param id: The id of this Currency.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Currency.


        :return: The name of this Currency.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Currency.


        :param name: The name of this Currency.
        :type name: str
        """

        self._name = name

    @property
    def symbol(self):
        """Gets the symbol of this Currency.


        :return: The symbol of this Currency.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this Currency.


        :param symbol: The symbol of this Currency.
        :type symbol: str
        """

        self._symbol = symbol

    @property
    def value(self):
        """Gets the value of this Currency.


        :return: The value of this Currency.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Currency.


        :param value: The value of this Currency.
        :type value: str
        """

        self._value = value
