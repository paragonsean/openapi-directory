# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_details_api_model import ClientDetailsApiModel
from openapi_server.models.currency_details_api_model import CurrencyDetailsApiModel
from openapi_server.models.estimation_activity_api_model import EstimationActivityApiModel
from openapi_server.models.estimation_attachment_api_model import EstimationAttachmentApiModel
from openapi_server.models.estimation_gateway_api_model import EstimationGatewayApiModel
from openapi_server.models.estimation_item_api_model import EstimationItemApiModel
from openapi_server import util


class EstimationFullDetailsApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, activities: List[EstimationActivityApiModel]=None, attachments: List[EstimationAttachmentApiModel]=None, client: ClientDetailsApiModel=None, cloned_from_id: int=None, currency: CurrencyDetailsApiModel=None, discount_amount: float=None, expires_on: datetime=None, id: int=None, issued_on: datetime=None, items: List[EstimationItemApiModel]=None, notes: str=None, number: str=None, payment_gateways: List[EstimationGatewayApiModel]=None, po_number: str=None, status: str=None, sub_total_amount: float=None, tax_amount: float=None, terms: str=None, total_amount: float=None):
        """EstimationFullDetailsApiModel - a model defined in OpenAPI

        :param access_token: The access_token of this EstimationFullDetailsApiModel.
        :param activities: The activities of this EstimationFullDetailsApiModel.
        :param attachments: The attachments of this EstimationFullDetailsApiModel.
        :param client: The client of this EstimationFullDetailsApiModel.
        :param cloned_from_id: The cloned_from_id of this EstimationFullDetailsApiModel.
        :param currency: The currency of this EstimationFullDetailsApiModel.
        :param discount_amount: The discount_amount of this EstimationFullDetailsApiModel.
        :param expires_on: The expires_on of this EstimationFullDetailsApiModel.
        :param id: The id of this EstimationFullDetailsApiModel.
        :param issued_on: The issued_on of this EstimationFullDetailsApiModel.
        :param items: The items of this EstimationFullDetailsApiModel.
        :param notes: The notes of this EstimationFullDetailsApiModel.
        :param number: The number of this EstimationFullDetailsApiModel.
        :param payment_gateways: The payment_gateways of this EstimationFullDetailsApiModel.
        :param po_number: The po_number of this EstimationFullDetailsApiModel.
        :param status: The status of this EstimationFullDetailsApiModel.
        :param sub_total_amount: The sub_total_amount of this EstimationFullDetailsApiModel.
        :param tax_amount: The tax_amount of this EstimationFullDetailsApiModel.
        :param terms: The terms of this EstimationFullDetailsApiModel.
        :param total_amount: The total_amount of this EstimationFullDetailsApiModel.
        """
        self.openapi_types = {
            'access_token': str,
            'activities': List[EstimationActivityApiModel],
            'attachments': List[EstimationAttachmentApiModel],
            'client': ClientDetailsApiModel,
            'cloned_from_id': int,
            'currency': CurrencyDetailsApiModel,
            'discount_amount': float,
            'expires_on': datetime,
            'id': int,
            'issued_on': datetime,
            'items': List[EstimationItemApiModel],
            'notes': str,
            'number': str,
            'payment_gateways': List[EstimationGatewayApiModel],
            'po_number': str,
            'status': str,
            'sub_total_amount': float,
            'tax_amount': float,
            'terms': str,
            'total_amount': float
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'activities': 'Activities',
            'attachments': 'Attachments',
            'client': 'Client',
            'cloned_from_id': 'ClonedFromId',
            'currency': 'Currency',
            'discount_amount': 'DiscountAmount',
            'expires_on': 'ExpiresOn',
            'id': 'Id',
            'issued_on': 'IssuedOn',
            'items': 'Items',
            'notes': 'Notes',
            'number': 'Number',
            'payment_gateways': 'PaymentGateways',
            'po_number': 'PoNumber',
            'status': 'Status',
            'sub_total_amount': 'SubTotalAmount',
            'tax_amount': 'TaxAmount',
            'terms': 'Terms',
            'total_amount': 'TotalAmount'
        }

        self._access_token = access_token
        self._activities = activities
        self._attachments = attachments
        self._client = client
        self._cloned_from_id = cloned_from_id
        self._currency = currency
        self._discount_amount = discount_amount
        self._expires_on = expires_on
        self._id = id
        self._issued_on = issued_on
        self._items = items
        self._notes = notes
        self._number = number
        self._payment_gateways = payment_gateways
        self._po_number = po_number
        self._status = status
        self._sub_total_amount = sub_total_amount
        self._tax_amount = tax_amount
        self._terms = terms
        self._total_amount = total_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimationFullDetailsApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimationFullDetailsApiModel of this EstimationFullDetailsApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this EstimationFullDetailsApiModel.

        Security access token used for accessing the estimation anonymously

        :return: The access_token of this EstimationFullDetailsApiModel.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this EstimationFullDetailsApiModel.

        Security access token used for accessing the estimation anonymously

        :param access_token: The access_token of this EstimationFullDetailsApiModel.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def activities(self):
        """Gets the activities of this EstimationFullDetailsApiModel.

        List of estimation activities. estimation audit log

        :return: The activities of this EstimationFullDetailsApiModel.
        :rtype: List[EstimationActivityApiModel]
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this EstimationFullDetailsApiModel.

        List of estimation activities. estimation audit log

        :param activities: The activities of this EstimationFullDetailsApiModel.
        :type activities: List[EstimationActivityApiModel]
        """

        self._activities = activities

    @property
    def attachments(self):
        """Gets the attachments of this EstimationFullDetailsApiModel.

        List of estimation attachments

        :return: The attachments of this EstimationFullDetailsApiModel.
        :rtype: List[EstimationAttachmentApiModel]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this EstimationFullDetailsApiModel.

        List of estimation attachments

        :param attachments: The attachments of this EstimationFullDetailsApiModel.
        :type attachments: List[EstimationAttachmentApiModel]
        """

        self._attachments = attachments

    @property
    def client(self):
        """Gets the client of this EstimationFullDetailsApiModel.


        :return: The client of this EstimationFullDetailsApiModel.
        :rtype: ClientDetailsApiModel
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this EstimationFullDetailsApiModel.


        :param client: The client of this EstimationFullDetailsApiModel.
        :type client: ClientDetailsApiModel
        """

        self._client = client

    @property
    def cloned_from_id(self):
        """Gets the cloned_from_id of this EstimationFullDetailsApiModel.

        Indicate from which estimation this estimation has been cloned from

        :return: The cloned_from_id of this EstimationFullDetailsApiModel.
        :rtype: int
        """
        return self._cloned_from_id

    @cloned_from_id.setter
    def cloned_from_id(self, cloned_from_id):
        """Sets the cloned_from_id of this EstimationFullDetailsApiModel.

        Indicate from which estimation this estimation has been cloned from

        :param cloned_from_id: The cloned_from_id of this EstimationFullDetailsApiModel.
        :type cloned_from_id: int
        """

        self._cloned_from_id = cloned_from_id

    @property
    def currency(self):
        """Gets the currency of this EstimationFullDetailsApiModel.


        :return: The currency of this EstimationFullDetailsApiModel.
        :rtype: CurrencyDetailsApiModel
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this EstimationFullDetailsApiModel.


        :param currency: The currency of this EstimationFullDetailsApiModel.
        :type currency: CurrencyDetailsApiModel
        """

        self._currency = currency

    @property
    def discount_amount(self):
        """Gets the discount_amount of this EstimationFullDetailsApiModel.

        Amount that goes as a discount

        :return: The discount_amount of this EstimationFullDetailsApiModel.
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this EstimationFullDetailsApiModel.

        Amount that goes as a discount

        :param discount_amount: The discount_amount of this EstimationFullDetailsApiModel.
        :type discount_amount: float
        """

        self._discount_amount = discount_amount

    @property
    def expires_on(self):
        """Gets the expires_on of this EstimationFullDetailsApiModel.

        Indicates when the estimation will be proclamed as due

        :return: The expires_on of this EstimationFullDetailsApiModel.
        :rtype: datetime
        """
        return self._expires_on

    @expires_on.setter
    def expires_on(self, expires_on):
        """Sets the expires_on of this EstimationFullDetailsApiModel.

        Indicates when the estimation will be proclamed as due

        :param expires_on: The expires_on of this EstimationFullDetailsApiModel.
        :type expires_on: datetime
        """

        self._expires_on = expires_on

    @property
    def id(self):
        """Gets the id of this EstimationFullDetailsApiModel.

        Estimation id

        :return: The id of this EstimationFullDetailsApiModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EstimationFullDetailsApiModel.

        Estimation id

        :param id: The id of this EstimationFullDetailsApiModel.
        :type id: int
        """

        self._id = id

    @property
    def issued_on(self):
        """Gets the issued_on of this EstimationFullDetailsApiModel.

        Indicates when the estimation was issued

        :return: The issued_on of this EstimationFullDetailsApiModel.
        :rtype: datetime
        """
        return self._issued_on

    @issued_on.setter
    def issued_on(self, issued_on):
        """Sets the issued_on of this EstimationFullDetailsApiModel.

        Indicates when the estimation was issued

        :param issued_on: The issued_on of this EstimationFullDetailsApiModel.
        :type issued_on: datetime
        """

        self._issued_on = issued_on

    @property
    def items(self):
        """Gets the items of this EstimationFullDetailsApiModel.

        List of estimation items

        :return: The items of this EstimationFullDetailsApiModel.
        :rtype: List[EstimationItemApiModel]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this EstimationFullDetailsApiModel.

        List of estimation items

        :param items: The items of this EstimationFullDetailsApiModel.
        :type items: List[EstimationItemApiModel]
        """

        self._items = items

    @property
    def notes(self):
        """Gets the notes of this EstimationFullDetailsApiModel.

        Internal note regarding the estimation

        :return: The notes of this EstimationFullDetailsApiModel.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this EstimationFullDetailsApiModel.

        Internal note regarding the estimation

        :param notes: The notes of this EstimationFullDetailsApiModel.
        :type notes: str
        """

        self._notes = notes

    @property
    def number(self):
        """Gets the number of this EstimationFullDetailsApiModel.

        Unique estimation number

        :return: The number of this EstimationFullDetailsApiModel.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this EstimationFullDetailsApiModel.

        Unique estimation number

        :param number: The number of this EstimationFullDetailsApiModel.
        :type number: str
        """

        self._number = number

    @property
    def payment_gateways(self):
        """Gets the payment_gateways of this EstimationFullDetailsApiModel.

        List of enabled payment gateways for this estimation

        :return: The payment_gateways of this EstimationFullDetailsApiModel.
        :rtype: List[EstimationGatewayApiModel]
        """
        return self._payment_gateways

    @payment_gateways.setter
    def payment_gateways(self, payment_gateways):
        """Sets the payment_gateways of this EstimationFullDetailsApiModel.

        List of enabled payment gateways for this estimation

        :param payment_gateways: The payment_gateways of this EstimationFullDetailsApiModel.
        :type payment_gateways: List[EstimationGatewayApiModel]
        """

        self._payment_gateways = payment_gateways

    @property
    def po_number(self):
        """Gets the po_number of this EstimationFullDetailsApiModel.

        Unique number generated by the buyer

        :return: The po_number of this EstimationFullDetailsApiModel.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this EstimationFullDetailsApiModel.

        Unique number generated by the buyer

        :param po_number: The po_number of this EstimationFullDetailsApiModel.
        :type po_number: str
        """

        self._po_number = po_number

    @property
    def status(self):
        """Gets the status of this EstimationFullDetailsApiModel.

        Indicate the status of the estimation (paid/unpaid/overdue)

        :return: The status of this EstimationFullDetailsApiModel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EstimationFullDetailsApiModel.

        Indicate the status of the estimation (paid/unpaid/overdue)

        :param status: The status of this EstimationFullDetailsApiModel.
        :type status: str
        """
        allowed_values = ["Draft", "Accepted", "Rejected"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def sub_total_amount(self):
        """Gets the sub_total_amount of this EstimationFullDetailsApiModel.

        Total amount of the estimation without tax

        :return: The sub_total_amount of this EstimationFullDetailsApiModel.
        :rtype: float
        """
        return self._sub_total_amount

    @sub_total_amount.setter
    def sub_total_amount(self, sub_total_amount):
        """Sets the sub_total_amount of this EstimationFullDetailsApiModel.

        Total amount of the estimation without tax

        :param sub_total_amount: The sub_total_amount of this EstimationFullDetailsApiModel.
        :type sub_total_amount: float
        """

        self._sub_total_amount = sub_total_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this EstimationFullDetailsApiModel.

        Amount that goes to the tax

        :return: The tax_amount of this EstimationFullDetailsApiModel.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this EstimationFullDetailsApiModel.

        Amount that goes to the tax

        :param tax_amount: The tax_amount of this EstimationFullDetailsApiModel.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def terms(self):
        """Gets the terms of this EstimationFullDetailsApiModel.

        Terms of agreement

        :return: The terms of this EstimationFullDetailsApiModel.
        :rtype: str
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this EstimationFullDetailsApiModel.

        Terms of agreement

        :param terms: The terms of this EstimationFullDetailsApiModel.
        :type terms: str
        """

        self._terms = terms

    @property
    def total_amount(self):
        """Gets the total_amount of this EstimationFullDetailsApiModel.

        Total amount of the estimation with tax

        :return: The total_amount of this EstimationFullDetailsApiModel.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this EstimationFullDetailsApiModel.

        Total amount of the estimation with tax

        :param total_amount: The total_amount of this EstimationFullDetailsApiModel.
        :type total_amount: float
        """

        self._total_amount = total_amount
