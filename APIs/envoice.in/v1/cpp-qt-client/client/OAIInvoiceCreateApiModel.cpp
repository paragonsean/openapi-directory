/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceCreateApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceCreateApiModel::OAIInvoiceCreateApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceCreateApiModel::OAIInvoiceCreateApiModel() {
    this->initializeModel();
}

OAIInvoiceCreateApiModel::~OAIInvoiceCreateApiModel() {}

void OAIInvoiceCreateApiModel::initializeModel() {

    m_attachments_isSet = false;
    m_attachments_isValid = false;

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_cloned_from_id_isSet = false;
    m_cloned_from_id_isValid = false;

    m_currency_id_isSet = false;
    m_currency_id_isValid = false;

    m_duedate_isSet = false;
    m_duedate_isValid = false;

    m_invoice_category_id_isSet = false;
    m_invoice_category_id_isValid = false;

    m_issued_on_isSet = false;
    m_issued_on_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_payment_gateways_isSet = false;
    m_payment_gateways_isValid = false;

    m_po_number_isSet = false;
    m_po_number_isValid = false;

    m_recurring_profile_isSet = false;
    m_recurring_profile_isValid = false;

    m_recurring_profile_id_isSet = false;
    m_recurring_profile_id_isValid = false;

    m_should_send_reminders_isSet = false;
    m_should_send_reminders_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_terms_isSet = false;
    m_terms_isValid = false;
}

void OAIInvoiceCreateApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceCreateApiModel::fromJsonObject(QJsonObject json) {

    m_attachments_isValid = ::OpenAPI::fromJsonValue(m_attachments, json[QString("Attachments")]);
    m_attachments_isSet = !json[QString("Attachments")].isNull() && m_attachments_isValid;

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientId")]);
    m_client_id_isSet = !json[QString("ClientId")].isNull() && m_client_id_isValid;

    m_cloned_from_id_isValid = ::OpenAPI::fromJsonValue(m_cloned_from_id, json[QString("ClonedFromId")]);
    m_cloned_from_id_isSet = !json[QString("ClonedFromId")].isNull() && m_cloned_from_id_isValid;

    m_currency_id_isValid = ::OpenAPI::fromJsonValue(m_currency_id, json[QString("CurrencyId")]);
    m_currency_id_isSet = !json[QString("CurrencyId")].isNull() && m_currency_id_isValid;

    m_duedate_isValid = ::OpenAPI::fromJsonValue(m_duedate, json[QString("Duedate")]);
    m_duedate_isSet = !json[QString("Duedate")].isNull() && m_duedate_isValid;

    m_invoice_category_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_category_id, json[QString("InvoiceCategoryId")]);
    m_invoice_category_id_isSet = !json[QString("InvoiceCategoryId")].isNull() && m_invoice_category_id_isValid;

    m_issued_on_isValid = ::OpenAPI::fromJsonValue(m_issued_on, json[QString("IssuedOn")]);
    m_issued_on_isSet = !json[QString("IssuedOn")].isNull() && m_issued_on_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("Notes")]);
    m_notes_isSet = !json[QString("Notes")].isNull() && m_notes_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("Number")]);
    m_number_isSet = !json[QString("Number")].isNull() && m_number_isValid;

    m_payment_gateways_isValid = ::OpenAPI::fromJsonValue(m_payment_gateways, json[QString("PaymentGateways")]);
    m_payment_gateways_isSet = !json[QString("PaymentGateways")].isNull() && m_payment_gateways_isValid;

    m_po_number_isValid = ::OpenAPI::fromJsonValue(m_po_number, json[QString("PoNumber")]);
    m_po_number_isSet = !json[QString("PoNumber")].isNull() && m_po_number_isValid;

    m_recurring_profile_isValid = ::OpenAPI::fromJsonValue(m_recurring_profile, json[QString("RecurringProfile")]);
    m_recurring_profile_isSet = !json[QString("RecurringProfile")].isNull() && m_recurring_profile_isValid;

    m_recurring_profile_id_isValid = ::OpenAPI::fromJsonValue(m_recurring_profile_id, json[QString("RecurringProfileId")]);
    m_recurring_profile_id_isSet = !json[QString("RecurringProfileId")].isNull() && m_recurring_profile_id_isValid;

    m_should_send_reminders_isValid = ::OpenAPI::fromJsonValue(m_should_send_reminders, json[QString("ShouldSendReminders")]);
    m_should_send_reminders_isSet = !json[QString("ShouldSendReminders")].isNull() && m_should_send_reminders_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_terms_isValid = ::OpenAPI::fromJsonValue(m_terms, json[QString("Terms")]);
    m_terms_isSet = !json[QString("Terms")].isNull() && m_terms_isValid;
}

QString OAIInvoiceCreateApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceCreateApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_attachments.size() > 0) {
        obj.insert(QString("Attachments"), ::OpenAPI::toJsonValue(m_attachments));
    }
    if (m_client_id_isSet) {
        obj.insert(QString("ClientId"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_cloned_from_id_isSet) {
        obj.insert(QString("ClonedFromId"), ::OpenAPI::toJsonValue(m_cloned_from_id));
    }
    if (m_currency_id_isSet) {
        obj.insert(QString("CurrencyId"), ::OpenAPI::toJsonValue(m_currency_id));
    }
    if (m_duedate_isSet) {
        obj.insert(QString("Duedate"), ::OpenAPI::toJsonValue(m_duedate));
    }
    if (m_invoice_category_id_isSet) {
        obj.insert(QString("InvoiceCategoryId"), ::OpenAPI::toJsonValue(m_invoice_category_id));
    }
    if (m_issued_on_isSet) {
        obj.insert(QString("IssuedOn"), ::OpenAPI::toJsonValue(m_issued_on));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_notes_isSet) {
        obj.insert(QString("Notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_number_isSet) {
        obj.insert(QString("Number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_payment_gateways.size() > 0) {
        obj.insert(QString("PaymentGateways"), ::OpenAPI::toJsonValue(m_payment_gateways));
    }
    if (m_po_number_isSet) {
        obj.insert(QString("PoNumber"), ::OpenAPI::toJsonValue(m_po_number));
    }
    if (m_recurring_profile.isSet()) {
        obj.insert(QString("RecurringProfile"), ::OpenAPI::toJsonValue(m_recurring_profile));
    }
    if (m_recurring_profile_id_isSet) {
        obj.insert(QString("RecurringProfileId"), ::OpenAPI::toJsonValue(m_recurring_profile_id));
    }
    if (m_should_send_reminders_isSet) {
        obj.insert(QString("ShouldSendReminders"), ::OpenAPI::toJsonValue(m_should_send_reminders));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_terms_isSet) {
        obj.insert(QString("Terms"), ::OpenAPI::toJsonValue(m_terms));
    }
    return obj;
}

QList<OAIInvoiceCreateAttachmentApiModel> OAIInvoiceCreateApiModel::getAttachments() const {
    return m_attachments;
}
void OAIInvoiceCreateApiModel::setAttachments(const QList<OAIInvoiceCreateAttachmentApiModel> &attachments) {
    m_attachments = attachments;
    m_attachments_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_attachments_Set() const{
    return m_attachments_isSet;
}

bool OAIInvoiceCreateApiModel::is_attachments_Valid() const{
    return m_attachments_isValid;
}

qint32 OAIInvoiceCreateApiModel::getClientId() const {
    return m_client_id;
}
void OAIInvoiceCreateApiModel::setClientId(const qint32 &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIInvoiceCreateApiModel::is_client_id_Valid() const{
    return m_client_id_isValid;
}

qint32 OAIInvoiceCreateApiModel::getClonedFromId() const {
    return m_cloned_from_id;
}
void OAIInvoiceCreateApiModel::setClonedFromId(const qint32 &cloned_from_id) {
    m_cloned_from_id = cloned_from_id;
    m_cloned_from_id_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_cloned_from_id_Set() const{
    return m_cloned_from_id_isSet;
}

bool OAIInvoiceCreateApiModel::is_cloned_from_id_Valid() const{
    return m_cloned_from_id_isValid;
}

qint32 OAIInvoiceCreateApiModel::getCurrencyId() const {
    return m_currency_id;
}
void OAIInvoiceCreateApiModel::setCurrencyId(const qint32 &currency_id) {
    m_currency_id = currency_id;
    m_currency_id_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_currency_id_Set() const{
    return m_currency_id_isSet;
}

bool OAIInvoiceCreateApiModel::is_currency_id_Valid() const{
    return m_currency_id_isValid;
}

QDateTime OAIInvoiceCreateApiModel::getDuedate() const {
    return m_duedate;
}
void OAIInvoiceCreateApiModel::setDuedate(const QDateTime &duedate) {
    m_duedate = duedate;
    m_duedate_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_duedate_Set() const{
    return m_duedate_isSet;
}

bool OAIInvoiceCreateApiModel::is_duedate_Valid() const{
    return m_duedate_isValid;
}

qint32 OAIInvoiceCreateApiModel::getInvoiceCategoryId() const {
    return m_invoice_category_id;
}
void OAIInvoiceCreateApiModel::setInvoiceCategoryId(const qint32 &invoice_category_id) {
    m_invoice_category_id = invoice_category_id;
    m_invoice_category_id_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_invoice_category_id_Set() const{
    return m_invoice_category_id_isSet;
}

bool OAIInvoiceCreateApiModel::is_invoice_category_id_Valid() const{
    return m_invoice_category_id_isValid;
}

QDateTime OAIInvoiceCreateApiModel::getIssuedOn() const {
    return m_issued_on;
}
void OAIInvoiceCreateApiModel::setIssuedOn(const QDateTime &issued_on) {
    m_issued_on = issued_on;
    m_issued_on_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_issued_on_Set() const{
    return m_issued_on_isSet;
}

bool OAIInvoiceCreateApiModel::is_issued_on_Valid() const{
    return m_issued_on_isValid;
}

QList<OAIInvoiceCreateItemApiModel> OAIInvoiceCreateApiModel::getItems() const {
    return m_items;
}
void OAIInvoiceCreateApiModel::setItems(const QList<OAIInvoiceCreateItemApiModel> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_items_Set() const{
    return m_items_isSet;
}

bool OAIInvoiceCreateApiModel::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIInvoiceCreateApiModel::getNotes() const {
    return m_notes;
}
void OAIInvoiceCreateApiModel::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIInvoiceCreateApiModel::is_notes_Valid() const{
    return m_notes_isValid;
}

QString OAIInvoiceCreateApiModel::getNumber() const {
    return m_number;
}
void OAIInvoiceCreateApiModel::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_number_Set() const{
    return m_number_isSet;
}

bool OAIInvoiceCreateApiModel::is_number_Valid() const{
    return m_number_isValid;
}

QList<OAIInvoiceGatewayApiModel> OAIInvoiceCreateApiModel::getPaymentGateways() const {
    return m_payment_gateways;
}
void OAIInvoiceCreateApiModel::setPaymentGateways(const QList<OAIInvoiceGatewayApiModel> &payment_gateways) {
    m_payment_gateways = payment_gateways;
    m_payment_gateways_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_payment_gateways_Set() const{
    return m_payment_gateways_isSet;
}

bool OAIInvoiceCreateApiModel::is_payment_gateways_Valid() const{
    return m_payment_gateways_isValid;
}

QString OAIInvoiceCreateApiModel::getPoNumber() const {
    return m_po_number;
}
void OAIInvoiceCreateApiModel::setPoNumber(const QString &po_number) {
    m_po_number = po_number;
    m_po_number_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_po_number_Set() const{
    return m_po_number_isSet;
}

bool OAIInvoiceCreateApiModel::is_po_number_Valid() const{
    return m_po_number_isValid;
}

OAIInvoiceRecurringApiModel OAIInvoiceCreateApiModel::getRecurringProfile() const {
    return m_recurring_profile;
}
void OAIInvoiceCreateApiModel::setRecurringProfile(const OAIInvoiceRecurringApiModel &recurring_profile) {
    m_recurring_profile = recurring_profile;
    m_recurring_profile_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_recurring_profile_Set() const{
    return m_recurring_profile_isSet;
}

bool OAIInvoiceCreateApiModel::is_recurring_profile_Valid() const{
    return m_recurring_profile_isValid;
}

qint32 OAIInvoiceCreateApiModel::getRecurringProfileId() const {
    return m_recurring_profile_id;
}
void OAIInvoiceCreateApiModel::setRecurringProfileId(const qint32 &recurring_profile_id) {
    m_recurring_profile_id = recurring_profile_id;
    m_recurring_profile_id_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_recurring_profile_id_Set() const{
    return m_recurring_profile_id_isSet;
}

bool OAIInvoiceCreateApiModel::is_recurring_profile_id_Valid() const{
    return m_recurring_profile_id_isValid;
}

bool OAIInvoiceCreateApiModel::isShouldSendReminders() const {
    return m_should_send_reminders;
}
void OAIInvoiceCreateApiModel::setShouldSendReminders(const bool &should_send_reminders) {
    m_should_send_reminders = should_send_reminders;
    m_should_send_reminders_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_should_send_reminders_Set() const{
    return m_should_send_reminders_isSet;
}

bool OAIInvoiceCreateApiModel::is_should_send_reminders_Valid() const{
    return m_should_send_reminders_isValid;
}

QString OAIInvoiceCreateApiModel::getStatus() const {
    return m_status;
}
void OAIInvoiceCreateApiModel::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInvoiceCreateApiModel::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIInvoiceCreateApiModel::getTerms() const {
    return m_terms;
}
void OAIInvoiceCreateApiModel::setTerms(const QString &terms) {
    m_terms = terms;
    m_terms_isSet = true;
}

bool OAIInvoiceCreateApiModel::is_terms_Set() const{
    return m_terms_isSet;
}

bool OAIInvoiceCreateApiModel::is_terms_Valid() const{
    return m_terms_isValid;
}

bool OAIInvoiceCreateApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attachments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloned_from_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duedate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issued_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_gateways.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_po_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recurring_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recurring_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_should_send_reminders_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terms_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceCreateApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
