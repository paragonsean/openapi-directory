/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderDetailsApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderDetailsApiModel::OAIOrderDetailsApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderDetailsApiModel::OAIOrderDetailsApiModel() {
    this->initializeModel();
}

OAIOrderDetailsApiModel::~OAIOrderDetailsApiModel() {}

void OAIOrderDetailsApiModel::initializeModel() {

    m_access_token_isSet = false;
    m_access_token_isValid = false;

    m_after_payment_description_isSet = false;
    m_after_payment_description_isValid = false;

    m_coupon_code_isSet = false;
    m_coupon_code_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_currency_id_isSet = false;
    m_currency_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_discount_amount_isSet = false;
    m_discount_amount_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_order_billing_details_isSet = false;
    m_order_billing_details_isValid = false;

    m_order_shipping_details_isSet = false;
    m_order_shipping_details_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_referral_isSet = false;
    m_referral_isValid = false;

    m_shipping_amount_isSet = false;
    m_shipping_amount_isValid = false;

    m_shipping_description_isSet = false;
    m_shipping_description_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_sub_total_amount_isSet = false;
    m_sub_total_amount_isValid = false;

    m_tax_amount_isSet = false;
    m_tax_amount_isValid = false;

    m_total_amount_isSet = false;
    m_total_amount_isValid = false;

    m_total_with_shipping_isSet = false;
    m_total_with_shipping_isValid = false;

    m_what_happens_next_description_isSet = false;
    m_what_happens_next_description_isValid = false;
}

void OAIOrderDetailsApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderDetailsApiModel::fromJsonObject(QJsonObject json) {

    m_access_token_isValid = ::OpenAPI::fromJsonValue(m_access_token, json[QString("AccessToken")]);
    m_access_token_isSet = !json[QString("AccessToken")].isNull() && m_access_token_isValid;

    m_after_payment_description_isValid = ::OpenAPI::fromJsonValue(m_after_payment_description, json[QString("AfterPaymentDescription")]);
    m_after_payment_description_isSet = !json[QString("AfterPaymentDescription")].isNull() && m_after_payment_description_isValid;

    m_coupon_code_isValid = ::OpenAPI::fromJsonValue(m_coupon_code, json[QString("CouponCode")]);
    m_coupon_code_isSet = !json[QString("CouponCode")].isNull() && m_coupon_code_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("Currency")]);
    m_currency_isSet = !json[QString("Currency")].isNull() && m_currency_isValid;

    m_currency_id_isValid = ::OpenAPI::fromJsonValue(m_currency_id, json[QString("CurrencyId")]);
    m_currency_id_isSet = !json[QString("CurrencyId")].isNull() && m_currency_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_discount_amount, json[QString("DiscountAmount")]);
    m_discount_amount_isSet = !json[QString("DiscountAmount")].isNull() && m_discount_amount_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("Note")]);
    m_note_isSet = !json[QString("Note")].isNull() && m_note_isValid;

    m_order_billing_details_isValid = ::OpenAPI::fromJsonValue(m_order_billing_details, json[QString("OrderBillingDetails")]);
    m_order_billing_details_isSet = !json[QString("OrderBillingDetails")].isNull() && m_order_billing_details_isValid;

    m_order_shipping_details_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_details, json[QString("OrderShippingDetails")]);
    m_order_shipping_details_isSet = !json[QString("OrderShippingDetails")].isNull() && m_order_shipping_details_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("ProductId")]);
    m_product_id_isSet = !json[QString("ProductId")].isNull() && m_product_id_isValid;

    m_referral_isValid = ::OpenAPI::fromJsonValue(m_referral, json[QString("Referral")]);
    m_referral_isSet = !json[QString("Referral")].isNull() && m_referral_isValid;

    m_shipping_amount_isValid = ::OpenAPI::fromJsonValue(m_shipping_amount, json[QString("ShippingAmount")]);
    m_shipping_amount_isSet = !json[QString("ShippingAmount")].isNull() && m_shipping_amount_isValid;

    m_shipping_description_isValid = ::OpenAPI::fromJsonValue(m_shipping_description, json[QString("ShippingDescription")]);
    m_shipping_description_isSet = !json[QString("ShippingDescription")].isNull() && m_shipping_description_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_sub_total_amount_isValid = ::OpenAPI::fromJsonValue(m_sub_total_amount, json[QString("SubTotalAmount")]);
    m_sub_total_amount_isSet = !json[QString("SubTotalAmount")].isNull() && m_sub_total_amount_isValid;

    m_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_tax_amount, json[QString("TaxAmount")]);
    m_tax_amount_isSet = !json[QString("TaxAmount")].isNull() && m_tax_amount_isValid;

    m_total_amount_isValid = ::OpenAPI::fromJsonValue(m_total_amount, json[QString("TotalAmount")]);
    m_total_amount_isSet = !json[QString("TotalAmount")].isNull() && m_total_amount_isValid;

    m_total_with_shipping_isValid = ::OpenAPI::fromJsonValue(m_total_with_shipping, json[QString("TotalWithShipping")]);
    m_total_with_shipping_isSet = !json[QString("TotalWithShipping")].isNull() && m_total_with_shipping_isValid;

    m_what_happens_next_description_isValid = ::OpenAPI::fromJsonValue(m_what_happens_next_description, json[QString("WhatHappensNextDescription")]);
    m_what_happens_next_description_isSet = !json[QString("WhatHappensNextDescription")].isNull() && m_what_happens_next_description_isValid;
}

QString OAIOrderDetailsApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderDetailsApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_access_token_isSet) {
        obj.insert(QString("AccessToken"), ::OpenAPI::toJsonValue(m_access_token));
    }
    if (m_after_payment_description_isSet) {
        obj.insert(QString("AfterPaymentDescription"), ::OpenAPI::toJsonValue(m_after_payment_description));
    }
    if (m_coupon_code_isSet) {
        obj.insert(QString("CouponCode"), ::OpenAPI::toJsonValue(m_coupon_code));
    }
    if (m_currency.isSet()) {
        obj.insert(QString("Currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_currency_id_isSet) {
        obj.insert(QString("CurrencyId"), ::OpenAPI::toJsonValue(m_currency_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_discount_amount_isSet) {
        obj.insert(QString("DiscountAmount"), ::OpenAPI::toJsonValue(m_discount_amount));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_note_isSet) {
        obj.insert(QString("Note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_order_billing_details.isSet()) {
        obj.insert(QString("OrderBillingDetails"), ::OpenAPI::toJsonValue(m_order_billing_details));
    }
    if (m_order_shipping_details.isSet()) {
        obj.insert(QString("OrderShippingDetails"), ::OpenAPI::toJsonValue(m_order_shipping_details));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("ProductId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_referral_isSet) {
        obj.insert(QString("Referral"), ::OpenAPI::toJsonValue(m_referral));
    }
    if (m_shipping_amount_isSet) {
        obj.insert(QString("ShippingAmount"), ::OpenAPI::toJsonValue(m_shipping_amount));
    }
    if (m_shipping_description_isSet) {
        obj.insert(QString("ShippingDescription"), ::OpenAPI::toJsonValue(m_shipping_description));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_sub_total_amount_isSet) {
        obj.insert(QString("SubTotalAmount"), ::OpenAPI::toJsonValue(m_sub_total_amount));
    }
    if (m_tax_amount_isSet) {
        obj.insert(QString("TaxAmount"), ::OpenAPI::toJsonValue(m_tax_amount));
    }
    if (m_total_amount_isSet) {
        obj.insert(QString("TotalAmount"), ::OpenAPI::toJsonValue(m_total_amount));
    }
    if (m_total_with_shipping_isSet) {
        obj.insert(QString("TotalWithShipping"), ::OpenAPI::toJsonValue(m_total_with_shipping));
    }
    if (m_what_happens_next_description_isSet) {
        obj.insert(QString("WhatHappensNextDescription"), ::OpenAPI::toJsonValue(m_what_happens_next_description));
    }
    return obj;
}

QString OAIOrderDetailsApiModel::getAccessToken() const {
    return m_access_token;
}
void OAIOrderDetailsApiModel::setAccessToken(const QString &access_token) {
    m_access_token = access_token;
    m_access_token_isSet = true;
}

bool OAIOrderDetailsApiModel::is_access_token_Set() const{
    return m_access_token_isSet;
}

bool OAIOrderDetailsApiModel::is_access_token_Valid() const{
    return m_access_token_isValid;
}

QString OAIOrderDetailsApiModel::getAfterPaymentDescription() const {
    return m_after_payment_description;
}
void OAIOrderDetailsApiModel::setAfterPaymentDescription(const QString &after_payment_description) {
    m_after_payment_description = after_payment_description;
    m_after_payment_description_isSet = true;
}

bool OAIOrderDetailsApiModel::is_after_payment_description_Set() const{
    return m_after_payment_description_isSet;
}

bool OAIOrderDetailsApiModel::is_after_payment_description_Valid() const{
    return m_after_payment_description_isValid;
}

QString OAIOrderDetailsApiModel::getCouponCode() const {
    return m_coupon_code;
}
void OAIOrderDetailsApiModel::setCouponCode(const QString &coupon_code) {
    m_coupon_code = coupon_code;
    m_coupon_code_isSet = true;
}

bool OAIOrderDetailsApiModel::is_coupon_code_Set() const{
    return m_coupon_code_isSet;
}

bool OAIOrderDetailsApiModel::is_coupon_code_Valid() const{
    return m_coupon_code_isValid;
}

OAICurrencyDetailsApiModel OAIOrderDetailsApiModel::getCurrency() const {
    return m_currency;
}
void OAIOrderDetailsApiModel::setCurrency(const OAICurrencyDetailsApiModel &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIOrderDetailsApiModel::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIOrderDetailsApiModel::is_currency_Valid() const{
    return m_currency_isValid;
}

qint32 OAIOrderDetailsApiModel::getCurrencyId() const {
    return m_currency_id;
}
void OAIOrderDetailsApiModel::setCurrencyId(const qint32 &currency_id) {
    m_currency_id = currency_id;
    m_currency_id_isSet = true;
}

bool OAIOrderDetailsApiModel::is_currency_id_Set() const{
    return m_currency_id_isSet;
}

bool OAIOrderDetailsApiModel::is_currency_id_Valid() const{
    return m_currency_id_isValid;
}

QString OAIOrderDetailsApiModel::getDescription() const {
    return m_description;
}
void OAIOrderDetailsApiModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOrderDetailsApiModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOrderDetailsApiModel::is_description_Valid() const{
    return m_description_isValid;
}

double OAIOrderDetailsApiModel::getDiscountAmount() const {
    return m_discount_amount;
}
void OAIOrderDetailsApiModel::setDiscountAmount(const double &discount_amount) {
    m_discount_amount = discount_amount;
    m_discount_amount_isSet = true;
}

bool OAIOrderDetailsApiModel::is_discount_amount_Set() const{
    return m_discount_amount_isSet;
}

bool OAIOrderDetailsApiModel::is_discount_amount_Valid() const{
    return m_discount_amount_isValid;
}

qint32 OAIOrderDetailsApiModel::getId() const {
    return m_id;
}
void OAIOrderDetailsApiModel::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderDetailsApiModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderDetailsApiModel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrderDetailsApiModel::getName() const {
    return m_name;
}
void OAIOrderDetailsApiModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOrderDetailsApiModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrderDetailsApiModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIOrderDetailsApiModel::getNote() const {
    return m_note;
}
void OAIOrderDetailsApiModel::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIOrderDetailsApiModel::is_note_Set() const{
    return m_note_isSet;
}

bool OAIOrderDetailsApiModel::is_note_Valid() const{
    return m_note_isValid;
}

OAIOrderBillingDetailsApiModel OAIOrderDetailsApiModel::getOrderBillingDetails() const {
    return m_order_billing_details;
}
void OAIOrderDetailsApiModel::setOrderBillingDetails(const OAIOrderBillingDetailsApiModel &order_billing_details) {
    m_order_billing_details = order_billing_details;
    m_order_billing_details_isSet = true;
}

bool OAIOrderDetailsApiModel::is_order_billing_details_Set() const{
    return m_order_billing_details_isSet;
}

bool OAIOrderDetailsApiModel::is_order_billing_details_Valid() const{
    return m_order_billing_details_isValid;
}

OAIOrderShippingDetailsApiModel OAIOrderDetailsApiModel::getOrderShippingDetails() const {
    return m_order_shipping_details;
}
void OAIOrderDetailsApiModel::setOrderShippingDetails(const OAIOrderShippingDetailsApiModel &order_shipping_details) {
    m_order_shipping_details = order_shipping_details;
    m_order_shipping_details_isSet = true;
}

bool OAIOrderDetailsApiModel::is_order_shipping_details_Set() const{
    return m_order_shipping_details_isSet;
}

bool OAIOrderDetailsApiModel::is_order_shipping_details_Valid() const{
    return m_order_shipping_details_isValid;
}

qint32 OAIOrderDetailsApiModel::getProductId() const {
    return m_product_id;
}
void OAIOrderDetailsApiModel::setProductId(const qint32 &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIOrderDetailsApiModel::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIOrderDetailsApiModel::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIOrderDetailsApiModel::getReferral() const {
    return m_referral;
}
void OAIOrderDetailsApiModel::setReferral(const QString &referral) {
    m_referral = referral;
    m_referral_isSet = true;
}

bool OAIOrderDetailsApiModel::is_referral_Set() const{
    return m_referral_isSet;
}

bool OAIOrderDetailsApiModel::is_referral_Valid() const{
    return m_referral_isValid;
}

double OAIOrderDetailsApiModel::getShippingAmount() const {
    return m_shipping_amount;
}
void OAIOrderDetailsApiModel::setShippingAmount(const double &shipping_amount) {
    m_shipping_amount = shipping_amount;
    m_shipping_amount_isSet = true;
}

bool OAIOrderDetailsApiModel::is_shipping_amount_Set() const{
    return m_shipping_amount_isSet;
}

bool OAIOrderDetailsApiModel::is_shipping_amount_Valid() const{
    return m_shipping_amount_isValid;
}

QString OAIOrderDetailsApiModel::getShippingDescription() const {
    return m_shipping_description;
}
void OAIOrderDetailsApiModel::setShippingDescription(const QString &shipping_description) {
    m_shipping_description = shipping_description;
    m_shipping_description_isSet = true;
}

bool OAIOrderDetailsApiModel::is_shipping_description_Set() const{
    return m_shipping_description_isSet;
}

bool OAIOrderDetailsApiModel::is_shipping_description_Valid() const{
    return m_shipping_description_isValid;
}

QString OAIOrderDetailsApiModel::getStatus() const {
    return m_status;
}
void OAIOrderDetailsApiModel::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderDetailsApiModel::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderDetailsApiModel::is_status_Valid() const{
    return m_status_isValid;
}

double OAIOrderDetailsApiModel::getSubTotalAmount() const {
    return m_sub_total_amount;
}
void OAIOrderDetailsApiModel::setSubTotalAmount(const double &sub_total_amount) {
    m_sub_total_amount = sub_total_amount;
    m_sub_total_amount_isSet = true;
}

bool OAIOrderDetailsApiModel::is_sub_total_amount_Set() const{
    return m_sub_total_amount_isSet;
}

bool OAIOrderDetailsApiModel::is_sub_total_amount_Valid() const{
    return m_sub_total_amount_isValid;
}

double OAIOrderDetailsApiModel::getTaxAmount() const {
    return m_tax_amount;
}
void OAIOrderDetailsApiModel::setTaxAmount(const double &tax_amount) {
    m_tax_amount = tax_amount;
    m_tax_amount_isSet = true;
}

bool OAIOrderDetailsApiModel::is_tax_amount_Set() const{
    return m_tax_amount_isSet;
}

bool OAIOrderDetailsApiModel::is_tax_amount_Valid() const{
    return m_tax_amount_isValid;
}

double OAIOrderDetailsApiModel::getTotalAmount() const {
    return m_total_amount;
}
void OAIOrderDetailsApiModel::setTotalAmount(const double &total_amount) {
    m_total_amount = total_amount;
    m_total_amount_isSet = true;
}

bool OAIOrderDetailsApiModel::is_total_amount_Set() const{
    return m_total_amount_isSet;
}

bool OAIOrderDetailsApiModel::is_total_amount_Valid() const{
    return m_total_amount_isValid;
}

double OAIOrderDetailsApiModel::getTotalWithShipping() const {
    return m_total_with_shipping;
}
void OAIOrderDetailsApiModel::setTotalWithShipping(const double &total_with_shipping) {
    m_total_with_shipping = total_with_shipping;
    m_total_with_shipping_isSet = true;
}

bool OAIOrderDetailsApiModel::is_total_with_shipping_Set() const{
    return m_total_with_shipping_isSet;
}

bool OAIOrderDetailsApiModel::is_total_with_shipping_Valid() const{
    return m_total_with_shipping_isValid;
}

QString OAIOrderDetailsApiModel::getWhatHappensNextDescription() const {
    return m_what_happens_next_description;
}
void OAIOrderDetailsApiModel::setWhatHappensNextDescription(const QString &what_happens_next_description) {
    m_what_happens_next_description = what_happens_next_description;
    m_what_happens_next_description_isSet = true;
}

bool OAIOrderDetailsApiModel::is_what_happens_next_description_Set() const{
    return m_what_happens_next_description_isSet;
}

bool OAIOrderDetailsApiModel::is_what_happens_next_description_Valid() const{
    return m_what_happens_next_description_isValid;
}

bool OAIOrderDetailsApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_after_payment_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupon_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_billing_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_referral_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_with_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_what_happens_next_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderDetailsApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
