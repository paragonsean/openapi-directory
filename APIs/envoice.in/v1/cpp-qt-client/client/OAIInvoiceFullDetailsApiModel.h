/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInvoiceFullDetailsApiModel.h
 *
 * 
 */

#ifndef OAIInvoiceFullDetailsApiModel_H
#define OAIInvoiceFullDetailsApiModel_H

#include <QJsonObject>

#include "OAIClientDetailsApiModel.h"
#include "OAICurrencyDetailsApiModel.h"
#include "OAIInvoiceActivityApiModel.h"
#include "OAIInvoiceAttachmentApiModel.h"
#include "OAIInvoiceGatewayApiModel.h"
#include "OAIInvoiceItemApiModel.h"
#include "OAIInvoicePaymentApiModel.h"
#include "OAIInvoiceRecurringApiModel.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInvoiceActivityApiModel;
class OAIInvoiceAttachmentApiModel;
class OAIClientDetailsApiModel;
class OAICurrencyDetailsApiModel;
class OAIInvoiceItemApiModel;
class OAIInvoiceGatewayApiModel;
class OAIInvoicePaymentApiModel;
class OAIInvoiceRecurringApiModel;

class OAIInvoiceFullDetailsApiModel : public OAIObject {
public:
    OAIInvoiceFullDetailsApiModel();
    OAIInvoiceFullDetailsApiModel(QString json);
    ~OAIInvoiceFullDetailsApiModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessToken() const;
    void setAccessToken(const QString &access_token);
    bool is_access_token_Set() const;
    bool is_access_token_Valid() const;

    QList<OAIInvoiceActivityApiModel> getActivities() const;
    void setActivities(const QList<OAIInvoiceActivityApiModel> &activities);
    bool is_activities_Set() const;
    bool is_activities_Valid() const;

    QList<OAIInvoiceAttachmentApiModel> getAttachments() const;
    void setAttachments(const QList<OAIInvoiceAttachmentApiModel> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    OAIClientDetailsApiModel getClient() const;
    void setClient(const OAIClientDetailsApiModel &client);
    bool is_client_Set() const;
    bool is_client_Valid() const;

    qint32 getClonedFromId() const;
    void setClonedFromId(const qint32 &cloned_from_id);
    bool is_cloned_from_id_Set() const;
    bool is_cloned_from_id_Valid() const;

    OAICurrencyDetailsApiModel getCurrency() const;
    void setCurrency(const OAICurrencyDetailsApiModel &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getDiscountAmount() const;
    void setDiscountAmount(const double &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QDateTime getDuedate() const;
    void setDuedate(const QDateTime &duedate);
    bool is_duedate_Set() const;
    bool is_duedate_Valid() const;

    bool isEnablePartialPayments() const;
    void setEnablePartialPayments(const bool &enable_partial_payments);
    bool is_enable_partial_payments_Set() const;
    bool is_enable_partial_payments_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getInvoiceCategoryId() const;
    void setInvoiceCategoryId(const qint32 &invoice_category_id);
    bool is_invoice_category_id_Set() const;
    bool is_invoice_category_id_Valid() const;

    QDateTime getIssuedOn() const;
    void setIssuedOn(const QDateTime &issued_on);
    bool is_issued_on_Set() const;
    bool is_issued_on_Valid() const;

    QList<OAIInvoiceItemApiModel> getItems() const;
    void setItems(const QList<OAIInvoiceItemApiModel> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QList<OAIInvoiceGatewayApiModel> getPaymentGateways() const;
    void setPaymentGateways(const QList<OAIInvoiceGatewayApiModel> &payment_gateways);
    bool is_payment_gateways_Set() const;
    bool is_payment_gateways_Valid() const;

    QList<OAIInvoicePaymentApiModel> getPayments() const;
    void setPayments(const QList<OAIInvoicePaymentApiModel> &payments);
    bool is_payments_Set() const;
    bool is_payments_Valid() const;

    QString getPoNumber() const;
    void setPoNumber(const QString &po_number);
    bool is_po_number_Set() const;
    bool is_po_number_Valid() const;

    OAIInvoiceRecurringApiModel getRecurringProfile() const;
    void setRecurringProfile(const OAIInvoiceRecurringApiModel &recurring_profile);
    bool is_recurring_profile_Set() const;
    bool is_recurring_profile_Valid() const;

    qint32 getRecurringProfileId() const;
    void setRecurringProfileId(const qint32 &recurring_profile_id);
    bool is_recurring_profile_id_Set() const;
    bool is_recurring_profile_id_Valid() const;

    bool isShouldSendReminders() const;
    void setShouldSendReminders(const bool &should_send_reminders);
    bool is_should_send_reminders_Set() const;
    bool is_should_send_reminders_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getSubTotalAmount() const;
    void setSubTotalAmount(const double &sub_total_amount);
    bool is_sub_total_amount_Set() const;
    bool is_sub_total_amount_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    QString getTerms() const;
    void setTerms(const QString &terms);
    bool is_terms_Set() const;
    bool is_terms_Valid() const;

    double getTotalAmount() const;
    void setTotalAmount(const double &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_token;
    bool m_access_token_isSet;
    bool m_access_token_isValid;

    QList<OAIInvoiceActivityApiModel> m_activities;
    bool m_activities_isSet;
    bool m_activities_isValid;

    QList<OAIInvoiceAttachmentApiModel> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    OAIClientDetailsApiModel m_client;
    bool m_client_isSet;
    bool m_client_isValid;

    qint32 m_cloned_from_id;
    bool m_cloned_from_id_isSet;
    bool m_cloned_from_id_isValid;

    OAICurrencyDetailsApiModel m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QDateTime m_duedate;
    bool m_duedate_isSet;
    bool m_duedate_isValid;

    bool m_enable_partial_payments;
    bool m_enable_partial_payments_isSet;
    bool m_enable_partial_payments_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_invoice_category_id;
    bool m_invoice_category_id_isSet;
    bool m_invoice_category_id_isValid;

    QDateTime m_issued_on;
    bool m_issued_on_isSet;
    bool m_issued_on_isValid;

    QList<OAIInvoiceItemApiModel> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QList<OAIInvoiceGatewayApiModel> m_payment_gateways;
    bool m_payment_gateways_isSet;
    bool m_payment_gateways_isValid;

    QList<OAIInvoicePaymentApiModel> m_payments;
    bool m_payments_isSet;
    bool m_payments_isValid;

    QString m_po_number;
    bool m_po_number_isSet;
    bool m_po_number_isValid;

    OAIInvoiceRecurringApiModel m_recurring_profile;
    bool m_recurring_profile_isSet;
    bool m_recurring_profile_isValid;

    qint32 m_recurring_profile_id;
    bool m_recurring_profile_id_isSet;
    bool m_recurring_profile_id_isValid;

    bool m_should_send_reminders;
    bool m_should_send_reminders_isSet;
    bool m_should_send_reminders_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_sub_total_amount;
    bool m_sub_total_amount_isSet;
    bool m_sub_total_amount_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    QString m_terms;
    bool m_terms_isSet;
    bool m_terms_isValid;

    double m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInvoiceFullDetailsApiModel)

#endif // OAIInvoiceFullDetailsApiModel_H
