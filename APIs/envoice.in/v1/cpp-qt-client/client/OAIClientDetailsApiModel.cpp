/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientDetailsApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientDetailsApiModel::OAIClientDetailsApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientDetailsApiModel::OAIClientDetailsApiModel() {
    this->initializeModel();
}

OAIClientDetailsApiModel::~OAIClientDetailsApiModel() {}

void OAIClientDetailsApiModel::initializeModel() {

    m_additional_emails_isSet = false;
    m_additional_emails_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_client_country_id_isSet = false;
    m_client_country_id_isValid = false;

    m_client_currency_id_isSet = false;
    m_client_currency_id_isValid = false;

    m_company_registration_number_isSet = false;
    m_company_registration_number_isValid = false;

    m_created_on_isSet = false;
    m_created_on_isValid = false;

    m_default_due_date_in_days_isSet = false;
    m_default_due_date_in_days_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_ui_language_id_isSet = false;
    m_ui_language_id_isValid = false;

    m_vat_isSet = false;
    m_vat_isValid = false;
}

void OAIClientDetailsApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientDetailsApiModel::fromJsonObject(QJsonObject json) {

    m_additional_emails_isValid = ::OpenAPI::fromJsonValue(m_additional_emails, json[QString("AdditionalEmails")]);
    m_additional_emails_isSet = !json[QString("AdditionalEmails")].isNull() && m_additional_emails_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("Address")]);
    m_address_isSet = !json[QString("Address")].isNull() && m_address_isValid;

    m_client_country_id_isValid = ::OpenAPI::fromJsonValue(m_client_country_id, json[QString("ClientCountryId")]);
    m_client_country_id_isSet = !json[QString("ClientCountryId")].isNull() && m_client_country_id_isValid;

    m_client_currency_id_isValid = ::OpenAPI::fromJsonValue(m_client_currency_id, json[QString("ClientCurrencyId")]);
    m_client_currency_id_isSet = !json[QString("ClientCurrencyId")].isNull() && m_client_currency_id_isValid;

    m_company_registration_number_isValid = ::OpenAPI::fromJsonValue(m_company_registration_number, json[QString("CompanyRegistrationNumber")]);
    m_company_registration_number_isSet = !json[QString("CompanyRegistrationNumber")].isNull() && m_company_registration_number_isValid;

    m_created_on_isValid = ::OpenAPI::fromJsonValue(m_created_on, json[QString("CreatedOn")]);
    m_created_on_isSet = !json[QString("CreatedOn")].isNull() && m_created_on_isValid;

    m_default_due_date_in_days_isValid = ::OpenAPI::fromJsonValue(m_default_due_date_in_days, json[QString("DefaultDueDateInDays")]);
    m_default_due_date_in_days_isSet = !json[QString("DefaultDueDateInDays")].isNull() && m_default_due_date_in_days_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_ui_language_id_isValid = ::OpenAPI::fromJsonValue(m_ui_language_id, json[QString("UiLanguageId")]);
    m_ui_language_id_isSet = !json[QString("UiLanguageId")].isNull() && m_ui_language_id_isValid;

    m_vat_isValid = ::OpenAPI::fromJsonValue(m_vat, json[QString("Vat")]);
    m_vat_isSet = !json[QString("Vat")].isNull() && m_vat_isValid;
}

QString OAIClientDetailsApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientDetailsApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_emails.size() > 0) {
        obj.insert(QString("AdditionalEmails"), ::OpenAPI::toJsonValue(m_additional_emails));
    }
    if (m_address_isSet) {
        obj.insert(QString("Address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_client_country_id_isSet) {
        obj.insert(QString("ClientCountryId"), ::OpenAPI::toJsonValue(m_client_country_id));
    }
    if (m_client_currency_id_isSet) {
        obj.insert(QString("ClientCurrencyId"), ::OpenAPI::toJsonValue(m_client_currency_id));
    }
    if (m_company_registration_number_isSet) {
        obj.insert(QString("CompanyRegistrationNumber"), ::OpenAPI::toJsonValue(m_company_registration_number));
    }
    if (m_created_on_isSet) {
        obj.insert(QString("CreatedOn"), ::OpenAPI::toJsonValue(m_created_on));
    }
    if (m_default_due_date_in_days_isSet) {
        obj.insert(QString("DefaultDueDateInDays"), ::OpenAPI::toJsonValue(m_default_due_date_in_days));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_ui_language_id_isSet) {
        obj.insert(QString("UiLanguageId"), ::OpenAPI::toJsonValue(m_ui_language_id));
    }
    if (m_vat_isSet) {
        obj.insert(QString("Vat"), ::OpenAPI::toJsonValue(m_vat));
    }
    return obj;
}

QList<OAIAdditionalClientEmailApiModel> OAIClientDetailsApiModel::getAdditionalEmails() const {
    return m_additional_emails;
}
void OAIClientDetailsApiModel::setAdditionalEmails(const QList<OAIAdditionalClientEmailApiModel> &additional_emails) {
    m_additional_emails = additional_emails;
    m_additional_emails_isSet = true;
}

bool OAIClientDetailsApiModel::is_additional_emails_Set() const{
    return m_additional_emails_isSet;
}

bool OAIClientDetailsApiModel::is_additional_emails_Valid() const{
    return m_additional_emails_isValid;
}

QString OAIClientDetailsApiModel::getAddress() const {
    return m_address;
}
void OAIClientDetailsApiModel::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIClientDetailsApiModel::is_address_Set() const{
    return m_address_isSet;
}

bool OAIClientDetailsApiModel::is_address_Valid() const{
    return m_address_isValid;
}

qint32 OAIClientDetailsApiModel::getClientCountryId() const {
    return m_client_country_id;
}
void OAIClientDetailsApiModel::setClientCountryId(const qint32 &client_country_id) {
    m_client_country_id = client_country_id;
    m_client_country_id_isSet = true;
}

bool OAIClientDetailsApiModel::is_client_country_id_Set() const{
    return m_client_country_id_isSet;
}

bool OAIClientDetailsApiModel::is_client_country_id_Valid() const{
    return m_client_country_id_isValid;
}

qint32 OAIClientDetailsApiModel::getClientCurrencyId() const {
    return m_client_currency_id;
}
void OAIClientDetailsApiModel::setClientCurrencyId(const qint32 &client_currency_id) {
    m_client_currency_id = client_currency_id;
    m_client_currency_id_isSet = true;
}

bool OAIClientDetailsApiModel::is_client_currency_id_Set() const{
    return m_client_currency_id_isSet;
}

bool OAIClientDetailsApiModel::is_client_currency_id_Valid() const{
    return m_client_currency_id_isValid;
}

QString OAIClientDetailsApiModel::getCompanyRegistrationNumber() const {
    return m_company_registration_number;
}
void OAIClientDetailsApiModel::setCompanyRegistrationNumber(const QString &company_registration_number) {
    m_company_registration_number = company_registration_number;
    m_company_registration_number_isSet = true;
}

bool OAIClientDetailsApiModel::is_company_registration_number_Set() const{
    return m_company_registration_number_isSet;
}

bool OAIClientDetailsApiModel::is_company_registration_number_Valid() const{
    return m_company_registration_number_isValid;
}

QDateTime OAIClientDetailsApiModel::getCreatedOn() const {
    return m_created_on;
}
void OAIClientDetailsApiModel::setCreatedOn(const QDateTime &created_on) {
    m_created_on = created_on;
    m_created_on_isSet = true;
}

bool OAIClientDetailsApiModel::is_created_on_Set() const{
    return m_created_on_isSet;
}

bool OAIClientDetailsApiModel::is_created_on_Valid() const{
    return m_created_on_isValid;
}

qint32 OAIClientDetailsApiModel::getDefaultDueDateInDays() const {
    return m_default_due_date_in_days;
}
void OAIClientDetailsApiModel::setDefaultDueDateInDays(const qint32 &default_due_date_in_days) {
    m_default_due_date_in_days = default_due_date_in_days;
    m_default_due_date_in_days_isSet = true;
}

bool OAIClientDetailsApiModel::is_default_due_date_in_days_Set() const{
    return m_default_due_date_in_days_isSet;
}

bool OAIClientDetailsApiModel::is_default_due_date_in_days_Valid() const{
    return m_default_due_date_in_days_isValid;
}

QString OAIClientDetailsApiModel::getEmail() const {
    return m_email;
}
void OAIClientDetailsApiModel::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIClientDetailsApiModel::is_email_Set() const{
    return m_email_isSet;
}

bool OAIClientDetailsApiModel::is_email_Valid() const{
    return m_email_isValid;
}

qint32 OAIClientDetailsApiModel::getId() const {
    return m_id;
}
void OAIClientDetailsApiModel::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIClientDetailsApiModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIClientDetailsApiModel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIClientDetailsApiModel::getName() const {
    return m_name;
}
void OAIClientDetailsApiModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIClientDetailsApiModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIClientDetailsApiModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIClientDetailsApiModel::getPhoneNumber() const {
    return m_phone_number;
}
void OAIClientDetailsApiModel::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIClientDetailsApiModel::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIClientDetailsApiModel::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

qint32 OAIClientDetailsApiModel::getUiLanguageId() const {
    return m_ui_language_id;
}
void OAIClientDetailsApiModel::setUiLanguageId(const qint32 &ui_language_id) {
    m_ui_language_id = ui_language_id;
    m_ui_language_id_isSet = true;
}

bool OAIClientDetailsApiModel::is_ui_language_id_Set() const{
    return m_ui_language_id_isSet;
}

bool OAIClientDetailsApiModel::is_ui_language_id_Valid() const{
    return m_ui_language_id_isValid;
}

QString OAIClientDetailsApiModel::getVat() const {
    return m_vat;
}
void OAIClientDetailsApiModel::setVat(const QString &vat) {
    m_vat = vat;
    m_vat_isSet = true;
}

bool OAIClientDetailsApiModel::is_vat_Set() const{
    return m_vat_isSet;
}

bool OAIClientDetailsApiModel::is_vat_Valid() const{
    return m_vat_isValid;
}

bool OAIClientDetailsApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_country_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_currency_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_registration_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_due_date_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ui_language_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientDetailsApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
