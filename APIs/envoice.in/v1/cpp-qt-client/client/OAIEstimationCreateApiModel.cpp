/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEstimationCreateApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEstimationCreateApiModel::OAIEstimationCreateApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEstimationCreateApiModel::OAIEstimationCreateApiModel() {
    this->initializeModel();
}

OAIEstimationCreateApiModel::~OAIEstimationCreateApiModel() {}

void OAIEstimationCreateApiModel::initializeModel() {

    m_attachments_isSet = false;
    m_attachments_isValid = false;

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_cloned_from_id_isSet = false;
    m_cloned_from_id_isValid = false;

    m_currency_id_isSet = false;
    m_currency_id_isValid = false;

    m_expires_on_isSet = false;
    m_expires_on_isValid = false;

    m_issued_on_isSet = false;
    m_issued_on_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_payment_gateways_isSet = false;
    m_payment_gateways_isValid = false;

    m_po_number_isSet = false;
    m_po_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_terms_isSet = false;
    m_terms_isValid = false;
}

void OAIEstimationCreateApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEstimationCreateApiModel::fromJsonObject(QJsonObject json) {

    m_attachments_isValid = ::OpenAPI::fromJsonValue(m_attachments, json[QString("Attachments")]);
    m_attachments_isSet = !json[QString("Attachments")].isNull() && m_attachments_isValid;

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientId")]);
    m_client_id_isSet = !json[QString("ClientId")].isNull() && m_client_id_isValid;

    m_cloned_from_id_isValid = ::OpenAPI::fromJsonValue(m_cloned_from_id, json[QString("ClonedFromId")]);
    m_cloned_from_id_isSet = !json[QString("ClonedFromId")].isNull() && m_cloned_from_id_isValid;

    m_currency_id_isValid = ::OpenAPI::fromJsonValue(m_currency_id, json[QString("CurrencyId")]);
    m_currency_id_isSet = !json[QString("CurrencyId")].isNull() && m_currency_id_isValid;

    m_expires_on_isValid = ::OpenAPI::fromJsonValue(m_expires_on, json[QString("ExpiresOn")]);
    m_expires_on_isSet = !json[QString("ExpiresOn")].isNull() && m_expires_on_isValid;

    m_issued_on_isValid = ::OpenAPI::fromJsonValue(m_issued_on, json[QString("IssuedOn")]);
    m_issued_on_isSet = !json[QString("IssuedOn")].isNull() && m_issued_on_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("Notes")]);
    m_notes_isSet = !json[QString("Notes")].isNull() && m_notes_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("Number")]);
    m_number_isSet = !json[QString("Number")].isNull() && m_number_isValid;

    m_payment_gateways_isValid = ::OpenAPI::fromJsonValue(m_payment_gateways, json[QString("PaymentGateways")]);
    m_payment_gateways_isSet = !json[QString("PaymentGateways")].isNull() && m_payment_gateways_isValid;

    m_po_number_isValid = ::OpenAPI::fromJsonValue(m_po_number, json[QString("PoNumber")]);
    m_po_number_isSet = !json[QString("PoNumber")].isNull() && m_po_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_terms_isValid = ::OpenAPI::fromJsonValue(m_terms, json[QString("Terms")]);
    m_terms_isSet = !json[QString("Terms")].isNull() && m_terms_isValid;
}

QString OAIEstimationCreateApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEstimationCreateApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_attachments.size() > 0) {
        obj.insert(QString("Attachments"), ::OpenAPI::toJsonValue(m_attachments));
    }
    if (m_client_id_isSet) {
        obj.insert(QString("ClientId"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_cloned_from_id_isSet) {
        obj.insert(QString("ClonedFromId"), ::OpenAPI::toJsonValue(m_cloned_from_id));
    }
    if (m_currency_id_isSet) {
        obj.insert(QString("CurrencyId"), ::OpenAPI::toJsonValue(m_currency_id));
    }
    if (m_expires_on_isSet) {
        obj.insert(QString("ExpiresOn"), ::OpenAPI::toJsonValue(m_expires_on));
    }
    if (m_issued_on_isSet) {
        obj.insert(QString("IssuedOn"), ::OpenAPI::toJsonValue(m_issued_on));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_notes_isSet) {
        obj.insert(QString("Notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_number_isSet) {
        obj.insert(QString("Number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_payment_gateways.size() > 0) {
        obj.insert(QString("PaymentGateways"), ::OpenAPI::toJsonValue(m_payment_gateways));
    }
    if (m_po_number_isSet) {
        obj.insert(QString("PoNumber"), ::OpenAPI::toJsonValue(m_po_number));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_terms_isSet) {
        obj.insert(QString("Terms"), ::OpenAPI::toJsonValue(m_terms));
    }
    return obj;
}

QList<OAIEstimationCreateAttachmentApiModel> OAIEstimationCreateApiModel::getAttachments() const {
    return m_attachments;
}
void OAIEstimationCreateApiModel::setAttachments(const QList<OAIEstimationCreateAttachmentApiModel> &attachments) {
    m_attachments = attachments;
    m_attachments_isSet = true;
}

bool OAIEstimationCreateApiModel::is_attachments_Set() const{
    return m_attachments_isSet;
}

bool OAIEstimationCreateApiModel::is_attachments_Valid() const{
    return m_attachments_isValid;
}

qint32 OAIEstimationCreateApiModel::getClientId() const {
    return m_client_id;
}
void OAIEstimationCreateApiModel::setClientId(const qint32 &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIEstimationCreateApiModel::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIEstimationCreateApiModel::is_client_id_Valid() const{
    return m_client_id_isValid;
}

qint32 OAIEstimationCreateApiModel::getClonedFromId() const {
    return m_cloned_from_id;
}
void OAIEstimationCreateApiModel::setClonedFromId(const qint32 &cloned_from_id) {
    m_cloned_from_id = cloned_from_id;
    m_cloned_from_id_isSet = true;
}

bool OAIEstimationCreateApiModel::is_cloned_from_id_Set() const{
    return m_cloned_from_id_isSet;
}

bool OAIEstimationCreateApiModel::is_cloned_from_id_Valid() const{
    return m_cloned_from_id_isValid;
}

qint32 OAIEstimationCreateApiModel::getCurrencyId() const {
    return m_currency_id;
}
void OAIEstimationCreateApiModel::setCurrencyId(const qint32 &currency_id) {
    m_currency_id = currency_id;
    m_currency_id_isSet = true;
}

bool OAIEstimationCreateApiModel::is_currency_id_Set() const{
    return m_currency_id_isSet;
}

bool OAIEstimationCreateApiModel::is_currency_id_Valid() const{
    return m_currency_id_isValid;
}

QDateTime OAIEstimationCreateApiModel::getExpiresOn() const {
    return m_expires_on;
}
void OAIEstimationCreateApiModel::setExpiresOn(const QDateTime &expires_on) {
    m_expires_on = expires_on;
    m_expires_on_isSet = true;
}

bool OAIEstimationCreateApiModel::is_expires_on_Set() const{
    return m_expires_on_isSet;
}

bool OAIEstimationCreateApiModel::is_expires_on_Valid() const{
    return m_expires_on_isValid;
}

QDateTime OAIEstimationCreateApiModel::getIssuedOn() const {
    return m_issued_on;
}
void OAIEstimationCreateApiModel::setIssuedOn(const QDateTime &issued_on) {
    m_issued_on = issued_on;
    m_issued_on_isSet = true;
}

bool OAIEstimationCreateApiModel::is_issued_on_Set() const{
    return m_issued_on_isSet;
}

bool OAIEstimationCreateApiModel::is_issued_on_Valid() const{
    return m_issued_on_isValid;
}

QList<OAIEstimationCreateItemApiModel> OAIEstimationCreateApiModel::getItems() const {
    return m_items;
}
void OAIEstimationCreateApiModel::setItems(const QList<OAIEstimationCreateItemApiModel> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIEstimationCreateApiModel::is_items_Set() const{
    return m_items_isSet;
}

bool OAIEstimationCreateApiModel::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIEstimationCreateApiModel::getNotes() const {
    return m_notes;
}
void OAIEstimationCreateApiModel::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIEstimationCreateApiModel::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIEstimationCreateApiModel::is_notes_Valid() const{
    return m_notes_isValid;
}

QString OAIEstimationCreateApiModel::getNumber() const {
    return m_number;
}
void OAIEstimationCreateApiModel::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIEstimationCreateApiModel::is_number_Set() const{
    return m_number_isSet;
}

bool OAIEstimationCreateApiModel::is_number_Valid() const{
    return m_number_isValid;
}

QList<OAIEstimationGatewayApiModel> OAIEstimationCreateApiModel::getPaymentGateways() const {
    return m_payment_gateways;
}
void OAIEstimationCreateApiModel::setPaymentGateways(const QList<OAIEstimationGatewayApiModel> &payment_gateways) {
    m_payment_gateways = payment_gateways;
    m_payment_gateways_isSet = true;
}

bool OAIEstimationCreateApiModel::is_payment_gateways_Set() const{
    return m_payment_gateways_isSet;
}

bool OAIEstimationCreateApiModel::is_payment_gateways_Valid() const{
    return m_payment_gateways_isValid;
}

QString OAIEstimationCreateApiModel::getPoNumber() const {
    return m_po_number;
}
void OAIEstimationCreateApiModel::setPoNumber(const QString &po_number) {
    m_po_number = po_number;
    m_po_number_isSet = true;
}

bool OAIEstimationCreateApiModel::is_po_number_Set() const{
    return m_po_number_isSet;
}

bool OAIEstimationCreateApiModel::is_po_number_Valid() const{
    return m_po_number_isValid;
}

QString OAIEstimationCreateApiModel::getStatus() const {
    return m_status;
}
void OAIEstimationCreateApiModel::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEstimationCreateApiModel::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEstimationCreateApiModel::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIEstimationCreateApiModel::getTerms() const {
    return m_terms;
}
void OAIEstimationCreateApiModel::setTerms(const QString &terms) {
    m_terms = terms;
    m_terms_isSet = true;
}

bool OAIEstimationCreateApiModel::is_terms_Set() const{
    return m_terms_isSet;
}

bool OAIEstimationCreateApiModel::is_terms_Valid() const{
    return m_terms_isValid;
}

bool OAIEstimationCreateApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attachments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloned_from_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expires_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issued_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_gateways.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_po_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terms_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEstimationCreateApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
