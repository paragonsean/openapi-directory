/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceCreateAttachmentApiModel from './InvoiceCreateAttachmentApiModel';
import InvoiceCreateItemApiModel from './InvoiceCreateItemApiModel';
import InvoiceGatewayApiModel from './InvoiceGatewayApiModel';
import InvoiceRecurringApiModel from './InvoiceRecurringApiModel';

/**
 * The InvoiceCreateApiModel model module.
 * @module model/InvoiceCreateApiModel
 * @version v1
 */
class InvoiceCreateApiModel {
    /**
     * Constructs a new <code>InvoiceCreateApiModel</code>.
     * @alias module:model/InvoiceCreateApiModel
     */
    constructor() { 
        
        InvoiceCreateApiModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceCreateApiModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceCreateApiModel} obj Optional instance to populate.
     * @return {module:model/InvoiceCreateApiModel} The populated <code>InvoiceCreateApiModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceCreateApiModel();

            if (data.hasOwnProperty('Attachments')) {
                obj['Attachments'] = ApiClient.convertToType(data['Attachments'], [InvoiceCreateAttachmentApiModel]);
            }
            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'Number');
            }
            if (data.hasOwnProperty('ClonedFromId')) {
                obj['ClonedFromId'] = ApiClient.convertToType(data['ClonedFromId'], 'Number');
            }
            if (data.hasOwnProperty('CurrencyId')) {
                obj['CurrencyId'] = ApiClient.convertToType(data['CurrencyId'], 'Number');
            }
            if (data.hasOwnProperty('Duedate')) {
                obj['Duedate'] = ApiClient.convertToType(data['Duedate'], 'Date');
            }
            if (data.hasOwnProperty('InvoiceCategoryId')) {
                obj['InvoiceCategoryId'] = ApiClient.convertToType(data['InvoiceCategoryId'], 'Number');
            }
            if (data.hasOwnProperty('IssuedOn')) {
                obj['IssuedOn'] = ApiClient.convertToType(data['IssuedOn'], 'Date');
            }
            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], [InvoiceCreateItemApiModel]);
            }
            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], 'String');
            }
            if (data.hasOwnProperty('Number')) {
                obj['Number'] = ApiClient.convertToType(data['Number'], 'String');
            }
            if (data.hasOwnProperty('PaymentGateways')) {
                obj['PaymentGateways'] = ApiClient.convertToType(data['PaymentGateways'], [InvoiceGatewayApiModel]);
            }
            if (data.hasOwnProperty('PoNumber')) {
                obj['PoNumber'] = ApiClient.convertToType(data['PoNumber'], 'String');
            }
            if (data.hasOwnProperty('RecurringProfile')) {
                obj['RecurringProfile'] = InvoiceRecurringApiModel.constructFromObject(data['RecurringProfile']);
            }
            if (data.hasOwnProperty('RecurringProfileId')) {
                obj['RecurringProfileId'] = ApiClient.convertToType(data['RecurringProfileId'], 'Number');
            }
            if (data.hasOwnProperty('ShouldSendReminders')) {
                obj['ShouldSendReminders'] = ApiClient.convertToType(data['ShouldSendReminders'], 'Boolean');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Terms')) {
                obj['Terms'] = ApiClient.convertToType(data['Terms'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceCreateApiModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceCreateApiModel</code>.
     */
    static validateJSON(data) {
        if (data['Attachments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Attachments'])) {
                throw new Error("Expected the field `Attachments` to be an array in the JSON data but got " + data['Attachments']);
            }
            // validate the optional field `Attachments` (array)
            for (const item of data['Attachments']) {
                InvoiceCreateAttachmentApiModel.validateJSON(item);
            };
        }
        if (data['Items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Items'])) {
                throw new Error("Expected the field `Items` to be an array in the JSON data but got " + data['Items']);
            }
            // validate the optional field `Items` (array)
            for (const item of data['Items']) {
                InvoiceCreateItemApiModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Notes'] && !(typeof data['Notes'] === 'string' || data['Notes'] instanceof String)) {
            throw new Error("Expected the field `Notes` to be a primitive type in the JSON string but got " + data['Notes']);
        }
        // ensure the json data is a string
        if (data['Number'] && !(typeof data['Number'] === 'string' || data['Number'] instanceof String)) {
            throw new Error("Expected the field `Number` to be a primitive type in the JSON string but got " + data['Number']);
        }
        if (data['PaymentGateways']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['PaymentGateways'])) {
                throw new Error("Expected the field `PaymentGateways` to be an array in the JSON data but got " + data['PaymentGateways']);
            }
            // validate the optional field `PaymentGateways` (array)
            for (const item of data['PaymentGateways']) {
                InvoiceGatewayApiModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['PoNumber'] && !(typeof data['PoNumber'] === 'string' || data['PoNumber'] instanceof String)) {
            throw new Error("Expected the field `PoNumber` to be a primitive type in the JSON string but got " + data['PoNumber']);
        }
        // validate the optional field `RecurringProfile`
        if (data['RecurringProfile']) { // data not null
          InvoiceRecurringApiModel.validateJSON(data['RecurringProfile']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['Terms'] && !(typeof data['Terms'] === 'string' || data['Terms'] instanceof String)) {
            throw new Error("Expected the field `Terms` to be a primitive type in the JSON string but got " + data['Terms']);
        }

        return true;
    }


}



/**
 * List of invoice attachments
 * @member {Array.<module:model/InvoiceCreateAttachmentApiModel>} Attachments
 */
InvoiceCreateApiModel.prototype['Attachments'] = undefined;

/**
 * The client to whom this invoice is assigned
 * @member {Number} ClientId
 */
InvoiceCreateApiModel.prototype['ClientId'] = undefined;

/**
 * Indicate from which invoice this invoice has been cloned from
 * @member {Number} ClonedFromId
 */
InvoiceCreateApiModel.prototype['ClonedFromId'] = undefined;

/**
 * Id of the currency for the invoice amounts
 * @member {Number} CurrencyId
 */
InvoiceCreateApiModel.prototype['CurrencyId'] = undefined;

/**
 * Indicates when the invoice will be proclamed as due
 * @member {Date} Duedate
 */
InvoiceCreateApiModel.prototype['Duedate'] = undefined;

/**
 * Hold the id of the invoice category
 * @member {Number} InvoiceCategoryId
 */
InvoiceCreateApiModel.prototype['InvoiceCategoryId'] = undefined;

/**
 * Indicates when the invoice was issued
 * @member {Date} IssuedOn
 */
InvoiceCreateApiModel.prototype['IssuedOn'] = undefined;

/**
 * List of invoice items
 * @member {Array.<module:model/InvoiceCreateItemApiModel>} Items
 */
InvoiceCreateApiModel.prototype['Items'] = undefined;

/**
 * Internal note regarding the invoice
 * @member {String} Notes
 */
InvoiceCreateApiModel.prototype['Notes'] = undefined;

/**
 * Unique invoice number
 * @member {String} Number
 */
InvoiceCreateApiModel.prototype['Number'] = undefined;

/**
 * List of enabled payment gateways for this invoice
 * @member {Array.<module:model/InvoiceGatewayApiModel>} PaymentGateways
 */
InvoiceCreateApiModel.prototype['PaymentGateways'] = undefined;

/**
 * Unique number generated by the buyer
 * @member {String} PoNumber
 */
InvoiceCreateApiModel.prototype['PoNumber'] = undefined;

/**
 * @member {module:model/InvoiceRecurringApiModel} RecurringProfile
 */
InvoiceCreateApiModel.prototype['RecurringProfile'] = undefined;

/**
 * Hold the id of the recurring profile
 * @member {Number} RecurringProfileId
 */
InvoiceCreateApiModel.prototype['RecurringProfileId'] = undefined;

/**
 * Should send email reminders to client?
 * @member {Boolean} ShouldSendReminders
 */
InvoiceCreateApiModel.prototype['ShouldSendReminders'] = undefined;

/**
 * Indicate the status of the invoice (paid/unpaid/overdue)
 * @member {module:model/InvoiceCreateApiModel.StatusEnum} Status
 */
InvoiceCreateApiModel.prototype['Status'] = undefined;

/**
 * Terms of agreement
 * @member {String} Terms
 */
InvoiceCreateApiModel.prototype['Terms'] = undefined;





/**
 * Allowed values for the <code>Status</code> property.
 * @enum {String}
 * @readonly
 */
InvoiceCreateApiModel['StatusEnum'] = {

    /**
     * value: "Draft"
     * @const
     */
    "Draft": "Draft",

    /**
     * value: "Paid"
     * @const
     */
    "Paid": "Paid",

    /**
     * value: "Unpaid"
     * @const
     */
    "Unpaid": "Unpaid",

    /**
     * value: "Overdue"
     * @const
     */
    "Overdue": "Overdue",

    /**
     * value: "Void"
     * @const
     */
    "Void": "Void"
};



export default InvoiceCreateApiModel;

