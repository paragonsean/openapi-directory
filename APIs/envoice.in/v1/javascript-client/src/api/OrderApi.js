/**
 * API v1.0.0
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)  <span style='margin-left: 0.5em;'>or</span>  <a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>    # Quickstart    Visit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.    <div class='postman-tutorial'>    # Tutorial for running the API in postman    Click on \"\"Run in Postman\"\" button  <br /><br />  ![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)     ---     A new page will open.  Click the \"\"Postman for windows\"\" to run postman as a desktop app.  Make sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.  <br /><br />  ![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)     ---     In chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".  <br /><br />  ![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)     ---     The OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"  <br /><br />  ![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)     ---     When testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.    <sub>\\*Eye button in top right corner </sub>  <br /><br />   ![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)  <br /><br />   ![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)     ---     You don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.  <br /><br />  ![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)     ---     Modify the example data to suit your needs and send a request.  <br /><br />  ![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)  </div>    # Webhooks    Webhooks allow you to build or set up Envoice Apps which subscribe to invoice activities.   When one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL.   Webhooks can be used to update an external invoice data storage.    In order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.  All nonworking webhooks will be ignored after a certain period of time and several retry attempts.  If after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.    The payload of the webhook is in format:  ```  {      Signature: \"\"sha256 string\"\",      Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",      Activity: {          Message: \"string\",          Link: \"share url\",          Type: int,                  InvoiceNumber: \"string\",          InvoiceId: int,                  OrderNumber: \"string\",          OrderId: int,          Id: int,          CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"      }  }  ```            
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChangeOrderStatusApiModel from '../model/ChangeOrderStatusApiModel';
import ListResultOrderDetailsApiModel from '../model/ListResultOrderDetailsApiModel';
import OrderCreateApiModel from '../model/OrderCreateApiModel';
import OrderDeleteApiModel from '../model/OrderDeleteApiModel';
import OrderFullDetailsApiModel from '../model/OrderFullDetailsApiModel';
import OrderShippingDetailsApiModel from '../model/OrderShippingDetailsApiModel';

/**
* Order service.
* @module api/OrderApi
* @version v1
*/
export default class OrderApi {

    /**
    * Constructs a new OrderApi. 
    * @alias module:api/OrderApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the orderApiAll operation.
     * @callback module:api/OrderApi~orderApiAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResultOrderDetailsApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return all orders for the account
     * @param {String} xAuthKey 
     * @param {String} xAuthSecret 
     * @param {Object} opts Optional parameters
     * @param {Number} [queryOptionsPage] 
     * @param {Number} [queryOptionsPageSize] 
     * @param {module:api/OrderApi~orderApiAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResultOrderDetailsApiModel}
     */
    orderApiAll(xAuthKey, xAuthSecret, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAuthKey' is set
      if (xAuthKey === undefined || xAuthKey === null) {
        throw new Error("Missing the required parameter 'xAuthKey' when calling orderApiAll");
      }
      // verify the required parameter 'xAuthSecret' is set
      if (xAuthSecret === undefined || xAuthSecret === null) {
        throw new Error("Missing the required parameter 'xAuthSecret' when calling orderApiAll");
      }

      let pathParams = {
      };
      let queryParams = {
        'queryOptions.page': opts['queryOptionsPage'],
        'queryOptions.pageSize': opts['queryOptionsPageSize']
      };
      let headerParams = {
        'x-auth-key': xAuthKey,
        'x-auth-secret': xAuthSecret
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let returnType = ListResultOrderDetailsApiModel;
      return this.apiClient.callApi(
        '/api/order/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderApiChangeShippingDetails operation.
     * @callback module:api/OrderApi~orderApiChangeShippingDetailsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change order shipping details
     * @param {Number} orderId 
     * @param {String} xAuthKey 
     * @param {String} xAuthSecret 
     * @param {module:model/OrderShippingDetailsApiModel} orderShippingDetailsApiModel 
     * @param {module:api/OrderApi~orderApiChangeShippingDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    orderApiChangeShippingDetails(orderId, xAuthKey, xAuthSecret, orderShippingDetailsApiModel, callback) {
      let postBody = orderShippingDetailsApiModel;
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling orderApiChangeShippingDetails");
      }
      // verify the required parameter 'xAuthKey' is set
      if (xAuthKey === undefined || xAuthKey === null) {
        throw new Error("Missing the required parameter 'xAuthKey' when calling orderApiChangeShippingDetails");
      }
      // verify the required parameter 'xAuthSecret' is set
      if (xAuthSecret === undefined || xAuthSecret === null) {
        throw new Error("Missing the required parameter 'xAuthSecret' when calling orderApiChangeShippingDetails");
      }
      // verify the required parameter 'orderShippingDetailsApiModel' is set
      if (orderShippingDetailsApiModel === undefined || orderShippingDetailsApiModel === null) {
        throw new Error("Missing the required parameter 'orderShippingDetailsApiModel' when calling orderApiChangeShippingDetails");
      }

      let pathParams = {
      };
      let queryParams = {
        'orderId': orderId
      };
      let headerParams = {
        'x-auth-key': xAuthKey,
        'x-auth-secret': xAuthSecret
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/order/changeshippingdetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderApiChangeStatus operation.
     * @callback module:api/OrderApi~orderApiChangeStatusCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change order status
     * @param {String} xAuthKey 
     * @param {String} xAuthSecret 
     * @param {module:model/ChangeOrderStatusApiModel} changeOrderStatusApiModel 
     * @param {module:api/OrderApi~orderApiChangeStatusCallback} callback The callback function, accepting three arguments: error, data, response
     */
    orderApiChangeStatus(xAuthKey, xAuthSecret, changeOrderStatusApiModel, callback) {
      let postBody = changeOrderStatusApiModel;
      // verify the required parameter 'xAuthKey' is set
      if (xAuthKey === undefined || xAuthKey === null) {
        throw new Error("Missing the required parameter 'xAuthKey' when calling orderApiChangeStatus");
      }
      // verify the required parameter 'xAuthSecret' is set
      if (xAuthSecret === undefined || xAuthSecret === null) {
        throw new Error("Missing the required parameter 'xAuthSecret' when calling orderApiChangeStatus");
      }
      // verify the required parameter 'changeOrderStatusApiModel' is set
      if (changeOrderStatusApiModel === undefined || changeOrderStatusApiModel === null) {
        throw new Error("Missing the required parameter 'changeOrderStatusApiModel' when calling orderApiChangeStatus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-auth-key': xAuthKey,
        'x-auth-secret': xAuthSecret
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/order/changestatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderApiDelete operation.
     * @callback module:api/OrderApi~orderApiDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing order
     * @param {String} xAuthKey 
     * @param {String} xAuthSecret 
     * @param {module:model/OrderDeleteApiModel} orderDeleteApiModel 
     * @param {module:api/OrderApi~orderApiDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    orderApiDelete(xAuthKey, xAuthSecret, orderDeleteApiModel, callback) {
      let postBody = orderDeleteApiModel;
      // verify the required parameter 'xAuthKey' is set
      if (xAuthKey === undefined || xAuthKey === null) {
        throw new Error("Missing the required parameter 'xAuthKey' when calling orderApiDelete");
      }
      // verify the required parameter 'xAuthSecret' is set
      if (xAuthSecret === undefined || xAuthSecret === null) {
        throw new Error("Missing the required parameter 'xAuthSecret' when calling orderApiDelete");
      }
      // verify the required parameter 'orderDeleteApiModel' is set
      if (orderDeleteApiModel === undefined || orderDeleteApiModel === null) {
        throw new Error("Missing the required parameter 'orderDeleteApiModel' when calling orderApiDelete");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-auth-key': xAuthKey,
        'x-auth-secret': xAuthSecret
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/order/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderApiDetails operation.
     * @callback module:api/OrderApi~orderApiDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderFullDetailsApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return order details
     * @param {Number} id 
     * @param {String} xAuthKey 
     * @param {String} xAuthSecret 
     * @param {module:api/OrderApi~orderApiDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderFullDetailsApiModel}
     */
    orderApiDetails(id, xAuthKey, xAuthSecret, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling orderApiDetails");
      }
      // verify the required parameter 'xAuthKey' is set
      if (xAuthKey === undefined || xAuthKey === null) {
        throw new Error("Missing the required parameter 'xAuthKey' when calling orderApiDetails");
      }
      // verify the required parameter 'xAuthSecret' is set
      if (xAuthSecret === undefined || xAuthSecret === null) {
        throw new Error("Missing the required parameter 'xAuthSecret' when calling orderApiDetails");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id
      };
      let headerParams = {
        'x-auth-key': xAuthKey,
        'x-auth-secret': xAuthSecret
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let returnType = OrderFullDetailsApiModel;
      return this.apiClient.callApi(
        '/api/order/details', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderApiNew operation.
     * @callback module:api/OrderApi~orderApiNewCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an order
     * @param {String} xAuthKey 
     * @param {String} xAuthSecret 
     * @param {module:model/OrderCreateApiModel} orderCreateApiModel 
     * @param {module:api/OrderApi~orderApiNewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    orderApiNew(xAuthKey, xAuthSecret, orderCreateApiModel, callback) {
      let postBody = orderCreateApiModel;
      // verify the required parameter 'xAuthKey' is set
      if (xAuthKey === undefined || xAuthKey === null) {
        throw new Error("Missing the required parameter 'xAuthKey' when calling orderApiNew");
      }
      // verify the required parameter 'xAuthSecret' is set
      if (xAuthSecret === undefined || xAuthSecret === null) {
        throw new Error("Missing the required parameter 'xAuthSecret' when calling orderApiNew");
      }
      // verify the required parameter 'orderCreateApiModel' is set
      if (orderCreateApiModel === undefined || orderCreateApiModel === null) {
        throw new Error("Missing the required parameter 'orderCreateApiModel' when calling orderApiNew");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-auth-key': xAuthKey,
        'x-auth-secret': xAuthSecret
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/html', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/order/new', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
