/**
 * OnSched API Utility
 * Endpoints for system utilities. e.g.Health
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ThreadPoolInfo model module.
 * @module model/ThreadPoolInfo
 * @version v1
 */
class ThreadPoolInfo {
    /**
     * Constructs a new <code>ThreadPoolInfo</code>.
     * @alias module:model/ThreadPoolInfo
     */
    constructor() { 
        
        ThreadPoolInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ThreadPoolInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThreadPoolInfo} obj Optional instance to populate.
     * @return {module:model/ThreadPoolInfo} The populated <code>ThreadPoolInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThreadPoolInfo();

            if (data.hasOwnProperty('availableCompletionThreads')) {
                obj['availableCompletionThreads'] = ApiClient.convertToType(data['availableCompletionThreads'], 'Number');
            }
            if (data.hasOwnProperty('availableWorkerThreads')) {
                obj['availableWorkerThreads'] = ApiClient.convertToType(data['availableWorkerThreads'], 'Number');
            }
            if (data.hasOwnProperty('maxCompletionThreads')) {
                obj['maxCompletionThreads'] = ApiClient.convertToType(data['maxCompletionThreads'], 'Number');
            }
            if (data.hasOwnProperty('maxWorkerThreads')) {
                obj['maxWorkerThreads'] = ApiClient.convertToType(data['maxWorkerThreads'], 'Number');
            }
            if (data.hasOwnProperty('minCompletionThreads')) {
                obj['minCompletionThreads'] = ApiClient.convertToType(data['minCompletionThreads'], 'Number');
            }
            if (data.hasOwnProperty('minWorkerThreads')) {
                obj['minWorkerThreads'] = ApiClient.convertToType(data['minWorkerThreads'], 'Number');
            }
            if (data.hasOwnProperty('occupiedCompletionThreads')) {
                obj['occupiedCompletionThreads'] = ApiClient.convertToType(data['occupiedCompletionThreads'], 'Number');
            }
            if (data.hasOwnProperty('occupiedWorkerThreads')) {
                obj['occupiedWorkerThreads'] = ApiClient.convertToType(data['occupiedWorkerThreads'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThreadPoolInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThreadPoolInfo</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} availableCompletionThreads
 */
ThreadPoolInfo.prototype['availableCompletionThreads'] = undefined;

/**
 * @member {Number} availableWorkerThreads
 */
ThreadPoolInfo.prototype['availableWorkerThreads'] = undefined;

/**
 * @member {Number} maxCompletionThreads
 */
ThreadPoolInfo.prototype['maxCompletionThreads'] = undefined;

/**
 * @member {Number} maxWorkerThreads
 */
ThreadPoolInfo.prototype['maxWorkerThreads'] = undefined;

/**
 * @member {Number} minCompletionThreads
 */
ThreadPoolInfo.prototype['minCompletionThreads'] = undefined;

/**
 * @member {Number} minWorkerThreads
 */
ThreadPoolInfo.prototype['minWorkerThreads'] = undefined;

/**
 * @member {Number} occupiedCompletionThreads
 */
ThreadPoolInfo.prototype['occupiedCompletionThreads'] = undefined;

/**
 * @member {Number} occupiedWorkerThreads
 */
ThreadPoolInfo.prototype['occupiedWorkerThreads'] = undefined;






export default ThreadPoolInfo;

