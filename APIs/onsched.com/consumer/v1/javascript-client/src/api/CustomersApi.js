/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BookingFieldListViewModel from '../model/BookingFieldListViewModel';
import CountryViewModel from '../model/CountryViewModel';
import CustomFieldDefinitionListViewModel from '../model/CustomFieldDefinitionListViewModel';
import CustomerInputModel from '../model/CustomerInputModel';
import CustomerListViewModel from '../model/CustomerListViewModel';
import CustomerUpdateModel from '../model/CustomerUpdateModel';
import CustomerViewModel from '../model/CustomerViewModel';
import StateViewModel from '../model/StateViewModel';

/**
* Customers service.
* @module api/CustomersApi
* @version v1
*/
export default class CustomersApi {

    /**
    * Constructs a new CustomersApi. 
    * @alias module:api/CustomersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the consumerV1CustomersBookingfieldsGet operation.
     * @callback module:api/CustomersApi~consumerV1CustomersBookingfieldsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BookingFieldListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Customer Booking Fields
     * <p>Use this endpoint to return <b>Customer Booking Fields</b>. Customer booking fields are stored with each customer object. They are used when the information collected during the booking is for a particular customer. Customer Booking Fields include any custom customer fields you define and want to capture with the Booking.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [locationId] id of business location, defaults to primary business location
     * @param {module:api/CustomersApi~consumerV1CustomersBookingfieldsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BookingFieldListViewModel}
     */
    consumerV1CustomersBookingfieldsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locationId': opts['locationId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BookingFieldListViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/customers/bookingfields', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersCountriesGet operation.
     * @callback module:api/CustomersApi~consumerV1CustomersCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CountryViewModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Country Codes
     * <p>Use this endpoint to return a <b>List of Countries with their associated Country Code</b>. Country codes are based on the 2-character ANSI standard. If your countries of operation are not currently listed, contact us at <i><b>support@onsched.com</b></i>.</p>
     * @param {module:api/CustomersApi~consumerV1CustomersCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CountryViewModel>}
     */
    consumerV1CustomersCountriesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CountryViewModel];
      return this.apiClient.callApi(
        '/consumer/v1/customers/countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersCustomfieldsGet operation.
     * @callback module:api/CustomersApi~consumerV1CustomersCustomfieldsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFieldDefinitionListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Customer Custom Fields
     * <p>Use this endpoint to return <b>Customer Custom Fields</b>. Customer custom fields are stored with the customer object. They are used when the information collected during the booking is specific to a particular customer.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [locationId] id of business location, defaults to primary business location
     * @param {Boolean} [leadQuestions] A true/false indicator to filter on custom fields used for lead questions
     * @param {module:api/CustomersApi~consumerV1CustomersCustomfieldsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFieldDefinitionListViewModel}
     */
    consumerV1CustomersCustomfieldsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locationId': opts['locationId'],
        'leadQuestions': opts['leadQuestions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomFieldDefinitionListViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/customers/customfields', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersGet operation.
     * @callback module:api/CustomersApi~consumerV1CustomersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Customers
     * <p>Use this endpoint to return a <b>List of Customers</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [locationId] id of business location, defaults to primary business location
     * @param {String} [groupId] Filter by groupId
     * @param {String} [email] Filter by email address
     * @param {String} [lastname] Filter by lastname
     * @param {Boolean} [deleted] Filter by deleted status
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/CustomersApi~consumerV1CustomersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerListViewModel}
     */
    consumerV1CustomersGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locationId': opts['locationId'],
        'groupId': opts['groupId'],
        'email': opts['email'],
        'lastname': opts['lastname'],
        'deleted': opts['deleted'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerListViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/customers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersIdDelete operation.
     * @callback module:api/CustomersApi~consumerV1CustomersIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Customer
     * <p>Use this endpoint to permanently <b>Delete</b> a Customer object. A valid <b>customer id</b> is required.</p>
     * @param {String} id id of customer object
     * @param {module:api/CustomersApi~consumerV1CustomersIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    consumerV1CustomersIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling consumerV1CustomersIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/consumer/v1/customers/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersIdGet operation.
     * @callback module:api/CustomersApi~consumerV1CustomersIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Customer
     * <p>Use this endpoint to return a <b>Customer</b> object. A valid <b>customer id</b> is required. Find customer id's by using the <i>GET /consumer/v1/customers</i> endpoint.</p>
     * @param {String} id id of customer object
     * @param {module:api/CustomersApi~consumerV1CustomersIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerViewModel}
     */
    consumerV1CustomersIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling consumerV1CustomersIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/customers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersIdPut operation.
     * @callback module:api/CustomersApi~consumerV1CustomersIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Customer
     * <p>Use this endpoint to <b>Update</b> a Customer object. A valid <b>customer id</b> is required. Note: Blank fields are not changed.</p>
     * @param {String} id id of customer object
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomerUpdateModel} [customerUpdateModel] 
     * @param {module:api/CustomersApi~consumerV1CustomersIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    consumerV1CustomersIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['customerUpdateModel'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling consumerV1CustomersIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/consumer/v1/customers/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersPost operation.
     * @callback module:api/CustomersApi~consumerV1CustomersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Customer
     * <p>Use this endpoint to <b>Create</b> a new Customer. A customer object is automatically created with the first appointment booking if it doesn't already exist. If not specified, the business location id defaults to the primary business location.</p>  <p>Required Fields: <b>Email</b> and <b>Name</b> or <b>First and Lastname</b> depending on customer type. Type 0 = Person, Type 1 = Business. For type 0, the firstname and lastname fields are used. For type 1, the Name field is used, and the name field is also used to populate the lastname.</p>
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomerInputModel} [customerInputModel] 
     * @param {module:api/CustomersApi~consumerV1CustomersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerViewModel}
     */
    consumerV1CustomersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['customerInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = CustomerViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/customers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1CustomersStatesGet operation.
     * @callback module:api/CustomersApi~consumerV1CustomersStatesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/StateViewModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Country States
     * <p>Use this endpoint to return a <b>List of Countries with their associated State Codes</b>. Supply a country code to filter results further. If states for your countries of operation are not currently listed, contact us at <i><b>support@onsched.com</b></i>.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [country] 
     * @param {module:api/CustomersApi~consumerV1CustomersStatesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/StateViewModel>}
     */
    consumerV1CustomersStatesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'country': opts['country']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [StateViewModel];
      return this.apiClient.callApi(
        '/consumer/v1/customers/states', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
