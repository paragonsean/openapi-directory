/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResourceListViewModel from '../model/ResourceListViewModel';
import ResourceServiceListViewModel from '../model/ResourceServiceListViewModel';
import ResourceViewModel from '../model/ResourceViewModel';

/**
* Resources service.
* @module api/ResourcesApi
* @version v1
*/
export default class ResourcesApi {

    /**
    * Constructs a new ResourcesApi. 
    * @alias module:api/ResourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the consumerV1ResourcesGet operation.
     * @callback module:api/ResourcesApi~consumerV1ResourcesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Resources
     * <p>Use this endpoint to return a <b>List of Resources</b> associated with a business location. If not specified, the business location defaults to the primary business location. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [locationId] id of business location, defaults to primary business location
     * @param {Number} [resourceGroupId] Filter by groupId
     * @param {String} [email] Filter by email address
     * @param {String} [name] Search by name, supports Partial name search
     * @param {String} [sortOrder] Specify sort order of response
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/ResourcesApi~consumerV1ResourcesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceListViewModel}
     */
    consumerV1ResourcesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locationId': opts['locationId'],
        'resourceGroupId': opts['resourceGroupId'],
        'email': opts['email'],
        'name': opts['name'],
        'sortOrder': opts['sortOrder'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceListViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/resources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1ResourcesIdGet operation.
     * @callback module:api/ResourcesApi~consumerV1ResourcesIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Resource
     * <p>Use this endpoint to return a <b>Resource</b> object. A valid <b>resource id</b> is required. Find resource id's by using the <i>GET consumer/v1/resources</i> endpoint. </p>
     * @param {Number} id id of resource object
     * @param {module:api/ResourcesApi~consumerV1ResourcesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceViewModel}
     */
    consumerV1ResourcesIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling consumerV1ResourcesIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/resources/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consumerV1ResourcesIdServicesGet operation.
     * @callback module:api/ResourcesApi~consumerV1ResourcesIdServicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceServiceListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Resource Linked Services
     * <p>Use this endpoint to get a <b>List of Linked Services</b> associated with the resource requested. The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, limit is 20, the maximum limit is 100. Use the other query parameters to filter the results further.</p>  <p>Resource linked services are used to explicitly define the services that can be booked for a specified resource. By default, all services are bookable for any resource. For more information: <a href=\"https://docs.onsched.com/docs/linked-services\">Linked Services Overview</a></p>
     * @param {Number} id id of resource object
     * @param {Object} opts Optional parameters
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/ResourcesApi~consumerV1ResourcesIdServicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceServiceListViewModel}
     */
    consumerV1ResourcesIdServicesGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling consumerV1ResourcesIdServicesGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceServiceListViewModel;
      return this.apiClient.callApi(
        '/consumer/v1/resources/{id}/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
