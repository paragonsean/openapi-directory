/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomFieldListDefinitionViewModel from './CustomFieldListDefinitionViewModel';

/**
 * The CustomFieldDefinitionViewModel model module.
 * @module model/CustomFieldDefinitionViewModel
 * @version v1
 */
class CustomFieldDefinitionViewModel {
    /**
     * Constructs a new <code>CustomFieldDefinitionViewModel</code>.
     * @alias module:model/CustomFieldDefinitionViewModel
     */
    constructor() { 
        
        CustomFieldDefinitionViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomFieldDefinitionViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomFieldDefinitionViewModel} obj Optional instance to populate.
     * @return {module:model/CustomFieldDefinitionViewModel} The populated <code>CustomFieldDefinitionViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomFieldDefinitionViewModel();

            if (data.hasOwnProperty('fieldKey')) {
                obj['fieldKey'] = ApiClient.convertToType(data['fieldKey'], 'String');
            }
            if (data.hasOwnProperty('fieldLabel')) {
                obj['fieldLabel'] = ApiClient.convertToType(data['fieldLabel'], 'String');
            }
            if (data.hasOwnProperty('fieldLength')) {
                obj['fieldLength'] = ApiClient.convertToType(data['fieldLength'], 'Number');
            }
            if (data.hasOwnProperty('fieldListItems')) {
                obj['fieldListItems'] = ApiClient.convertToType(data['fieldListItems'], [CustomFieldListDefinitionViewModel]);
            }
            if (data.hasOwnProperty('fieldName')) {
                obj['fieldName'] = ApiClient.convertToType(data['fieldName'], 'String');
            }
            if (data.hasOwnProperty('fieldPublic')) {
                obj['fieldPublic'] = ApiClient.convertToType(data['fieldPublic'], 'Boolean');
            }
            if (data.hasOwnProperty('fieldRequired')) {
                obj['fieldRequired'] = ApiClient.convertToType(data['fieldRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('fieldType')) {
                obj['fieldType'] = ApiClient.convertToType(data['fieldType'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('leadQuestion')) {
                obj['leadQuestion'] = ApiClient.convertToType(data['leadQuestion'], 'Boolean');
            }
            if (data.hasOwnProperty('leadQuestionWeight')) {
                obj['leadQuestionWeight'] = ApiClient.convertToType(data['leadQuestionWeight'], 'Number');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('sortKey')) {
                obj['sortKey'] = ApiClient.convertToType(data['sortKey'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomFieldDefinitionViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomFieldDefinitionViewModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fieldKey'] && !(typeof data['fieldKey'] === 'string' || data['fieldKey'] instanceof String)) {
            throw new Error("Expected the field `fieldKey` to be a primitive type in the JSON string but got " + data['fieldKey']);
        }
        // ensure the json data is a string
        if (data['fieldLabel'] && !(typeof data['fieldLabel'] === 'string' || data['fieldLabel'] instanceof String)) {
            throw new Error("Expected the field `fieldLabel` to be a primitive type in the JSON string but got " + data['fieldLabel']);
        }
        if (data['fieldListItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fieldListItems'])) {
                throw new Error("Expected the field `fieldListItems` to be an array in the JSON data but got " + data['fieldListItems']);
            }
            // validate the optional field `fieldListItems` (array)
            for (const item of data['fieldListItems']) {
                CustomFieldListDefinitionViewModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['fieldName'] && !(typeof data['fieldName'] === 'string' || data['fieldName'] instanceof String)) {
            throw new Error("Expected the field `fieldName` to be a primitive type in the JSON string but got " + data['fieldName']);
        }
        // ensure the json data is a string
        if (data['fieldType'] && !(typeof data['fieldType'] === 'string' || data['fieldType'] instanceof String)) {
            throw new Error("Expected the field `fieldType` to be a primitive type in the JSON string but got " + data['fieldType']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}



/**
 * @member {String} fieldKey
 */
CustomFieldDefinitionViewModel.prototype['fieldKey'] = undefined;

/**
 * @member {String} fieldLabel
 */
CustomFieldDefinitionViewModel.prototype['fieldLabel'] = undefined;

/**
 * @member {Number} fieldLength
 */
CustomFieldDefinitionViewModel.prototype['fieldLength'] = undefined;

/**
 * @member {Array.<module:model/CustomFieldListDefinitionViewModel>} fieldListItems
 */
CustomFieldDefinitionViewModel.prototype['fieldListItems'] = undefined;

/**
 * @member {String} fieldName
 */
CustomFieldDefinitionViewModel.prototype['fieldName'] = undefined;

/**
 * @member {Boolean} fieldPublic
 */
CustomFieldDefinitionViewModel.prototype['fieldPublic'] = undefined;

/**
 * @member {Boolean} fieldRequired
 */
CustomFieldDefinitionViewModel.prototype['fieldRequired'] = undefined;

/**
 * @member {String} fieldType
 */
CustomFieldDefinitionViewModel.prototype['fieldType'] = undefined;

/**
 * @member {String} id
 */
CustomFieldDefinitionViewModel.prototype['id'] = undefined;

/**
 * @member {Boolean} leadQuestion
 */
CustomFieldDefinitionViewModel.prototype['leadQuestion'] = undefined;

/**
 * @member {Number} leadQuestionWeight
 */
CustomFieldDefinitionViewModel.prototype['leadQuestionWeight'] = undefined;

/**
 * @member {String} object
 */
CustomFieldDefinitionViewModel.prototype['object'] = undefined;

/**
 * @member {Number} sortKey
 */
CustomFieldDefinitionViewModel.prototype['sortKey'] = undefined;






export default CustomFieldDefinitionViewModel;

