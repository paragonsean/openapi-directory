/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressViewModel from './AddressViewModel';
import ContactViewModel from './ContactViewModel';
import CustomFieldInputModel from './CustomFieldInputModel';
import ResourceHoursViewModel from './ResourceHoursViewModel';
import ResourceServiceViewModel from './ResourceServiceViewModel';

/**
 * The ResourceViewModel model module.
 * @module model/ResourceViewModel
 * @version v1
 */
class ResourceViewModel {
    /**
     * Constructs a new <code>ResourceViewModel</code>.
     * @alias module:model/ResourceViewModel
     */
    constructor() { 
        
        ResourceViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceViewModel} obj Optional instance to populate.
     * @return {module:model/ResourceViewModel} The populated <code>ResourceViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceViewModel();

            if (data.hasOwnProperty('address')) {
                obj['address'] = AddressViewModel.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('availability')) {
                obj['availability'] = ResourceHoursViewModel.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('bioLink')) {
                obj['bioLink'] = ApiClient.convertToType(data['bioLink'], 'String');
            }
            if (data.hasOwnProperty('bookingNotification')) {
                obj['bookingNotification'] = ApiClient.convertToType(data['bookingNotification'], 'Number');
            }
            if (data.hasOwnProperty('calendarAvailability')) {
                obj['calendarAvailability'] = ApiClient.convertToType(data['calendarAvailability'], 'Number');
            }
            if (data.hasOwnProperty('contact')) {
                obj['contact'] = ContactViewModel.constructFromObject(data['contact']);
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = CustomFieldInputModel.constructFromObject(data['customFields']);
            }
            if (data.hasOwnProperty('deletedStatus')) {
                obj['deletedStatus'] = ApiClient.convertToType(data['deletedStatus'], 'Boolean');
            }
            if (data.hasOwnProperty('deletedTime')) {
                obj['deletedTime'] = ApiClient.convertToType(data['deletedTime'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('effectiveDate')) {
                obj['effectiveDate'] = ApiClient.convertToType(data['effectiveDate'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('googleCalendarId')) {
                obj['googleCalendarId'] = ApiClient.convertToType(data['googleCalendarId'], 'String');
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('hourly')) {
                obj['hourly'] = ApiClient.convertToType(data['hourly'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ignoreBusinessHours')) {
                obj['ignoreBusinessHours'] = ApiClient.convertToType(data['ignoreBusinessHours'], 'Boolean');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notificationType')) {
                obj['notificationType'] = ApiClient.convertToType(data['notificationType'], 'Number');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('outlookCalendarId')) {
                obj['outlookCalendarId'] = ApiClient.convertToType(data['outlookCalendarId'], 'String');
            }
            if (data.hasOwnProperty('recurringAvailability')) {
                obj['recurringAvailability'] = ApiClient.convertToType(data['recurringAvailability'], 'Boolean');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], [ResourceServiceViewModel]);
            }
            if (data.hasOwnProperty('skypeName')) {
                obj['skypeName'] = ApiClient.convertToType(data['skypeName'], 'String');
            }
            if (data.hasOwnProperty('sortKey')) {
                obj['sortKey'] = ApiClient.convertToType(data['sortKey'], 'Number');
            }
            if (data.hasOwnProperty('timezoneIana')) {
                obj['timezoneIana'] = ApiClient.convertToType(data['timezoneIana'], 'String');
            }
            if (data.hasOwnProperty('timezoneId')) {
                obj['timezoneId'] = ApiClient.convertToType(data['timezoneId'], 'String');
            }
            if (data.hasOwnProperty('timezoneOffset')) {
                obj['timezoneOffset'] = ApiClient.convertToType(data['timezoneOffset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceViewModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          AddressViewModel.validateJSON(data['address']);
        }
        // validate the optional field `availability`
        if (data['availability']) { // data not null
          ResourceHoursViewModel.validateJSON(data['availability']);
        }
        // ensure the json data is a string
        if (data['bioLink'] && !(typeof data['bioLink'] === 'string' || data['bioLink'] instanceof String)) {
            throw new Error("Expected the field `bioLink` to be a primitive type in the JSON string but got " + data['bioLink']);
        }
        // validate the optional field `contact`
        if (data['contact']) { // data not null
          ContactViewModel.validateJSON(data['contact']);
        }
        // validate the optional field `customFields`
        if (data['customFields']) { // data not null
          CustomFieldInputModel.validateJSON(data['customFields']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // ensure the json data is a string
        if (data['googleCalendarId'] && !(typeof data['googleCalendarId'] === 'string' || data['googleCalendarId'] instanceof String)) {
            throw new Error("Expected the field `googleCalendarId` to be a primitive type in the JSON string but got " + data['googleCalendarId']);
        }
        // ensure the json data is a string
        if (data['groupId'] && !(typeof data['groupId'] === 'string' || data['groupId'] instanceof String)) {
            throw new Error("Expected the field `groupId` to be a primitive type in the JSON string but got " + data['groupId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['outlookCalendarId'] && !(typeof data['outlookCalendarId'] === 'string' || data['outlookCalendarId'] instanceof String)) {
            throw new Error("Expected the field `outlookCalendarId` to be a primitive type in the JSON string but got " + data['outlookCalendarId']);
        }
        if (data['services']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['services'])) {
                throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
            }
            // validate the optional field `services` (array)
            for (const item of data['services']) {
                ResourceServiceViewModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['skypeName'] && !(typeof data['skypeName'] === 'string' || data['skypeName'] instanceof String)) {
            throw new Error("Expected the field `skypeName` to be a primitive type in the JSON string but got " + data['skypeName']);
        }
        // ensure the json data is a string
        if (data['timezoneIana'] && !(typeof data['timezoneIana'] === 'string' || data['timezoneIana'] instanceof String)) {
            throw new Error("Expected the field `timezoneIana` to be a primitive type in the JSON string but got " + data['timezoneIana']);
        }
        // ensure the json data is a string
        if (data['timezoneId'] && !(typeof data['timezoneId'] === 'string' || data['timezoneId'] instanceof String)) {
            throw new Error("Expected the field `timezoneId` to be a primitive type in the JSON string but got " + data['timezoneId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AddressViewModel} address
 */
ResourceViewModel.prototype['address'] = undefined;

/**
 * @member {module:model/ResourceHoursViewModel} availability
 */
ResourceViewModel.prototype['availability'] = undefined;

/**
 * @member {String} bioLink
 */
ResourceViewModel.prototype['bioLink'] = undefined;

/**
 * @member {Number} bookingNotification
 */
ResourceViewModel.prototype['bookingNotification'] = undefined;

/**
 * @member {Number} calendarAvailability
 */
ResourceViewModel.prototype['calendarAvailability'] = undefined;

/**
 * @member {module:model/ContactViewModel} contact
 */
ResourceViewModel.prototype['contact'] = undefined;

/**
 * @member {module:model/CustomFieldInputModel} customFields
 */
ResourceViewModel.prototype['customFields'] = undefined;

/**
 * @member {Boolean} deletedStatus
 */
ResourceViewModel.prototype['deletedStatus'] = undefined;

/**
 * @member {Date} deletedTime
 */
ResourceViewModel.prototype['deletedTime'] = undefined;

/**
 * @member {String} description
 */
ResourceViewModel.prototype['description'] = undefined;

/**
 * @member {Date} effectiveDate
 */
ResourceViewModel.prototype['effectiveDate'] = undefined;

/**
 * @member {String} email
 */
ResourceViewModel.prototype['email'] = undefined;

/**
 * @member {String} gender
 */
ResourceViewModel.prototype['gender'] = undefined;

/**
 * @member {String} googleCalendarId
 */
ResourceViewModel.prototype['googleCalendarId'] = undefined;

/**
 * @member {String} groupId
 */
ResourceViewModel.prototype['groupId'] = undefined;

/**
 * @member {Number} hourly
 */
ResourceViewModel.prototype['hourly'] = undefined;

/**
 * @member {String} id
 */
ResourceViewModel.prototype['id'] = undefined;

/**
 * @member {Boolean} ignoreBusinessHours
 */
ResourceViewModel.prototype['ignoreBusinessHours'] = undefined;

/**
 * @member {String} imageUrl
 */
ResourceViewModel.prototype['imageUrl'] = undefined;

/**
 * @member {String} locationId
 */
ResourceViewModel.prototype['locationId'] = undefined;

/**
 * @member {String} name
 */
ResourceViewModel.prototype['name'] = undefined;

/**
 * @member {Number} notificationType
 */
ResourceViewModel.prototype['notificationType'] = undefined;

/**
 * @member {String} object
 */
ResourceViewModel.prototype['object'] = undefined;

/**
 * @member {String} outlookCalendarId
 */
ResourceViewModel.prototype['outlookCalendarId'] = undefined;

/**
 * @member {Boolean} recurringAvailability
 */
ResourceViewModel.prototype['recurringAvailability'] = undefined;

/**
 * @member {Array.<module:model/ResourceServiceViewModel>} services
 */
ResourceViewModel.prototype['services'] = undefined;

/**
 * @member {String} skypeName
 */
ResourceViewModel.prototype['skypeName'] = undefined;

/**
 * @member {Number} sortKey
 */
ResourceViewModel.prototype['sortKey'] = undefined;

/**
 * @member {String} timezoneIana
 */
ResourceViewModel.prototype['timezoneIana'] = undefined;

/**
 * @member {String} timezoneId
 */
ResourceViewModel.prototype['timezoneId'] = undefined;

/**
 * @member {Number} timezoneOffset
 */
ResourceViewModel.prototype['timezoneOffset'] = undefined;






export default ResourceViewModel;

