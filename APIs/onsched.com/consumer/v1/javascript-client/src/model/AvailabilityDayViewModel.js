/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailableDayViewModel from './AvailableDayViewModel';

/**
 * The AvailabilityDayViewModel model module.
 * @module model/AvailabilityDayViewModel
 * @version v1
 */
class AvailabilityDayViewModel {
    /**
     * Constructs a new <code>AvailabilityDayViewModel</code>.
     * @alias module:model/AvailabilityDayViewModel
     */
    constructor() { 
        
        AvailabilityDayViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvailabilityDayViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailabilityDayViewModel} obj Optional instance to populate.
     * @return {module:model/AvailabilityDayViewModel} The populated <code>AvailabilityDayViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailabilityDayViewModel();

            if (data.hasOwnProperty('availableDays')) {
                obj['availableDays'] = ApiClient.convertToType(data['availableDays'], [AvailableDayViewModel]);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('resourceDescription')) {
                obj['resourceDescription'] = ApiClient.convertToType(data['resourceDescription'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('serviceDescription')) {
                obj['serviceDescription'] = ApiClient.convertToType(data['serviceDescription'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
            if (data.hasOwnProperty('tzRequested')) {
                obj['tzRequested'] = ApiClient.convertToType(data['tzRequested'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailabilityDayViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailabilityDayViewModel</code>.
     */
    static validateJSON(data) {
        if (data['availableDays']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['availableDays'])) {
                throw new Error("Expected the field `availableDays` to be an array in the JSON data but got " + data['availableDays']);
            }
            // validate the optional field `availableDays` (array)
            for (const item of data['availableDays']) {
                AvailableDayViewModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['resourceDescription'] && !(typeof data['resourceDescription'] === 'string' || data['resourceDescription'] instanceof String)) {
            throw new Error("Expected the field `resourceDescription` to be a primitive type in the JSON string but got " + data['resourceDescription']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['serviceDescription'] && !(typeof data['serviceDescription'] === 'string' || data['serviceDescription'] instanceof String)) {
            throw new Error("Expected the field `serviceDescription` to be a primitive type in the JSON string but got " + data['serviceDescription']);
        }
        // ensure the json data is a string
        if (data['serviceId'] && !(typeof data['serviceId'] === 'string' || data['serviceId'] instanceof String)) {
            throw new Error("Expected the field `serviceId` to be a primitive type in the JSON string but got " + data['serviceId']);
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AvailableDayViewModel>} availableDays
 */
AvailabilityDayViewModel.prototype['availableDays'] = undefined;

/**
 * @member {String} object
 */
AvailabilityDayViewModel.prototype['object'] = undefined;

/**
 * @member {String} resourceDescription
 */
AvailabilityDayViewModel.prototype['resourceDescription'] = undefined;

/**
 * @member {String} resourceId
 */
AvailabilityDayViewModel.prototype['resourceId'] = undefined;

/**
 * @member {String} resourceName
 */
AvailabilityDayViewModel.prototype['resourceName'] = undefined;

/**
 * @member {String} serviceDescription
 */
AvailabilityDayViewModel.prototype['serviceDescription'] = undefined;

/**
 * @member {String} serviceId
 */
AvailabilityDayViewModel.prototype['serviceId'] = undefined;

/**
 * @member {String} serviceName
 */
AvailabilityDayViewModel.prototype['serviceName'] = undefined;

/**
 * @member {Number} tzRequested
 */
AvailabilityDayViewModel.prototype['tzRequested'] = undefined;

/**
 * @member {String} url
 */
AvailabilityDayViewModel.prototype['url'] = undefined;






export default AvailabilityDayViewModel;

