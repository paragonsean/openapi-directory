/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnSchedConsumerApi);
  }
}(this, function(expect, OnSchedConsumerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnSchedConsumerApi.BookingFieldViewModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BookingFieldViewModel', function() {
    it('should create an instance of BookingFieldViewModel', function() {
      // uncomment below and update the code to test BookingFieldViewModel
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be.a(OnSchedConsumerApi.BookingFieldViewModel);
    });

    it('should have the property businessId (base name: "businessId")', function() {
      // uncomment below and update the code to test the property businessId
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property companyId (base name: "companyId")', function() {
      // uncomment below and update the code to test the property companyId
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property fieldLabel (base name: "fieldLabel")', function() {
      // uncomment below and update the code to test the property fieldLabel
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property fieldLength (base name: "fieldLength")', function() {
      // uncomment below and update the code to test the property fieldLength
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property fieldListItems (base name: "fieldListItems")', function() {
      // uncomment below and update the code to test the property fieldListItems
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property fieldName (base name: "fieldName")', function() {
      // uncomment below and update the code to test the property fieldName
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property fieldRequired (base name: "fieldRequired")', function() {
      // uncomment below and update the code to test the property fieldRequired
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property fieldType (base name: "fieldType")', function() {
      // uncomment below and update the code to test the property fieldType
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property leadQuestion (base name: "leadQuestion")', function() {
      // uncomment below and update the code to test the property leadQuestion
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property leadQuestionWeight (base name: "leadQuestionWeight")', function() {
      // uncomment below and update the code to test the property leadQuestionWeight
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

    it('should have the property sortKey (base name: "sortKey")', function() {
      // uncomment below and update the code to test the property sortKey
      //var instance = new OnSchedConsumerApi.BookingFieldViewModel();
      //expect(instance).to.be();
    });

  });

}));
