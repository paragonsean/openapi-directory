# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvailableTimeViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowable_bookings: int=None, allowable_capacity: int=None, available_bookings: int=None, available_capacity: int=None, _date: str=None, display_time: str=None, duration: int=None, end_date_time: str=None, resource_id: str=None, start_date_time: str=None, time: int=None, travel_appointment_id: str=None, travel_time_mins: int=None):
        """AvailableTimeViewModel - a model defined in OpenAPI

        :param allowable_bookings: The allowable_bookings of this AvailableTimeViewModel.
        :param allowable_capacity: The allowable_capacity of this AvailableTimeViewModel.
        :param available_bookings: The available_bookings of this AvailableTimeViewModel.
        :param available_capacity: The available_capacity of this AvailableTimeViewModel.
        :param _date: The _date of this AvailableTimeViewModel.
        :param display_time: The display_time of this AvailableTimeViewModel.
        :param duration: The duration of this AvailableTimeViewModel.
        :param end_date_time: The end_date_time of this AvailableTimeViewModel.
        :param resource_id: The resource_id of this AvailableTimeViewModel.
        :param start_date_time: The start_date_time of this AvailableTimeViewModel.
        :param time: The time of this AvailableTimeViewModel.
        :param travel_appointment_id: The travel_appointment_id of this AvailableTimeViewModel.
        :param travel_time_mins: The travel_time_mins of this AvailableTimeViewModel.
        """
        self.openapi_types = {
            'allowable_bookings': int,
            'allowable_capacity': int,
            'available_bookings': int,
            'available_capacity': int,
            '_date': str,
            'display_time': str,
            'duration': int,
            'end_date_time': str,
            'resource_id': str,
            'start_date_time': str,
            'time': int,
            'travel_appointment_id': str,
            'travel_time_mins': int
        }

        self.attribute_map = {
            'allowable_bookings': 'allowableBookings',
            'allowable_capacity': 'allowableCapacity',
            'available_bookings': 'availableBookings',
            'available_capacity': 'availableCapacity',
            '_date': 'date',
            'display_time': 'displayTime',
            'duration': 'duration',
            'end_date_time': 'endDateTime',
            'resource_id': 'resourceId',
            'start_date_time': 'startDateTime',
            'time': 'time',
            'travel_appointment_id': 'travelAppointmentId',
            'travel_time_mins': 'travelTimeMins'
        }

        self._allowable_bookings = allowable_bookings
        self._allowable_capacity = allowable_capacity
        self._available_bookings = available_bookings
        self._available_capacity = available_capacity
        self.__date = _date
        self._display_time = display_time
        self._duration = duration
        self._end_date_time = end_date_time
        self._resource_id = resource_id
        self._start_date_time = start_date_time
        self._time = time
        self._travel_appointment_id = travel_appointment_id
        self._travel_time_mins = travel_time_mins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableTimeViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailableTimeViewModel of this AvailableTimeViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowable_bookings(self):
        """Gets the allowable_bookings of this AvailableTimeViewModel.


        :return: The allowable_bookings of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._allowable_bookings

    @allowable_bookings.setter
    def allowable_bookings(self, allowable_bookings):
        """Sets the allowable_bookings of this AvailableTimeViewModel.


        :param allowable_bookings: The allowable_bookings of this AvailableTimeViewModel.
        :type allowable_bookings: int
        """

        self._allowable_bookings = allowable_bookings

    @property
    def allowable_capacity(self):
        """Gets the allowable_capacity of this AvailableTimeViewModel.


        :return: The allowable_capacity of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._allowable_capacity

    @allowable_capacity.setter
    def allowable_capacity(self, allowable_capacity):
        """Sets the allowable_capacity of this AvailableTimeViewModel.


        :param allowable_capacity: The allowable_capacity of this AvailableTimeViewModel.
        :type allowable_capacity: int
        """

        self._allowable_capacity = allowable_capacity

    @property
    def available_bookings(self):
        """Gets the available_bookings of this AvailableTimeViewModel.


        :return: The available_bookings of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._available_bookings

    @available_bookings.setter
    def available_bookings(self, available_bookings):
        """Sets the available_bookings of this AvailableTimeViewModel.


        :param available_bookings: The available_bookings of this AvailableTimeViewModel.
        :type available_bookings: int
        """

        self._available_bookings = available_bookings

    @property
    def available_capacity(self):
        """Gets the available_capacity of this AvailableTimeViewModel.


        :return: The available_capacity of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._available_capacity

    @available_capacity.setter
    def available_capacity(self, available_capacity):
        """Sets the available_capacity of this AvailableTimeViewModel.


        :param available_capacity: The available_capacity of this AvailableTimeViewModel.
        :type available_capacity: int
        """

        self._available_capacity = available_capacity

    @property
    def _date(self):
        """Gets the _date of this AvailableTimeViewModel.


        :return: The _date of this AvailableTimeViewModel.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AvailableTimeViewModel.


        :param _date: The _date of this AvailableTimeViewModel.
        :type _date: str
        """

        self.__date = _date

    @property
    def display_time(self):
        """Gets the display_time of this AvailableTimeViewModel.


        :return: The display_time of this AvailableTimeViewModel.
        :rtype: str
        """
        return self._display_time

    @display_time.setter
    def display_time(self, display_time):
        """Sets the display_time of this AvailableTimeViewModel.


        :param display_time: The display_time of this AvailableTimeViewModel.
        :type display_time: str
        """

        self._display_time = display_time

    @property
    def duration(self):
        """Gets the duration of this AvailableTimeViewModel.


        :return: The duration of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this AvailableTimeViewModel.


        :param duration: The duration of this AvailableTimeViewModel.
        :type duration: int
        """

        self._duration = duration

    @property
    def end_date_time(self):
        """Gets the end_date_time of this AvailableTimeViewModel.


        :return: The end_date_time of this AvailableTimeViewModel.
        :rtype: str
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this AvailableTimeViewModel.


        :param end_date_time: The end_date_time of this AvailableTimeViewModel.
        :type end_date_time: str
        """

        self._end_date_time = end_date_time

    @property
    def resource_id(self):
        """Gets the resource_id of this AvailableTimeViewModel.


        :return: The resource_id of this AvailableTimeViewModel.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this AvailableTimeViewModel.


        :param resource_id: The resource_id of this AvailableTimeViewModel.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def start_date_time(self):
        """Gets the start_date_time of this AvailableTimeViewModel.


        :return: The start_date_time of this AvailableTimeViewModel.
        :rtype: str
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this AvailableTimeViewModel.


        :param start_date_time: The start_date_time of this AvailableTimeViewModel.
        :type start_date_time: str
        """

        self._start_date_time = start_date_time

    @property
    def time(self):
        """Gets the time of this AvailableTimeViewModel.


        :return: The time of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this AvailableTimeViewModel.


        :param time: The time of this AvailableTimeViewModel.
        :type time: int
        """

        self._time = time

    @property
    def travel_appointment_id(self):
        """Gets the travel_appointment_id of this AvailableTimeViewModel.


        :return: The travel_appointment_id of this AvailableTimeViewModel.
        :rtype: str
        """
        return self._travel_appointment_id

    @travel_appointment_id.setter
    def travel_appointment_id(self, travel_appointment_id):
        """Sets the travel_appointment_id of this AvailableTimeViewModel.


        :param travel_appointment_id: The travel_appointment_id of this AvailableTimeViewModel.
        :type travel_appointment_id: str
        """

        self._travel_appointment_id = travel_appointment_id

    @property
    def travel_time_mins(self):
        """Gets the travel_time_mins of this AvailableTimeViewModel.


        :return: The travel_time_mins of this AvailableTimeViewModel.
        :rtype: int
        """
        return self._travel_time_mins

    @travel_time_mins.setter
    def travel_time_mins(self, travel_time_mins):
        """Sets the travel_time_mins of this AvailableTimeViewModel.


        :param travel_time_mins: The travel_time_mins of this AvailableTimeViewModel.
        :type travel_time_mins: int
        """

        self._travel_time_mins = travel_time_mins
