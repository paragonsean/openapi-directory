# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_field_view_model import BookingFieldViewModel
from openapi_server import util


class BookingFieldListViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, booking_fields: List[BookingFieldViewModel]=None, object: str=None, total: int=None):
        """BookingFieldListViewModel - a model defined in OpenAPI

        :param booking_fields: The booking_fields of this BookingFieldListViewModel.
        :param object: The object of this BookingFieldListViewModel.
        :param total: The total of this BookingFieldListViewModel.
        """
        self.openapi_types = {
            'booking_fields': List[BookingFieldViewModel],
            'object': str,
            'total': int
        }

        self.attribute_map = {
            'booking_fields': 'bookingFields',
            'object': 'object',
            'total': 'total'
        }

        self._booking_fields = booking_fields
        self._object = object
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingFieldListViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BookingFieldListViewModel of this BookingFieldListViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def booking_fields(self):
        """Gets the booking_fields of this BookingFieldListViewModel.


        :return: The booking_fields of this BookingFieldListViewModel.
        :rtype: List[BookingFieldViewModel]
        """
        return self._booking_fields

    @booking_fields.setter
    def booking_fields(self, booking_fields):
        """Sets the booking_fields of this BookingFieldListViewModel.


        :param booking_fields: The booking_fields of this BookingFieldListViewModel.
        :type booking_fields: List[BookingFieldViewModel]
        """

        self._booking_fields = booking_fields

    @property
    def object(self):
        """Gets the object of this BookingFieldListViewModel.


        :return: The object of this BookingFieldListViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this BookingFieldListViewModel.


        :param object: The object of this BookingFieldListViewModel.
        :type object: str
        """

        self._object = object

    @property
    def total(self):
        """Gets the total of this BookingFieldListViewModel.


        :return: The total of this BookingFieldListViewModel.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this BookingFieldListViewModel.


        :param total: The total of this BookingFieldListViewModel.
        :type total: int
        """

        self._total = total
