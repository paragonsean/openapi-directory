# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_field_item import BookingFieldItem
from openapi_server.models.custom_field_input_model import CustomFieldInputModel
from openapi_server import util


class AppointmentReserveModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_booking_fields: List[BookingFieldItem]=None, custom_fields: CustomFieldInputModel=None, customer_booking_fields: List[BookingFieldItem]=None, customer_message: str=None, email: str=None, name: str=None, notes: str=None, phone: str=None, phone_ext: str=None, phone_type: str=None):
        """AppointmentReserveModel - a model defined in OpenAPI

        :param appointment_booking_fields: The appointment_booking_fields of this AppointmentReserveModel.
        :param custom_fields: The custom_fields of this AppointmentReserveModel.
        :param customer_booking_fields: The customer_booking_fields of this AppointmentReserveModel.
        :param customer_message: The customer_message of this AppointmentReserveModel.
        :param email: The email of this AppointmentReserveModel.
        :param name: The name of this AppointmentReserveModel.
        :param notes: The notes of this AppointmentReserveModel.
        :param phone: The phone of this AppointmentReserveModel.
        :param phone_ext: The phone_ext of this AppointmentReserveModel.
        :param phone_type: The phone_type of this AppointmentReserveModel.
        """
        self.openapi_types = {
            'appointment_booking_fields': List[BookingFieldItem],
            'custom_fields': CustomFieldInputModel,
            'customer_booking_fields': List[BookingFieldItem],
            'customer_message': str,
            'email': str,
            'name': str,
            'notes': str,
            'phone': str,
            'phone_ext': str,
            'phone_type': str
        }

        self.attribute_map = {
            'appointment_booking_fields': 'appointmentBookingFields',
            'custom_fields': 'customFields',
            'customer_booking_fields': 'customerBookingFields',
            'customer_message': 'customerMessage',
            'email': 'email',
            'name': 'name',
            'notes': 'notes',
            'phone': 'phone',
            'phone_ext': 'phoneExt',
            'phone_type': 'phoneType'
        }

        self._appointment_booking_fields = appointment_booking_fields
        self._custom_fields = custom_fields
        self._customer_booking_fields = customer_booking_fields
        self._customer_message = customer_message
        self._email = email
        self._name = name
        self._notes = notes
        self._phone = phone
        self._phone_ext = phone_ext
        self._phone_type = phone_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppointmentReserveModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppointmentReserveModel of this AppointmentReserveModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_booking_fields(self):
        """Gets the appointment_booking_fields of this AppointmentReserveModel.


        :return: The appointment_booking_fields of this AppointmentReserveModel.
        :rtype: List[BookingFieldItem]
        """
        return self._appointment_booking_fields

    @appointment_booking_fields.setter
    def appointment_booking_fields(self, appointment_booking_fields):
        """Sets the appointment_booking_fields of this AppointmentReserveModel.


        :param appointment_booking_fields: The appointment_booking_fields of this AppointmentReserveModel.
        :type appointment_booking_fields: List[BookingFieldItem]
        """

        self._appointment_booking_fields = appointment_booking_fields

    @property
    def custom_fields(self):
        """Gets the custom_fields of this AppointmentReserveModel.


        :return: The custom_fields of this AppointmentReserveModel.
        :rtype: CustomFieldInputModel
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this AppointmentReserveModel.


        :param custom_fields: The custom_fields of this AppointmentReserveModel.
        :type custom_fields: CustomFieldInputModel
        """

        self._custom_fields = custom_fields

    @property
    def customer_booking_fields(self):
        """Gets the customer_booking_fields of this AppointmentReserveModel.


        :return: The customer_booking_fields of this AppointmentReserveModel.
        :rtype: List[BookingFieldItem]
        """
        return self._customer_booking_fields

    @customer_booking_fields.setter
    def customer_booking_fields(self, customer_booking_fields):
        """Sets the customer_booking_fields of this AppointmentReserveModel.


        :param customer_booking_fields: The customer_booking_fields of this AppointmentReserveModel.
        :type customer_booking_fields: List[BookingFieldItem]
        """

        self._customer_booking_fields = customer_booking_fields

    @property
    def customer_message(self):
        """Gets the customer_message of this AppointmentReserveModel.


        :return: The customer_message of this AppointmentReserveModel.
        :rtype: str
        """
        return self._customer_message

    @customer_message.setter
    def customer_message(self, customer_message):
        """Sets the customer_message of this AppointmentReserveModel.


        :param customer_message: The customer_message of this AppointmentReserveModel.
        :type customer_message: str
        """

        self._customer_message = customer_message

    @property
    def email(self):
        """Gets the email of this AppointmentReserveModel.


        :return: The email of this AppointmentReserveModel.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AppointmentReserveModel.


        :param email: The email of this AppointmentReserveModel.
        :type email: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this AppointmentReserveModel.


        :return: The name of this AppointmentReserveModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppointmentReserveModel.


        :param name: The name of this AppointmentReserveModel.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this AppointmentReserveModel.


        :return: The notes of this AppointmentReserveModel.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this AppointmentReserveModel.


        :param notes: The notes of this AppointmentReserveModel.
        :type notes: str
        """

        self._notes = notes

    @property
    def phone(self):
        """Gets the phone of this AppointmentReserveModel.


        :return: The phone of this AppointmentReserveModel.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this AppointmentReserveModel.


        :param phone: The phone of this AppointmentReserveModel.
        :type phone: str
        """

        self._phone = phone

    @property
    def phone_ext(self):
        """Gets the phone_ext of this AppointmentReserveModel.


        :return: The phone_ext of this AppointmentReserveModel.
        :rtype: str
        """
        return self._phone_ext

    @phone_ext.setter
    def phone_ext(self, phone_ext):
        """Sets the phone_ext of this AppointmentReserveModel.


        :param phone_ext: The phone_ext of this AppointmentReserveModel.
        :type phone_ext: str
        """

        self._phone_ext = phone_ext

    @property
    def phone_type(self):
        """Gets the phone_type of this AppointmentReserveModel.


        :return: The phone_type of this AppointmentReserveModel.
        :rtype: str
        """
        return self._phone_type

    @phone_type.setter
    def phone_type(self, phone_type):
        """Sets the phone_type of this AppointmentReserveModel.


        :param phone_type: The phone_type of this AppointmentReserveModel.
        :type phone_type: str
        """

        self._phone_type = phone_type
