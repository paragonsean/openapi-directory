# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceGroupViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_id: str=None, description: str=None, id: str=None, image_url: str=None, is_deleted: bool=None, location_id: str=None, name: str=None, object: str=None, type: int=None):
        """ServiceGroupViewModel - a model defined in OpenAPI

        :param company_id: The company_id of this ServiceGroupViewModel.
        :param description: The description of this ServiceGroupViewModel.
        :param id: The id of this ServiceGroupViewModel.
        :param image_url: The image_url of this ServiceGroupViewModel.
        :param is_deleted: The is_deleted of this ServiceGroupViewModel.
        :param location_id: The location_id of this ServiceGroupViewModel.
        :param name: The name of this ServiceGroupViewModel.
        :param object: The object of this ServiceGroupViewModel.
        :param type: The type of this ServiceGroupViewModel.
        """
        self.openapi_types = {
            'company_id': str,
            'description': str,
            'id': str,
            'image_url': str,
            'is_deleted': bool,
            'location_id': str,
            'name': str,
            'object': str,
            'type': int
        }

        self.attribute_map = {
            'company_id': 'companyId',
            'description': 'description',
            'id': 'id',
            'image_url': 'imageUrl',
            'is_deleted': 'isDeleted',
            'location_id': 'locationId',
            'name': 'name',
            'object': 'object',
            'type': 'type'
        }

        self._company_id = company_id
        self._description = description
        self._id = id
        self._image_url = image_url
        self._is_deleted = is_deleted
        self._location_id = location_id
        self._name = name
        self._object = object
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceGroupViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceGroupViewModel of this ServiceGroupViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_id(self):
        """Gets the company_id of this ServiceGroupViewModel.


        :return: The company_id of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this ServiceGroupViewModel.


        :param company_id: The company_id of this ServiceGroupViewModel.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def description(self):
        """Gets the description of this ServiceGroupViewModel.


        :return: The description of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ServiceGroupViewModel.


        :param description: The description of this ServiceGroupViewModel.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this ServiceGroupViewModel.


        :return: The id of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceGroupViewModel.


        :param id: The id of this ServiceGroupViewModel.
        :type id: str
        """

        self._id = id

    @property
    def image_url(self):
        """Gets the image_url of this ServiceGroupViewModel.


        :return: The image_url of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ServiceGroupViewModel.


        :param image_url: The image_url of this ServiceGroupViewModel.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def is_deleted(self):
        """Gets the is_deleted of this ServiceGroupViewModel.


        :return: The is_deleted of this ServiceGroupViewModel.
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this ServiceGroupViewModel.


        :param is_deleted: The is_deleted of this ServiceGroupViewModel.
        :type is_deleted: bool
        """

        self._is_deleted = is_deleted

    @property
    def location_id(self):
        """Gets the location_id of this ServiceGroupViewModel.


        :return: The location_id of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ServiceGroupViewModel.


        :param location_id: The location_id of this ServiceGroupViewModel.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def name(self):
        """Gets the name of this ServiceGroupViewModel.


        :return: The name of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceGroupViewModel.


        :param name: The name of this ServiceGroupViewModel.
        :type name: str
        """

        self._name = name

    @property
    def object(self):
        """Gets the object of this ServiceGroupViewModel.


        :return: The object of this ServiceGroupViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ServiceGroupViewModel.


        :param object: The object of this ServiceGroupViewModel.
        :type object: str
        """

        self._object = object

    @property
    def type(self):
        """Gets the type of this ServiceGroupViewModel.


        :return: The type of this ServiceGroupViewModel.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServiceGroupViewModel.


        :param type: The type of this ServiceGroupViewModel.
        :type type: int
        """

        self._type = type
