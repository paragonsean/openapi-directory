# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.available_day_view_model import AvailableDayViewModel
from openapi_server.models.available_time_view_model import AvailableTimeViewModel
from openapi_server import util


class AvailabilityViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_days: List[AvailableDayViewModel]=None, available_times: List[AvailableTimeViewModel]=None, business_name: str=None, calendar_id: str=None, calendar_resource_group_id: str=None, end_date: str=None, first_available_date: str=None, location_id: str=None, object: str=None, resource_description: str=None, resource_id: str=None, resource_ids: str=None, resource_name: str=None, service_description: str=None, service_duration: int=None, service_id: str=None, service_name: str=None, start_date: str=None, timezone_name: str=None, tz_requested: int=None, url: str=None):
        """AvailabilityViewModel - a model defined in OpenAPI

        :param available_days: The available_days of this AvailabilityViewModel.
        :param available_times: The available_times of this AvailabilityViewModel.
        :param business_name: The business_name of this AvailabilityViewModel.
        :param calendar_id: The calendar_id of this AvailabilityViewModel.
        :param calendar_resource_group_id: The calendar_resource_group_id of this AvailabilityViewModel.
        :param end_date: The end_date of this AvailabilityViewModel.
        :param first_available_date: The first_available_date of this AvailabilityViewModel.
        :param location_id: The location_id of this AvailabilityViewModel.
        :param object: The object of this AvailabilityViewModel.
        :param resource_description: The resource_description of this AvailabilityViewModel.
        :param resource_id: The resource_id of this AvailabilityViewModel.
        :param resource_ids: The resource_ids of this AvailabilityViewModel.
        :param resource_name: The resource_name of this AvailabilityViewModel.
        :param service_description: The service_description of this AvailabilityViewModel.
        :param service_duration: The service_duration of this AvailabilityViewModel.
        :param service_id: The service_id of this AvailabilityViewModel.
        :param service_name: The service_name of this AvailabilityViewModel.
        :param start_date: The start_date of this AvailabilityViewModel.
        :param timezone_name: The timezone_name of this AvailabilityViewModel.
        :param tz_requested: The tz_requested of this AvailabilityViewModel.
        :param url: The url of this AvailabilityViewModel.
        """
        self.openapi_types = {
            'available_days': List[AvailableDayViewModel],
            'available_times': List[AvailableTimeViewModel],
            'business_name': str,
            'calendar_id': str,
            'calendar_resource_group_id': str,
            'end_date': str,
            'first_available_date': str,
            'location_id': str,
            'object': str,
            'resource_description': str,
            'resource_id': str,
            'resource_ids': str,
            'resource_name': str,
            'service_description': str,
            'service_duration': int,
            'service_id': str,
            'service_name': str,
            'start_date': str,
            'timezone_name': str,
            'tz_requested': int,
            'url': str
        }

        self.attribute_map = {
            'available_days': 'availableDays',
            'available_times': 'availableTimes',
            'business_name': 'businessName',
            'calendar_id': 'calendarId',
            'calendar_resource_group_id': 'calendarResourceGroupId',
            'end_date': 'endDate',
            'first_available_date': 'firstAvailableDate',
            'location_id': 'locationId',
            'object': 'object',
            'resource_description': 'resourceDescription',
            'resource_id': 'resourceId',
            'resource_ids': 'resourceIds',
            'resource_name': 'resourceName',
            'service_description': 'serviceDescription',
            'service_duration': 'serviceDuration',
            'service_id': 'serviceId',
            'service_name': 'serviceName',
            'start_date': 'startDate',
            'timezone_name': 'timezoneName',
            'tz_requested': 'tzRequested',
            'url': 'url'
        }

        self._available_days = available_days
        self._available_times = available_times
        self._business_name = business_name
        self._calendar_id = calendar_id
        self._calendar_resource_group_id = calendar_resource_group_id
        self._end_date = end_date
        self._first_available_date = first_available_date
        self._location_id = location_id
        self._object = object
        self._resource_description = resource_description
        self._resource_id = resource_id
        self._resource_ids = resource_ids
        self._resource_name = resource_name
        self._service_description = service_description
        self._service_duration = service_duration
        self._service_id = service_id
        self._service_name = service_name
        self._start_date = start_date
        self._timezone_name = timezone_name
        self._tz_requested = tz_requested
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailabilityViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailabilityViewModel of this AvailabilityViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_days(self):
        """Gets the available_days of this AvailabilityViewModel.


        :return: The available_days of this AvailabilityViewModel.
        :rtype: List[AvailableDayViewModel]
        """
        return self._available_days

    @available_days.setter
    def available_days(self, available_days):
        """Sets the available_days of this AvailabilityViewModel.


        :param available_days: The available_days of this AvailabilityViewModel.
        :type available_days: List[AvailableDayViewModel]
        """

        self._available_days = available_days

    @property
    def available_times(self):
        """Gets the available_times of this AvailabilityViewModel.


        :return: The available_times of this AvailabilityViewModel.
        :rtype: List[AvailableTimeViewModel]
        """
        return self._available_times

    @available_times.setter
    def available_times(self, available_times):
        """Sets the available_times of this AvailabilityViewModel.


        :param available_times: The available_times of this AvailabilityViewModel.
        :type available_times: List[AvailableTimeViewModel]
        """

        self._available_times = available_times

    @property
    def business_name(self):
        """Gets the business_name of this AvailabilityViewModel.


        :return: The business_name of this AvailabilityViewModel.
        :rtype: str
        """
        return self._business_name

    @business_name.setter
    def business_name(self, business_name):
        """Sets the business_name of this AvailabilityViewModel.


        :param business_name: The business_name of this AvailabilityViewModel.
        :type business_name: str
        """

        self._business_name = business_name

    @property
    def calendar_id(self):
        """Gets the calendar_id of this AvailabilityViewModel.


        :return: The calendar_id of this AvailabilityViewModel.
        :rtype: str
        """
        return self._calendar_id

    @calendar_id.setter
    def calendar_id(self, calendar_id):
        """Sets the calendar_id of this AvailabilityViewModel.


        :param calendar_id: The calendar_id of this AvailabilityViewModel.
        :type calendar_id: str
        """

        self._calendar_id = calendar_id

    @property
    def calendar_resource_group_id(self):
        """Gets the calendar_resource_group_id of this AvailabilityViewModel.


        :return: The calendar_resource_group_id of this AvailabilityViewModel.
        :rtype: str
        """
        return self._calendar_resource_group_id

    @calendar_resource_group_id.setter
    def calendar_resource_group_id(self, calendar_resource_group_id):
        """Sets the calendar_resource_group_id of this AvailabilityViewModel.


        :param calendar_resource_group_id: The calendar_resource_group_id of this AvailabilityViewModel.
        :type calendar_resource_group_id: str
        """

        self._calendar_resource_group_id = calendar_resource_group_id

    @property
    def end_date(self):
        """Gets the end_date of this AvailabilityViewModel.


        :return: The end_date of this AvailabilityViewModel.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this AvailabilityViewModel.


        :param end_date: The end_date of this AvailabilityViewModel.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def first_available_date(self):
        """Gets the first_available_date of this AvailabilityViewModel.


        :return: The first_available_date of this AvailabilityViewModel.
        :rtype: str
        """
        return self._first_available_date

    @first_available_date.setter
    def first_available_date(self, first_available_date):
        """Sets the first_available_date of this AvailabilityViewModel.


        :param first_available_date: The first_available_date of this AvailabilityViewModel.
        :type first_available_date: str
        """

        self._first_available_date = first_available_date

    @property
    def location_id(self):
        """Gets the location_id of this AvailabilityViewModel.


        :return: The location_id of this AvailabilityViewModel.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this AvailabilityViewModel.


        :param location_id: The location_id of this AvailabilityViewModel.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def object(self):
        """Gets the object of this AvailabilityViewModel.


        :return: The object of this AvailabilityViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this AvailabilityViewModel.


        :param object: The object of this AvailabilityViewModel.
        :type object: str
        """

        self._object = object

    @property
    def resource_description(self):
        """Gets the resource_description of this AvailabilityViewModel.


        :return: The resource_description of this AvailabilityViewModel.
        :rtype: str
        """
        return self._resource_description

    @resource_description.setter
    def resource_description(self, resource_description):
        """Sets the resource_description of this AvailabilityViewModel.


        :param resource_description: The resource_description of this AvailabilityViewModel.
        :type resource_description: str
        """

        self._resource_description = resource_description

    @property
    def resource_id(self):
        """Gets the resource_id of this AvailabilityViewModel.


        :return: The resource_id of this AvailabilityViewModel.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this AvailabilityViewModel.


        :param resource_id: The resource_id of this AvailabilityViewModel.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_ids(self):
        """Gets the resource_ids of this AvailabilityViewModel.


        :return: The resource_ids of this AvailabilityViewModel.
        :rtype: str
        """
        return self._resource_ids

    @resource_ids.setter
    def resource_ids(self, resource_ids):
        """Sets the resource_ids of this AvailabilityViewModel.


        :param resource_ids: The resource_ids of this AvailabilityViewModel.
        :type resource_ids: str
        """

        self._resource_ids = resource_ids

    @property
    def resource_name(self):
        """Gets the resource_name of this AvailabilityViewModel.


        :return: The resource_name of this AvailabilityViewModel.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this AvailabilityViewModel.


        :param resource_name: The resource_name of this AvailabilityViewModel.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def service_description(self):
        """Gets the service_description of this AvailabilityViewModel.


        :return: The service_description of this AvailabilityViewModel.
        :rtype: str
        """
        return self._service_description

    @service_description.setter
    def service_description(self, service_description):
        """Sets the service_description of this AvailabilityViewModel.


        :param service_description: The service_description of this AvailabilityViewModel.
        :type service_description: str
        """

        self._service_description = service_description

    @property
    def service_duration(self):
        """Gets the service_duration of this AvailabilityViewModel.


        :return: The service_duration of this AvailabilityViewModel.
        :rtype: int
        """
        return self._service_duration

    @service_duration.setter
    def service_duration(self, service_duration):
        """Sets the service_duration of this AvailabilityViewModel.


        :param service_duration: The service_duration of this AvailabilityViewModel.
        :type service_duration: int
        """

        self._service_duration = service_duration

    @property
    def service_id(self):
        """Gets the service_id of this AvailabilityViewModel.


        :return: The service_id of this AvailabilityViewModel.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this AvailabilityViewModel.


        :param service_id: The service_id of this AvailabilityViewModel.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_name(self):
        """Gets the service_name of this AvailabilityViewModel.


        :return: The service_name of this AvailabilityViewModel.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this AvailabilityViewModel.


        :param service_name: The service_name of this AvailabilityViewModel.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def start_date(self):
        """Gets the start_date of this AvailabilityViewModel.


        :return: The start_date of this AvailabilityViewModel.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this AvailabilityViewModel.


        :param start_date: The start_date of this AvailabilityViewModel.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def timezone_name(self):
        """Gets the timezone_name of this AvailabilityViewModel.

        Returns the Timezone Name in IANA format if a TimezoneName was passed into an Availability call; otherwise this property is hidden

        :return: The timezone_name of this AvailabilityViewModel.
        :rtype: str
        """
        return self._timezone_name

    @timezone_name.setter
    def timezone_name(self, timezone_name):
        """Sets the timezone_name of this AvailabilityViewModel.

        Returns the Timezone Name in IANA format if a TimezoneName was passed into an Availability call; otherwise this property is hidden

        :param timezone_name: The timezone_name of this AvailabilityViewModel.
        :type timezone_name: str
        """

        self._timezone_name = timezone_name

    @property
    def tz_requested(self):
        """Gets the tz_requested of this AvailabilityViewModel.

        Returns the timezone offset if a tzOffset was supplied into an Availability call; null if a TimezoneName was passed; otherwise the Business timezone offset is returned

        :return: The tz_requested of this AvailabilityViewModel.
        :rtype: int
        """
        return self._tz_requested

    @tz_requested.setter
    def tz_requested(self, tz_requested):
        """Sets the tz_requested of this AvailabilityViewModel.

        Returns the timezone offset if a tzOffset was supplied into an Availability call; null if a TimezoneName was passed; otherwise the Business timezone offset is returned

        :param tz_requested: The tz_requested of this AvailabilityViewModel.
        :type tz_requested: int
        """

        self._tz_requested = tz_requested

    @property
    def url(self):
        """Gets the url of this AvailabilityViewModel.


        :return: The url of this AvailabilityViewModel.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AvailabilityViewModel.


        :param url: The url of this AvailabilityViewModel.
        :type url: str
        """

        self._url = url
