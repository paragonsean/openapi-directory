# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TravelViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distance: str=None, proximity: str=None, start_address: str=None, start_lat: str=None, start_lon: str=None, units: str=None):
        """TravelViewModel - a model defined in OpenAPI

        :param distance: The distance of this TravelViewModel.
        :param proximity: The proximity of this TravelViewModel.
        :param start_address: The start_address of this TravelViewModel.
        :param start_lat: The start_lat of this TravelViewModel.
        :param start_lon: The start_lon of this TravelViewModel.
        :param units: The units of this TravelViewModel.
        """
        self.openapi_types = {
            'distance': str,
            'proximity': str,
            'start_address': str,
            'start_lat': str,
            'start_lon': str,
            'units': str
        }

        self.attribute_map = {
            'distance': 'distance',
            'proximity': 'proximity',
            'start_address': 'startAddress',
            'start_lat': 'startLat',
            'start_lon': 'startLon',
            'units': 'units'
        }

        self._distance = distance
        self._proximity = proximity
        self._start_address = start_address
        self._start_lat = start_lat
        self._start_lon = start_lon
        self._units = units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TravelViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TravelViewModel of this TravelViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distance(self):
        """Gets the distance of this TravelViewModel.


        :return: The distance of this TravelViewModel.
        :rtype: str
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this TravelViewModel.


        :param distance: The distance of this TravelViewModel.
        :type distance: str
        """

        self._distance = distance

    @property
    def proximity(self):
        """Gets the proximity of this TravelViewModel.


        :return: The proximity of this TravelViewModel.
        :rtype: str
        """
        return self._proximity

    @proximity.setter
    def proximity(self, proximity):
        """Sets the proximity of this TravelViewModel.


        :param proximity: The proximity of this TravelViewModel.
        :type proximity: str
        """

        self._proximity = proximity

    @property
    def start_address(self):
        """Gets the start_address of this TravelViewModel.


        :return: The start_address of this TravelViewModel.
        :rtype: str
        """
        return self._start_address

    @start_address.setter
    def start_address(self, start_address):
        """Sets the start_address of this TravelViewModel.


        :param start_address: The start_address of this TravelViewModel.
        :type start_address: str
        """

        self._start_address = start_address

    @property
    def start_lat(self):
        """Gets the start_lat of this TravelViewModel.


        :return: The start_lat of this TravelViewModel.
        :rtype: str
        """
        return self._start_lat

    @start_lat.setter
    def start_lat(self, start_lat):
        """Sets the start_lat of this TravelViewModel.


        :param start_lat: The start_lat of this TravelViewModel.
        :type start_lat: str
        """

        self._start_lat = start_lat

    @property
    def start_lon(self):
        """Gets the start_lon of this TravelViewModel.


        :return: The start_lon of this TravelViewModel.
        :rtype: str
        """
        return self._start_lon

    @start_lon.setter
    def start_lon(self, start_lon):
        """Sets the start_lon of this TravelViewModel.


        :param start_lon: The start_lon of this TravelViewModel.
        :type start_lon: str
        """

        self._start_lon = start_lon

    @property
    def units(self):
        """Gets the units of this TravelViewModel.


        :return: The units of this TravelViewModel.
        :rtype: str
        """
        return self._units

    @units.setter
    def units(self, units):
        """Sets the units of this TravelViewModel.


        :param units: The units of this TravelViewModel.
        :type units: str
        """

        self._units = units
