/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFieldDefinitionListViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFieldDefinitionListViewModel::OAICustomFieldDefinitionListViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFieldDefinitionListViewModel::OAICustomFieldDefinitionListViewModel() {
    this->initializeModel();
}

OAICustomFieldDefinitionListViewModel::~OAICustomFieldDefinitionListViewModel() {}

void OAICustomFieldDefinitionListViewModel::initializeModel() {

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAICustomFieldDefinitionListViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFieldDefinitionListViewModel::fromJsonObject(QJsonObject json) {

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("customFields")]);
    m_custom_fields_isSet = !json[QString("customFields")].isNull() && m_custom_fields_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("object")]);
    m_object_isSet = !json[QString("object")].isNull() && m_object_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAICustomFieldDefinitionListViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFieldDefinitionListViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("customFields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_object_isSet) {
        obj.insert(QString("object"), ::OpenAPI::toJsonValue(m_object));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

QList<OAICustomFieldDefinitionViewModel> OAICustomFieldDefinitionListViewModel::getCustomFields() const {
    return m_custom_fields;
}
void OAICustomFieldDefinitionListViewModel::setCustomFields(const QList<OAICustomFieldDefinitionViewModel> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICustomFieldDefinitionListViewModel::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICustomFieldDefinitionListViewModel::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAICustomFieldDefinitionListViewModel::getObject() const {
    return m_object;
}
void OAICustomFieldDefinitionListViewModel::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAICustomFieldDefinitionListViewModel::is_object_Set() const{
    return m_object_isSet;
}

bool OAICustomFieldDefinitionListViewModel::is_object_Valid() const{
    return m_object_isValid;
}

qint32 OAICustomFieldDefinitionListViewModel::getTotal() const {
    return m_total;
}
void OAICustomFieldDefinitionListViewModel::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAICustomFieldDefinitionListViewModel::is_total_Set() const{
    return m_total_isSet;
}

bool OAICustomFieldDefinitionListViewModel::is_total_Valid() const{
    return m_total_isValid;
}

bool OAICustomFieldDefinitionListViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFieldDefinitionListViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
