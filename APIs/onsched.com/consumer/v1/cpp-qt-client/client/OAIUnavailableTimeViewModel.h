/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUnavailableTimeViewModel.h
 *
 * 
 */

#ifndef OAIUnavailableTimeViewModel_H
#define OAIUnavailableTimeViewModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUnavailableTimeViewModel : public OAIObject {
public:
    OAIUnavailableTimeViewModel();
    OAIUnavailableTimeViewModel(QString json);
    ~OAIUnavailableTimeViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalendarId() const;
    void setCalendarId(const QString &calendar_id);
    bool is_calendar_id_Set() const;
    bool is_calendar_id_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getEndDateTime() const;
    void setEndDateTime(const QString &end_date_time);
    bool is_end_date_time_Set() const;
    bool is_end_date_time_Valid() const;

    qint32 getEntityId() const;
    void setEntityId(const qint32 &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    QString getEntityType() const;
    void setEntityType(const QString &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    qint32 getFromTime() const;
    void setFromTime(const qint32 &from_time);
    bool is_from_time_Set() const;
    bool is_from_time_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getObjectName() const;
    void setObjectName(const QString &object_name);
    bool is_object_name_Set() const;
    bool is_object_name_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getReasonCode() const;
    void setReasonCode(const QString &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    QString getStartDateTime() const;
    void setStartDateTime(const QString &start_date_time);
    bool is_start_date_time_Set() const;
    bool is_start_date_time_Valid() const;

    qint32 getToTime() const;
    void setToTime(const qint32 &to_time);
    bool is_to_time_Set() const;
    bool is_to_time_Valid() const;

    qint32 getTzOffset() const;
    void setTzOffset(const qint32 &tz_offset);
    bool is_tz_offset_Set() const;
    bool is_tz_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calendar_id;
    bool m_calendar_id_isSet;
    bool m_calendar_id_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_end_date_time;
    bool m_end_date_time_isSet;
    bool m_end_date_time_isValid;

    qint32 m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    QString m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    qint32 m_from_time;
    bool m_from_time_isSet;
    bool m_from_time_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_object_name;
    bool m_object_name_isSet;
    bool m_object_name_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    QString m_start_date_time;
    bool m_start_date_time_isSet;
    bool m_start_date_time_isValid;

    qint32 m_to_time;
    bool m_to_time_isSet;
    bool m_to_time_isValid;

    qint32 m_tz_offset;
    bool m_tz_offset_isSet;
    bool m_tz_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUnavailableTimeViewModel)

#endif // OAIUnavailableTimeViewModel_H
