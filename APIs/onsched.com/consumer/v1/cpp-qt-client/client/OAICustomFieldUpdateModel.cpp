/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFieldUpdateModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFieldUpdateModel::OAICustomFieldUpdateModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFieldUpdateModel::OAICustomFieldUpdateModel() {
    this->initializeModel();
}

OAICustomFieldUpdateModel::~OAICustomFieldUpdateModel() {}

void OAICustomFieldUpdateModel::initializeModel() {

    m_field1_isSet = false;
    m_field1_isValid = false;

    m_field10_isSet = false;
    m_field10_isValid = false;

    m_field2_isSet = false;
    m_field2_isValid = false;

    m_field3_isSet = false;
    m_field3_isValid = false;

    m_field4_isSet = false;
    m_field4_isValid = false;

    m_field5_isSet = false;
    m_field5_isValid = false;

    m_field6_isSet = false;
    m_field6_isValid = false;

    m_field7_isSet = false;
    m_field7_isValid = false;

    m_field8_isSet = false;
    m_field8_isValid = false;

    m_field9_isSet = false;
    m_field9_isValid = false;
}

void OAICustomFieldUpdateModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFieldUpdateModel::fromJsonObject(QJsonObject json) {

    m_field1_isValid = ::OpenAPI::fromJsonValue(m_field1, json[QString("field1")]);
    m_field1_isSet = !json[QString("field1")].isNull() && m_field1_isValid;

    m_field10_isValid = ::OpenAPI::fromJsonValue(m_field10, json[QString("field10")]);
    m_field10_isSet = !json[QString("field10")].isNull() && m_field10_isValid;

    m_field2_isValid = ::OpenAPI::fromJsonValue(m_field2, json[QString("field2")]);
    m_field2_isSet = !json[QString("field2")].isNull() && m_field2_isValid;

    m_field3_isValid = ::OpenAPI::fromJsonValue(m_field3, json[QString("field3")]);
    m_field3_isSet = !json[QString("field3")].isNull() && m_field3_isValid;

    m_field4_isValid = ::OpenAPI::fromJsonValue(m_field4, json[QString("field4")]);
    m_field4_isSet = !json[QString("field4")].isNull() && m_field4_isValid;

    m_field5_isValid = ::OpenAPI::fromJsonValue(m_field5, json[QString("field5")]);
    m_field5_isSet = !json[QString("field5")].isNull() && m_field5_isValid;

    m_field6_isValid = ::OpenAPI::fromJsonValue(m_field6, json[QString("field6")]);
    m_field6_isSet = !json[QString("field6")].isNull() && m_field6_isValid;

    m_field7_isValid = ::OpenAPI::fromJsonValue(m_field7, json[QString("field7")]);
    m_field7_isSet = !json[QString("field7")].isNull() && m_field7_isValid;

    m_field8_isValid = ::OpenAPI::fromJsonValue(m_field8, json[QString("field8")]);
    m_field8_isSet = !json[QString("field8")].isNull() && m_field8_isValid;

    m_field9_isValid = ::OpenAPI::fromJsonValue(m_field9, json[QString("field9")]);
    m_field9_isSet = !json[QString("field9")].isNull() && m_field9_isValid;
}

QString OAICustomFieldUpdateModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFieldUpdateModel::asJsonObject() const {
    QJsonObject obj;
    if (m_field1_isSet) {
        obj.insert(QString("field1"), ::OpenAPI::toJsonValue(m_field1));
    }
    if (m_field10_isSet) {
        obj.insert(QString("field10"), ::OpenAPI::toJsonValue(m_field10));
    }
    if (m_field2_isSet) {
        obj.insert(QString("field2"), ::OpenAPI::toJsonValue(m_field2));
    }
    if (m_field3_isSet) {
        obj.insert(QString("field3"), ::OpenAPI::toJsonValue(m_field3));
    }
    if (m_field4_isSet) {
        obj.insert(QString("field4"), ::OpenAPI::toJsonValue(m_field4));
    }
    if (m_field5_isSet) {
        obj.insert(QString("field5"), ::OpenAPI::toJsonValue(m_field5));
    }
    if (m_field6_isSet) {
        obj.insert(QString("field6"), ::OpenAPI::toJsonValue(m_field6));
    }
    if (m_field7_isSet) {
        obj.insert(QString("field7"), ::OpenAPI::toJsonValue(m_field7));
    }
    if (m_field8_isSet) {
        obj.insert(QString("field8"), ::OpenAPI::toJsonValue(m_field8));
    }
    if (m_field9_isSet) {
        obj.insert(QString("field9"), ::OpenAPI::toJsonValue(m_field9));
    }
    return obj;
}

QString OAICustomFieldUpdateModel::getField1() const {
    return m_field1;
}
void OAICustomFieldUpdateModel::setField1(const QString &field1) {
    m_field1 = field1;
    m_field1_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field1_Set() const{
    return m_field1_isSet;
}

bool OAICustomFieldUpdateModel::is_field1_Valid() const{
    return m_field1_isValid;
}

QString OAICustomFieldUpdateModel::getField10() const {
    return m_field10;
}
void OAICustomFieldUpdateModel::setField10(const QString &field10) {
    m_field10 = field10;
    m_field10_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field10_Set() const{
    return m_field10_isSet;
}

bool OAICustomFieldUpdateModel::is_field10_Valid() const{
    return m_field10_isValid;
}

QString OAICustomFieldUpdateModel::getField2() const {
    return m_field2;
}
void OAICustomFieldUpdateModel::setField2(const QString &field2) {
    m_field2 = field2;
    m_field2_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field2_Set() const{
    return m_field2_isSet;
}

bool OAICustomFieldUpdateModel::is_field2_Valid() const{
    return m_field2_isValid;
}

QString OAICustomFieldUpdateModel::getField3() const {
    return m_field3;
}
void OAICustomFieldUpdateModel::setField3(const QString &field3) {
    m_field3 = field3;
    m_field3_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field3_Set() const{
    return m_field3_isSet;
}

bool OAICustomFieldUpdateModel::is_field3_Valid() const{
    return m_field3_isValid;
}

QString OAICustomFieldUpdateModel::getField4() const {
    return m_field4;
}
void OAICustomFieldUpdateModel::setField4(const QString &field4) {
    m_field4 = field4;
    m_field4_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field4_Set() const{
    return m_field4_isSet;
}

bool OAICustomFieldUpdateModel::is_field4_Valid() const{
    return m_field4_isValid;
}

QString OAICustomFieldUpdateModel::getField5() const {
    return m_field5;
}
void OAICustomFieldUpdateModel::setField5(const QString &field5) {
    m_field5 = field5;
    m_field5_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field5_Set() const{
    return m_field5_isSet;
}

bool OAICustomFieldUpdateModel::is_field5_Valid() const{
    return m_field5_isValid;
}

QString OAICustomFieldUpdateModel::getField6() const {
    return m_field6;
}
void OAICustomFieldUpdateModel::setField6(const QString &field6) {
    m_field6 = field6;
    m_field6_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field6_Set() const{
    return m_field6_isSet;
}

bool OAICustomFieldUpdateModel::is_field6_Valid() const{
    return m_field6_isValid;
}

QString OAICustomFieldUpdateModel::getField7() const {
    return m_field7;
}
void OAICustomFieldUpdateModel::setField7(const QString &field7) {
    m_field7 = field7;
    m_field7_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field7_Set() const{
    return m_field7_isSet;
}

bool OAICustomFieldUpdateModel::is_field7_Valid() const{
    return m_field7_isValid;
}

QString OAICustomFieldUpdateModel::getField8() const {
    return m_field8;
}
void OAICustomFieldUpdateModel::setField8(const QString &field8) {
    m_field8 = field8;
    m_field8_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field8_Set() const{
    return m_field8_isSet;
}

bool OAICustomFieldUpdateModel::is_field8_Valid() const{
    return m_field8_isValid;
}

QString OAICustomFieldUpdateModel::getField9() const {
    return m_field9;
}
void OAICustomFieldUpdateModel::setField9(const QString &field9) {
    m_field9 = field9;
    m_field9_isSet = true;
}

bool OAICustomFieldUpdateModel::is_field9_Set() const{
    return m_field9_isSet;
}

bool OAICustomFieldUpdateModel::is_field9_Valid() const{
    return m_field9_isValid;
}

bool OAICustomFieldUpdateModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field10_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field6_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field7_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field8_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field9_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFieldUpdateModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
