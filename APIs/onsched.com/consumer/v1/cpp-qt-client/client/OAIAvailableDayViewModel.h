/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailableDayViewModel.h
 *
 * 
 */

#ifndef OAIAvailableDayViewModel_H
#define OAIAvailableDayViewModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAvailableDayViewModel : public OAIObject {
public:
    OAIAvailableDayViewModel();
    OAIAvailableDayViewModel(QString json);
    ~OAIAvailableDayViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAvailable() const;
    void setAvailable(const bool &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    qint32 getBookingCount() const;
    void setBookingCount(const qint32 &booking_count);
    bool is_booking_count_Set() const;
    bool is_booking_count_Valid() const;

    qint32 getBookingLimit() const;
    void setBookingLimit(const qint32 &booking_limit);
    bool is_booking_limit_Set() const;
    bool is_booking_limit_Valid() const;

    bool isClosed() const;
    void setClosed(const bool &closed);
    bool is_closed_Set() const;
    bool is_closed_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    qint32 getReasonCode() const;
    void setReasonCode(const qint32 &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    qint32 m_booking_count;
    bool m_booking_count_isSet;
    bool m_booking_count_isValid;

    qint32 m_booking_limit;
    bool m_booking_limit_isSet;
    bool m_booking_limit_isValid;

    bool m_closed;
    bool m_closed_isSet;
    bool m_closed_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    qint32 m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailableDayViewModel)

#endif // OAIAvailableDayViewModel_H
