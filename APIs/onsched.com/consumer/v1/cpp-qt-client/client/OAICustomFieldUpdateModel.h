/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomFieldUpdateModel.h
 *
 * 
 */

#ifndef OAICustomFieldUpdateModel_H
#define OAICustomFieldUpdateModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICustomFieldUpdateModel : public OAIObject {
public:
    OAICustomFieldUpdateModel();
    OAICustomFieldUpdateModel(QString json);
    ~OAICustomFieldUpdateModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getField1() const;
    void setField1(const QString &field1);
    bool is_field1_Set() const;
    bool is_field1_Valid() const;

    QString getField10() const;
    void setField10(const QString &field10);
    bool is_field10_Set() const;
    bool is_field10_Valid() const;

    QString getField2() const;
    void setField2(const QString &field2);
    bool is_field2_Set() const;
    bool is_field2_Valid() const;

    QString getField3() const;
    void setField3(const QString &field3);
    bool is_field3_Set() const;
    bool is_field3_Valid() const;

    QString getField4() const;
    void setField4(const QString &field4);
    bool is_field4_Set() const;
    bool is_field4_Valid() const;

    QString getField5() const;
    void setField5(const QString &field5);
    bool is_field5_Set() const;
    bool is_field5_Valid() const;

    QString getField6() const;
    void setField6(const QString &field6);
    bool is_field6_Set() const;
    bool is_field6_Valid() const;

    QString getField7() const;
    void setField7(const QString &field7);
    bool is_field7_Set() const;
    bool is_field7_Valid() const;

    QString getField8() const;
    void setField8(const QString &field8);
    bool is_field8_Set() const;
    bool is_field8_Valid() const;

    QString getField9() const;
    void setField9(const QString &field9);
    bool is_field9_Set() const;
    bool is_field9_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_field1;
    bool m_field1_isSet;
    bool m_field1_isValid;

    QString m_field10;
    bool m_field10_isSet;
    bool m_field10_isValid;

    QString m_field2;
    bool m_field2_isSet;
    bool m_field2_isValid;

    QString m_field3;
    bool m_field3_isSet;
    bool m_field3_isValid;

    QString m_field4;
    bool m_field4_isSet;
    bool m_field4_isValid;

    QString m_field5;
    bool m_field5_isSet;
    bool m_field5_isValid;

    QString m_field6;
    bool m_field6_isSet;
    bool m_field6_isValid;

    QString m_field7;
    bool m_field7_isSet;
    bool m_field7_isValid;

    QString m_field8;
    bool m_field8_isSet;
    bool m_field8_isValid;

    QString m_field9;
    bool m_field9_isSet;
    bool m_field9_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomFieldUpdateModel)

#endif // OAICustomFieldUpdateModel_H
