/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceGroupViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceGroupViewModel::OAIServiceGroupViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceGroupViewModel::OAIServiceGroupViewModel() {
    this->initializeModel();
}

OAIServiceGroupViewModel::~OAIServiceGroupViewModel() {}

void OAIServiceGroupViewModel::initializeModel() {

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_is_deleted_isSet = false;
    m_is_deleted_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIServiceGroupViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceGroupViewModel::fromJsonObject(QJsonObject json) {

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("imageUrl")]);
    m_image_url_isSet = !json[QString("imageUrl")].isNull() && m_image_url_isValid;

    m_is_deleted_isValid = ::OpenAPI::fromJsonValue(m_is_deleted, json[QString("isDeleted")]);
    m_is_deleted_isSet = !json[QString("isDeleted")].isNull() && m_is_deleted_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("object")]);
    m_object_isSet = !json[QString("object")].isNull() && m_object_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIServiceGroupViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceGroupViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("imageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_is_deleted_isSet) {
        obj.insert(QString("isDeleted"), ::OpenAPI::toJsonValue(m_is_deleted));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_object_isSet) {
        obj.insert(QString("object"), ::OpenAPI::toJsonValue(m_object));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIServiceGroupViewModel::getCompanyId() const {
    return m_company_id;
}
void OAIServiceGroupViewModel::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAIServiceGroupViewModel::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAIServiceGroupViewModel::is_company_id_Valid() const{
    return m_company_id_isValid;
}

QString OAIServiceGroupViewModel::getDescription() const {
    return m_description;
}
void OAIServiceGroupViewModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIServiceGroupViewModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIServiceGroupViewModel::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIServiceGroupViewModel::getId() const {
    return m_id;
}
void OAIServiceGroupViewModel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServiceGroupViewModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServiceGroupViewModel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIServiceGroupViewModel::getImageUrl() const {
    return m_image_url;
}
void OAIServiceGroupViewModel::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIServiceGroupViewModel::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIServiceGroupViewModel::is_image_url_Valid() const{
    return m_image_url_isValid;
}

bool OAIServiceGroupViewModel::isIsDeleted() const {
    return m_is_deleted;
}
void OAIServiceGroupViewModel::setIsDeleted(const bool &is_deleted) {
    m_is_deleted = is_deleted;
    m_is_deleted_isSet = true;
}

bool OAIServiceGroupViewModel::is_is_deleted_Set() const{
    return m_is_deleted_isSet;
}

bool OAIServiceGroupViewModel::is_is_deleted_Valid() const{
    return m_is_deleted_isValid;
}

QString OAIServiceGroupViewModel::getLocationId() const {
    return m_location_id;
}
void OAIServiceGroupViewModel::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIServiceGroupViewModel::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIServiceGroupViewModel::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAIServiceGroupViewModel::getName() const {
    return m_name;
}
void OAIServiceGroupViewModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIServiceGroupViewModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIServiceGroupViewModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIServiceGroupViewModel::getObject() const {
    return m_object;
}
void OAIServiceGroupViewModel::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAIServiceGroupViewModel::is_object_Set() const{
    return m_object_isSet;
}

bool OAIServiceGroupViewModel::is_object_Valid() const{
    return m_object_isValid;
}

qint32 OAIServiceGroupViewModel::getType() const {
    return m_type;
}
void OAIServiceGroupViewModel::setType(const qint32 &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIServiceGroupViewModel::is_type_Set() const{
    return m_type_isSet;
}

bool OAIServiceGroupViewModel::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIServiceGroupViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceGroupViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
