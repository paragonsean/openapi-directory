/**
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailabilityViewModel.h
 *
 * 
 */

#ifndef OAIAvailabilityViewModel_H
#define OAIAvailabilityViewModel_H

#include <QJsonObject>

#include "OAIAvailableDayViewModel.h"
#include "OAIAvailableTimeViewModel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvailableDayViewModel;
class OAIAvailableTimeViewModel;

class OAIAvailabilityViewModel : public OAIObject {
public:
    OAIAvailabilityViewModel();
    OAIAvailabilityViewModel(QString json);
    ~OAIAvailabilityViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAvailableDayViewModel> getAvailableDays() const;
    void setAvailableDays(const QList<OAIAvailableDayViewModel> &available_days);
    bool is_available_days_Set() const;
    bool is_available_days_Valid() const;

    QList<OAIAvailableTimeViewModel> getAvailableTimes() const;
    void setAvailableTimes(const QList<OAIAvailableTimeViewModel> &available_times);
    bool is_available_times_Set() const;
    bool is_available_times_Valid() const;

    QString getBusinessName() const;
    void setBusinessName(const QString &business_name);
    bool is_business_name_Set() const;
    bool is_business_name_Valid() const;

    QString getCalendarId() const;
    void setCalendarId(const QString &calendar_id);
    bool is_calendar_id_Set() const;
    bool is_calendar_id_Valid() const;

    QString getCalendarResourceGroupId() const;
    void setCalendarResourceGroupId(const QString &calendar_resource_group_id);
    bool is_calendar_resource_group_id_Set() const;
    bool is_calendar_resource_group_id_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getFirstAvailableDate() const;
    void setFirstAvailableDate(const QString &first_available_date);
    bool is_first_available_date_Set() const;
    bool is_first_available_date_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getResourceDescription() const;
    void setResourceDescription(const QString &resource_description);
    bool is_resource_description_Set() const;
    bool is_resource_description_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getResourceIds() const;
    void setResourceIds(const QString &resource_ids);
    bool is_resource_ids_Set() const;
    bool is_resource_ids_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getServiceDescription() const;
    void setServiceDescription(const QString &service_description);
    bool is_service_description_Set() const;
    bool is_service_description_Valid() const;

    qint32 getServiceDuration() const;
    void setServiceDuration(const qint32 &service_duration);
    bool is_service_duration_Set() const;
    bool is_service_duration_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getTimezoneName() const;
    void setTimezoneName(const QString &timezone_name);
    bool is_timezone_name_Set() const;
    bool is_timezone_name_Valid() const;

    qint32 getTzRequested() const;
    void setTzRequested(const qint32 &tz_requested);
    bool is_tz_requested_Set() const;
    bool is_tz_requested_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAvailableDayViewModel> m_available_days;
    bool m_available_days_isSet;
    bool m_available_days_isValid;

    QList<OAIAvailableTimeViewModel> m_available_times;
    bool m_available_times_isSet;
    bool m_available_times_isValid;

    QString m_business_name;
    bool m_business_name_isSet;
    bool m_business_name_isValid;

    QString m_calendar_id;
    bool m_calendar_id_isSet;
    bool m_calendar_id_isValid;

    QString m_calendar_resource_group_id;
    bool m_calendar_resource_group_id_isSet;
    bool m_calendar_resource_group_id_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_first_available_date;
    bool m_first_available_date_isSet;
    bool m_first_available_date_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_resource_description;
    bool m_resource_description_isSet;
    bool m_resource_description_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_resource_ids;
    bool m_resource_ids_isSet;
    bool m_resource_ids_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_service_description;
    bool m_service_description_isSet;
    bool m_service_description_isValid;

    qint32 m_service_duration;
    bool m_service_duration_isSet;
    bool m_service_duration_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_timezone_name;
    bool m_timezone_name_isSet;
    bool m_timezone_name_isValid;

    qint32 m_tz_requested;
    bool m_tz_requested_isSet;
    bool m_tz_requested_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailabilityViewModel)

#endif // OAIAvailabilityViewModel_H
