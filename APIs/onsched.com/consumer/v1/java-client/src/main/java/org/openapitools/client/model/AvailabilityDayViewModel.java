/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AvailableDayViewModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AvailabilityDayViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:57.922898-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AvailabilityDayViewModel {
  public static final String SERIALIZED_NAME_AVAILABLE_DAYS = "availableDays";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_DAYS)
  private List<AvailableDayViewModel> availableDays;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object;

  public static final String SERIALIZED_NAME_RESOURCE_DESCRIPTION = "resourceDescription";
  @SerializedName(SERIALIZED_NAME_RESOURCE_DESCRIPTION)
  private String resourceDescription;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_SERVICE_DESCRIPTION = "serviceDescription";
  @SerializedName(SERIALIZED_NAME_SERVICE_DESCRIPTION)
  private String serviceDescription;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_TZ_REQUESTED = "tzRequested";
  @SerializedName(SERIALIZED_NAME_TZ_REQUESTED)
  private Integer tzRequested;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public AvailabilityDayViewModel() {
  }

  public AvailabilityDayViewModel availableDays(List<AvailableDayViewModel> availableDays) {
    this.availableDays = availableDays;
    return this;
  }

  public AvailabilityDayViewModel addAvailableDaysItem(AvailableDayViewModel availableDaysItem) {
    if (this.availableDays == null) {
      this.availableDays = new ArrayList<>();
    }
    this.availableDays.add(availableDaysItem);
    return this;
  }

  /**
   * Get availableDays
   * @return availableDays
   */
  @javax.annotation.Nullable
  public List<AvailableDayViewModel> getAvailableDays() {
    return availableDays;
  }

  public void setAvailableDays(List<AvailableDayViewModel> availableDays) {
    this.availableDays = availableDays;
  }


  public AvailabilityDayViewModel _object(String _object) {
    this._object = _object;
    return this;
  }

  /**
   * Get _object
   * @return _object
   */
  @javax.annotation.Nullable
  public String getObject() {
    return _object;
  }

  public void setObject(String _object) {
    this._object = _object;
  }


  public AvailabilityDayViewModel resourceDescription(String resourceDescription) {
    this.resourceDescription = resourceDescription;
    return this;
  }

  /**
   * Get resourceDescription
   * @return resourceDescription
   */
  @javax.annotation.Nullable
  public String getResourceDescription() {
    return resourceDescription;
  }

  public void setResourceDescription(String resourceDescription) {
    this.resourceDescription = resourceDescription;
  }


  public AvailabilityDayViewModel resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public AvailabilityDayViewModel resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public AvailabilityDayViewModel serviceDescription(String serviceDescription) {
    this.serviceDescription = serviceDescription;
    return this;
  }

  /**
   * Get serviceDescription
   * @return serviceDescription
   */
  @javax.annotation.Nullable
  public String getServiceDescription() {
    return serviceDescription;
  }

  public void setServiceDescription(String serviceDescription) {
    this.serviceDescription = serviceDescription;
  }


  public AvailabilityDayViewModel serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public AvailabilityDayViewModel serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public AvailabilityDayViewModel tzRequested(Integer tzRequested) {
    this.tzRequested = tzRequested;
    return this;
  }

  /**
   * Get tzRequested
   * @return tzRequested
   */
  @javax.annotation.Nullable
  public Integer getTzRequested() {
    return tzRequested;
  }

  public void setTzRequested(Integer tzRequested) {
    this.tzRequested = tzRequested;
  }


  public AvailabilityDayViewModel url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailabilityDayViewModel availabilityDayViewModel = (AvailabilityDayViewModel) o;
    return Objects.equals(this.availableDays, availabilityDayViewModel.availableDays) &&
        Objects.equals(this._object, availabilityDayViewModel._object) &&
        Objects.equals(this.resourceDescription, availabilityDayViewModel.resourceDescription) &&
        Objects.equals(this.resourceId, availabilityDayViewModel.resourceId) &&
        Objects.equals(this.resourceName, availabilityDayViewModel.resourceName) &&
        Objects.equals(this.serviceDescription, availabilityDayViewModel.serviceDescription) &&
        Objects.equals(this.serviceId, availabilityDayViewModel.serviceId) &&
        Objects.equals(this.serviceName, availabilityDayViewModel.serviceName) &&
        Objects.equals(this.tzRequested, availabilityDayViewModel.tzRequested) &&
        Objects.equals(this.url, availabilityDayViewModel.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableDays, _object, resourceDescription, resourceId, resourceName, serviceDescription, serviceId, serviceName, tzRequested, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailabilityDayViewModel {\n");
    sb.append("    availableDays: ").append(toIndentedString(availableDays)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    resourceDescription: ").append(toIndentedString(resourceDescription)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    serviceDescription: ").append(toIndentedString(serviceDescription)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    tzRequested: ").append(toIndentedString(tzRequested)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availableDays");
    openapiFields.add("object");
    openapiFields.add("resourceDescription");
    openapiFields.add("resourceId");
    openapiFields.add("resourceName");
    openapiFields.add("serviceDescription");
    openapiFields.add("serviceId");
    openapiFields.add("serviceName");
    openapiFields.add("tzRequested");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AvailabilityDayViewModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AvailabilityDayViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AvailabilityDayViewModel is not found in the empty JSON string", AvailabilityDayViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AvailabilityDayViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AvailabilityDayViewModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("availableDays") != null && !jsonObj.get("availableDays").isJsonNull()) {
        JsonArray jsonArrayavailableDays = jsonObj.getAsJsonArray("availableDays");
        if (jsonArrayavailableDays != null) {
          // ensure the json data is an array
          if (!jsonObj.get("availableDays").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `availableDays` to be an array in the JSON string but got `%s`", jsonObj.get("availableDays").toString()));
          }

          // validate the optional field `availableDays` (array)
          for (int i = 0; i < jsonArrayavailableDays.size(); i++) {
            AvailableDayViewModel.validateJsonElement(jsonArrayavailableDays.get(i));
          };
        }
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if ((jsonObj.get("resourceDescription") != null && !jsonObj.get("resourceDescription").isJsonNull()) && !jsonObj.get("resourceDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceDescription").toString()));
      }
      if ((jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) && !jsonObj.get("resourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceId").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("serviceDescription") != null && !jsonObj.get("serviceDescription").isJsonNull()) && !jsonObj.get("serviceDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceDescription").toString()));
      }
      if ((jsonObj.get("serviceId") != null && !jsonObj.get("serviceId").isJsonNull()) && !jsonObj.get("serviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceId").toString()));
      }
      if ((jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) && !jsonObj.get("serviceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceName").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AvailabilityDayViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AvailabilityDayViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AvailabilityDayViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AvailabilityDayViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AvailabilityDayViewModel>() {
           @Override
           public void write(JsonWriter out, AvailabilityDayViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AvailabilityDayViewModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AvailabilityDayViewModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AvailabilityDayViewModel
   * @throws IOException if the JSON string is invalid with respect to AvailabilityDayViewModel
   */
  public static AvailabilityDayViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AvailabilityDayViewModel.class);
  }

  /**
   * Convert an instance of AvailabilityDayViewModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

