/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AppointmentAuditViewModel;
import org.openapitools.client.model.AppointmentCustomerViewModel;
import org.openapitools.client.model.AppointmentResourceViewModel;
import org.openapitools.client.model.CustomFieldViewModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppointmentViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:57.922898-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppointmentViewModel {
  public static final String SERIALIZED_NAME_AUDIT_TRAIL = "auditTrail";
  @SerializedName(SERIALIZED_NAME_AUDIT_TRAIL)
  private List<AppointmentAuditViewModel> auditTrail;

  public static final String SERIALIZED_NAME_BOOKED_BY = "bookedBy";
  @SerializedName(SERIALIZED_NAME_BOOKED_BY)
  private String bookedBy;

  public static final String SERIALIZED_NAME_BUSINESS_NAME = "businessName";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NAME)
  private String businessName;

  public static final String SERIALIZED_NAME_CALENDAR_ID = "calendarId";
  @SerializedName(SERIALIZED_NAME_CALENDAR_ID)
  private String calendarId;

  public static final String SERIALIZED_NAME_CONFIRMATION_NUMBER = "confirmationNumber";
  @SerializedName(SERIALIZED_NAME_CONFIRMATION_NUMBER)
  private String confirmationNumber;

  public static final String SERIALIZED_NAME_CONFIRMED = "confirmed";
  @SerializedName(SERIALIZED_NAME_CONFIRMED)
  private Boolean confirmed;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private String createDate;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Map<String, CustomFieldViewModel> customFields;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_CUSTOMER_MESSAGE = "customerMessage";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_MESSAGE)
  private String customerMessage;

  public static final String SERIALIZED_NAME_CUSTOMERS = "customers";
  @SerializedName(SERIALIZED_NAME_CUSTOMERS)
  private List<AppointmentCustomerViewModel> customers;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_DATE_INTERNATIONAL = "dateInternational";
  @SerializedName(SERIALIZED_NAME_DATE_INTERNATIONAL)
  private String dateInternational;

  public static final String SERIALIZED_NAME_DOWNLOAD_ICS_URL = "downloadIcsUrl";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_ICS_URL)
  private String downloadIcsUrl;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMAIL_CONFIRMATION_SENT = "emailConfirmationSent";
  @SerializedName(SERIALIZED_NAME_EMAIL_CONFIRMATION_SENT)
  private String emailConfirmationSent;

  public static final String SERIALIZED_NAME_EMAIL_REMINDER_SENT = "emailReminderSent";
  @SerializedName(SERIALIZED_NAME_EMAIL_REMINDER_SENT)
  private String emailReminderSent;

  public static final String SERIALIZED_NAME_END_DATE_TIME = "endDateTime";
  @SerializedName(SERIALIZED_NAME_END_DATE_TIME)
  private String endDateTime;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_GROUP_SIZE = "groupSize";
  @SerializedName(SERIALIZED_NAME_GROUP_SIZE)
  private Integer groupSize;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "lastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_ON = "lastModifiedOn";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_ON)
  private String lastModifiedOn;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object;

  public static final String SERIALIZED_NAME_ONLINE_BOOKING = "onlineBooking";
  @SerializedName(SERIALIZED_NAME_ONLINE_BOOKING)
  private Boolean onlineBooking;

  public static final String SERIALIZED_NAME_PAYMENT_STATUS = "paymentStatus";
  @SerializedName(SERIALIZED_NAME_PAYMENT_STATUS)
  private Integer paymentStatus;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_PHONE_EXT = "phoneExt";
  @SerializedName(SERIALIZED_NAME_PHONE_EXT)
  private String phoneExt;

  public static final String SERIALIZED_NAME_PHONE_TYPE = "phoneType";
  @SerializedName(SERIALIZED_NAME_PHONE_TYPE)
  private String phoneType;

  public static final String SERIALIZED_NAME_RESCHEDULED_ID = "rescheduledId";
  @SerializedName(SERIALIZED_NAME_RESCHEDULED_ID)
  private String rescheduledId;

  public static final String SERIALIZED_NAME_RESOURCE_EMAIL = "resourceEmail";
  @SerializedName(SERIALIZED_NAME_RESOURCE_EMAIL)
  private String resourceEmail;

  public static final String SERIALIZED_NAME_RESOURCE_GROUP_ID = "resourceGroupId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP_ID)
  private String resourceGroupId;

  public static final String SERIALIZED_NAME_RESOURCE_GROUP_NAME = "resourceGroupName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP_NAME)
  private String resourceGroupName;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_IMAGE_URL = "resourceImageUrl";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IMAGE_URL)
  private String resourceImageUrl;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private List<AppointmentResourceViewModel> resources;

  public static final String SERIALIZED_NAME_SERVICE_ALLOCATION_ID = "serviceAllocationId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ALLOCATION_ID)
  private String serviceAllocationId;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_SERVICE_IMAGE_URL = "serviceImageUrl";
  @SerializedName(SERIALIZED_NAME_SERVICE_IMAGE_URL)
  private String serviceImageUrl;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_SMS_CONFIRMATION_SENT = "smsConfirmationSent";
  @SerializedName(SERIALIZED_NAME_SMS_CONFIRMATION_SENT)
  private String smsConfirmationSent;

  public static final String SERIALIZED_NAME_SMS_REMINDER_SENT = "smsReminderSent";
  @SerializedName(SERIALIZED_NAME_SMS_REMINDER_SENT)
  private String smsReminderSent;

  public static final String SERIALIZED_NAME_START_DATE_TIME = "startDateTime";
  @SerializedName(SERIALIZED_NAME_START_DATE_TIME)
  private String startDateTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STRIPE_CHARGE_ID = "stripeChargeId";
  @SerializedName(SERIALIZED_NAME_STRIPE_CHARGE_ID)
  private String stripeChargeId;

  public static final String SERIALIZED_NAME_STRIPE_REFUND_ID = "stripeRefundId";
  @SerializedName(SERIALIZED_NAME_STRIPE_REFUND_ID)
  private String stripeRefundId;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Integer time;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private Integer timezone;

  public static final String SERIALIZED_NAME_TIMEZONE_IANA = "timezoneIana";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_IANA)
  private String timezoneIana;

  public static final String SERIALIZED_NAME_TIMEZONE_ID = "timezoneId";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_ID)
  private String timezoneId;

  public AppointmentViewModel() {
  }

  public AppointmentViewModel auditTrail(List<AppointmentAuditViewModel> auditTrail) {
    this.auditTrail = auditTrail;
    return this;
  }

  public AppointmentViewModel addAuditTrailItem(AppointmentAuditViewModel auditTrailItem) {
    if (this.auditTrail == null) {
      this.auditTrail = new ArrayList<>();
    }
    this.auditTrail.add(auditTrailItem);
    return this;
  }

  /**
   * Get auditTrail
   * @return auditTrail
   */
  @javax.annotation.Nullable
  public List<AppointmentAuditViewModel> getAuditTrail() {
    return auditTrail;
  }

  public void setAuditTrail(List<AppointmentAuditViewModel> auditTrail) {
    this.auditTrail = auditTrail;
  }


  public AppointmentViewModel bookedBy(String bookedBy) {
    this.bookedBy = bookedBy;
    return this;
  }

  /**
   * Get bookedBy
   * @return bookedBy
   */
  @javax.annotation.Nullable
  public String getBookedBy() {
    return bookedBy;
  }

  public void setBookedBy(String bookedBy) {
    this.bookedBy = bookedBy;
  }


  public AppointmentViewModel businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

  /**
   * Get businessName
   * @return businessName
   */
  @javax.annotation.Nullable
  public String getBusinessName() {
    return businessName;
  }

  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }


  public AppointmentViewModel calendarId(String calendarId) {
    this.calendarId = calendarId;
    return this;
  }

  /**
   * Get calendarId
   * @return calendarId
   */
  @javax.annotation.Nullable
  public String getCalendarId() {
    return calendarId;
  }

  public void setCalendarId(String calendarId) {
    this.calendarId = calendarId;
  }


  public AppointmentViewModel confirmationNumber(String confirmationNumber) {
    this.confirmationNumber = confirmationNumber;
    return this;
  }

  /**
   * Get confirmationNumber
   * @return confirmationNumber
   */
  @javax.annotation.Nullable
  public String getConfirmationNumber() {
    return confirmationNumber;
  }

  public void setConfirmationNumber(String confirmationNumber) {
    this.confirmationNumber = confirmationNumber;
  }


  public AppointmentViewModel confirmed(Boolean confirmed) {
    this.confirmed = confirmed;
    return this;
  }

  /**
   * Get confirmed
   * @return confirmed
   */
  @javax.annotation.Nullable
  public Boolean getConfirmed() {
    return confirmed;
  }

  public void setConfirmed(Boolean confirmed) {
    this.confirmed = confirmed;
  }


  public AppointmentViewModel createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }


  public AppointmentViewModel customFields(Map<String, CustomFieldViewModel> customFields) {
    this.customFields = customFields;
    return this;
  }

  public AppointmentViewModel putCustomFieldsItem(String key, CustomFieldViewModel customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Map<String, CustomFieldViewModel> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Map<String, CustomFieldViewModel> customFields) {
    this.customFields = customFields;
  }


  public AppointmentViewModel customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * Get customerId
   * @return customerId
   */
  @javax.annotation.Nullable
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public AppointmentViewModel customerMessage(String customerMessage) {
    this.customerMessage = customerMessage;
    return this;
  }

  /**
   * Get customerMessage
   * @return customerMessage
   */
  @javax.annotation.Nullable
  public String getCustomerMessage() {
    return customerMessage;
  }

  public void setCustomerMessage(String customerMessage) {
    this.customerMessage = customerMessage;
  }


  public AppointmentViewModel customers(List<AppointmentCustomerViewModel> customers) {
    this.customers = customers;
    return this;
  }

  public AppointmentViewModel addCustomersItem(AppointmentCustomerViewModel customersItem) {
    if (this.customers == null) {
      this.customers = new ArrayList<>();
    }
    this.customers.add(customersItem);
    return this;
  }

  /**
   * Get customers
   * @return customers
   */
  @javax.annotation.Nullable
  public List<AppointmentCustomerViewModel> getCustomers() {
    return customers;
  }

  public void setCustomers(List<AppointmentCustomerViewModel> customers) {
    this.customers = customers;
  }


  public AppointmentViewModel date(String date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }


  public AppointmentViewModel dateInternational(String dateInternational) {
    this.dateInternational = dateInternational;
    return this;
  }

  /**
   * Get dateInternational
   * @return dateInternational
   */
  @javax.annotation.Nullable
  public String getDateInternational() {
    return dateInternational;
  }

  public void setDateInternational(String dateInternational) {
    this.dateInternational = dateInternational;
  }


  public AppointmentViewModel downloadIcsUrl(String downloadIcsUrl) {
    this.downloadIcsUrl = downloadIcsUrl;
    return this;
  }

  /**
   * Get downloadIcsUrl
   * @return downloadIcsUrl
   */
  @javax.annotation.Nullable
  public String getDownloadIcsUrl() {
    return downloadIcsUrl;
  }

  public void setDownloadIcsUrl(String downloadIcsUrl) {
    this.downloadIcsUrl = downloadIcsUrl;
  }


  public AppointmentViewModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public AppointmentViewModel email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public AppointmentViewModel emailConfirmationSent(String emailConfirmationSent) {
    this.emailConfirmationSent = emailConfirmationSent;
    return this;
  }

  /**
   * Get emailConfirmationSent
   * @return emailConfirmationSent
   */
  @javax.annotation.Nullable
  public String getEmailConfirmationSent() {
    return emailConfirmationSent;
  }

  public void setEmailConfirmationSent(String emailConfirmationSent) {
    this.emailConfirmationSent = emailConfirmationSent;
  }


  public AppointmentViewModel emailReminderSent(String emailReminderSent) {
    this.emailReminderSent = emailReminderSent;
    return this;
  }

  /**
   * Get emailReminderSent
   * @return emailReminderSent
   */
  @javax.annotation.Nullable
  public String getEmailReminderSent() {
    return emailReminderSent;
  }

  public void setEmailReminderSent(String emailReminderSent) {
    this.emailReminderSent = emailReminderSent;
  }


  public AppointmentViewModel endDateTime(String endDateTime) {
    this.endDateTime = endDateTime;
    return this;
  }

  /**
   * Get endDateTime
   * @return endDateTime
   */
  @javax.annotation.Nullable
  public String getEndDateTime() {
    return endDateTime;
  }

  public void setEndDateTime(String endDateTime) {
    this.endDateTime = endDateTime;
  }


  public AppointmentViewModel firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * Get firstname
   * @return firstname
   */
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public AppointmentViewModel groupSize(Integer groupSize) {
    this.groupSize = groupSize;
    return this;
  }

  /**
   * Get groupSize
   * @return groupSize
   */
  @javax.annotation.Nullable
  public Integer getGroupSize() {
    return groupSize;
  }

  public void setGroupSize(Integer groupSize) {
    this.groupSize = groupSize;
  }


  public AppointmentViewModel id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AppointmentViewModel ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public AppointmentViewModel lastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public AppointmentViewModel lastModifiedOn(String lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

  /**
   * Get lastModifiedOn
   * @return lastModifiedOn
   */
  @javax.annotation.Nullable
  public String getLastModifiedOn() {
    return lastModifiedOn;
  }

  public void setLastModifiedOn(String lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }


  public AppointmentViewModel lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

  /**
   * Get lastname
   * @return lastname
   */
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public AppointmentViewModel latitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public AppointmentViewModel location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public AppointmentViewModel locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * Get locationId
   * @return locationId
   */
  @javax.annotation.Nullable
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public AppointmentViewModel longitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }


  public AppointmentViewModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AppointmentViewModel notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public AppointmentViewModel _object(String _object) {
    this._object = _object;
    return this;
  }

  /**
   * Get _object
   * @return _object
   */
  @javax.annotation.Nullable
  public String getObject() {
    return _object;
  }

  public void setObject(String _object) {
    this._object = _object;
  }


  public AppointmentViewModel onlineBooking(Boolean onlineBooking) {
    this.onlineBooking = onlineBooking;
    return this;
  }

  /**
   * Get onlineBooking
   * @return onlineBooking
   */
  @javax.annotation.Nullable
  public Boolean getOnlineBooking() {
    return onlineBooking;
  }

  public void setOnlineBooking(Boolean onlineBooking) {
    this.onlineBooking = onlineBooking;
  }


  public AppointmentViewModel paymentStatus(Integer paymentStatus) {
    this.paymentStatus = paymentStatus;
    return this;
  }

  /**
   * Get paymentStatus
   * @return paymentStatus
   */
  @javax.annotation.Nullable
  public Integer getPaymentStatus() {
    return paymentStatus;
  }

  public void setPaymentStatus(Integer paymentStatus) {
    this.paymentStatus = paymentStatus;
  }


  public AppointmentViewModel phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public AppointmentViewModel phoneExt(String phoneExt) {
    this.phoneExt = phoneExt;
    return this;
  }

  /**
   * Get phoneExt
   * @return phoneExt
   */
  @javax.annotation.Nullable
  public String getPhoneExt() {
    return phoneExt;
  }

  public void setPhoneExt(String phoneExt) {
    this.phoneExt = phoneExt;
  }


  public AppointmentViewModel phoneType(String phoneType) {
    this.phoneType = phoneType;
    return this;
  }

  /**
   * Get phoneType
   * @return phoneType
   */
  @javax.annotation.Nullable
  public String getPhoneType() {
    return phoneType;
  }

  public void setPhoneType(String phoneType) {
    this.phoneType = phoneType;
  }


  public AppointmentViewModel rescheduledId(String rescheduledId) {
    this.rescheduledId = rescheduledId;
    return this;
  }

  /**
   * Get rescheduledId
   * @return rescheduledId
   */
  @javax.annotation.Nullable
  public String getRescheduledId() {
    return rescheduledId;
  }

  public void setRescheduledId(String rescheduledId) {
    this.rescheduledId = rescheduledId;
  }


  public AppointmentViewModel resourceEmail(String resourceEmail) {
    this.resourceEmail = resourceEmail;
    return this;
  }

  /**
   * Get resourceEmail
   * @return resourceEmail
   */
  @javax.annotation.Nullable
  public String getResourceEmail() {
    return resourceEmail;
  }

  public void setResourceEmail(String resourceEmail) {
    this.resourceEmail = resourceEmail;
  }


  public AppointmentViewModel resourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
    return this;
  }

  /**
   * Get resourceGroupId
   * @return resourceGroupId
   */
  @javax.annotation.Nullable
  public String getResourceGroupId() {
    return resourceGroupId;
  }

  public void setResourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
  }


  public AppointmentViewModel resourceGroupName(String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
    return this;
  }

  /**
   * Get resourceGroupName
   * @return resourceGroupName
   */
  @javax.annotation.Nullable
  public String getResourceGroupName() {
    return resourceGroupName;
  }

  public void setResourceGroupName(String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
  }


  public AppointmentViewModel resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public AppointmentViewModel resourceImageUrl(String resourceImageUrl) {
    this.resourceImageUrl = resourceImageUrl;
    return this;
  }

  /**
   * Get resourceImageUrl
   * @return resourceImageUrl
   */
  @javax.annotation.Nullable
  public String getResourceImageUrl() {
    return resourceImageUrl;
  }

  public void setResourceImageUrl(String resourceImageUrl) {
    this.resourceImageUrl = resourceImageUrl;
  }


  public AppointmentViewModel resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public AppointmentViewModel resources(List<AppointmentResourceViewModel> resources) {
    this.resources = resources;
    return this;
  }

  public AppointmentViewModel addResourcesItem(AppointmentResourceViewModel resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nullable
  public List<AppointmentResourceViewModel> getResources() {
    return resources;
  }

  public void setResources(List<AppointmentResourceViewModel> resources) {
    this.resources = resources;
  }


  public AppointmentViewModel serviceAllocationId(String serviceAllocationId) {
    this.serviceAllocationId = serviceAllocationId;
    return this;
  }

  /**
   * Get serviceAllocationId
   * @return serviceAllocationId
   */
  @javax.annotation.Nullable
  public String getServiceAllocationId() {
    return serviceAllocationId;
  }

  public void setServiceAllocationId(String serviceAllocationId) {
    this.serviceAllocationId = serviceAllocationId;
  }


  public AppointmentViewModel serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public AppointmentViewModel serviceImageUrl(String serviceImageUrl) {
    this.serviceImageUrl = serviceImageUrl;
    return this;
  }

  /**
   * Get serviceImageUrl
   * @return serviceImageUrl
   */
  @javax.annotation.Nullable
  public String getServiceImageUrl() {
    return serviceImageUrl;
  }

  public void setServiceImageUrl(String serviceImageUrl) {
    this.serviceImageUrl = serviceImageUrl;
  }


  public AppointmentViewModel serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public AppointmentViewModel smsConfirmationSent(String smsConfirmationSent) {
    this.smsConfirmationSent = smsConfirmationSent;
    return this;
  }

  /**
   * Get smsConfirmationSent
   * @return smsConfirmationSent
   */
  @javax.annotation.Nullable
  public String getSmsConfirmationSent() {
    return smsConfirmationSent;
  }

  public void setSmsConfirmationSent(String smsConfirmationSent) {
    this.smsConfirmationSent = smsConfirmationSent;
  }


  public AppointmentViewModel smsReminderSent(String smsReminderSent) {
    this.smsReminderSent = smsReminderSent;
    return this;
  }

  /**
   * Get smsReminderSent
   * @return smsReminderSent
   */
  @javax.annotation.Nullable
  public String getSmsReminderSent() {
    return smsReminderSent;
  }

  public void setSmsReminderSent(String smsReminderSent) {
    this.smsReminderSent = smsReminderSent;
  }


  public AppointmentViewModel startDateTime(String startDateTime) {
    this.startDateTime = startDateTime;
    return this;
  }

  /**
   * Get startDateTime
   * @return startDateTime
   */
  @javax.annotation.Nullable
  public String getStartDateTime() {
    return startDateTime;
  }

  public void setStartDateTime(String startDateTime) {
    this.startDateTime = startDateTime;
  }


  public AppointmentViewModel status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public AppointmentViewModel stripeChargeId(String stripeChargeId) {
    this.stripeChargeId = stripeChargeId;
    return this;
  }

  /**
   * Get stripeChargeId
   * @return stripeChargeId
   */
  @javax.annotation.Nullable
  public String getStripeChargeId() {
    return stripeChargeId;
  }

  public void setStripeChargeId(String stripeChargeId) {
    this.stripeChargeId = stripeChargeId;
  }


  public AppointmentViewModel stripeRefundId(String stripeRefundId) {
    this.stripeRefundId = stripeRefundId;
    return this;
  }

  /**
   * Get stripeRefundId
   * @return stripeRefundId
   */
  @javax.annotation.Nullable
  public String getStripeRefundId() {
    return stripeRefundId;
  }

  public void setStripeRefundId(String stripeRefundId) {
    this.stripeRefundId = stripeRefundId;
  }


  public AppointmentViewModel time(Integer time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @javax.annotation.Nullable
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }


  public AppointmentViewModel timezone(Integer timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public Integer getTimezone() {
    return timezone;
  }

  public void setTimezone(Integer timezone) {
    this.timezone = timezone;
  }


  public AppointmentViewModel timezoneIana(String timezoneIana) {
    this.timezoneIana = timezoneIana;
    return this;
  }

  /**
   * Get timezoneIana
   * @return timezoneIana
   */
  @javax.annotation.Nullable
  public String getTimezoneIana() {
    return timezoneIana;
  }

  public void setTimezoneIana(String timezoneIana) {
    this.timezoneIana = timezoneIana;
  }


  public AppointmentViewModel timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * Get timezoneId
   * @return timezoneId
   */
  @javax.annotation.Nullable
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppointmentViewModel appointmentViewModel = (AppointmentViewModel) o;
    return Objects.equals(this.auditTrail, appointmentViewModel.auditTrail) &&
        Objects.equals(this.bookedBy, appointmentViewModel.bookedBy) &&
        Objects.equals(this.businessName, appointmentViewModel.businessName) &&
        Objects.equals(this.calendarId, appointmentViewModel.calendarId) &&
        Objects.equals(this.confirmationNumber, appointmentViewModel.confirmationNumber) &&
        Objects.equals(this.confirmed, appointmentViewModel.confirmed) &&
        Objects.equals(this.createDate, appointmentViewModel.createDate) &&
        Objects.equals(this.customFields, appointmentViewModel.customFields) &&
        Objects.equals(this.customerId, appointmentViewModel.customerId) &&
        Objects.equals(this.customerMessage, appointmentViewModel.customerMessage) &&
        Objects.equals(this.customers, appointmentViewModel.customers) &&
        Objects.equals(this.date, appointmentViewModel.date) &&
        Objects.equals(this.dateInternational, appointmentViewModel.dateInternational) &&
        Objects.equals(this.downloadIcsUrl, appointmentViewModel.downloadIcsUrl) &&
        Objects.equals(this.duration, appointmentViewModel.duration) &&
        Objects.equals(this.email, appointmentViewModel.email) &&
        Objects.equals(this.emailConfirmationSent, appointmentViewModel.emailConfirmationSent) &&
        Objects.equals(this.emailReminderSent, appointmentViewModel.emailReminderSent) &&
        Objects.equals(this.endDateTime, appointmentViewModel.endDateTime) &&
        Objects.equals(this.firstname, appointmentViewModel.firstname) &&
        Objects.equals(this.groupSize, appointmentViewModel.groupSize) &&
        Objects.equals(this.id, appointmentViewModel.id) &&
        Objects.equals(this.ipAddress, appointmentViewModel.ipAddress) &&
        Objects.equals(this.lastModifiedBy, appointmentViewModel.lastModifiedBy) &&
        Objects.equals(this.lastModifiedOn, appointmentViewModel.lastModifiedOn) &&
        Objects.equals(this.lastname, appointmentViewModel.lastname) &&
        Objects.equals(this.latitude, appointmentViewModel.latitude) &&
        Objects.equals(this.location, appointmentViewModel.location) &&
        Objects.equals(this.locationId, appointmentViewModel.locationId) &&
        Objects.equals(this.longitude, appointmentViewModel.longitude) &&
        Objects.equals(this.name, appointmentViewModel.name) &&
        Objects.equals(this.notes, appointmentViewModel.notes) &&
        Objects.equals(this._object, appointmentViewModel._object) &&
        Objects.equals(this.onlineBooking, appointmentViewModel.onlineBooking) &&
        Objects.equals(this.paymentStatus, appointmentViewModel.paymentStatus) &&
        Objects.equals(this.phone, appointmentViewModel.phone) &&
        Objects.equals(this.phoneExt, appointmentViewModel.phoneExt) &&
        Objects.equals(this.phoneType, appointmentViewModel.phoneType) &&
        Objects.equals(this.rescheduledId, appointmentViewModel.rescheduledId) &&
        Objects.equals(this.resourceEmail, appointmentViewModel.resourceEmail) &&
        Objects.equals(this.resourceGroupId, appointmentViewModel.resourceGroupId) &&
        Objects.equals(this.resourceGroupName, appointmentViewModel.resourceGroupName) &&
        Objects.equals(this.resourceId, appointmentViewModel.resourceId) &&
        Objects.equals(this.resourceImageUrl, appointmentViewModel.resourceImageUrl) &&
        Objects.equals(this.resourceName, appointmentViewModel.resourceName) &&
        Objects.equals(this.resources, appointmentViewModel.resources) &&
        Objects.equals(this.serviceAllocationId, appointmentViewModel.serviceAllocationId) &&
        Objects.equals(this.serviceId, appointmentViewModel.serviceId) &&
        Objects.equals(this.serviceImageUrl, appointmentViewModel.serviceImageUrl) &&
        Objects.equals(this.serviceName, appointmentViewModel.serviceName) &&
        Objects.equals(this.smsConfirmationSent, appointmentViewModel.smsConfirmationSent) &&
        Objects.equals(this.smsReminderSent, appointmentViewModel.smsReminderSent) &&
        Objects.equals(this.startDateTime, appointmentViewModel.startDateTime) &&
        Objects.equals(this.status, appointmentViewModel.status) &&
        Objects.equals(this.stripeChargeId, appointmentViewModel.stripeChargeId) &&
        Objects.equals(this.stripeRefundId, appointmentViewModel.stripeRefundId) &&
        Objects.equals(this.time, appointmentViewModel.time) &&
        Objects.equals(this.timezone, appointmentViewModel.timezone) &&
        Objects.equals(this.timezoneIana, appointmentViewModel.timezoneIana) &&
        Objects.equals(this.timezoneId, appointmentViewModel.timezoneId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(auditTrail, bookedBy, businessName, calendarId, confirmationNumber, confirmed, createDate, customFields, customerId, customerMessage, customers, date, dateInternational, downloadIcsUrl, duration, email, emailConfirmationSent, emailReminderSent, endDateTime, firstname, groupSize, id, ipAddress, lastModifiedBy, lastModifiedOn, lastname, latitude, location, locationId, longitude, name, notes, _object, onlineBooking, paymentStatus, phone, phoneExt, phoneType, rescheduledId, resourceEmail, resourceGroupId, resourceGroupName, resourceId, resourceImageUrl, resourceName, resources, serviceAllocationId, serviceId, serviceImageUrl, serviceName, smsConfirmationSent, smsReminderSent, startDateTime, status, stripeChargeId, stripeRefundId, time, timezone, timezoneIana, timezoneId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppointmentViewModel {\n");
    sb.append("    auditTrail: ").append(toIndentedString(auditTrail)).append("\n");
    sb.append("    bookedBy: ").append(toIndentedString(bookedBy)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    calendarId: ").append(toIndentedString(calendarId)).append("\n");
    sb.append("    confirmationNumber: ").append(toIndentedString(confirmationNumber)).append("\n");
    sb.append("    confirmed: ").append(toIndentedString(confirmed)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerMessage: ").append(toIndentedString(customerMessage)).append("\n");
    sb.append("    customers: ").append(toIndentedString(customers)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dateInternational: ").append(toIndentedString(dateInternational)).append("\n");
    sb.append("    downloadIcsUrl: ").append(toIndentedString(downloadIcsUrl)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailConfirmationSent: ").append(toIndentedString(emailConfirmationSent)).append("\n");
    sb.append("    emailReminderSent: ").append(toIndentedString(emailReminderSent)).append("\n");
    sb.append("    endDateTime: ").append(toIndentedString(endDateTime)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    groupSize: ").append(toIndentedString(groupSize)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    onlineBooking: ").append(toIndentedString(onlineBooking)).append("\n");
    sb.append("    paymentStatus: ").append(toIndentedString(paymentStatus)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneExt: ").append(toIndentedString(phoneExt)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("    rescheduledId: ").append(toIndentedString(rescheduledId)).append("\n");
    sb.append("    resourceEmail: ").append(toIndentedString(resourceEmail)).append("\n");
    sb.append("    resourceGroupId: ").append(toIndentedString(resourceGroupId)).append("\n");
    sb.append("    resourceGroupName: ").append(toIndentedString(resourceGroupName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceImageUrl: ").append(toIndentedString(resourceImageUrl)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    serviceAllocationId: ").append(toIndentedString(serviceAllocationId)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceImageUrl: ").append(toIndentedString(serviceImageUrl)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    smsConfirmationSent: ").append(toIndentedString(smsConfirmationSent)).append("\n");
    sb.append("    smsReminderSent: ").append(toIndentedString(smsReminderSent)).append("\n");
    sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stripeChargeId: ").append(toIndentedString(stripeChargeId)).append("\n");
    sb.append("    stripeRefundId: ").append(toIndentedString(stripeRefundId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    timezoneIana: ").append(toIndentedString(timezoneIana)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auditTrail");
    openapiFields.add("bookedBy");
    openapiFields.add("businessName");
    openapiFields.add("calendarId");
    openapiFields.add("confirmationNumber");
    openapiFields.add("confirmed");
    openapiFields.add("createDate");
    openapiFields.add("customFields");
    openapiFields.add("customerId");
    openapiFields.add("customerMessage");
    openapiFields.add("customers");
    openapiFields.add("date");
    openapiFields.add("dateInternational");
    openapiFields.add("downloadIcsUrl");
    openapiFields.add("duration");
    openapiFields.add("email");
    openapiFields.add("emailConfirmationSent");
    openapiFields.add("emailReminderSent");
    openapiFields.add("endDateTime");
    openapiFields.add("firstname");
    openapiFields.add("groupSize");
    openapiFields.add("id");
    openapiFields.add("ipAddress");
    openapiFields.add("lastModifiedBy");
    openapiFields.add("lastModifiedOn");
    openapiFields.add("lastname");
    openapiFields.add("latitude");
    openapiFields.add("location");
    openapiFields.add("locationId");
    openapiFields.add("longitude");
    openapiFields.add("name");
    openapiFields.add("notes");
    openapiFields.add("object");
    openapiFields.add("onlineBooking");
    openapiFields.add("paymentStatus");
    openapiFields.add("phone");
    openapiFields.add("phoneExt");
    openapiFields.add("phoneType");
    openapiFields.add("rescheduledId");
    openapiFields.add("resourceEmail");
    openapiFields.add("resourceGroupId");
    openapiFields.add("resourceGroupName");
    openapiFields.add("resourceId");
    openapiFields.add("resourceImageUrl");
    openapiFields.add("resourceName");
    openapiFields.add("resources");
    openapiFields.add("serviceAllocationId");
    openapiFields.add("serviceId");
    openapiFields.add("serviceImageUrl");
    openapiFields.add("serviceName");
    openapiFields.add("smsConfirmationSent");
    openapiFields.add("smsReminderSent");
    openapiFields.add("startDateTime");
    openapiFields.add("status");
    openapiFields.add("stripeChargeId");
    openapiFields.add("stripeRefundId");
    openapiFields.add("time");
    openapiFields.add("timezone");
    openapiFields.add("timezoneIana");
    openapiFields.add("timezoneId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppointmentViewModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppointmentViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppointmentViewModel is not found in the empty JSON string", AppointmentViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppointmentViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppointmentViewModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("auditTrail") != null && !jsonObj.get("auditTrail").isJsonNull()) {
        JsonArray jsonArrayauditTrail = jsonObj.getAsJsonArray("auditTrail");
        if (jsonArrayauditTrail != null) {
          // ensure the json data is an array
          if (!jsonObj.get("auditTrail").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `auditTrail` to be an array in the JSON string but got `%s`", jsonObj.get("auditTrail").toString()));
          }

          // validate the optional field `auditTrail` (array)
          for (int i = 0; i < jsonArrayauditTrail.size(); i++) {
            AppointmentAuditViewModel.validateJsonElement(jsonArrayauditTrail.get(i));
          };
        }
      }
      if ((jsonObj.get("bookedBy") != null && !jsonObj.get("bookedBy").isJsonNull()) && !jsonObj.get("bookedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bookedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bookedBy").toString()));
      }
      if ((jsonObj.get("businessName") != null && !jsonObj.get("businessName").isJsonNull()) && !jsonObj.get("businessName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessName").toString()));
      }
      if ((jsonObj.get("calendarId") != null && !jsonObj.get("calendarId").isJsonNull()) && !jsonObj.get("calendarId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calendarId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calendarId").toString()));
      }
      if ((jsonObj.get("confirmationNumber") != null && !jsonObj.get("confirmationNumber").isJsonNull()) && !jsonObj.get("confirmationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `confirmationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("confirmationNumber").toString()));
      }
      if ((jsonObj.get("createDate") != null && !jsonObj.get("createDate").isJsonNull()) && !jsonObj.get("createDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createDate").toString()));
      }
      if ((jsonObj.get("customerId") != null && !jsonObj.get("customerId").isJsonNull()) && !jsonObj.get("customerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerId").toString()));
      }
      if ((jsonObj.get("customerMessage") != null && !jsonObj.get("customerMessage").isJsonNull()) && !jsonObj.get("customerMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerMessage").toString()));
      }
      if (jsonObj.get("customers") != null && !jsonObj.get("customers").isJsonNull()) {
        JsonArray jsonArraycustomers = jsonObj.getAsJsonArray("customers");
        if (jsonArraycustomers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customers` to be an array in the JSON string but got `%s`", jsonObj.get("customers").toString()));
          }

          // validate the optional field `customers` (array)
          for (int i = 0; i < jsonArraycustomers.size(); i++) {
            AppointmentCustomerViewModel.validateJsonElement(jsonArraycustomers.get(i));
          };
        }
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("dateInternational") != null && !jsonObj.get("dateInternational").isJsonNull()) && !jsonObj.get("dateInternational").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateInternational` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateInternational").toString()));
      }
      if ((jsonObj.get("downloadIcsUrl") != null && !jsonObj.get("downloadIcsUrl").isJsonNull()) && !jsonObj.get("downloadIcsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `downloadIcsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("downloadIcsUrl").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("emailConfirmationSent") != null && !jsonObj.get("emailConfirmationSent").isJsonNull()) && !jsonObj.get("emailConfirmationSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailConfirmationSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailConfirmationSent").toString()));
      }
      if ((jsonObj.get("emailReminderSent") != null && !jsonObj.get("emailReminderSent").isJsonNull()) && !jsonObj.get("emailReminderSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailReminderSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailReminderSent").toString()));
      }
      if ((jsonObj.get("endDateTime") != null && !jsonObj.get("endDateTime").isJsonNull()) && !jsonObj.get("endDateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDateTime").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("ipAddress") != null && !jsonObj.get("ipAddress").isJsonNull()) && !jsonObj.get("ipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipAddress").toString()));
      }
      if ((jsonObj.get("lastModifiedBy") != null && !jsonObj.get("lastModifiedBy").isJsonNull()) && !jsonObj.get("lastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedBy").toString()));
      }
      if ((jsonObj.get("lastModifiedOn") != null && !jsonObj.get("lastModifiedOn").isJsonNull()) && !jsonObj.get("lastModifiedOn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedOn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedOn").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("locationId") != null && !jsonObj.get("locationId").isJsonNull()) && !jsonObj.get("locationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationId").toString()));
      }
      if ((jsonObj.get("longitude") != null && !jsonObj.get("longitude").isJsonNull()) && !jsonObj.get("longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("longitude").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("phoneExt") != null && !jsonObj.get("phoneExt").isJsonNull()) && !jsonObj.get("phoneExt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneExt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneExt").toString()));
      }
      if ((jsonObj.get("phoneType") != null && !jsonObj.get("phoneType").isJsonNull()) && !jsonObj.get("phoneType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneType").toString()));
      }
      if ((jsonObj.get("rescheduledId") != null && !jsonObj.get("rescheduledId").isJsonNull()) && !jsonObj.get("rescheduledId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rescheduledId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rescheduledId").toString()));
      }
      if ((jsonObj.get("resourceEmail") != null && !jsonObj.get("resourceEmail").isJsonNull()) && !jsonObj.get("resourceEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceEmail").toString()));
      }
      if ((jsonObj.get("resourceGroupId") != null && !jsonObj.get("resourceGroupId").isJsonNull()) && !jsonObj.get("resourceGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGroupId").toString()));
      }
      if ((jsonObj.get("resourceGroupName") != null && !jsonObj.get("resourceGroupName").isJsonNull()) && !jsonObj.get("resourceGroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGroupName").toString()));
      }
      if ((jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) && !jsonObj.get("resourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceId").toString()));
      }
      if ((jsonObj.get("resourceImageUrl") != null && !jsonObj.get("resourceImageUrl").isJsonNull()) && !jsonObj.get("resourceImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceImageUrl").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull()) {
        JsonArray jsonArrayresources = jsonObj.getAsJsonArray("resources");
        if (jsonArrayresources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resources` to be an array in the JSON string but got `%s`", jsonObj.get("resources").toString()));
          }

          // validate the optional field `resources` (array)
          for (int i = 0; i < jsonArrayresources.size(); i++) {
            AppointmentResourceViewModel.validateJsonElement(jsonArrayresources.get(i));
          };
        }
      }
      if ((jsonObj.get("serviceAllocationId") != null && !jsonObj.get("serviceAllocationId").isJsonNull()) && !jsonObj.get("serviceAllocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAllocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAllocationId").toString()));
      }
      if ((jsonObj.get("serviceId") != null && !jsonObj.get("serviceId").isJsonNull()) && !jsonObj.get("serviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceId").toString()));
      }
      if ((jsonObj.get("serviceImageUrl") != null && !jsonObj.get("serviceImageUrl").isJsonNull()) && !jsonObj.get("serviceImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceImageUrl").toString()));
      }
      if ((jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) && !jsonObj.get("serviceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceName").toString()));
      }
      if ((jsonObj.get("smsConfirmationSent") != null && !jsonObj.get("smsConfirmationSent").isJsonNull()) && !jsonObj.get("smsConfirmationSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smsConfirmationSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smsConfirmationSent").toString()));
      }
      if ((jsonObj.get("smsReminderSent") != null && !jsonObj.get("smsReminderSent").isJsonNull()) && !jsonObj.get("smsReminderSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smsReminderSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smsReminderSent").toString()));
      }
      if ((jsonObj.get("startDateTime") != null && !jsonObj.get("startDateTime").isJsonNull()) && !jsonObj.get("startDateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDateTime").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("stripeChargeId") != null && !jsonObj.get("stripeChargeId").isJsonNull()) && !jsonObj.get("stripeChargeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stripeChargeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stripeChargeId").toString()));
      }
      if ((jsonObj.get("stripeRefundId") != null && !jsonObj.get("stripeRefundId").isJsonNull()) && !jsonObj.get("stripeRefundId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stripeRefundId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stripeRefundId").toString()));
      }
      if ((jsonObj.get("timezoneIana") != null && !jsonObj.get("timezoneIana").isJsonNull()) && !jsonObj.get("timezoneIana").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneIana` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneIana").toString()));
      }
      if ((jsonObj.get("timezoneId") != null && !jsonObj.get("timezoneId").isJsonNull()) && !jsonObj.get("timezoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppointmentViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppointmentViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppointmentViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppointmentViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AppointmentViewModel>() {
           @Override
           public void write(JsonWriter out, AppointmentViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppointmentViewModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppointmentViewModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppointmentViewModel
   * @throws IOException if the JSON string is invalid with respect to AppointmentViewModel
   */
  public static AppointmentViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppointmentViewModel.class);
  }

  /**
   * Convert an instance of AppointmentViewModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

