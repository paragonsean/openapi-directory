/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AddressViewModel;
import org.openapitools.client.model.PhoneViewModel;
import org.openapitools.client.model.RepeatViewModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceAllocationViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:57.922898-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServiceAllocationViewModel {
  public static final String SERIALIZED_NAME_BOOKING_COUNT = "bookingCount";
  @SerializedName(SERIALIZED_NAME_BOOKING_COUNT)
  private Integer bookingCount;

  public static final String SERIALIZED_NAME_BOOKING_LIMIT = "bookingLimit";
  @SerializedName(SERIALIZED_NAME_BOOKING_LIMIT)
  private Integer bookingLimit;

  public static final String SERIALIZED_NAME_DELETED_STATUS = "deletedStatus";
  @SerializedName(SERIALIZED_NAME_DELETED_STATUS)
  private Boolean deletedStatus;

  public static final String SERIALIZED_NAME_DELETED_TIME = "deletedTime";
  @SerializedName(SERIALIZED_NAME_DELETED_TIME)
  private String deletedTime;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private Integer endTime;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_REPEAT = "repeat";
  @SerializedName(SERIALIZED_NAME_REPEAT)
  private RepeatViewModel repeat;

  public static final String SERIALIZED_NAME_REPEATS = "repeats";
  @SerializedName(SERIALIZED_NAME_REPEATS)
  private Boolean repeats;

  public static final String SERIALIZED_NAME_RESOURCE_ADDRESS = "resourceAddress";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ADDRESS)
  private AddressViewModel resourceAddress;

  public static final String SERIALIZED_NAME_RESOURCE_DESCRIPTION = "resourceDescription";
  @SerializedName(SERIALIZED_NAME_RESOURCE_DESCRIPTION)
  private String resourceDescription;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_IMAGE_URL = "resourceImageUrl";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IMAGE_URL)
  private String resourceImageUrl;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_RESOURCE_PHONE = "resourcePhone";
  @SerializedName(SERIALIZED_NAME_RESOURCE_PHONE)
  private PhoneViewModel resourcePhone;

  public static final String SERIALIZED_NAME_SERVICE_DESCRIPTION = "serviceDescription";
  @SerializedName(SERIALIZED_NAME_SERVICE_DESCRIPTION)
  private String serviceDescription;

  public static final String SERIALIZED_NAME_SERVICE_DURATION = "serviceDuration";
  @SerializedName(SERIALIZED_NAME_SERVICE_DURATION)
  private Integer serviceDuration;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_SERVICE_IMAGE_URL = "serviceImageUrl";
  @SerializedName(SERIALIZED_NAME_SERVICE_IMAGE_URL)
  private String serviceImageUrl;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private Integer startTime;

  public static final String SERIALIZED_NAME_TIMEZONE_NAME = "timezoneName";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_NAME)
  private String timezoneName;

  public static final String SERIALIZED_NAME_TIMEZONE_OFFSET = "timezoneOffset";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_OFFSET)
  private Integer timezoneOffset;

  public ServiceAllocationViewModel() {
  }

  public ServiceAllocationViewModel bookingCount(Integer bookingCount) {
    this.bookingCount = bookingCount;
    return this;
  }

  /**
   * Get bookingCount
   * @return bookingCount
   */
  @javax.annotation.Nullable
  public Integer getBookingCount() {
    return bookingCount;
  }

  public void setBookingCount(Integer bookingCount) {
    this.bookingCount = bookingCount;
  }


  public ServiceAllocationViewModel bookingLimit(Integer bookingLimit) {
    this.bookingLimit = bookingLimit;
    return this;
  }

  /**
   * Get bookingLimit
   * @return bookingLimit
   */
  @javax.annotation.Nullable
  public Integer getBookingLimit() {
    return bookingLimit;
  }

  public void setBookingLimit(Integer bookingLimit) {
    this.bookingLimit = bookingLimit;
  }


  public ServiceAllocationViewModel deletedStatus(Boolean deletedStatus) {
    this.deletedStatus = deletedStatus;
    return this;
  }

  /**
   * Get deletedStatus
   * @return deletedStatus
   */
  @javax.annotation.Nullable
  public Boolean getDeletedStatus() {
    return deletedStatus;
  }

  public void setDeletedStatus(Boolean deletedStatus) {
    this.deletedStatus = deletedStatus;
  }


  public ServiceAllocationViewModel deletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
    return this;
  }

  /**
   * Get deletedTime
   * @return deletedTime
   */
  @javax.annotation.Nullable
  public String getDeletedTime() {
    return deletedTime;
  }

  public void setDeletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
  }


  public ServiceAllocationViewModel endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public ServiceAllocationViewModel endTime(Integer endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public Integer getEndTime() {
    return endTime;
  }

  public void setEndTime(Integer endTime) {
    this.endTime = endTime;
  }


  public ServiceAllocationViewModel id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ServiceAllocationViewModel locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * Get locationId
   * @return locationId
   */
  @javax.annotation.Nullable
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public ServiceAllocationViewModel _object(String _object) {
    this._object = _object;
    return this;
  }

  /**
   * Get _object
   * @return _object
   */
  @javax.annotation.Nullable
  public String getObject() {
    return _object;
  }

  public void setObject(String _object) {
    this._object = _object;
  }


  public ServiceAllocationViewModel reason(String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Get reason
   * @return reason
   */
  @javax.annotation.Nullable
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }


  public ServiceAllocationViewModel repeat(RepeatViewModel repeat) {
    this.repeat = repeat;
    return this;
  }

  /**
   * Get repeat
   * @return repeat
   */
  @javax.annotation.Nullable
  public RepeatViewModel getRepeat() {
    return repeat;
  }

  public void setRepeat(RepeatViewModel repeat) {
    this.repeat = repeat;
  }


  public ServiceAllocationViewModel repeats(Boolean repeats) {
    this.repeats = repeats;
    return this;
  }

  /**
   * Get repeats
   * @return repeats
   */
  @javax.annotation.Nullable
  public Boolean getRepeats() {
    return repeats;
  }

  public void setRepeats(Boolean repeats) {
    this.repeats = repeats;
  }


  public ServiceAllocationViewModel resourceAddress(AddressViewModel resourceAddress) {
    this.resourceAddress = resourceAddress;
    return this;
  }

  /**
   * Get resourceAddress
   * @return resourceAddress
   */
  @javax.annotation.Nullable
  public AddressViewModel getResourceAddress() {
    return resourceAddress;
  }

  public void setResourceAddress(AddressViewModel resourceAddress) {
    this.resourceAddress = resourceAddress;
  }


  public ServiceAllocationViewModel resourceDescription(String resourceDescription) {
    this.resourceDescription = resourceDescription;
    return this;
  }

  /**
   * Get resourceDescription
   * @return resourceDescription
   */
  @javax.annotation.Nullable
  public String getResourceDescription() {
    return resourceDescription;
  }

  public void setResourceDescription(String resourceDescription) {
    this.resourceDescription = resourceDescription;
  }


  public ServiceAllocationViewModel resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public ServiceAllocationViewModel resourceImageUrl(String resourceImageUrl) {
    this.resourceImageUrl = resourceImageUrl;
    return this;
  }

  /**
   * Get resourceImageUrl
   * @return resourceImageUrl
   */
  @javax.annotation.Nullable
  public String getResourceImageUrl() {
    return resourceImageUrl;
  }

  public void setResourceImageUrl(String resourceImageUrl) {
    this.resourceImageUrl = resourceImageUrl;
  }


  public ServiceAllocationViewModel resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public ServiceAllocationViewModel resourcePhone(PhoneViewModel resourcePhone) {
    this.resourcePhone = resourcePhone;
    return this;
  }

  /**
   * Get resourcePhone
   * @return resourcePhone
   */
  @javax.annotation.Nullable
  public PhoneViewModel getResourcePhone() {
    return resourcePhone;
  }

  public void setResourcePhone(PhoneViewModel resourcePhone) {
    this.resourcePhone = resourcePhone;
  }


  public ServiceAllocationViewModel serviceDescription(String serviceDescription) {
    this.serviceDescription = serviceDescription;
    return this;
  }

  /**
   * Get serviceDescription
   * @return serviceDescription
   */
  @javax.annotation.Nullable
  public String getServiceDescription() {
    return serviceDescription;
  }

  public void setServiceDescription(String serviceDescription) {
    this.serviceDescription = serviceDescription;
  }


  public ServiceAllocationViewModel serviceDuration(Integer serviceDuration) {
    this.serviceDuration = serviceDuration;
    return this;
  }

  /**
   * Get serviceDuration
   * @return serviceDuration
   */
  @javax.annotation.Nullable
  public Integer getServiceDuration() {
    return serviceDuration;
  }

  public void setServiceDuration(Integer serviceDuration) {
    this.serviceDuration = serviceDuration;
  }


  public ServiceAllocationViewModel serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public ServiceAllocationViewModel serviceImageUrl(String serviceImageUrl) {
    this.serviceImageUrl = serviceImageUrl;
    return this;
  }

  /**
   * Get serviceImageUrl
   * @return serviceImageUrl
   */
  @javax.annotation.Nullable
  public String getServiceImageUrl() {
    return serviceImageUrl;
  }

  public void setServiceImageUrl(String serviceImageUrl) {
    this.serviceImageUrl = serviceImageUrl;
  }


  public ServiceAllocationViewModel serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public ServiceAllocationViewModel startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public ServiceAllocationViewModel startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }


  public ServiceAllocationViewModel timezoneName(String timezoneName) {
    this.timezoneName = timezoneName;
    return this;
  }

  /**
   * Get timezoneName
   * @return timezoneName
   */
  @javax.annotation.Nullable
  public String getTimezoneName() {
    return timezoneName;
  }

  public void setTimezoneName(String timezoneName) {
    this.timezoneName = timezoneName;
  }


  public ServiceAllocationViewModel timezoneOffset(Integer timezoneOffset) {
    this.timezoneOffset = timezoneOffset;
    return this;
  }

  /**
   * Get timezoneOffset
   * @return timezoneOffset
   */
  @javax.annotation.Nullable
  public Integer getTimezoneOffset() {
    return timezoneOffset;
  }

  public void setTimezoneOffset(Integer timezoneOffset) {
    this.timezoneOffset = timezoneOffset;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceAllocationViewModel serviceAllocationViewModel = (ServiceAllocationViewModel) o;
    return Objects.equals(this.bookingCount, serviceAllocationViewModel.bookingCount) &&
        Objects.equals(this.bookingLimit, serviceAllocationViewModel.bookingLimit) &&
        Objects.equals(this.deletedStatus, serviceAllocationViewModel.deletedStatus) &&
        Objects.equals(this.deletedTime, serviceAllocationViewModel.deletedTime) &&
        Objects.equals(this.endDate, serviceAllocationViewModel.endDate) &&
        Objects.equals(this.endTime, serviceAllocationViewModel.endTime) &&
        Objects.equals(this.id, serviceAllocationViewModel.id) &&
        Objects.equals(this.locationId, serviceAllocationViewModel.locationId) &&
        Objects.equals(this._object, serviceAllocationViewModel._object) &&
        Objects.equals(this.reason, serviceAllocationViewModel.reason) &&
        Objects.equals(this.repeat, serviceAllocationViewModel.repeat) &&
        Objects.equals(this.repeats, serviceAllocationViewModel.repeats) &&
        Objects.equals(this.resourceAddress, serviceAllocationViewModel.resourceAddress) &&
        Objects.equals(this.resourceDescription, serviceAllocationViewModel.resourceDescription) &&
        Objects.equals(this.resourceId, serviceAllocationViewModel.resourceId) &&
        Objects.equals(this.resourceImageUrl, serviceAllocationViewModel.resourceImageUrl) &&
        Objects.equals(this.resourceName, serviceAllocationViewModel.resourceName) &&
        Objects.equals(this.resourcePhone, serviceAllocationViewModel.resourcePhone) &&
        Objects.equals(this.serviceDescription, serviceAllocationViewModel.serviceDescription) &&
        Objects.equals(this.serviceDuration, serviceAllocationViewModel.serviceDuration) &&
        Objects.equals(this.serviceId, serviceAllocationViewModel.serviceId) &&
        Objects.equals(this.serviceImageUrl, serviceAllocationViewModel.serviceImageUrl) &&
        Objects.equals(this.serviceName, serviceAllocationViewModel.serviceName) &&
        Objects.equals(this.startDate, serviceAllocationViewModel.startDate) &&
        Objects.equals(this.startTime, serviceAllocationViewModel.startTime) &&
        Objects.equals(this.timezoneName, serviceAllocationViewModel.timezoneName) &&
        Objects.equals(this.timezoneOffset, serviceAllocationViewModel.timezoneOffset);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bookingCount, bookingLimit, deletedStatus, deletedTime, endDate, endTime, id, locationId, _object, reason, repeat, repeats, resourceAddress, resourceDescription, resourceId, resourceImageUrl, resourceName, resourcePhone, serviceDescription, serviceDuration, serviceId, serviceImageUrl, serviceName, startDate, startTime, timezoneName, timezoneOffset);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceAllocationViewModel {\n");
    sb.append("    bookingCount: ").append(toIndentedString(bookingCount)).append("\n");
    sb.append("    bookingLimit: ").append(toIndentedString(bookingLimit)).append("\n");
    sb.append("    deletedStatus: ").append(toIndentedString(deletedStatus)).append("\n");
    sb.append("    deletedTime: ").append(toIndentedString(deletedTime)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    repeat: ").append(toIndentedString(repeat)).append("\n");
    sb.append("    repeats: ").append(toIndentedString(repeats)).append("\n");
    sb.append("    resourceAddress: ").append(toIndentedString(resourceAddress)).append("\n");
    sb.append("    resourceDescription: ").append(toIndentedString(resourceDescription)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceImageUrl: ").append(toIndentedString(resourceImageUrl)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    resourcePhone: ").append(toIndentedString(resourcePhone)).append("\n");
    sb.append("    serviceDescription: ").append(toIndentedString(serviceDescription)).append("\n");
    sb.append("    serviceDuration: ").append(toIndentedString(serviceDuration)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceImageUrl: ").append(toIndentedString(serviceImageUrl)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    timezoneName: ").append(toIndentedString(timezoneName)).append("\n");
    sb.append("    timezoneOffset: ").append(toIndentedString(timezoneOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bookingCount");
    openapiFields.add("bookingLimit");
    openapiFields.add("deletedStatus");
    openapiFields.add("deletedTime");
    openapiFields.add("endDate");
    openapiFields.add("endTime");
    openapiFields.add("id");
    openapiFields.add("locationId");
    openapiFields.add("object");
    openapiFields.add("reason");
    openapiFields.add("repeat");
    openapiFields.add("repeats");
    openapiFields.add("resourceAddress");
    openapiFields.add("resourceDescription");
    openapiFields.add("resourceId");
    openapiFields.add("resourceImageUrl");
    openapiFields.add("resourceName");
    openapiFields.add("resourcePhone");
    openapiFields.add("serviceDescription");
    openapiFields.add("serviceDuration");
    openapiFields.add("serviceId");
    openapiFields.add("serviceImageUrl");
    openapiFields.add("serviceName");
    openapiFields.add("startDate");
    openapiFields.add("startTime");
    openapiFields.add("timezoneName");
    openapiFields.add("timezoneOffset");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceAllocationViewModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceAllocationViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceAllocationViewModel is not found in the empty JSON string", ServiceAllocationViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceAllocationViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceAllocationViewModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deletedTime") != null && !jsonObj.get("deletedTime").isJsonNull()) && !jsonObj.get("deletedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletedTime").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("locationId") != null && !jsonObj.get("locationId").isJsonNull()) && !jsonObj.get("locationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationId").toString()));
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if ((jsonObj.get("reason") != null && !jsonObj.get("reason").isJsonNull()) && !jsonObj.get("reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason").toString()));
      }
      // validate the optional field `repeat`
      if (jsonObj.get("repeat") != null && !jsonObj.get("repeat").isJsonNull()) {
        RepeatViewModel.validateJsonElement(jsonObj.get("repeat"));
      }
      // validate the optional field `resourceAddress`
      if (jsonObj.get("resourceAddress") != null && !jsonObj.get("resourceAddress").isJsonNull()) {
        AddressViewModel.validateJsonElement(jsonObj.get("resourceAddress"));
      }
      if ((jsonObj.get("resourceDescription") != null && !jsonObj.get("resourceDescription").isJsonNull()) && !jsonObj.get("resourceDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceDescription").toString()));
      }
      if ((jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) && !jsonObj.get("resourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceId").toString()));
      }
      if ((jsonObj.get("resourceImageUrl") != null && !jsonObj.get("resourceImageUrl").isJsonNull()) && !jsonObj.get("resourceImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceImageUrl").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      // validate the optional field `resourcePhone`
      if (jsonObj.get("resourcePhone") != null && !jsonObj.get("resourcePhone").isJsonNull()) {
        PhoneViewModel.validateJsonElement(jsonObj.get("resourcePhone"));
      }
      if ((jsonObj.get("serviceDescription") != null && !jsonObj.get("serviceDescription").isJsonNull()) && !jsonObj.get("serviceDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceDescription").toString()));
      }
      if ((jsonObj.get("serviceId") != null && !jsonObj.get("serviceId").isJsonNull()) && !jsonObj.get("serviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceId").toString()));
      }
      if ((jsonObj.get("serviceImageUrl") != null && !jsonObj.get("serviceImageUrl").isJsonNull()) && !jsonObj.get("serviceImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceImageUrl").toString()));
      }
      if ((jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) && !jsonObj.get("serviceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceName").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("timezoneName") != null && !jsonObj.get("timezoneName").isJsonNull()) && !jsonObj.get("timezoneName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceAllocationViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceAllocationViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceAllocationViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceAllocationViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceAllocationViewModel>() {
           @Override
           public void write(JsonWriter out, ServiceAllocationViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceAllocationViewModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceAllocationViewModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceAllocationViewModel
   * @throws IOException if the JSON string is invalid with respect to ServiceAllocationViewModel
   */
  public static ServiceAllocationViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceAllocationViewModel.class);
  }

  /**
   * Convert an instance of ServiceAllocationViewModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

