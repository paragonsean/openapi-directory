/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BookingFieldListViewModel;
import org.openapitools.client.model.CountryViewModel;
import org.openapitools.client.model.CustomFieldDefinitionListViewModel;
import org.openapitools.client.model.CustomerInputModel;
import org.openapitools.client.model.CustomerListViewModel;
import org.openapitools.client.model.CustomerUpdateModel;
import org.openapitools.client.model.CustomerViewModel;
import org.openapitools.client.model.StateViewModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Get Customer Booking Fields
     *
     * &lt;p&gt;Use this endpoint to return &lt;b&gt;Customer Booking Fields&lt;/b&gt;. Customer booking fields are stored with each customer object. They are used when the information collected during the booking is for a particular customer. Customer Booking Fields include any custom customer fields you define and want to capture with the Booking.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersBookingfieldsGetTest() throws ApiException {
        String locationId = null;
        BookingFieldListViewModel response = api.consumerV1CustomersBookingfieldsGet(locationId);
        // TODO: test validations
    }

    /**
     * List Country Codes
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Countries with their associated Country Code&lt;/b&gt;. Country codes are based on the 2-character ANSI standard. If your countries of operation are not currently listed, contact us at &lt;i&gt;&lt;b&gt;support@onsched.com&lt;/b&gt;&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersCountriesGetTest() throws ApiException {
        List<CountryViewModel> response = api.consumerV1CustomersCountriesGet();
        // TODO: test validations
    }

    /**
     * Get Customer Custom Fields
     *
     * &lt;p&gt;Use this endpoint to return &lt;b&gt;Customer Custom Fields&lt;/b&gt;. Customer custom fields are stored with the customer object. They are used when the information collected during the booking is specific to a particular customer.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersCustomfieldsGetTest() throws ApiException {
        String locationId = null;
        Boolean leadQuestions = null;
        CustomFieldDefinitionListViewModel response = api.consumerV1CustomersCustomfieldsGet(locationId, leadQuestions);
        // TODO: test validations
    }

    /**
     * List Customers
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Customers&lt;/b&gt;. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersGetTest() throws ApiException {
        String locationId = null;
        String groupId = null;
        String email = null;
        String lastname = null;
        Boolean deleted = null;
        Integer offset = null;
        Integer limit = null;
        CustomerListViewModel response = api.consumerV1CustomersGet(locationId, groupId, email, lastname, deleted, offset, limit);
        // TODO: test validations
    }

    /**
     * Delete Customer
     *
     * &lt;p&gt;Use this endpoint to permanently &lt;b&gt;Delete&lt;/b&gt; a Customer object. A valid &lt;b&gt;customer id&lt;/b&gt; is required.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersIdDeleteTest() throws ApiException {
        String id = null;
        api.consumerV1CustomersIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get Customer
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;Customer&lt;/b&gt; object. A valid &lt;b&gt;customer id&lt;/b&gt; is required. Find customer id&#39;s by using the &lt;i&gt;GET /consumer/v1/customers&lt;/i&gt; endpoint.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersIdGetTest() throws ApiException {
        String id = null;
        CustomerViewModel response = api.consumerV1CustomersIdGet(id);
        // TODO: test validations
    }

    /**
     * Update Customer
     *
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Update&lt;/b&gt; a Customer object. A valid &lt;b&gt;customer id&lt;/b&gt; is required. Note: Blank fields are not changed.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersIdPutTest() throws ApiException {
        String id = null;
        CustomerUpdateModel customerUpdateModel = null;
        api.consumerV1CustomersIdPut(id, customerUpdateModel);
        // TODO: test validations
    }

    /**
     * Create Customer
     *
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Create&lt;/b&gt; a new Customer. A customer object is automatically created with the first appointment booking if it doesn&#39;t already exist. If not specified, the business location id defaults to the primary business location.&lt;/p&gt;  &lt;p&gt;Required Fields: &lt;b&gt;Email&lt;/b&gt; and &lt;b&gt;Name&lt;/b&gt; or &lt;b&gt;First and Lastname&lt;/b&gt; depending on customer type. Type 0 &#x3D; Person, Type 1 &#x3D; Business. For type 0, the firstname and lastname fields are used. For type 1, the Name field is used, and the name field is also used to populate the lastname.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersPostTest() throws ApiException {
        CustomerInputModel customerInputModel = null;
        CustomerViewModel response = api.consumerV1CustomersPost(customerInputModel);
        // TODO: test validations
    }

    /**
     * List Country States
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Countries with their associated State Codes&lt;/b&gt;. Supply a country code to filter results further. If states for your countries of operation are not currently listed, contact us at &lt;i&gt;&lt;b&gt;support@onsched.com&lt;/b&gt;&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1CustomersStatesGetTest() throws ApiException {
        String country = null;
        List<StateViewModel> response = api.consumerV1CustomersStatesGet(country);
        // TODO: test validations
    }

}
