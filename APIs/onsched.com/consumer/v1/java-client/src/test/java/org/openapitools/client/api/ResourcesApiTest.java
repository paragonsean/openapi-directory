/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ResourceListViewModel;
import org.openapitools.client.model.ResourceServiceListViewModel;
import org.openapitools.client.model.ResourceViewModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResourcesApi
 */
@Disabled
public class ResourcesApiTest {

    private final ResourcesApi api = new ResourcesApi();

    /**
     * List Resources
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Resources&lt;/b&gt; associated with a business location. If not specified, the business location defaults to the primary business location. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ResourcesGetTest() throws ApiException {
        String locationId = null;
        Integer resourceGroupId = null;
        String email = null;
        String name = null;
        String sortOrder = null;
        Integer offset = null;
        Integer limit = null;
        ResourceListViewModel response = api.consumerV1ResourcesGet(locationId, resourceGroupId, email, name, sortOrder, offset, limit);
        // TODO: test validations
    }

    /**
     * Get Resource
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;Resource&lt;/b&gt; object. A valid &lt;b&gt;resource id&lt;/b&gt; is required. Find resource id&#39;s by using the &lt;i&gt;GET consumer/v1/resources&lt;/i&gt; endpoint. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ResourcesIdGetTest() throws ApiException {
        Integer id = null;
        ResourceViewModel response = api.consumerV1ResourcesIdGet(id);
        // TODO: test validations
    }

    /**
     * Get Resource Linked Services
     *
     * &lt;p&gt;Use this endpoint to get a &lt;b&gt;List of Linked Services&lt;/b&gt; associated with the resource requested. The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, limit is 20, the maximum limit is 100. Use the other query parameters to filter the results further.&lt;/p&gt;  &lt;p&gt;Resource linked services are used to explicitly define the services that can be booked for a specified resource. By default, all services are bookable for any resource. For more information: &lt;a href&#x3D;\&quot;https://docs.onsched.com/docs/linked-services\&quot;&gt;Linked Services Overview&lt;/a&gt;&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ResourcesIdServicesGetTest() throws ApiException {
        Integer id = null;
        Integer offset = null;
        Integer limit = null;
        ResourceServiceListViewModel response = api.consumerV1ResourcesIdServicesGet(id, offset, limit);
        // TODO: test validations
    }

}
