/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AppointmentAuditViewModel
 */
public class AppointmentAuditViewModelTest {
    private final AppointmentAuditViewModel model = new AppointmentAuditViewModel();

    /**
     * Model tests for AppointmentAuditViewModel
     */
    @Test
    public void testAppointmentAuditViewModel() {
        // TODO: test AppointmentAuditViewModel
    }

    /**
     * Test the property 'appointmentId'
     */
    @Test
    public void appointmentIdTest() {
        // TODO: test appointmentId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'modificationType'
     */
    @Test
    public void modificationTypeTest() {
        // TODO: test modificationType
    }

    /**
     * Test the property 'modifiedBy'
     */
    @Test
    public void modifiedByTest() {
        // TODO: test modifiedBy
    }

    /**
     * Test the property 'modifiedOn'
     */
    @Test
    public void modifiedOnTest() {
        // TODO: test modifiedOn
    }

    /**
     * Test the property 'notesAfter'
     */
    @Test
    public void notesAfterTest() {
        // TODO: test notesAfter
    }

    /**
     * Test the property 'notesBefore'
     */
    @Test
    public void notesBeforeTest() {
        // TODO: test notesBefore
    }

    /**
     * Test the property 'statusAfter'
     */
    @Test
    public void statusAfterTest() {
        // TODO: test statusAfter
    }

    /**
     * Test the property 'statusBefore'
     */
    @Test
    public void statusBeforeTest() {
        // TODO: test statusBefore
    }

}
