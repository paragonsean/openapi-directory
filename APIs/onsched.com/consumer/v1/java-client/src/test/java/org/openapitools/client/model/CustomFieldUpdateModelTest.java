/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CustomFieldUpdateModel
 */
public class CustomFieldUpdateModelTest {
    private final CustomFieldUpdateModel model = new CustomFieldUpdateModel();

    /**
     * Model tests for CustomFieldUpdateModel
     */
    @Test
    public void testCustomFieldUpdateModel() {
        // TODO: test CustomFieldUpdateModel
    }

    /**
     * Test the property 'field1'
     */
    @Test
    public void field1Test() {
        // TODO: test field1
    }

    /**
     * Test the property 'field10'
     */
    @Test
    public void field10Test() {
        // TODO: test field10
    }

    /**
     * Test the property 'field2'
     */
    @Test
    public void field2Test() {
        // TODO: test field2
    }

    /**
     * Test the property 'field3'
     */
    @Test
    public void field3Test() {
        // TODO: test field3
    }

    /**
     * Test the property 'field4'
     */
    @Test
    public void field4Test() {
        // TODO: test field4
    }

    /**
     * Test the property 'field5'
     */
    @Test
    public void field5Test() {
        // TODO: test field5
    }

    /**
     * Test the property 'field6'
     */
    @Test
    public void field6Test() {
        // TODO: test field6
    }

    /**
     * Test the property 'field7'
     */
    @Test
    public void field7Test() {
        // TODO: test field7
    }

    /**
     * Test the property 'field8'
     */
    @Test
    public void field8Test() {
        // TODO: test field8
    }

    /**
     * Test the property 'field9'
     */
    @Test
    public void field9Test() {
        // TODO: test field9
    }

}
