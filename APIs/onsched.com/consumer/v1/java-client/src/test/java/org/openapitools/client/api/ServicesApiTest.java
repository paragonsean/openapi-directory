/*
 * OnSched Consumer API
 * Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ResourceListViewModel;
import org.openapitools.client.model.ServiceAllocationListViewModel;
import org.openapitools.client.model.ServiceAllocationViewModel;
import org.openapitools.client.model.ServiceListViewModel;
import org.openapitools.client.model.ServiceSortOrder;
import org.openapitools.client.model.ServiceViewModel;
import org.openapitools.client.model.ServicesScope;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesApi
 */
@Disabled
public class ServicesApiTest {

    private final ServicesApi api = new ServicesApi();

    /**
     * Get Service Allocation
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;Service Allocation&lt;/b&gt; object. A valid &lt;b&gt;serviceAllocation id&lt;/b&gt; is required. Find service allocation id&#39;s by using the &lt;i&gt;GET/consumer​/v1​/services​/{id}​/allocations&lt;/i&gt; endpoint.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ServicesAllocationsIdGetTest() throws ApiException {
        String id = null;
        ServiceAllocationViewModel response = api.consumerV1ServicesAllocationsIdGet(id);
        // TODO: test validations
    }

    /**
     * List Services
     *
     * &lt;p&gt;Use this endpoint to &lt;b&gt;List Services&lt;/b&gt; available at your business location and/or company. If not specified, the business location defaults to the primary business location. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ServicesGetTest() throws ApiException {
        String locationId = null;
        Integer serviceGroupId = null;
        Boolean defaultService = null;
        Boolean allLocations = null;
        ServicesScope scope = null;
        String name = null;
        String serviceId = null;
        Integer offset = null;
        Integer limit = null;
        ServiceSortOrder sortOrder = null;
        Boolean sortDescending = null;
        ServiceListViewModel response = api.consumerV1ServicesGet(locationId, serviceGroupId, defaultService, allLocations, scope, name, serviceId, offset, limit, sortOrder, sortDescending);
        // TODO: test validations
    }

    /**
     * List Service Allocations
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Service Allocations&lt;/b&gt; associated with the requested service. A valid &lt;b&gt;service id&lt;/b&gt; is required. Allocations are used for Event type services/bookings. Retrieve all allocations for a location by passing in zero as the service id. Otherwise, to get allocations for a specific service supply the service id. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further. For more information: &lt;a href&#x3D;\&quot;https://docs.onsched.com/reference/post_setup-v1-services-id-allocations\&quot;&gt;Create Service Allocations&lt;/a&gt;&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ServicesIdAllocationsGetTest() throws ApiException {
        String id = null;
        String locationId = null;
        String resourceId = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Integer offset = null;
        Integer limit = null;
        ServiceAllocationListViewModel response = api.consumerV1ServicesIdAllocationsGet(id, locationId, resourceId, startDate, endDate, offset, limit);
        // TODO: test validations
    }

    /**
     * Get Service
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;Service&lt;/b&gt; object. A valid &lt;b&gt;service id&lt;/b&gt; is required. Find service id&#39;s by using the &lt;i&gt;GET /consumer/v1/services&lt;/i&gt; endpoint.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ServicesIdGetTest() throws ApiException {
        Integer id = null;
        ServiceViewModel response = api.consumerV1ServicesIdGet(id);
        // TODO: test validations
    }

    /**
     * List Resources for Service
     *
     * &lt;p&gt;Use this endpoint to return a list of &lt;b&gt;Resources that provide the Service requested&lt;/b&gt;. A valid &lt;b&gt;service id&lt;/b&gt; is required. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consumerV1ServicesIdResourcesGetTest() throws ApiException {
        String id = null;
        String locationId = null;
        Integer offset = null;
        Integer limit = null;
        ResourceListViewModel response = api.consumerV1ServicesIdResourcesGet(id, locationId, offset, limit);
        // TODO: test validations
    }

}
