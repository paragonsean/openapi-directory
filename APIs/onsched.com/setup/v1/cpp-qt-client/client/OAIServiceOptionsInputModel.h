/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceOptionsInputModel.h
 *
 * 
 */

#ifndef OAIServiceOptionsInputModel_H
#define OAIServiceOptionsInputModel_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceOptionsInputModel : public OAIObject {
public:
    OAIServiceOptionsInputModel();
    OAIServiceOptionsInputModel(QString json);
    ~OAIServiceOptionsInputModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isConsumerPadding() const;
    void setConsumerPadding(const bool &consumer_padding);
    bool is_consumer_padding_Set() const;
    bool is_consumer_padding_Valid() const;

    bool isDefaultService() const;
    void setDefaultService(const bool &default_service);
    bool is_default_service_Set() const;
    bool is_default_service_Valid() const;

    qint32 getDurationInterval() const;
    void setDurationInterval(const qint32 &duration_interval);
    bool is_duration_interval_Set() const;
    bool is_duration_interval_Valid() const;

    qint32 getDurationMax() const;
    void setDurationMax(const qint32 &duration_max);
    bool is_duration_max_Set() const;
    bool is_duration_max_Valid() const;

    qint32 getDurationMin() const;
    void setDurationMin(const qint32 &duration_min);
    bool is_duration_min_Set() const;
    bool is_duration_min_Valid() const;

    bool isDurationSelect() const;
    void setDurationSelect(const bool &duration_select);
    bool is_duration_select_Set() const;
    bool is_duration_select_Valid() const;

    qint32 getPadding() const;
    void setPadding(const qint32 &padding);
    bool is_padding_Set() const;
    bool is_padding_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_consumer_padding;
    bool m_consumer_padding_isSet;
    bool m_consumer_padding_isValid;

    bool m_default_service;
    bool m_default_service_isSet;
    bool m_default_service_isValid;

    qint32 m_duration_interval;
    bool m_duration_interval_isSet;
    bool m_duration_interval_isValid;

    qint32 m_duration_max;
    bool m_duration_max_isSet;
    bool m_duration_max_isValid;

    qint32 m_duration_min;
    bool m_duration_min_isSet;
    bool m_duration_min_isValid;

    bool m_duration_select;
    bool m_duration_select_isSet;
    bool m_duration_select_isValid;

    qint32 m_padding;
    bool m_padding_isSet;
    bool m_padding_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceOptionsInputModel)

#endif // OAIServiceOptionsInputModel_H
