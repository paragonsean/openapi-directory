/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMasterEmailTemplateSettingsViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMasterEmailTemplateSettingsViewModel::OAIMasterEmailTemplateSettingsViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMasterEmailTemplateSettingsViewModel::OAIMasterEmailTemplateSettingsViewModel() {
    this->initializeModel();
}

OAIMasterEmailTemplateSettingsViewModel::~OAIMasterEmailTemplateSettingsViewModel() {}

void OAIMasterEmailTemplateSettingsViewModel::initializeModel() {

    m_center_email_content_isSet = false;
    m_center_email_content_isValid = false;

    m_center_email_content_panel_isSet = false;
    m_center_email_content_panel_isValid = false;

    m_center_email_footer_isSet = false;
    m_center_email_footer_isValid = false;

    m_content_background_color_isSet = false;
    m_content_background_color_isValid = false;

    m_content_color_isSet = false;
    m_content_color_isValid = false;

    m_content_link_color_isSet = false;
    m_content_link_color_isValid = false;

    m_email_background_color_isSet = false;
    m_email_background_color_isValid = false;

    m_email_color_isSet = false;
    m_email_color_isValid = false;

    m_email_link_color_isSet = false;
    m_email_link_color_isValid = false;

    m_footer_font_size_isSet = false;
    m_footer_font_size_isValid = false;

    m_footer_logo_height_isSet = false;
    m_footer_logo_height_isValid = false;

    m_footer_logo_padding_isSet = false;
    m_footer_logo_padding_isValid = false;

    m_footer_panel_email_contact_isSet = false;
    m_footer_panel_email_contact_isValid = false;

    m_footer_panel_phone_contact_isSet = false;
    m_footer_panel_phone_contact_isValid = false;

    m_footer_panel_website_contact_isSet = false;
    m_footer_panel_website_contact_isValid = false;

    m_header_logo_height_isSet = false;
    m_header_logo_height_isValid = false;

    m_header_logo_padding_isSet = false;
    m_header_logo_padding_isValid = false;

    m_panel_background_color_isSet = false;
    m_panel_background_color_isValid = false;

    m_panel_color_isSet = false;
    m_panel_color_isValid = false;

    m_panel_link_color_isSet = false;
    m_panel_link_color_isValid = false;

    m_privacy_policy_link_isSet = false;
    m_privacy_policy_link_isValid = false;

    m_show_content_panel_isSet = false;
    m_show_content_panel_isValid = false;

    m_show_footer_logo_isSet = false;
    m_show_footer_logo_isValid = false;

    m_show_footer_panel_isSet = false;
    m_show_footer_panel_isValid = false;

    m_show_header_logo_isSet = false;
    m_show_header_logo_isValid = false;

    m_show_header_panel_isSet = false;
    m_show_header_panel_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIMasterEmailTemplateSettingsViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMasterEmailTemplateSettingsViewModel::fromJsonObject(QJsonObject json) {

    m_center_email_content_isValid = ::OpenAPI::fromJsonValue(m_center_email_content, json[QString("centerEmailContent")]);
    m_center_email_content_isSet = !json[QString("centerEmailContent")].isNull() && m_center_email_content_isValid;

    m_center_email_content_panel_isValid = ::OpenAPI::fromJsonValue(m_center_email_content_panel, json[QString("centerEmailContentPanel")]);
    m_center_email_content_panel_isSet = !json[QString("centerEmailContentPanel")].isNull() && m_center_email_content_panel_isValid;

    m_center_email_footer_isValid = ::OpenAPI::fromJsonValue(m_center_email_footer, json[QString("centerEmailFooter")]);
    m_center_email_footer_isSet = !json[QString("centerEmailFooter")].isNull() && m_center_email_footer_isValid;

    m_content_background_color_isValid = ::OpenAPI::fromJsonValue(m_content_background_color, json[QString("contentBackgroundColor")]);
    m_content_background_color_isSet = !json[QString("contentBackgroundColor")].isNull() && m_content_background_color_isValid;

    m_content_color_isValid = ::OpenAPI::fromJsonValue(m_content_color, json[QString("contentColor")]);
    m_content_color_isSet = !json[QString("contentColor")].isNull() && m_content_color_isValid;

    m_content_link_color_isValid = ::OpenAPI::fromJsonValue(m_content_link_color, json[QString("contentLinkColor")]);
    m_content_link_color_isSet = !json[QString("contentLinkColor")].isNull() && m_content_link_color_isValid;

    m_email_background_color_isValid = ::OpenAPI::fromJsonValue(m_email_background_color, json[QString("emailBackgroundColor")]);
    m_email_background_color_isSet = !json[QString("emailBackgroundColor")].isNull() && m_email_background_color_isValid;

    m_email_color_isValid = ::OpenAPI::fromJsonValue(m_email_color, json[QString("emailColor")]);
    m_email_color_isSet = !json[QString("emailColor")].isNull() && m_email_color_isValid;

    m_email_link_color_isValid = ::OpenAPI::fromJsonValue(m_email_link_color, json[QString("emailLinkColor")]);
    m_email_link_color_isSet = !json[QString("emailLinkColor")].isNull() && m_email_link_color_isValid;

    m_footer_font_size_isValid = ::OpenAPI::fromJsonValue(m_footer_font_size, json[QString("footerFontSize")]);
    m_footer_font_size_isSet = !json[QString("footerFontSize")].isNull() && m_footer_font_size_isValid;

    m_footer_logo_height_isValid = ::OpenAPI::fromJsonValue(m_footer_logo_height, json[QString("footerLogoHeight")]);
    m_footer_logo_height_isSet = !json[QString("footerLogoHeight")].isNull() && m_footer_logo_height_isValid;

    m_footer_logo_padding_isValid = ::OpenAPI::fromJsonValue(m_footer_logo_padding, json[QString("footerLogoPadding")]);
    m_footer_logo_padding_isSet = !json[QString("footerLogoPadding")].isNull() && m_footer_logo_padding_isValid;

    m_footer_panel_email_contact_isValid = ::OpenAPI::fromJsonValue(m_footer_panel_email_contact, json[QString("footerPanelEmailContact")]);
    m_footer_panel_email_contact_isSet = !json[QString("footerPanelEmailContact")].isNull() && m_footer_panel_email_contact_isValid;

    m_footer_panel_phone_contact_isValid = ::OpenAPI::fromJsonValue(m_footer_panel_phone_contact, json[QString("footerPanelPhoneContact")]);
    m_footer_panel_phone_contact_isSet = !json[QString("footerPanelPhoneContact")].isNull() && m_footer_panel_phone_contact_isValid;

    m_footer_panel_website_contact_isValid = ::OpenAPI::fromJsonValue(m_footer_panel_website_contact, json[QString("footerPanelWebsiteContact")]);
    m_footer_panel_website_contact_isSet = !json[QString("footerPanelWebsiteContact")].isNull() && m_footer_panel_website_contact_isValid;

    m_header_logo_height_isValid = ::OpenAPI::fromJsonValue(m_header_logo_height, json[QString("headerLogoHeight")]);
    m_header_logo_height_isSet = !json[QString("headerLogoHeight")].isNull() && m_header_logo_height_isValid;

    m_header_logo_padding_isValid = ::OpenAPI::fromJsonValue(m_header_logo_padding, json[QString("headerLogoPadding")]);
    m_header_logo_padding_isSet = !json[QString("headerLogoPadding")].isNull() && m_header_logo_padding_isValid;

    m_panel_background_color_isValid = ::OpenAPI::fromJsonValue(m_panel_background_color, json[QString("panelBackgroundColor")]);
    m_panel_background_color_isSet = !json[QString("panelBackgroundColor")].isNull() && m_panel_background_color_isValid;

    m_panel_color_isValid = ::OpenAPI::fromJsonValue(m_panel_color, json[QString("panelColor")]);
    m_panel_color_isSet = !json[QString("panelColor")].isNull() && m_panel_color_isValid;

    m_panel_link_color_isValid = ::OpenAPI::fromJsonValue(m_panel_link_color, json[QString("panelLinkColor")]);
    m_panel_link_color_isSet = !json[QString("panelLinkColor")].isNull() && m_panel_link_color_isValid;

    m_privacy_policy_link_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy_link, json[QString("privacyPolicyLink")]);
    m_privacy_policy_link_isSet = !json[QString("privacyPolicyLink")].isNull() && m_privacy_policy_link_isValid;

    m_show_content_panel_isValid = ::OpenAPI::fromJsonValue(m_show_content_panel, json[QString("showContentPanel")]);
    m_show_content_panel_isSet = !json[QString("showContentPanel")].isNull() && m_show_content_panel_isValid;

    m_show_footer_logo_isValid = ::OpenAPI::fromJsonValue(m_show_footer_logo, json[QString("showFooterLogo")]);
    m_show_footer_logo_isSet = !json[QString("showFooterLogo")].isNull() && m_show_footer_logo_isValid;

    m_show_footer_panel_isValid = ::OpenAPI::fromJsonValue(m_show_footer_panel, json[QString("showFooterPanel")]);
    m_show_footer_panel_isSet = !json[QString("showFooterPanel")].isNull() && m_show_footer_panel_isValid;

    m_show_header_logo_isValid = ::OpenAPI::fromJsonValue(m_show_header_logo, json[QString("showHeaderLogo")]);
    m_show_header_logo_isSet = !json[QString("showHeaderLogo")].isNull() && m_show_header_logo_isValid;

    m_show_header_panel_isValid = ::OpenAPI::fromJsonValue(m_show_header_panel, json[QString("showHeaderPanel")]);
    m_show_header_panel_isSet = !json[QString("showHeaderPanel")].isNull() && m_show_header_panel_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMasterEmailTemplateSettingsViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_center_email_content_isSet) {
        obj.insert(QString("centerEmailContent"), ::OpenAPI::toJsonValue(m_center_email_content));
    }
    if (m_center_email_content_panel_isSet) {
        obj.insert(QString("centerEmailContentPanel"), ::OpenAPI::toJsonValue(m_center_email_content_panel));
    }
    if (m_center_email_footer_isSet) {
        obj.insert(QString("centerEmailFooter"), ::OpenAPI::toJsonValue(m_center_email_footer));
    }
    if (m_content_background_color_isSet) {
        obj.insert(QString("contentBackgroundColor"), ::OpenAPI::toJsonValue(m_content_background_color));
    }
    if (m_content_color_isSet) {
        obj.insert(QString("contentColor"), ::OpenAPI::toJsonValue(m_content_color));
    }
    if (m_content_link_color_isSet) {
        obj.insert(QString("contentLinkColor"), ::OpenAPI::toJsonValue(m_content_link_color));
    }
    if (m_email_background_color_isSet) {
        obj.insert(QString("emailBackgroundColor"), ::OpenAPI::toJsonValue(m_email_background_color));
    }
    if (m_email_color_isSet) {
        obj.insert(QString("emailColor"), ::OpenAPI::toJsonValue(m_email_color));
    }
    if (m_email_link_color_isSet) {
        obj.insert(QString("emailLinkColor"), ::OpenAPI::toJsonValue(m_email_link_color));
    }
    if (m_footer_font_size_isSet) {
        obj.insert(QString("footerFontSize"), ::OpenAPI::toJsonValue(m_footer_font_size));
    }
    if (m_footer_logo_height_isSet) {
        obj.insert(QString("footerLogoHeight"), ::OpenAPI::toJsonValue(m_footer_logo_height));
    }
    if (m_footer_logo_padding_isSet) {
        obj.insert(QString("footerLogoPadding"), ::OpenAPI::toJsonValue(m_footer_logo_padding));
    }
    if (m_footer_panel_email_contact_isSet) {
        obj.insert(QString("footerPanelEmailContact"), ::OpenAPI::toJsonValue(m_footer_panel_email_contact));
    }
    if (m_footer_panel_phone_contact_isSet) {
        obj.insert(QString("footerPanelPhoneContact"), ::OpenAPI::toJsonValue(m_footer_panel_phone_contact));
    }
    if (m_footer_panel_website_contact_isSet) {
        obj.insert(QString("footerPanelWebsiteContact"), ::OpenAPI::toJsonValue(m_footer_panel_website_contact));
    }
    if (m_header_logo_height_isSet) {
        obj.insert(QString("headerLogoHeight"), ::OpenAPI::toJsonValue(m_header_logo_height));
    }
    if (m_header_logo_padding_isSet) {
        obj.insert(QString("headerLogoPadding"), ::OpenAPI::toJsonValue(m_header_logo_padding));
    }
    if (m_panel_background_color_isSet) {
        obj.insert(QString("panelBackgroundColor"), ::OpenAPI::toJsonValue(m_panel_background_color));
    }
    if (m_panel_color_isSet) {
        obj.insert(QString("panelColor"), ::OpenAPI::toJsonValue(m_panel_color));
    }
    if (m_panel_link_color_isSet) {
        obj.insert(QString("panelLinkColor"), ::OpenAPI::toJsonValue(m_panel_link_color));
    }
    if (m_privacy_policy_link_isSet) {
        obj.insert(QString("privacyPolicyLink"), ::OpenAPI::toJsonValue(m_privacy_policy_link));
    }
    if (m_show_content_panel_isSet) {
        obj.insert(QString("showContentPanel"), ::OpenAPI::toJsonValue(m_show_content_panel));
    }
    if (m_show_footer_logo_isSet) {
        obj.insert(QString("showFooterLogo"), ::OpenAPI::toJsonValue(m_show_footer_logo));
    }
    if (m_show_footer_panel_isSet) {
        obj.insert(QString("showFooterPanel"), ::OpenAPI::toJsonValue(m_show_footer_panel));
    }
    if (m_show_header_logo_isSet) {
        obj.insert(QString("showHeaderLogo"), ::OpenAPI::toJsonValue(m_show_header_logo));
    }
    if (m_show_header_panel_isSet) {
        obj.insert(QString("showHeaderPanel"), ::OpenAPI::toJsonValue(m_show_header_panel));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

bool OAIMasterEmailTemplateSettingsViewModel::isCenterEmailContent() const {
    return m_center_email_content;
}
void OAIMasterEmailTemplateSettingsViewModel::setCenterEmailContent(const bool &center_email_content) {
    m_center_email_content = center_email_content;
    m_center_email_content_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_center_email_content_Set() const{
    return m_center_email_content_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_center_email_content_Valid() const{
    return m_center_email_content_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isCenterEmailContentPanel() const {
    return m_center_email_content_panel;
}
void OAIMasterEmailTemplateSettingsViewModel::setCenterEmailContentPanel(const bool &center_email_content_panel) {
    m_center_email_content_panel = center_email_content_panel;
    m_center_email_content_panel_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_center_email_content_panel_Set() const{
    return m_center_email_content_panel_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_center_email_content_panel_Valid() const{
    return m_center_email_content_panel_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isCenterEmailFooter() const {
    return m_center_email_footer;
}
void OAIMasterEmailTemplateSettingsViewModel::setCenterEmailFooter(const bool &center_email_footer) {
    m_center_email_footer = center_email_footer;
    m_center_email_footer_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_center_email_footer_Set() const{
    return m_center_email_footer_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_center_email_footer_Valid() const{
    return m_center_email_footer_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getContentBackgroundColor() const {
    return m_content_background_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setContentBackgroundColor(const QString &content_background_color) {
    m_content_background_color = content_background_color;
    m_content_background_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_content_background_color_Set() const{
    return m_content_background_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_content_background_color_Valid() const{
    return m_content_background_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getContentColor() const {
    return m_content_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setContentColor(const QString &content_color) {
    m_content_color = content_color;
    m_content_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_content_color_Set() const{
    return m_content_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_content_color_Valid() const{
    return m_content_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getContentLinkColor() const {
    return m_content_link_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setContentLinkColor(const QString &content_link_color) {
    m_content_link_color = content_link_color;
    m_content_link_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_content_link_color_Set() const{
    return m_content_link_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_content_link_color_Valid() const{
    return m_content_link_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getEmailBackgroundColor() const {
    return m_email_background_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setEmailBackgroundColor(const QString &email_background_color) {
    m_email_background_color = email_background_color;
    m_email_background_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_email_background_color_Set() const{
    return m_email_background_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_email_background_color_Valid() const{
    return m_email_background_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getEmailColor() const {
    return m_email_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setEmailColor(const QString &email_color) {
    m_email_color = email_color;
    m_email_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_email_color_Set() const{
    return m_email_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_email_color_Valid() const{
    return m_email_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getEmailLinkColor() const {
    return m_email_link_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setEmailLinkColor(const QString &email_link_color) {
    m_email_link_color = email_link_color;
    m_email_link_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_email_link_color_Set() const{
    return m_email_link_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_email_link_color_Valid() const{
    return m_email_link_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getFooterFontSize() const {
    return m_footer_font_size;
}
void OAIMasterEmailTemplateSettingsViewModel::setFooterFontSize(const QString &footer_font_size) {
    m_footer_font_size = footer_font_size;
    m_footer_font_size_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_font_size_Set() const{
    return m_footer_font_size_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_font_size_Valid() const{
    return m_footer_font_size_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getFooterLogoHeight() const {
    return m_footer_logo_height;
}
void OAIMasterEmailTemplateSettingsViewModel::setFooterLogoHeight(const QString &footer_logo_height) {
    m_footer_logo_height = footer_logo_height;
    m_footer_logo_height_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_logo_height_Set() const{
    return m_footer_logo_height_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_logo_height_Valid() const{
    return m_footer_logo_height_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getFooterLogoPadding() const {
    return m_footer_logo_padding;
}
void OAIMasterEmailTemplateSettingsViewModel::setFooterLogoPadding(const QString &footer_logo_padding) {
    m_footer_logo_padding = footer_logo_padding;
    m_footer_logo_padding_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_logo_padding_Set() const{
    return m_footer_logo_padding_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_logo_padding_Valid() const{
    return m_footer_logo_padding_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isFooterPanelEmailContact() const {
    return m_footer_panel_email_contact;
}
void OAIMasterEmailTemplateSettingsViewModel::setFooterPanelEmailContact(const bool &footer_panel_email_contact) {
    m_footer_panel_email_contact = footer_panel_email_contact;
    m_footer_panel_email_contact_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_panel_email_contact_Set() const{
    return m_footer_panel_email_contact_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_panel_email_contact_Valid() const{
    return m_footer_panel_email_contact_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isFooterPanelPhoneContact() const {
    return m_footer_panel_phone_contact;
}
void OAIMasterEmailTemplateSettingsViewModel::setFooterPanelPhoneContact(const bool &footer_panel_phone_contact) {
    m_footer_panel_phone_contact = footer_panel_phone_contact;
    m_footer_panel_phone_contact_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_panel_phone_contact_Set() const{
    return m_footer_panel_phone_contact_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_panel_phone_contact_Valid() const{
    return m_footer_panel_phone_contact_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isFooterPanelWebsiteContact() const {
    return m_footer_panel_website_contact;
}
void OAIMasterEmailTemplateSettingsViewModel::setFooterPanelWebsiteContact(const bool &footer_panel_website_contact) {
    m_footer_panel_website_contact = footer_panel_website_contact;
    m_footer_panel_website_contact_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_panel_website_contact_Set() const{
    return m_footer_panel_website_contact_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_footer_panel_website_contact_Valid() const{
    return m_footer_panel_website_contact_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getHeaderLogoHeight() const {
    return m_header_logo_height;
}
void OAIMasterEmailTemplateSettingsViewModel::setHeaderLogoHeight(const QString &header_logo_height) {
    m_header_logo_height = header_logo_height;
    m_header_logo_height_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_header_logo_height_Set() const{
    return m_header_logo_height_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_header_logo_height_Valid() const{
    return m_header_logo_height_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getHeaderLogoPadding() const {
    return m_header_logo_padding;
}
void OAIMasterEmailTemplateSettingsViewModel::setHeaderLogoPadding(const QString &header_logo_padding) {
    m_header_logo_padding = header_logo_padding;
    m_header_logo_padding_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_header_logo_padding_Set() const{
    return m_header_logo_padding_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_header_logo_padding_Valid() const{
    return m_header_logo_padding_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getPanelBackgroundColor() const {
    return m_panel_background_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setPanelBackgroundColor(const QString &panel_background_color) {
    m_panel_background_color = panel_background_color;
    m_panel_background_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_panel_background_color_Set() const{
    return m_panel_background_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_panel_background_color_Valid() const{
    return m_panel_background_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getPanelColor() const {
    return m_panel_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setPanelColor(const QString &panel_color) {
    m_panel_color = panel_color;
    m_panel_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_panel_color_Set() const{
    return m_panel_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_panel_color_Valid() const{
    return m_panel_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getPanelLinkColor() const {
    return m_panel_link_color;
}
void OAIMasterEmailTemplateSettingsViewModel::setPanelLinkColor(const QString &panel_link_color) {
    m_panel_link_color = panel_link_color;
    m_panel_link_color_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_panel_link_color_Set() const{
    return m_panel_link_color_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_panel_link_color_Valid() const{
    return m_panel_link_color_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getPrivacyPolicyLink() const {
    return m_privacy_policy_link;
}
void OAIMasterEmailTemplateSettingsViewModel::setPrivacyPolicyLink(const QString &privacy_policy_link) {
    m_privacy_policy_link = privacy_policy_link;
    m_privacy_policy_link_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_privacy_policy_link_Set() const{
    return m_privacy_policy_link_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_privacy_policy_link_Valid() const{
    return m_privacy_policy_link_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isShowContentPanel() const {
    return m_show_content_panel;
}
void OAIMasterEmailTemplateSettingsViewModel::setShowContentPanel(const bool &show_content_panel) {
    m_show_content_panel = show_content_panel;
    m_show_content_panel_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_content_panel_Set() const{
    return m_show_content_panel_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_content_panel_Valid() const{
    return m_show_content_panel_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isShowFooterLogo() const {
    return m_show_footer_logo;
}
void OAIMasterEmailTemplateSettingsViewModel::setShowFooterLogo(const bool &show_footer_logo) {
    m_show_footer_logo = show_footer_logo;
    m_show_footer_logo_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_footer_logo_Set() const{
    return m_show_footer_logo_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_footer_logo_Valid() const{
    return m_show_footer_logo_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isShowFooterPanel() const {
    return m_show_footer_panel;
}
void OAIMasterEmailTemplateSettingsViewModel::setShowFooterPanel(const bool &show_footer_panel) {
    m_show_footer_panel = show_footer_panel;
    m_show_footer_panel_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_footer_panel_Set() const{
    return m_show_footer_panel_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_footer_panel_Valid() const{
    return m_show_footer_panel_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isShowHeaderLogo() const {
    return m_show_header_logo;
}
void OAIMasterEmailTemplateSettingsViewModel::setShowHeaderLogo(const bool &show_header_logo) {
    m_show_header_logo = show_header_logo;
    m_show_header_logo_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_header_logo_Set() const{
    return m_show_header_logo_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_header_logo_Valid() const{
    return m_show_header_logo_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isShowHeaderPanel() const {
    return m_show_header_panel;
}
void OAIMasterEmailTemplateSettingsViewModel::setShowHeaderPanel(const bool &show_header_panel) {
    m_show_header_panel = show_header_panel;
    m_show_header_panel_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_header_panel_Set() const{
    return m_show_header_panel_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_show_header_panel_Valid() const{
    return m_show_header_panel_isValid;
}

QString OAIMasterEmailTemplateSettingsViewModel::getVersion() const {
    return m_version;
}
void OAIMasterEmailTemplateSettingsViewModel::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_version_Set() const{
    return m_version_isSet;
}

bool OAIMasterEmailTemplateSettingsViewModel::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIMasterEmailTemplateSettingsViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_center_email_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_center_email_content_panel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_center_email_footer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_background_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_link_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_background_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_link_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_font_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_logo_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_logo_padding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_panel_email_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_panel_phone_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_panel_website_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_logo_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_logo_padding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panel_background_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panel_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panel_link_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_content_panel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_footer_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_footer_panel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_header_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_header_panel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMasterEmailTemplateSettingsViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
