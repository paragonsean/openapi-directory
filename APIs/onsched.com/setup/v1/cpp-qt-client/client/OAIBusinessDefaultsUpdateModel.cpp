/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBusinessDefaultsUpdateModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBusinessDefaultsUpdateModel::OAIBusinessDefaultsUpdateModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBusinessDefaultsUpdateModel::OAIBusinessDefaultsUpdateModel() {
    this->initializeModel();
}

OAIBusinessDefaultsUpdateModel::~OAIBusinessDefaultsUpdateModel() {}

void OAIBusinessDefaultsUpdateModel::initializeModel() {

    m_auto_update_customer_isSet = false;
    m_auto_update_customer_isValid = false;

    m_business_notification_isSet = false;
    m_business_notification_isValid = false;

    m_customer_city_isSet = false;
    m_customer_city_isValid = false;

    m_customer_state_isSet = false;
    m_customer_state_isValid = false;

    m_email_info_isSet = false;
    m_email_info_isValid = false;

    m_enable_utc_timezone_isSet = false;
    m_enable_utc_timezone_isValid = false;
}

void OAIBusinessDefaultsUpdateModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBusinessDefaultsUpdateModel::fromJsonObject(QJsonObject json) {

    m_auto_update_customer_isValid = ::OpenAPI::fromJsonValue(m_auto_update_customer, json[QString("autoUpdateCustomer")]);
    m_auto_update_customer_isSet = !json[QString("autoUpdateCustomer")].isNull() && m_auto_update_customer_isValid;

    m_business_notification_isValid = ::OpenAPI::fromJsonValue(m_business_notification, json[QString("businessNotification")]);
    m_business_notification_isSet = !json[QString("businessNotification")].isNull() && m_business_notification_isValid;

    m_customer_city_isValid = ::OpenAPI::fromJsonValue(m_customer_city, json[QString("customerCity")]);
    m_customer_city_isSet = !json[QString("customerCity")].isNull() && m_customer_city_isValid;

    m_customer_state_isValid = ::OpenAPI::fromJsonValue(m_customer_state, json[QString("customerState")]);
    m_customer_state_isSet = !json[QString("customerState")].isNull() && m_customer_state_isValid;

    m_email_info_isValid = ::OpenAPI::fromJsonValue(m_email_info, json[QString("emailInfo")]);
    m_email_info_isSet = !json[QString("emailInfo")].isNull() && m_email_info_isValid;

    m_enable_utc_timezone_isValid = ::OpenAPI::fromJsonValue(m_enable_utc_timezone, json[QString("enableUtcTimezone")]);
    m_enable_utc_timezone_isSet = !json[QString("enableUtcTimezone")].isNull() && m_enable_utc_timezone_isValid;
}

QString OAIBusinessDefaultsUpdateModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBusinessDefaultsUpdateModel::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_update_customer_isSet) {
        obj.insert(QString("autoUpdateCustomer"), ::OpenAPI::toJsonValue(m_auto_update_customer));
    }
    if (m_business_notification_isSet) {
        obj.insert(QString("businessNotification"), ::OpenAPI::toJsonValue(m_business_notification));
    }
    if (m_customer_city_isSet) {
        obj.insert(QString("customerCity"), ::OpenAPI::toJsonValue(m_customer_city));
    }
    if (m_customer_state_isSet) {
        obj.insert(QString("customerState"), ::OpenAPI::toJsonValue(m_customer_state));
    }
    if (m_email_info_isSet) {
        obj.insert(QString("emailInfo"), ::OpenAPI::toJsonValue(m_email_info));
    }
    if (m_enable_utc_timezone_isSet) {
        obj.insert(QString("enableUtcTimezone"), ::OpenAPI::toJsonValue(m_enable_utc_timezone));
    }
    return obj;
}

bool OAIBusinessDefaultsUpdateModel::isAutoUpdateCustomer() const {
    return m_auto_update_customer;
}
void OAIBusinessDefaultsUpdateModel::setAutoUpdateCustomer(const bool &auto_update_customer) {
    m_auto_update_customer = auto_update_customer;
    m_auto_update_customer_isSet = true;
}

bool OAIBusinessDefaultsUpdateModel::is_auto_update_customer_Set() const{
    return m_auto_update_customer_isSet;
}

bool OAIBusinessDefaultsUpdateModel::is_auto_update_customer_Valid() const{
    return m_auto_update_customer_isValid;
}

bool OAIBusinessDefaultsUpdateModel::isBusinessNotification() const {
    return m_business_notification;
}
void OAIBusinessDefaultsUpdateModel::setBusinessNotification(const bool &business_notification) {
    m_business_notification = business_notification;
    m_business_notification_isSet = true;
}

bool OAIBusinessDefaultsUpdateModel::is_business_notification_Set() const{
    return m_business_notification_isSet;
}

bool OAIBusinessDefaultsUpdateModel::is_business_notification_Valid() const{
    return m_business_notification_isValid;
}

bool OAIBusinessDefaultsUpdateModel::isCustomerCity() const {
    return m_customer_city;
}
void OAIBusinessDefaultsUpdateModel::setCustomerCity(const bool &customer_city) {
    m_customer_city = customer_city;
    m_customer_city_isSet = true;
}

bool OAIBusinessDefaultsUpdateModel::is_customer_city_Set() const{
    return m_customer_city_isSet;
}

bool OAIBusinessDefaultsUpdateModel::is_customer_city_Valid() const{
    return m_customer_city_isValid;
}

bool OAIBusinessDefaultsUpdateModel::isCustomerState() const {
    return m_customer_state;
}
void OAIBusinessDefaultsUpdateModel::setCustomerState(const bool &customer_state) {
    m_customer_state = customer_state;
    m_customer_state_isSet = true;
}

bool OAIBusinessDefaultsUpdateModel::is_customer_state_Set() const{
    return m_customer_state_isSet;
}

bool OAIBusinessDefaultsUpdateModel::is_customer_state_Valid() const{
    return m_customer_state_isValid;
}

bool OAIBusinessDefaultsUpdateModel::isEmailInfo() const {
    return m_email_info;
}
void OAIBusinessDefaultsUpdateModel::setEmailInfo(const bool &email_info) {
    m_email_info = email_info;
    m_email_info_isSet = true;
}

bool OAIBusinessDefaultsUpdateModel::is_email_info_Set() const{
    return m_email_info_isSet;
}

bool OAIBusinessDefaultsUpdateModel::is_email_info_Valid() const{
    return m_email_info_isValid;
}

bool OAIBusinessDefaultsUpdateModel::isEnableUtcTimezone() const {
    return m_enable_utc_timezone;
}
void OAIBusinessDefaultsUpdateModel::setEnableUtcTimezone(const bool &enable_utc_timezone) {
    m_enable_utc_timezone = enable_utc_timezone;
    m_enable_utc_timezone_isSet = true;
}

bool OAIBusinessDefaultsUpdateModel::is_enable_utc_timezone_Set() const{
    return m_enable_utc_timezone_isSet;
}

bool OAIBusinessDefaultsUpdateModel::is_enable_utc_timezone_Valid() const{
    return m_enable_utc_timezone_isValid;
}

bool OAIBusinessDefaultsUpdateModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_update_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_notification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_utc_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBusinessDefaultsUpdateModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
