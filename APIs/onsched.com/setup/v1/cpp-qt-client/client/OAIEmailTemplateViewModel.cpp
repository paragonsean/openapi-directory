/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailTemplateViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailTemplateViewModel::OAIEmailTemplateViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailTemplateViewModel::OAIEmailTemplateViewModel() {
    this->initializeModel();
}

OAIEmailTemplateViewModel::~OAIEmailTemplateViewModel() {}

void OAIEmailTemplateViewModel::initializeModel() {

    m_customized_isSet = false;
    m_customized_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;
}

void OAIEmailTemplateViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailTemplateViewModel::fromJsonObject(QJsonObject json) {

    m_customized_isValid = ::OpenAPI::fromJsonValue(m_customized, json[QString("customized")]);
    m_customized_isSet = !json[QString("customized")].isNull() && m_customized_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("object")]);
    m_object_isSet = !json[QString("object")].isNull() && m_object_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;
}

QString OAIEmailTemplateViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailTemplateViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_customized_isSet) {
        obj.insert(QString("customized"), ::OpenAPI::toJsonValue(m_customized));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_object_isSet) {
        obj.insert(QString("object"), ::OpenAPI::toJsonValue(m_object));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    return obj;
}

bool OAIEmailTemplateViewModel::isCustomized() const {
    return m_customized;
}
void OAIEmailTemplateViewModel::setCustomized(const bool &customized) {
    m_customized = customized;
    m_customized_isSet = true;
}

bool OAIEmailTemplateViewModel::is_customized_Set() const{
    return m_customized_isSet;
}

bool OAIEmailTemplateViewModel::is_customized_Valid() const{
    return m_customized_isValid;
}

QString OAIEmailTemplateViewModel::getDescription() const {
    return m_description;
}
void OAIEmailTemplateViewModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIEmailTemplateViewModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIEmailTemplateViewModel::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIEmailTemplateViewModel::getName() const {
    return m_name;
}
void OAIEmailTemplateViewModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEmailTemplateViewModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEmailTemplateViewModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEmailTemplateViewModel::getObject() const {
    return m_object;
}
void OAIEmailTemplateViewModel::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAIEmailTemplateViewModel::is_object_Set() const{
    return m_object_isSet;
}

bool OAIEmailTemplateViewModel::is_object_Valid() const{
    return m_object_isValid;
}

QString OAIEmailTemplateViewModel::getScope() const {
    return m_scope;
}
void OAIEmailTemplateViewModel::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIEmailTemplateViewModel::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIEmailTemplateViewModel::is_scope_Valid() const{
    return m_scope_isValid;
}

bool OAIEmailTemplateViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailTemplateViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
