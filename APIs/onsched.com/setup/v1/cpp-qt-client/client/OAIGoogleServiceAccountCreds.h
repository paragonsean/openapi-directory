/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleServiceAccountCreds.h
 *
 * 
 */

#ifndef OAIGoogleServiceAccountCreds_H
#define OAIGoogleServiceAccountCreds_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleServiceAccountCreds : public OAIObject {
public:
    OAIGoogleServiceAccountCreds();
    OAIGoogleServiceAccountCreds(QString json);
    ~OAIGoogleServiceAccountCreds() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthProviderX509CertUrl() const;
    void setAuthProviderX509CertUrl(const QString &auth_provider_x509_cert_url);
    bool is_auth_provider_x509_cert_url_Set() const;
    bool is_auth_provider_x509_cert_url_Valid() const;

    QString getAuthUri() const;
    void setAuthUri(const QString &auth_uri);
    bool is_auth_uri_Set() const;
    bool is_auth_uri_Valid() const;

    QString getClientEmail() const;
    void setClientEmail(const QString &client_email);
    bool is_client_email_Set() const;
    bool is_client_email_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientX509CertUrl() const;
    void setClientX509CertUrl(const QString &client_x509_cert_url);
    bool is_client_x509_cert_url_Set() const;
    bool is_client_x509_cert_url_Valid() const;

    QString getPrivateKey() const;
    void setPrivateKey(const QString &private_key);
    bool is_private_key_Set() const;
    bool is_private_key_Valid() const;

    QString getPrivateKeyId() const;
    void setPrivateKeyId(const QString &private_key_id);
    bool is_private_key_id_Set() const;
    bool is_private_key_id_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getTokenUri() const;
    void setTokenUri(const QString &token_uri);
    bool is_token_uri_Set() const;
    bool is_token_uri_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth_provider_x509_cert_url;
    bool m_auth_provider_x509_cert_url_isSet;
    bool m_auth_provider_x509_cert_url_isValid;

    QString m_auth_uri;
    bool m_auth_uri_isSet;
    bool m_auth_uri_isValid;

    QString m_client_email;
    bool m_client_email_isSet;
    bool m_client_email_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_x509_cert_url;
    bool m_client_x509_cert_url_isSet;
    bool m_client_x509_cert_url_isValid;

    QString m_private_key;
    bool m_private_key_isSet;
    bool m_private_key_isValid;

    QString m_private_key_id;
    bool m_private_key_id_isSet;
    bool m_private_key_id_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_token_uri;
    bool m_token_uri_isSet;
    bool m_token_uri_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleServiceAccountCreds)

#endif // OAIGoogleServiceAccountCreds_H
