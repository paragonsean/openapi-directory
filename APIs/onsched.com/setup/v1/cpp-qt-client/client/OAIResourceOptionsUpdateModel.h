/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceOptionsUpdateModel.h
 *
 * 
 */

#ifndef OAIResourceOptionsUpdateModel_H
#define OAIResourceOptionsUpdateModel_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceOptionsUpdateModel : public OAIObject {
public:
    OAIResourceOptionsUpdateModel();
    OAIResourceOptionsUpdateModel(QString json);
    ~OAIResourceOptionsUpdateModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBioLink() const;
    void setBioLink(const QString &bio_link);
    bool is_bio_link_Set() const;
    bool is_bio_link_Valid() const;

    qint32 getBookingNotification() const;
    void setBookingNotification(const qint32 &booking_notification);
    bool is_booking_notification_Set() const;
    bool is_booking_notification_Valid() const;

    qint32 getCalendarAvailability() const;
    void setCalendarAvailability(const qint32 &calendar_availability);
    bool is_calendar_availability_Set() const;
    bool is_calendar_availability_Valid() const;

    QString getDisplayColor() const;
    void setDisplayColor(const QString &display_color);
    bool is_display_color_Set() const;
    bool is_display_color_Valid() const;

    QDateTime getEffectiveDate() const;
    void setEffectiveDate(const QDateTime &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getGoogleCalendarId() const;
    void setGoogleCalendarId(const QString &google_calendar_id);
    bool is_google_calendar_id_Set() const;
    bool is_google_calendar_id_Valid() const;

    double getHourly() const;
    void setHourly(const double &hourly);
    bool is_hourly_Set() const;
    bool is_hourly_Valid() const;

    bool isIgnoreBusinessHours() const;
    void setIgnoreBusinessHours(const bool &ignore_business_hours);
    bool is_ignore_business_hours_Set() const;
    bool is_ignore_business_hours_Valid() const;

    qint32 getNotificationType() const;
    void setNotificationType(const qint32 &notification_type);
    bool is_notification_type_Set() const;
    bool is_notification_type_Valid() const;

    QString getOutlookCalendarId() const;
    void setOutlookCalendarId(const QString &outlook_calendar_id);
    bool is_outlook_calendar_id_Set() const;
    bool is_outlook_calendar_id_Valid() const;

    qint32 getSortKey() const;
    void setSortKey(const qint32 &sort_key);
    bool is_sort_key_Set() const;
    bool is_sort_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bio_link;
    bool m_bio_link_isSet;
    bool m_bio_link_isValid;

    qint32 m_booking_notification;
    bool m_booking_notification_isSet;
    bool m_booking_notification_isValid;

    qint32 m_calendar_availability;
    bool m_calendar_availability_isSet;
    bool m_calendar_availability_isValid;

    QString m_display_color;
    bool m_display_color_isSet;
    bool m_display_color_isValid;

    QDateTime m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_google_calendar_id;
    bool m_google_calendar_id_isSet;
    bool m_google_calendar_id_isValid;

    double m_hourly;
    bool m_hourly_isSet;
    bool m_hourly_isValid;

    bool m_ignore_business_hours;
    bool m_ignore_business_hours_isSet;
    bool m_ignore_business_hours_isValid;

    qint32 m_notification_type;
    bool m_notification_type_isSet;
    bool m_notification_type_isValid;

    QString m_outlook_calendar_id;
    bool m_outlook_calendar_id_isSet;
    bool m_outlook_calendar_id_isValid;

    qint32 m_sort_key;
    bool m_sort_key_isSet;
    bool m_sort_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceOptionsUpdateModel)

#endif // OAIResourceOptionsUpdateModel_H
