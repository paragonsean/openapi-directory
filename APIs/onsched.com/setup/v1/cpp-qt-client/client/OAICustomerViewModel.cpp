/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerViewModel::OAICustomerViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerViewModel::OAICustomerViewModel() {
    this->initializeModel();
}

OAICustomerViewModel::~OAICustomerViewModel() {}

void OAICustomerViewModel::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_birthdate_isSet = false;
    m_birthdate_isValid = false;

    m_business_name_isSet = false;
    m_business_name_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_on_isSet = false;
    m_created_on_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_deleted_status_isSet = false;
    m_deleted_status_isValid = false;

    m_deleted_time_isSet = false;
    m_deleted_time_isValid = false;

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_email_info_isSet = false;
    m_email_info_isValid = false;

    m_email_promotion_isSet = false;
    m_email_promotion_isValid = false;

    m_firstname_isSet = false;
    m_firstname_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_invite_email_sent_isSet = false;
    m_invite_email_sent_isValid = false;

    m_last_visit_date_isSet = false;
    m_last_visit_date_isValid = false;

    m_lastname_isSet = false;
    m_lastname_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_modified_by_isSet = false;
    m_modified_by_isValid = false;

    m_modified_on_isSet = false;
    m_modified_on_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notification_type_isSet = false;
    m_notification_type_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;

    m_registered_by_isSet = false;
    m_registered_by_isValid = false;

    m_registration_date_isSet = false;
    m_registration_date_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_stripe_customer_id_isSet = false;
    m_stripe_customer_id_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;

    m_verification_date_isSet = false;
    m_verification_date_isValid = false;

    m_verified_by_isSet = false;
    m_verified_by_isValid = false;

    m_welcome_email_sent_isSet = false;
    m_welcome_email_sent_isValid = false;
}

void OAICustomerViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerViewModel::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_birthdate_isValid = ::OpenAPI::fromJsonValue(m_birthdate, json[QString("birthdate")]);
    m_birthdate_isSet = !json[QString("birthdate")].isNull() && m_birthdate_isValid;

    m_business_name_isValid = ::OpenAPI::fromJsonValue(m_business_name, json[QString("businessName")]);
    m_business_name_isSet = !json[QString("businessName")].isNull() && m_business_name_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_created_on_isValid = ::OpenAPI::fromJsonValue(m_created_on, json[QString("createdOn")]);
    m_created_on_isSet = !json[QString("createdOn")].isNull() && m_created_on_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("customFields")]);
    m_custom_fields_isSet = !json[QString("customFields")].isNull() && m_custom_fields_isValid;

    m_deleted_status_isValid = ::OpenAPI::fromJsonValue(m_deleted_status, json[QString("deletedStatus")]);
    m_deleted_status_isSet = !json[QString("deletedStatus")].isNull() && m_deleted_status_isValid;

    m_deleted_time_isValid = ::OpenAPI::fromJsonValue(m_deleted_time, json[QString("deletedTime")]);
    m_deleted_time_isSet = !json[QString("deletedTime")].isNull() && m_deleted_time_isValid;

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_email_info_isValid = ::OpenAPI::fromJsonValue(m_email_info, json[QString("emailInfo")]);
    m_email_info_isSet = !json[QString("emailInfo")].isNull() && m_email_info_isValid;

    m_email_promotion_isValid = ::OpenAPI::fromJsonValue(m_email_promotion, json[QString("emailPromotion")]);
    m_email_promotion_isSet = !json[QString("emailPromotion")].isNull() && m_email_promotion_isValid;

    m_firstname_isValid = ::OpenAPI::fromJsonValue(m_firstname, json[QString("firstname")]);
    m_firstname_isSet = !json[QString("firstname")].isNull() && m_firstname_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("groupId")]);
    m_group_id_isSet = !json[QString("groupId")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_invite_email_sent_isValid = ::OpenAPI::fromJsonValue(m_invite_email_sent, json[QString("inviteEmailSent")]);
    m_invite_email_sent_isSet = !json[QString("inviteEmailSent")].isNull() && m_invite_email_sent_isValid;

    m_last_visit_date_isValid = ::OpenAPI::fromJsonValue(m_last_visit_date, json[QString("lastVisitDate")]);
    m_last_visit_date_isSet = !json[QString("lastVisitDate")].isNull() && m_last_visit_date_isValid;

    m_lastname_isValid = ::OpenAPI::fromJsonValue(m_lastname, json[QString("lastname")]);
    m_lastname_isSet = !json[QString("lastname")].isNull() && m_lastname_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;

    m_modified_by_isValid = ::OpenAPI::fromJsonValue(m_modified_by, json[QString("modifiedBy")]);
    m_modified_by_isSet = !json[QString("modifiedBy")].isNull() && m_modified_by_isValid;

    m_modified_on_isValid = ::OpenAPI::fromJsonValue(m_modified_on, json[QString("modifiedOn")]);
    m_modified_on_isSet = !json[QString("modifiedOn")].isNull() && m_modified_on_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notification_type_isValid = ::OpenAPI::fromJsonValue(m_notification_type, json[QString("notificationType")]);
    m_notification_type_isSet = !json[QString("notificationType")].isNull() && m_notification_type_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("object")]);
    m_object_isSet = !json[QString("object")].isNull() && m_object_isValid;

    m_registered_by_isValid = ::OpenAPI::fromJsonValue(m_registered_by, json[QString("registeredBy")]);
    m_registered_by_isSet = !json[QString("registeredBy")].isNull() && m_registered_by_isValid;

    m_registration_date_isValid = ::OpenAPI::fromJsonValue(m_registration_date, json[QString("registrationDate")]);
    m_registration_date_isSet = !json[QString("registrationDate")].isNull() && m_registration_date_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceId")]);
    m_resource_id_isSet = !json[QString("resourceId")].isNull() && m_resource_id_isValid;

    m_stripe_customer_id_isValid = ::OpenAPI::fromJsonValue(m_stripe_customer_id, json[QString("stripeCustomerId")]);
    m_stripe_customer_id_isSet = !json[QString("stripeCustomerId")].isNull() && m_stripe_customer_id_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;

    m_verification_date_isValid = ::OpenAPI::fromJsonValue(m_verification_date, json[QString("verificationDate")]);
    m_verification_date_isSet = !json[QString("verificationDate")].isNull() && m_verification_date_isValid;

    m_verified_by_isValid = ::OpenAPI::fromJsonValue(m_verified_by, json[QString("verifiedBy")]);
    m_verified_by_isSet = !json[QString("verifiedBy")].isNull() && m_verified_by_isValid;

    m_welcome_email_sent_isValid = ::OpenAPI::fromJsonValue(m_welcome_email_sent, json[QString("welcomeEmailSent")]);
    m_welcome_email_sent_isSet = !json[QString("welcomeEmailSent")].isNull() && m_welcome_email_sent_isValid;
}

QString OAICustomerViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_birthdate_isSet) {
        obj.insert(QString("birthdate"), ::OpenAPI::toJsonValue(m_birthdate));
    }
    if (m_business_name_isSet) {
        obj.insert(QString("businessName"), ::OpenAPI::toJsonValue(m_business_name));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_contact.isSet()) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_on_isSet) {
        obj.insert(QString("createdOn"), ::OpenAPI::toJsonValue(m_created_on));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("customFields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_deleted_status_isSet) {
        obj.insert(QString("deletedStatus"), ::OpenAPI::toJsonValue(m_deleted_status));
    }
    if (m_deleted_time_isSet) {
        obj.insert(QString("deletedTime"), ::OpenAPI::toJsonValue(m_deleted_time));
    }
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_email_info_isSet) {
        obj.insert(QString("emailInfo"), ::OpenAPI::toJsonValue(m_email_info));
    }
    if (m_email_promotion_isSet) {
        obj.insert(QString("emailPromotion"), ::OpenAPI::toJsonValue(m_email_promotion));
    }
    if (m_firstname_isSet) {
        obj.insert(QString("firstname"), ::OpenAPI::toJsonValue(m_firstname));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("groupId"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_invite_email_sent_isSet) {
        obj.insert(QString("inviteEmailSent"), ::OpenAPI::toJsonValue(m_invite_email_sent));
    }
    if (m_last_visit_date_isSet) {
        obj.insert(QString("lastVisitDate"), ::OpenAPI::toJsonValue(m_last_visit_date));
    }
    if (m_lastname_isSet) {
        obj.insert(QString("lastname"), ::OpenAPI::toJsonValue(m_lastname));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_modified_by_isSet) {
        obj.insert(QString("modifiedBy"), ::OpenAPI::toJsonValue(m_modified_by));
    }
    if (m_modified_on_isSet) {
        obj.insert(QString("modifiedOn"), ::OpenAPI::toJsonValue(m_modified_on));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notification_type_isSet) {
        obj.insert(QString("notificationType"), ::OpenAPI::toJsonValue(m_notification_type));
    }
    if (m_object_isSet) {
        obj.insert(QString("object"), ::OpenAPI::toJsonValue(m_object));
    }
    if (m_registered_by_isSet) {
        obj.insert(QString("registeredBy"), ::OpenAPI::toJsonValue(m_registered_by));
    }
    if (m_registration_date_isSet) {
        obj.insert(QString("registrationDate"), ::OpenAPI::toJsonValue(m_registration_date));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("resourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_stripe_customer_id_isSet) {
        obj.insert(QString("stripeCustomerId"), ::OpenAPI::toJsonValue(m_stripe_customer_id));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    if (m_verification_date_isSet) {
        obj.insert(QString("verificationDate"), ::OpenAPI::toJsonValue(m_verification_date));
    }
    if (m_verified_by_isSet) {
        obj.insert(QString("verifiedBy"), ::OpenAPI::toJsonValue(m_verified_by));
    }
    if (m_welcome_email_sent_isSet) {
        obj.insert(QString("welcomeEmailSent"), ::OpenAPI::toJsonValue(m_welcome_email_sent));
    }
    return obj;
}

OAIAddressViewModel OAICustomerViewModel::getAddress() const {
    return m_address;
}
void OAICustomerViewModel::setAddress(const OAIAddressViewModel &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICustomerViewModel::is_address_Set() const{
    return m_address_isSet;
}

bool OAICustomerViewModel::is_address_Valid() const{
    return m_address_isValid;
}

QString OAICustomerViewModel::getBirthdate() const {
    return m_birthdate;
}
void OAICustomerViewModel::setBirthdate(const QString &birthdate) {
    m_birthdate = birthdate;
    m_birthdate_isSet = true;
}

bool OAICustomerViewModel::is_birthdate_Set() const{
    return m_birthdate_isSet;
}

bool OAICustomerViewModel::is_birthdate_Valid() const{
    return m_birthdate_isValid;
}

QString OAICustomerViewModel::getBusinessName() const {
    return m_business_name;
}
void OAICustomerViewModel::setBusinessName(const QString &business_name) {
    m_business_name = business_name;
    m_business_name_isSet = true;
}

bool OAICustomerViewModel::is_business_name_Set() const{
    return m_business_name_isSet;
}

bool OAICustomerViewModel::is_business_name_Valid() const{
    return m_business_name_isValid;
}

QString OAICustomerViewModel::getCompanyName() const {
    return m_company_name;
}
void OAICustomerViewModel::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICustomerViewModel::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICustomerViewModel::is_company_name_Valid() const{
    return m_company_name_isValid;
}

OAIContactViewModel OAICustomerViewModel::getContact() const {
    return m_contact;
}
void OAICustomerViewModel::setContact(const OAIContactViewModel &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAICustomerViewModel::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAICustomerViewModel::is_contact_Valid() const{
    return m_contact_isValid;
}

QString OAICustomerViewModel::getCreatedBy() const {
    return m_created_by;
}
void OAICustomerViewModel::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAICustomerViewModel::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAICustomerViewModel::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAICustomerViewModel::getCreatedOn() const {
    return m_created_on;
}
void OAICustomerViewModel::setCreatedOn(const QString &created_on) {
    m_created_on = created_on;
    m_created_on_isSet = true;
}

bool OAICustomerViewModel::is_created_on_Set() const{
    return m_created_on_isSet;
}

bool OAICustomerViewModel::is_created_on_Valid() const{
    return m_created_on_isValid;
}

QMap<QString, OAICustomFieldViewModel> OAICustomerViewModel::getCustomFields() const {
    return m_custom_fields;
}
void OAICustomerViewModel::setCustomFields(const QMap<QString, OAICustomFieldViewModel> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICustomerViewModel::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICustomerViewModel::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

bool OAICustomerViewModel::isDeletedStatus() const {
    return m_deleted_status;
}
void OAICustomerViewModel::setDeletedStatus(const bool &deleted_status) {
    m_deleted_status = deleted_status;
    m_deleted_status_isSet = true;
}

bool OAICustomerViewModel::is_deleted_status_Set() const{
    return m_deleted_status_isSet;
}

bool OAICustomerViewModel::is_deleted_status_Valid() const{
    return m_deleted_status_isValid;
}

QString OAICustomerViewModel::getDeletedTime() const {
    return m_deleted_time;
}
void OAICustomerViewModel::setDeletedTime(const QString &deleted_time) {
    m_deleted_time = deleted_time;
    m_deleted_time_isSet = true;
}

bool OAICustomerViewModel::is_deleted_time_Set() const{
    return m_deleted_time_isSet;
}

bool OAICustomerViewModel::is_deleted_time_Valid() const{
    return m_deleted_time_isValid;
}

bool OAICustomerViewModel::isDisabled() const {
    return m_disabled;
}
void OAICustomerViewModel::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAICustomerViewModel::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAICustomerViewModel::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QString OAICustomerViewModel::getEmail() const {
    return m_email;
}
void OAICustomerViewModel::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICustomerViewModel::is_email_Set() const{
    return m_email_isSet;
}

bool OAICustomerViewModel::is_email_Valid() const{
    return m_email_isValid;
}

bool OAICustomerViewModel::isEmailInfo() const {
    return m_email_info;
}
void OAICustomerViewModel::setEmailInfo(const bool &email_info) {
    m_email_info = email_info;
    m_email_info_isSet = true;
}

bool OAICustomerViewModel::is_email_info_Set() const{
    return m_email_info_isSet;
}

bool OAICustomerViewModel::is_email_info_Valid() const{
    return m_email_info_isValid;
}

bool OAICustomerViewModel::isEmailPromotion() const {
    return m_email_promotion;
}
void OAICustomerViewModel::setEmailPromotion(const bool &email_promotion) {
    m_email_promotion = email_promotion;
    m_email_promotion_isSet = true;
}

bool OAICustomerViewModel::is_email_promotion_Set() const{
    return m_email_promotion_isSet;
}

bool OAICustomerViewModel::is_email_promotion_Valid() const{
    return m_email_promotion_isValid;
}

QString OAICustomerViewModel::getFirstname() const {
    return m_firstname;
}
void OAICustomerViewModel::setFirstname(const QString &firstname) {
    m_firstname = firstname;
    m_firstname_isSet = true;
}

bool OAICustomerViewModel::is_firstname_Set() const{
    return m_firstname_isSet;
}

bool OAICustomerViewModel::is_firstname_Valid() const{
    return m_firstname_isValid;
}

QString OAICustomerViewModel::getGender() const {
    return m_gender;
}
void OAICustomerViewModel::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAICustomerViewModel::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAICustomerViewModel::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAICustomerViewModel::getGroupId() const {
    return m_group_id;
}
void OAICustomerViewModel::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAICustomerViewModel::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAICustomerViewModel::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAICustomerViewModel::getId() const {
    return m_id;
}
void OAICustomerViewModel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomerViewModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomerViewModel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomerViewModel::getInviteEmailSent() const {
    return m_invite_email_sent;
}
void OAICustomerViewModel::setInviteEmailSent(const QString &invite_email_sent) {
    m_invite_email_sent = invite_email_sent;
    m_invite_email_sent_isSet = true;
}

bool OAICustomerViewModel::is_invite_email_sent_Set() const{
    return m_invite_email_sent_isSet;
}

bool OAICustomerViewModel::is_invite_email_sent_Valid() const{
    return m_invite_email_sent_isValid;
}

QString OAICustomerViewModel::getLastVisitDate() const {
    return m_last_visit_date;
}
void OAICustomerViewModel::setLastVisitDate(const QString &last_visit_date) {
    m_last_visit_date = last_visit_date;
    m_last_visit_date_isSet = true;
}

bool OAICustomerViewModel::is_last_visit_date_Set() const{
    return m_last_visit_date_isSet;
}

bool OAICustomerViewModel::is_last_visit_date_Valid() const{
    return m_last_visit_date_isValid;
}

QString OAICustomerViewModel::getLastname() const {
    return m_lastname;
}
void OAICustomerViewModel::setLastname(const QString &lastname) {
    m_lastname = lastname;
    m_lastname_isSet = true;
}

bool OAICustomerViewModel::is_lastname_Set() const{
    return m_lastname_isSet;
}

bool OAICustomerViewModel::is_lastname_Valid() const{
    return m_lastname_isValid;
}

QString OAICustomerViewModel::getLatitude() const {
    return m_latitude;
}
void OAICustomerViewModel::setLatitude(const QString &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAICustomerViewModel::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAICustomerViewModel::is_latitude_Valid() const{
    return m_latitude_isValid;
}

QString OAICustomerViewModel::getLocationId() const {
    return m_location_id;
}
void OAICustomerViewModel::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAICustomerViewModel::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAICustomerViewModel::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAICustomerViewModel::getLongitude() const {
    return m_longitude;
}
void OAICustomerViewModel::setLongitude(const QString &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAICustomerViewModel::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAICustomerViewModel::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAICustomerViewModel::getModifiedBy() const {
    return m_modified_by;
}
void OAICustomerViewModel::setModifiedBy(const QString &modified_by) {
    m_modified_by = modified_by;
    m_modified_by_isSet = true;
}

bool OAICustomerViewModel::is_modified_by_Set() const{
    return m_modified_by_isSet;
}

bool OAICustomerViewModel::is_modified_by_Valid() const{
    return m_modified_by_isValid;
}

QString OAICustomerViewModel::getModifiedOn() const {
    return m_modified_on;
}
void OAICustomerViewModel::setModifiedOn(const QString &modified_on) {
    m_modified_on = modified_on;
    m_modified_on_isSet = true;
}

bool OAICustomerViewModel::is_modified_on_Set() const{
    return m_modified_on_isSet;
}

bool OAICustomerViewModel::is_modified_on_Valid() const{
    return m_modified_on_isValid;
}

QString OAICustomerViewModel::getName() const {
    return m_name;
}
void OAICustomerViewModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomerViewModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomerViewModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICustomerViewModel::getNotificationType() const {
    return m_notification_type;
}
void OAICustomerViewModel::setNotificationType(const QString &notification_type) {
    m_notification_type = notification_type;
    m_notification_type_isSet = true;
}

bool OAICustomerViewModel::is_notification_type_Set() const{
    return m_notification_type_isSet;
}

bool OAICustomerViewModel::is_notification_type_Valid() const{
    return m_notification_type_isValid;
}

QString OAICustomerViewModel::getObject() const {
    return m_object;
}
void OAICustomerViewModel::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAICustomerViewModel::is_object_Set() const{
    return m_object_isSet;
}

bool OAICustomerViewModel::is_object_Valid() const{
    return m_object_isValid;
}

QString OAICustomerViewModel::getRegisteredBy() const {
    return m_registered_by;
}
void OAICustomerViewModel::setRegisteredBy(const QString &registered_by) {
    m_registered_by = registered_by;
    m_registered_by_isSet = true;
}

bool OAICustomerViewModel::is_registered_by_Set() const{
    return m_registered_by_isSet;
}

bool OAICustomerViewModel::is_registered_by_Valid() const{
    return m_registered_by_isValid;
}

QString OAICustomerViewModel::getRegistrationDate() const {
    return m_registration_date;
}
void OAICustomerViewModel::setRegistrationDate(const QString &registration_date) {
    m_registration_date = registration_date;
    m_registration_date_isSet = true;
}

bool OAICustomerViewModel::is_registration_date_Set() const{
    return m_registration_date_isSet;
}

bool OAICustomerViewModel::is_registration_date_Valid() const{
    return m_registration_date_isValid;
}

QString OAICustomerViewModel::getResourceId() const {
    return m_resource_id;
}
void OAICustomerViewModel::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAICustomerViewModel::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAICustomerViewModel::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

QString OAICustomerViewModel::getStripeCustomerId() const {
    return m_stripe_customer_id;
}
void OAICustomerViewModel::setStripeCustomerId(const QString &stripe_customer_id) {
    m_stripe_customer_id = stripe_customer_id;
    m_stripe_customer_id_isSet = true;
}

bool OAICustomerViewModel::is_stripe_customer_id_Set() const{
    return m_stripe_customer_id_isSet;
}

bool OAICustomerViewModel::is_stripe_customer_id_Valid() const{
    return m_stripe_customer_id_isValid;
}

QString OAICustomerViewModel::getSubscriptionId() const {
    return m_subscription_id;
}
void OAICustomerViewModel::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAICustomerViewModel::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAICustomerViewModel::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

QString OAICustomerViewModel::getVerificationDate() const {
    return m_verification_date;
}
void OAICustomerViewModel::setVerificationDate(const QString &verification_date) {
    m_verification_date = verification_date;
    m_verification_date_isSet = true;
}

bool OAICustomerViewModel::is_verification_date_Set() const{
    return m_verification_date_isSet;
}

bool OAICustomerViewModel::is_verification_date_Valid() const{
    return m_verification_date_isValid;
}

QString OAICustomerViewModel::getVerifiedBy() const {
    return m_verified_by;
}
void OAICustomerViewModel::setVerifiedBy(const QString &verified_by) {
    m_verified_by = verified_by;
    m_verified_by_isSet = true;
}

bool OAICustomerViewModel::is_verified_by_Set() const{
    return m_verified_by_isSet;
}

bool OAICustomerViewModel::is_verified_by_Valid() const{
    return m_verified_by_isValid;
}

QString OAICustomerViewModel::getWelcomeEmailSent() const {
    return m_welcome_email_sent;
}
void OAICustomerViewModel::setWelcomeEmailSent(const QString &welcome_email_sent) {
    m_welcome_email_sent = welcome_email_sent;
    m_welcome_email_sent_isSet = true;
}

bool OAICustomerViewModel::is_welcome_email_sent_Set() const{
    return m_welcome_email_sent_isSet;
}

bool OAICustomerViewModel::is_welcome_email_sent_Valid() const{
    return m_welcome_email_sent_isValid;
}

bool OAICustomerViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_birthdate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_promotion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_firstname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invite_email_sent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_visit_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lastname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registered_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stripe_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_welcome_email_sent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
