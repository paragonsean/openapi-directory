/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBusinessHoursUpdateModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBusinessHoursUpdateModel::OAIBusinessHoursUpdateModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBusinessHoursUpdateModel::OAIBusinessHoursUpdateModel() {
    this->initializeModel();
}

OAIBusinessHoursUpdateModel::~OAIBusinessHoursUpdateModel() {}

void OAIBusinessHoursUpdateModel::initializeModel() {

    m_fri_isSet = false;
    m_fri_isValid = false;

    m_mon_isSet = false;
    m_mon_isValid = false;

    m_sat_isSet = false;
    m_sat_isValid = false;

    m_sun_isSet = false;
    m_sun_isValid = false;

    m_thu_isSet = false;
    m_thu_isValid = false;

    m_tue_isSet = false;
    m_tue_isValid = false;

    m_wed_isSet = false;
    m_wed_isValid = false;
}

void OAIBusinessHoursUpdateModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBusinessHoursUpdateModel::fromJsonObject(QJsonObject json) {

    m_fri_isValid = ::OpenAPI::fromJsonValue(m_fri, json[QString("fri")]);
    m_fri_isSet = !json[QString("fri")].isNull() && m_fri_isValid;

    m_mon_isValid = ::OpenAPI::fromJsonValue(m_mon, json[QString("mon")]);
    m_mon_isSet = !json[QString("mon")].isNull() && m_mon_isValid;

    m_sat_isValid = ::OpenAPI::fromJsonValue(m_sat, json[QString("sat")]);
    m_sat_isSet = !json[QString("sat")].isNull() && m_sat_isValid;

    m_sun_isValid = ::OpenAPI::fromJsonValue(m_sun, json[QString("sun")]);
    m_sun_isSet = !json[QString("sun")].isNull() && m_sun_isValid;

    m_thu_isValid = ::OpenAPI::fromJsonValue(m_thu, json[QString("thu")]);
    m_thu_isSet = !json[QString("thu")].isNull() && m_thu_isValid;

    m_tue_isValid = ::OpenAPI::fromJsonValue(m_tue, json[QString("tue")]);
    m_tue_isSet = !json[QString("tue")].isNull() && m_tue_isValid;

    m_wed_isValid = ::OpenAPI::fromJsonValue(m_wed, json[QString("wed")]);
    m_wed_isSet = !json[QString("wed")].isNull() && m_wed_isValid;
}

QString OAIBusinessHoursUpdateModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBusinessHoursUpdateModel::asJsonObject() const {
    QJsonObject obj;
    if (m_fri.isSet()) {
        obj.insert(QString("fri"), ::OpenAPI::toJsonValue(m_fri));
    }
    if (m_mon.isSet()) {
        obj.insert(QString("mon"), ::OpenAPI::toJsonValue(m_mon));
    }
    if (m_sat.isSet()) {
        obj.insert(QString("sat"), ::OpenAPI::toJsonValue(m_sat));
    }
    if (m_sun.isSet()) {
        obj.insert(QString("sun"), ::OpenAPI::toJsonValue(m_sun));
    }
    if (m_thu.isSet()) {
        obj.insert(QString("thu"), ::OpenAPI::toJsonValue(m_thu));
    }
    if (m_tue.isSet()) {
        obj.insert(QString("tue"), ::OpenAPI::toJsonValue(m_tue));
    }
    if (m_wed.isSet()) {
        obj.insert(QString("wed"), ::OpenAPI::toJsonValue(m_wed));
    }
    return obj;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getFri() const {
    return m_fri;
}
void OAIBusinessHoursUpdateModel::setFri(const OAIBusinessHourInputModel &fri) {
    m_fri = fri;
    m_fri_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_fri_Set() const{
    return m_fri_isSet;
}

bool OAIBusinessHoursUpdateModel::is_fri_Valid() const{
    return m_fri_isValid;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getMon() const {
    return m_mon;
}
void OAIBusinessHoursUpdateModel::setMon(const OAIBusinessHourInputModel &mon) {
    m_mon = mon;
    m_mon_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_mon_Set() const{
    return m_mon_isSet;
}

bool OAIBusinessHoursUpdateModel::is_mon_Valid() const{
    return m_mon_isValid;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getSat() const {
    return m_sat;
}
void OAIBusinessHoursUpdateModel::setSat(const OAIBusinessHourInputModel &sat) {
    m_sat = sat;
    m_sat_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_sat_Set() const{
    return m_sat_isSet;
}

bool OAIBusinessHoursUpdateModel::is_sat_Valid() const{
    return m_sat_isValid;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getSun() const {
    return m_sun;
}
void OAIBusinessHoursUpdateModel::setSun(const OAIBusinessHourInputModel &sun) {
    m_sun = sun;
    m_sun_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_sun_Set() const{
    return m_sun_isSet;
}

bool OAIBusinessHoursUpdateModel::is_sun_Valid() const{
    return m_sun_isValid;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getThu() const {
    return m_thu;
}
void OAIBusinessHoursUpdateModel::setThu(const OAIBusinessHourInputModel &thu) {
    m_thu = thu;
    m_thu_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_thu_Set() const{
    return m_thu_isSet;
}

bool OAIBusinessHoursUpdateModel::is_thu_Valid() const{
    return m_thu_isValid;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getTue() const {
    return m_tue;
}
void OAIBusinessHoursUpdateModel::setTue(const OAIBusinessHourInputModel &tue) {
    m_tue = tue;
    m_tue_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_tue_Set() const{
    return m_tue_isSet;
}

bool OAIBusinessHoursUpdateModel::is_tue_Valid() const{
    return m_tue_isValid;
}

OAIBusinessHourInputModel OAIBusinessHoursUpdateModel::getWed() const {
    return m_wed;
}
void OAIBusinessHoursUpdateModel::setWed(const OAIBusinessHourInputModel &wed) {
    m_wed = wed;
    m_wed_isSet = true;
}

bool OAIBusinessHoursUpdateModel::is_wed_Set() const{
    return m_wed_isSet;
}

bool OAIBusinessHoursUpdateModel::is_wed_Valid() const{
    return m_wed_isValid;
}

bool OAIBusinessHoursUpdateModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fri.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sat.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sun.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_thu.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_wed.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBusinessHoursUpdateModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
