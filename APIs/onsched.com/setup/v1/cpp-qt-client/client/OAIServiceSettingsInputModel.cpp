/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceSettingsInputModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceSettingsInputModel::OAIServiceSettingsInputModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceSettingsInputModel::OAIServiceSettingsInputModel() {
    this->initializeModel();
}

OAIServiceSettingsInputModel::~OAIServiceSettingsInputModel() {}

void OAIServiceSettingsInputModel::initializeModel() {

    m_book_ahead_unit_isSet = false;
    m_book_ahead_unit_isValid = false;

    m_book_ahead_value_isSet = false;
    m_book_ahead_value_isValid = false;

    m_book_in_advance_isSet = false;
    m_book_in_advance_isValid = false;
}

void OAIServiceSettingsInputModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceSettingsInputModel::fromJsonObject(QJsonObject json) {

    m_book_ahead_unit_isValid = ::OpenAPI::fromJsonValue(m_book_ahead_unit, json[QString("bookAheadUnit")]);
    m_book_ahead_unit_isSet = !json[QString("bookAheadUnit")].isNull() && m_book_ahead_unit_isValid;

    m_book_ahead_value_isValid = ::OpenAPI::fromJsonValue(m_book_ahead_value, json[QString("bookAheadValue")]);
    m_book_ahead_value_isSet = !json[QString("bookAheadValue")].isNull() && m_book_ahead_value_isValid;

    m_book_in_advance_isValid = ::OpenAPI::fromJsonValue(m_book_in_advance, json[QString("bookInAdvance")]);
    m_book_in_advance_isSet = !json[QString("bookInAdvance")].isNull() && m_book_in_advance_isValid;
}

QString OAIServiceSettingsInputModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceSettingsInputModel::asJsonObject() const {
    QJsonObject obj;
    if (m_book_ahead_unit_isSet) {
        obj.insert(QString("bookAheadUnit"), ::OpenAPI::toJsonValue(m_book_ahead_unit));
    }
    if (m_book_ahead_value_isSet) {
        obj.insert(QString("bookAheadValue"), ::OpenAPI::toJsonValue(m_book_ahead_value));
    }
    if (m_book_in_advance_isSet) {
        obj.insert(QString("bookInAdvance"), ::OpenAPI::toJsonValue(m_book_in_advance));
    }
    return obj;
}

qint32 OAIServiceSettingsInputModel::getBookAheadUnit() const {
    return m_book_ahead_unit;
}
void OAIServiceSettingsInputModel::setBookAheadUnit(const qint32 &book_ahead_unit) {
    m_book_ahead_unit = book_ahead_unit;
    m_book_ahead_unit_isSet = true;
}

bool OAIServiceSettingsInputModel::is_book_ahead_unit_Set() const{
    return m_book_ahead_unit_isSet;
}

bool OAIServiceSettingsInputModel::is_book_ahead_unit_Valid() const{
    return m_book_ahead_unit_isValid;
}

qint32 OAIServiceSettingsInputModel::getBookAheadValue() const {
    return m_book_ahead_value;
}
void OAIServiceSettingsInputModel::setBookAheadValue(const qint32 &book_ahead_value) {
    m_book_ahead_value = book_ahead_value;
    m_book_ahead_value_isSet = true;
}

bool OAIServiceSettingsInputModel::is_book_ahead_value_Set() const{
    return m_book_ahead_value_isSet;
}

bool OAIServiceSettingsInputModel::is_book_ahead_value_Valid() const{
    return m_book_ahead_value_isValid;
}

qint32 OAIServiceSettingsInputModel::getBookInAdvance() const {
    return m_book_in_advance;
}
void OAIServiceSettingsInputModel::setBookInAdvance(const qint32 &book_in_advance) {
    m_book_in_advance = book_in_advance;
    m_book_in_advance_isSet = true;
}

bool OAIServiceSettingsInputModel::is_book_in_advance_Set() const{
    return m_book_in_advance_isSet;
}

bool OAIServiceSettingsInputModel::is_book_in_advance_Valid() const{
    return m_book_in_advance_isValid;
}

bool OAIServiceSettingsInputModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_book_ahead_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_ahead_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_in_advance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceSettingsInputModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
