/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOnlineSettingsViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOnlineSettingsViewModel::OAIOnlineSettingsViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOnlineSettingsViewModel::OAIOnlineSettingsViewModel() {
    this->initializeModel();
}

OAIOnlineSettingsViewModel::~OAIOnlineSettingsViewModel() {}

void OAIOnlineSettingsViewModel::initializeModel() {

    m_availability_form_isSet = false;
    m_availability_form_isValid = false;

    m_book_ahead_unit_isSet = false;
    m_book_ahead_unit_isValid = false;

    m_book_ahead_value_isSet = false;
    m_book_ahead_value_isValid = false;

    m_book_in_advance_isSet = false;
    m_book_in_advance_isValid = false;

    m_book_with_account_isSet = false;
    m_book_with_account_isValid = false;

    m_booking_confirmation_message_isSet = false;
    m_booking_confirmation_message_isValid = false;

    m_booking_message_isSet = false;
    m_booking_message_isValid = false;

    m_booking_policy_isSet = false;
    m_booking_policy_isValid = false;

    m_booking_timer_mins_isSet = false;
    m_booking_timer_mins_isValid = false;

    m_business_id_isSet = false;
    m_business_id_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_customer_bookings_per_day_isSet = false;
    m_customer_bookings_per_day_isValid = false;

    m_customer_verification_isSet = false;
    m_customer_verification_isValid = false;

    m_default_service_isSet = false;
    m_default_service_isValid = false;

    m_default_to_customer_timezone_isSet = false;
    m_default_to_customer_timezone_isValid = false;

    m_disable_authorization_isSet = false;
    m_disable_authorization_isValid = false;

    m_enable_world_timezones_isSet = false;
    m_enable_world_timezones_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_family_members_enabled_isSet = false;
    m_family_members_enabled_isValid = false;

    m_first_available_isSet = false;
    m_first_available_isValid = false;

    m_form_flow_isSet = false;
    m_form_flow_isValid = false;

    m_hide_bread_crumb_nav_isSet = false;
    m_hide_bread_crumb_nav_isValid = false;

    m_hide_continue_booking_isSet = false;
    m_hide_continue_booking_isValid = false;

    m_hide_location_nav_isSet = false;
    m_hide_location_nav_isValid = false;

    m_hide_nav_bar_isSet = false;
    m_hide_nav_bar_isValid = false;

    m_hide_service_groups_nav_isSet = false;
    m_hide_service_groups_nav_isValid = false;

    m_hide_services_nav_isSet = false;
    m_hide_services_nav_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_late_cancel_action_isSet = false;
    m_late_cancel_action_isValid = false;

    m_late_cancel_hours_isSet = false;
    m_late_cancel_hours_isValid = false;

    m_late_reschedule_action_isSet = false;
    m_late_reschedule_action_isValid = false;

    m_late_reschedule_hours_isSet = false;
    m_late_reschedule_hours_isValid = false;

    m_live_mode_isSet = false;
    m_live_mode_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;

    m_resource_any_label_isSet = false;
    m_resource_any_label_isValid = false;

    m_resource_label_isSet = false;
    m_resource_label_isValid = false;

    m_resource_selection_isSet = false;
    m_resource_selection_isValid = false;

    m_return_to_availability_isSet = false;
    m_return_to_availability_isValid = false;

    m_return_to_service_isSet = false;
    m_return_to_service_isValid = false;

    m_service_label_isSet = false;
    m_service_label_isValid = false;

    m_show_business_logo_isSet = false;
    m_show_business_logo_isValid = false;

    m_show_on_sched_logo_isSet = false;
    m_show_on_sched_logo_isValid = false;

    m_show_service_groups_isSet = false;
    m_show_service_groups_isValid = false;
}

void OAIOnlineSettingsViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOnlineSettingsViewModel::fromJsonObject(QJsonObject json) {

    m_availability_form_isValid = ::OpenAPI::fromJsonValue(m_availability_form, json[QString("availabilityForm")]);
    m_availability_form_isSet = !json[QString("availabilityForm")].isNull() && m_availability_form_isValid;

    m_book_ahead_unit_isValid = ::OpenAPI::fromJsonValue(m_book_ahead_unit, json[QString("bookAheadUnit")]);
    m_book_ahead_unit_isSet = !json[QString("bookAheadUnit")].isNull() && m_book_ahead_unit_isValid;

    m_book_ahead_value_isValid = ::OpenAPI::fromJsonValue(m_book_ahead_value, json[QString("bookAheadValue")]);
    m_book_ahead_value_isSet = !json[QString("bookAheadValue")].isNull() && m_book_ahead_value_isValid;

    m_book_in_advance_isValid = ::OpenAPI::fromJsonValue(m_book_in_advance, json[QString("bookInAdvance")]);
    m_book_in_advance_isSet = !json[QString("bookInAdvance")].isNull() && m_book_in_advance_isValid;

    m_book_with_account_isValid = ::OpenAPI::fromJsonValue(m_book_with_account, json[QString("bookWithAccount")]);
    m_book_with_account_isSet = !json[QString("bookWithAccount")].isNull() && m_book_with_account_isValid;

    m_booking_confirmation_message_isValid = ::OpenAPI::fromJsonValue(m_booking_confirmation_message, json[QString("bookingConfirmationMessage")]);
    m_booking_confirmation_message_isSet = !json[QString("bookingConfirmationMessage")].isNull() && m_booking_confirmation_message_isValid;

    m_booking_message_isValid = ::OpenAPI::fromJsonValue(m_booking_message, json[QString("bookingMessage")]);
    m_booking_message_isSet = !json[QString("bookingMessage")].isNull() && m_booking_message_isValid;

    m_booking_policy_isValid = ::OpenAPI::fromJsonValue(m_booking_policy, json[QString("bookingPolicy")]);
    m_booking_policy_isSet = !json[QString("bookingPolicy")].isNull() && m_booking_policy_isValid;

    m_booking_timer_mins_isValid = ::OpenAPI::fromJsonValue(m_booking_timer_mins, json[QString("bookingTimerMins")]);
    m_booking_timer_mins_isSet = !json[QString("bookingTimerMins")].isNull() && m_booking_timer_mins_isValid;

    m_business_id_isValid = ::OpenAPI::fromJsonValue(m_business_id, json[QString("businessId")]);
    m_business_id_isSet = !json[QString("businessId")].isNull() && m_business_id_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_customer_bookings_per_day_isValid = ::OpenAPI::fromJsonValue(m_customer_bookings_per_day, json[QString("customerBookingsPerDay")]);
    m_customer_bookings_per_day_isSet = !json[QString("customerBookingsPerDay")].isNull() && m_customer_bookings_per_day_isValid;

    m_customer_verification_isValid = ::OpenAPI::fromJsonValue(m_customer_verification, json[QString("customerVerification")]);
    m_customer_verification_isSet = !json[QString("customerVerification")].isNull() && m_customer_verification_isValid;

    m_default_service_isValid = ::OpenAPI::fromJsonValue(m_default_service, json[QString("defaultService")]);
    m_default_service_isSet = !json[QString("defaultService")].isNull() && m_default_service_isValid;

    m_default_to_customer_timezone_isValid = ::OpenAPI::fromJsonValue(m_default_to_customer_timezone, json[QString("defaultToCustomerTimezone")]);
    m_default_to_customer_timezone_isSet = !json[QString("defaultToCustomerTimezone")].isNull() && m_default_to_customer_timezone_isValid;

    m_disable_authorization_isValid = ::OpenAPI::fromJsonValue(m_disable_authorization, json[QString("disableAuthorization")]);
    m_disable_authorization_isSet = !json[QString("disableAuthorization")].isNull() && m_disable_authorization_isValid;

    m_enable_world_timezones_isValid = ::OpenAPI::fromJsonValue(m_enable_world_timezones, json[QString("enableWorldTimezones")]);
    m_enable_world_timezones_isSet = !json[QString("enableWorldTimezones")].isNull() && m_enable_world_timezones_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_family_members_enabled_isValid = ::OpenAPI::fromJsonValue(m_family_members_enabled, json[QString("familyMembersEnabled")]);
    m_family_members_enabled_isSet = !json[QString("familyMembersEnabled")].isNull() && m_family_members_enabled_isValid;

    m_first_available_isValid = ::OpenAPI::fromJsonValue(m_first_available, json[QString("firstAvailable")]);
    m_first_available_isSet = !json[QString("firstAvailable")].isNull() && m_first_available_isValid;

    m_form_flow_isValid = ::OpenAPI::fromJsonValue(m_form_flow, json[QString("formFlow")]);
    m_form_flow_isSet = !json[QString("formFlow")].isNull() && m_form_flow_isValid;

    m_hide_bread_crumb_nav_isValid = ::OpenAPI::fromJsonValue(m_hide_bread_crumb_nav, json[QString("hideBreadCrumbNav")]);
    m_hide_bread_crumb_nav_isSet = !json[QString("hideBreadCrumbNav")].isNull() && m_hide_bread_crumb_nav_isValid;

    m_hide_continue_booking_isValid = ::OpenAPI::fromJsonValue(m_hide_continue_booking, json[QString("hideContinueBooking")]);
    m_hide_continue_booking_isSet = !json[QString("hideContinueBooking")].isNull() && m_hide_continue_booking_isValid;

    m_hide_location_nav_isValid = ::OpenAPI::fromJsonValue(m_hide_location_nav, json[QString("hideLocationNav")]);
    m_hide_location_nav_isSet = !json[QString("hideLocationNav")].isNull() && m_hide_location_nav_isValid;

    m_hide_nav_bar_isValid = ::OpenAPI::fromJsonValue(m_hide_nav_bar, json[QString("hideNavBar")]);
    m_hide_nav_bar_isSet = !json[QString("hideNavBar")].isNull() && m_hide_nav_bar_isValid;

    m_hide_service_groups_nav_isValid = ::OpenAPI::fromJsonValue(m_hide_service_groups_nav, json[QString("hideServiceGroupsNav")]);
    m_hide_service_groups_nav_isSet = !json[QString("hideServiceGroupsNav")].isNull() && m_hide_service_groups_nav_isValid;

    m_hide_services_nav_isValid = ::OpenAPI::fromJsonValue(m_hide_services_nav, json[QString("hideServicesNav")]);
    m_hide_services_nav_isSet = !json[QString("hideServicesNav")].isNull() && m_hide_services_nav_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_late_cancel_action_isValid = ::OpenAPI::fromJsonValue(m_late_cancel_action, json[QString("lateCancelAction")]);
    m_late_cancel_action_isSet = !json[QString("lateCancelAction")].isNull() && m_late_cancel_action_isValid;

    m_late_cancel_hours_isValid = ::OpenAPI::fromJsonValue(m_late_cancel_hours, json[QString("lateCancelHours")]);
    m_late_cancel_hours_isSet = !json[QString("lateCancelHours")].isNull() && m_late_cancel_hours_isValid;

    m_late_reschedule_action_isValid = ::OpenAPI::fromJsonValue(m_late_reschedule_action, json[QString("lateRescheduleAction")]);
    m_late_reschedule_action_isSet = !json[QString("lateRescheduleAction")].isNull() && m_late_reschedule_action_isValid;

    m_late_reschedule_hours_isValid = ::OpenAPI::fromJsonValue(m_late_reschedule_hours, json[QString("lateRescheduleHours")]);
    m_late_reschedule_hours_isSet = !json[QString("lateRescheduleHours")].isNull() && m_late_reschedule_hours_isValid;

    m_live_mode_isValid = ::OpenAPI::fromJsonValue(m_live_mode, json[QString("liveMode")]);
    m_live_mode_isSet = !json[QString("liveMode")].isNull() && m_live_mode_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("object")]);
    m_object_isSet = !json[QString("object")].isNull() && m_object_isValid;

    m_resource_any_label_isValid = ::OpenAPI::fromJsonValue(m_resource_any_label, json[QString("resourceAnyLabel")]);
    m_resource_any_label_isSet = !json[QString("resourceAnyLabel")].isNull() && m_resource_any_label_isValid;

    m_resource_label_isValid = ::OpenAPI::fromJsonValue(m_resource_label, json[QString("resourceLabel")]);
    m_resource_label_isSet = !json[QString("resourceLabel")].isNull() && m_resource_label_isValid;

    m_resource_selection_isValid = ::OpenAPI::fromJsonValue(m_resource_selection, json[QString("resourceSelection")]);
    m_resource_selection_isSet = !json[QString("resourceSelection")].isNull() && m_resource_selection_isValid;

    m_return_to_availability_isValid = ::OpenAPI::fromJsonValue(m_return_to_availability, json[QString("returnToAvailability")]);
    m_return_to_availability_isSet = !json[QString("returnToAvailability")].isNull() && m_return_to_availability_isValid;

    m_return_to_service_isValid = ::OpenAPI::fromJsonValue(m_return_to_service, json[QString("returnToService")]);
    m_return_to_service_isSet = !json[QString("returnToService")].isNull() && m_return_to_service_isValid;

    m_service_label_isValid = ::OpenAPI::fromJsonValue(m_service_label, json[QString("serviceLabel")]);
    m_service_label_isSet = !json[QString("serviceLabel")].isNull() && m_service_label_isValid;

    m_show_business_logo_isValid = ::OpenAPI::fromJsonValue(m_show_business_logo, json[QString("showBusinessLogo")]);
    m_show_business_logo_isSet = !json[QString("showBusinessLogo")].isNull() && m_show_business_logo_isValid;

    m_show_on_sched_logo_isValid = ::OpenAPI::fromJsonValue(m_show_on_sched_logo, json[QString("showOnSchedLogo")]);
    m_show_on_sched_logo_isSet = !json[QString("showOnSchedLogo")].isNull() && m_show_on_sched_logo_isValid;

    m_show_service_groups_isValid = ::OpenAPI::fromJsonValue(m_show_service_groups, json[QString("showServiceGroups")]);
    m_show_service_groups_isSet = !json[QString("showServiceGroups")].isNull() && m_show_service_groups_isValid;
}

QString OAIOnlineSettingsViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOnlineSettingsViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_form_isSet) {
        obj.insert(QString("availabilityForm"), ::OpenAPI::toJsonValue(m_availability_form));
    }
    if (m_book_ahead_unit_isSet) {
        obj.insert(QString("bookAheadUnit"), ::OpenAPI::toJsonValue(m_book_ahead_unit));
    }
    if (m_book_ahead_value_isSet) {
        obj.insert(QString("bookAheadValue"), ::OpenAPI::toJsonValue(m_book_ahead_value));
    }
    if (m_book_in_advance_isSet) {
        obj.insert(QString("bookInAdvance"), ::OpenAPI::toJsonValue(m_book_in_advance));
    }
    if (m_book_with_account_isSet) {
        obj.insert(QString("bookWithAccount"), ::OpenAPI::toJsonValue(m_book_with_account));
    }
    if (m_booking_confirmation_message_isSet) {
        obj.insert(QString("bookingConfirmationMessage"), ::OpenAPI::toJsonValue(m_booking_confirmation_message));
    }
    if (m_booking_message_isSet) {
        obj.insert(QString("bookingMessage"), ::OpenAPI::toJsonValue(m_booking_message));
    }
    if (m_booking_policy_isSet) {
        obj.insert(QString("bookingPolicy"), ::OpenAPI::toJsonValue(m_booking_policy));
    }
    if (m_booking_timer_mins_isSet) {
        obj.insert(QString("bookingTimerMins"), ::OpenAPI::toJsonValue(m_booking_timer_mins));
    }
    if (m_business_id_isSet) {
        obj.insert(QString("businessId"), ::OpenAPI::toJsonValue(m_business_id));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_customer_bookings_per_day_isSet) {
        obj.insert(QString("customerBookingsPerDay"), ::OpenAPI::toJsonValue(m_customer_bookings_per_day));
    }
    if (m_customer_verification_isSet) {
        obj.insert(QString("customerVerification"), ::OpenAPI::toJsonValue(m_customer_verification));
    }
    if (m_default_service_isSet) {
        obj.insert(QString("defaultService"), ::OpenAPI::toJsonValue(m_default_service));
    }
    if (m_default_to_customer_timezone_isSet) {
        obj.insert(QString("defaultToCustomerTimezone"), ::OpenAPI::toJsonValue(m_default_to_customer_timezone));
    }
    if (m_disable_authorization_isSet) {
        obj.insert(QString("disableAuthorization"), ::OpenAPI::toJsonValue(m_disable_authorization));
    }
    if (m_enable_world_timezones_isSet) {
        obj.insert(QString("enableWorldTimezones"), ::OpenAPI::toJsonValue(m_enable_world_timezones));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_family_members_enabled_isSet) {
        obj.insert(QString("familyMembersEnabled"), ::OpenAPI::toJsonValue(m_family_members_enabled));
    }
    if (m_first_available_isSet) {
        obj.insert(QString("firstAvailable"), ::OpenAPI::toJsonValue(m_first_available));
    }
    if (m_form_flow_isSet) {
        obj.insert(QString("formFlow"), ::OpenAPI::toJsonValue(m_form_flow));
    }
    if (m_hide_bread_crumb_nav_isSet) {
        obj.insert(QString("hideBreadCrumbNav"), ::OpenAPI::toJsonValue(m_hide_bread_crumb_nav));
    }
    if (m_hide_continue_booking_isSet) {
        obj.insert(QString("hideContinueBooking"), ::OpenAPI::toJsonValue(m_hide_continue_booking));
    }
    if (m_hide_location_nav_isSet) {
        obj.insert(QString("hideLocationNav"), ::OpenAPI::toJsonValue(m_hide_location_nav));
    }
    if (m_hide_nav_bar_isSet) {
        obj.insert(QString("hideNavBar"), ::OpenAPI::toJsonValue(m_hide_nav_bar));
    }
    if (m_hide_service_groups_nav_isSet) {
        obj.insert(QString("hideServiceGroupsNav"), ::OpenAPI::toJsonValue(m_hide_service_groups_nav));
    }
    if (m_hide_services_nav_isSet) {
        obj.insert(QString("hideServicesNav"), ::OpenAPI::toJsonValue(m_hide_services_nav));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_late_cancel_action_isSet) {
        obj.insert(QString("lateCancelAction"), ::OpenAPI::toJsonValue(m_late_cancel_action));
    }
    if (m_late_cancel_hours_isSet) {
        obj.insert(QString("lateCancelHours"), ::OpenAPI::toJsonValue(m_late_cancel_hours));
    }
    if (m_late_reschedule_action_isSet) {
        obj.insert(QString("lateRescheduleAction"), ::OpenAPI::toJsonValue(m_late_reschedule_action));
    }
    if (m_late_reschedule_hours_isSet) {
        obj.insert(QString("lateRescheduleHours"), ::OpenAPI::toJsonValue(m_late_reschedule_hours));
    }
    if (m_live_mode_isSet) {
        obj.insert(QString("liveMode"), ::OpenAPI::toJsonValue(m_live_mode));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_object_isSet) {
        obj.insert(QString("object"), ::OpenAPI::toJsonValue(m_object));
    }
    if (m_resource_any_label_isSet) {
        obj.insert(QString("resourceAnyLabel"), ::OpenAPI::toJsonValue(m_resource_any_label));
    }
    if (m_resource_label_isSet) {
        obj.insert(QString("resourceLabel"), ::OpenAPI::toJsonValue(m_resource_label));
    }
    if (m_resource_selection_isSet) {
        obj.insert(QString("resourceSelection"), ::OpenAPI::toJsonValue(m_resource_selection));
    }
    if (m_return_to_availability_isSet) {
        obj.insert(QString("returnToAvailability"), ::OpenAPI::toJsonValue(m_return_to_availability));
    }
    if (m_return_to_service_isSet) {
        obj.insert(QString("returnToService"), ::OpenAPI::toJsonValue(m_return_to_service));
    }
    if (m_service_label_isSet) {
        obj.insert(QString("serviceLabel"), ::OpenAPI::toJsonValue(m_service_label));
    }
    if (m_show_business_logo_isSet) {
        obj.insert(QString("showBusinessLogo"), ::OpenAPI::toJsonValue(m_show_business_logo));
    }
    if (m_show_on_sched_logo_isSet) {
        obj.insert(QString("showOnSchedLogo"), ::OpenAPI::toJsonValue(m_show_on_sched_logo));
    }
    if (m_show_service_groups_isSet) {
        obj.insert(QString("showServiceGroups"), ::OpenAPI::toJsonValue(m_show_service_groups));
    }
    return obj;
}

qint32 OAIOnlineSettingsViewModel::getAvailabilityForm() const {
    return m_availability_form;
}
void OAIOnlineSettingsViewModel::setAvailabilityForm(const qint32 &availability_form) {
    m_availability_form = availability_form;
    m_availability_form_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_availability_form_Set() const{
    return m_availability_form_isSet;
}

bool OAIOnlineSettingsViewModel::is_availability_form_Valid() const{
    return m_availability_form_isValid;
}

qint32 OAIOnlineSettingsViewModel::getBookAheadUnit() const {
    return m_book_ahead_unit;
}
void OAIOnlineSettingsViewModel::setBookAheadUnit(const qint32 &book_ahead_unit) {
    m_book_ahead_unit = book_ahead_unit;
    m_book_ahead_unit_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_book_ahead_unit_Set() const{
    return m_book_ahead_unit_isSet;
}

bool OAIOnlineSettingsViewModel::is_book_ahead_unit_Valid() const{
    return m_book_ahead_unit_isValid;
}

qint32 OAIOnlineSettingsViewModel::getBookAheadValue() const {
    return m_book_ahead_value;
}
void OAIOnlineSettingsViewModel::setBookAheadValue(const qint32 &book_ahead_value) {
    m_book_ahead_value = book_ahead_value;
    m_book_ahead_value_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_book_ahead_value_Set() const{
    return m_book_ahead_value_isSet;
}

bool OAIOnlineSettingsViewModel::is_book_ahead_value_Valid() const{
    return m_book_ahead_value_isValid;
}

qint32 OAIOnlineSettingsViewModel::getBookInAdvance() const {
    return m_book_in_advance;
}
void OAIOnlineSettingsViewModel::setBookInAdvance(const qint32 &book_in_advance) {
    m_book_in_advance = book_in_advance;
    m_book_in_advance_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_book_in_advance_Set() const{
    return m_book_in_advance_isSet;
}

bool OAIOnlineSettingsViewModel::is_book_in_advance_Valid() const{
    return m_book_in_advance_isValid;
}

bool OAIOnlineSettingsViewModel::isBookWithAccount() const {
    return m_book_with_account;
}
void OAIOnlineSettingsViewModel::setBookWithAccount(const bool &book_with_account) {
    m_book_with_account = book_with_account;
    m_book_with_account_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_book_with_account_Set() const{
    return m_book_with_account_isSet;
}

bool OAIOnlineSettingsViewModel::is_book_with_account_Valid() const{
    return m_book_with_account_isValid;
}

QString OAIOnlineSettingsViewModel::getBookingConfirmationMessage() const {
    return m_booking_confirmation_message;
}
void OAIOnlineSettingsViewModel::setBookingConfirmationMessage(const QString &booking_confirmation_message) {
    m_booking_confirmation_message = booking_confirmation_message;
    m_booking_confirmation_message_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_booking_confirmation_message_Set() const{
    return m_booking_confirmation_message_isSet;
}

bool OAIOnlineSettingsViewModel::is_booking_confirmation_message_Valid() const{
    return m_booking_confirmation_message_isValid;
}

QString OAIOnlineSettingsViewModel::getBookingMessage() const {
    return m_booking_message;
}
void OAIOnlineSettingsViewModel::setBookingMessage(const QString &booking_message) {
    m_booking_message = booking_message;
    m_booking_message_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_booking_message_Set() const{
    return m_booking_message_isSet;
}

bool OAIOnlineSettingsViewModel::is_booking_message_Valid() const{
    return m_booking_message_isValid;
}

QString OAIOnlineSettingsViewModel::getBookingPolicy() const {
    return m_booking_policy;
}
void OAIOnlineSettingsViewModel::setBookingPolicy(const QString &booking_policy) {
    m_booking_policy = booking_policy;
    m_booking_policy_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_booking_policy_Set() const{
    return m_booking_policy_isSet;
}

bool OAIOnlineSettingsViewModel::is_booking_policy_Valid() const{
    return m_booking_policy_isValid;
}

qint32 OAIOnlineSettingsViewModel::getBookingTimerMins() const {
    return m_booking_timer_mins;
}
void OAIOnlineSettingsViewModel::setBookingTimerMins(const qint32 &booking_timer_mins) {
    m_booking_timer_mins = booking_timer_mins;
    m_booking_timer_mins_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_booking_timer_mins_Set() const{
    return m_booking_timer_mins_isSet;
}

bool OAIOnlineSettingsViewModel::is_booking_timer_mins_Valid() const{
    return m_booking_timer_mins_isValid;
}

QString OAIOnlineSettingsViewModel::getBusinessId() const {
    return m_business_id;
}
void OAIOnlineSettingsViewModel::setBusinessId(const QString &business_id) {
    m_business_id = business_id;
    m_business_id_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_business_id_Set() const{
    return m_business_id_isSet;
}

bool OAIOnlineSettingsViewModel::is_business_id_Valid() const{
    return m_business_id_isValid;
}

QString OAIOnlineSettingsViewModel::getCompanyId() const {
    return m_company_id;
}
void OAIOnlineSettingsViewModel::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAIOnlineSettingsViewModel::is_company_id_Valid() const{
    return m_company_id_isValid;
}

qint32 OAIOnlineSettingsViewModel::getCustomerBookingsPerDay() const {
    return m_customer_bookings_per_day;
}
void OAIOnlineSettingsViewModel::setCustomerBookingsPerDay(const qint32 &customer_bookings_per_day) {
    m_customer_bookings_per_day = customer_bookings_per_day;
    m_customer_bookings_per_day_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_customer_bookings_per_day_Set() const{
    return m_customer_bookings_per_day_isSet;
}

bool OAIOnlineSettingsViewModel::is_customer_bookings_per_day_Valid() const{
    return m_customer_bookings_per_day_isValid;
}

bool OAIOnlineSettingsViewModel::isCustomerVerification() const {
    return m_customer_verification;
}
void OAIOnlineSettingsViewModel::setCustomerVerification(const bool &customer_verification) {
    m_customer_verification = customer_verification;
    m_customer_verification_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_customer_verification_Set() const{
    return m_customer_verification_isSet;
}

bool OAIOnlineSettingsViewModel::is_customer_verification_Valid() const{
    return m_customer_verification_isValid;
}

bool OAIOnlineSettingsViewModel::isDefaultService() const {
    return m_default_service;
}
void OAIOnlineSettingsViewModel::setDefaultService(const bool &default_service) {
    m_default_service = default_service;
    m_default_service_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_default_service_Set() const{
    return m_default_service_isSet;
}

bool OAIOnlineSettingsViewModel::is_default_service_Valid() const{
    return m_default_service_isValid;
}

bool OAIOnlineSettingsViewModel::isDefaultToCustomerTimezone() const {
    return m_default_to_customer_timezone;
}
void OAIOnlineSettingsViewModel::setDefaultToCustomerTimezone(const bool &default_to_customer_timezone) {
    m_default_to_customer_timezone = default_to_customer_timezone;
    m_default_to_customer_timezone_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_default_to_customer_timezone_Set() const{
    return m_default_to_customer_timezone_isSet;
}

bool OAIOnlineSettingsViewModel::is_default_to_customer_timezone_Valid() const{
    return m_default_to_customer_timezone_isValid;
}

bool OAIOnlineSettingsViewModel::isDisableAuthorization() const {
    return m_disable_authorization;
}
void OAIOnlineSettingsViewModel::setDisableAuthorization(const bool &disable_authorization) {
    m_disable_authorization = disable_authorization;
    m_disable_authorization_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_disable_authorization_Set() const{
    return m_disable_authorization_isSet;
}

bool OAIOnlineSettingsViewModel::is_disable_authorization_Valid() const{
    return m_disable_authorization_isValid;
}

bool OAIOnlineSettingsViewModel::isEnableWorldTimezones() const {
    return m_enable_world_timezones;
}
void OAIOnlineSettingsViewModel::setEnableWorldTimezones(const bool &enable_world_timezones) {
    m_enable_world_timezones = enable_world_timezones;
    m_enable_world_timezones_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_enable_world_timezones_Set() const{
    return m_enable_world_timezones_isSet;
}

bool OAIOnlineSettingsViewModel::is_enable_world_timezones_Valid() const{
    return m_enable_world_timezones_isValid;
}

bool OAIOnlineSettingsViewModel::isEnabled() const {
    return m_enabled;
}
void OAIOnlineSettingsViewModel::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIOnlineSettingsViewModel::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIOnlineSettingsViewModel::isFamilyMembersEnabled() const {
    return m_family_members_enabled;
}
void OAIOnlineSettingsViewModel::setFamilyMembersEnabled(const bool &family_members_enabled) {
    m_family_members_enabled = family_members_enabled;
    m_family_members_enabled_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_family_members_enabled_Set() const{
    return m_family_members_enabled_isSet;
}

bool OAIOnlineSettingsViewModel::is_family_members_enabled_Valid() const{
    return m_family_members_enabled_isValid;
}

bool OAIOnlineSettingsViewModel::isFirstAvailable() const {
    return m_first_available;
}
void OAIOnlineSettingsViewModel::setFirstAvailable(const bool &first_available) {
    m_first_available = first_available;
    m_first_available_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_first_available_Set() const{
    return m_first_available_isSet;
}

bool OAIOnlineSettingsViewModel::is_first_available_Valid() const{
    return m_first_available_isValid;
}

qint32 OAIOnlineSettingsViewModel::getFormFlow() const {
    return m_form_flow;
}
void OAIOnlineSettingsViewModel::setFormFlow(const qint32 &form_flow) {
    m_form_flow = form_flow;
    m_form_flow_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_form_flow_Set() const{
    return m_form_flow_isSet;
}

bool OAIOnlineSettingsViewModel::is_form_flow_Valid() const{
    return m_form_flow_isValid;
}

bool OAIOnlineSettingsViewModel::isHideBreadCrumbNav() const {
    return m_hide_bread_crumb_nav;
}
void OAIOnlineSettingsViewModel::setHideBreadCrumbNav(const bool &hide_bread_crumb_nav) {
    m_hide_bread_crumb_nav = hide_bread_crumb_nav;
    m_hide_bread_crumb_nav_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_hide_bread_crumb_nav_Set() const{
    return m_hide_bread_crumb_nav_isSet;
}

bool OAIOnlineSettingsViewModel::is_hide_bread_crumb_nav_Valid() const{
    return m_hide_bread_crumb_nav_isValid;
}

bool OAIOnlineSettingsViewModel::isHideContinueBooking() const {
    return m_hide_continue_booking;
}
void OAIOnlineSettingsViewModel::setHideContinueBooking(const bool &hide_continue_booking) {
    m_hide_continue_booking = hide_continue_booking;
    m_hide_continue_booking_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_hide_continue_booking_Set() const{
    return m_hide_continue_booking_isSet;
}

bool OAIOnlineSettingsViewModel::is_hide_continue_booking_Valid() const{
    return m_hide_continue_booking_isValid;
}

bool OAIOnlineSettingsViewModel::isHideLocationNav() const {
    return m_hide_location_nav;
}
void OAIOnlineSettingsViewModel::setHideLocationNav(const bool &hide_location_nav) {
    m_hide_location_nav = hide_location_nav;
    m_hide_location_nav_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_hide_location_nav_Set() const{
    return m_hide_location_nav_isSet;
}

bool OAIOnlineSettingsViewModel::is_hide_location_nav_Valid() const{
    return m_hide_location_nav_isValid;
}

bool OAIOnlineSettingsViewModel::isHideNavBar() const {
    return m_hide_nav_bar;
}
void OAIOnlineSettingsViewModel::setHideNavBar(const bool &hide_nav_bar) {
    m_hide_nav_bar = hide_nav_bar;
    m_hide_nav_bar_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_hide_nav_bar_Set() const{
    return m_hide_nav_bar_isSet;
}

bool OAIOnlineSettingsViewModel::is_hide_nav_bar_Valid() const{
    return m_hide_nav_bar_isValid;
}

bool OAIOnlineSettingsViewModel::isHideServiceGroupsNav() const {
    return m_hide_service_groups_nav;
}
void OAIOnlineSettingsViewModel::setHideServiceGroupsNav(const bool &hide_service_groups_nav) {
    m_hide_service_groups_nav = hide_service_groups_nav;
    m_hide_service_groups_nav_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_hide_service_groups_nav_Set() const{
    return m_hide_service_groups_nav_isSet;
}

bool OAIOnlineSettingsViewModel::is_hide_service_groups_nav_Valid() const{
    return m_hide_service_groups_nav_isValid;
}

bool OAIOnlineSettingsViewModel::isHideServicesNav() const {
    return m_hide_services_nav;
}
void OAIOnlineSettingsViewModel::setHideServicesNav(const bool &hide_services_nav) {
    m_hide_services_nav = hide_services_nav;
    m_hide_services_nav_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_hide_services_nav_Set() const{
    return m_hide_services_nav_isSet;
}

bool OAIOnlineSettingsViewModel::is_hide_services_nav_Valid() const{
    return m_hide_services_nav_isValid;
}

qint32 OAIOnlineSettingsViewModel::getId() const {
    return m_id;
}
void OAIOnlineSettingsViewModel::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOnlineSettingsViewModel::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIOnlineSettingsViewModel::getLateCancelAction() const {
    return m_late_cancel_action;
}
void OAIOnlineSettingsViewModel::setLateCancelAction(const qint32 &late_cancel_action) {
    m_late_cancel_action = late_cancel_action;
    m_late_cancel_action_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_late_cancel_action_Set() const{
    return m_late_cancel_action_isSet;
}

bool OAIOnlineSettingsViewModel::is_late_cancel_action_Valid() const{
    return m_late_cancel_action_isValid;
}

qint32 OAIOnlineSettingsViewModel::getLateCancelHours() const {
    return m_late_cancel_hours;
}
void OAIOnlineSettingsViewModel::setLateCancelHours(const qint32 &late_cancel_hours) {
    m_late_cancel_hours = late_cancel_hours;
    m_late_cancel_hours_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_late_cancel_hours_Set() const{
    return m_late_cancel_hours_isSet;
}

bool OAIOnlineSettingsViewModel::is_late_cancel_hours_Valid() const{
    return m_late_cancel_hours_isValid;
}

qint32 OAIOnlineSettingsViewModel::getLateRescheduleAction() const {
    return m_late_reschedule_action;
}
void OAIOnlineSettingsViewModel::setLateRescheduleAction(const qint32 &late_reschedule_action) {
    m_late_reschedule_action = late_reschedule_action;
    m_late_reschedule_action_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_late_reschedule_action_Set() const{
    return m_late_reschedule_action_isSet;
}

bool OAIOnlineSettingsViewModel::is_late_reschedule_action_Valid() const{
    return m_late_reschedule_action_isValid;
}

qint32 OAIOnlineSettingsViewModel::getLateRescheduleHours() const {
    return m_late_reschedule_hours;
}
void OAIOnlineSettingsViewModel::setLateRescheduleHours(const qint32 &late_reschedule_hours) {
    m_late_reschedule_hours = late_reschedule_hours;
    m_late_reschedule_hours_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_late_reschedule_hours_Set() const{
    return m_late_reschedule_hours_isSet;
}

bool OAIOnlineSettingsViewModel::is_late_reschedule_hours_Valid() const{
    return m_late_reschedule_hours_isValid;
}

bool OAIOnlineSettingsViewModel::isLiveMode() const {
    return m_live_mode;
}
void OAIOnlineSettingsViewModel::setLiveMode(const bool &live_mode) {
    m_live_mode = live_mode;
    m_live_mode_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_live_mode_Set() const{
    return m_live_mode_isSet;
}

bool OAIOnlineSettingsViewModel::is_live_mode_Valid() const{
    return m_live_mode_isValid;
}

QString OAIOnlineSettingsViewModel::getLocationId() const {
    return m_location_id;
}
void OAIOnlineSettingsViewModel::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIOnlineSettingsViewModel::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAIOnlineSettingsViewModel::getObject() const {
    return m_object;
}
void OAIOnlineSettingsViewModel::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_object_Set() const{
    return m_object_isSet;
}

bool OAIOnlineSettingsViewModel::is_object_Valid() const{
    return m_object_isValid;
}

QString OAIOnlineSettingsViewModel::getResourceAnyLabel() const {
    return m_resource_any_label;
}
void OAIOnlineSettingsViewModel::setResourceAnyLabel(const QString &resource_any_label) {
    m_resource_any_label = resource_any_label;
    m_resource_any_label_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_resource_any_label_Set() const{
    return m_resource_any_label_isSet;
}

bool OAIOnlineSettingsViewModel::is_resource_any_label_Valid() const{
    return m_resource_any_label_isValid;
}

QString OAIOnlineSettingsViewModel::getResourceLabel() const {
    return m_resource_label;
}
void OAIOnlineSettingsViewModel::setResourceLabel(const QString &resource_label) {
    m_resource_label = resource_label;
    m_resource_label_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_resource_label_Set() const{
    return m_resource_label_isSet;
}

bool OAIOnlineSettingsViewModel::is_resource_label_Valid() const{
    return m_resource_label_isValid;
}

bool OAIOnlineSettingsViewModel::isResourceSelection() const {
    return m_resource_selection;
}
void OAIOnlineSettingsViewModel::setResourceSelection(const bool &resource_selection) {
    m_resource_selection = resource_selection;
    m_resource_selection_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_resource_selection_Set() const{
    return m_resource_selection_isSet;
}

bool OAIOnlineSettingsViewModel::is_resource_selection_Valid() const{
    return m_resource_selection_isValid;
}

bool OAIOnlineSettingsViewModel::isReturnToAvailability() const {
    return m_return_to_availability;
}
void OAIOnlineSettingsViewModel::setReturnToAvailability(const bool &return_to_availability) {
    m_return_to_availability = return_to_availability;
    m_return_to_availability_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_return_to_availability_Set() const{
    return m_return_to_availability_isSet;
}

bool OAIOnlineSettingsViewModel::is_return_to_availability_Valid() const{
    return m_return_to_availability_isValid;
}

bool OAIOnlineSettingsViewModel::isReturnToService() const {
    return m_return_to_service;
}
void OAIOnlineSettingsViewModel::setReturnToService(const bool &return_to_service) {
    m_return_to_service = return_to_service;
    m_return_to_service_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_return_to_service_Set() const{
    return m_return_to_service_isSet;
}

bool OAIOnlineSettingsViewModel::is_return_to_service_Valid() const{
    return m_return_to_service_isValid;
}

QString OAIOnlineSettingsViewModel::getServiceLabel() const {
    return m_service_label;
}
void OAIOnlineSettingsViewModel::setServiceLabel(const QString &service_label) {
    m_service_label = service_label;
    m_service_label_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_service_label_Set() const{
    return m_service_label_isSet;
}

bool OAIOnlineSettingsViewModel::is_service_label_Valid() const{
    return m_service_label_isValid;
}

bool OAIOnlineSettingsViewModel::isShowBusinessLogo() const {
    return m_show_business_logo;
}
void OAIOnlineSettingsViewModel::setShowBusinessLogo(const bool &show_business_logo) {
    m_show_business_logo = show_business_logo;
    m_show_business_logo_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_show_business_logo_Set() const{
    return m_show_business_logo_isSet;
}

bool OAIOnlineSettingsViewModel::is_show_business_logo_Valid() const{
    return m_show_business_logo_isValid;
}

bool OAIOnlineSettingsViewModel::isShowOnSchedLogo() const {
    return m_show_on_sched_logo;
}
void OAIOnlineSettingsViewModel::setShowOnSchedLogo(const bool &show_on_sched_logo) {
    m_show_on_sched_logo = show_on_sched_logo;
    m_show_on_sched_logo_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_show_on_sched_logo_Set() const{
    return m_show_on_sched_logo_isSet;
}

bool OAIOnlineSettingsViewModel::is_show_on_sched_logo_Valid() const{
    return m_show_on_sched_logo_isValid;
}

bool OAIOnlineSettingsViewModel::isShowServiceGroups() const {
    return m_show_service_groups;
}
void OAIOnlineSettingsViewModel::setShowServiceGroups(const bool &show_service_groups) {
    m_show_service_groups = show_service_groups;
    m_show_service_groups_isSet = true;
}

bool OAIOnlineSettingsViewModel::is_show_service_groups_Set() const{
    return m_show_service_groups_isSet;
}

bool OAIOnlineSettingsViewModel::is_show_service_groups_Valid() const{
    return m_show_service_groups_isValid;
}

bool OAIOnlineSettingsViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_ahead_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_ahead_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_in_advance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_with_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_booking_confirmation_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_booking_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_booking_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_booking_timer_mins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_bookings_per_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_verification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_to_customer_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_authorization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_world_timezones_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_members_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_flow_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_bread_crumb_nav_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_continue_booking_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_location_nav_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_nav_bar_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_service_groups_nav_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_services_nav_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_late_cancel_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_late_cancel_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_late_reschedule_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_late_reschedule_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_live_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_any_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_selection_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_to_availability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_to_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_business_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_on_sched_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_service_groups_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOnlineSettingsViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
