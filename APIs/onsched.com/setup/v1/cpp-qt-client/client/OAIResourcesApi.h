/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIResourcesApi_H
#define OAI_OAIResourcesApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIAppointmentViewModel.h"
#include "OAIAvailabilityInputModel.h"
#include "OAICalendarAuthViewModel.h"
#include "OAIResourceAllocationInputModel.h"
#include "OAIResourceAllocationListViewModel.h"
#include "OAIResourceAllocationUpdateModel.h"
#include "OAIResourceAllocationViewModel.h"
#include "OAIResourceAvailabilityViewModel.h"
#include "OAIResourceBlockInputModel.h"
#include "OAIResourceBlockListViewModel.h"
#include "OAIResourceBlockUpdateModel.h"
#include "OAIResourceBlockViewModel.h"
#include "OAIResourceImageInputModel.h"
#include "OAIResourceInputModel.h"
#include "OAIResourceListViewModel.h"
#include "OAIResourceUpdateModel.h"
#include "OAIResourceViewModel.h"
#include "OAIResourcesInputModel.h"
#include "OAIResourcesUpdateModel.h"
#include "OAISystemTimezoneViewModel.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIResourcesApi : public QObject {
    Q_OBJECT

public:
    OAIResourcesApi(const int timeOut = 0);
    ~OAIResourcesApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesAllocationsIdDelete(const QString &id);

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesAllocationsIdGet(const QString &id);

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_resource_allocation_update_model OAIResourceAllocationUpdateModel [optional]
    */
    virtual void setupV1ResourcesAllocationsIdPut(const QString &id, const ::OpenAPI::OptionalParam<OAIResourceAllocationUpdateModel> &oai_resource_allocation_update_model = ::OpenAPI::OptionalParam<OAIResourceAllocationUpdateModel>());

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesBlockIdDelete(const QString &id);

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_resource_block_update_model OAIResourceBlockUpdateModel [optional]
    */
    virtual void setupV1ResourcesBlockIdPut(const QString &id, const ::OpenAPI::OptionalParam<OAIResourceBlockUpdateModel> &oai_resource_block_update_model = ::OpenAPI::OptionalParam<OAIResourceBlockUpdateModel>());

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesBlocksIdGet(const QString &id);

    /**
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    * @param[in]  oai_resources_input_model OAIResourcesInputModel [optional]
    */
    virtual void setupV1ResourcesBulkPost(const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<OAIResourcesInputModel> &oai_resources_input_model = ::OpenAPI::OptionalParam<OAIResourcesInputModel>());

    /**
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    * @param[in]  oai_resources_update_model OAIResourcesUpdateModel [optional]
    */
    virtual void setupV1ResourcesBulkPut(const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<OAIResourcesUpdateModel> &oai_resources_update_model = ::OpenAPI::OptionalParam<OAIResourcesUpdateModel>());

    /**
    * @param[in]  location_id QString [optional]
    * @param[in]  resource_group_id QString [optional]
    * @param[in]  email QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  deleted bool [optional]
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    * @param[in]  offset qint32 [optional]
    * @param[in]  limit qint32 [optional]
    */
    virtual void setupV1ResourcesGet(const ::OpenAPI::OptionalParam<QString> &location_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &resource_group_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &email = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &deleted = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  start_date QDateTime [optional]
    * @param[in]  end_date QDateTime [optional]
    * @param[in]  offset qint32 [optional]
    * @param[in]  limit qint32 [optional]
    */
    virtual void setupV1ResourcesIdAllocationsGet(const QString &id, const ::OpenAPI::OptionalParam<QDateTime> &start_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<QDateTime> &end_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_resource_allocation_input_model OAIResourceAllocationInputModel [optional]
    */
    virtual void setupV1ResourcesIdAllocationsPost(const QString &id, const ::OpenAPI::OptionalParam<OAIResourceAllocationInputModel> &oai_resource_allocation_input_model = ::OpenAPI::OptionalParam<OAIResourceAllocationInputModel>());

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesIdAvailabilityGet(const QString &id);

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_availability_input_model OAIAvailabilityInputModel [optional]
    */
    virtual void setupV1ResourcesIdAvailabilityPut(const QString &id, const ::OpenAPI::OptionalParam<OAIAvailabilityInputModel> &oai_availability_input_model = ::OpenAPI::OptionalParam<OAIAvailabilityInputModel>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_resource_block_input_model OAIResourceBlockInputModel [optional]
    */
    virtual void setupV1ResourcesIdBlockPost(const QString &id, const ::OpenAPI::OptionalParam<OAIResourceBlockInputModel> &oai_resource_block_input_model = ::OpenAPI::OptionalParam<OAIResourceBlockInputModel>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  start_date QDateTime [optional]
    * @param[in]  end_date QDateTime [optional]
    * @param[in]  offset qint32 [optional]
    * @param[in]  limit qint32 [optional]
    */
    virtual void setupV1ResourcesIdBlocksGet(const QString &id, const ::OpenAPI::OptionalParam<QDateTime> &start_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<QDateTime> &end_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  google_email_address QString [required]
    * @param[in]  google_auth_return_url QString [optional]
    */
    virtual void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGet(const QString &id, const QString &google_email_address, const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  outlook_email_address QString [required]
    * @param[in]  outlook_auth_return_url QString [optional]
    */
    virtual void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGet(const QString &id, const QString &outlook_email_address, const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesIdDelete(const QString &id);

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesIdDeleteimageDelete(const QString &id);

    /**
    * @param[in]  id QString [required]
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    */
    virtual void setupV1ResourcesIdGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    * @param[in]  oai_resource_update_model OAIResourceUpdateModel [optional]
    */
    virtual void setupV1ResourcesIdPut(const QString &id, const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<OAIResourceUpdateModel> &oai_resource_update_model = ::OpenAPI::OptionalParam<OAIResourceUpdateModel>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  resource_id QString [required]
    * @param[in]  start_date QDateTime [optional]
    * @param[in]  end_date QDateTime [optional]
    * @param[in]  calendar_id QString [optional]
    */
    virtual void setupV1ResourcesIdReassignAppointmentsResourceIdPut(const QString &id, const QString &resource_id, const ::OpenAPI::OptionalParam<QDateTime> &start_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<QDateTime> &end_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<QString> &calendar_id = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    */
    virtual void setupV1ResourcesIdRecoverPut(const QString &id, const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    */
    virtual void setupV1ResourcesIdServicesDelete(const QString &id);

    /**
    * @param[in]  id QString [required]
    * @param[in]  request_body QList<QString> [optional]
    */
    virtual void setupV1ResourcesIdServicesPost(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &request_body = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  request_body QList<QString> [optional]
    */
    virtual void setupV1ResourcesIdServicesPut(const QString &id, const ::OpenAPI::OptionalParam<QList<QString>> &request_body = ::OpenAPI::OptionalParam<QList<QString>>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  oai_resource_image_input_model OAIResourceImageInputModel [optional]
    */
    virtual void setupV1ResourcesIdUploadimagePost(const QString &id, const ::OpenAPI::OptionalParam<OAIResourceImageInputModel> &oai_resource_image_input_model = ::OpenAPI::OptionalParam<OAIResourceImageInputModel>());

    /**
    * @param[in]  google_auth_return_url QString [optional]
    * @param[in]  outlook_auth_return_url QString [optional]
    * @param[in]  oai_resource_input_model OAIResourceInputModel [optional]
    */
    virtual void setupV1ResourcesPost(const ::OpenAPI::OptionalParam<QString> &google_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &outlook_auth_return_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<OAIResourceInputModel> &oai_resource_input_model = ::OpenAPI::OptionalParam<OAIResourceInputModel>());


    virtual void setupV1ResourcesTimezonesGet();


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void setupV1ResourcesAllocationsIdDeleteCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesAllocationsIdGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesAllocationsIdPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesBlockIdDeleteCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesBlockIdPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesBlocksIdGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesBulkPostCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesBulkPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdAllocationsGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdAllocationsPostCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdAvailabilityGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdAvailabilityPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdBlockPostCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdBlocksGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdDeleteCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdDeleteimageDeleteCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdGetCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdRecoverPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdServicesDeleteCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdServicesPostCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdServicesPutCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesIdUploadimagePostCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesPostCallback(OAIHttpRequestWorker *worker);
    void setupV1ResourcesTimezonesGetCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void setupV1ResourcesAllocationsIdDeleteSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesAllocationsIdGetSignal(OAIResourceAllocationViewModel summary);
    void setupV1ResourcesAllocationsIdPutSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesBlockIdDeleteSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesBlockIdPutSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesBlocksIdGetSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesBulkPostSignal(QList<OAIResourceViewModel> summary);
    void setupV1ResourcesBulkPutSignal(QList<OAIResourceViewModel> summary);
    void setupV1ResourcesGetSignal(OAIResourceListViewModel summary);
    void setupV1ResourcesIdAllocationsGetSignal(OAIResourceAllocationListViewModel summary);
    void setupV1ResourcesIdAllocationsPostSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesIdAvailabilityGetSignal(OAIResourceAvailabilityViewModel summary);
    void setupV1ResourcesIdAvailabilityPutSignal(OAIResourceAvailabilityViewModel summary);
    void setupV1ResourcesIdBlockPostSignal(OAIResourceBlockViewModel summary);
    void setupV1ResourcesIdBlocksGetSignal(OAIResourceBlockListViewModel summary);
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignal(OAICalendarAuthViewModel summary);
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignal(OAICalendarAuthViewModel summary);
    void setupV1ResourcesIdDeleteSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdDeleteimageDeleteSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdGetSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdPutSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutSignal(QList<OAIAppointmentViewModel> summary);
    void setupV1ResourcesIdRecoverPutSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdServicesDeleteSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdServicesPostSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdServicesPutSignal(OAIResourceViewModel summary);
    void setupV1ResourcesIdUploadimagePostSignal(OAIResourceViewModel summary);
    void setupV1ResourcesPostSignal(OAIResourceViewModel summary);
    void setupV1ResourcesTimezonesGetSignal(OAISystemTimezoneViewModel summary);


    void setupV1ResourcesAllocationsIdDeleteSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesAllocationsIdGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceAllocationViewModel summary);
    void setupV1ResourcesAllocationsIdPutSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesBlockIdDeleteSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesBlockIdPutSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesBlocksIdGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesBulkPostSignalFull(OAIHttpRequestWorker *worker, QList<OAIResourceViewModel> summary);
    void setupV1ResourcesBulkPutSignalFull(OAIHttpRequestWorker *worker, QList<OAIResourceViewModel> summary);
    void setupV1ResourcesGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceListViewModel summary);
    void setupV1ResourcesIdAllocationsGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceAllocationListViewModel summary);
    void setupV1ResourcesIdAllocationsPostSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesIdAvailabilityGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceAvailabilityViewModel summary);
    void setupV1ResourcesIdAvailabilityPutSignalFull(OAIHttpRequestWorker *worker, OAIResourceAvailabilityViewModel summary);
    void setupV1ResourcesIdBlockPostSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockViewModel summary);
    void setupV1ResourcesIdBlocksGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceBlockListViewModel summary);
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalFull(OAIHttpRequestWorker *worker, OAICalendarAuthViewModel summary);
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalFull(OAIHttpRequestWorker *worker, OAICalendarAuthViewModel summary);
    void setupV1ResourcesIdDeleteSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdDeleteimageDeleteSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdGetSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdPutSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalFull(OAIHttpRequestWorker *worker, QList<OAIAppointmentViewModel> summary);
    void setupV1ResourcesIdRecoverPutSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdServicesDeleteSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdServicesPostSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdServicesPutSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesIdUploadimagePostSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesPostSignalFull(OAIHttpRequestWorker *worker, OAIResourceViewModel summary);
    void setupV1ResourcesTimezonesGetSignalFull(OAIHttpRequestWorker *worker, OAISystemTimezoneViewModel summary);

    Q_DECL_DEPRECATED_X("Use setupV1ResourcesAllocationsIdDeleteSignalError() instead")
    void setupV1ResourcesAllocationsIdDeleteSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesAllocationsIdDeleteSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesAllocationsIdGetSignalError() instead")
    void setupV1ResourcesAllocationsIdGetSignalE(OAIResourceAllocationViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesAllocationsIdGetSignalError(OAIResourceAllocationViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesAllocationsIdPutSignalError() instead")
    void setupV1ResourcesAllocationsIdPutSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesAllocationsIdPutSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBlockIdDeleteSignalError() instead")
    void setupV1ResourcesBlockIdDeleteSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBlockIdDeleteSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBlockIdPutSignalError() instead")
    void setupV1ResourcesBlockIdPutSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBlockIdPutSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBlocksIdGetSignalError() instead")
    void setupV1ResourcesBlocksIdGetSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBlocksIdGetSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBulkPostSignalError() instead")
    void setupV1ResourcesBulkPostSignalE(QList<OAIResourceViewModel> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBulkPostSignalError(QList<OAIResourceViewModel> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBulkPutSignalError() instead")
    void setupV1ResourcesBulkPutSignalE(QList<OAIResourceViewModel> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBulkPutSignalError(QList<OAIResourceViewModel> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesGetSignalError() instead")
    void setupV1ResourcesGetSignalE(OAIResourceListViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesGetSignalError(OAIResourceListViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAllocationsGetSignalError() instead")
    void setupV1ResourcesIdAllocationsGetSignalE(OAIResourceAllocationListViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAllocationsGetSignalError(OAIResourceAllocationListViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAllocationsPostSignalError() instead")
    void setupV1ResourcesIdAllocationsPostSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAllocationsPostSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAvailabilityGetSignalError() instead")
    void setupV1ResourcesIdAvailabilityGetSignalE(OAIResourceAvailabilityViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAvailabilityGetSignalError(OAIResourceAvailabilityViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAvailabilityPutSignalError() instead")
    void setupV1ResourcesIdAvailabilityPutSignalE(OAIResourceAvailabilityViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAvailabilityPutSignalError(OAIResourceAvailabilityViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdBlockPostSignalError() instead")
    void setupV1ResourcesIdBlockPostSignalE(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdBlockPostSignalError(OAIResourceBlockViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdBlocksGetSignalError() instead")
    void setupV1ResourcesIdBlocksGetSignalE(OAIResourceBlockListViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdBlocksGetSignalError(OAIResourceBlockListViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalError() instead")
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalE(OAICalendarAuthViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalError(OAICalendarAuthViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalError() instead")
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalE(OAICalendarAuthViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalError(OAICalendarAuthViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdDeleteSignalError() instead")
    void setupV1ResourcesIdDeleteSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdDeleteSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdDeleteimageDeleteSignalError() instead")
    void setupV1ResourcesIdDeleteimageDeleteSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdDeleteimageDeleteSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdGetSignalError() instead")
    void setupV1ResourcesIdGetSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdGetSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdPutSignalError() instead")
    void setupV1ResourcesIdPutSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdPutSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalError() instead")
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalE(QList<OAIAppointmentViewModel> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalError(QList<OAIAppointmentViewModel> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdRecoverPutSignalError() instead")
    void setupV1ResourcesIdRecoverPutSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdRecoverPutSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdServicesDeleteSignalError() instead")
    void setupV1ResourcesIdServicesDeleteSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdServicesDeleteSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdServicesPostSignalError() instead")
    void setupV1ResourcesIdServicesPostSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdServicesPostSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdServicesPutSignalError() instead")
    void setupV1ResourcesIdServicesPutSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdServicesPutSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdUploadimagePostSignalError() instead")
    void setupV1ResourcesIdUploadimagePostSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdUploadimagePostSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesPostSignalError() instead")
    void setupV1ResourcesPostSignalE(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesPostSignalError(OAIResourceViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesTimezonesGetSignalError() instead")
    void setupV1ResourcesTimezonesGetSignalE(OAISystemTimezoneViewModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesTimezonesGetSignalError(OAISystemTimezoneViewModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use setupV1ResourcesAllocationsIdDeleteSignalErrorFull() instead")
    void setupV1ResourcesAllocationsIdDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesAllocationsIdDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesAllocationsIdGetSignalErrorFull() instead")
    void setupV1ResourcesAllocationsIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesAllocationsIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesAllocationsIdPutSignalErrorFull() instead")
    void setupV1ResourcesAllocationsIdPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesAllocationsIdPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBlockIdDeleteSignalErrorFull() instead")
    void setupV1ResourcesBlockIdDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBlockIdDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBlockIdPutSignalErrorFull() instead")
    void setupV1ResourcesBlockIdPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBlockIdPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBlocksIdGetSignalErrorFull() instead")
    void setupV1ResourcesBlocksIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBlocksIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBulkPostSignalErrorFull() instead")
    void setupV1ResourcesBulkPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBulkPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesBulkPutSignalErrorFull() instead")
    void setupV1ResourcesBulkPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesBulkPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesGetSignalErrorFull() instead")
    void setupV1ResourcesGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAllocationsGetSignalErrorFull() instead")
    void setupV1ResourcesIdAllocationsGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAllocationsGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAllocationsPostSignalErrorFull() instead")
    void setupV1ResourcesIdAllocationsPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAllocationsPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAvailabilityGetSignalErrorFull() instead")
    void setupV1ResourcesIdAvailabilityGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAvailabilityGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdAvailabilityPutSignalErrorFull() instead")
    void setupV1ResourcesIdAvailabilityPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdAvailabilityPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdBlockPostSignalErrorFull() instead")
    void setupV1ResourcesIdBlockPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdBlockPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdBlocksGetSignalErrorFull() instead")
    void setupV1ResourcesIdBlocksGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdBlocksGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalErrorFull() instead")
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdCalendarAuthGoogleGoogleEmailAddressGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalErrorFull() instead")
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdCalendarAuthOutlookOutlookEmailAddressGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdDeleteSignalErrorFull() instead")
    void setupV1ResourcesIdDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdDeleteimageDeleteSignalErrorFull() instead")
    void setupV1ResourcesIdDeleteimageDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdDeleteimageDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdGetSignalErrorFull() instead")
    void setupV1ResourcesIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdPutSignalErrorFull() instead")
    void setupV1ResourcesIdPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalErrorFull() instead")
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdReassignAppointmentsResourceIdPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdRecoverPutSignalErrorFull() instead")
    void setupV1ResourcesIdRecoverPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdRecoverPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdServicesDeleteSignalErrorFull() instead")
    void setupV1ResourcesIdServicesDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdServicesDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdServicesPostSignalErrorFull() instead")
    void setupV1ResourcesIdServicesPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdServicesPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdServicesPutSignalErrorFull() instead")
    void setupV1ResourcesIdServicesPutSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdServicesPutSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesIdUploadimagePostSignalErrorFull() instead")
    void setupV1ResourcesIdUploadimagePostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesIdUploadimagePostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesPostSignalErrorFull() instead")
    void setupV1ResourcesPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use setupV1ResourcesTimezonesGetSignalErrorFull() instead")
    void setupV1ResourcesTimezonesGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void setupV1ResourcesTimezonesGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
