/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddressViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddressViewModel::OAIAddressViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddressViewModel::OAIAddressViewModel() {
    this->initializeModel();
}

OAIAddressViewModel::~OAIAddressViewModel() {}

void OAIAddressViewModel::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIAddressViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddressViewModel::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("addressLine2")]);
    m_address_line2_isSet = !json[QString("addressLine2")].isNull() && m_address_line2_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postalCode")]);
    m_postal_code_isSet = !json[QString("postalCode")].isNull() && m_postal_code_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIAddressViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddressViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("addressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIAddressViewModel::getAddressLine1() const {
    return m_address_line1;
}
void OAIAddressViewModel::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIAddressViewModel::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIAddressViewModel::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIAddressViewModel::getAddressLine2() const {
    return m_address_line2;
}
void OAIAddressViewModel::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIAddressViewModel::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIAddressViewModel::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIAddressViewModel::getCity() const {
    return m_city;
}
void OAIAddressViewModel::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAddressViewModel::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAddressViewModel::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIAddressViewModel::getCountry() const {
    return m_country;
}
void OAIAddressViewModel::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIAddressViewModel::is_country_Set() const{
    return m_country_isSet;
}

bool OAIAddressViewModel::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIAddressViewModel::getPostalCode() const {
    return m_postal_code;
}
void OAIAddressViewModel::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIAddressViewModel::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIAddressViewModel::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIAddressViewModel::getState() const {
    return m_state;
}
void OAIAddressViewModel::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAddressViewModel::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAddressViewModel::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIAddressViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddressViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
