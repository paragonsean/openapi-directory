/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CustomFieldInputModel;
import org.openapitools.client.model.ServiceHoursViewModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ServiceViewModel
 */
public class ServiceViewModelTest {
    private final ServiceViewModel model = new ServiceViewModel();

    /**
     * Model tests for ServiceViewModel
     */
    @Test
    public void testServiceViewModel() {
        // TODO: test ServiceViewModel
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'bookAheadUnit'
     */
    @Test
    public void bookAheadUnitTest() {
        // TODO: test bookAheadUnit
    }

    /**
     * Test the property 'bookAheadValue'
     */
    @Test
    public void bookAheadValueTest() {
        // TODO: test bookAheadValue
    }

    /**
     * Test the property 'bookInAdvance'
     */
    @Test
    public void bookInAdvanceTest() {
        // TODO: test bookInAdvance
    }

    /**
     * Test the property 'bookingInterval'
     */
    @Test
    public void bookingIntervalTest() {
        // TODO: test bookingInterval
    }

    /**
     * Test the property 'bookingLimit'
     */
    @Test
    public void bookingLimitTest() {
        // TODO: test bookingLimit
    }

    /**
     * Test the property 'calendarId'
     */
    @Test
    public void calendarIdTest() {
        // TODO: test calendarId
    }

    /**
     * Test the property 'calendarResourceGroupId'
     */
    @Test
    public void calendarResourceGroupIdTest() {
        // TODO: test calendarResourceGroupId
    }

    /**
     * Test the property 'cancellationFeeAmount'
     */
    @Test
    public void cancellationFeeAmountTest() {
        // TODO: test cancellationFeeAmount
    }

    /**
     * Test the property 'cancellationFeeTaxable'
     */
    @Test
    public void cancellationFeeTaxableTest() {
        // TODO: test cancellationFeeTaxable
    }

    /**
     * Test the property 'companyId'
     */
    @Test
    public void companyIdTest() {
        // TODO: test companyId
    }

    /**
     * Test the property 'consumerPadding'
     */
    @Test
    public void consumerPaddingTest() {
        // TODO: test consumerPadding
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'dailyBookingLimitCount'
     */
    @Test
    public void dailyBookingLimitCountTest() {
        // TODO: test dailyBookingLimitCount
    }

    /**
     * Test the property 'dailyBookingLimitMinutes'
     */
    @Test
    public void dailyBookingLimitMinutesTest() {
        // TODO: test dailyBookingLimitMinutes
    }

    /**
     * Test the property 'defaultService'
     */
    @Test
    public void defaultServiceTest() {
        // TODO: test defaultService
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'durationInterval'
     */
    @Test
    public void durationIntervalTest() {
        // TODO: test durationInterval
    }

    /**
     * Test the property 'durationMax'
     */
    @Test
    public void durationMaxTest() {
        // TODO: test durationMax
    }

    /**
     * Test the property 'durationMin'
     */
    @Test
    public void durationMinTest() {
        // TODO: test durationMin
    }

    /**
     * Test the property 'durationSelect'
     */
    @Test
    public void durationSelectTest() {
        // TODO: test durationSelect
    }

    /**
     * Test the property 'feeAmount'
     */
    @Test
    public void feeAmountTest() {
        // TODO: test feeAmount
    }

    /**
     * Test the property 'feeTaxable'
     */
    @Test
    public void feeTaxableTest() {
        // TODO: test feeTaxable
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'locationId'
     */
    @Test
    public void locationIdTest() {
        // TODO: test locationId
    }

    /**
     * Test the property 'maxBookingLimit'
     */
    @Test
    public void maxBookingLimitTest() {
        // TODO: test maxBookingLimit
    }

    /**
     * Test the property 'maxCapacity'
     */
    @Test
    public void maxCapacityTest() {
        // TODO: test maxCapacity
    }

    /**
     * Test the property 'maxGroupSize'
     */
    @Test
    public void maxGroupSizeTest() {
        // TODO: test maxGroupSize
    }

    /**
     * Test the property 'maxResourceBookingLimit'
     */
    @Test
    public void maxResourceBookingLimitTest() {
        // TODO: test maxResourceBookingLimit
    }

    /**
     * Test the property 'mediaPageUrl'
     */
    @Test
    public void mediaPageUrlTest() {
        // TODO: test mediaPageUrl
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nonRefundable'
     */
    @Test
    public void nonRefundableTest() {
        // TODO: test nonRefundable
    }

    /**
     * Test the property '_object'
     */
    @Test
    public void _objectTest() {
        // TODO: test _object
    }

    /**
     * Test the property 'padding'
     */
    @Test
    public void paddingTest() {
        // TODO: test padding
    }

    /**
     * Test the property 'roundRobin'
     */
    @Test
    public void roundRobinTest() {
        // TODO: test roundRobin
    }

    /**
     * Test the property 'serviceGroupId'
     */
    @Test
    public void serviceGroupIdTest() {
        // TODO: test serviceGroupId
    }

    /**
     * Test the property 'serviceGroupName'
     */
    @Test
    public void serviceGroupNameTest() {
        // TODO: test serviceGroupName
    }

    /**
     * Test the property 'showOnline'
     */
    @Test
    public void showOnlineTest() {
        // TODO: test showOnline
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
