/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppointmentListViewModel;
import org.openapitools.client.model.AppointmentViewModel;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppointmentsApi
 */
@Disabled
public class AppointmentsApiTest {

    private final AppointmentsApi api = new AppointmentsApi();

    /**
     * List Appointments
     *
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Appointments&lt;/b&gt;. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further. For more information: &lt;a href&#x3D;\&quot;https://onsched.readme.io/docs/appointments-overview\&quot;&gt;Appointments Overview&lt;/a&gt;&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupV1AppointmentsGetTest() throws ApiException {
        String locationId = null;
        String email = null;
        String lastname = null;
        String serviceId = null;
        String calendarId = null;
        String resourceId = null;
        String customerId = null;
        String serviceAllocationId = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String status = null;
        String bookedBy = null;
        Integer offset = null;
        Integer limit = null;
        AppointmentListViewModel response = api.setupV1AppointmentsGet(locationId, email, lastname, serviceId, calendarId, resourceId, customerId, serviceAllocationId, startDate, endDate, status, bookedBy, offset, limit);
        // TODO: test validations
    }

    /**
     * Get Appointment
     *
     * &lt;p&gt;Use this endpoint to return an &lt;b&gt;Appointment&lt;/b&gt; object. A valid &lt;b&gt;appointment id&lt;/b&gt; is required. Find appointment id&#39;s by using the &lt;i&gt;GET​/setup​/v1​/appointments&lt;/i&gt; endpoint.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupV1AppointmentsIdGetTest() throws ApiException {
        String id = null;
        AppointmentViewModel response = api.setupV1AppointmentsIdGet(id);
        // TODO: test validations
    }

    /**
     * Reassign Appointment
     *
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Reassign&lt;/b&gt; an appointment from one resource to another. The result returned is a single appointment that was reassigned to the target resource. A valid &lt;b&gt;appointment id&lt;/b&gt; and &lt;b&gt;resource id&lt;/b&gt; is required. Find appointment id&#39;s by using the &lt;i&gt;GET /setup/v1/appointments&lt;/i&gt; endpoint, find resource id&#39;s by using the &lt;i&gt;GET ​/setup​/v1​/resources&lt;/i&gt; endpoint.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupV1AppointmentsIdReassignResourceResourceIdPutTest() throws ApiException {
        String id = null;
        String resourceId = null;
        AppointmentViewModel response = api.setupV1AppointmentsIdReassignResourceResourceIdPut(id, resourceId);
        // TODO: test validations
    }

}
