/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddressViewModel;
import org.openapitools.client.model.AppointmentReminderViewModel;
import org.openapitools.client.model.BusinessDefaultsViewModel;
import org.openapitools.client.model.BusinessHolidayViewModel;
import org.openapitools.client.model.BusinessHoursViewModel;
import org.openapitools.client.model.BusinessServiceViewModel;
import org.openapitools.client.model.OnlineSettingsViewModel;
import org.openapitools.client.model.TravelViewModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LocationViewModel
 */
public class LocationViewModelTest {
    private final LocationViewModel model = new LocationViewModel();

    /**
     * Model tests for LocationViewModel
     */
    @Test
    public void testLocationViewModel() {
        // TODO: test LocationViewModel
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'adminEmail'
     */
    @Test
    public void adminEmailTest() {
        // TODO: test adminEmail
    }

    /**
     * Test the property 'adminName'
     */
    @Test
    public void adminNameTest() {
        // TODO: test adminName
    }

    /**
     * Test the property 'appointmentReminders'
     */
    @Test
    public void appointmentRemindersTest() {
        // TODO: test appointmentReminders
    }

    /**
     * Test the property 'businessHolidays'
     */
    @Test
    public void businessHolidaysTest() {
        // TODO: test businessHolidays
    }

    /**
     * Test the property 'businessHours'
     */
    @Test
    public void businessHoursTest() {
        // TODO: test businessHours
    }

    /**
     * Test the property 'companyId'
     */
    @Test
    public void companyIdTest() {
        // TODO: test companyId
    }

    /**
     * Test the property 'companyName'
     */
    @Test
    public void companyNameTest() {
        // TODO: test companyName
    }

    /**
     * Test the property 'defaults'
     */
    @Test
    public void defaultsTest() {
        // TODO: test defaults
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'fax'
     */
    @Test
    public void faxTest() {
        // TODO: test fax
    }

    /**
     * Test the property 'friendlyId'
     */
    @Test
    public void friendlyIdTest() {
        // TODO: test friendlyId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property '_object'
     */
    @Test
    public void _objectTest() {
        // TODO: test _object
    }

    /**
     * Test the property 'phone'
     */
    @Test
    public void phoneTest() {
        // TODO: test phone
    }

    /**
     * Test the property 'primaryBusiness'
     */
    @Test
    public void primaryBusinessTest() {
        // TODO: test primaryBusiness
    }

    /**
     * Test the property 'primaryCalendarId'
     */
    @Test
    public void primaryCalendarIdTest() {
        // TODO: test primaryCalendarId
    }

    /**
     * Test the property 'regionId'
     */
    @Test
    public void regionIdTest() {
        // TODO: test regionId
    }

    /**
     * Test the property 'services'
     */
    @Test
    public void servicesTest() {
        // TODO: test services
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'timezoneIana'
     */
    @Test
    public void timezoneIanaTest() {
        // TODO: test timezoneIana
    }

    /**
     * Test the property 'timezoneId'
     */
    @Test
    public void timezoneIdTest() {
        // TODO: test timezoneId
    }

    /**
     * Test the property 'timezoneOffset'
     */
    @Test
    public void timezoneOffsetTest() {
        // TODO: test timezoneOffset
    }

    /**
     * Test the property 'travel'
     */
    @Test
    public void travelTest() {
        // TODO: test travel
    }

    /**
     * Test the property 'website'
     */
    @Test
    public void websiteTest() {
        // TODO: test website
    }

}
