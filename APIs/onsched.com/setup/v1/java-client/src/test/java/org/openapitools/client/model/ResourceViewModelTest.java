/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddressViewModel;
import org.openapitools.client.model.ContactViewModel;
import org.openapitools.client.model.CustomFieldInputModel;
import org.openapitools.client.model.PhoneViewModel;
import org.openapitools.client.model.ResourceHoursViewModel;
import org.openapitools.client.model.ResourceOptionsInputModel;
import org.openapitools.client.model.ResourceServiceViewModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ResourceViewModel
 */
public class ResourceViewModelTest {
    private final ResourceViewModel model = new ResourceViewModel();

    /**
     * Model tests for ResourceViewModel
     */
    @Test
    public void testResourceViewModel() {
        // TODO: test ResourceViewModel
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'bioLink'
     */
    @Test
    public void bioLinkTest() {
        // TODO: test bioLink
    }

    /**
     * Test the property 'bookingNotification'
     */
    @Test
    public void bookingNotificationTest() {
        // TODO: test bookingNotification
    }

    /**
     * Test the property 'calendarAvailability'
     */
    @Test
    public void calendarAvailabilityTest() {
        // TODO: test calendarAvailability
    }

    /**
     * Test the property 'contact'
     */
    @Test
    public void contactTest() {
        // TODO: test contact
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'deletedStatus'
     */
    @Test
    public void deletedStatusTest() {
        // TODO: test deletedStatus
    }

    /**
     * Test the property 'deletedTime'
     */
    @Test
    public void deletedTimeTest() {
        // TODO: test deletedTime
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'effectiveDate'
     */
    @Test
    public void effectiveDateTest() {
        // TODO: test effectiveDate
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'gender'
     */
    @Test
    public void genderTest() {
        // TODO: test gender
    }

    /**
     * Test the property 'googleCalendarAuthUrl'
     */
    @Test
    public void googleCalendarAuthUrlTest() {
        // TODO: test googleCalendarAuthUrl
    }

    /**
     * Test the property 'googleCalendarAuthorized'
     */
    @Test
    public void googleCalendarAuthorizedTest() {
        // TODO: test googleCalendarAuthorized
    }

    /**
     * Test the property 'googleCalendarId'
     */
    @Test
    public void googleCalendarIdTest() {
        // TODO: test googleCalendarId
    }

    /**
     * Test the property 'groupId'
     */
    @Test
    public void groupIdTest() {
        // TODO: test groupId
    }

    /**
     * Test the property 'hourly'
     */
    @Test
    public void hourlyTest() {
        // TODO: test hourly
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ignoreBusinessHours'
     */
    @Test
    public void ignoreBusinessHoursTest() {
        // TODO: test ignoreBusinessHours
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'locationId'
     */
    @Test
    public void locationIdTest() {
        // TODO: test locationId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notificationType'
     */
    @Test
    public void notificationTypeTest() {
        // TODO: test notificationType
    }

    /**
     * Test the property '_object'
     */
    @Test
    public void _objectTest() {
        // TODO: test _object
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'outlookCalendarAuthUrl'
     */
    @Test
    public void outlookCalendarAuthUrlTest() {
        // TODO: test outlookCalendarAuthUrl
    }

    /**
     * Test the property 'outlookCalendarAuthorized'
     */
    @Test
    public void outlookCalendarAuthorizedTest() {
        // TODO: test outlookCalendarAuthorized
    }

    /**
     * Test the property 'outlookCalendarId'
     */
    @Test
    public void outlookCalendarIdTest() {
        // TODO: test outlookCalendarId
    }

    /**
     * Test the property 'phone'
     */
    @Test
    public void phoneTest() {
        // TODO: test phone
    }

    /**
     * Test the property 'recurringAvailability'
     */
    @Test
    public void recurringAvailabilityTest() {
        // TODO: test recurringAvailability
    }

    /**
     * Test the property 'services'
     */
    @Test
    public void servicesTest() {
        // TODO: test services
    }

    /**
     * Test the property 'skypeName'
     */
    @Test
    public void skypeNameTest() {
        // TODO: test skypeName
    }

    /**
     * Test the property 'sortKey'
     */
    @Test
    public void sortKeyTest() {
        // TODO: test sortKey
    }

    /**
     * Test the property 'timezoneIana'
     */
    @Test
    public void timezoneIanaTest() {
        // TODO: test timezoneIana
    }

    /**
     * Test the property 'timezoneId'
     */
    @Test
    public void timezoneIdTest() {
        // TODO: test timezoneId
    }

    /**
     * Test the property 'timezoneOffset'
     */
    @Test
    public void timezoneOffsetTest() {
        // TODO: test timezoneOffset
    }

}
