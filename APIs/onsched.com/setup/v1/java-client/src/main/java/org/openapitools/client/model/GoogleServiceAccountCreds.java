/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleServiceAccountCreds
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleServiceAccountCreds {
  public static final String SERIALIZED_NAME_AUTH_PROVIDER_X509_CERT_URL = "auth_provider_x509_cert_url";
  @SerializedName(SERIALIZED_NAME_AUTH_PROVIDER_X509_CERT_URL)
  private String authProviderX509CertUrl;

  public static final String SERIALIZED_NAME_AUTH_URI = "auth_uri";
  @SerializedName(SERIALIZED_NAME_AUTH_URI)
  private String authUri;

  public static final String SERIALIZED_NAME_CLIENT_EMAIL = "client_email";
  @SerializedName(SERIALIZED_NAME_CLIENT_EMAIL)
  private String clientEmail;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_X509_CERT_URL = "client_x509_cert_url";
  @SerializedName(SERIALIZED_NAME_CLIENT_X509_CERT_URL)
  private String clientX509CertUrl;

  public static final String SERIALIZED_NAME_PRIVATE_KEY = "private_key";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY)
  private String privateKey;

  public static final String SERIALIZED_NAME_PRIVATE_KEY_ID = "private_key_id";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY_ID)
  private String privateKeyId;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_TOKEN_URI = "token_uri";
  @SerializedName(SERIALIZED_NAME_TOKEN_URI)
  private String tokenUri;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GoogleServiceAccountCreds() {
  }

  public GoogleServiceAccountCreds authProviderX509CertUrl(String authProviderX509CertUrl) {
    this.authProviderX509CertUrl = authProviderX509CertUrl;
    return this;
  }

  /**
   * Get authProviderX509CertUrl
   * @return authProviderX509CertUrl
   */
  @javax.annotation.Nullable
  public String getAuthProviderX509CertUrl() {
    return authProviderX509CertUrl;
  }

  public void setAuthProviderX509CertUrl(String authProviderX509CertUrl) {
    this.authProviderX509CertUrl = authProviderX509CertUrl;
  }


  public GoogleServiceAccountCreds authUri(String authUri) {
    this.authUri = authUri;
    return this;
  }

  /**
   * Get authUri
   * @return authUri
   */
  @javax.annotation.Nullable
  public String getAuthUri() {
    return authUri;
  }

  public void setAuthUri(String authUri) {
    this.authUri = authUri;
  }


  public GoogleServiceAccountCreds clientEmail(String clientEmail) {
    this.clientEmail = clientEmail;
    return this;
  }

  /**
   * Get clientEmail
   * @return clientEmail
   */
  @javax.annotation.Nullable
  public String getClientEmail() {
    return clientEmail;
  }

  public void setClientEmail(String clientEmail) {
    this.clientEmail = clientEmail;
  }


  public GoogleServiceAccountCreds clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public GoogleServiceAccountCreds clientX509CertUrl(String clientX509CertUrl) {
    this.clientX509CertUrl = clientX509CertUrl;
    return this;
  }

  /**
   * Get clientX509CertUrl
   * @return clientX509CertUrl
   */
  @javax.annotation.Nullable
  public String getClientX509CertUrl() {
    return clientX509CertUrl;
  }

  public void setClientX509CertUrl(String clientX509CertUrl) {
    this.clientX509CertUrl = clientX509CertUrl;
  }


  public GoogleServiceAccountCreds privateKey(String privateKey) {
    this.privateKey = privateKey;
    return this;
  }

  /**
   * Get privateKey
   * @return privateKey
   */
  @javax.annotation.Nullable
  public String getPrivateKey() {
    return privateKey;
  }

  public void setPrivateKey(String privateKey) {
    this.privateKey = privateKey;
  }


  public GoogleServiceAccountCreds privateKeyId(String privateKeyId) {
    this.privateKeyId = privateKeyId;
    return this;
  }

  /**
   * Get privateKeyId
   * @return privateKeyId
   */
  @javax.annotation.Nullable
  public String getPrivateKeyId() {
    return privateKeyId;
  }

  public void setPrivateKeyId(String privateKeyId) {
    this.privateKeyId = privateKeyId;
  }


  public GoogleServiceAccountCreds projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Get projectId
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public GoogleServiceAccountCreds tokenUri(String tokenUri) {
    this.tokenUri = tokenUri;
    return this;
  }

  /**
   * Get tokenUri
   * @return tokenUri
   */
  @javax.annotation.Nullable
  public String getTokenUri() {
    return tokenUri;
  }

  public void setTokenUri(String tokenUri) {
    this.tokenUri = tokenUri;
  }


  public GoogleServiceAccountCreds type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleServiceAccountCreds googleServiceAccountCreds = (GoogleServiceAccountCreds) o;
    return Objects.equals(this.authProviderX509CertUrl, googleServiceAccountCreds.authProviderX509CertUrl) &&
        Objects.equals(this.authUri, googleServiceAccountCreds.authUri) &&
        Objects.equals(this.clientEmail, googleServiceAccountCreds.clientEmail) &&
        Objects.equals(this.clientId, googleServiceAccountCreds.clientId) &&
        Objects.equals(this.clientX509CertUrl, googleServiceAccountCreds.clientX509CertUrl) &&
        Objects.equals(this.privateKey, googleServiceAccountCreds.privateKey) &&
        Objects.equals(this.privateKeyId, googleServiceAccountCreds.privateKeyId) &&
        Objects.equals(this.projectId, googleServiceAccountCreds.projectId) &&
        Objects.equals(this.tokenUri, googleServiceAccountCreds.tokenUri) &&
        Objects.equals(this.type, googleServiceAccountCreds.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authProviderX509CertUrl, authUri, clientEmail, clientId, clientX509CertUrl, privateKey, privateKeyId, projectId, tokenUri, type);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleServiceAccountCreds {\n");
    sb.append("    authProviderX509CertUrl: ").append(toIndentedString(authProviderX509CertUrl)).append("\n");
    sb.append("    authUri: ").append(toIndentedString(authUri)).append("\n");
    sb.append("    clientEmail: ").append(toIndentedString(clientEmail)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientX509CertUrl: ").append(toIndentedString(clientX509CertUrl)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    privateKeyId: ").append(toIndentedString(privateKeyId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    tokenUri: ").append(toIndentedString(tokenUri)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auth_provider_x509_cert_url");
    openapiFields.add("auth_uri");
    openapiFields.add("client_email");
    openapiFields.add("client_id");
    openapiFields.add("client_x509_cert_url");
    openapiFields.add("private_key");
    openapiFields.add("private_key_id");
    openapiFields.add("project_id");
    openapiFields.add("token_uri");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleServiceAccountCreds
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleServiceAccountCreds.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleServiceAccountCreds is not found in the empty JSON string", GoogleServiceAccountCreds.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleServiceAccountCreds.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleServiceAccountCreds` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("auth_provider_x509_cert_url") != null && !jsonObj.get("auth_provider_x509_cert_url").isJsonNull()) && !jsonObj.get("auth_provider_x509_cert_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_provider_x509_cert_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auth_provider_x509_cert_url").toString()));
      }
      if ((jsonObj.get("auth_uri") != null && !jsonObj.get("auth_uri").isJsonNull()) && !jsonObj.get("auth_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auth_uri").toString()));
      }
      if ((jsonObj.get("client_email") != null && !jsonObj.get("client_email").isJsonNull()) && !jsonObj.get("client_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_email").toString()));
      }
      if ((jsonObj.get("client_id") != null && !jsonObj.get("client_id").isJsonNull()) && !jsonObj.get("client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_id").toString()));
      }
      if ((jsonObj.get("client_x509_cert_url") != null && !jsonObj.get("client_x509_cert_url").isJsonNull()) && !jsonObj.get("client_x509_cert_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_x509_cert_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_x509_cert_url").toString()));
      }
      if ((jsonObj.get("private_key") != null && !jsonObj.get("private_key").isJsonNull()) && !jsonObj.get("private_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `private_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("private_key").toString()));
      }
      if ((jsonObj.get("private_key_id") != null && !jsonObj.get("private_key_id").isJsonNull()) && !jsonObj.get("private_key_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `private_key_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("private_key_id").toString()));
      }
      if ((jsonObj.get("project_id") != null && !jsonObj.get("project_id").isJsonNull()) && !jsonObj.get("project_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project_id").toString()));
      }
      if ((jsonObj.get("token_uri") != null && !jsonObj.get("token_uri").isJsonNull()) && !jsonObj.get("token_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_uri").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleServiceAccountCreds.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleServiceAccountCreds' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleServiceAccountCreds> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleServiceAccountCreds.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleServiceAccountCreds>() {
           @Override
           public void write(JsonWriter out, GoogleServiceAccountCreds value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleServiceAccountCreds read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleServiceAccountCreds given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleServiceAccountCreds
   * @throws IOException if the JSON string is invalid with respect to GoogleServiceAccountCreds
   */
  public static GoogleServiceAccountCreds fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleServiceAccountCreds.class);
  }

  /**
   * Convert an instance of GoogleServiceAccountCreds to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

