/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MasterTemplateSettingsInputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MasterTemplateSettingsInputModel {
  public static final String SERIALIZED_NAME_CENTER_EMAIL_CONTENT = "centerEmailContent";
  @SerializedName(SERIALIZED_NAME_CENTER_EMAIL_CONTENT)
  private Boolean centerEmailContent;

  public static final String SERIALIZED_NAME_CENTER_EMAIL_CONTENT_PANEL = "centerEmailContentPanel";
  @SerializedName(SERIALIZED_NAME_CENTER_EMAIL_CONTENT_PANEL)
  private Boolean centerEmailContentPanel;

  public static final String SERIALIZED_NAME_CENTER_EMAIL_FOOTER = "centerEmailFooter";
  @SerializedName(SERIALIZED_NAME_CENTER_EMAIL_FOOTER)
  private Boolean centerEmailFooter;

  public static final String SERIALIZED_NAME_CONTENT_BACKGROUND_COLOR = "contentBackgroundColor";
  @SerializedName(SERIALIZED_NAME_CONTENT_BACKGROUND_COLOR)
  private String contentBackgroundColor;

  public static final String SERIALIZED_NAME_CONTENT_COLOR = "contentColor";
  @SerializedName(SERIALIZED_NAME_CONTENT_COLOR)
  private String contentColor;

  public static final String SERIALIZED_NAME_CONTENT_LINK_COLOR = "contentLinkColor";
  @SerializedName(SERIALIZED_NAME_CONTENT_LINK_COLOR)
  private String contentLinkColor;

  public static final String SERIALIZED_NAME_EMAIL_BACKGROUND_COLOR = "emailBackgroundColor";
  @SerializedName(SERIALIZED_NAME_EMAIL_BACKGROUND_COLOR)
  private String emailBackgroundColor;

  public static final String SERIALIZED_NAME_EMAIL_COLOR = "emailColor";
  @SerializedName(SERIALIZED_NAME_EMAIL_COLOR)
  private String emailColor;

  public static final String SERIALIZED_NAME_EMAIL_LINK_COLOR = "emailLinkColor";
  @SerializedName(SERIALIZED_NAME_EMAIL_LINK_COLOR)
  private String emailLinkColor;

  public static final String SERIALIZED_NAME_FOOTER_FONT_SIZE = "footerFontSize";
  @SerializedName(SERIALIZED_NAME_FOOTER_FONT_SIZE)
  private String footerFontSize;

  public static final String SERIALIZED_NAME_FOOTER_LOGO_HEIGHT = "footerLogoHeight";
  @SerializedName(SERIALIZED_NAME_FOOTER_LOGO_HEIGHT)
  private String footerLogoHeight;

  public static final String SERIALIZED_NAME_FOOTER_LOGO_PADDING = "footerLogoPadding";
  @SerializedName(SERIALIZED_NAME_FOOTER_LOGO_PADDING)
  private String footerLogoPadding;

  public static final String SERIALIZED_NAME_FOOTER_PANEL_EMAIL_CONTACT = "footerPanelEmailContact";
  @SerializedName(SERIALIZED_NAME_FOOTER_PANEL_EMAIL_CONTACT)
  private Boolean footerPanelEmailContact;

  public static final String SERIALIZED_NAME_FOOTER_PANEL_PHONE_CONTACT = "footerPanelPhoneContact";
  @SerializedName(SERIALIZED_NAME_FOOTER_PANEL_PHONE_CONTACT)
  private Boolean footerPanelPhoneContact;

  public static final String SERIALIZED_NAME_FOOTER_PANEL_WEBSITE_CONTACT = "footerPanelWebsiteContact";
  @SerializedName(SERIALIZED_NAME_FOOTER_PANEL_WEBSITE_CONTACT)
  private Boolean footerPanelWebsiteContact;

  public static final String SERIALIZED_NAME_HEADER_LOGO_HEIGHT = "headerLogoHeight";
  @SerializedName(SERIALIZED_NAME_HEADER_LOGO_HEIGHT)
  private String headerLogoHeight;

  public static final String SERIALIZED_NAME_HEADER_LOGO_PADDING = "headerLogoPadding";
  @SerializedName(SERIALIZED_NAME_HEADER_LOGO_PADDING)
  private String headerLogoPadding;

  public static final String SERIALIZED_NAME_PANEL_BACKGROUND_COLOR = "panelBackgroundColor";
  @SerializedName(SERIALIZED_NAME_PANEL_BACKGROUND_COLOR)
  private String panelBackgroundColor;

  public static final String SERIALIZED_NAME_PANEL_COLOR = "panelColor";
  @SerializedName(SERIALIZED_NAME_PANEL_COLOR)
  private String panelColor;

  public static final String SERIALIZED_NAME_PANEL_LINK_COLOR = "panelLinkColor";
  @SerializedName(SERIALIZED_NAME_PANEL_LINK_COLOR)
  private String panelLinkColor;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_LINK = "privacyPolicyLink";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_LINK)
  private String privacyPolicyLink;

  public static final String SERIALIZED_NAME_SHOW_CONTENT_PANEL = "showContentPanel";
  @SerializedName(SERIALIZED_NAME_SHOW_CONTENT_PANEL)
  private Boolean showContentPanel;

  public static final String SERIALIZED_NAME_SHOW_FOOTER_LOGO = "showFooterLogo";
  @SerializedName(SERIALIZED_NAME_SHOW_FOOTER_LOGO)
  private Boolean showFooterLogo;

  public static final String SERIALIZED_NAME_SHOW_FOOTER_PANEL = "showFooterPanel";
  @SerializedName(SERIALIZED_NAME_SHOW_FOOTER_PANEL)
  private Boolean showFooterPanel;

  public static final String SERIALIZED_NAME_SHOW_HEADER_LOGO = "showHeaderLogo";
  @SerializedName(SERIALIZED_NAME_SHOW_HEADER_LOGO)
  private Boolean showHeaderLogo;

  public static final String SERIALIZED_NAME_SHOW_HEADER_PANEL = "showHeaderPanel";
  @SerializedName(SERIALIZED_NAME_SHOW_HEADER_PANEL)
  private Boolean showHeaderPanel;

  public MasterTemplateSettingsInputModel() {
  }

  public MasterTemplateSettingsInputModel centerEmailContent(Boolean centerEmailContent) {
    this.centerEmailContent = centerEmailContent;
    return this;
  }

  /**
   * Get centerEmailContent
   * @return centerEmailContent
   */
  @javax.annotation.Nullable
  public Boolean getCenterEmailContent() {
    return centerEmailContent;
  }

  public void setCenterEmailContent(Boolean centerEmailContent) {
    this.centerEmailContent = centerEmailContent;
  }


  public MasterTemplateSettingsInputModel centerEmailContentPanel(Boolean centerEmailContentPanel) {
    this.centerEmailContentPanel = centerEmailContentPanel;
    return this;
  }

  /**
   * Get centerEmailContentPanel
   * @return centerEmailContentPanel
   */
  @javax.annotation.Nullable
  public Boolean getCenterEmailContentPanel() {
    return centerEmailContentPanel;
  }

  public void setCenterEmailContentPanel(Boolean centerEmailContentPanel) {
    this.centerEmailContentPanel = centerEmailContentPanel;
  }


  public MasterTemplateSettingsInputModel centerEmailFooter(Boolean centerEmailFooter) {
    this.centerEmailFooter = centerEmailFooter;
    return this;
  }

  /**
   * Get centerEmailFooter
   * @return centerEmailFooter
   */
  @javax.annotation.Nullable
  public Boolean getCenterEmailFooter() {
    return centerEmailFooter;
  }

  public void setCenterEmailFooter(Boolean centerEmailFooter) {
    this.centerEmailFooter = centerEmailFooter;
  }


  public MasterTemplateSettingsInputModel contentBackgroundColor(String contentBackgroundColor) {
    this.contentBackgroundColor = contentBackgroundColor;
    return this;
  }

  /**
   * Get contentBackgroundColor
   * @return contentBackgroundColor
   */
  @javax.annotation.Nullable
  public String getContentBackgroundColor() {
    return contentBackgroundColor;
  }

  public void setContentBackgroundColor(String contentBackgroundColor) {
    this.contentBackgroundColor = contentBackgroundColor;
  }


  public MasterTemplateSettingsInputModel contentColor(String contentColor) {
    this.contentColor = contentColor;
    return this;
  }

  /**
   * Get contentColor
   * @return contentColor
   */
  @javax.annotation.Nullable
  public String getContentColor() {
    return contentColor;
  }

  public void setContentColor(String contentColor) {
    this.contentColor = contentColor;
  }


  public MasterTemplateSettingsInputModel contentLinkColor(String contentLinkColor) {
    this.contentLinkColor = contentLinkColor;
    return this;
  }

  /**
   * Get contentLinkColor
   * @return contentLinkColor
   */
  @javax.annotation.Nullable
  public String getContentLinkColor() {
    return contentLinkColor;
  }

  public void setContentLinkColor(String contentLinkColor) {
    this.contentLinkColor = contentLinkColor;
  }


  public MasterTemplateSettingsInputModel emailBackgroundColor(String emailBackgroundColor) {
    this.emailBackgroundColor = emailBackgroundColor;
    return this;
  }

  /**
   * Get emailBackgroundColor
   * @return emailBackgroundColor
   */
  @javax.annotation.Nullable
  public String getEmailBackgroundColor() {
    return emailBackgroundColor;
  }

  public void setEmailBackgroundColor(String emailBackgroundColor) {
    this.emailBackgroundColor = emailBackgroundColor;
  }


  public MasterTemplateSettingsInputModel emailColor(String emailColor) {
    this.emailColor = emailColor;
    return this;
  }

  /**
   * Get emailColor
   * @return emailColor
   */
  @javax.annotation.Nullable
  public String getEmailColor() {
    return emailColor;
  }

  public void setEmailColor(String emailColor) {
    this.emailColor = emailColor;
  }


  public MasterTemplateSettingsInputModel emailLinkColor(String emailLinkColor) {
    this.emailLinkColor = emailLinkColor;
    return this;
  }

  /**
   * Get emailLinkColor
   * @return emailLinkColor
   */
  @javax.annotation.Nullable
  public String getEmailLinkColor() {
    return emailLinkColor;
  }

  public void setEmailLinkColor(String emailLinkColor) {
    this.emailLinkColor = emailLinkColor;
  }


  public MasterTemplateSettingsInputModel footerFontSize(String footerFontSize) {
    this.footerFontSize = footerFontSize;
    return this;
  }

  /**
   * Get footerFontSize
   * @return footerFontSize
   */
  @javax.annotation.Nullable
  public String getFooterFontSize() {
    return footerFontSize;
  }

  public void setFooterFontSize(String footerFontSize) {
    this.footerFontSize = footerFontSize;
  }


  public MasterTemplateSettingsInputModel footerLogoHeight(String footerLogoHeight) {
    this.footerLogoHeight = footerLogoHeight;
    return this;
  }

  /**
   * Get footerLogoHeight
   * @return footerLogoHeight
   */
  @javax.annotation.Nullable
  public String getFooterLogoHeight() {
    return footerLogoHeight;
  }

  public void setFooterLogoHeight(String footerLogoHeight) {
    this.footerLogoHeight = footerLogoHeight;
  }


  public MasterTemplateSettingsInputModel footerLogoPadding(String footerLogoPadding) {
    this.footerLogoPadding = footerLogoPadding;
    return this;
  }

  /**
   * Get footerLogoPadding
   * @return footerLogoPadding
   */
  @javax.annotation.Nullable
  public String getFooterLogoPadding() {
    return footerLogoPadding;
  }

  public void setFooterLogoPadding(String footerLogoPadding) {
    this.footerLogoPadding = footerLogoPadding;
  }


  public MasterTemplateSettingsInputModel footerPanelEmailContact(Boolean footerPanelEmailContact) {
    this.footerPanelEmailContact = footerPanelEmailContact;
    return this;
  }

  /**
   * Get footerPanelEmailContact
   * @return footerPanelEmailContact
   */
  @javax.annotation.Nullable
  public Boolean getFooterPanelEmailContact() {
    return footerPanelEmailContact;
  }

  public void setFooterPanelEmailContact(Boolean footerPanelEmailContact) {
    this.footerPanelEmailContact = footerPanelEmailContact;
  }


  public MasterTemplateSettingsInputModel footerPanelPhoneContact(Boolean footerPanelPhoneContact) {
    this.footerPanelPhoneContact = footerPanelPhoneContact;
    return this;
  }

  /**
   * Get footerPanelPhoneContact
   * @return footerPanelPhoneContact
   */
  @javax.annotation.Nullable
  public Boolean getFooterPanelPhoneContact() {
    return footerPanelPhoneContact;
  }

  public void setFooterPanelPhoneContact(Boolean footerPanelPhoneContact) {
    this.footerPanelPhoneContact = footerPanelPhoneContact;
  }


  public MasterTemplateSettingsInputModel footerPanelWebsiteContact(Boolean footerPanelWebsiteContact) {
    this.footerPanelWebsiteContact = footerPanelWebsiteContact;
    return this;
  }

  /**
   * Get footerPanelWebsiteContact
   * @return footerPanelWebsiteContact
   */
  @javax.annotation.Nullable
  public Boolean getFooterPanelWebsiteContact() {
    return footerPanelWebsiteContact;
  }

  public void setFooterPanelWebsiteContact(Boolean footerPanelWebsiteContact) {
    this.footerPanelWebsiteContact = footerPanelWebsiteContact;
  }


  public MasterTemplateSettingsInputModel headerLogoHeight(String headerLogoHeight) {
    this.headerLogoHeight = headerLogoHeight;
    return this;
  }

  /**
   * Get headerLogoHeight
   * @return headerLogoHeight
   */
  @javax.annotation.Nullable
  public String getHeaderLogoHeight() {
    return headerLogoHeight;
  }

  public void setHeaderLogoHeight(String headerLogoHeight) {
    this.headerLogoHeight = headerLogoHeight;
  }


  public MasterTemplateSettingsInputModel headerLogoPadding(String headerLogoPadding) {
    this.headerLogoPadding = headerLogoPadding;
    return this;
  }

  /**
   * Get headerLogoPadding
   * @return headerLogoPadding
   */
  @javax.annotation.Nullable
  public String getHeaderLogoPadding() {
    return headerLogoPadding;
  }

  public void setHeaderLogoPadding(String headerLogoPadding) {
    this.headerLogoPadding = headerLogoPadding;
  }


  public MasterTemplateSettingsInputModel panelBackgroundColor(String panelBackgroundColor) {
    this.panelBackgroundColor = panelBackgroundColor;
    return this;
  }

  /**
   * Get panelBackgroundColor
   * @return panelBackgroundColor
   */
  @javax.annotation.Nullable
  public String getPanelBackgroundColor() {
    return panelBackgroundColor;
  }

  public void setPanelBackgroundColor(String panelBackgroundColor) {
    this.panelBackgroundColor = panelBackgroundColor;
  }


  public MasterTemplateSettingsInputModel panelColor(String panelColor) {
    this.panelColor = panelColor;
    return this;
  }

  /**
   * Get panelColor
   * @return panelColor
   */
  @javax.annotation.Nullable
  public String getPanelColor() {
    return panelColor;
  }

  public void setPanelColor(String panelColor) {
    this.panelColor = panelColor;
  }


  public MasterTemplateSettingsInputModel panelLinkColor(String panelLinkColor) {
    this.panelLinkColor = panelLinkColor;
    return this;
  }

  /**
   * Get panelLinkColor
   * @return panelLinkColor
   */
  @javax.annotation.Nullable
  public String getPanelLinkColor() {
    return panelLinkColor;
  }

  public void setPanelLinkColor(String panelLinkColor) {
    this.panelLinkColor = panelLinkColor;
  }


  public MasterTemplateSettingsInputModel privacyPolicyLink(String privacyPolicyLink) {
    this.privacyPolicyLink = privacyPolicyLink;
    return this;
  }

  /**
   * Get privacyPolicyLink
   * @return privacyPolicyLink
   */
  @javax.annotation.Nullable
  public String getPrivacyPolicyLink() {
    return privacyPolicyLink;
  }

  public void setPrivacyPolicyLink(String privacyPolicyLink) {
    this.privacyPolicyLink = privacyPolicyLink;
  }


  public MasterTemplateSettingsInputModel showContentPanel(Boolean showContentPanel) {
    this.showContentPanel = showContentPanel;
    return this;
  }

  /**
   * Get showContentPanel
   * @return showContentPanel
   */
  @javax.annotation.Nullable
  public Boolean getShowContentPanel() {
    return showContentPanel;
  }

  public void setShowContentPanel(Boolean showContentPanel) {
    this.showContentPanel = showContentPanel;
  }


  public MasterTemplateSettingsInputModel showFooterLogo(Boolean showFooterLogo) {
    this.showFooterLogo = showFooterLogo;
    return this;
  }

  /**
   * Get showFooterLogo
   * @return showFooterLogo
   */
  @javax.annotation.Nullable
  public Boolean getShowFooterLogo() {
    return showFooterLogo;
  }

  public void setShowFooterLogo(Boolean showFooterLogo) {
    this.showFooterLogo = showFooterLogo;
  }


  public MasterTemplateSettingsInputModel showFooterPanel(Boolean showFooterPanel) {
    this.showFooterPanel = showFooterPanel;
    return this;
  }

  /**
   * Get showFooterPanel
   * @return showFooterPanel
   */
  @javax.annotation.Nullable
  public Boolean getShowFooterPanel() {
    return showFooterPanel;
  }

  public void setShowFooterPanel(Boolean showFooterPanel) {
    this.showFooterPanel = showFooterPanel;
  }


  public MasterTemplateSettingsInputModel showHeaderLogo(Boolean showHeaderLogo) {
    this.showHeaderLogo = showHeaderLogo;
    return this;
  }

  /**
   * Get showHeaderLogo
   * @return showHeaderLogo
   */
  @javax.annotation.Nullable
  public Boolean getShowHeaderLogo() {
    return showHeaderLogo;
  }

  public void setShowHeaderLogo(Boolean showHeaderLogo) {
    this.showHeaderLogo = showHeaderLogo;
  }


  public MasterTemplateSettingsInputModel showHeaderPanel(Boolean showHeaderPanel) {
    this.showHeaderPanel = showHeaderPanel;
    return this;
  }

  /**
   * Get showHeaderPanel
   * @return showHeaderPanel
   */
  @javax.annotation.Nullable
  public Boolean getShowHeaderPanel() {
    return showHeaderPanel;
  }

  public void setShowHeaderPanel(Boolean showHeaderPanel) {
    this.showHeaderPanel = showHeaderPanel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MasterTemplateSettingsInputModel masterTemplateSettingsInputModel = (MasterTemplateSettingsInputModel) o;
    return Objects.equals(this.centerEmailContent, masterTemplateSettingsInputModel.centerEmailContent) &&
        Objects.equals(this.centerEmailContentPanel, masterTemplateSettingsInputModel.centerEmailContentPanel) &&
        Objects.equals(this.centerEmailFooter, masterTemplateSettingsInputModel.centerEmailFooter) &&
        Objects.equals(this.contentBackgroundColor, masterTemplateSettingsInputModel.contentBackgroundColor) &&
        Objects.equals(this.contentColor, masterTemplateSettingsInputModel.contentColor) &&
        Objects.equals(this.contentLinkColor, masterTemplateSettingsInputModel.contentLinkColor) &&
        Objects.equals(this.emailBackgroundColor, masterTemplateSettingsInputModel.emailBackgroundColor) &&
        Objects.equals(this.emailColor, masterTemplateSettingsInputModel.emailColor) &&
        Objects.equals(this.emailLinkColor, masterTemplateSettingsInputModel.emailLinkColor) &&
        Objects.equals(this.footerFontSize, masterTemplateSettingsInputModel.footerFontSize) &&
        Objects.equals(this.footerLogoHeight, masterTemplateSettingsInputModel.footerLogoHeight) &&
        Objects.equals(this.footerLogoPadding, masterTemplateSettingsInputModel.footerLogoPadding) &&
        Objects.equals(this.footerPanelEmailContact, masterTemplateSettingsInputModel.footerPanelEmailContact) &&
        Objects.equals(this.footerPanelPhoneContact, masterTemplateSettingsInputModel.footerPanelPhoneContact) &&
        Objects.equals(this.footerPanelWebsiteContact, masterTemplateSettingsInputModel.footerPanelWebsiteContact) &&
        Objects.equals(this.headerLogoHeight, masterTemplateSettingsInputModel.headerLogoHeight) &&
        Objects.equals(this.headerLogoPadding, masterTemplateSettingsInputModel.headerLogoPadding) &&
        Objects.equals(this.panelBackgroundColor, masterTemplateSettingsInputModel.panelBackgroundColor) &&
        Objects.equals(this.panelColor, masterTemplateSettingsInputModel.panelColor) &&
        Objects.equals(this.panelLinkColor, masterTemplateSettingsInputModel.panelLinkColor) &&
        Objects.equals(this.privacyPolicyLink, masterTemplateSettingsInputModel.privacyPolicyLink) &&
        Objects.equals(this.showContentPanel, masterTemplateSettingsInputModel.showContentPanel) &&
        Objects.equals(this.showFooterLogo, masterTemplateSettingsInputModel.showFooterLogo) &&
        Objects.equals(this.showFooterPanel, masterTemplateSettingsInputModel.showFooterPanel) &&
        Objects.equals(this.showHeaderLogo, masterTemplateSettingsInputModel.showHeaderLogo) &&
        Objects.equals(this.showHeaderPanel, masterTemplateSettingsInputModel.showHeaderPanel);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(centerEmailContent, centerEmailContentPanel, centerEmailFooter, contentBackgroundColor, contentColor, contentLinkColor, emailBackgroundColor, emailColor, emailLinkColor, footerFontSize, footerLogoHeight, footerLogoPadding, footerPanelEmailContact, footerPanelPhoneContact, footerPanelWebsiteContact, headerLogoHeight, headerLogoPadding, panelBackgroundColor, panelColor, panelLinkColor, privacyPolicyLink, showContentPanel, showFooterLogo, showFooterPanel, showHeaderLogo, showHeaderPanel);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MasterTemplateSettingsInputModel {\n");
    sb.append("    centerEmailContent: ").append(toIndentedString(centerEmailContent)).append("\n");
    sb.append("    centerEmailContentPanel: ").append(toIndentedString(centerEmailContentPanel)).append("\n");
    sb.append("    centerEmailFooter: ").append(toIndentedString(centerEmailFooter)).append("\n");
    sb.append("    contentBackgroundColor: ").append(toIndentedString(contentBackgroundColor)).append("\n");
    sb.append("    contentColor: ").append(toIndentedString(contentColor)).append("\n");
    sb.append("    contentLinkColor: ").append(toIndentedString(contentLinkColor)).append("\n");
    sb.append("    emailBackgroundColor: ").append(toIndentedString(emailBackgroundColor)).append("\n");
    sb.append("    emailColor: ").append(toIndentedString(emailColor)).append("\n");
    sb.append("    emailLinkColor: ").append(toIndentedString(emailLinkColor)).append("\n");
    sb.append("    footerFontSize: ").append(toIndentedString(footerFontSize)).append("\n");
    sb.append("    footerLogoHeight: ").append(toIndentedString(footerLogoHeight)).append("\n");
    sb.append("    footerLogoPadding: ").append(toIndentedString(footerLogoPadding)).append("\n");
    sb.append("    footerPanelEmailContact: ").append(toIndentedString(footerPanelEmailContact)).append("\n");
    sb.append("    footerPanelPhoneContact: ").append(toIndentedString(footerPanelPhoneContact)).append("\n");
    sb.append("    footerPanelWebsiteContact: ").append(toIndentedString(footerPanelWebsiteContact)).append("\n");
    sb.append("    headerLogoHeight: ").append(toIndentedString(headerLogoHeight)).append("\n");
    sb.append("    headerLogoPadding: ").append(toIndentedString(headerLogoPadding)).append("\n");
    sb.append("    panelBackgroundColor: ").append(toIndentedString(panelBackgroundColor)).append("\n");
    sb.append("    panelColor: ").append(toIndentedString(panelColor)).append("\n");
    sb.append("    panelLinkColor: ").append(toIndentedString(panelLinkColor)).append("\n");
    sb.append("    privacyPolicyLink: ").append(toIndentedString(privacyPolicyLink)).append("\n");
    sb.append("    showContentPanel: ").append(toIndentedString(showContentPanel)).append("\n");
    sb.append("    showFooterLogo: ").append(toIndentedString(showFooterLogo)).append("\n");
    sb.append("    showFooterPanel: ").append(toIndentedString(showFooterPanel)).append("\n");
    sb.append("    showHeaderLogo: ").append(toIndentedString(showHeaderLogo)).append("\n");
    sb.append("    showHeaderPanel: ").append(toIndentedString(showHeaderPanel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("centerEmailContent");
    openapiFields.add("centerEmailContentPanel");
    openapiFields.add("centerEmailFooter");
    openapiFields.add("contentBackgroundColor");
    openapiFields.add("contentColor");
    openapiFields.add("contentLinkColor");
    openapiFields.add("emailBackgroundColor");
    openapiFields.add("emailColor");
    openapiFields.add("emailLinkColor");
    openapiFields.add("footerFontSize");
    openapiFields.add("footerLogoHeight");
    openapiFields.add("footerLogoPadding");
    openapiFields.add("footerPanelEmailContact");
    openapiFields.add("footerPanelPhoneContact");
    openapiFields.add("footerPanelWebsiteContact");
    openapiFields.add("headerLogoHeight");
    openapiFields.add("headerLogoPadding");
    openapiFields.add("panelBackgroundColor");
    openapiFields.add("panelColor");
    openapiFields.add("panelLinkColor");
    openapiFields.add("privacyPolicyLink");
    openapiFields.add("showContentPanel");
    openapiFields.add("showFooterLogo");
    openapiFields.add("showFooterPanel");
    openapiFields.add("showHeaderLogo");
    openapiFields.add("showHeaderPanel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MasterTemplateSettingsInputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MasterTemplateSettingsInputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MasterTemplateSettingsInputModel is not found in the empty JSON string", MasterTemplateSettingsInputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MasterTemplateSettingsInputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MasterTemplateSettingsInputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contentBackgroundColor") != null && !jsonObj.get("contentBackgroundColor").isJsonNull()) && !jsonObj.get("contentBackgroundColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentBackgroundColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentBackgroundColor").toString()));
      }
      if ((jsonObj.get("contentColor") != null && !jsonObj.get("contentColor").isJsonNull()) && !jsonObj.get("contentColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentColor").toString()));
      }
      if ((jsonObj.get("contentLinkColor") != null && !jsonObj.get("contentLinkColor").isJsonNull()) && !jsonObj.get("contentLinkColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentLinkColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentLinkColor").toString()));
      }
      if ((jsonObj.get("emailBackgroundColor") != null && !jsonObj.get("emailBackgroundColor").isJsonNull()) && !jsonObj.get("emailBackgroundColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailBackgroundColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailBackgroundColor").toString()));
      }
      if ((jsonObj.get("emailColor") != null && !jsonObj.get("emailColor").isJsonNull()) && !jsonObj.get("emailColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailColor").toString()));
      }
      if ((jsonObj.get("emailLinkColor") != null && !jsonObj.get("emailLinkColor").isJsonNull()) && !jsonObj.get("emailLinkColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailLinkColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailLinkColor").toString()));
      }
      if ((jsonObj.get("footerFontSize") != null && !jsonObj.get("footerFontSize").isJsonNull()) && !jsonObj.get("footerFontSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerFontSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerFontSize").toString()));
      }
      if ((jsonObj.get("footerLogoHeight") != null && !jsonObj.get("footerLogoHeight").isJsonNull()) && !jsonObj.get("footerLogoHeight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerLogoHeight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerLogoHeight").toString()));
      }
      if ((jsonObj.get("footerLogoPadding") != null && !jsonObj.get("footerLogoPadding").isJsonNull()) && !jsonObj.get("footerLogoPadding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerLogoPadding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerLogoPadding").toString()));
      }
      if ((jsonObj.get("headerLogoHeight") != null && !jsonObj.get("headerLogoHeight").isJsonNull()) && !jsonObj.get("headerLogoHeight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headerLogoHeight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headerLogoHeight").toString()));
      }
      if ((jsonObj.get("headerLogoPadding") != null && !jsonObj.get("headerLogoPadding").isJsonNull()) && !jsonObj.get("headerLogoPadding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headerLogoPadding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headerLogoPadding").toString()));
      }
      if ((jsonObj.get("panelBackgroundColor") != null && !jsonObj.get("panelBackgroundColor").isJsonNull()) && !jsonObj.get("panelBackgroundColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `panelBackgroundColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("panelBackgroundColor").toString()));
      }
      if ((jsonObj.get("panelColor") != null && !jsonObj.get("panelColor").isJsonNull()) && !jsonObj.get("panelColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `panelColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("panelColor").toString()));
      }
      if ((jsonObj.get("panelLinkColor") != null && !jsonObj.get("panelLinkColor").isJsonNull()) && !jsonObj.get("panelLinkColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `panelLinkColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("panelLinkColor").toString()));
      }
      if ((jsonObj.get("privacyPolicyLink") != null && !jsonObj.get("privacyPolicyLink").isJsonNull()) && !jsonObj.get("privacyPolicyLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacyPolicyLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacyPolicyLink").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MasterTemplateSettingsInputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MasterTemplateSettingsInputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MasterTemplateSettingsInputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MasterTemplateSettingsInputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<MasterTemplateSettingsInputModel>() {
           @Override
           public void write(JsonWriter out, MasterTemplateSettingsInputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MasterTemplateSettingsInputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MasterTemplateSettingsInputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MasterTemplateSettingsInputModel
   * @throws IOException if the JSON string is invalid with respect to MasterTemplateSettingsInputModel
   */
  public static MasterTemplateSettingsInputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MasterTemplateSettingsInputModel.class);
  }

  /**
   * Convert an instance of MasterTemplateSettingsInputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

