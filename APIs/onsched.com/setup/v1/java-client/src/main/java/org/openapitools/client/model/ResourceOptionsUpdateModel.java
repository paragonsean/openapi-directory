/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceOptionsUpdateModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceOptionsUpdateModel {
  public static final String SERIALIZED_NAME_BIO_LINK = "bioLink";
  @SerializedName(SERIALIZED_NAME_BIO_LINK)
  private String bioLink;

  public static final String SERIALIZED_NAME_BOOKING_NOTIFICATION = "bookingNotification";
  @SerializedName(SERIALIZED_NAME_BOOKING_NOTIFICATION)
  private Integer bookingNotification;

  public static final String SERIALIZED_NAME_CALENDAR_AVAILABILITY = "calendarAvailability";
  @SerializedName(SERIALIZED_NAME_CALENDAR_AVAILABILITY)
  private Integer calendarAvailability;

  public static final String SERIALIZED_NAME_DISPLAY_COLOR = "displayColor";
  @SerializedName(SERIALIZED_NAME_DISPLAY_COLOR)
  private String displayColor;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "effectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private OffsetDateTime effectiveDate;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GOOGLE_CALENDAR_ID = "googleCalendarId";
  @SerializedName(SERIALIZED_NAME_GOOGLE_CALENDAR_ID)
  private String googleCalendarId;

  public static final String SERIALIZED_NAME_HOURLY = "hourly";
  @SerializedName(SERIALIZED_NAME_HOURLY)
  private Double hourly;

  public static final String SERIALIZED_NAME_IGNORE_BUSINESS_HOURS = "ignoreBusinessHours";
  @SerializedName(SERIALIZED_NAME_IGNORE_BUSINESS_HOURS)
  private Boolean ignoreBusinessHours;

  public static final String SERIALIZED_NAME_NOTIFICATION_TYPE = "notificationType";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TYPE)
  private Integer notificationType;

  public static final String SERIALIZED_NAME_OUTLOOK_CALENDAR_ID = "outlookCalendarId";
  @SerializedName(SERIALIZED_NAME_OUTLOOK_CALENDAR_ID)
  private String outlookCalendarId;

  public static final String SERIALIZED_NAME_SORT_KEY = "sortKey";
  @SerializedName(SERIALIZED_NAME_SORT_KEY)
  private Integer sortKey;

  public ResourceOptionsUpdateModel() {
  }

  public ResourceOptionsUpdateModel bioLink(String bioLink) {
    this.bioLink = bioLink;
    return this;
  }

  /**
   * Get bioLink
   * @return bioLink
   */
  @javax.annotation.Nullable
  public String getBioLink() {
    return bioLink;
  }

  public void setBioLink(String bioLink) {
    this.bioLink = bioLink;
  }


  public ResourceOptionsUpdateModel bookingNotification(Integer bookingNotification) {
    this.bookingNotification = bookingNotification;
    return this;
  }

  /**
   * Get bookingNotification
   * @return bookingNotification
   */
  @javax.annotation.Nullable
  public Integer getBookingNotification() {
    return bookingNotification;
  }

  public void setBookingNotification(Integer bookingNotification) {
    this.bookingNotification = bookingNotification;
  }


  public ResourceOptionsUpdateModel calendarAvailability(Integer calendarAvailability) {
    this.calendarAvailability = calendarAvailability;
    return this;
  }

  /**
   * 0 &#x3D; OnSched Availability, 1 &#x3D; Google Calendar, 2 &#x3D; Outlook Calendar
   * @return calendarAvailability
   */
  @javax.annotation.Nullable
  public Integer getCalendarAvailability() {
    return calendarAvailability;
  }

  public void setCalendarAvailability(Integer calendarAvailability) {
    this.calendarAvailability = calendarAvailability;
  }


  public ResourceOptionsUpdateModel displayColor(String displayColor) {
    this.displayColor = displayColor;
    return this;
  }

  /**
   * Get displayColor
   * @return displayColor
   */
  @javax.annotation.Nullable
  public String getDisplayColor() {
    return displayColor;
  }

  public void setDisplayColor(String displayColor) {
    this.displayColor = displayColor;
  }


  public ResourceOptionsUpdateModel effectiveDate(OffsetDateTime effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

  /**
   * Get effectiveDate
   * @return effectiveDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(OffsetDateTime effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public ResourceOptionsUpdateModel gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public ResourceOptionsUpdateModel googleCalendarId(String googleCalendarId) {
    this.googleCalendarId = googleCalendarId;
    return this;
  }

  /**
   * Get googleCalendarId
   * @return googleCalendarId
   */
  @javax.annotation.Nullable
  public String getGoogleCalendarId() {
    return googleCalendarId;
  }

  public void setGoogleCalendarId(String googleCalendarId) {
    this.googleCalendarId = googleCalendarId;
  }


  public ResourceOptionsUpdateModel hourly(Double hourly) {
    this.hourly = hourly;
    return this;
  }

  /**
   * Get hourly
   * @return hourly
   */
  @javax.annotation.Nullable
  public Double getHourly() {
    return hourly;
  }

  public void setHourly(Double hourly) {
    this.hourly = hourly;
  }


  public ResourceOptionsUpdateModel ignoreBusinessHours(Boolean ignoreBusinessHours) {
    this.ignoreBusinessHours = ignoreBusinessHours;
    return this;
  }

  /**
   * Get ignoreBusinessHours
   * @return ignoreBusinessHours
   */
  @javax.annotation.Nullable
  public Boolean getIgnoreBusinessHours() {
    return ignoreBusinessHours;
  }

  public void setIgnoreBusinessHours(Boolean ignoreBusinessHours) {
    this.ignoreBusinessHours = ignoreBusinessHours;
  }


  public ResourceOptionsUpdateModel notificationType(Integer notificationType) {
    this.notificationType = notificationType;
    return this;
  }

  /**
   * 0 &#x3D; None, 1&#x3D;Online Bookings 2&#x3D;All Bookings.
   * @return notificationType
   */
  @javax.annotation.Nullable
  public Integer getNotificationType() {
    return notificationType;
  }

  public void setNotificationType(Integer notificationType) {
    this.notificationType = notificationType;
  }


  public ResourceOptionsUpdateModel outlookCalendarId(String outlookCalendarId) {
    this.outlookCalendarId = outlookCalendarId;
    return this;
  }

  /**
   * Get outlookCalendarId
   * @return outlookCalendarId
   */
  @javax.annotation.Nullable
  public String getOutlookCalendarId() {
    return outlookCalendarId;
  }

  public void setOutlookCalendarId(String outlookCalendarId) {
    this.outlookCalendarId = outlookCalendarId;
  }


  public ResourceOptionsUpdateModel sortKey(Integer sortKey) {
    this.sortKey = sortKey;
    return this;
  }

  /**
   * Get sortKey
   * @return sortKey
   */
  @javax.annotation.Nullable
  public Integer getSortKey() {
    return sortKey;
  }

  public void setSortKey(Integer sortKey) {
    this.sortKey = sortKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceOptionsUpdateModel resourceOptionsUpdateModel = (ResourceOptionsUpdateModel) o;
    return Objects.equals(this.bioLink, resourceOptionsUpdateModel.bioLink) &&
        Objects.equals(this.bookingNotification, resourceOptionsUpdateModel.bookingNotification) &&
        Objects.equals(this.calendarAvailability, resourceOptionsUpdateModel.calendarAvailability) &&
        Objects.equals(this.displayColor, resourceOptionsUpdateModel.displayColor) &&
        Objects.equals(this.effectiveDate, resourceOptionsUpdateModel.effectiveDate) &&
        Objects.equals(this.gender, resourceOptionsUpdateModel.gender) &&
        Objects.equals(this.googleCalendarId, resourceOptionsUpdateModel.googleCalendarId) &&
        Objects.equals(this.hourly, resourceOptionsUpdateModel.hourly) &&
        Objects.equals(this.ignoreBusinessHours, resourceOptionsUpdateModel.ignoreBusinessHours) &&
        Objects.equals(this.notificationType, resourceOptionsUpdateModel.notificationType) &&
        Objects.equals(this.outlookCalendarId, resourceOptionsUpdateModel.outlookCalendarId) &&
        Objects.equals(this.sortKey, resourceOptionsUpdateModel.sortKey);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bioLink, bookingNotification, calendarAvailability, displayColor, effectiveDate, gender, googleCalendarId, hourly, ignoreBusinessHours, notificationType, outlookCalendarId, sortKey);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceOptionsUpdateModel {\n");
    sb.append("    bioLink: ").append(toIndentedString(bioLink)).append("\n");
    sb.append("    bookingNotification: ").append(toIndentedString(bookingNotification)).append("\n");
    sb.append("    calendarAvailability: ").append(toIndentedString(calendarAvailability)).append("\n");
    sb.append("    displayColor: ").append(toIndentedString(displayColor)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    googleCalendarId: ").append(toIndentedString(googleCalendarId)).append("\n");
    sb.append("    hourly: ").append(toIndentedString(hourly)).append("\n");
    sb.append("    ignoreBusinessHours: ").append(toIndentedString(ignoreBusinessHours)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    outlookCalendarId: ").append(toIndentedString(outlookCalendarId)).append("\n");
    sb.append("    sortKey: ").append(toIndentedString(sortKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bioLink");
    openapiFields.add("bookingNotification");
    openapiFields.add("calendarAvailability");
    openapiFields.add("displayColor");
    openapiFields.add("effectiveDate");
    openapiFields.add("gender");
    openapiFields.add("googleCalendarId");
    openapiFields.add("hourly");
    openapiFields.add("ignoreBusinessHours");
    openapiFields.add("notificationType");
    openapiFields.add("outlookCalendarId");
    openapiFields.add("sortKey");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceOptionsUpdateModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceOptionsUpdateModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceOptionsUpdateModel is not found in the empty JSON string", ResourceOptionsUpdateModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceOptionsUpdateModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceOptionsUpdateModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bioLink") != null && !jsonObj.get("bioLink").isJsonNull()) && !jsonObj.get("bioLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bioLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bioLink").toString()));
      }
      if ((jsonObj.get("displayColor") != null && !jsonObj.get("displayColor").isJsonNull()) && !jsonObj.get("displayColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayColor").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("googleCalendarId") != null && !jsonObj.get("googleCalendarId").isJsonNull()) && !jsonObj.get("googleCalendarId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleCalendarId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleCalendarId").toString()));
      }
      if ((jsonObj.get("outlookCalendarId") != null && !jsonObj.get("outlookCalendarId").isJsonNull()) && !jsonObj.get("outlookCalendarId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outlookCalendarId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outlookCalendarId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceOptionsUpdateModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceOptionsUpdateModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceOptionsUpdateModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceOptionsUpdateModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceOptionsUpdateModel>() {
           @Override
           public void write(JsonWriter out, ResourceOptionsUpdateModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceOptionsUpdateModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceOptionsUpdateModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceOptionsUpdateModel
   * @throws IOException if the JSON string is invalid with respect to ResourceOptionsUpdateModel
   */
  public static ResourceOptionsUpdateModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceOptionsUpdateModel.class);
  }

  /**
   * Convert an instance of ResourceOptionsUpdateModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

