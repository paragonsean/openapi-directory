/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WeekDayViewModel2
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WeekDayViewModel2 {
  public static final String SERIALIZED_NAME_DISPLAY_END_TIME = "displayEndTime";
  @SerializedName(SERIALIZED_NAME_DISPLAY_END_TIME)
  private String displayEndTime;

  public static final String SERIALIZED_NAME_DISPLAY_START_TIME = "displayStartTime";
  @SerializedName(SERIALIZED_NAME_DISPLAY_START_TIME)
  private String displayStartTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private Integer endTime;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private Integer startTime;

  public WeekDayViewModel2() {
  }

  public WeekDayViewModel2 displayEndTime(String displayEndTime) {
    this.displayEndTime = displayEndTime;
    return this;
  }

  /**
   * Get displayEndTime
   * @return displayEndTime
   */
  @javax.annotation.Nullable
  public String getDisplayEndTime() {
    return displayEndTime;
  }

  public void setDisplayEndTime(String displayEndTime) {
    this.displayEndTime = displayEndTime;
  }


  public WeekDayViewModel2 displayStartTime(String displayStartTime) {
    this.displayStartTime = displayStartTime;
    return this;
  }

  /**
   * Get displayStartTime
   * @return displayStartTime
   */
  @javax.annotation.Nullable
  public String getDisplayStartTime() {
    return displayStartTime;
  }

  public void setDisplayStartTime(String displayStartTime) {
    this.displayStartTime = displayStartTime;
  }


  public WeekDayViewModel2 endTime(Integer endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public Integer getEndTime() {
    return endTime;
  }

  public void setEndTime(Integer endTime) {
    this.endTime = endTime;
  }


  public WeekDayViewModel2 startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeekDayViewModel2 weekDayViewModel2 = (WeekDayViewModel2) o;
    return Objects.equals(this.displayEndTime, weekDayViewModel2.displayEndTime) &&
        Objects.equals(this.displayStartTime, weekDayViewModel2.displayStartTime) &&
        Objects.equals(this.endTime, weekDayViewModel2.endTime) &&
        Objects.equals(this.startTime, weekDayViewModel2.startTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayEndTime, displayStartTime, endTime, startTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeekDayViewModel2 {\n");
    sb.append("    displayEndTime: ").append(toIndentedString(displayEndTime)).append("\n");
    sb.append("    displayStartTime: ").append(toIndentedString(displayStartTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayEndTime");
    openapiFields.add("displayStartTime");
    openapiFields.add("endTime");
    openapiFields.add("startTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WeekDayViewModel2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WeekDayViewModel2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WeekDayViewModel2 is not found in the empty JSON string", WeekDayViewModel2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WeekDayViewModel2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WeekDayViewModel2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayEndTime") != null && !jsonObj.get("displayEndTime").isJsonNull()) && !jsonObj.get("displayEndTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayEndTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayEndTime").toString()));
      }
      if ((jsonObj.get("displayStartTime") != null && !jsonObj.get("displayStartTime").isJsonNull()) && !jsonObj.get("displayStartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayStartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayStartTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WeekDayViewModel2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WeekDayViewModel2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WeekDayViewModel2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WeekDayViewModel2.class));

       return (TypeAdapter<T>) new TypeAdapter<WeekDayViewModel2>() {
           @Override
           public void write(JsonWriter out, WeekDayViewModel2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WeekDayViewModel2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WeekDayViewModel2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WeekDayViewModel2
   * @throws IOException if the JSON string is invalid with respect to WeekDayViewModel2
   */
  public static WeekDayViewModel2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WeekDayViewModel2.class);
  }

  /**
   * Convert an instance of WeekDayViewModel2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

