/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AvailabilityInputModel;
import org.openapitools.client.model.CustomFieldInputModel;
import org.openapitools.client.model.ServiceFeesInputModel;
import org.openapitools.client.model.ServiceOptionsInputModel;
import org.openapitools.client.model.ServiceSettingsInputModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServiceInputModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServiceInputModel {
  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private AvailabilityInputModel availability;

  public static final String SERIALIZED_NAME_BOOKING_INTERVAL = "bookingInterval";
  @SerializedName(SERIALIZED_NAME_BOOKING_INTERVAL)
  private Integer bookingInterval;

  public static final String SERIALIZED_NAME_BOOKING_LIMIT = "bookingLimit";
  @SerializedName(SERIALIZED_NAME_BOOKING_LIMIT)
  private Integer bookingLimit;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private CustomFieldInputModel customFields;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_FEES = "fees";
  @SerializedName(SERIALIZED_NAME_FEES)
  private ServiceFeesInputModel fees;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_MAX_CAPACITY = "maxCapacity";
  @SerializedName(SERIALIZED_NAME_MAX_CAPACITY)
  private Integer maxCapacity;

  public static final String SERIALIZED_NAME_MAX_GROUP_SIZE = "maxGroupSize";
  @SerializedName(SERIALIZED_NAME_MAX_GROUP_SIZE)
  private Integer maxGroupSize;

  public static final String SERIALIZED_NAME_MEDIA_PAGE_URL = "mediaPageUrl";
  @SerializedName(SERIALIZED_NAME_MEDIA_PAGE_URL)
  private String mediaPageUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private ServiceOptionsInputModel options;

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  private Boolean _public;

  public static final String SERIALIZED_NAME_SERVICE_GROUP_ID = "serviceGroupId";
  @SerializedName(SERIALIZED_NAME_SERVICE_GROUP_ID)
  private String serviceGroupId;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private ServiceSettingsInputModel settings;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public ServiceInputModel() {
  }

  public ServiceInputModel availability(AvailabilityInputModel availability) {
    this.availability = availability;
    return this;
  }

  /**
   * Get availability
   * @return availability
   */
  @javax.annotation.Nullable
  public AvailabilityInputModel getAvailability() {
    return availability;
  }

  public void setAvailability(AvailabilityInputModel availability) {
    this.availability = availability;
  }


  public ServiceInputModel bookingInterval(Integer bookingInterval) {
    this.bookingInterval = bookingInterval;
    return this;
  }

  /**
   * Get bookingInterval
   * @return bookingInterval
   */
  @javax.annotation.Nullable
  public Integer getBookingInterval() {
    return bookingInterval;
  }

  public void setBookingInterval(Integer bookingInterval) {
    this.bookingInterval = bookingInterval;
  }


  public ServiceInputModel bookingLimit(Integer bookingLimit) {
    this.bookingLimit = bookingLimit;
    return this;
  }

  /**
   * Get bookingLimit
   * @return bookingLimit
   */
  @javax.annotation.Nullable
  public Integer getBookingLimit() {
    return bookingLimit;
  }

  public void setBookingLimit(Integer bookingLimit) {
    this.bookingLimit = bookingLimit;
  }


  public ServiceInputModel customFields(CustomFieldInputModel customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public CustomFieldInputModel getCustomFields() {
    return customFields;
  }

  public void setCustomFields(CustomFieldInputModel customFields) {
    this.customFields = customFields;
  }


  public ServiceInputModel description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ServiceInputModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public ServiceInputModel fees(ServiceFeesInputModel fees) {
    this.fees = fees;
    return this;
  }

  /**
   * Get fees
   * @return fees
   */
  @javax.annotation.Nullable
  public ServiceFeesInputModel getFees() {
    return fees;
  }

  public void setFees(ServiceFeesInputModel fees) {
    this.fees = fees;
  }


  public ServiceInputModel locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * Get locationId
   * @return locationId
   */
  @javax.annotation.Nullable
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public ServiceInputModel maxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
    return this;
  }

  /**
   * Get maxCapacity
   * @return maxCapacity
   */
  @javax.annotation.Nullable
  public Integer getMaxCapacity() {
    return maxCapacity;
  }

  public void setMaxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
  }


  public ServiceInputModel maxGroupSize(Integer maxGroupSize) {
    this.maxGroupSize = maxGroupSize;
    return this;
  }

  /**
   * Get maxGroupSize
   * @return maxGroupSize
   */
  @javax.annotation.Nullable
  public Integer getMaxGroupSize() {
    return maxGroupSize;
  }

  public void setMaxGroupSize(Integer maxGroupSize) {
    this.maxGroupSize = maxGroupSize;
  }


  public ServiceInputModel mediaPageUrl(String mediaPageUrl) {
    this.mediaPageUrl = mediaPageUrl;
    return this;
  }

  /**
   * Get mediaPageUrl
   * @return mediaPageUrl
   */
  @javax.annotation.Nullable
  public String getMediaPageUrl() {
    return mediaPageUrl;
  }

  public void setMediaPageUrl(String mediaPageUrl) {
    this.mediaPageUrl = mediaPageUrl;
  }


  public ServiceInputModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ServiceInputModel options(ServiceOptionsInputModel options) {
    this.options = options;
    return this;
  }

  /**
   * Get options
   * @return options
   */
  @javax.annotation.Nullable
  public ServiceOptionsInputModel getOptions() {
    return options;
  }

  public void setOptions(ServiceOptionsInputModel options) {
    this.options = options;
  }


  public ServiceInputModel _public(Boolean _public) {
    this._public = _public;
    return this;
  }

  /**
   * Get _public
   * @return _public
   */
  @javax.annotation.Nullable
  public Boolean getPublic() {
    return _public;
  }

  public void setPublic(Boolean _public) {
    this._public = _public;
  }


  public ServiceInputModel serviceGroupId(String serviceGroupId) {
    this.serviceGroupId = serviceGroupId;
    return this;
  }

  /**
   * Get serviceGroupId
   * @return serviceGroupId
   */
  @javax.annotation.Nullable
  public String getServiceGroupId() {
    return serviceGroupId;
  }

  public void setServiceGroupId(String serviceGroupId) {
    this.serviceGroupId = serviceGroupId;
  }


  public ServiceInputModel settings(ServiceSettingsInputModel settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nullable
  public ServiceSettingsInputModel getSettings() {
    return settings;
  }

  public void setSettings(ServiceSettingsInputModel settings) {
    this.settings = settings;
  }


  public ServiceInputModel type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceInputModel serviceInputModel = (ServiceInputModel) o;
    return Objects.equals(this.availability, serviceInputModel.availability) &&
        Objects.equals(this.bookingInterval, serviceInputModel.bookingInterval) &&
        Objects.equals(this.bookingLimit, serviceInputModel.bookingLimit) &&
        Objects.equals(this.customFields, serviceInputModel.customFields) &&
        Objects.equals(this.description, serviceInputModel.description) &&
        Objects.equals(this.duration, serviceInputModel.duration) &&
        Objects.equals(this.fees, serviceInputModel.fees) &&
        Objects.equals(this.locationId, serviceInputModel.locationId) &&
        Objects.equals(this.maxCapacity, serviceInputModel.maxCapacity) &&
        Objects.equals(this.maxGroupSize, serviceInputModel.maxGroupSize) &&
        Objects.equals(this.mediaPageUrl, serviceInputModel.mediaPageUrl) &&
        Objects.equals(this.name, serviceInputModel.name) &&
        Objects.equals(this.options, serviceInputModel.options) &&
        Objects.equals(this._public, serviceInputModel._public) &&
        Objects.equals(this.serviceGroupId, serviceInputModel.serviceGroupId) &&
        Objects.equals(this.settings, serviceInputModel.settings) &&
        Objects.equals(this.type, serviceInputModel.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(availability, bookingInterval, bookingLimit, customFields, description, duration, fees, locationId, maxCapacity, maxGroupSize, mediaPageUrl, name, options, _public, serviceGroupId, settings, type);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceInputModel {\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    bookingInterval: ").append(toIndentedString(bookingInterval)).append("\n");
    sb.append("    bookingLimit: ").append(toIndentedString(bookingLimit)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    maxCapacity: ").append(toIndentedString(maxCapacity)).append("\n");
    sb.append("    maxGroupSize: ").append(toIndentedString(maxGroupSize)).append("\n");
    sb.append("    mediaPageUrl: ").append(toIndentedString(mediaPageUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    serviceGroupId: ").append(toIndentedString(serviceGroupId)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availability");
    openapiFields.add("bookingInterval");
    openapiFields.add("bookingLimit");
    openapiFields.add("customFields");
    openapiFields.add("description");
    openapiFields.add("duration");
    openapiFields.add("fees");
    openapiFields.add("locationId");
    openapiFields.add("maxCapacity");
    openapiFields.add("maxGroupSize");
    openapiFields.add("mediaPageUrl");
    openapiFields.add("name");
    openapiFields.add("options");
    openapiFields.add("public");
    openapiFields.add("serviceGroupId");
    openapiFields.add("settings");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceInputModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceInputModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceInputModel is not found in the empty JSON string", ServiceInputModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceInputModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceInputModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `availability`
      if (jsonObj.get("availability") != null && !jsonObj.get("availability").isJsonNull()) {
        AvailabilityInputModel.validateJsonElement(jsonObj.get("availability"));
      }
      // validate the optional field `customFields`
      if (jsonObj.get("customFields") != null && !jsonObj.get("customFields").isJsonNull()) {
        CustomFieldInputModel.validateJsonElement(jsonObj.get("customFields"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `fees`
      if (jsonObj.get("fees") != null && !jsonObj.get("fees").isJsonNull()) {
        ServiceFeesInputModel.validateJsonElement(jsonObj.get("fees"));
      }
      if ((jsonObj.get("locationId") != null && !jsonObj.get("locationId").isJsonNull()) && !jsonObj.get("locationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationId").toString()));
      }
      if ((jsonObj.get("mediaPageUrl") != null && !jsonObj.get("mediaPageUrl").isJsonNull()) && !jsonObj.get("mediaPageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mediaPageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaPageUrl").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `options`
      if (jsonObj.get("options") != null && !jsonObj.get("options").isJsonNull()) {
        ServiceOptionsInputModel.validateJsonElement(jsonObj.get("options"));
      }
      if ((jsonObj.get("serviceGroupId") != null && !jsonObj.get("serviceGroupId").isJsonNull()) && !jsonObj.get("serviceGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceGroupId").toString()));
      }
      // validate the optional field `settings`
      if (jsonObj.get("settings") != null && !jsonObj.get("settings").isJsonNull()) {
        ServiceSettingsInputModel.validateJsonElement(jsonObj.get("settings"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceInputModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceInputModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceInputModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceInputModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceInputModel>() {
           @Override
           public void write(JsonWriter out, ServiceInputModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceInputModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceInputModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceInputModel
   * @throws IOException if the JSON string is invalid with respect to ServiceInputModel
   */
  public static ServiceInputModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceInputModel.class);
  }

  /**
   * Convert an instance of ServiceInputModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

