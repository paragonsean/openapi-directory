/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CompanyViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompanyViewModel {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_BOOKING_WEBHOOK_URL = "bookingWebhookUrl";
  @SerializedName(SERIALIZED_NAME_BOOKING_WEBHOOK_URL)
  private String bookingWebhookUrl;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_CLIENT_ID = "clientId";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_SECRET = "clientSecret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private String clientSecret;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CUSTOMER_WEBHOOK_URL = "customerWebhookUrl";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_WEBHOOK_URL)
  private String customerWebhookUrl;

  public static final String SERIALIZED_NAME_DELETED_STATUS = "deletedStatus";
  @SerializedName(SERIALIZED_NAME_DELETED_STATUS)
  private Boolean deletedStatus;

  public static final String SERIALIZED_NAME_DELETED_TIME = "deletedTime";
  @SerializedName(SERIALIZED_NAME_DELETED_TIME)
  private String deletedTime;

  public static final String SERIALIZED_NAME_DISABLE_EMAIL_AND_SMS_NOTIFICATIONS = "disableEmailAndSmsNotifications";
  @SerializedName(SERIALIZED_NAME_DISABLE_EMAIL_AND_SMS_NOTIFICATIONS)
  private Boolean disableEmailAndSmsNotifications;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private String fax;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTIFICATION_FROM_EMAIL_ADDRESS = "notificationFromEmailAddress";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_FROM_EMAIL_ADDRESS)
  private String notificationFromEmailAddress;

  public static final String SERIALIZED_NAME_NOTIFICATION_FROM_NAME = "notificationFromName";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_FROM_NAME)
  private String notificationFromName;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_REGISTRATION_DATE = "registrationDate";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_DATE)
  private String registrationDate;

  public static final String SERIALIZED_NAME_REGISTRATION_EMAIL = "registrationEmail";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_EMAIL)
  private String registrationEmail;

  public static final String SERIALIZED_NAME_REMINDER_WEBHOOK_URL = "reminderWebhookUrl";
  @SerializedName(SERIALIZED_NAME_REMINDER_WEBHOOK_URL)
  private String reminderWebhookUrl;

  public static final String SERIALIZED_NAME_RESOURCE_WEBHOOK_URL = "resourceWebhookUrl";
  @SerializedName(SERIALIZED_NAME_RESOURCE_WEBHOOK_URL)
  private String resourceWebhookUrl;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_TIMEZONE_ID = "timezoneId";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_ID)
  private String timezoneId;

  public static final String SERIALIZED_NAME_TIMEZONE_NAME = "timezoneName";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_NAME)
  private String timezoneName;

  public static final String SERIALIZED_NAME_WEBHOOK_SIGNATURE_HASH = "webhookSignatureHash";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_SIGNATURE_HASH)
  private String webhookSignatureHash;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public CompanyViewModel() {
  }

  public CompanyViewModel addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public CompanyViewModel addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public CompanyViewModel bookingWebhookUrl(String bookingWebhookUrl) {
    this.bookingWebhookUrl = bookingWebhookUrl;
    return this;
  }

  /**
   * Get bookingWebhookUrl
   * @return bookingWebhookUrl
   */
  @javax.annotation.Nullable
  public String getBookingWebhookUrl() {
    return bookingWebhookUrl;
  }

  public void setBookingWebhookUrl(String bookingWebhookUrl) {
    this.bookingWebhookUrl = bookingWebhookUrl;
  }


  public CompanyViewModel city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public CompanyViewModel clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public CompanyViewModel clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

  /**
   * Get clientSecret
   * @return clientSecret
   */
  @javax.annotation.Nullable
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public CompanyViewModel country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public CompanyViewModel customerWebhookUrl(String customerWebhookUrl) {
    this.customerWebhookUrl = customerWebhookUrl;
    return this;
  }

  /**
   * Get customerWebhookUrl
   * @return customerWebhookUrl
   */
  @javax.annotation.Nullable
  public String getCustomerWebhookUrl() {
    return customerWebhookUrl;
  }

  public void setCustomerWebhookUrl(String customerWebhookUrl) {
    this.customerWebhookUrl = customerWebhookUrl;
  }


  public CompanyViewModel deletedStatus(Boolean deletedStatus) {
    this.deletedStatus = deletedStatus;
    return this;
  }

  /**
   * Get deletedStatus
   * @return deletedStatus
   */
  @javax.annotation.Nullable
  public Boolean getDeletedStatus() {
    return deletedStatus;
  }

  public void setDeletedStatus(Boolean deletedStatus) {
    this.deletedStatus = deletedStatus;
  }


  public CompanyViewModel deletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
    return this;
  }

  /**
   * Get deletedTime
   * @return deletedTime
   */
  @javax.annotation.Nullable
  public String getDeletedTime() {
    return deletedTime;
  }

  public void setDeletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
  }


  public CompanyViewModel disableEmailAndSmsNotifications(Boolean disableEmailAndSmsNotifications) {
    this.disableEmailAndSmsNotifications = disableEmailAndSmsNotifications;
    return this;
  }

  /**
   * Get disableEmailAndSmsNotifications
   * @return disableEmailAndSmsNotifications
   */
  @javax.annotation.Nullable
  public Boolean getDisableEmailAndSmsNotifications() {
    return disableEmailAndSmsNotifications;
  }

  public void setDisableEmailAndSmsNotifications(Boolean disableEmailAndSmsNotifications) {
    this.disableEmailAndSmsNotifications = disableEmailAndSmsNotifications;
  }


  public CompanyViewModel email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CompanyViewModel fax(String fax) {
    this.fax = fax;
    return this;
  }

  /**
   * Get fax
   * @return fax
   */
  @javax.annotation.Nullable
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }


  public CompanyViewModel id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CompanyViewModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CompanyViewModel notificationFromEmailAddress(String notificationFromEmailAddress) {
    this.notificationFromEmailAddress = notificationFromEmailAddress;
    return this;
  }

  /**
   * Get notificationFromEmailAddress
   * @return notificationFromEmailAddress
   */
  @javax.annotation.Nullable
  public String getNotificationFromEmailAddress() {
    return notificationFromEmailAddress;
  }

  public void setNotificationFromEmailAddress(String notificationFromEmailAddress) {
    this.notificationFromEmailAddress = notificationFromEmailAddress;
  }


  public CompanyViewModel notificationFromName(String notificationFromName) {
    this.notificationFromName = notificationFromName;
    return this;
  }

  /**
   * Get notificationFromName
   * @return notificationFromName
   */
  @javax.annotation.Nullable
  public String getNotificationFromName() {
    return notificationFromName;
  }

  public void setNotificationFromName(String notificationFromName) {
    this.notificationFromName = notificationFromName;
  }


  public CompanyViewModel _object(String _object) {
    this._object = _object;
    return this;
  }

  /**
   * Get _object
   * @return _object
   */
  @javax.annotation.Nullable
  public String getObject() {
    return _object;
  }

  public void setObject(String _object) {
    this._object = _object;
  }


  public CompanyViewModel phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public CompanyViewModel postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public CompanyViewModel registrationDate(String registrationDate) {
    this.registrationDate = registrationDate;
    return this;
  }

  /**
   * Get registrationDate
   * @return registrationDate
   */
  @javax.annotation.Nullable
  public String getRegistrationDate() {
    return registrationDate;
  }

  public void setRegistrationDate(String registrationDate) {
    this.registrationDate = registrationDate;
  }


  public CompanyViewModel registrationEmail(String registrationEmail) {
    this.registrationEmail = registrationEmail;
    return this;
  }

  /**
   * Get registrationEmail
   * @return registrationEmail
   */
  @javax.annotation.Nullable
  public String getRegistrationEmail() {
    return registrationEmail;
  }

  public void setRegistrationEmail(String registrationEmail) {
    this.registrationEmail = registrationEmail;
  }


  public CompanyViewModel reminderWebhookUrl(String reminderWebhookUrl) {
    this.reminderWebhookUrl = reminderWebhookUrl;
    return this;
  }

  /**
   * Get reminderWebhookUrl
   * @return reminderWebhookUrl
   */
  @javax.annotation.Nullable
  public String getReminderWebhookUrl() {
    return reminderWebhookUrl;
  }

  public void setReminderWebhookUrl(String reminderWebhookUrl) {
    this.reminderWebhookUrl = reminderWebhookUrl;
  }


  public CompanyViewModel resourceWebhookUrl(String resourceWebhookUrl) {
    this.resourceWebhookUrl = resourceWebhookUrl;
    return this;
  }

  /**
   * Get resourceWebhookUrl
   * @return resourceWebhookUrl
   */
  @javax.annotation.Nullable
  public String getResourceWebhookUrl() {
    return resourceWebhookUrl;
  }

  public void setResourceWebhookUrl(String resourceWebhookUrl) {
    this.resourceWebhookUrl = resourceWebhookUrl;
  }


  public CompanyViewModel state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public CompanyViewModel timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * Get timezoneId
   * @return timezoneId
   */
  @javax.annotation.Nullable
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }


  public CompanyViewModel timezoneName(String timezoneName) {
    this.timezoneName = timezoneName;
    return this;
  }

  /**
   * Get timezoneName
   * @return timezoneName
   */
  @javax.annotation.Nullable
  public String getTimezoneName() {
    return timezoneName;
  }

  public void setTimezoneName(String timezoneName) {
    this.timezoneName = timezoneName;
  }


  public CompanyViewModel webhookSignatureHash(String webhookSignatureHash) {
    this.webhookSignatureHash = webhookSignatureHash;
    return this;
  }

  /**
   * Get webhookSignatureHash
   * @return webhookSignatureHash
   */
  @javax.annotation.Nullable
  public String getWebhookSignatureHash() {
    return webhookSignatureHash;
  }

  public void setWebhookSignatureHash(String webhookSignatureHash) {
    this.webhookSignatureHash = webhookSignatureHash;
  }


  public CompanyViewModel website(String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @javax.annotation.Nullable
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyViewModel companyViewModel = (CompanyViewModel) o;
    return Objects.equals(this.addressLine1, companyViewModel.addressLine1) &&
        Objects.equals(this.addressLine2, companyViewModel.addressLine2) &&
        Objects.equals(this.bookingWebhookUrl, companyViewModel.bookingWebhookUrl) &&
        Objects.equals(this.city, companyViewModel.city) &&
        Objects.equals(this.clientId, companyViewModel.clientId) &&
        Objects.equals(this.clientSecret, companyViewModel.clientSecret) &&
        Objects.equals(this.country, companyViewModel.country) &&
        Objects.equals(this.customerWebhookUrl, companyViewModel.customerWebhookUrl) &&
        Objects.equals(this.deletedStatus, companyViewModel.deletedStatus) &&
        Objects.equals(this.deletedTime, companyViewModel.deletedTime) &&
        Objects.equals(this.disableEmailAndSmsNotifications, companyViewModel.disableEmailAndSmsNotifications) &&
        Objects.equals(this.email, companyViewModel.email) &&
        Objects.equals(this.fax, companyViewModel.fax) &&
        Objects.equals(this.id, companyViewModel.id) &&
        Objects.equals(this.name, companyViewModel.name) &&
        Objects.equals(this.notificationFromEmailAddress, companyViewModel.notificationFromEmailAddress) &&
        Objects.equals(this.notificationFromName, companyViewModel.notificationFromName) &&
        Objects.equals(this._object, companyViewModel._object) &&
        Objects.equals(this.phone, companyViewModel.phone) &&
        Objects.equals(this.postalCode, companyViewModel.postalCode) &&
        Objects.equals(this.registrationDate, companyViewModel.registrationDate) &&
        Objects.equals(this.registrationEmail, companyViewModel.registrationEmail) &&
        Objects.equals(this.reminderWebhookUrl, companyViewModel.reminderWebhookUrl) &&
        Objects.equals(this.resourceWebhookUrl, companyViewModel.resourceWebhookUrl) &&
        Objects.equals(this.state, companyViewModel.state) &&
        Objects.equals(this.timezoneId, companyViewModel.timezoneId) &&
        Objects.equals(this.timezoneName, companyViewModel.timezoneName) &&
        Objects.equals(this.webhookSignatureHash, companyViewModel.webhookSignatureHash) &&
        Objects.equals(this.website, companyViewModel.website);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, addressLine2, bookingWebhookUrl, city, clientId, clientSecret, country, customerWebhookUrl, deletedStatus, deletedTime, disableEmailAndSmsNotifications, email, fax, id, name, notificationFromEmailAddress, notificationFromName, _object, phone, postalCode, registrationDate, registrationEmail, reminderWebhookUrl, resourceWebhookUrl, state, timezoneId, timezoneName, webhookSignatureHash, website);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyViewModel {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    bookingWebhookUrl: ").append(toIndentedString(bookingWebhookUrl)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    customerWebhookUrl: ").append(toIndentedString(customerWebhookUrl)).append("\n");
    sb.append("    deletedStatus: ").append(toIndentedString(deletedStatus)).append("\n");
    sb.append("    deletedTime: ").append(toIndentedString(deletedTime)).append("\n");
    sb.append("    disableEmailAndSmsNotifications: ").append(toIndentedString(disableEmailAndSmsNotifications)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notificationFromEmailAddress: ").append(toIndentedString(notificationFromEmailAddress)).append("\n");
    sb.append("    notificationFromName: ").append(toIndentedString(notificationFromName)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    registrationDate: ").append(toIndentedString(registrationDate)).append("\n");
    sb.append("    registrationEmail: ").append(toIndentedString(registrationEmail)).append("\n");
    sb.append("    reminderWebhookUrl: ").append(toIndentedString(reminderWebhookUrl)).append("\n");
    sb.append("    resourceWebhookUrl: ").append(toIndentedString(resourceWebhookUrl)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    timezoneName: ").append(toIndentedString(timezoneName)).append("\n");
    sb.append("    webhookSignatureHash: ").append(toIndentedString(webhookSignatureHash)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("bookingWebhookUrl");
    openapiFields.add("city");
    openapiFields.add("clientId");
    openapiFields.add("clientSecret");
    openapiFields.add("country");
    openapiFields.add("customerWebhookUrl");
    openapiFields.add("deletedStatus");
    openapiFields.add("deletedTime");
    openapiFields.add("disableEmailAndSmsNotifications");
    openapiFields.add("email");
    openapiFields.add("fax");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("notificationFromEmailAddress");
    openapiFields.add("notificationFromName");
    openapiFields.add("object");
    openapiFields.add("phone");
    openapiFields.add("postalCode");
    openapiFields.add("registrationDate");
    openapiFields.add("registrationEmail");
    openapiFields.add("reminderWebhookUrl");
    openapiFields.add("resourceWebhookUrl");
    openapiFields.add("state");
    openapiFields.add("timezoneId");
    openapiFields.add("timezoneName");
    openapiFields.add("webhookSignatureHash");
    openapiFields.add("website");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompanyViewModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompanyViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyViewModel is not found in the empty JSON string", CompanyViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompanyViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompanyViewModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("bookingWebhookUrl") != null && !jsonObj.get("bookingWebhookUrl").isJsonNull()) && !jsonObj.get("bookingWebhookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bookingWebhookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bookingWebhookUrl").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("clientId") != null && !jsonObj.get("clientId").isJsonNull()) && !jsonObj.get("clientId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientId").toString()));
      }
      if ((jsonObj.get("clientSecret") != null && !jsonObj.get("clientSecret").isJsonNull()) && !jsonObj.get("clientSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientSecret").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("customerWebhookUrl") != null && !jsonObj.get("customerWebhookUrl").isJsonNull()) && !jsonObj.get("customerWebhookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerWebhookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerWebhookUrl").toString()));
      }
      if ((jsonObj.get("deletedTime") != null && !jsonObj.get("deletedTime").isJsonNull()) && !jsonObj.get("deletedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletedTime").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("notificationFromEmailAddress") != null && !jsonObj.get("notificationFromEmailAddress").isJsonNull()) && !jsonObj.get("notificationFromEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notificationFromEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notificationFromEmailAddress").toString()));
      }
      if ((jsonObj.get("notificationFromName") != null && !jsonObj.get("notificationFromName").isJsonNull()) && !jsonObj.get("notificationFromName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notificationFromName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notificationFromName").toString()));
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("registrationDate") != null && !jsonObj.get("registrationDate").isJsonNull()) && !jsonObj.get("registrationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registrationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registrationDate").toString()));
      }
      if ((jsonObj.get("registrationEmail") != null && !jsonObj.get("registrationEmail").isJsonNull()) && !jsonObj.get("registrationEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registrationEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registrationEmail").toString()));
      }
      if ((jsonObj.get("reminderWebhookUrl") != null && !jsonObj.get("reminderWebhookUrl").isJsonNull()) && !jsonObj.get("reminderWebhookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reminderWebhookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reminderWebhookUrl").toString()));
      }
      if ((jsonObj.get("resourceWebhookUrl") != null && !jsonObj.get("resourceWebhookUrl").isJsonNull()) && !jsonObj.get("resourceWebhookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceWebhookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceWebhookUrl").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("timezoneId") != null && !jsonObj.get("timezoneId").isJsonNull()) && !jsonObj.get("timezoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneId").toString()));
      }
      if ((jsonObj.get("timezoneName") != null && !jsonObj.get("timezoneName").isJsonNull()) && !jsonObj.get("timezoneName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneName").toString()));
      }
      if ((jsonObj.get("webhookSignatureHash") != null && !jsonObj.get("webhookSignatureHash").isJsonNull()) && !jsonObj.get("webhookSignatureHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookSignatureHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhookSignatureHash").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyViewModel>() {
           @Override
           public void write(JsonWriter out, CompanyViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyViewModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompanyViewModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompanyViewModel
   * @throws IOException if the JSON string is invalid with respect to CompanyViewModel
   */
  public static CompanyViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyViewModel.class);
  }

  /**
   * Convert an instance of CompanyViewModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

