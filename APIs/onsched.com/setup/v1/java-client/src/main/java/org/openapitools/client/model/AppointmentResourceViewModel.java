/*
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppointmentResourceViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:58.890429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppointmentResourceViewModel {
  public static final String SERIALIZED_NAME_APPOINTMENT_ID = "appointmentId";
  @SerializedName(SERIALIZED_NAME_APPOINTMENT_ID)
  private String appointmentId;

  public static final String SERIALIZED_NAME_RESOURCE_EMAIL = "resourceEmail";
  @SerializedName(SERIALIZED_NAME_RESOURCE_EMAIL)
  private String resourceEmail;

  public static final String SERIALIZED_NAME_RESOURCE_GROUP_ID = "resourceGroupId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP_ID)
  private String resourceGroupId;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_IMAGE_URL = "resourceImageUrl";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IMAGE_URL)
  private String resourceImageUrl;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public AppointmentResourceViewModel() {
  }

  public AppointmentResourceViewModel appointmentId(String appointmentId) {
    this.appointmentId = appointmentId;
    return this;
  }

  /**
   * Get appointmentId
   * @return appointmentId
   */
  @javax.annotation.Nullable
  public String getAppointmentId() {
    return appointmentId;
  }

  public void setAppointmentId(String appointmentId) {
    this.appointmentId = appointmentId;
  }


  public AppointmentResourceViewModel resourceEmail(String resourceEmail) {
    this.resourceEmail = resourceEmail;
    return this;
  }

  /**
   * Get resourceEmail
   * @return resourceEmail
   */
  @javax.annotation.Nullable
  public String getResourceEmail() {
    return resourceEmail;
  }

  public void setResourceEmail(String resourceEmail) {
    this.resourceEmail = resourceEmail;
  }


  public AppointmentResourceViewModel resourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
    return this;
  }

  /**
   * Get resourceGroupId
   * @return resourceGroupId
   */
  @javax.annotation.Nullable
  public String getResourceGroupId() {
    return resourceGroupId;
  }

  public void setResourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
  }


  public AppointmentResourceViewModel resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public AppointmentResourceViewModel resourceImageUrl(String resourceImageUrl) {
    this.resourceImageUrl = resourceImageUrl;
    return this;
  }

  /**
   * Get resourceImageUrl
   * @return resourceImageUrl
   */
  @javax.annotation.Nullable
  public String getResourceImageUrl() {
    return resourceImageUrl;
  }

  public void setResourceImageUrl(String resourceImageUrl) {
    this.resourceImageUrl = resourceImageUrl;
  }


  public AppointmentResourceViewModel resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppointmentResourceViewModel appointmentResourceViewModel = (AppointmentResourceViewModel) o;
    return Objects.equals(this.appointmentId, appointmentResourceViewModel.appointmentId) &&
        Objects.equals(this.resourceEmail, appointmentResourceViewModel.resourceEmail) &&
        Objects.equals(this.resourceGroupId, appointmentResourceViewModel.resourceGroupId) &&
        Objects.equals(this.resourceId, appointmentResourceViewModel.resourceId) &&
        Objects.equals(this.resourceImageUrl, appointmentResourceViewModel.resourceImageUrl) &&
        Objects.equals(this.resourceName, appointmentResourceViewModel.resourceName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(appointmentId, resourceEmail, resourceGroupId, resourceId, resourceImageUrl, resourceName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppointmentResourceViewModel {\n");
    sb.append("    appointmentId: ").append(toIndentedString(appointmentId)).append("\n");
    sb.append("    resourceEmail: ").append(toIndentedString(resourceEmail)).append("\n");
    sb.append("    resourceGroupId: ").append(toIndentedString(resourceGroupId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceImageUrl: ").append(toIndentedString(resourceImageUrl)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appointmentId");
    openapiFields.add("resourceEmail");
    openapiFields.add("resourceGroupId");
    openapiFields.add("resourceId");
    openapiFields.add("resourceImageUrl");
    openapiFields.add("resourceName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppointmentResourceViewModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppointmentResourceViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppointmentResourceViewModel is not found in the empty JSON string", AppointmentResourceViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppointmentResourceViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppointmentResourceViewModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("appointmentId") != null && !jsonObj.get("appointmentId").isJsonNull()) && !jsonObj.get("appointmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appointmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appointmentId").toString()));
      }
      if ((jsonObj.get("resourceEmail") != null && !jsonObj.get("resourceEmail").isJsonNull()) && !jsonObj.get("resourceEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceEmail").toString()));
      }
      if ((jsonObj.get("resourceGroupId") != null && !jsonObj.get("resourceGroupId").isJsonNull()) && !jsonObj.get("resourceGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceGroupId").toString()));
      }
      if ((jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) && !jsonObj.get("resourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceId").toString()));
      }
      if ((jsonObj.get("resourceImageUrl") != null && !jsonObj.get("resourceImageUrl").isJsonNull()) && !jsonObj.get("resourceImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceImageUrl").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppointmentResourceViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppointmentResourceViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppointmentResourceViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppointmentResourceViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AppointmentResourceViewModel>() {
           @Override
           public void write(JsonWriter out, AppointmentResourceViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppointmentResourceViewModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppointmentResourceViewModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppointmentResourceViewModel
   * @throws IOException if the JSON string is invalid with respect to AppointmentResourceViewModel
   */
  public static AppointmentResourceViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppointmentResourceViewModel.class);
  }

  /**
   * Convert an instance of AppointmentResourceViewModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

