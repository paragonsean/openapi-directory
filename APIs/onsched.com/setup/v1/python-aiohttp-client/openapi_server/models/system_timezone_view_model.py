# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemTimezoneViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_utc_offset: int=None, daylight_name: str=None, display_name: str=None, standard_name: str=None, supports_daylight_saving_time: bool=None, timezone_iana: str=None, timezone_id: str=None):
        """SystemTimezoneViewModel - a model defined in OpenAPI

        :param base_utc_offset: The base_utc_offset of this SystemTimezoneViewModel.
        :param daylight_name: The daylight_name of this SystemTimezoneViewModel.
        :param display_name: The display_name of this SystemTimezoneViewModel.
        :param standard_name: The standard_name of this SystemTimezoneViewModel.
        :param supports_daylight_saving_time: The supports_daylight_saving_time of this SystemTimezoneViewModel.
        :param timezone_iana: The timezone_iana of this SystemTimezoneViewModel.
        :param timezone_id: The timezone_id of this SystemTimezoneViewModel.
        """
        self.openapi_types = {
            'base_utc_offset': int,
            'daylight_name': str,
            'display_name': str,
            'standard_name': str,
            'supports_daylight_saving_time': bool,
            'timezone_iana': str,
            'timezone_id': str
        }

        self.attribute_map = {
            'base_utc_offset': 'baseUtcOffset',
            'daylight_name': 'daylightName',
            'display_name': 'displayName',
            'standard_name': 'standardName',
            'supports_daylight_saving_time': 'supportsDaylightSavingTime',
            'timezone_iana': 'timezoneIana',
            'timezone_id': 'timezoneId'
        }

        self._base_utc_offset = base_utc_offset
        self._daylight_name = daylight_name
        self._display_name = display_name
        self._standard_name = standard_name
        self._supports_daylight_saving_time = supports_daylight_saving_time
        self._timezone_iana = timezone_iana
        self._timezone_id = timezone_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemTimezoneViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemTimezoneViewModel of this SystemTimezoneViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_utc_offset(self):
        """Gets the base_utc_offset of this SystemTimezoneViewModel.


        :return: The base_utc_offset of this SystemTimezoneViewModel.
        :rtype: int
        """
        return self._base_utc_offset

    @base_utc_offset.setter
    def base_utc_offset(self, base_utc_offset):
        """Sets the base_utc_offset of this SystemTimezoneViewModel.


        :param base_utc_offset: The base_utc_offset of this SystemTimezoneViewModel.
        :type base_utc_offset: int
        """

        self._base_utc_offset = base_utc_offset

    @property
    def daylight_name(self):
        """Gets the daylight_name of this SystemTimezoneViewModel.


        :return: The daylight_name of this SystemTimezoneViewModel.
        :rtype: str
        """
        return self._daylight_name

    @daylight_name.setter
    def daylight_name(self, daylight_name):
        """Sets the daylight_name of this SystemTimezoneViewModel.


        :param daylight_name: The daylight_name of this SystemTimezoneViewModel.
        :type daylight_name: str
        """

        self._daylight_name = daylight_name

    @property
    def display_name(self):
        """Gets the display_name of this SystemTimezoneViewModel.


        :return: The display_name of this SystemTimezoneViewModel.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SystemTimezoneViewModel.


        :param display_name: The display_name of this SystemTimezoneViewModel.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def standard_name(self):
        """Gets the standard_name of this SystemTimezoneViewModel.


        :return: The standard_name of this SystemTimezoneViewModel.
        :rtype: str
        """
        return self._standard_name

    @standard_name.setter
    def standard_name(self, standard_name):
        """Sets the standard_name of this SystemTimezoneViewModel.


        :param standard_name: The standard_name of this SystemTimezoneViewModel.
        :type standard_name: str
        """

        self._standard_name = standard_name

    @property
    def supports_daylight_saving_time(self):
        """Gets the supports_daylight_saving_time of this SystemTimezoneViewModel.


        :return: The supports_daylight_saving_time of this SystemTimezoneViewModel.
        :rtype: bool
        """
        return self._supports_daylight_saving_time

    @supports_daylight_saving_time.setter
    def supports_daylight_saving_time(self, supports_daylight_saving_time):
        """Sets the supports_daylight_saving_time of this SystemTimezoneViewModel.


        :param supports_daylight_saving_time: The supports_daylight_saving_time of this SystemTimezoneViewModel.
        :type supports_daylight_saving_time: bool
        """

        self._supports_daylight_saving_time = supports_daylight_saving_time

    @property
    def timezone_iana(self):
        """Gets the timezone_iana of this SystemTimezoneViewModel.


        :return: The timezone_iana of this SystemTimezoneViewModel.
        :rtype: str
        """
        return self._timezone_iana

    @timezone_iana.setter
    def timezone_iana(self, timezone_iana):
        """Sets the timezone_iana of this SystemTimezoneViewModel.


        :param timezone_iana: The timezone_iana of this SystemTimezoneViewModel.
        :type timezone_iana: str
        """

        self._timezone_iana = timezone_iana

    @property
    def timezone_id(self):
        """Gets the timezone_id of this SystemTimezoneViewModel.


        :return: The timezone_id of this SystemTimezoneViewModel.
        :rtype: str
        """
        return self._timezone_id

    @timezone_id.setter
    def timezone_id(self, timezone_id):
        """Sets the timezone_id of this SystemTimezoneViewModel.


        :param timezone_id: The timezone_id of this SystemTimezoneViewModel.
        :type timezone_id: str
        """

        self._timezone_id = timezone_id
