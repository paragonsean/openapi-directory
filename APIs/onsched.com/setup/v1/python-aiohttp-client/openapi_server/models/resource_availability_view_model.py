# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.availability_view_model2 import AvailabilityViewModel2
from openapi_server import util


class ResourceAvailabilityViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_id: int=None, ignore_business_hours: bool=None, resource_id: int=None, resource_name: str=None, resource_tzo: int=None, weekdays: AvailabilityViewModel2=None):
        """ResourceAvailabilityViewModel - a model defined in OpenAPI

        :param business_id: The business_id of this ResourceAvailabilityViewModel.
        :param ignore_business_hours: The ignore_business_hours of this ResourceAvailabilityViewModel.
        :param resource_id: The resource_id of this ResourceAvailabilityViewModel.
        :param resource_name: The resource_name of this ResourceAvailabilityViewModel.
        :param resource_tzo: The resource_tzo of this ResourceAvailabilityViewModel.
        :param weekdays: The weekdays of this ResourceAvailabilityViewModel.
        """
        self.openapi_types = {
            'business_id': int,
            'ignore_business_hours': bool,
            'resource_id': int,
            'resource_name': str,
            'resource_tzo': int,
            'weekdays': AvailabilityViewModel2
        }

        self.attribute_map = {
            'business_id': 'businessId',
            'ignore_business_hours': 'ignoreBusinessHours',
            'resource_id': 'resourceId',
            'resource_name': 'resourceName',
            'resource_tzo': 'resourceTzo',
            'weekdays': 'weekdays'
        }

        self._business_id = business_id
        self._ignore_business_hours = ignore_business_hours
        self._resource_id = resource_id
        self._resource_name = resource_name
        self._resource_tzo = resource_tzo
        self._weekdays = weekdays

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceAvailabilityViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceAvailabilityViewModel of this ResourceAvailabilityViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_id(self):
        """Gets the business_id of this ResourceAvailabilityViewModel.


        :return: The business_id of this ResourceAvailabilityViewModel.
        :rtype: int
        """
        return self._business_id

    @business_id.setter
    def business_id(self, business_id):
        """Sets the business_id of this ResourceAvailabilityViewModel.


        :param business_id: The business_id of this ResourceAvailabilityViewModel.
        :type business_id: int
        """

        self._business_id = business_id

    @property
    def ignore_business_hours(self):
        """Gets the ignore_business_hours of this ResourceAvailabilityViewModel.


        :return: The ignore_business_hours of this ResourceAvailabilityViewModel.
        :rtype: bool
        """
        return self._ignore_business_hours

    @ignore_business_hours.setter
    def ignore_business_hours(self, ignore_business_hours):
        """Sets the ignore_business_hours of this ResourceAvailabilityViewModel.


        :param ignore_business_hours: The ignore_business_hours of this ResourceAvailabilityViewModel.
        :type ignore_business_hours: bool
        """

        self._ignore_business_hours = ignore_business_hours

    @property
    def resource_id(self):
        """Gets the resource_id of this ResourceAvailabilityViewModel.


        :return: The resource_id of this ResourceAvailabilityViewModel.
        :rtype: int
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ResourceAvailabilityViewModel.


        :param resource_id: The resource_id of this ResourceAvailabilityViewModel.
        :type resource_id: int
        """

        self._resource_id = resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this ResourceAvailabilityViewModel.


        :return: The resource_name of this ResourceAvailabilityViewModel.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this ResourceAvailabilityViewModel.


        :param resource_name: The resource_name of this ResourceAvailabilityViewModel.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def resource_tzo(self):
        """Gets the resource_tzo of this ResourceAvailabilityViewModel.


        :return: The resource_tzo of this ResourceAvailabilityViewModel.
        :rtype: int
        """
        return self._resource_tzo

    @resource_tzo.setter
    def resource_tzo(self, resource_tzo):
        """Sets the resource_tzo of this ResourceAvailabilityViewModel.


        :param resource_tzo: The resource_tzo of this ResourceAvailabilityViewModel.
        :type resource_tzo: int
        """

        self._resource_tzo = resource_tzo

    @property
    def weekdays(self):
        """Gets the weekdays of this ResourceAvailabilityViewModel.


        :return: The weekdays of this ResourceAvailabilityViewModel.
        :rtype: AvailabilityViewModel2
        """
        return self._weekdays

    @weekdays.setter
    def weekdays(self, weekdays):
        """Sets the weekdays of this ResourceAvailabilityViewModel.


        :param weekdays: The weekdays of this ResourceAvailabilityViewModel.
        :type weekdays: AvailabilityViewModel2
        """

        self._weekdays = weekdays
