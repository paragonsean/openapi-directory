# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimezonesViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, region: str=None, timezone_ianna: str=None, tz_offset: int=None):
        """TimezonesViewModel - a model defined in OpenAPI

        :param name: The name of this TimezonesViewModel.
        :param region: The region of this TimezonesViewModel.
        :param timezone_ianna: The timezone_ianna of this TimezonesViewModel.
        :param tz_offset: The tz_offset of this TimezonesViewModel.
        """
        self.openapi_types = {
            'name': str,
            'region': str,
            'timezone_ianna': str,
            'tz_offset': int
        }

        self.attribute_map = {
            'name': 'name',
            'region': 'region',
            'timezone_ianna': 'timezoneIanna',
            'tz_offset': 'tzOffset'
        }

        self._name = name
        self._region = region
        self._timezone_ianna = timezone_ianna
        self._tz_offset = tz_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimezonesViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimezonesViewModel of this TimezonesViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this TimezonesViewModel.


        :return: The name of this TimezonesViewModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TimezonesViewModel.


        :param name: The name of this TimezonesViewModel.
        :type name: str
        """

        self._name = name

    @property
    def region(self):
        """Gets the region of this TimezonesViewModel.


        :return: The region of this TimezonesViewModel.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this TimezonesViewModel.


        :param region: The region of this TimezonesViewModel.
        :type region: str
        """

        self._region = region

    @property
    def timezone_ianna(self):
        """Gets the timezone_ianna of this TimezonesViewModel.


        :return: The timezone_ianna of this TimezonesViewModel.
        :rtype: str
        """
        return self._timezone_ianna

    @timezone_ianna.setter
    def timezone_ianna(self, timezone_ianna):
        """Sets the timezone_ianna of this TimezonesViewModel.


        :param timezone_ianna: The timezone_ianna of this TimezonesViewModel.
        :type timezone_ianna: str
        """

        self._timezone_ianna = timezone_ianna

    @property
    def tz_offset(self):
        """Gets the tz_offset of this TimezonesViewModel.


        :return: The tz_offset of this TimezonesViewModel.
        :rtype: int
        """
        return self._tz_offset

    @tz_offset.setter
    def tz_offset(self, tz_offset):
        """Sets the tz_offset of this TimezonesViewModel.


        :param tz_offset: The tz_offset of this TimezonesViewModel.
        :type tz_offset: int
        """

        self._tz_offset = tz_offset
