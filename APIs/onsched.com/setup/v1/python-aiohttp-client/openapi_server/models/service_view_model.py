# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_input_model import CustomFieldInputModel
from openapi_server.models.service_hours_view_model import ServiceHoursViewModel
from openapi_server import util


class ServiceViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability: ServiceHoursViewModel=None, book_ahead_unit: int=None, book_ahead_value: int=None, book_in_advance: int=None, booking_interval: int=None, booking_limit: int=None, calendar_id: str=None, calendar_resource_group_id: str=None, cancellation_fee_amount: float=None, cancellation_fee_taxable: bool=None, company_id: str=None, consumer_padding: bool=None, custom_fields: CustomFieldInputModel=None, daily_booking_limit_count: int=None, daily_booking_limit_minutes: int=None, default_service: bool=None, description: str=None, duration: int=None, duration_interval: int=None, duration_max: int=None, duration_min: int=None, duration_select: bool=None, fee_amount: float=None, fee_taxable: bool=None, id: str=None, image_url: str=None, location_id: str=None, max_booking_limit: int=None, max_capacity: int=None, max_group_size: int=None, max_resource_booking_limit: int=None, media_page_url: str=None, name: str=None, non_refundable: bool=None, object: str=None, padding: int=None, round_robin: int=None, service_group_id: int=None, service_group_name: str=None, show_online: bool=None, type: str=None):
        """ServiceViewModel - a model defined in OpenAPI

        :param availability: The availability of this ServiceViewModel.
        :param book_ahead_unit: The book_ahead_unit of this ServiceViewModel.
        :param book_ahead_value: The book_ahead_value of this ServiceViewModel.
        :param book_in_advance: The book_in_advance of this ServiceViewModel.
        :param booking_interval: The booking_interval of this ServiceViewModel.
        :param booking_limit: The booking_limit of this ServiceViewModel.
        :param calendar_id: The calendar_id of this ServiceViewModel.
        :param calendar_resource_group_id: The calendar_resource_group_id of this ServiceViewModel.
        :param cancellation_fee_amount: The cancellation_fee_amount of this ServiceViewModel.
        :param cancellation_fee_taxable: The cancellation_fee_taxable of this ServiceViewModel.
        :param company_id: The company_id of this ServiceViewModel.
        :param consumer_padding: The consumer_padding of this ServiceViewModel.
        :param custom_fields: The custom_fields of this ServiceViewModel.
        :param daily_booking_limit_count: The daily_booking_limit_count of this ServiceViewModel.
        :param daily_booking_limit_minutes: The daily_booking_limit_minutes of this ServiceViewModel.
        :param default_service: The default_service of this ServiceViewModel.
        :param description: The description of this ServiceViewModel.
        :param duration: The duration of this ServiceViewModel.
        :param duration_interval: The duration_interval of this ServiceViewModel.
        :param duration_max: The duration_max of this ServiceViewModel.
        :param duration_min: The duration_min of this ServiceViewModel.
        :param duration_select: The duration_select of this ServiceViewModel.
        :param fee_amount: The fee_amount of this ServiceViewModel.
        :param fee_taxable: The fee_taxable of this ServiceViewModel.
        :param id: The id of this ServiceViewModel.
        :param image_url: The image_url of this ServiceViewModel.
        :param location_id: The location_id of this ServiceViewModel.
        :param max_booking_limit: The max_booking_limit of this ServiceViewModel.
        :param max_capacity: The max_capacity of this ServiceViewModel.
        :param max_group_size: The max_group_size of this ServiceViewModel.
        :param max_resource_booking_limit: The max_resource_booking_limit of this ServiceViewModel.
        :param media_page_url: The media_page_url of this ServiceViewModel.
        :param name: The name of this ServiceViewModel.
        :param non_refundable: The non_refundable of this ServiceViewModel.
        :param object: The object of this ServiceViewModel.
        :param padding: The padding of this ServiceViewModel.
        :param round_robin: The round_robin of this ServiceViewModel.
        :param service_group_id: The service_group_id of this ServiceViewModel.
        :param service_group_name: The service_group_name of this ServiceViewModel.
        :param show_online: The show_online of this ServiceViewModel.
        :param type: The type of this ServiceViewModel.
        """
        self.openapi_types = {
            'availability': ServiceHoursViewModel,
            'book_ahead_unit': int,
            'book_ahead_value': int,
            'book_in_advance': int,
            'booking_interval': int,
            'booking_limit': int,
            'calendar_id': str,
            'calendar_resource_group_id': str,
            'cancellation_fee_amount': float,
            'cancellation_fee_taxable': bool,
            'company_id': str,
            'consumer_padding': bool,
            'custom_fields': CustomFieldInputModel,
            'daily_booking_limit_count': int,
            'daily_booking_limit_minutes': int,
            'default_service': bool,
            'description': str,
            'duration': int,
            'duration_interval': int,
            'duration_max': int,
            'duration_min': int,
            'duration_select': bool,
            'fee_amount': float,
            'fee_taxable': bool,
            'id': str,
            'image_url': str,
            'location_id': str,
            'max_booking_limit': int,
            'max_capacity': int,
            'max_group_size': int,
            'max_resource_booking_limit': int,
            'media_page_url': str,
            'name': str,
            'non_refundable': bool,
            'object': str,
            'padding': int,
            'round_robin': int,
            'service_group_id': int,
            'service_group_name': str,
            'show_online': bool,
            'type': str
        }

        self.attribute_map = {
            'availability': 'availability',
            'book_ahead_unit': 'bookAheadUnit',
            'book_ahead_value': 'bookAheadValue',
            'book_in_advance': 'bookInAdvance',
            'booking_interval': 'bookingInterval',
            'booking_limit': 'bookingLimit',
            'calendar_id': 'calendarId',
            'calendar_resource_group_id': 'calendarResourceGroupId',
            'cancellation_fee_amount': 'cancellationFeeAmount',
            'cancellation_fee_taxable': 'cancellationFeeTaxable',
            'company_id': 'companyId',
            'consumer_padding': 'consumerPadding',
            'custom_fields': 'customFields',
            'daily_booking_limit_count': 'dailyBookingLimitCount',
            'daily_booking_limit_minutes': 'dailyBookingLimitMinutes',
            'default_service': 'defaultService',
            'description': 'description',
            'duration': 'duration',
            'duration_interval': 'durationInterval',
            'duration_max': 'durationMax',
            'duration_min': 'durationMin',
            'duration_select': 'durationSelect',
            'fee_amount': 'feeAmount',
            'fee_taxable': 'feeTaxable',
            'id': 'id',
            'image_url': 'imageUrl',
            'location_id': 'locationId',
            'max_booking_limit': 'maxBookingLimit',
            'max_capacity': 'maxCapacity',
            'max_group_size': 'maxGroupSize',
            'max_resource_booking_limit': 'maxResourceBookingLimit',
            'media_page_url': 'mediaPageUrl',
            'name': 'name',
            'non_refundable': 'nonRefundable',
            'object': 'object',
            'padding': 'padding',
            'round_robin': 'roundRobin',
            'service_group_id': 'serviceGroupId',
            'service_group_name': 'serviceGroupName',
            'show_online': 'showOnline',
            'type': 'type'
        }

        self._availability = availability
        self._book_ahead_unit = book_ahead_unit
        self._book_ahead_value = book_ahead_value
        self._book_in_advance = book_in_advance
        self._booking_interval = booking_interval
        self._booking_limit = booking_limit
        self._calendar_id = calendar_id
        self._calendar_resource_group_id = calendar_resource_group_id
        self._cancellation_fee_amount = cancellation_fee_amount
        self._cancellation_fee_taxable = cancellation_fee_taxable
        self._company_id = company_id
        self._consumer_padding = consumer_padding
        self._custom_fields = custom_fields
        self._daily_booking_limit_count = daily_booking_limit_count
        self._daily_booking_limit_minutes = daily_booking_limit_minutes
        self._default_service = default_service
        self._description = description
        self._duration = duration
        self._duration_interval = duration_interval
        self._duration_max = duration_max
        self._duration_min = duration_min
        self._duration_select = duration_select
        self._fee_amount = fee_amount
        self._fee_taxable = fee_taxable
        self._id = id
        self._image_url = image_url
        self._location_id = location_id
        self._max_booking_limit = max_booking_limit
        self._max_capacity = max_capacity
        self._max_group_size = max_group_size
        self._max_resource_booking_limit = max_resource_booking_limit
        self._media_page_url = media_page_url
        self._name = name
        self._non_refundable = non_refundable
        self._object = object
        self._padding = padding
        self._round_robin = round_robin
        self._service_group_id = service_group_id
        self._service_group_name = service_group_name
        self._show_online = show_online
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceViewModel of this ServiceViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability(self):
        """Gets the availability of this ServiceViewModel.


        :return: The availability of this ServiceViewModel.
        :rtype: ServiceHoursViewModel
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this ServiceViewModel.


        :param availability: The availability of this ServiceViewModel.
        :type availability: ServiceHoursViewModel
        """

        self._availability = availability

    @property
    def book_ahead_unit(self):
        """Gets the book_ahead_unit of this ServiceViewModel.


        :return: The book_ahead_unit of this ServiceViewModel.
        :rtype: int
        """
        return self._book_ahead_unit

    @book_ahead_unit.setter
    def book_ahead_unit(self, book_ahead_unit):
        """Sets the book_ahead_unit of this ServiceViewModel.


        :param book_ahead_unit: The book_ahead_unit of this ServiceViewModel.
        :type book_ahead_unit: int
        """

        self._book_ahead_unit = book_ahead_unit

    @property
    def book_ahead_value(self):
        """Gets the book_ahead_value of this ServiceViewModel.


        :return: The book_ahead_value of this ServiceViewModel.
        :rtype: int
        """
        return self._book_ahead_value

    @book_ahead_value.setter
    def book_ahead_value(self, book_ahead_value):
        """Sets the book_ahead_value of this ServiceViewModel.


        :param book_ahead_value: The book_ahead_value of this ServiceViewModel.
        :type book_ahead_value: int
        """

        self._book_ahead_value = book_ahead_value

    @property
    def book_in_advance(self):
        """Gets the book_in_advance of this ServiceViewModel.


        :return: The book_in_advance of this ServiceViewModel.
        :rtype: int
        """
        return self._book_in_advance

    @book_in_advance.setter
    def book_in_advance(self, book_in_advance):
        """Sets the book_in_advance of this ServiceViewModel.


        :param book_in_advance: The book_in_advance of this ServiceViewModel.
        :type book_in_advance: int
        """

        self._book_in_advance = book_in_advance

    @property
    def booking_interval(self):
        """Gets the booking_interval of this ServiceViewModel.


        :return: The booking_interval of this ServiceViewModel.
        :rtype: int
        """
        return self._booking_interval

    @booking_interval.setter
    def booking_interval(self, booking_interval):
        """Sets the booking_interval of this ServiceViewModel.


        :param booking_interval: The booking_interval of this ServiceViewModel.
        :type booking_interval: int
        """

        self._booking_interval = booking_interval

    @property
    def booking_limit(self):
        """Gets the booking_limit of this ServiceViewModel.


        :return: The booking_limit of this ServiceViewModel.
        :rtype: int
        """
        return self._booking_limit

    @booking_limit.setter
    def booking_limit(self, booking_limit):
        """Sets the booking_limit of this ServiceViewModel.


        :param booking_limit: The booking_limit of this ServiceViewModel.
        :type booking_limit: int
        """

        self._booking_limit = booking_limit

    @property
    def calendar_id(self):
        """Gets the calendar_id of this ServiceViewModel.


        :return: The calendar_id of this ServiceViewModel.
        :rtype: str
        """
        return self._calendar_id

    @calendar_id.setter
    def calendar_id(self, calendar_id):
        """Sets the calendar_id of this ServiceViewModel.


        :param calendar_id: The calendar_id of this ServiceViewModel.
        :type calendar_id: str
        """

        self._calendar_id = calendar_id

    @property
    def calendar_resource_group_id(self):
        """Gets the calendar_resource_group_id of this ServiceViewModel.


        :return: The calendar_resource_group_id of this ServiceViewModel.
        :rtype: str
        """
        return self._calendar_resource_group_id

    @calendar_resource_group_id.setter
    def calendar_resource_group_id(self, calendar_resource_group_id):
        """Sets the calendar_resource_group_id of this ServiceViewModel.


        :param calendar_resource_group_id: The calendar_resource_group_id of this ServiceViewModel.
        :type calendar_resource_group_id: str
        """

        self._calendar_resource_group_id = calendar_resource_group_id

    @property
    def cancellation_fee_amount(self):
        """Gets the cancellation_fee_amount of this ServiceViewModel.


        :return: The cancellation_fee_amount of this ServiceViewModel.
        :rtype: float
        """
        return self._cancellation_fee_amount

    @cancellation_fee_amount.setter
    def cancellation_fee_amount(self, cancellation_fee_amount):
        """Sets the cancellation_fee_amount of this ServiceViewModel.


        :param cancellation_fee_amount: The cancellation_fee_amount of this ServiceViewModel.
        :type cancellation_fee_amount: float
        """

        self._cancellation_fee_amount = cancellation_fee_amount

    @property
    def cancellation_fee_taxable(self):
        """Gets the cancellation_fee_taxable of this ServiceViewModel.


        :return: The cancellation_fee_taxable of this ServiceViewModel.
        :rtype: bool
        """
        return self._cancellation_fee_taxable

    @cancellation_fee_taxable.setter
    def cancellation_fee_taxable(self, cancellation_fee_taxable):
        """Sets the cancellation_fee_taxable of this ServiceViewModel.


        :param cancellation_fee_taxable: The cancellation_fee_taxable of this ServiceViewModel.
        :type cancellation_fee_taxable: bool
        """

        self._cancellation_fee_taxable = cancellation_fee_taxable

    @property
    def company_id(self):
        """Gets the company_id of this ServiceViewModel.


        :return: The company_id of this ServiceViewModel.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this ServiceViewModel.


        :param company_id: The company_id of this ServiceViewModel.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def consumer_padding(self):
        """Gets the consumer_padding of this ServiceViewModel.


        :return: The consumer_padding of this ServiceViewModel.
        :rtype: bool
        """
        return self._consumer_padding

    @consumer_padding.setter
    def consumer_padding(self, consumer_padding):
        """Sets the consumer_padding of this ServiceViewModel.


        :param consumer_padding: The consumer_padding of this ServiceViewModel.
        :type consumer_padding: bool
        """

        self._consumer_padding = consumer_padding

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ServiceViewModel.


        :return: The custom_fields of this ServiceViewModel.
        :rtype: CustomFieldInputModel
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ServiceViewModel.


        :param custom_fields: The custom_fields of this ServiceViewModel.
        :type custom_fields: CustomFieldInputModel
        """

        self._custom_fields = custom_fields

    @property
    def daily_booking_limit_count(self):
        """Gets the daily_booking_limit_count of this ServiceViewModel.


        :return: The daily_booking_limit_count of this ServiceViewModel.
        :rtype: int
        """
        return self._daily_booking_limit_count

    @daily_booking_limit_count.setter
    def daily_booking_limit_count(self, daily_booking_limit_count):
        """Sets the daily_booking_limit_count of this ServiceViewModel.


        :param daily_booking_limit_count: The daily_booking_limit_count of this ServiceViewModel.
        :type daily_booking_limit_count: int
        """

        self._daily_booking_limit_count = daily_booking_limit_count

    @property
    def daily_booking_limit_minutes(self):
        """Gets the daily_booking_limit_minutes of this ServiceViewModel.


        :return: The daily_booking_limit_minutes of this ServiceViewModel.
        :rtype: int
        """
        return self._daily_booking_limit_minutes

    @daily_booking_limit_minutes.setter
    def daily_booking_limit_minutes(self, daily_booking_limit_minutes):
        """Sets the daily_booking_limit_minutes of this ServiceViewModel.


        :param daily_booking_limit_minutes: The daily_booking_limit_minutes of this ServiceViewModel.
        :type daily_booking_limit_minutes: int
        """

        self._daily_booking_limit_minutes = daily_booking_limit_minutes

    @property
    def default_service(self):
        """Gets the default_service of this ServiceViewModel.


        :return: The default_service of this ServiceViewModel.
        :rtype: bool
        """
        return self._default_service

    @default_service.setter
    def default_service(self, default_service):
        """Sets the default_service of this ServiceViewModel.


        :param default_service: The default_service of this ServiceViewModel.
        :type default_service: bool
        """

        self._default_service = default_service

    @property
    def description(self):
        """Gets the description of this ServiceViewModel.


        :return: The description of this ServiceViewModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ServiceViewModel.


        :param description: The description of this ServiceViewModel.
        :type description: str
        """

        self._description = description

    @property
    def duration(self):
        """Gets the duration of this ServiceViewModel.


        :return: The duration of this ServiceViewModel.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ServiceViewModel.


        :param duration: The duration of this ServiceViewModel.
        :type duration: int
        """

        self._duration = duration

    @property
    def duration_interval(self):
        """Gets the duration_interval of this ServiceViewModel.


        :return: The duration_interval of this ServiceViewModel.
        :rtype: int
        """
        return self._duration_interval

    @duration_interval.setter
    def duration_interval(self, duration_interval):
        """Sets the duration_interval of this ServiceViewModel.


        :param duration_interval: The duration_interval of this ServiceViewModel.
        :type duration_interval: int
        """

        self._duration_interval = duration_interval

    @property
    def duration_max(self):
        """Gets the duration_max of this ServiceViewModel.


        :return: The duration_max of this ServiceViewModel.
        :rtype: int
        """
        return self._duration_max

    @duration_max.setter
    def duration_max(self, duration_max):
        """Sets the duration_max of this ServiceViewModel.


        :param duration_max: The duration_max of this ServiceViewModel.
        :type duration_max: int
        """

        self._duration_max = duration_max

    @property
    def duration_min(self):
        """Gets the duration_min of this ServiceViewModel.


        :return: The duration_min of this ServiceViewModel.
        :rtype: int
        """
        return self._duration_min

    @duration_min.setter
    def duration_min(self, duration_min):
        """Sets the duration_min of this ServiceViewModel.


        :param duration_min: The duration_min of this ServiceViewModel.
        :type duration_min: int
        """

        self._duration_min = duration_min

    @property
    def duration_select(self):
        """Gets the duration_select of this ServiceViewModel.


        :return: The duration_select of this ServiceViewModel.
        :rtype: bool
        """
        return self._duration_select

    @duration_select.setter
    def duration_select(self, duration_select):
        """Sets the duration_select of this ServiceViewModel.


        :param duration_select: The duration_select of this ServiceViewModel.
        :type duration_select: bool
        """

        self._duration_select = duration_select

    @property
    def fee_amount(self):
        """Gets the fee_amount of this ServiceViewModel.


        :return: The fee_amount of this ServiceViewModel.
        :rtype: float
        """
        return self._fee_amount

    @fee_amount.setter
    def fee_amount(self, fee_amount):
        """Sets the fee_amount of this ServiceViewModel.


        :param fee_amount: The fee_amount of this ServiceViewModel.
        :type fee_amount: float
        """

        self._fee_amount = fee_amount

    @property
    def fee_taxable(self):
        """Gets the fee_taxable of this ServiceViewModel.


        :return: The fee_taxable of this ServiceViewModel.
        :rtype: bool
        """
        return self._fee_taxable

    @fee_taxable.setter
    def fee_taxable(self, fee_taxable):
        """Sets the fee_taxable of this ServiceViewModel.


        :param fee_taxable: The fee_taxable of this ServiceViewModel.
        :type fee_taxable: bool
        """

        self._fee_taxable = fee_taxable

    @property
    def id(self):
        """Gets the id of this ServiceViewModel.


        :return: The id of this ServiceViewModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceViewModel.


        :param id: The id of this ServiceViewModel.
        :type id: str
        """

        self._id = id

    @property
    def image_url(self):
        """Gets the image_url of this ServiceViewModel.


        :return: The image_url of this ServiceViewModel.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ServiceViewModel.


        :param image_url: The image_url of this ServiceViewModel.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def location_id(self):
        """Gets the location_id of this ServiceViewModel.


        :return: The location_id of this ServiceViewModel.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ServiceViewModel.


        :param location_id: The location_id of this ServiceViewModel.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def max_booking_limit(self):
        """Gets the max_booking_limit of this ServiceViewModel.


        :return: The max_booking_limit of this ServiceViewModel.
        :rtype: int
        """
        return self._max_booking_limit

    @max_booking_limit.setter
    def max_booking_limit(self, max_booking_limit):
        """Sets the max_booking_limit of this ServiceViewModel.


        :param max_booking_limit: The max_booking_limit of this ServiceViewModel.
        :type max_booking_limit: int
        """

        self._max_booking_limit = max_booking_limit

    @property
    def max_capacity(self):
        """Gets the max_capacity of this ServiceViewModel.


        :return: The max_capacity of this ServiceViewModel.
        :rtype: int
        """
        return self._max_capacity

    @max_capacity.setter
    def max_capacity(self, max_capacity):
        """Sets the max_capacity of this ServiceViewModel.


        :param max_capacity: The max_capacity of this ServiceViewModel.
        :type max_capacity: int
        """

        self._max_capacity = max_capacity

    @property
    def max_group_size(self):
        """Gets the max_group_size of this ServiceViewModel.


        :return: The max_group_size of this ServiceViewModel.
        :rtype: int
        """
        return self._max_group_size

    @max_group_size.setter
    def max_group_size(self, max_group_size):
        """Sets the max_group_size of this ServiceViewModel.


        :param max_group_size: The max_group_size of this ServiceViewModel.
        :type max_group_size: int
        """

        self._max_group_size = max_group_size

    @property
    def max_resource_booking_limit(self):
        """Gets the max_resource_booking_limit of this ServiceViewModel.


        :return: The max_resource_booking_limit of this ServiceViewModel.
        :rtype: int
        """
        return self._max_resource_booking_limit

    @max_resource_booking_limit.setter
    def max_resource_booking_limit(self, max_resource_booking_limit):
        """Sets the max_resource_booking_limit of this ServiceViewModel.


        :param max_resource_booking_limit: The max_resource_booking_limit of this ServiceViewModel.
        :type max_resource_booking_limit: int
        """

        self._max_resource_booking_limit = max_resource_booking_limit

    @property
    def media_page_url(self):
        """Gets the media_page_url of this ServiceViewModel.


        :return: The media_page_url of this ServiceViewModel.
        :rtype: str
        """
        return self._media_page_url

    @media_page_url.setter
    def media_page_url(self, media_page_url):
        """Sets the media_page_url of this ServiceViewModel.


        :param media_page_url: The media_page_url of this ServiceViewModel.
        :type media_page_url: str
        """

        self._media_page_url = media_page_url

    @property
    def name(self):
        """Gets the name of this ServiceViewModel.


        :return: The name of this ServiceViewModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceViewModel.


        :param name: The name of this ServiceViewModel.
        :type name: str
        """

        self._name = name

    @property
    def non_refundable(self):
        """Gets the non_refundable of this ServiceViewModel.


        :return: The non_refundable of this ServiceViewModel.
        :rtype: bool
        """
        return self._non_refundable

    @non_refundable.setter
    def non_refundable(self, non_refundable):
        """Sets the non_refundable of this ServiceViewModel.


        :param non_refundable: The non_refundable of this ServiceViewModel.
        :type non_refundable: bool
        """

        self._non_refundable = non_refundable

    @property
    def object(self):
        """Gets the object of this ServiceViewModel.


        :return: The object of this ServiceViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ServiceViewModel.


        :param object: The object of this ServiceViewModel.
        :type object: str
        """

        self._object = object

    @property
    def padding(self):
        """Gets the padding of this ServiceViewModel.


        :return: The padding of this ServiceViewModel.
        :rtype: int
        """
        return self._padding

    @padding.setter
    def padding(self, padding):
        """Sets the padding of this ServiceViewModel.


        :param padding: The padding of this ServiceViewModel.
        :type padding: int
        """

        self._padding = padding

    @property
    def round_robin(self):
        """Gets the round_robin of this ServiceViewModel.


        :return: The round_robin of this ServiceViewModel.
        :rtype: int
        """
        return self._round_robin

    @round_robin.setter
    def round_robin(self, round_robin):
        """Sets the round_robin of this ServiceViewModel.


        :param round_robin: The round_robin of this ServiceViewModel.
        :type round_robin: int
        """

        self._round_robin = round_robin

    @property
    def service_group_id(self):
        """Gets the service_group_id of this ServiceViewModel.


        :return: The service_group_id of this ServiceViewModel.
        :rtype: int
        """
        return self._service_group_id

    @service_group_id.setter
    def service_group_id(self, service_group_id):
        """Sets the service_group_id of this ServiceViewModel.


        :param service_group_id: The service_group_id of this ServiceViewModel.
        :type service_group_id: int
        """

        self._service_group_id = service_group_id

    @property
    def service_group_name(self):
        """Gets the service_group_name of this ServiceViewModel.


        :return: The service_group_name of this ServiceViewModel.
        :rtype: str
        """
        return self._service_group_name

    @service_group_name.setter
    def service_group_name(self, service_group_name):
        """Sets the service_group_name of this ServiceViewModel.


        :param service_group_name: The service_group_name of this ServiceViewModel.
        :type service_group_name: str
        """

        self._service_group_name = service_group_name

    @property
    def show_online(self):
        """Gets the show_online of this ServiceViewModel.


        :return: The show_online of this ServiceViewModel.
        :rtype: bool
        """
        return self._show_online

    @show_online.setter
    def show_online(self, show_online):
        """Sets the show_online of this ServiceViewModel.


        :param show_online: The show_online of this ServiceViewModel.
        :type show_online: bool
        """

        self._show_online = show_online

    @property
    def type(self):
        """Gets the type of this ServiceViewModel.


        :return: The type of this ServiceViewModel.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServiceViewModel.


        :param type: The type of this ServiceViewModel.
        :type type: str
        """

        self._type = type
