# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, content_type: str=None, status_code: int=None):
        """ContentResult - a model defined in OpenAPI

        :param content: The content of this ContentResult.
        :param content_type: The content_type of this ContentResult.
        :param status_code: The status_code of this ContentResult.
        """
        self.openapi_types = {
            'content': str,
            'content_type': str,
            'status_code': int
        }

        self.attribute_map = {
            'content': 'content',
            'content_type': 'contentType',
            'status_code': 'statusCode'
        }

        self._content = content
        self._content_type = content_type
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentResult of this ContentResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ContentResult.


        :return: The content of this ContentResult.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ContentResult.


        :param content: The content of this ContentResult.
        :type content: str
        """

        self._content = content

    @property
    def content_type(self):
        """Gets the content_type of this ContentResult.


        :return: The content_type of this ContentResult.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ContentResult.


        :param content_type: The content_type of this ContentResult.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def status_code(self):
        """Gets the status_code of this ContentResult.


        :return: The status_code of this ContentResult.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this ContentResult.


        :param status_code: The status_code of this ContentResult.
        :type status_code: int
        """

        self._status_code = status_code
