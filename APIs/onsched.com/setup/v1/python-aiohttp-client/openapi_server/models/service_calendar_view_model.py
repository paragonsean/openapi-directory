# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceCalendarViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calendar_id: str=None, calendar_name: str=None, id: str=None, location_id: str=None, service_id: str=None, service_name: str=None):
        """ServiceCalendarViewModel - a model defined in OpenAPI

        :param calendar_id: The calendar_id of this ServiceCalendarViewModel.
        :param calendar_name: The calendar_name of this ServiceCalendarViewModel.
        :param id: The id of this ServiceCalendarViewModel.
        :param location_id: The location_id of this ServiceCalendarViewModel.
        :param service_id: The service_id of this ServiceCalendarViewModel.
        :param service_name: The service_name of this ServiceCalendarViewModel.
        """
        self.openapi_types = {
            'calendar_id': str,
            'calendar_name': str,
            'id': str,
            'location_id': str,
            'service_id': str,
            'service_name': str
        }

        self.attribute_map = {
            'calendar_id': 'calendarId',
            'calendar_name': 'calendarName',
            'id': 'id',
            'location_id': 'locationId',
            'service_id': 'serviceId',
            'service_name': 'serviceName'
        }

        self._calendar_id = calendar_id
        self._calendar_name = calendar_name
        self._id = id
        self._location_id = location_id
        self._service_id = service_id
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceCalendarViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceCalendarViewModel of this ServiceCalendarViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calendar_id(self):
        """Gets the calendar_id of this ServiceCalendarViewModel.


        :return: The calendar_id of this ServiceCalendarViewModel.
        :rtype: str
        """
        return self._calendar_id

    @calendar_id.setter
    def calendar_id(self, calendar_id):
        """Sets the calendar_id of this ServiceCalendarViewModel.


        :param calendar_id: The calendar_id of this ServiceCalendarViewModel.
        :type calendar_id: str
        """

        self._calendar_id = calendar_id

    @property
    def calendar_name(self):
        """Gets the calendar_name of this ServiceCalendarViewModel.


        :return: The calendar_name of this ServiceCalendarViewModel.
        :rtype: str
        """
        return self._calendar_name

    @calendar_name.setter
    def calendar_name(self, calendar_name):
        """Sets the calendar_name of this ServiceCalendarViewModel.


        :param calendar_name: The calendar_name of this ServiceCalendarViewModel.
        :type calendar_name: str
        """

        self._calendar_name = calendar_name

    @property
    def id(self):
        """Gets the id of this ServiceCalendarViewModel.


        :return: The id of this ServiceCalendarViewModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceCalendarViewModel.


        :param id: The id of this ServiceCalendarViewModel.
        :type id: str
        """

        self._id = id

    @property
    def location_id(self):
        """Gets the location_id of this ServiceCalendarViewModel.


        :return: The location_id of this ServiceCalendarViewModel.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ServiceCalendarViewModel.


        :param location_id: The location_id of this ServiceCalendarViewModel.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def service_id(self):
        """Gets the service_id of this ServiceCalendarViewModel.


        :return: The service_id of this ServiceCalendarViewModel.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ServiceCalendarViewModel.


        :param service_id: The service_id of this ServiceCalendarViewModel.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_name(self):
        """Gets the service_name of this ServiceCalendarViewModel.


        :return: The service_name of this ServiceCalendarViewModel.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceCalendarViewModel.


        :param service_name: The service_name of this ServiceCalendarViewModel.
        :type service_name: str
        """

        self._service_name = service_name
