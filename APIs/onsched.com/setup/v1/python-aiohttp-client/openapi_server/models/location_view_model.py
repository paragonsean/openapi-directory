# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address_view_model import AddressViewModel
from openapi_server.models.appointment_reminder_view_model import AppointmentReminderViewModel
from openapi_server.models.business_defaults_view_model import BusinessDefaultsViewModel
from openapi_server.models.business_holiday_view_model import BusinessHolidayViewModel
from openapi_server.models.business_hours_view_model import BusinessHoursViewModel
from openapi_server.models.business_service_view_model import BusinessServiceViewModel
from openapi_server.models.online_settings_view_model import OnlineSettingsViewModel
from openapi_server.models.travel_view_model import TravelViewModel
from openapi_server import util


class LocationViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: AddressViewModel=None, admin_email: str=None, admin_name: str=None, appointment_reminders: AppointmentReminderViewModel=None, business_holidays: List[BusinessHolidayViewModel]=None, business_hours: BusinessHoursViewModel=None, company_id: str=None, company_name: str=None, defaults: BusinessDefaultsViewModel=None, email: str=None, fax: str=None, friendly_id: str=None, id: str=None, image_url: str=None, latitude: float=None, logo: str=None, longitude: float=None, name: str=None, object: str=None, phone: str=None, primary_business: bool=None, primary_calendar_id: str=None, region_id: str=None, services: List[BusinessServiceViewModel]=None, settings: OnlineSettingsViewModel=None, timezone_iana: str=None, timezone_id: str=None, timezone_offset: int=None, travel: TravelViewModel=None, website: str=None):
        """LocationViewModel - a model defined in OpenAPI

        :param address: The address of this LocationViewModel.
        :param admin_email: The admin_email of this LocationViewModel.
        :param admin_name: The admin_name of this LocationViewModel.
        :param appointment_reminders: The appointment_reminders of this LocationViewModel.
        :param business_holidays: The business_holidays of this LocationViewModel.
        :param business_hours: The business_hours of this LocationViewModel.
        :param company_id: The company_id of this LocationViewModel.
        :param company_name: The company_name of this LocationViewModel.
        :param defaults: The defaults of this LocationViewModel.
        :param email: The email of this LocationViewModel.
        :param fax: The fax of this LocationViewModel.
        :param friendly_id: The friendly_id of this LocationViewModel.
        :param id: The id of this LocationViewModel.
        :param image_url: The image_url of this LocationViewModel.
        :param latitude: The latitude of this LocationViewModel.
        :param logo: The logo of this LocationViewModel.
        :param longitude: The longitude of this LocationViewModel.
        :param name: The name of this LocationViewModel.
        :param object: The object of this LocationViewModel.
        :param phone: The phone of this LocationViewModel.
        :param primary_business: The primary_business of this LocationViewModel.
        :param primary_calendar_id: The primary_calendar_id of this LocationViewModel.
        :param region_id: The region_id of this LocationViewModel.
        :param services: The services of this LocationViewModel.
        :param settings: The settings of this LocationViewModel.
        :param timezone_iana: The timezone_iana of this LocationViewModel.
        :param timezone_id: The timezone_id of this LocationViewModel.
        :param timezone_offset: The timezone_offset of this LocationViewModel.
        :param travel: The travel of this LocationViewModel.
        :param website: The website of this LocationViewModel.
        """
        self.openapi_types = {
            'address': AddressViewModel,
            'admin_email': str,
            'admin_name': str,
            'appointment_reminders': AppointmentReminderViewModel,
            'business_holidays': List[BusinessHolidayViewModel],
            'business_hours': BusinessHoursViewModel,
            'company_id': str,
            'company_name': str,
            'defaults': BusinessDefaultsViewModel,
            'email': str,
            'fax': str,
            'friendly_id': str,
            'id': str,
            'image_url': str,
            'latitude': float,
            'logo': str,
            'longitude': float,
            'name': str,
            'object': str,
            'phone': str,
            'primary_business': bool,
            'primary_calendar_id': str,
            'region_id': str,
            'services': List[BusinessServiceViewModel],
            'settings': OnlineSettingsViewModel,
            'timezone_iana': str,
            'timezone_id': str,
            'timezone_offset': int,
            'travel': TravelViewModel,
            'website': str
        }

        self.attribute_map = {
            'address': 'address',
            'admin_email': 'adminEmail',
            'admin_name': 'adminName',
            'appointment_reminders': 'appointmentReminders',
            'business_holidays': 'businessHolidays',
            'business_hours': 'businessHours',
            'company_id': 'companyId',
            'company_name': 'companyName',
            'defaults': 'defaults',
            'email': 'email',
            'fax': 'fax',
            'friendly_id': 'friendlyId',
            'id': 'id',
            'image_url': 'imageUrl',
            'latitude': 'latitude',
            'logo': 'logo',
            'longitude': 'longitude',
            'name': 'name',
            'object': 'object',
            'phone': 'phone',
            'primary_business': 'primaryBusiness',
            'primary_calendar_id': 'primaryCalendarId',
            'region_id': 'regionId',
            'services': 'services',
            'settings': 'settings',
            'timezone_iana': 'timezoneIana',
            'timezone_id': 'timezoneId',
            'timezone_offset': 'timezoneOffset',
            'travel': 'travel',
            'website': 'website'
        }

        self._address = address
        self._admin_email = admin_email
        self._admin_name = admin_name
        self._appointment_reminders = appointment_reminders
        self._business_holidays = business_holidays
        self._business_hours = business_hours
        self._company_id = company_id
        self._company_name = company_name
        self._defaults = defaults
        self._email = email
        self._fax = fax
        self._friendly_id = friendly_id
        self._id = id
        self._image_url = image_url
        self._latitude = latitude
        self._logo = logo
        self._longitude = longitude
        self._name = name
        self._object = object
        self._phone = phone
        self._primary_business = primary_business
        self._primary_calendar_id = primary_calendar_id
        self._region_id = region_id
        self._services = services
        self._settings = settings
        self._timezone_iana = timezone_iana
        self._timezone_id = timezone_id
        self._timezone_offset = timezone_offset
        self._travel = travel
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationViewModel of this LocationViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this LocationViewModel.


        :return: The address of this LocationViewModel.
        :rtype: AddressViewModel
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this LocationViewModel.


        :param address: The address of this LocationViewModel.
        :type address: AddressViewModel
        """

        self._address = address

    @property
    def admin_email(self):
        """Gets the admin_email of this LocationViewModel.


        :return: The admin_email of this LocationViewModel.
        :rtype: str
        """
        return self._admin_email

    @admin_email.setter
    def admin_email(self, admin_email):
        """Sets the admin_email of this LocationViewModel.


        :param admin_email: The admin_email of this LocationViewModel.
        :type admin_email: str
        """

        self._admin_email = admin_email

    @property
    def admin_name(self):
        """Gets the admin_name of this LocationViewModel.


        :return: The admin_name of this LocationViewModel.
        :rtype: str
        """
        return self._admin_name

    @admin_name.setter
    def admin_name(self, admin_name):
        """Sets the admin_name of this LocationViewModel.


        :param admin_name: The admin_name of this LocationViewModel.
        :type admin_name: str
        """

        self._admin_name = admin_name

    @property
    def appointment_reminders(self):
        """Gets the appointment_reminders of this LocationViewModel.


        :return: The appointment_reminders of this LocationViewModel.
        :rtype: AppointmentReminderViewModel
        """
        return self._appointment_reminders

    @appointment_reminders.setter
    def appointment_reminders(self, appointment_reminders):
        """Sets the appointment_reminders of this LocationViewModel.


        :param appointment_reminders: The appointment_reminders of this LocationViewModel.
        :type appointment_reminders: AppointmentReminderViewModel
        """

        self._appointment_reminders = appointment_reminders

    @property
    def business_holidays(self):
        """Gets the business_holidays of this LocationViewModel.


        :return: The business_holidays of this LocationViewModel.
        :rtype: List[BusinessHolidayViewModel]
        """
        return self._business_holidays

    @business_holidays.setter
    def business_holidays(self, business_holidays):
        """Sets the business_holidays of this LocationViewModel.


        :param business_holidays: The business_holidays of this LocationViewModel.
        :type business_holidays: List[BusinessHolidayViewModel]
        """

        self._business_holidays = business_holidays

    @property
    def business_hours(self):
        """Gets the business_hours of this LocationViewModel.


        :return: The business_hours of this LocationViewModel.
        :rtype: BusinessHoursViewModel
        """
        return self._business_hours

    @business_hours.setter
    def business_hours(self, business_hours):
        """Sets the business_hours of this LocationViewModel.


        :param business_hours: The business_hours of this LocationViewModel.
        :type business_hours: BusinessHoursViewModel
        """

        self._business_hours = business_hours

    @property
    def company_id(self):
        """Gets the company_id of this LocationViewModel.


        :return: The company_id of this LocationViewModel.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this LocationViewModel.


        :param company_id: The company_id of this LocationViewModel.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def company_name(self):
        """Gets the company_name of this LocationViewModel.


        :return: The company_name of this LocationViewModel.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this LocationViewModel.


        :param company_name: The company_name of this LocationViewModel.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def defaults(self):
        """Gets the defaults of this LocationViewModel.


        :return: The defaults of this LocationViewModel.
        :rtype: BusinessDefaultsViewModel
        """
        return self._defaults

    @defaults.setter
    def defaults(self, defaults):
        """Sets the defaults of this LocationViewModel.


        :param defaults: The defaults of this LocationViewModel.
        :type defaults: BusinessDefaultsViewModel
        """

        self._defaults = defaults

    @property
    def email(self):
        """Gets the email of this LocationViewModel.


        :return: The email of this LocationViewModel.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this LocationViewModel.


        :param email: The email of this LocationViewModel.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this LocationViewModel.


        :return: The fax of this LocationViewModel.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this LocationViewModel.


        :param fax: The fax of this LocationViewModel.
        :type fax: str
        """

        self._fax = fax

    @property
    def friendly_id(self):
        """Gets the friendly_id of this LocationViewModel.


        :return: The friendly_id of this LocationViewModel.
        :rtype: str
        """
        return self._friendly_id

    @friendly_id.setter
    def friendly_id(self, friendly_id):
        """Sets the friendly_id of this LocationViewModel.


        :param friendly_id: The friendly_id of this LocationViewModel.
        :type friendly_id: str
        """

        self._friendly_id = friendly_id

    @property
    def id(self):
        """Gets the id of this LocationViewModel.


        :return: The id of this LocationViewModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LocationViewModel.


        :param id: The id of this LocationViewModel.
        :type id: str
        """

        self._id = id

    @property
    def image_url(self):
        """Gets the image_url of this LocationViewModel.


        :return: The image_url of this LocationViewModel.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this LocationViewModel.


        :param image_url: The image_url of this LocationViewModel.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def latitude(self):
        """Gets the latitude of this LocationViewModel.


        :return: The latitude of this LocationViewModel.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this LocationViewModel.


        :param latitude: The latitude of this LocationViewModel.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def logo(self):
        """Gets the logo of this LocationViewModel.


        :return: The logo of this LocationViewModel.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this LocationViewModel.


        :param logo: The logo of this LocationViewModel.
        :type logo: str
        """

        self._logo = logo

    @property
    def longitude(self):
        """Gets the longitude of this LocationViewModel.


        :return: The longitude of this LocationViewModel.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this LocationViewModel.


        :param longitude: The longitude of this LocationViewModel.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this LocationViewModel.


        :return: The name of this LocationViewModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LocationViewModel.


        :param name: The name of this LocationViewModel.
        :type name: str
        """

        self._name = name

    @property
    def object(self):
        """Gets the object of this LocationViewModel.


        :return: The object of this LocationViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this LocationViewModel.


        :param object: The object of this LocationViewModel.
        :type object: str
        """

        self._object = object

    @property
    def phone(self):
        """Gets the phone of this LocationViewModel.


        :return: The phone of this LocationViewModel.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this LocationViewModel.


        :param phone: The phone of this LocationViewModel.
        :type phone: str
        """

        self._phone = phone

    @property
    def primary_business(self):
        """Gets the primary_business of this LocationViewModel.


        :return: The primary_business of this LocationViewModel.
        :rtype: bool
        """
        return self._primary_business

    @primary_business.setter
    def primary_business(self, primary_business):
        """Sets the primary_business of this LocationViewModel.


        :param primary_business: The primary_business of this LocationViewModel.
        :type primary_business: bool
        """

        self._primary_business = primary_business

    @property
    def primary_calendar_id(self):
        """Gets the primary_calendar_id of this LocationViewModel.


        :return: The primary_calendar_id of this LocationViewModel.
        :rtype: str
        """
        return self._primary_calendar_id

    @primary_calendar_id.setter
    def primary_calendar_id(self, primary_calendar_id):
        """Sets the primary_calendar_id of this LocationViewModel.


        :param primary_calendar_id: The primary_calendar_id of this LocationViewModel.
        :type primary_calendar_id: str
        """

        self._primary_calendar_id = primary_calendar_id

    @property
    def region_id(self):
        """Gets the region_id of this LocationViewModel.


        :return: The region_id of this LocationViewModel.
        :rtype: str
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id):
        """Sets the region_id of this LocationViewModel.


        :param region_id: The region_id of this LocationViewModel.
        :type region_id: str
        """

        self._region_id = region_id

    @property
    def services(self):
        """Gets the services of this LocationViewModel.


        :return: The services of this LocationViewModel.
        :rtype: List[BusinessServiceViewModel]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this LocationViewModel.


        :param services: The services of this LocationViewModel.
        :type services: List[BusinessServiceViewModel]
        """

        self._services = services

    @property
    def settings(self):
        """Gets the settings of this LocationViewModel.


        :return: The settings of this LocationViewModel.
        :rtype: OnlineSettingsViewModel
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this LocationViewModel.


        :param settings: The settings of this LocationViewModel.
        :type settings: OnlineSettingsViewModel
        """

        self._settings = settings

    @property
    def timezone_iana(self):
        """Gets the timezone_iana of this LocationViewModel.


        :return: The timezone_iana of this LocationViewModel.
        :rtype: str
        """
        return self._timezone_iana

    @timezone_iana.setter
    def timezone_iana(self, timezone_iana):
        """Sets the timezone_iana of this LocationViewModel.


        :param timezone_iana: The timezone_iana of this LocationViewModel.
        :type timezone_iana: str
        """

        self._timezone_iana = timezone_iana

    @property
    def timezone_id(self):
        """Gets the timezone_id of this LocationViewModel.


        :return: The timezone_id of this LocationViewModel.
        :rtype: str
        """
        return self._timezone_id

    @timezone_id.setter
    def timezone_id(self, timezone_id):
        """Sets the timezone_id of this LocationViewModel.


        :param timezone_id: The timezone_id of this LocationViewModel.
        :type timezone_id: str
        """

        self._timezone_id = timezone_id

    @property
    def timezone_offset(self):
        """Gets the timezone_offset of this LocationViewModel.


        :return: The timezone_offset of this LocationViewModel.
        :rtype: int
        """
        return self._timezone_offset

    @timezone_offset.setter
    def timezone_offset(self, timezone_offset):
        """Sets the timezone_offset of this LocationViewModel.


        :param timezone_offset: The timezone_offset of this LocationViewModel.
        :type timezone_offset: int
        """

        self._timezone_offset = timezone_offset

    @property
    def travel(self):
        """Gets the travel of this LocationViewModel.


        :return: The travel of this LocationViewModel.
        :rtype: TravelViewModel
        """
        return self._travel

    @travel.setter
    def travel(self, travel):
        """Sets the travel of this LocationViewModel.


        :param travel: The travel of this LocationViewModel.
        :type travel: TravelViewModel
        """

        self._travel = travel

    @property
    def website(self):
        """Gets the website of this LocationViewModel.


        :return: The website of this LocationViewModel.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this LocationViewModel.


        :param website: The website of this LocationViewModel.
        :type website: str
        """

        self._website = website
