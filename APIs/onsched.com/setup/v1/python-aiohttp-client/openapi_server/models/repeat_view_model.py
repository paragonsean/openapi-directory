# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepeatViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frequency: str=None, interval: int=None, month_day: str=None, month_type: str=None, weekdays: str=None):
        """RepeatViewModel - a model defined in OpenAPI

        :param frequency: The frequency of this RepeatViewModel.
        :param interval: The interval of this RepeatViewModel.
        :param month_day: The month_day of this RepeatViewModel.
        :param month_type: The month_type of this RepeatViewModel.
        :param weekdays: The weekdays of this RepeatViewModel.
        """
        self.openapi_types = {
            'frequency': str,
            'interval': int,
            'month_day': str,
            'month_type': str,
            'weekdays': str
        }

        self.attribute_map = {
            'frequency': 'frequency',
            'interval': 'interval',
            'month_day': 'monthDay',
            'month_type': 'monthType',
            'weekdays': 'weekdays'
        }

        self._frequency = frequency
        self._interval = interval
        self._month_day = month_day
        self._month_type = month_type
        self._weekdays = weekdays

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepeatViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepeatViewModel of this RepeatViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frequency(self):
        """Gets the frequency of this RepeatViewModel.


        :return: The frequency of this RepeatViewModel.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this RepeatViewModel.


        :param frequency: The frequency of this RepeatViewModel.
        :type frequency: str
        """

        self._frequency = frequency

    @property
    def interval(self):
        """Gets the interval of this RepeatViewModel.


        :return: The interval of this RepeatViewModel.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this RepeatViewModel.


        :param interval: The interval of this RepeatViewModel.
        :type interval: int
        """

        self._interval = interval

    @property
    def month_day(self):
        """Gets the month_day of this RepeatViewModel.


        :return: The month_day of this RepeatViewModel.
        :rtype: str
        """
        return self._month_day

    @month_day.setter
    def month_day(self, month_day):
        """Sets the month_day of this RepeatViewModel.


        :param month_day: The month_day of this RepeatViewModel.
        :type month_day: str
        """

        self._month_day = month_day

    @property
    def month_type(self):
        """Gets the month_type of this RepeatViewModel.


        :return: The month_type of this RepeatViewModel.
        :rtype: str
        """
        return self._month_type

    @month_type.setter
    def month_type(self, month_type):
        """Sets the month_type of this RepeatViewModel.


        :param month_type: The month_type of this RepeatViewModel.
        :type month_type: str
        """

        self._month_type = month_type

    @property
    def weekdays(self):
        """Gets the weekdays of this RepeatViewModel.


        :return: The weekdays of this RepeatViewModel.
        :rtype: str
        """
        return self._weekdays

    @weekdays.setter
    def weekdays(self, weekdays):
        """Sets the weekdays of this RepeatViewModel.


        :param weekdays: The weekdays of this RepeatViewModel.
        :type weekdays: str
        """

        self._weekdays = weekdays
