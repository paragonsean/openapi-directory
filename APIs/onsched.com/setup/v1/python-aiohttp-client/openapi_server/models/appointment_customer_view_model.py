# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppointmentCustomerViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_id: str=None, customer_id: str=None):
        """AppointmentCustomerViewModel - a model defined in OpenAPI

        :param appointment_id: The appointment_id of this AppointmentCustomerViewModel.
        :param customer_id: The customer_id of this AppointmentCustomerViewModel.
        """
        self.openapi_types = {
            'appointment_id': str,
            'customer_id': str
        }

        self.attribute_map = {
            'appointment_id': 'appointmentId',
            'customer_id': 'customerId'
        }

        self._appointment_id = appointment_id
        self._customer_id = customer_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppointmentCustomerViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppointmentCustomerViewModel of this AppointmentCustomerViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_id(self):
        """Gets the appointment_id of this AppointmentCustomerViewModel.


        :return: The appointment_id of this AppointmentCustomerViewModel.
        :rtype: str
        """
        return self._appointment_id

    @appointment_id.setter
    def appointment_id(self, appointment_id):
        """Sets the appointment_id of this AppointmentCustomerViewModel.


        :param appointment_id: The appointment_id of this AppointmentCustomerViewModel.
        :type appointment_id: str
        """

        self._appointment_id = appointment_id

    @property
    def customer_id(self):
        """Gets the customer_id of this AppointmentCustomerViewModel.


        :return: The customer_id of this AppointmentCustomerViewModel.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this AppointmentCustomerViewModel.


        :param customer_id: The customer_id of this AppointmentCustomerViewModel.
        :type customer_id: str
        """

        self._customer_id = customer_id
