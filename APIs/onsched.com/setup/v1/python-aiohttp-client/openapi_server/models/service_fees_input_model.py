# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceFeesInputModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancellation_fee_amount: float=None, cancellation_fee_taxable: bool=None, fee_amount: float=None, fee_taxable: bool=None, non_refundable: bool=None):
        """ServiceFeesInputModel - a model defined in OpenAPI

        :param cancellation_fee_amount: The cancellation_fee_amount of this ServiceFeesInputModel.
        :param cancellation_fee_taxable: The cancellation_fee_taxable of this ServiceFeesInputModel.
        :param fee_amount: The fee_amount of this ServiceFeesInputModel.
        :param fee_taxable: The fee_taxable of this ServiceFeesInputModel.
        :param non_refundable: The non_refundable of this ServiceFeesInputModel.
        """
        self.openapi_types = {
            'cancellation_fee_amount': float,
            'cancellation_fee_taxable': bool,
            'fee_amount': float,
            'fee_taxable': bool,
            'non_refundable': bool
        }

        self.attribute_map = {
            'cancellation_fee_amount': 'cancellationFeeAmount',
            'cancellation_fee_taxable': 'cancellationFeeTaxable',
            'fee_amount': 'feeAmount',
            'fee_taxable': 'feeTaxable',
            'non_refundable': 'nonRefundable'
        }

        self._cancellation_fee_amount = cancellation_fee_amount
        self._cancellation_fee_taxable = cancellation_fee_taxable
        self._fee_amount = fee_amount
        self._fee_taxable = fee_taxable
        self._non_refundable = non_refundable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceFeesInputModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceFeesInputModel of this ServiceFeesInputModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancellation_fee_amount(self):
        """Gets the cancellation_fee_amount of this ServiceFeesInputModel.


        :return: The cancellation_fee_amount of this ServiceFeesInputModel.
        :rtype: float
        """
        return self._cancellation_fee_amount

    @cancellation_fee_amount.setter
    def cancellation_fee_amount(self, cancellation_fee_amount):
        """Sets the cancellation_fee_amount of this ServiceFeesInputModel.


        :param cancellation_fee_amount: The cancellation_fee_amount of this ServiceFeesInputModel.
        :type cancellation_fee_amount: float
        """

        self._cancellation_fee_amount = cancellation_fee_amount

    @property
    def cancellation_fee_taxable(self):
        """Gets the cancellation_fee_taxable of this ServiceFeesInputModel.


        :return: The cancellation_fee_taxable of this ServiceFeesInputModel.
        :rtype: bool
        """
        return self._cancellation_fee_taxable

    @cancellation_fee_taxable.setter
    def cancellation_fee_taxable(self, cancellation_fee_taxable):
        """Sets the cancellation_fee_taxable of this ServiceFeesInputModel.


        :param cancellation_fee_taxable: The cancellation_fee_taxable of this ServiceFeesInputModel.
        :type cancellation_fee_taxable: bool
        """

        self._cancellation_fee_taxable = cancellation_fee_taxable

    @property
    def fee_amount(self):
        """Gets the fee_amount of this ServiceFeesInputModel.


        :return: The fee_amount of this ServiceFeesInputModel.
        :rtype: float
        """
        return self._fee_amount

    @fee_amount.setter
    def fee_amount(self, fee_amount):
        """Sets the fee_amount of this ServiceFeesInputModel.


        :param fee_amount: The fee_amount of this ServiceFeesInputModel.
        :type fee_amount: float
        """

        self._fee_amount = fee_amount

    @property
    def fee_taxable(self):
        """Gets the fee_taxable of this ServiceFeesInputModel.


        :return: The fee_taxable of this ServiceFeesInputModel.
        :rtype: bool
        """
        return self._fee_taxable

    @fee_taxable.setter
    def fee_taxable(self, fee_taxable):
        """Sets the fee_taxable of this ServiceFeesInputModel.


        :param fee_taxable: The fee_taxable of this ServiceFeesInputModel.
        :type fee_taxable: bool
        """

        self._fee_taxable = fee_taxable

    @property
    def non_refundable(self):
        """Gets the non_refundable of this ServiceFeesInputModel.


        :return: The non_refundable of this ServiceFeesInputModel.
        :rtype: bool
        """
        return self._non_refundable

    @non_refundable.setter
    def non_refundable(self, non_refundable):
        """Sets the non_refundable of this ServiceFeesInputModel.


        :param non_refundable: The non_refundable of this ServiceFeesInputModel.
        :type non_refundable: bool
        """

        self._non_refundable = non_refundable
