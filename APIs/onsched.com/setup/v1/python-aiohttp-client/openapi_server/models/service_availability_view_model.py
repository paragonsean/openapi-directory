# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.availability_view_model2 import AvailabilityViewModel2
from openapi_server import util


class ServiceAvailabilityViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_business_hours: bool=None, service_id: int=None, service_name: str=None, weekdays: AvailabilityViewModel2=None):
        """ServiceAvailabilityViewModel - a model defined in OpenAPI

        :param ignore_business_hours: The ignore_business_hours of this ServiceAvailabilityViewModel.
        :param service_id: The service_id of this ServiceAvailabilityViewModel.
        :param service_name: The service_name of this ServiceAvailabilityViewModel.
        :param weekdays: The weekdays of this ServiceAvailabilityViewModel.
        """
        self.openapi_types = {
            'ignore_business_hours': bool,
            'service_id': int,
            'service_name': str,
            'weekdays': AvailabilityViewModel2
        }

        self.attribute_map = {
            'ignore_business_hours': 'ignoreBusinessHours',
            'service_id': 'serviceId',
            'service_name': 'serviceName',
            'weekdays': 'weekdays'
        }

        self._ignore_business_hours = ignore_business_hours
        self._service_id = service_id
        self._service_name = service_name
        self._weekdays = weekdays

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceAvailabilityViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceAvailabilityViewModel of this ServiceAvailabilityViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_business_hours(self):
        """Gets the ignore_business_hours of this ServiceAvailabilityViewModel.


        :return: The ignore_business_hours of this ServiceAvailabilityViewModel.
        :rtype: bool
        """
        return self._ignore_business_hours

    @ignore_business_hours.setter
    def ignore_business_hours(self, ignore_business_hours):
        """Sets the ignore_business_hours of this ServiceAvailabilityViewModel.


        :param ignore_business_hours: The ignore_business_hours of this ServiceAvailabilityViewModel.
        :type ignore_business_hours: bool
        """

        self._ignore_business_hours = ignore_business_hours

    @property
    def service_id(self):
        """Gets the service_id of this ServiceAvailabilityViewModel.


        :return: The service_id of this ServiceAvailabilityViewModel.
        :rtype: int
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ServiceAvailabilityViewModel.


        :param service_id: The service_id of this ServiceAvailabilityViewModel.
        :type service_id: int
        """

        self._service_id = service_id

    @property
    def service_name(self):
        """Gets the service_name of this ServiceAvailabilityViewModel.


        :return: The service_name of this ServiceAvailabilityViewModel.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceAvailabilityViewModel.


        :param service_name: The service_name of this ServiceAvailabilityViewModel.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def weekdays(self):
        """Gets the weekdays of this ServiceAvailabilityViewModel.


        :return: The weekdays of this ServiceAvailabilityViewModel.
        :rtype: AvailabilityViewModel2
        """
        return self._weekdays

    @weekdays.setter
    def weekdays(self, weekdays):
        """Sets the weekdays of this ServiceAvailabilityViewModel.


        :param weekdays: The weekdays of this ServiceAvailabilityViewModel.
        :type weekdays: AvailabilityViewModel2
        """

        self._weekdays = weekdays
