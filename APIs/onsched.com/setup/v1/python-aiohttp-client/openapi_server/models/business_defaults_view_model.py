# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BusinessDefaultsViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_update_customer: bool=None, business_notification: bool=None, customer_city: bool=None, customer_state: bool=None, email_info: bool=None, enable_utc_timezone: bool=None, object: str=None):
        """BusinessDefaultsViewModel - a model defined in OpenAPI

        :param auto_update_customer: The auto_update_customer of this BusinessDefaultsViewModel.
        :param business_notification: The business_notification of this BusinessDefaultsViewModel.
        :param customer_city: The customer_city of this BusinessDefaultsViewModel.
        :param customer_state: The customer_state of this BusinessDefaultsViewModel.
        :param email_info: The email_info of this BusinessDefaultsViewModel.
        :param enable_utc_timezone: The enable_utc_timezone of this BusinessDefaultsViewModel.
        :param object: The object of this BusinessDefaultsViewModel.
        """
        self.openapi_types = {
            'auto_update_customer': bool,
            'business_notification': bool,
            'customer_city': bool,
            'customer_state': bool,
            'email_info': bool,
            'enable_utc_timezone': bool,
            'object': str
        }

        self.attribute_map = {
            'auto_update_customer': 'autoUpdateCustomer',
            'business_notification': 'businessNotification',
            'customer_city': 'customerCity',
            'customer_state': 'customerState',
            'email_info': 'emailInfo',
            'enable_utc_timezone': 'enableUtcTimezone',
            'object': 'object'
        }

        self._auto_update_customer = auto_update_customer
        self._business_notification = business_notification
        self._customer_city = customer_city
        self._customer_state = customer_state
        self._email_info = email_info
        self._enable_utc_timezone = enable_utc_timezone
        self._object = object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BusinessDefaultsViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BusinessDefaultsViewModel of this BusinessDefaultsViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_update_customer(self):
        """Gets the auto_update_customer of this BusinessDefaultsViewModel.


        :return: The auto_update_customer of this BusinessDefaultsViewModel.
        :rtype: bool
        """
        return self._auto_update_customer

    @auto_update_customer.setter
    def auto_update_customer(self, auto_update_customer):
        """Sets the auto_update_customer of this BusinessDefaultsViewModel.


        :param auto_update_customer: The auto_update_customer of this BusinessDefaultsViewModel.
        :type auto_update_customer: bool
        """

        self._auto_update_customer = auto_update_customer

    @property
    def business_notification(self):
        """Gets the business_notification of this BusinessDefaultsViewModel.


        :return: The business_notification of this BusinessDefaultsViewModel.
        :rtype: bool
        """
        return self._business_notification

    @business_notification.setter
    def business_notification(self, business_notification):
        """Sets the business_notification of this BusinessDefaultsViewModel.


        :param business_notification: The business_notification of this BusinessDefaultsViewModel.
        :type business_notification: bool
        """

        self._business_notification = business_notification

    @property
    def customer_city(self):
        """Gets the customer_city of this BusinessDefaultsViewModel.


        :return: The customer_city of this BusinessDefaultsViewModel.
        :rtype: bool
        """
        return self._customer_city

    @customer_city.setter
    def customer_city(self, customer_city):
        """Sets the customer_city of this BusinessDefaultsViewModel.


        :param customer_city: The customer_city of this BusinessDefaultsViewModel.
        :type customer_city: bool
        """

        self._customer_city = customer_city

    @property
    def customer_state(self):
        """Gets the customer_state of this BusinessDefaultsViewModel.


        :return: The customer_state of this BusinessDefaultsViewModel.
        :rtype: bool
        """
        return self._customer_state

    @customer_state.setter
    def customer_state(self, customer_state):
        """Sets the customer_state of this BusinessDefaultsViewModel.


        :param customer_state: The customer_state of this BusinessDefaultsViewModel.
        :type customer_state: bool
        """

        self._customer_state = customer_state

    @property
    def email_info(self):
        """Gets the email_info of this BusinessDefaultsViewModel.


        :return: The email_info of this BusinessDefaultsViewModel.
        :rtype: bool
        """
        return self._email_info

    @email_info.setter
    def email_info(self, email_info):
        """Sets the email_info of this BusinessDefaultsViewModel.


        :param email_info: The email_info of this BusinessDefaultsViewModel.
        :type email_info: bool
        """

        self._email_info = email_info

    @property
    def enable_utc_timezone(self):
        """Gets the enable_utc_timezone of this BusinessDefaultsViewModel.


        :return: The enable_utc_timezone of this BusinessDefaultsViewModel.
        :rtype: bool
        """
        return self._enable_utc_timezone

    @enable_utc_timezone.setter
    def enable_utc_timezone(self, enable_utc_timezone):
        """Sets the enable_utc_timezone of this BusinessDefaultsViewModel.


        :param enable_utc_timezone: The enable_utc_timezone of this BusinessDefaultsViewModel.
        :type enable_utc_timezone: bool
        """

        self._enable_utc_timezone = enable_utc_timezone

    @property
    def object(self):
        """Gets the object of this BusinessDefaultsViewModel.


        :return: The object of this BusinessDefaultsViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this BusinessDefaultsViewModel.


        :param object: The object of this BusinessDefaultsViewModel.
        :type object: str
        """

        self._object = object
