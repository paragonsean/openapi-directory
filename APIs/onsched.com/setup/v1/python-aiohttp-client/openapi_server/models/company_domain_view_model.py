# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyDomainViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, id: str=None, object: str=None):
        """CompanyDomainViewModel - a model defined in OpenAPI

        :param domain: The domain of this CompanyDomainViewModel.
        :param id: The id of this CompanyDomainViewModel.
        :param object: The object of this CompanyDomainViewModel.
        """
        self.openapi_types = {
            'domain': str,
            'id': str,
            'object': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'id': 'id',
            'object': 'object'
        }

        self._domain = domain
        self._id = id
        self._object = object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyDomainViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyDomainViewModel of this CompanyDomainViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this CompanyDomainViewModel.


        :return: The domain of this CompanyDomainViewModel.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this CompanyDomainViewModel.


        :param domain: The domain of this CompanyDomainViewModel.
        :type domain: str
        """

        self._domain = domain

    @property
    def id(self):
        """Gets the id of this CompanyDomainViewModel.


        :return: The id of this CompanyDomainViewModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CompanyDomainViewModel.


        :param id: The id of this CompanyDomainViewModel.
        :type id: str
        """

        self._id = id

    @property
    def object(self):
        """Gets the object of this CompanyDomainViewModel.


        :return: The object of this CompanyDomainViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this CompanyDomainViewModel.


        :param object: The object of this CompanyDomainViewModel.
        :type object: str
        """

        self._object = object
