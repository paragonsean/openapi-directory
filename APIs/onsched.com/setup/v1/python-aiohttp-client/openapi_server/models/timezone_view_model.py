# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.timezones_view_model import TimezonesViewModel
from openapi_server import util


class TimezoneViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object: str=None, regions: List[str]=None, timezones: List[TimezonesViewModel]=None):
        """TimezoneViewModel - a model defined in OpenAPI

        :param object: The object of this TimezoneViewModel.
        :param regions: The regions of this TimezoneViewModel.
        :param timezones: The timezones of this TimezoneViewModel.
        """
        self.openapi_types = {
            'object': str,
            'regions': List[str],
            'timezones': List[TimezonesViewModel]
        }

        self.attribute_map = {
            'object': 'object',
            'regions': 'regions',
            'timezones': 'timezones'
        }

        self._object = object
        self._regions = regions
        self._timezones = timezones

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimezoneViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimezoneViewModel of this TimezoneViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self):
        """Gets the object of this TimezoneViewModel.


        :return: The object of this TimezoneViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this TimezoneViewModel.


        :param object: The object of this TimezoneViewModel.
        :type object: str
        """

        self._object = object

    @property
    def regions(self):
        """Gets the regions of this TimezoneViewModel.


        :return: The regions of this TimezoneViewModel.
        :rtype: List[str]
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this TimezoneViewModel.


        :param regions: The regions of this TimezoneViewModel.
        :type regions: List[str]
        """

        self._regions = regions

    @property
    def timezones(self):
        """Gets the timezones of this TimezoneViewModel.


        :return: The timezones of this TimezoneViewModel.
        :rtype: List[TimezonesViewModel]
        """
        return self._timezones

    @timezones.setter
    def timezones(self, timezones):
        """Sets the timezones of this TimezoneViewModel.


        :param timezones: The timezones of this TimezoneViewModel.
        :type timezones: List[TimezonesViewModel]
        """

        self._timezones = timezones
