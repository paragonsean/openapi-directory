# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.calendar_hours_view_model import CalendarHoursViewModel
from openapi_server import util


class ScheduleViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability: CalendarHoursViewModel=None, bookings_per_slot: int=None, deleted_status: bool=None, deleted_time: datetime=None, id: str=None, interval: int=None, location_id: str=None, name: str=None, object: str=None, primary: bool=None, resource_group_id: str=None, type: str=None):
        """ScheduleViewModel - a model defined in OpenAPI

        :param availability: The availability of this ScheduleViewModel.
        :param bookings_per_slot: The bookings_per_slot of this ScheduleViewModel.
        :param deleted_status: The deleted_status of this ScheduleViewModel.
        :param deleted_time: The deleted_time of this ScheduleViewModel.
        :param id: The id of this ScheduleViewModel.
        :param interval: The interval of this ScheduleViewModel.
        :param location_id: The location_id of this ScheduleViewModel.
        :param name: The name of this ScheduleViewModel.
        :param object: The object of this ScheduleViewModel.
        :param primary: The primary of this ScheduleViewModel.
        :param resource_group_id: The resource_group_id of this ScheduleViewModel.
        :param type: The type of this ScheduleViewModel.
        """
        self.openapi_types = {
            'availability': CalendarHoursViewModel,
            'bookings_per_slot': int,
            'deleted_status': bool,
            'deleted_time': datetime,
            'id': str,
            'interval': int,
            'location_id': str,
            'name': str,
            'object': str,
            'primary': bool,
            'resource_group_id': str,
            'type': str
        }

        self.attribute_map = {
            'availability': 'availability',
            'bookings_per_slot': 'bookingsPerSlot',
            'deleted_status': 'deletedStatus',
            'deleted_time': 'deletedTime',
            'id': 'id',
            'interval': 'interval',
            'location_id': 'locationId',
            'name': 'name',
            'object': 'object',
            'primary': 'primary',
            'resource_group_id': 'resourceGroupId',
            'type': 'type'
        }

        self._availability = availability
        self._bookings_per_slot = bookings_per_slot
        self._deleted_status = deleted_status
        self._deleted_time = deleted_time
        self._id = id
        self._interval = interval
        self._location_id = location_id
        self._name = name
        self._object = object
        self._primary = primary
        self._resource_group_id = resource_group_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleViewModel of this ScheduleViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability(self):
        """Gets the availability of this ScheduleViewModel.


        :return: The availability of this ScheduleViewModel.
        :rtype: CalendarHoursViewModel
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this ScheduleViewModel.


        :param availability: The availability of this ScheduleViewModel.
        :type availability: CalendarHoursViewModel
        """

        self._availability = availability

    @property
    def bookings_per_slot(self):
        """Gets the bookings_per_slot of this ScheduleViewModel.


        :return: The bookings_per_slot of this ScheduleViewModel.
        :rtype: int
        """
        return self._bookings_per_slot

    @bookings_per_slot.setter
    def bookings_per_slot(self, bookings_per_slot):
        """Sets the bookings_per_slot of this ScheduleViewModel.


        :param bookings_per_slot: The bookings_per_slot of this ScheduleViewModel.
        :type bookings_per_slot: int
        """

        self._bookings_per_slot = bookings_per_slot

    @property
    def deleted_status(self):
        """Gets the deleted_status of this ScheduleViewModel.


        :return: The deleted_status of this ScheduleViewModel.
        :rtype: bool
        """
        return self._deleted_status

    @deleted_status.setter
    def deleted_status(self, deleted_status):
        """Sets the deleted_status of this ScheduleViewModel.


        :param deleted_status: The deleted_status of this ScheduleViewModel.
        :type deleted_status: bool
        """

        self._deleted_status = deleted_status

    @property
    def deleted_time(self):
        """Gets the deleted_time of this ScheduleViewModel.


        :return: The deleted_time of this ScheduleViewModel.
        :rtype: datetime
        """
        return self._deleted_time

    @deleted_time.setter
    def deleted_time(self, deleted_time):
        """Sets the deleted_time of this ScheduleViewModel.


        :param deleted_time: The deleted_time of this ScheduleViewModel.
        :type deleted_time: datetime
        """

        self._deleted_time = deleted_time

    @property
    def id(self):
        """Gets the id of this ScheduleViewModel.


        :return: The id of this ScheduleViewModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ScheduleViewModel.


        :param id: The id of this ScheduleViewModel.
        :type id: str
        """

        self._id = id

    @property
    def interval(self):
        """Gets the interval of this ScheduleViewModel.


        :return: The interval of this ScheduleViewModel.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this ScheduleViewModel.


        :param interval: The interval of this ScheduleViewModel.
        :type interval: int
        """

        self._interval = interval

    @property
    def location_id(self):
        """Gets the location_id of this ScheduleViewModel.


        :return: The location_id of this ScheduleViewModel.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ScheduleViewModel.


        :param location_id: The location_id of this ScheduleViewModel.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def name(self):
        """Gets the name of this ScheduleViewModel.


        :return: The name of this ScheduleViewModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ScheduleViewModel.


        :param name: The name of this ScheduleViewModel.
        :type name: str
        """

        self._name = name

    @property
    def object(self):
        """Gets the object of this ScheduleViewModel.


        :return: The object of this ScheduleViewModel.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ScheduleViewModel.


        :param object: The object of this ScheduleViewModel.
        :type object: str
        """

        self._object = object

    @property
    def primary(self):
        """Gets the primary of this ScheduleViewModel.


        :return: The primary of this ScheduleViewModel.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this ScheduleViewModel.


        :param primary: The primary of this ScheduleViewModel.
        :type primary: bool
        """

        self._primary = primary

    @property
    def resource_group_id(self):
        """Gets the resource_group_id of this ScheduleViewModel.


        :return: The resource_group_id of this ScheduleViewModel.
        :rtype: str
        """
        return self._resource_group_id

    @resource_group_id.setter
    def resource_group_id(self, resource_group_id):
        """Sets the resource_group_id of this ScheduleViewModel.


        :param resource_group_id: The resource_group_id of this ScheduleViewModel.
        :type resource_group_id: str
        """

        self._resource_group_id = resource_group_id

    @property
    def type(self):
        """Gets the type of this ScheduleViewModel.


        :return: The type of this ScheduleViewModel.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ScheduleViewModel.


        :param type: The type of this ScheduleViewModel.
        :type type: str
        """

        self._type = type
