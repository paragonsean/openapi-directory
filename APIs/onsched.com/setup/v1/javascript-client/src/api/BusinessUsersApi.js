/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthorizedCompanyListViewModel from '../model/AuthorizedCompanyListViewModel';
import BusinessPermissionListViewModel from '../model/BusinessPermissionListViewModel';
import BusinessUserInputModel from '../model/BusinessUserInputModel';
import BusinessUserListViewModel from '../model/BusinessUserListViewModel';
import BusinessUserUpdateModel from '../model/BusinessUserUpdateModel';
import BusinessUserViewModel from '../model/BusinessUserViewModel';

/**
* BusinessUsers service.
* @module api/BusinessUsersApi
* @version v1
*/
export default class BusinessUsersApi {

    /**
    * Constructs a new BusinessUsersApi. 
    * @alias module:api/BusinessUsersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the setupV1BusinessusersEmailCompaniesGet operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersEmailCompaniesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizedCompanyListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List User Companies
     * <p>Use this endpoint to return a <b>List of Companies</b> associated with the business users email requested. A business user <b>email</b> address is required. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>
     * @param {String} email Email of business user
     * @param {Object} opts Optional parameters
     * @param {String} [searchText] All or partial company name
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersEmailCompaniesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizedCompanyListViewModel}
     */
    setupV1BusinessusersEmailCompaniesGet(email, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling setupV1BusinessusersEmailCompaniesGet");
      }

      let pathParams = {
        'email': email
      };
      let queryParams = {
        'searchText': opts['searchText'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AuthorizedCompanyListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/businessusers/{email}/companies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1BusinessusersGet operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessUserListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Users
     * <p>Use this endpoint to return a <b>List of Business Users and their Roles</b>. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [locationId] id of business location, defaults to primary business location
     * @param {String} [email] Filter by email address
     * @param {String} [role] Filter user role
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessUserListViewModel}
     */
    setupV1BusinessusersGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locationId': opts['locationId'],
        'email': opts['email'],
        'role': opts['role'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessUserListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/businessusers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1BusinessusersIdDelete operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete User
     * <p>Use this endpoint to permanently <b>Delete</b> a Business User. A valid <b>businessUser id</b> is required.</p>
     * @param {String} id 
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    setupV1BusinessusersIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1BusinessusersIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/setup/v1/businessusers/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1BusinessusersIdGet operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessUserViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User
     * <p>Use this endpoint to return a <b>Business User</b> object. A valid <b>businessUser id</b> is required. Find businessUser id's using the <i>GET /setup/v1/businessusers</i> endpoint.</p>
     * @param {String} id id of businessUser object
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessUserViewModel}
     */
    setupV1BusinessusersIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1BusinessusersIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessUserViewModel;
      return this.apiClient.callApi(
        '/setup/v1/businessusers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1BusinessusersIdPut operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessUserViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update User
     * <p>Use this endpoint to <b>Update</b> a Business User. A valid <b>businessUser id</b> is required.</p>  <p>    <b>Business Roles Include: bizowner</b> (Business Owner), <b>bizadmin</b> (Business Administrator), <b>bizresource</b> (Business User - Bookable Resource).</p>
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/BusinessUserUpdateModel} [businessUserUpdateModel] 
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessUserViewModel}
     */
    setupV1BusinessusersIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['businessUserUpdateModel'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1BusinessusersIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = BusinessUserViewModel;
      return this.apiClient.callApi(
        '/setup/v1/businessusers/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1BusinessusersPermissionsGet operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersPermissionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessPermissionListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List User Permissions
     * <p>Use this endpoint to return a <b>List of Business User Permissions by Role</b>. Results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [role] Filter permissions by role
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersPermissionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessPermissionListViewModel}
     */
    setupV1BusinessusersPermissionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'role': opts['role'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessPermissionListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/businessusers/permissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1BusinessusersPost operation.
     * @callback module:api/BusinessUsersApi~setupV1BusinessusersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessUserViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create User
     * <p>Use this endpoint to <b>Create</b> a Business User. If not specified, the business location defaults to the primary business location. </p>  <p>Required fields: <b>Name</b>, <b>Email</b> and <b>Role</b><b>Note:</b> If the businessUser is a bookable resource (bizresource) then a resourceId is required.</p>  <p>For role, use one of the values listed. <b>Business Roles Include: bizowner</b> (Business Owner), <b>bizadmin</b> (Business Administrator), <b>bizresource</b> (Business User - Bookable Resource).</p>  <p>The <b>sendRegistrationInvite</b> parameter is available to API consumers for their own use. It provides no added functionality in OnSched.</p>
     * @param {Object} opts Optional parameters
     * @param {module:model/BusinessUserInputModel} [businessUserInputModel] 
     * @param {module:api/BusinessUsersApi~setupV1BusinessusersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessUserViewModel}
     */
    setupV1BusinessusersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['businessUserInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = BusinessUserViewModel;
      return this.apiClient.callApi(
        '/setup/v1/businessusers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
