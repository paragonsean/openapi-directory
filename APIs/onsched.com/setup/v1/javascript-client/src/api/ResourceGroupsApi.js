/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResourceGroupInputModel from '../model/ResourceGroupInputModel';
import ResourceGroupListViewModel from '../model/ResourceGroupListViewModel';
import ResourceGroupUpdateModel from '../model/ResourceGroupUpdateModel';
import ResourceGroupViewModel from '../model/ResourceGroupViewModel';
import ResourceViewModel from '../model/ResourceViewModel';

/**
* ResourceGroups service.
* @module api/ResourceGroupsApi
* @version v1
*/
export default class ResourceGroupsApi {

    /**
    * Constructs a new ResourceGroupsApi. 
    * @alias module:api/ResourceGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the setupV1ResourcegroupsGet operation.
     * @callback module:api/ResourceGroupsApi~setupV1ResourcegroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceGroupListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Resource Groups
     * <p>Use this endpoint to <b>List Resource Groups</b> for the specified location. If not specified, the business location defaults to the primary business location. <b>Name</b> is a required field.</p>  <p>Use the offset and limit parameters to control the page start and size. Default offset is 0, limit is 20, maximum is 100. Use the query parameters to filter the results further.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [locationId] id of business location, defaults to primary business location
     * @param {Boolean} [deleted] Filter results by deleted status
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/ResourceGroupsApi~setupV1ResourcegroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceGroupListViewModel}
     */
    setupV1ResourcegroupsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locationId': opts['locationId'],
        'deleted': opts['deleted'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceGroupListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/resourcegroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1ResourcegroupsIdDelete operation.
     * @callback module:api/ResourceGroupsApi~setupV1ResourcegroupsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceGroupViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Resource Group
     * <p>Use this endpoint to <b>Delete</b> a resourceGroup object. A valid <b>resourceGroup id</b> is required. The resource group is not permanently deleted and can be recovered by using the <i>PUT ​/setup​/v1​/resourcegroups​/{id}​/recover</i> endpoint.</p>
     * @param {String} id id of resourceGroup object
     * @param {module:api/ResourceGroupsApi~setupV1ResourcegroupsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceGroupViewModel}
     */
    setupV1ResourcegroupsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1ResourcegroupsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceGroupViewModel;
      return this.apiClient.callApi(
        '/setup/v1/resourcegroups/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1ResourcegroupsIdGet operation.
     * @callback module:api/ResourceGroupsApi~setupV1ResourcegroupsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceGroupViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Resource Group
     * <p>Use this endpoint to return a <b>Resource Group</b> object. A valid <b>resourceGroup id</b> is required. Find resourceGroup id's by using the <i>GET setup/v1/resourceGroups</i> endpoint.</p>
     * @param {String} id id of resourceGroup object
     * @param {module:api/ResourceGroupsApi~setupV1ResourcegroupsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceGroupViewModel}
     */
    setupV1ResourcegroupsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1ResourcegroupsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceGroupViewModel;
      return this.apiClient.callApi(
        '/setup/v1/resourcegroups/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1ResourcegroupsIdPut operation.
     * @callback module:api/ResourceGroupsApi~setupV1ResourcegroupsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceGroupViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Resource Group
     * <p>Use this endpoint to <b>Update</b> a resourceGroup object. A valid <b>resourceGroup id</b> is required. </p>
     * @param {String} id id of resourcGroup object
     * @param {Object} opts Optional parameters
     * @param {module:model/ResourceGroupUpdateModel} [resourceGroupUpdateModel] Resource Group Update Model
     * @param {module:api/ResourceGroupsApi~setupV1ResourcegroupsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceGroupViewModel}
     */
    setupV1ResourcegroupsIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['resourceGroupUpdateModel'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1ResourcegroupsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = ResourceGroupViewModel;
      return this.apiClient.callApi(
        '/setup/v1/resourcegroups/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1ResourcegroupsIdRecoverPut operation.
     * @callback module:api/ResourceGroupsApi~setupV1ResourcegroupsIdRecoverPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Recover Resource Group
     * <p>Use this endpoint to <b>Recover</b> a deleted resourceGroup object. A valid <b>resourceGroup id</b> is required.</p>
     * @param {String} id id of resourceGroup object
     * @param {module:api/ResourceGroupsApi~setupV1ResourcegroupsIdRecoverPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceViewModel}
     */
    setupV1ResourcegroupsIdRecoverPut(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1ResourcegroupsIdRecoverPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceViewModel;
      return this.apiClient.callApi(
        '/setup/v1/resourcegroups/{id}/recover', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1ResourcegroupsPost operation.
     * @callback module:api/ResourceGroupsApi~setupV1ResourcegroupsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceGroupViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Resource Group
     * <p>Use this endpoint to <b>Create</b> a resourceGroup object. Resource groups are used to categorize your resources.</p>
     * @param {Object} opts Optional parameters
     * @param {module:model/ResourceGroupInputModel} [resourceGroupInputModel] Resource input model
     * @param {module:api/ResourceGroupsApi~setupV1ResourcegroupsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceGroupViewModel}
     */
    setupV1ResourcegroupsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['resourceGroupInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = ResourceGroupViewModel;
      return this.apiClient.callApi(
        '/setup/v1/resourcegroups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
