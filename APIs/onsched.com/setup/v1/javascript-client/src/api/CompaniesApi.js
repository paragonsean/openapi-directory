/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CompanyDomainInputModel from '../model/CompanyDomainInputModel';
import CompanyDomainListViewModel from '../model/CompanyDomainListViewModel';
import CompanyDomainUpdateModel from '../model/CompanyDomainUpdateModel';
import CompanyDomainViewModel from '../model/CompanyDomainViewModel';
import CompanyInputModel from '../model/CompanyInputModel';
import CompanyUpdateModel from '../model/CompanyUpdateModel';
import CompanyViewModel from '../model/CompanyViewModel';
import ContentResult from '../model/ContentResult';
import EmailTemplateListViewModel from '../model/EmailTemplateListViewModel';
import MasterEmailTemplateSettingsViewModel from '../model/MasterEmailTemplateSettingsViewModel';
import MasterTemplateSettingsInputModel from '../model/MasterTemplateSettingsInputModel';
import RegionInputModel from '../model/RegionInputModel';
import RegionListViewModel from '../model/RegionListViewModel';
import RegionUpdateModel from '../model/RegionUpdateModel';
import RegionViewModel from '../model/RegionViewModel';
import TimezoneViewModel from '../model/TimezoneViewModel';

/**
* Companies service.
* @module api/CompaniesApi
* @version v1
*/
export default class CompaniesApi {

    /**
    * Constructs a new CompaniesApi. 
    * @alias module:api/CompaniesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the setupV1CompaniesDomainsGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesDomainsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyDomainListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Company Domains
     * <p>Use this endpoint to return a <b>List of Company Domains</b> for the authorized company. To share the OnSchedJS booking widget on your website or in your application your domain must be listed.</p>
     * @param {module:api/CompaniesApi~setupV1CompaniesDomainsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyDomainListViewModel}
     */
    setupV1CompaniesDomainsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CompanyDomainListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/domains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesDomainsIdDelete operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesDomainsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyDomainViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Company Domain
     * <p>Use this endpoint to <b>Delete</b> an OnSchedJs domain from your authorized company. A valid <b>companyDomain id</b> is required.</p>
     * @param {String} id id of companyDomain object
     * @param {module:api/CompaniesApi~setupV1CompaniesDomainsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyDomainViewModel}
     */
    setupV1CompaniesDomainsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1CompaniesDomainsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CompanyDomainViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/domains/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesDomainsIdGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesDomainsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyDomainViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Company Domain
     * <p>Use this endpoint to return a <b>Company Domain</b> object. A valid <b>companyDomain id</b> is required. </p>
     * @param {String} id id of companyDomain object
     * @param {module:api/CompaniesApi~setupV1CompaniesDomainsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyDomainViewModel}
     */
    setupV1CompaniesDomainsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1CompaniesDomainsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CompanyDomainViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/domains/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesDomainsIdPut operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesDomainsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyDomainViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Company Domain
     * <p>Use this endpoint to <b>Update</b> an OnSchedJs domain for your authorized company. A valid <b>companyDomain id</b> is required.</p>
     * @param {String} id id of companyDomain object
     * @param {Object} opts Optional parameters
     * @param {module:model/CompanyDomainUpdateModel} [companyDomainUpdateModel] Company Domain Update Model
     * @param {module:api/CompaniesApi~setupV1CompaniesDomainsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyDomainViewModel}
     */
    setupV1CompaniesDomainsIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['companyDomainUpdateModel'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1CompaniesDomainsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = CompanyDomainViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/domains/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesDomainsPost operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesDomainsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyDomainViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Company Domain
     * <p>Use this endpoint to <b>Create</b> an OnSchedJs domain for your authorized company. To share the OnSchedJS booking widget on your website or in your application you must add the domain.</p>
     * @param {Object} opts Optional parameters
     * @param {module:model/CompanyDomainInputModel} [companyDomainInputModel] Company Domain Input Model
     * @param {module:api/CompaniesApi~setupV1CompaniesDomainsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyDomainViewModel}
     */
    setupV1CompaniesDomainsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['companyDomainInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = CompanyDomainViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/domains', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesEmailTemplatesGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesEmailTemplatesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmailTemplateListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Email Templates
     * <p>Use this endpoint to return a <b>List of Email Templates</b> that are provided and may be customized. If the template has been customized, the customized property is true. The scope parameter indicates if the email template has been customized at the Business Location level or Company level. This endpoint returns <b>only company level templates</b>, so the scope is always company.</p>
     * @param {module:api/CompaniesApi~setupV1CompaniesEmailTemplatesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EmailTemplateListViewModel}
     */
    setupV1CompaniesEmailTemplatesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EmailTemplateListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/email/templates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesEmailTemplatesMasterDelete operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesEmailTemplatesMasterDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasterEmailTemplateSettingsViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Master Template Settings
     * <p>Use this endpoint to <b>Delete Custom Master Email Template Settings</b>. Deleting a custom master email template setting will reactivate the original default OnSched template settings.</p>
     * @param {module:api/CompaniesApi~setupV1CompaniesEmailTemplatesMasterDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasterEmailTemplateSettingsViewModel}
     */
    setupV1CompaniesEmailTemplatesMasterDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MasterEmailTemplateSettingsViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/email/templates/master', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesEmailTemplatesMasterGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesEmailTemplatesMasterGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasterEmailTemplateSettingsViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Master Template Settings
     * <p>Use this endpoint to return the <b>Master Email Template Settings</b>. Settings exist for showing or hiding email panels and for changing color schemes. </p>
     * @param {module:api/CompaniesApi~setupV1CompaniesEmailTemplatesMasterGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasterEmailTemplateSettingsViewModel}
     */
    setupV1CompaniesEmailTemplatesMasterGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MasterEmailTemplateSettingsViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/email/templates/master', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesEmailTemplatesMasterPost operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesEmailTemplatesMasterPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasterEmailTemplateSettingsViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Master Template Settings
     * <p>Use this endpoint to <b>Create Custom Master Email Template Settings</b>. Settings exist for showing or hiding email panels and for changing color schemes. Use the <i>GET ​/setup​/v1​/companies​/email​/templates</i> endpoint to display the settings offered. Changes to the Master Template Settings will be reflected in all business locations associated with this company. </p>  <p>The email template endpoints work a little differently than most. There are no endpoints to update the templates, we use the post endpoint to create a custom template instead. This endpoint creates a new custom Master Template Settings file that will be used instead. If you delete it you are deleting the custom template settings you created and the original default Master Template created by OnSched would be reactivated.</p>
     * @param {Object} opts Optional parameters
     * @param {module:model/MasterTemplateSettingsInputModel} [masterTemplateSettingsInputModel] 
     * @param {module:api/CompaniesApi~setupV1CompaniesEmailTemplatesMasterPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasterEmailTemplateSettingsViewModel}
     */
    setupV1CompaniesEmailTemplatesMasterPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['masterTemplateSettingsInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = MasterEmailTemplateSettingsViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/email/templates/master', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesEmailTemplatesTemplateNameGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesEmailTemplatesTemplateNameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Email Template
     * <p>Use this endpoint to return the requested <b>Email Template</b>. If it wasn't customized the default template is returned. The response content is in html format. A valid emailTemplate <b>name</b> is required. Find template names by using the: <i>GET ​/setup​/v1​/companies​/email​/templates</i> endpoint. Note: The master template cannot be accessed here. </p>  <p>To create custom company email templates, go to the <i>POST ​/setup​/v1​/locations​/{id}​/email​/templates</i> endpoint and create a template using the Primary Business Location Id.</p>
     * @param {String} templateName Email template name
     * @param {module:api/CompaniesApi~setupV1CompaniesEmailTemplatesTemplateNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentResult}
     */
    setupV1CompaniesEmailTemplatesTemplateNameGet(templateName, callback) {
      let postBody = null;
      // verify the required parameter 'templateName' is set
      if (templateName === undefined || templateName === null) {
        throw new Error("Missing the required parameter 'templateName' when calling setupV1CompaniesEmailTemplatesTemplateNameGet");
      }

      let pathParams = {
        'templateName': templateName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentResult;
      return this.apiClient.callApi(
        '/setup/v1/companies/email/templates/{templateName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Company
     * <p>Use this endpoint to return the <b>Authorized Company</b> information. The company is the main entity that oversees all business locations defined below it, hierarchically. </p>  <p>Access to the company credentials gives you access to all business locations defined in the authorized company. Client credentials resolve to a single company and are purposely hidden from this endpoint.</p>
     * @param {module:api/CompaniesApi~setupV1CompaniesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyViewModel}
     */
    setupV1CompaniesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CompanyViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesPost operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Company
     * <p>Use this endpoint to <b>Create</b> a new authorized company.</p>  <p>    <b>Note: Special API Partner credentials are required to access this endpoint.</b>  </p>  <p>The <b>name, registrationEmail, phone, country</b> and <b>timezoneName</b> are required fields. For <b>country</b> use the standard ISO 3166 2-character country code.</p>  <p>The <b>timezoneName</b> must be expressed as an IANA Timezone e.g., <i>America/New_York</i>.</p>  <p>For more information: <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Timezone IANA Wiki</a></p>
     * @param {Object} opts Optional parameters
     * @param {module:model/CompanyInputModel} [companyInputModel] Company Input Model
     * @param {module:api/CompaniesApi~setupV1CompaniesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyViewModel}
     */
    setupV1CompaniesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['companyInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = CompanyViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesPut operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Company
     * <p>Use this endpoint to <b>Update</b> the authorized company information. Your client credentials resolve to a single company. The timezoneName must be expressed as an IANA Timezone, e.g., <i>America/New_York</i>. </p>  <p>For more information: <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Timezone IANA Wiki</a></p>
     * @param {Object} opts Optional parameters
     * @param {module:model/CompanyUpdateModel} [companyUpdateModel] Company Update Model
     * @param {module:api/CompaniesApi~setupV1CompaniesPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyViewModel}
     */
    setupV1CompaniesPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['companyUpdateModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = CompanyViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesRegionsGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesRegionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionListViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Regions
     * <p>Use this endpoint to return a list of <b>Regions</b> in the authorized company. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further. </p>
     * @param {Object} opts Optional parameters
     * @param {Number} [offset] Starting row of page, default 0
     * @param {Number} [limit] Page limit default 20, max 100
     * @param {module:api/CompaniesApi~setupV1CompaniesRegionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionListViewModel}
     */
    setupV1CompaniesRegionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegionListViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/regions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesRegionsIdDelete operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesRegionsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Region
     * <p>Use this endpoint to <b>Delete</b> a region object. A valid <b>region id</b> is required. If the region is related to any business locations it won't be deleted. You must first remove any references to region id from the business locations prior to deleting.</p>
     * @param {String} id id of Region
     * @param {module:api/CompaniesApi~setupV1CompaniesRegionsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionViewModel}
     */
    setupV1CompaniesRegionsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1CompaniesRegionsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegionViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/regions/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesRegionsIdGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesRegionsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Region
     * <p>Use this endpoint to return a <b>Region</b> object. A valid <b>region id</b> is required.</p>
     * @param {String} id id of a region object
     * @param {module:api/CompaniesApi~setupV1CompaniesRegionsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionViewModel}
     */
    setupV1CompaniesRegionsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1CompaniesRegionsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegionViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/regions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesRegionsIdPut operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesRegionsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Region
     * <p>Use this endpoint to <b>Update</b> a region object. A valid <b>region id</b> is required.</p>
     * @param {String} id id of Region
     * @param {Object} opts Optional parameters
     * @param {module:model/RegionUpdateModel} [regionUpdateModel] Region Update Model
     * @param {module:api/CompaniesApi~setupV1CompaniesRegionsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionViewModel}
     */
    setupV1CompaniesRegionsIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['regionUpdateModel'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling setupV1CompaniesRegionsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = RegionViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/regions/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesRegionsPost operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesRegionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Region
     * <p>Use this endpoint to <b>Create</b> a region object. Regions can be mapped to business locations. They can be used by the locations endpoints to filter locations by region id.</p>
     * @param {Object} opts Optional parameters
     * @param {module:model/RegionInputModel} [regionInputModel] 
     * @param {module:api/CompaniesApi~setupV1CompaniesRegionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionViewModel}
     */
    setupV1CompaniesRegionsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['regionInputModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/*+json', 'application/json', 'application/json-patch+json', 'text/json'];
      let accepts = ['application/json'];
      let returnType = RegionViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/regions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setupV1CompaniesTimezonesDateGet operation.
     * @callback module:api/CompaniesApi~setupV1CompaniesTimezonesDateGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimezoneViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Time Zones
     * <p>Use this endpoint to return a <b>List of timezone names, timezoneIana and tzOffset values</b> calculated for the date requested. Daylight Savings may or may not apply depending on the date specified.</p>
     * @param {Date} date \"YYYY-MM-DD: Date for timezone info\"
     * @param {module:api/CompaniesApi~setupV1CompaniesTimezonesDateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TimezoneViewModel}
     */
    setupV1CompaniesTimezonesDateGet(date, callback) {
      let postBody = null;
      // verify the required parameter 'date' is set
      if (date === undefined || date === null) {
        throw new Error("Missing the required parameter 'date' when calling setupV1CompaniesTimezonesDateGet");
      }

      let pathParams = {
        'date': date
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TimezoneViewModel;
      return this.apiClient.callApi(
        '/setup/v1/companies/timezones/{date}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
