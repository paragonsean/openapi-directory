/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SystemTimezoneViewModel model module.
 * @module model/SystemTimezoneViewModel
 * @version v1
 */
class SystemTimezoneViewModel {
    /**
     * Constructs a new <code>SystemTimezoneViewModel</code>.
     * @alias module:model/SystemTimezoneViewModel
     */
    constructor() { 
        
        SystemTimezoneViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SystemTimezoneViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SystemTimezoneViewModel} obj Optional instance to populate.
     * @return {module:model/SystemTimezoneViewModel} The populated <code>SystemTimezoneViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SystemTimezoneViewModel();

            if (data.hasOwnProperty('baseUtcOffset')) {
                obj['baseUtcOffset'] = ApiClient.convertToType(data['baseUtcOffset'], 'Number');
            }
            if (data.hasOwnProperty('daylightName')) {
                obj['daylightName'] = ApiClient.convertToType(data['daylightName'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('standardName')) {
                obj['standardName'] = ApiClient.convertToType(data['standardName'], 'String');
            }
            if (data.hasOwnProperty('supportsDaylightSavingTime')) {
                obj['supportsDaylightSavingTime'] = ApiClient.convertToType(data['supportsDaylightSavingTime'], 'Boolean');
            }
            if (data.hasOwnProperty('timezoneIana')) {
                obj['timezoneIana'] = ApiClient.convertToType(data['timezoneIana'], 'String');
            }
            if (data.hasOwnProperty('timezoneId')) {
                obj['timezoneId'] = ApiClient.convertToType(data['timezoneId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SystemTimezoneViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SystemTimezoneViewModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['daylightName'] && !(typeof data['daylightName'] === 'string' || data['daylightName'] instanceof String)) {
            throw new Error("Expected the field `daylightName` to be a primitive type in the JSON string but got " + data['daylightName']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['standardName'] && !(typeof data['standardName'] === 'string' || data['standardName'] instanceof String)) {
            throw new Error("Expected the field `standardName` to be a primitive type in the JSON string but got " + data['standardName']);
        }
        // ensure the json data is a string
        if (data['timezoneIana'] && !(typeof data['timezoneIana'] === 'string' || data['timezoneIana'] instanceof String)) {
            throw new Error("Expected the field `timezoneIana` to be a primitive type in the JSON string but got " + data['timezoneIana']);
        }
        // ensure the json data is a string
        if (data['timezoneId'] && !(typeof data['timezoneId'] === 'string' || data['timezoneId'] instanceof String)) {
            throw new Error("Expected the field `timezoneId` to be a primitive type in the JSON string but got " + data['timezoneId']);
        }

        return true;
    }


}



/**
 * @member {Number} baseUtcOffset
 */
SystemTimezoneViewModel.prototype['baseUtcOffset'] = undefined;

/**
 * @member {String} daylightName
 */
SystemTimezoneViewModel.prototype['daylightName'] = undefined;

/**
 * @member {String} displayName
 */
SystemTimezoneViewModel.prototype['displayName'] = undefined;

/**
 * @member {String} standardName
 */
SystemTimezoneViewModel.prototype['standardName'] = undefined;

/**
 * @member {Boolean} supportsDaylightSavingTime
 */
SystemTimezoneViewModel.prototype['supportsDaylightSavingTime'] = undefined;

/**
 * @member {String} timezoneIana
 */
SystemTimezoneViewModel.prototype['timezoneIana'] = undefined;

/**
 * @member {String} timezoneId
 */
SystemTimezoneViewModel.prototype['timezoneId'] = undefined;






export default SystemTimezoneViewModel;

