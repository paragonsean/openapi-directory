/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceOptionsUpdateModel model module.
 * @module model/ResourceOptionsUpdateModel
 * @version v1
 */
class ResourceOptionsUpdateModel {
    /**
     * Constructs a new <code>ResourceOptionsUpdateModel</code>.
     * @alias module:model/ResourceOptionsUpdateModel
     */
    constructor() { 
        
        ResourceOptionsUpdateModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceOptionsUpdateModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceOptionsUpdateModel} obj Optional instance to populate.
     * @return {module:model/ResourceOptionsUpdateModel} The populated <code>ResourceOptionsUpdateModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceOptionsUpdateModel();

            if (data.hasOwnProperty('bioLink')) {
                obj['bioLink'] = ApiClient.convertToType(data['bioLink'], 'String');
            }
            if (data.hasOwnProperty('bookingNotification')) {
                obj['bookingNotification'] = ApiClient.convertToType(data['bookingNotification'], 'Number');
            }
            if (data.hasOwnProperty('calendarAvailability')) {
                obj['calendarAvailability'] = ApiClient.convertToType(data['calendarAvailability'], 'Number');
            }
            if (data.hasOwnProperty('displayColor')) {
                obj['displayColor'] = ApiClient.convertToType(data['displayColor'], 'String');
            }
            if (data.hasOwnProperty('effectiveDate')) {
                obj['effectiveDate'] = ApiClient.convertToType(data['effectiveDate'], 'Date');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('googleCalendarId')) {
                obj['googleCalendarId'] = ApiClient.convertToType(data['googleCalendarId'], 'String');
            }
            if (data.hasOwnProperty('hourly')) {
                obj['hourly'] = ApiClient.convertToType(data['hourly'], 'Number');
            }
            if (data.hasOwnProperty('ignoreBusinessHours')) {
                obj['ignoreBusinessHours'] = ApiClient.convertToType(data['ignoreBusinessHours'], 'Boolean');
            }
            if (data.hasOwnProperty('notificationType')) {
                obj['notificationType'] = ApiClient.convertToType(data['notificationType'], 'Number');
            }
            if (data.hasOwnProperty('outlookCalendarId')) {
                obj['outlookCalendarId'] = ApiClient.convertToType(data['outlookCalendarId'], 'String');
            }
            if (data.hasOwnProperty('sortKey')) {
                obj['sortKey'] = ApiClient.convertToType(data['sortKey'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceOptionsUpdateModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceOptionsUpdateModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bioLink'] && !(typeof data['bioLink'] === 'string' || data['bioLink'] instanceof String)) {
            throw new Error("Expected the field `bioLink` to be a primitive type in the JSON string but got " + data['bioLink']);
        }
        // ensure the json data is a string
        if (data['displayColor'] && !(typeof data['displayColor'] === 'string' || data['displayColor'] instanceof String)) {
            throw new Error("Expected the field `displayColor` to be a primitive type in the JSON string but got " + data['displayColor']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // ensure the json data is a string
        if (data['googleCalendarId'] && !(typeof data['googleCalendarId'] === 'string' || data['googleCalendarId'] instanceof String)) {
            throw new Error("Expected the field `googleCalendarId` to be a primitive type in the JSON string but got " + data['googleCalendarId']);
        }
        // ensure the json data is a string
        if (data['outlookCalendarId'] && !(typeof data['outlookCalendarId'] === 'string' || data['outlookCalendarId'] instanceof String)) {
            throw new Error("Expected the field `outlookCalendarId` to be a primitive type in the JSON string but got " + data['outlookCalendarId']);
        }

        return true;
    }


}



/**
 * @member {String} bioLink
 */
ResourceOptionsUpdateModel.prototype['bioLink'] = undefined;

/**
 * @member {Number} bookingNotification
 */
ResourceOptionsUpdateModel.prototype['bookingNotification'] = undefined;

/**
 * 0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar
 * @member {Number} calendarAvailability
 */
ResourceOptionsUpdateModel.prototype['calendarAvailability'] = undefined;

/**
 * @member {String} displayColor
 */
ResourceOptionsUpdateModel.prototype['displayColor'] = undefined;

/**
 * @member {Date} effectiveDate
 */
ResourceOptionsUpdateModel.prototype['effectiveDate'] = undefined;

/**
 * @member {String} gender
 */
ResourceOptionsUpdateModel.prototype['gender'] = undefined;

/**
 * @member {String} googleCalendarId
 */
ResourceOptionsUpdateModel.prototype['googleCalendarId'] = undefined;

/**
 * @member {Number} hourly
 */
ResourceOptionsUpdateModel.prototype['hourly'] = undefined;

/**
 * @member {Boolean} ignoreBusinessHours
 */
ResourceOptionsUpdateModel.prototype['ignoreBusinessHours'] = undefined;

/**
 * 0 = None, 1=Online Bookings 2=All Bookings.
 * @member {Number} notificationType
 */
ResourceOptionsUpdateModel.prototype['notificationType'] = undefined;

/**
 * @member {String} outlookCalendarId
 */
ResourceOptionsUpdateModel.prototype['outlookCalendarId'] = undefined;

/**
 * @member {Number} sortKey
 */
ResourceOptionsUpdateModel.prototype['sortKey'] = undefined;






export default ResourceOptionsUpdateModel;

