/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepeatInputModel model module.
 * @module model/RepeatInputModel
 * @version v1
 */
class RepeatInputModel {
    /**
     * Constructs a new <code>RepeatInputModel</code>.
     * @alias module:model/RepeatInputModel
     */
    constructor() { 
        
        RepeatInputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepeatInputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepeatInputModel} obj Optional instance to populate.
     * @return {module:model/RepeatInputModel} The populated <code>RepeatInputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepeatInputModel();

            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'String');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'Number');
            }
            if (data.hasOwnProperty('monthDay')) {
                obj['monthDay'] = ApiClient.convertToType(data['monthDay'], 'Number');
            }
            if (data.hasOwnProperty('monthType')) {
                obj['monthType'] = ApiClient.convertToType(data['monthType'], 'String');
            }
            if (data.hasOwnProperty('weekdays')) {
                obj['weekdays'] = ApiClient.convertToType(data['weekdays'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepeatInputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepeatInputModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['frequency'] && !(typeof data['frequency'] === 'string' || data['frequency'] instanceof String)) {
            throw new Error("Expected the field `frequency` to be a primitive type in the JSON string but got " + data['frequency']);
        }
        // ensure the json data is a string
        if (data['monthType'] && !(typeof data['monthType'] === 'string' || data['monthType'] instanceof String)) {
            throw new Error("Expected the field `monthType` to be a primitive type in the JSON string but got " + data['monthType']);
        }
        // ensure the json data is a string
        if (data['weekdays'] && !(typeof data['weekdays'] === 'string' || data['weekdays'] instanceof String)) {
            throw new Error("Expected the field `weekdays` to be a primitive type in the JSON string but got " + data['weekdays']);
        }

        return true;
    }


}



/**
 * @member {String} frequency
 */
RepeatInputModel.prototype['frequency'] = undefined;

/**
 * @member {Number} interval
 */
RepeatInputModel.prototype['interval'] = undefined;

/**
 * @member {Number} monthDay
 */
RepeatInputModel.prototype['monthDay'] = undefined;

/**
 * @member {String} monthType
 */
RepeatInputModel.prototype['monthType'] = undefined;

/**
 * @member {String} weekdays
 */
RepeatInputModel.prototype['weekdays'] = undefined;






export default RepeatInputModel;

