/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressViewModel from './AddressViewModel';
import PhoneViewModel from './PhoneViewModel';
import RepeatViewModel from './RepeatViewModel';

/**
 * The ServiceAllocationViewModel model module.
 * @module model/ServiceAllocationViewModel
 * @version v1
 */
class ServiceAllocationViewModel {
    /**
     * Constructs a new <code>ServiceAllocationViewModel</code>.
     * @alias module:model/ServiceAllocationViewModel
     */
    constructor() { 
        
        ServiceAllocationViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceAllocationViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceAllocationViewModel} obj Optional instance to populate.
     * @return {module:model/ServiceAllocationViewModel} The populated <code>ServiceAllocationViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceAllocationViewModel();

            if (data.hasOwnProperty('bookingCount')) {
                obj['bookingCount'] = ApiClient.convertToType(data['bookingCount'], 'Number');
            }
            if (data.hasOwnProperty('bookingLimit')) {
                obj['bookingLimit'] = ApiClient.convertToType(data['bookingLimit'], 'Number');
            }
            if (data.hasOwnProperty('deletedStatus')) {
                obj['deletedStatus'] = ApiClient.convertToType(data['deletedStatus'], 'Boolean');
            }
            if (data.hasOwnProperty('deletedTime')) {
                obj['deletedTime'] = ApiClient.convertToType(data['deletedTime'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('repeat')) {
                obj['repeat'] = RepeatViewModel.constructFromObject(data['repeat']);
            }
            if (data.hasOwnProperty('repeats')) {
                obj['repeats'] = ApiClient.convertToType(data['repeats'], 'Boolean');
            }
            if (data.hasOwnProperty('resourceAddress')) {
                obj['resourceAddress'] = AddressViewModel.constructFromObject(data['resourceAddress']);
            }
            if (data.hasOwnProperty('resourceDescription')) {
                obj['resourceDescription'] = ApiClient.convertToType(data['resourceDescription'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceImageUrl')) {
                obj['resourceImageUrl'] = ApiClient.convertToType(data['resourceImageUrl'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('resourcePhone')) {
                obj['resourcePhone'] = PhoneViewModel.constructFromObject(data['resourcePhone']);
            }
            if (data.hasOwnProperty('serviceDescription')) {
                obj['serviceDescription'] = ApiClient.convertToType(data['serviceDescription'], 'String');
            }
            if (data.hasOwnProperty('serviceDuration')) {
                obj['serviceDuration'] = ApiClient.convertToType(data['serviceDuration'], 'Number');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('serviceImageUrl')) {
                obj['serviceImageUrl'] = ApiClient.convertToType(data['serviceImageUrl'], 'String');
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Number');
            }
            if (data.hasOwnProperty('timezoneName')) {
                obj['timezoneName'] = ApiClient.convertToType(data['timezoneName'], 'String');
            }
            if (data.hasOwnProperty('timezoneOffset')) {
                obj['timezoneOffset'] = ApiClient.convertToType(data['timezoneOffset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceAllocationViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceAllocationViewModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deletedTime'] && !(typeof data['deletedTime'] === 'string' || data['deletedTime'] instanceof String)) {
            throw new Error("Expected the field `deletedTime` to be a primitive type in the JSON string but got " + data['deletedTime']);
        }
        // ensure the json data is a string
        if (data['endDate'] && !(typeof data['endDate'] === 'string' || data['endDate'] instanceof String)) {
            throw new Error("Expected the field `endDate` to be a primitive type in the JSON string but got " + data['endDate']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // validate the optional field `repeat`
        if (data['repeat']) { // data not null
          RepeatViewModel.validateJSON(data['repeat']);
        }
        // validate the optional field `resourceAddress`
        if (data['resourceAddress']) { // data not null
          AddressViewModel.validateJSON(data['resourceAddress']);
        }
        // ensure the json data is a string
        if (data['resourceDescription'] && !(typeof data['resourceDescription'] === 'string' || data['resourceDescription'] instanceof String)) {
            throw new Error("Expected the field `resourceDescription` to be a primitive type in the JSON string but got " + data['resourceDescription']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceImageUrl'] && !(typeof data['resourceImageUrl'] === 'string' || data['resourceImageUrl'] instanceof String)) {
            throw new Error("Expected the field `resourceImageUrl` to be a primitive type in the JSON string but got " + data['resourceImageUrl']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // validate the optional field `resourcePhone`
        if (data['resourcePhone']) { // data not null
          PhoneViewModel.validateJSON(data['resourcePhone']);
        }
        // ensure the json data is a string
        if (data['serviceDescription'] && !(typeof data['serviceDescription'] === 'string' || data['serviceDescription'] instanceof String)) {
            throw new Error("Expected the field `serviceDescription` to be a primitive type in the JSON string but got " + data['serviceDescription']);
        }
        // ensure the json data is a string
        if (data['serviceId'] && !(typeof data['serviceId'] === 'string' || data['serviceId'] instanceof String)) {
            throw new Error("Expected the field `serviceId` to be a primitive type in the JSON string but got " + data['serviceId']);
        }
        // ensure the json data is a string
        if (data['serviceImageUrl'] && !(typeof data['serviceImageUrl'] === 'string' || data['serviceImageUrl'] instanceof String)) {
            throw new Error("Expected the field `serviceImageUrl` to be a primitive type in the JSON string but got " + data['serviceImageUrl']);
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }
        // ensure the json data is a string
        if (data['startDate'] && !(typeof data['startDate'] === 'string' || data['startDate'] instanceof String)) {
            throw new Error("Expected the field `startDate` to be a primitive type in the JSON string but got " + data['startDate']);
        }
        // ensure the json data is a string
        if (data['timezoneName'] && !(typeof data['timezoneName'] === 'string' || data['timezoneName'] instanceof String)) {
            throw new Error("Expected the field `timezoneName` to be a primitive type in the JSON string but got " + data['timezoneName']);
        }

        return true;
    }


}



/**
 * @member {Number} bookingCount
 */
ServiceAllocationViewModel.prototype['bookingCount'] = undefined;

/**
 * @member {Number} bookingLimit
 */
ServiceAllocationViewModel.prototype['bookingLimit'] = undefined;

/**
 * @member {Boolean} deletedStatus
 */
ServiceAllocationViewModel.prototype['deletedStatus'] = undefined;

/**
 * @member {String} deletedTime
 */
ServiceAllocationViewModel.prototype['deletedTime'] = undefined;

/**
 * @member {String} endDate
 */
ServiceAllocationViewModel.prototype['endDate'] = undefined;

/**
 * @member {Number} endTime
 */
ServiceAllocationViewModel.prototype['endTime'] = undefined;

/**
 * @member {String} id
 */
ServiceAllocationViewModel.prototype['id'] = undefined;

/**
 * @member {String} locationId
 */
ServiceAllocationViewModel.prototype['locationId'] = undefined;

/**
 * @member {String} object
 */
ServiceAllocationViewModel.prototype['object'] = undefined;

/**
 * @member {String} reason
 */
ServiceAllocationViewModel.prototype['reason'] = undefined;

/**
 * @member {module:model/RepeatViewModel} repeat
 */
ServiceAllocationViewModel.prototype['repeat'] = undefined;

/**
 * @member {Boolean} repeats
 */
ServiceAllocationViewModel.prototype['repeats'] = undefined;

/**
 * @member {module:model/AddressViewModel} resourceAddress
 */
ServiceAllocationViewModel.prototype['resourceAddress'] = undefined;

/**
 * @member {String} resourceDescription
 */
ServiceAllocationViewModel.prototype['resourceDescription'] = undefined;

/**
 * @member {String} resourceId
 */
ServiceAllocationViewModel.prototype['resourceId'] = undefined;

/**
 * @member {String} resourceImageUrl
 */
ServiceAllocationViewModel.prototype['resourceImageUrl'] = undefined;

/**
 * @member {String} resourceName
 */
ServiceAllocationViewModel.prototype['resourceName'] = undefined;

/**
 * @member {module:model/PhoneViewModel} resourcePhone
 */
ServiceAllocationViewModel.prototype['resourcePhone'] = undefined;

/**
 * @member {String} serviceDescription
 */
ServiceAllocationViewModel.prototype['serviceDescription'] = undefined;

/**
 * @member {Number} serviceDuration
 */
ServiceAllocationViewModel.prototype['serviceDuration'] = undefined;

/**
 * @member {String} serviceId
 */
ServiceAllocationViewModel.prototype['serviceId'] = undefined;

/**
 * @member {String} serviceImageUrl
 */
ServiceAllocationViewModel.prototype['serviceImageUrl'] = undefined;

/**
 * @member {String} serviceName
 */
ServiceAllocationViewModel.prototype['serviceName'] = undefined;

/**
 * @member {String} startDate
 */
ServiceAllocationViewModel.prototype['startDate'] = undefined;

/**
 * @member {Number} startTime
 */
ServiceAllocationViewModel.prototype['startTime'] = undefined;

/**
 * @member {String} timezoneName
 */
ServiceAllocationViewModel.prototype['timezoneName'] = undefined;

/**
 * @member {Number} timezoneOffset
 */
ServiceAllocationViewModel.prototype['timezoneOffset'] = undefined;






export default ServiceAllocationViewModel;

