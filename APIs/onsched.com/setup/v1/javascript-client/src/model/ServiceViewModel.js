/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomFieldInputModel from './CustomFieldInputModel';
import ServiceHoursViewModel from './ServiceHoursViewModel';

/**
 * The ServiceViewModel model module.
 * @module model/ServiceViewModel
 * @version v1
 */
class ServiceViewModel {
    /**
     * Constructs a new <code>ServiceViewModel</code>.
     * @alias module:model/ServiceViewModel
     */
    constructor() { 
        
        ServiceViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceViewModel} obj Optional instance to populate.
     * @return {module:model/ServiceViewModel} The populated <code>ServiceViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceViewModel();

            if (data.hasOwnProperty('availability')) {
                obj['availability'] = ServiceHoursViewModel.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('bookAheadUnit')) {
                obj['bookAheadUnit'] = ApiClient.convertToType(data['bookAheadUnit'], 'Number');
            }
            if (data.hasOwnProperty('bookAheadValue')) {
                obj['bookAheadValue'] = ApiClient.convertToType(data['bookAheadValue'], 'Number');
            }
            if (data.hasOwnProperty('bookInAdvance')) {
                obj['bookInAdvance'] = ApiClient.convertToType(data['bookInAdvance'], 'Number');
            }
            if (data.hasOwnProperty('bookingInterval')) {
                obj['bookingInterval'] = ApiClient.convertToType(data['bookingInterval'], 'Number');
            }
            if (data.hasOwnProperty('bookingLimit')) {
                obj['bookingLimit'] = ApiClient.convertToType(data['bookingLimit'], 'Number');
            }
            if (data.hasOwnProperty('calendarId')) {
                obj['calendarId'] = ApiClient.convertToType(data['calendarId'], 'String');
            }
            if (data.hasOwnProperty('calendarResourceGroupId')) {
                obj['calendarResourceGroupId'] = ApiClient.convertToType(data['calendarResourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('cancellationFeeAmount')) {
                obj['cancellationFeeAmount'] = ApiClient.convertToType(data['cancellationFeeAmount'], 'Number');
            }
            if (data.hasOwnProperty('cancellationFeeTaxable')) {
                obj['cancellationFeeTaxable'] = ApiClient.convertToType(data['cancellationFeeTaxable'], 'Boolean');
            }
            if (data.hasOwnProperty('companyId')) {
                obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
            }
            if (data.hasOwnProperty('consumerPadding')) {
                obj['consumerPadding'] = ApiClient.convertToType(data['consumerPadding'], 'Boolean');
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = CustomFieldInputModel.constructFromObject(data['customFields']);
            }
            if (data.hasOwnProperty('dailyBookingLimitCount')) {
                obj['dailyBookingLimitCount'] = ApiClient.convertToType(data['dailyBookingLimitCount'], 'Number');
            }
            if (data.hasOwnProperty('dailyBookingLimitMinutes')) {
                obj['dailyBookingLimitMinutes'] = ApiClient.convertToType(data['dailyBookingLimitMinutes'], 'Number');
            }
            if (data.hasOwnProperty('defaultService')) {
                obj['defaultService'] = ApiClient.convertToType(data['defaultService'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('durationInterval')) {
                obj['durationInterval'] = ApiClient.convertToType(data['durationInterval'], 'Number');
            }
            if (data.hasOwnProperty('durationMax')) {
                obj['durationMax'] = ApiClient.convertToType(data['durationMax'], 'Number');
            }
            if (data.hasOwnProperty('durationMin')) {
                obj['durationMin'] = ApiClient.convertToType(data['durationMin'], 'Number');
            }
            if (data.hasOwnProperty('durationSelect')) {
                obj['durationSelect'] = ApiClient.convertToType(data['durationSelect'], 'Boolean');
            }
            if (data.hasOwnProperty('feeAmount')) {
                obj['feeAmount'] = ApiClient.convertToType(data['feeAmount'], 'Number');
            }
            if (data.hasOwnProperty('feeTaxable')) {
                obj['feeTaxable'] = ApiClient.convertToType(data['feeTaxable'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('maxBookingLimit')) {
                obj['maxBookingLimit'] = ApiClient.convertToType(data['maxBookingLimit'], 'Number');
            }
            if (data.hasOwnProperty('maxCapacity')) {
                obj['maxCapacity'] = ApiClient.convertToType(data['maxCapacity'], 'Number');
            }
            if (data.hasOwnProperty('maxGroupSize')) {
                obj['maxGroupSize'] = ApiClient.convertToType(data['maxGroupSize'], 'Number');
            }
            if (data.hasOwnProperty('maxResourceBookingLimit')) {
                obj['maxResourceBookingLimit'] = ApiClient.convertToType(data['maxResourceBookingLimit'], 'Number');
            }
            if (data.hasOwnProperty('mediaPageUrl')) {
                obj['mediaPageUrl'] = ApiClient.convertToType(data['mediaPageUrl'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nonRefundable')) {
                obj['nonRefundable'] = ApiClient.convertToType(data['nonRefundable'], 'Boolean');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('padding')) {
                obj['padding'] = ApiClient.convertToType(data['padding'], 'Number');
            }
            if (data.hasOwnProperty('roundRobin')) {
                obj['roundRobin'] = ApiClient.convertToType(data['roundRobin'], 'Number');
            }
            if (data.hasOwnProperty('serviceGroupId')) {
                obj['serviceGroupId'] = ApiClient.convertToType(data['serviceGroupId'], 'Number');
            }
            if (data.hasOwnProperty('serviceGroupName')) {
                obj['serviceGroupName'] = ApiClient.convertToType(data['serviceGroupName'], 'String');
            }
            if (data.hasOwnProperty('showOnline')) {
                obj['showOnline'] = ApiClient.convertToType(data['showOnline'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceViewModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `availability`
        if (data['availability']) { // data not null
          ServiceHoursViewModel.validateJSON(data['availability']);
        }
        // ensure the json data is a string
        if (data['calendarId'] && !(typeof data['calendarId'] === 'string' || data['calendarId'] instanceof String)) {
            throw new Error("Expected the field `calendarId` to be a primitive type in the JSON string but got " + data['calendarId']);
        }
        // ensure the json data is a string
        if (data['calendarResourceGroupId'] && !(typeof data['calendarResourceGroupId'] === 'string' || data['calendarResourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `calendarResourceGroupId` to be a primitive type in the JSON string but got " + data['calendarResourceGroupId']);
        }
        // ensure the json data is a string
        if (data['companyId'] && !(typeof data['companyId'] === 'string' || data['companyId'] instanceof String)) {
            throw new Error("Expected the field `companyId` to be a primitive type in the JSON string but got " + data['companyId']);
        }
        // validate the optional field `customFields`
        if (data['customFields']) { // data not null
          CustomFieldInputModel.validateJSON(data['customFields']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['mediaPageUrl'] && !(typeof data['mediaPageUrl'] === 'string' || data['mediaPageUrl'] instanceof String)) {
            throw new Error("Expected the field `mediaPageUrl` to be a primitive type in the JSON string but got " + data['mediaPageUrl']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['serviceGroupName'] && !(typeof data['serviceGroupName'] === 'string' || data['serviceGroupName'] instanceof String)) {
            throw new Error("Expected the field `serviceGroupName` to be a primitive type in the JSON string but got " + data['serviceGroupName']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/ServiceHoursViewModel} availability
 */
ServiceViewModel.prototype['availability'] = undefined;

/**
 * @member {Number} bookAheadUnit
 */
ServiceViewModel.prototype['bookAheadUnit'] = undefined;

/**
 * @member {Number} bookAheadValue
 */
ServiceViewModel.prototype['bookAheadValue'] = undefined;

/**
 * @member {Number} bookInAdvance
 */
ServiceViewModel.prototype['bookInAdvance'] = undefined;

/**
 * @member {Number} bookingInterval
 */
ServiceViewModel.prototype['bookingInterval'] = undefined;

/**
 * @member {Number} bookingLimit
 */
ServiceViewModel.prototype['bookingLimit'] = undefined;

/**
 * @member {String} calendarId
 */
ServiceViewModel.prototype['calendarId'] = undefined;

/**
 * @member {String} calendarResourceGroupId
 */
ServiceViewModel.prototype['calendarResourceGroupId'] = undefined;

/**
 * @member {Number} cancellationFeeAmount
 */
ServiceViewModel.prototype['cancellationFeeAmount'] = undefined;

/**
 * @member {Boolean} cancellationFeeTaxable
 */
ServiceViewModel.prototype['cancellationFeeTaxable'] = undefined;

/**
 * @member {String} companyId
 */
ServiceViewModel.prototype['companyId'] = undefined;

/**
 * @member {Boolean} consumerPadding
 */
ServiceViewModel.prototype['consumerPadding'] = undefined;

/**
 * @member {module:model/CustomFieldInputModel} customFields
 */
ServiceViewModel.prototype['customFields'] = undefined;

/**
 * @member {Number} dailyBookingLimitCount
 */
ServiceViewModel.prototype['dailyBookingLimitCount'] = undefined;

/**
 * @member {Number} dailyBookingLimitMinutes
 */
ServiceViewModel.prototype['dailyBookingLimitMinutes'] = undefined;

/**
 * @member {Boolean} defaultService
 */
ServiceViewModel.prototype['defaultService'] = undefined;

/**
 * @member {String} description
 */
ServiceViewModel.prototype['description'] = undefined;

/**
 * @member {Number} duration
 */
ServiceViewModel.prototype['duration'] = undefined;

/**
 * @member {Number} durationInterval
 */
ServiceViewModel.prototype['durationInterval'] = undefined;

/**
 * @member {Number} durationMax
 */
ServiceViewModel.prototype['durationMax'] = undefined;

/**
 * @member {Number} durationMin
 */
ServiceViewModel.prototype['durationMin'] = undefined;

/**
 * @member {Boolean} durationSelect
 */
ServiceViewModel.prototype['durationSelect'] = undefined;

/**
 * @member {Number} feeAmount
 */
ServiceViewModel.prototype['feeAmount'] = undefined;

/**
 * @member {Boolean} feeTaxable
 */
ServiceViewModel.prototype['feeTaxable'] = undefined;

/**
 * @member {String} id
 */
ServiceViewModel.prototype['id'] = undefined;

/**
 * @member {String} imageUrl
 */
ServiceViewModel.prototype['imageUrl'] = undefined;

/**
 * @member {String} locationId
 */
ServiceViewModel.prototype['locationId'] = undefined;

/**
 * @member {Number} maxBookingLimit
 */
ServiceViewModel.prototype['maxBookingLimit'] = undefined;

/**
 * @member {Number} maxCapacity
 */
ServiceViewModel.prototype['maxCapacity'] = undefined;

/**
 * @member {Number} maxGroupSize
 */
ServiceViewModel.prototype['maxGroupSize'] = undefined;

/**
 * @member {Number} maxResourceBookingLimit
 */
ServiceViewModel.prototype['maxResourceBookingLimit'] = undefined;

/**
 * @member {String} mediaPageUrl
 */
ServiceViewModel.prototype['mediaPageUrl'] = undefined;

/**
 * @member {String} name
 */
ServiceViewModel.prototype['name'] = undefined;

/**
 * @member {Boolean} nonRefundable
 */
ServiceViewModel.prototype['nonRefundable'] = undefined;

/**
 * @member {String} object
 */
ServiceViewModel.prototype['object'] = undefined;

/**
 * @member {Number} padding
 */
ServiceViewModel.prototype['padding'] = undefined;

/**
 * @member {Number} roundRobin
 */
ServiceViewModel.prototype['roundRobin'] = undefined;

/**
 * @member {Number} serviceGroupId
 */
ServiceViewModel.prototype['serviceGroupId'] = undefined;

/**
 * @member {String} serviceGroupName
 */
ServiceViewModel.prototype['serviceGroupName'] = undefined;

/**
 * @member {Boolean} showOnline
 */
ServiceViewModel.prototype['showOnline'] = undefined;

/**
 * @member {String} type
 */
ServiceViewModel.prototype['type'] = undefined;






export default ServiceViewModel;

