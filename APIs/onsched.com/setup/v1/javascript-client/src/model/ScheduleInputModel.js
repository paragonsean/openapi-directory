/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailabilityInputModel from './AvailabilityInputModel';

/**
 * The ScheduleInputModel model module.
 * @module model/ScheduleInputModel
 * @version v1
 */
class ScheduleInputModel {
    /**
     * Constructs a new <code>ScheduleInputModel</code>.
     * @alias module:model/ScheduleInputModel
     */
    constructor() { 
        
        ScheduleInputModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScheduleInputModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleInputModel} obj Optional instance to populate.
     * @return {module:model/ScheduleInputModel} The populated <code>ScheduleInputModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleInputModel();

            if (data.hasOwnProperty('availability')) {
                obj['availability'] = AvailabilityInputModel.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('bookingsPerSlot')) {
                obj['bookingsPerSlot'] = ApiClient.convertToType(data['bookingsPerSlot'], 'Number');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'Number');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceGroupId')) {
                obj['resourceGroupId'] = ApiClient.convertToType(data['resourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduleInputModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduleInputModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `availability`
        if (data['availability']) { // data not null
          AvailabilityInputModel.validateJSON(data['availability']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['resourceGroupId'] && !(typeof data['resourceGroupId'] === 'string' || data['resourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `resourceGroupId` to be a primitive type in the JSON string but got " + data['resourceGroupId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/AvailabilityInputModel} availability
 */
ScheduleInputModel.prototype['availability'] = undefined;

/**
 * @member {Number} bookingsPerSlot
 */
ScheduleInputModel.prototype['bookingsPerSlot'] = undefined;

/**
 * @member {Number} interval
 */
ScheduleInputModel.prototype['interval'] = undefined;

/**
 * @member {String} locationId
 */
ScheduleInputModel.prototype['locationId'] = undefined;

/**
 * @member {String} name
 */
ScheduleInputModel.prototype['name'] = undefined;

/**
 * @member {String} resourceGroupId
 */
ScheduleInputModel.prototype['resourceGroupId'] = undefined;

/**
 * @member {String} type
 */
ScheduleInputModel.prototype['type'] = undefined;






export default ScheduleInputModel;

