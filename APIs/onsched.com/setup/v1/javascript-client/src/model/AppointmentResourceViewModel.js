/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppointmentResourceViewModel model module.
 * @module model/AppointmentResourceViewModel
 * @version v1
 */
class AppointmentResourceViewModel {
    /**
     * Constructs a new <code>AppointmentResourceViewModel</code>.
     * @alias module:model/AppointmentResourceViewModel
     */
    constructor() { 
        
        AppointmentResourceViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppointmentResourceViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppointmentResourceViewModel} obj Optional instance to populate.
     * @return {module:model/AppointmentResourceViewModel} The populated <code>AppointmentResourceViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppointmentResourceViewModel();

            if (data.hasOwnProperty('appointmentId')) {
                obj['appointmentId'] = ApiClient.convertToType(data['appointmentId'], 'String');
            }
            if (data.hasOwnProperty('resourceEmail')) {
                obj['resourceEmail'] = ApiClient.convertToType(data['resourceEmail'], 'String');
            }
            if (data.hasOwnProperty('resourceGroupId')) {
                obj['resourceGroupId'] = ApiClient.convertToType(data['resourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceImageUrl')) {
                obj['resourceImageUrl'] = ApiClient.convertToType(data['resourceImageUrl'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppointmentResourceViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppointmentResourceViewModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appointmentId'] && !(typeof data['appointmentId'] === 'string' || data['appointmentId'] instanceof String)) {
            throw new Error("Expected the field `appointmentId` to be a primitive type in the JSON string but got " + data['appointmentId']);
        }
        // ensure the json data is a string
        if (data['resourceEmail'] && !(typeof data['resourceEmail'] === 'string' || data['resourceEmail'] instanceof String)) {
            throw new Error("Expected the field `resourceEmail` to be a primitive type in the JSON string but got " + data['resourceEmail']);
        }
        // ensure the json data is a string
        if (data['resourceGroupId'] && !(typeof data['resourceGroupId'] === 'string' || data['resourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `resourceGroupId` to be a primitive type in the JSON string but got " + data['resourceGroupId']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceImageUrl'] && !(typeof data['resourceImageUrl'] === 'string' || data['resourceImageUrl'] instanceof String)) {
            throw new Error("Expected the field `resourceImageUrl` to be a primitive type in the JSON string but got " + data['resourceImageUrl']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }

        return true;
    }


}



/**
 * @member {String} appointmentId
 */
AppointmentResourceViewModel.prototype['appointmentId'] = undefined;

/**
 * @member {String} resourceEmail
 */
AppointmentResourceViewModel.prototype['resourceEmail'] = undefined;

/**
 * @member {String} resourceGroupId
 */
AppointmentResourceViewModel.prototype['resourceGroupId'] = undefined;

/**
 * @member {String} resourceId
 */
AppointmentResourceViewModel.prototype['resourceId'] = undefined;

/**
 * @member {String} resourceImageUrl
 */
AppointmentResourceViewModel.prototype['resourceImageUrl'] = undefined;

/**
 * @member {String} resourceName
 */
AppointmentResourceViewModel.prototype['resourceName'] = undefined;






export default AppointmentResourceViewModel;

