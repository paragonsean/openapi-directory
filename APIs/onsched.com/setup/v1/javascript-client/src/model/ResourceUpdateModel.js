/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressUpdateModel from './AddressUpdateModel';
import AvailabilityInputModel from './AvailabilityInputModel';
import ContactUpdateModel from './ContactUpdateModel';
import CustomFieldUpdateModel from './CustomFieldUpdateModel';
import ResourceOptionsUpdateModel from './ResourceOptionsUpdateModel';

/**
 * The ResourceUpdateModel model module.
 * @module model/ResourceUpdateModel
 * @version v1
 */
class ResourceUpdateModel {
    /**
     * Constructs a new <code>ResourceUpdateModel</code>.
     * @alias module:model/ResourceUpdateModel
     */
    constructor() { 
        
        ResourceUpdateModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceUpdateModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceUpdateModel} obj Optional instance to populate.
     * @return {module:model/ResourceUpdateModel} The populated <code>ResourceUpdateModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceUpdateModel();

            if (data.hasOwnProperty('address')) {
                obj['address'] = AddressUpdateModel.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('availability')) {
                obj['availability'] = AvailabilityInputModel.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('contact')) {
                obj['contact'] = ContactUpdateModel.constructFromObject(data['contact']);
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = CustomFieldUpdateModel.constructFromObject(data['customFields']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ResourceOptionsUpdateModel.constructFromObject(data['options']);
            }
            if (data.hasOwnProperty('recurringAvailability')) {
                obj['recurringAvailability'] = ApiClient.convertToType(data['recurringAvailability'], 'Boolean');
            }
            if (data.hasOwnProperty('serviceIds')) {
                obj['serviceIds'] = ApiClient.convertToType(data['serviceIds'], ['String']);
            }
            if (data.hasOwnProperty('timezoneId')) {
                obj['timezoneId'] = ApiClient.convertToType(data['timezoneId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceUpdateModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceUpdateModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          AddressUpdateModel.validateJSON(data['address']);
        }
        // validate the optional field `availability`
        if (data['availability']) { // data not null
          AvailabilityInputModel.validateJSON(data['availability']);
        }
        // validate the optional field `contact`
        if (data['contact']) { // data not null
          ContactUpdateModel.validateJSON(data['contact']);
        }
        // validate the optional field `customFields`
        if (data['customFields']) { // data not null
          CustomFieldUpdateModel.validateJSON(data['customFields']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['groupId'] && !(typeof data['groupId'] === 'string' || data['groupId'] instanceof String)) {
            throw new Error("Expected the field `groupId` to be a primitive type in the JSON string but got " + data['groupId']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          ResourceOptionsUpdateModel.validateJSON(data['options']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['serviceIds'])) {
            throw new Error("Expected the field `serviceIds` to be an array in the JSON data but got " + data['serviceIds']);
        }
        // ensure the json data is a string
        if (data['timezoneId'] && !(typeof data['timezoneId'] === 'string' || data['timezoneId'] instanceof String)) {
            throw new Error("Expected the field `timezoneId` to be a primitive type in the JSON string but got " + data['timezoneId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AddressUpdateModel} address
 */
ResourceUpdateModel.prototype['address'] = undefined;

/**
 * @member {module:model/AvailabilityInputModel} availability
 */
ResourceUpdateModel.prototype['availability'] = undefined;

/**
 * @member {module:model/ContactUpdateModel} contact
 */
ResourceUpdateModel.prototype['contact'] = undefined;

/**
 * @member {module:model/CustomFieldUpdateModel} customFields
 */
ResourceUpdateModel.prototype['customFields'] = undefined;

/**
 * @member {String} description
 */
ResourceUpdateModel.prototype['description'] = undefined;

/**
 * @member {String} email
 */
ResourceUpdateModel.prototype['email'] = undefined;

/**
 * @member {String} groupId
 */
ResourceUpdateModel.prototype['groupId'] = undefined;

/**
 * @member {String} locationId
 */
ResourceUpdateModel.prototype['locationId'] = undefined;

/**
 * @member {String} name
 */
ResourceUpdateModel.prototype['name'] = undefined;

/**
 * @member {module:model/ResourceOptionsUpdateModel} options
 */
ResourceUpdateModel.prototype['options'] = undefined;

/**
 * @member {Boolean} recurringAvailability
 */
ResourceUpdateModel.prototype['recurringAvailability'] = undefined;

/**
 * @member {Array.<String>} serviceIds
 */
ResourceUpdateModel.prototype['serviceIds'] = undefined;

/**
 * @member {String} timezoneId
 */
ResourceUpdateModel.prototype['timezoneId'] = undefined;






export default ResourceUpdateModel;

