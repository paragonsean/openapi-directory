/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressViewModel from './AddressViewModel';
import ContactViewModel from './ContactViewModel';
import CustomFieldViewModel from './CustomFieldViewModel';

/**
 * The CustomerViewModel model module.
 * @module model/CustomerViewModel
 * @version v1
 */
class CustomerViewModel {
    /**
     * Constructs a new <code>CustomerViewModel</code>.
     * @alias module:model/CustomerViewModel
     */
    constructor() { 
        
        CustomerViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerViewModel} obj Optional instance to populate.
     * @return {module:model/CustomerViewModel} The populated <code>CustomerViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerViewModel();

            if (data.hasOwnProperty('address')) {
                obj['address'] = AddressViewModel.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('birthdate')) {
                obj['birthdate'] = ApiClient.convertToType(data['birthdate'], 'String');
            }
            if (data.hasOwnProperty('businessName')) {
                obj['businessName'] = ApiClient.convertToType(data['businessName'], 'String');
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('contact')) {
                obj['contact'] = ContactViewModel.constructFromObject(data['contact']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'String');
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = ApiClient.convertToType(data['customFields'], {'String': CustomFieldViewModel});
            }
            if (data.hasOwnProperty('deletedStatus')) {
                obj['deletedStatus'] = ApiClient.convertToType(data['deletedStatus'], 'Boolean');
            }
            if (data.hasOwnProperty('deletedTime')) {
                obj['deletedTime'] = ApiClient.convertToType(data['deletedTime'], 'String');
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('emailInfo')) {
                obj['emailInfo'] = ApiClient.convertToType(data['emailInfo'], 'Boolean');
            }
            if (data.hasOwnProperty('emailPromotion')) {
                obj['emailPromotion'] = ApiClient.convertToType(data['emailPromotion'], 'Boolean');
            }
            if (data.hasOwnProperty('firstname')) {
                obj['firstname'] = ApiClient.convertToType(data['firstname'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('inviteEmailSent')) {
                obj['inviteEmailSent'] = ApiClient.convertToType(data['inviteEmailSent'], 'String');
            }
            if (data.hasOwnProperty('lastVisitDate')) {
                obj['lastVisitDate'] = ApiClient.convertToType(data['lastVisitDate'], 'String');
            }
            if (data.hasOwnProperty('lastname')) {
                obj['lastname'] = ApiClient.convertToType(data['lastname'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'String');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'String');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('modifiedOn')) {
                obj['modifiedOn'] = ApiClient.convertToType(data['modifiedOn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notificationType')) {
                obj['notificationType'] = ApiClient.convertToType(data['notificationType'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('registeredBy')) {
                obj['registeredBy'] = ApiClient.convertToType(data['registeredBy'], 'String');
            }
            if (data.hasOwnProperty('registrationDate')) {
                obj['registrationDate'] = ApiClient.convertToType(data['registrationDate'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('stripeCustomerId')) {
                obj['stripeCustomerId'] = ApiClient.convertToType(data['stripeCustomerId'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('verificationDate')) {
                obj['verificationDate'] = ApiClient.convertToType(data['verificationDate'], 'String');
            }
            if (data.hasOwnProperty('verifiedBy')) {
                obj['verifiedBy'] = ApiClient.convertToType(data['verifiedBy'], 'String');
            }
            if (data.hasOwnProperty('welcomeEmailSent')) {
                obj['welcomeEmailSent'] = ApiClient.convertToType(data['welcomeEmailSent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerViewModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          AddressViewModel.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['birthdate'] && !(typeof data['birthdate'] === 'string' || data['birthdate'] instanceof String)) {
            throw new Error("Expected the field `birthdate` to be a primitive type in the JSON string but got " + data['birthdate']);
        }
        // ensure the json data is a string
        if (data['businessName'] && !(typeof data['businessName'] === 'string' || data['businessName'] instanceof String)) {
            throw new Error("Expected the field `businessName` to be a primitive type in the JSON string but got " + data['businessName']);
        }
        // ensure the json data is a string
        if (data['companyName'] && !(typeof data['companyName'] === 'string' || data['companyName'] instanceof String)) {
            throw new Error("Expected the field `companyName` to be a primitive type in the JSON string but got " + data['companyName']);
        }
        // validate the optional field `contact`
        if (data['contact']) { // data not null
          ContactViewModel.validateJSON(data['contact']);
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['createdOn'] && !(typeof data['createdOn'] === 'string' || data['createdOn'] instanceof String)) {
            throw new Error("Expected the field `createdOn` to be a primitive type in the JSON string but got " + data['createdOn']);
        }
        // ensure the json data is a string
        if (data['deletedTime'] && !(typeof data['deletedTime'] === 'string' || data['deletedTime'] instanceof String)) {
            throw new Error("Expected the field `deletedTime` to be a primitive type in the JSON string but got " + data['deletedTime']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstname'] && !(typeof data['firstname'] === 'string' || data['firstname'] instanceof String)) {
            throw new Error("Expected the field `firstname` to be a primitive type in the JSON string but got " + data['firstname']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // ensure the json data is a string
        if (data['groupId'] && !(typeof data['groupId'] === 'string' || data['groupId'] instanceof String)) {
            throw new Error("Expected the field `groupId` to be a primitive type in the JSON string but got " + data['groupId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['inviteEmailSent'] && !(typeof data['inviteEmailSent'] === 'string' || data['inviteEmailSent'] instanceof String)) {
            throw new Error("Expected the field `inviteEmailSent` to be a primitive type in the JSON string but got " + data['inviteEmailSent']);
        }
        // ensure the json data is a string
        if (data['lastVisitDate'] && !(typeof data['lastVisitDate'] === 'string' || data['lastVisitDate'] instanceof String)) {
            throw new Error("Expected the field `lastVisitDate` to be a primitive type in the JSON string but got " + data['lastVisitDate']);
        }
        // ensure the json data is a string
        if (data['lastname'] && !(typeof data['lastname'] === 'string' || data['lastname'] instanceof String)) {
            throw new Error("Expected the field `lastname` to be a primitive type in the JSON string but got " + data['lastname']);
        }
        // ensure the json data is a string
        if (data['latitude'] && !(typeof data['latitude'] === 'string' || data['latitude'] instanceof String)) {
            throw new Error("Expected the field `latitude` to be a primitive type in the JSON string but got " + data['latitude']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['longitude'] && !(typeof data['longitude'] === 'string' || data['longitude'] instanceof String)) {
            throw new Error("Expected the field `longitude` to be a primitive type in the JSON string but got " + data['longitude']);
        }
        // ensure the json data is a string
        if (data['modifiedBy'] && !(typeof data['modifiedBy'] === 'string' || data['modifiedBy'] instanceof String)) {
            throw new Error("Expected the field `modifiedBy` to be a primitive type in the JSON string but got " + data['modifiedBy']);
        }
        // ensure the json data is a string
        if (data['modifiedOn'] && !(typeof data['modifiedOn'] === 'string' || data['modifiedOn'] instanceof String)) {
            throw new Error("Expected the field `modifiedOn` to be a primitive type in the JSON string but got " + data['modifiedOn']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notificationType'] && !(typeof data['notificationType'] === 'string' || data['notificationType'] instanceof String)) {
            throw new Error("Expected the field `notificationType` to be a primitive type in the JSON string but got " + data['notificationType']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['registeredBy'] && !(typeof data['registeredBy'] === 'string' || data['registeredBy'] instanceof String)) {
            throw new Error("Expected the field `registeredBy` to be a primitive type in the JSON string but got " + data['registeredBy']);
        }
        // ensure the json data is a string
        if (data['registrationDate'] && !(typeof data['registrationDate'] === 'string' || data['registrationDate'] instanceof String)) {
            throw new Error("Expected the field `registrationDate` to be a primitive type in the JSON string but got " + data['registrationDate']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['stripeCustomerId'] && !(typeof data['stripeCustomerId'] === 'string' || data['stripeCustomerId'] instanceof String)) {
            throw new Error("Expected the field `stripeCustomerId` to be a primitive type in the JSON string but got " + data['stripeCustomerId']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['verificationDate'] && !(typeof data['verificationDate'] === 'string' || data['verificationDate'] instanceof String)) {
            throw new Error("Expected the field `verificationDate` to be a primitive type in the JSON string but got " + data['verificationDate']);
        }
        // ensure the json data is a string
        if (data['verifiedBy'] && !(typeof data['verifiedBy'] === 'string' || data['verifiedBy'] instanceof String)) {
            throw new Error("Expected the field `verifiedBy` to be a primitive type in the JSON string but got " + data['verifiedBy']);
        }
        // ensure the json data is a string
        if (data['welcomeEmailSent'] && !(typeof data['welcomeEmailSent'] === 'string' || data['welcomeEmailSent'] instanceof String)) {
            throw new Error("Expected the field `welcomeEmailSent` to be a primitive type in the JSON string but got " + data['welcomeEmailSent']);
        }

        return true;
    }


}



/**
 * @member {module:model/AddressViewModel} address
 */
CustomerViewModel.prototype['address'] = undefined;

/**
 * @member {String} birthdate
 */
CustomerViewModel.prototype['birthdate'] = undefined;

/**
 * @member {String} businessName
 */
CustomerViewModel.prototype['businessName'] = undefined;

/**
 * @member {String} companyName
 */
CustomerViewModel.prototype['companyName'] = undefined;

/**
 * @member {module:model/ContactViewModel} contact
 */
CustomerViewModel.prototype['contact'] = undefined;

/**
 * @member {String} createdBy
 */
CustomerViewModel.prototype['createdBy'] = undefined;

/**
 * @member {String} createdOn
 */
CustomerViewModel.prototype['createdOn'] = undefined;

/**
 * @member {Object.<String, module:model/CustomFieldViewModel>} customFields
 */
CustomerViewModel.prototype['customFields'] = undefined;

/**
 * @member {Boolean} deletedStatus
 */
CustomerViewModel.prototype['deletedStatus'] = undefined;

/**
 * @member {String} deletedTime
 */
CustomerViewModel.prototype['deletedTime'] = undefined;

/**
 * @member {Boolean} disabled
 */
CustomerViewModel.prototype['disabled'] = undefined;

/**
 * @member {String} email
 */
CustomerViewModel.prototype['email'] = undefined;

/**
 * @member {Boolean} emailInfo
 */
CustomerViewModel.prototype['emailInfo'] = undefined;

/**
 * @member {Boolean} emailPromotion
 */
CustomerViewModel.prototype['emailPromotion'] = undefined;

/**
 * @member {String} firstname
 */
CustomerViewModel.prototype['firstname'] = undefined;

/**
 * @member {String} gender
 */
CustomerViewModel.prototype['gender'] = undefined;

/**
 * @member {String} groupId
 */
CustomerViewModel.prototype['groupId'] = undefined;

/**
 * @member {String} id
 */
CustomerViewModel.prototype['id'] = undefined;

/**
 * @member {String} inviteEmailSent
 */
CustomerViewModel.prototype['inviteEmailSent'] = undefined;

/**
 * @member {String} lastVisitDate
 */
CustomerViewModel.prototype['lastVisitDate'] = undefined;

/**
 * @member {String} lastname
 */
CustomerViewModel.prototype['lastname'] = undefined;

/**
 * @member {String} latitude
 */
CustomerViewModel.prototype['latitude'] = undefined;

/**
 * @member {String} locationId
 */
CustomerViewModel.prototype['locationId'] = undefined;

/**
 * @member {String} longitude
 */
CustomerViewModel.prototype['longitude'] = undefined;

/**
 * @member {String} modifiedBy
 */
CustomerViewModel.prototype['modifiedBy'] = undefined;

/**
 * @member {String} modifiedOn
 */
CustomerViewModel.prototype['modifiedOn'] = undefined;

/**
 * @member {String} name
 */
CustomerViewModel.prototype['name'] = undefined;

/**
 * @member {String} notificationType
 */
CustomerViewModel.prototype['notificationType'] = undefined;

/**
 * @member {String} object
 */
CustomerViewModel.prototype['object'] = undefined;

/**
 * @member {String} registeredBy
 */
CustomerViewModel.prototype['registeredBy'] = undefined;

/**
 * @member {String} registrationDate
 */
CustomerViewModel.prototype['registrationDate'] = undefined;

/**
 * @member {String} resourceId
 */
CustomerViewModel.prototype['resourceId'] = undefined;

/**
 * @member {String} stripeCustomerId
 */
CustomerViewModel.prototype['stripeCustomerId'] = undefined;

/**
 * @member {String} subscriptionId
 */
CustomerViewModel.prototype['subscriptionId'] = undefined;

/**
 * @member {String} verificationDate
 */
CustomerViewModel.prototype['verificationDate'] = undefined;

/**
 * @member {String} verifiedBy
 */
CustomerViewModel.prototype['verifiedBy'] = undefined;

/**
 * @member {String} welcomeEmailSent
 */
CustomerViewModel.prototype['welcomeEmailSent'] = undefined;






export default CustomerViewModel;

