/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnSchedSetupApi);
  }
}(this, function(expect, OnSchedSetupApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnSchedSetupApi.CustomerViewModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CustomerViewModel', function() {
    it('should create an instance of CustomerViewModel', function() {
      // uncomment below and update the code to test CustomerViewModel
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be.a(OnSchedSetupApi.CustomerViewModel);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property birthdate (base name: "birthdate")', function() {
      // uncomment below and update the code to test the property birthdate
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property businessName (base name: "businessName")', function() {
      // uncomment below and update the code to test the property businessName
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "createdBy")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property createdOn (base name: "createdOn")', function() {
      // uncomment below and update the code to test the property createdOn
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property deletedStatus (base name: "deletedStatus")', function() {
      // uncomment below and update the code to test the property deletedStatus
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property deletedTime (base name: "deletedTime")', function() {
      // uncomment below and update the code to test the property deletedTime
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property disabled (base name: "disabled")', function() {
      // uncomment below and update the code to test the property disabled
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property emailInfo (base name: "emailInfo")', function() {
      // uncomment below and update the code to test the property emailInfo
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property emailPromotion (base name: "emailPromotion")', function() {
      // uncomment below and update the code to test the property emailPromotion
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property firstname (base name: "firstname")', function() {
      // uncomment below and update the code to test the property firstname
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "groupId")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property inviteEmailSent (base name: "inviteEmailSent")', function() {
      // uncomment below and update the code to test the property inviteEmailSent
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property lastVisitDate (base name: "lastVisitDate")', function() {
      // uncomment below and update the code to test the property lastVisitDate
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property lastname (base name: "lastname")', function() {
      // uncomment below and update the code to test the property lastname
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property locationId (base name: "locationId")', function() {
      // uncomment below and update the code to test the property locationId
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property modifiedBy (base name: "modifiedBy")', function() {
      // uncomment below and update the code to test the property modifiedBy
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property modifiedOn (base name: "modifiedOn")', function() {
      // uncomment below and update the code to test the property modifiedOn
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property notificationType (base name: "notificationType")', function() {
      // uncomment below and update the code to test the property notificationType
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property registeredBy (base name: "registeredBy")', function() {
      // uncomment below and update the code to test the property registeredBy
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property registrationDate (base name: "registrationDate")', function() {
      // uncomment below and update the code to test the property registrationDate
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resourceId")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property stripeCustomerId (base name: "stripeCustomerId")', function() {
      // uncomment below and update the code to test the property stripeCustomerId
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionId (base name: "subscriptionId")', function() {
      // uncomment below and update the code to test the property subscriptionId
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property verificationDate (base name: "verificationDate")', function() {
      // uncomment below and update the code to test the property verificationDate
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property verifiedBy (base name: "verifiedBy")', function() {
      // uncomment below and update the code to test the property verifiedBy
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailSent (base name: "welcomeEmailSent")', function() {
      // uncomment below and update the code to test the property welcomeEmailSent
      //var instance = new OnSchedSetupApi.CustomerViewModel();
      //expect(instance).to.be();
    });

  });

}));
