/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnSchedSetupApi);
  }
}(this, function(expect, OnSchedSetupApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnSchedSetupApi.AppointmentViewModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppointmentViewModel', function() {
    it('should create an instance of AppointmentViewModel', function() {
      // uncomment below and update the code to test AppointmentViewModel
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be.a(OnSchedSetupApi.AppointmentViewModel);
    });

    it('should have the property auditTrail (base name: "auditTrail")', function() {
      // uncomment below and update the code to test the property auditTrail
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property bookedBy (base name: "bookedBy")', function() {
      // uncomment below and update the code to test the property bookedBy
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property businessName (base name: "businessName")', function() {
      // uncomment below and update the code to test the property businessName
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property calendarId (base name: "calendarId")', function() {
      // uncomment below and update the code to test the property calendarId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property confirmationNumber (base name: "confirmationNumber")', function() {
      // uncomment below and update the code to test the property confirmationNumber
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property confirmed (base name: "confirmed")', function() {
      // uncomment below and update the code to test the property confirmed
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property customerMessage (base name: "customerMessage")', function() {
      // uncomment below and update the code to test the property customerMessage
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property customers (base name: "customers")', function() {
      // uncomment below and update the code to test the property customers
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property dateInternational (base name: "dateInternational")', function() {
      // uncomment below and update the code to test the property dateInternational
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property downloadIcsUrl (base name: "downloadIcsUrl")', function() {
      // uncomment below and update the code to test the property downloadIcsUrl
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property emailConfirmationSent (base name: "emailConfirmationSent")', function() {
      // uncomment below and update the code to test the property emailConfirmationSent
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property emailReminderSent (base name: "emailReminderSent")', function() {
      // uncomment below and update the code to test the property emailReminderSent
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property endDateTime (base name: "endDateTime")', function() {
      // uncomment below and update the code to test the property endDateTime
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property firstname (base name: "firstname")', function() {
      // uncomment below and update the code to test the property firstname
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property groupSize (base name: "groupSize")', function() {
      // uncomment below and update the code to test the property groupSize
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedBy (base name: "lastModifiedBy")', function() {
      // uncomment below and update the code to test the property lastModifiedBy
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedOn (base name: "lastModifiedOn")', function() {
      // uncomment below and update the code to test the property lastModifiedOn
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property lastname (base name: "lastname")', function() {
      // uncomment below and update the code to test the property lastname
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property locationId (base name: "locationId")', function() {
      // uncomment below and update the code to test the property locationId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property onlineBooking (base name: "onlineBooking")', function() {
      // uncomment below and update the code to test the property onlineBooking
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property paymentStatus (base name: "paymentStatus")', function() {
      // uncomment below and update the code to test the property paymentStatus
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property phoneExt (base name: "phoneExt")', function() {
      // uncomment below and update the code to test the property phoneExt
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property phoneType (base name: "phoneType")', function() {
      // uncomment below and update the code to test the property phoneType
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property rescheduledId (base name: "rescheduledId")', function() {
      // uncomment below and update the code to test the property rescheduledId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceEmail (base name: "resourceEmail")', function() {
      // uncomment below and update the code to test the property resourceEmail
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroupId (base name: "resourceGroupId")', function() {
      // uncomment below and update the code to test the property resourceGroupId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroupName (base name: "resourceGroupName")', function() {
      // uncomment below and update the code to test the property resourceGroupName
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resourceId")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceImageUrl (base name: "resourceImageUrl")', function() {
      // uncomment below and update the code to test the property resourceImageUrl
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resourceName (base name: "resourceName")', function() {
      // uncomment below and update the code to test the property resourceName
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property resources (base name: "resources")', function() {
      // uncomment below and update the code to test the property resources
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property serviceAllocationId (base name: "serviceAllocationId")', function() {
      // uncomment below and update the code to test the property serviceAllocationId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property serviceId (base name: "serviceId")', function() {
      // uncomment below and update the code to test the property serviceId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property serviceImageUrl (base name: "serviceImageUrl")', function() {
      // uncomment below and update the code to test the property serviceImageUrl
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property serviceName (base name: "serviceName")', function() {
      // uncomment below and update the code to test the property serviceName
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property smsConfirmationSent (base name: "smsConfirmationSent")', function() {
      // uncomment below and update the code to test the property smsConfirmationSent
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property smsReminderSent (base name: "smsReminderSent")', function() {
      // uncomment below and update the code to test the property smsReminderSent
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property startDateTime (base name: "startDateTime")', function() {
      // uncomment below and update the code to test the property startDateTime
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property stripeChargeId (base name: "stripeChargeId")', function() {
      // uncomment below and update the code to test the property stripeChargeId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property stripeRefundId (base name: "stripeRefundId")', function() {
      // uncomment below and update the code to test the property stripeRefundId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property time (base name: "time")', function() {
      // uncomment below and update the code to test the property time
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property timezoneIana (base name: "timezoneIana")', function() {
      // uncomment below and update the code to test the property timezoneIana
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

    it('should have the property timezoneId (base name: "timezoneId")', function() {
      // uncomment below and update the code to test the property timezoneId
      //var instance = new OnSchedSetupApi.AppointmentViewModel();
      //expect(instance).to.be();
    });

  });

}));
