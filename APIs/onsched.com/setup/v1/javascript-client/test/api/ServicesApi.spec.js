/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnSchedSetupApi);
  }
}(this, function(expect, OnSchedSetupApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnSchedSetupApi.ServicesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServicesApi', function() {
    describe('setupV1ServicesAllocationsIdDelete', function() {
      it('should call setupV1ServicesAllocationsIdDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesAllocationsIdDelete
        //instance.setupV1ServicesAllocationsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesAllocationsIdGet', function() {
      it('should call setupV1ServicesAllocationsIdGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesAllocationsIdGet
        //instance.setupV1ServicesAllocationsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesAllocationsIdPut', function() {
      it('should call setupV1ServicesAllocationsIdPut successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesAllocationsIdPut
        //instance.setupV1ServicesAllocationsIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesBlockIdDelete', function() {
      it('should call setupV1ServicesBlockIdDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesBlockIdDelete
        //instance.setupV1ServicesBlockIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesBlockIdPut', function() {
      it('should call setupV1ServicesBlockIdPut successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesBlockIdPut
        //instance.setupV1ServicesBlockIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesBlocksIdGet', function() {
      it('should call setupV1ServicesBlocksIdGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesBlocksIdGet
        //instance.setupV1ServicesBlocksIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesCalendarIdDelete', function() {
      it('should call setupV1ServicesCalendarIdDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesCalendarIdDelete
        //instance.setupV1ServicesCalendarIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesCalendarPost', function() {
      it('should call setupV1ServicesCalendarPost successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesCalendarPost
        //instance.setupV1ServicesCalendarPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesGet', function() {
      it('should call setupV1ServicesGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesGet
        //instance.setupV1ServicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdAllocationsBulkPost', function() {
      it('should call setupV1ServicesIdAllocationsBulkPost successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdAllocationsBulkPost
        //instance.setupV1ServicesIdAllocationsBulkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdAllocationsGet', function() {
      it('should call setupV1ServicesIdAllocationsGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdAllocationsGet
        //instance.setupV1ServicesIdAllocationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdAllocationsPost', function() {
      it('should call setupV1ServicesIdAllocationsPost successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdAllocationsPost
        //instance.setupV1ServicesIdAllocationsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdAvailabilityGet', function() {
      it('should call setupV1ServicesIdAvailabilityGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdAvailabilityGet
        //instance.setupV1ServicesIdAvailabilityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdAvailabilityPut', function() {
      it('should call setupV1ServicesIdAvailabilityPut successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdAvailabilityPut
        //instance.setupV1ServicesIdAvailabilityPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdBlockPost', function() {
      it('should call setupV1ServicesIdBlockPost successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdBlockPost
        //instance.setupV1ServicesIdBlockPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdBlocksGet', function() {
      it('should call setupV1ServicesIdBlocksGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdBlocksGet
        //instance.setupV1ServicesIdBlocksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdCalendarGet', function() {
      it('should call setupV1ServicesIdCalendarGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdCalendarGet
        //instance.setupV1ServicesIdCalendarGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdDelete', function() {
      it('should call setupV1ServicesIdDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdDelete
        //instance.setupV1ServicesIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdDeleteimageDelete', function() {
      it('should call setupV1ServicesIdDeleteimageDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdDeleteimageDelete
        //instance.setupV1ServicesIdDeleteimageDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdGet', function() {
      it('should call setupV1ServicesIdGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdGet
        //instance.setupV1ServicesIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdPut', function() {
      it('should call setupV1ServicesIdPut successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdPut
        //instance.setupV1ServicesIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdRecoverPut', function() {
      it('should call setupV1ServicesIdRecoverPut successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdRecoverPut
        //instance.setupV1ServicesIdRecoverPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdResourcesGet', function() {
      it('should call setupV1ServicesIdResourcesGet successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdResourcesGet
        //instance.setupV1ServicesIdResourcesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesIdUploadimagePost', function() {
      it('should call setupV1ServicesIdUploadimagePost successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesIdUploadimagePost
        //instance.setupV1ServicesIdUploadimagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1ServicesPost', function() {
      it('should call setupV1ServicesPost successfully', function(done) {
        //uncomment below and update the code to test setupV1ServicesPost
        //instance.setupV1ServicesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
