/**
 * OnSched Setup API
 * Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.  <br><br>  Take the API for a test drive. Just click on the Authorize button below and authenticate.   You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.  <br><br>  The API has two interfaces, consumer and setup.   <ul>  <li>  The consumer interface provides all the endpoints required for implementing consumer booking flows.  </li>  <li>  The setup interface provides endpoints for profile configuration and setup.  </li>  </ul>  Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnSchedSetupApi);
  }
}(this, function(expect, OnSchedSetupApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnSchedSetupApi.LocationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LocationsApi', function() {
    describe('setupV1LocationsBulkPost', function() {
      it('should call setupV1LocationsBulkPost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsBulkPost
        //instance.setupV1LocationsBulkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsGet', function() {
      it('should call setupV1LocationsGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsGet
        //instance.setupV1LocationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdAppointmentremindersGet', function() {
      it('should call setupV1LocationsIdAppointmentremindersGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdAppointmentremindersGet
        //instance.setupV1LocationsIdAppointmentremindersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdAppointmentremindersPut', function() {
      it('should call setupV1LocationsIdAppointmentremindersPut successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdAppointmentremindersPut
        //instance.setupV1LocationsIdAppointmentremindersPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdDelete', function() {
      it('should call setupV1LocationsIdDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdDelete
        //instance.setupV1LocationsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdDeleteallimagesDelete', function() {
      it('should call setupV1LocationsIdDeleteallimagesDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdDeleteallimagesDelete
        //instance.setupV1LocationsIdDeleteallimagesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdDeleteimageDelete', function() {
      it('should call setupV1LocationsIdDeleteimageDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdDeleteimageDelete
        //instance.setupV1LocationsIdDeleteimageDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesGet', function() {
      it('should call setupV1LocationsIdEmailTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesGet
        //instance.setupV1LocationsIdEmailTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesMasterDelete', function() {
      it('should call setupV1LocationsIdEmailTemplatesMasterDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesMasterDelete
        //instance.setupV1LocationsIdEmailTemplatesMasterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesMasterGet', function() {
      it('should call setupV1LocationsIdEmailTemplatesMasterGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesMasterGet
        //instance.setupV1LocationsIdEmailTemplatesMasterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesMasterPost', function() {
      it('should call setupV1LocationsIdEmailTemplatesMasterPost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesMasterPost
        //instance.setupV1LocationsIdEmailTemplatesMasterPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesPost', function() {
      it('should call setupV1LocationsIdEmailTemplatesPost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesPost
        //instance.setupV1LocationsIdEmailTemplatesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesTemplateNameDelete', function() {
      it('should call setupV1LocationsIdEmailTemplatesTemplateNameDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesTemplateNameDelete
        //instance.setupV1LocationsIdEmailTemplatesTemplateNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdEmailTemplatesTemplateNameGet', function() {
      it('should call setupV1LocationsIdEmailTemplatesTemplateNameGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdEmailTemplatesTemplateNameGet
        //instance.setupV1LocationsIdEmailTemplatesTemplateNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdGet', function() {
      it('should call setupV1LocationsIdGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdGet
        //instance.setupV1LocationsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdGoogleServiceAccountDelete', function() {
      it('should call setupV1LocationsIdGoogleServiceAccountDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdGoogleServiceAccountDelete
        //instance.setupV1LocationsIdGoogleServiceAccountDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdGoogleServiceAccountPost', function() {
      it('should call setupV1LocationsIdGoogleServiceAccountPost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdGoogleServiceAccountPost
        //instance.setupV1LocationsIdGoogleServiceAccountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdHolidaysHolidayIdClosedPut', function() {
      it('should call setupV1LocationsIdHolidaysHolidayIdClosedPut successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdHolidaysHolidayIdClosedPut
        //instance.setupV1LocationsIdHolidaysHolidayIdClosedPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdPut', function() {
      it('should call setupV1LocationsIdPut successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdPut
        //instance.setupV1LocationsIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdRecoverPut', function() {
      it('should call setupV1LocationsIdRecoverPut successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdRecoverPut
        //instance.setupV1LocationsIdRecoverPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdServicesDelete', function() {
      it('should call setupV1LocationsIdServicesDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdServicesDelete
        //instance.setupV1LocationsIdServicesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdServicesGet', function() {
      it('should call setupV1LocationsIdServicesGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdServicesGet
        //instance.setupV1LocationsIdServicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdServicesPost', function() {
      it('should call setupV1LocationsIdServicesPost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdServicesPost
        //instance.setupV1LocationsIdServicesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdSettingsScopeSettingsScopePut', function() {
      it('should call setupV1LocationsIdSettingsScopeSettingsScopePut successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdSettingsScopeSettingsScopePut
        //instance.setupV1LocationsIdSettingsScopeSettingsScopePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsIdUploadimagePost', function() {
      it('should call setupV1LocationsIdUploadimagePost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsIdUploadimagePost
        //instance.setupV1LocationsIdUploadimagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsPost', function() {
      it('should call setupV1LocationsPost successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsPost
        //instance.setupV1LocationsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsServicesIdDelete', function() {
      it('should call setupV1LocationsServicesIdDelete successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsServicesIdDelete
        //instance.setupV1LocationsServicesIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setupV1LocationsServicesIdGet', function() {
      it('should call setupV1LocationsServicesIdGet successfully', function(done) {
        //uncomment below and update the code to test setupV1LocationsServicesIdGet
        //instance.setupV1LocationsServicesIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
