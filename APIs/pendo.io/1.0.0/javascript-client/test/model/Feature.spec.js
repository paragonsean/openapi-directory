/**
 * Pendo Feedback API
 * ## Who is this for?  This documentation is for developers creating their own integration with [Feedback's](https://www.pendo.io/product/feedback/) API. If you are doing a standard integration, there's a really easy [Javascript integration](https://help.receptive.io/hc/en-us/articles/209221969-How-to-integrate-Receptive-with-your-app) that you should know about before you go to the effort of building your own integration.  ## Authentication  API calls generally need to be authenticated. Generate an API Key at https://feedback.pendo.io/app/#/vendor/settings?section=integrate. This key should then be added to every request as a request header named 'auth-token' (preferred), or as a query parameter named 'auth-token'.  ## Endpoint  API endpoint is https://api.feedback.eu.pendo.io / https://api.feedback.us.pendo.io depending where your datacenter is located.  ## Notes  API endpoints are being added to this documentation as needed by customers. If you don't see an endpoint you need please contact support and if it exists we'll publish the docs here. The 'try it out' feature on this documentation page will probably be blocked by your browser because the Access-Control-Allow-Origin header has its value set by the Feedback server depending on your hostname.  ## Generating client code  This documentation is automatically generated from an OpenAPI spec available [here](http://apidoc.receptive.io/receptive.swagger.json). You can use Swagger to auto-generate API client code in many languages using the [Swagger Editor](http://editor.swagger.io/#/)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@receptive.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PendoFeedbackApi);
  }
}(this, function(expect, PendoFeedbackApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PendoFeedbackApi.Feature();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Feature', function() {
    it('should create an instance of Feature', function() {
      // uncomment below and update the code to test Feature
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be.a(PendoFeedbackApi.Feature);
    });

    it('should have the property appUrl (base name: "app_url")', function() {
      // uncomment below and update the code to test the property appUrl
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property createdByUserId (base name: "created_by_user_id")', function() {
      // uncomment below and update the code to test the property createdByUserId
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property declinedAt (base name: "declined_at")', function() {
      // uncomment below and update the code to test the property declinedAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property developingAt (base name: "developing_at")', function() {
      // uncomment below and update the code to test the property developingAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property effort (base name: "effort")', function() {
      // uncomment below and update the code to test the property effort
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property formEntry (base name: "form_entry")', function() {
      // uncomment below and update the code to test the property formEntry
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property isPrivate (base name: "is_private")', function() {
      // uncomment below and update the code to test the property isPrivate
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property mergedToFeatureId (base name: "merged_to_feature_id")', function() {
      // uncomment below and update the code to test the property mergedToFeatureId
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property plannedAt (base name: "planned_at")', function() {
      // uncomment below and update the code to test the property plannedAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property products (base name: "products")', function() {
      // uncomment below and update the code to test the property products
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property releasedAt (base name: "released_at")', function() {
      // uncomment below and update the code to test the property releasedAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property resolution (base name: "resolution")', function() {
      // uncomment below and update the code to test the property resolution
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property resolvedByUserId (base name: "resolved_by_user_id")', function() {
      // uncomment below and update the code to test the property resolvedByUserId
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property statusChangedAt (base name: "status_changed_at")', function() {
      // uncomment below and update the code to test the property statusChangedAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property updatedByUserId (base name: "updated_by_user_id")', function() {
      // uncomment below and update the code to test the property updatedByUserId
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property uploads (base name: "uploads")', function() {
      // uncomment below and update the code to test the property uploads
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property vendorId (base name: "vendor_id")', function() {
      // uncomment below and update the code to test the property vendorId
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property viewCount (base name: "view_count")', function() {
      // uncomment below and update the code to test the property viewCount
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

    it('should have the property waitingAt (base name: "waiting_at")', function() {
      // uncomment below and update the code to test the property waitingAt
      //var instance = new PendoFeedbackApi.Feature();
      //expect(instance).to.be();
    });

  });

}));
