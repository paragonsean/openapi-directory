# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Vote(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, feature_id: int=None, quantity: int=None, updated_at: str=None, user_id: int=None):
        """Vote - a model defined in OpenAPI

        :param created_at: The created_at of this Vote.
        :param feature_id: The feature_id of this Vote.
        :param quantity: The quantity of this Vote.
        :param updated_at: The updated_at of this Vote.
        :param user_id: The user_id of this Vote.
        """
        self.openapi_types = {
            'created_at': str,
            'feature_id': int,
            'quantity': int,
            'updated_at': str,
            'user_id': int
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'feature_id': 'feature_id',
            'quantity': 'quantity',
            'updated_at': 'updated_at',
            'user_id': 'user_id'
        }

        self._created_at = created_at
        self._feature_id = feature_id
        self._quantity = quantity
        self._updated_at = updated_at
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Vote':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Vote of this Vote.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Vote.


        :return: The created_at of this Vote.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Vote.


        :param created_at: The created_at of this Vote.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def feature_id(self):
        """Gets the feature_id of this Vote.


        :return: The feature_id of this Vote.
        :rtype: int
        """
        return self._feature_id

    @feature_id.setter
    def feature_id(self, feature_id):
        """Sets the feature_id of this Vote.


        :param feature_id: The feature_id of this Vote.
        :type feature_id: int
        """

        self._feature_id = feature_id

    @property
    def quantity(self):
        """Gets the quantity of this Vote.

        A negative number indicates that the User has indicated \"Not Interested\" in a Features. Between 0 and 1000000 is the User's current prioritization of the Feature.

        :return: The quantity of this Vote.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Vote.

        A negative number indicates that the User has indicated \"Not Interested\" in a Features. Between 0 and 1000000 is the User's current prioritization of the Feature.

        :param quantity: The quantity of this Vote.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def updated_at(self):
        """Gets the updated_at of this Vote.


        :return: The updated_at of this Vote.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Vote.


        :param updated_at: The updated_at of this Vote.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def user_id(self):
        """Gets the user_id of this Vote.


        :return: The user_id of this Vote.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Vote.


        :param user_id: The user_id of this Vote.
        :type user_id: int
        """

        self._user_id = user_id
