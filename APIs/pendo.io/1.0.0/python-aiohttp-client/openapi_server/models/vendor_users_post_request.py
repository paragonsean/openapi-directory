# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VendorUsersPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, external_id: str=None, full_name: str=None, permission_group_id: float=None, team: str=None):
        """VendorUsersPostRequest - a model defined in OpenAPI

        :param email: The email of this VendorUsersPostRequest.
        :param external_id: The external_id of this VendorUsersPostRequest.
        :param full_name: The full_name of this VendorUsersPostRequest.
        :param permission_group_id: The permission_group_id of this VendorUsersPostRequest.
        :param team: The team of this VendorUsersPostRequest.
        """
        self.openapi_types = {
            'email': str,
            'external_id': str,
            'full_name': str,
            'permission_group_id': float,
            'team': str
        }

        self.attribute_map = {
            'email': 'email',
            'external_id': 'external_id',
            'full_name': 'full_name',
            'permission_group_id': 'permission_group_id',
            'team': 'team'
        }

        self._email = email
        self._external_id = external_id
        self._full_name = full_name
        self._permission_group_id = permission_group_id
        self._team = team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VendorUsersPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _vendor_users_post_request of this VendorUsersPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this VendorUsersPostRequest.


        :return: The email of this VendorUsersPostRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this VendorUsersPostRequest.


        :param email: The email of this VendorUsersPostRequest.
        :type email: str
        """

        self._email = email

    @property
    def external_id(self):
        """Gets the external_id of this VendorUsersPostRequest.


        :return: The external_id of this VendorUsersPostRequest.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this VendorUsersPostRequest.


        :param external_id: The external_id of this VendorUsersPostRequest.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def full_name(self):
        """Gets the full_name of this VendorUsersPostRequest.


        :return: The full_name of this VendorUsersPostRequest.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this VendorUsersPostRequest.


        :param full_name: The full_name of this VendorUsersPostRequest.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def permission_group_id(self):
        """Gets the permission_group_id of this VendorUsersPostRequest.


        :return: The permission_group_id of this VendorUsersPostRequest.
        :rtype: float
        """
        return self._permission_group_id

    @permission_group_id.setter
    def permission_group_id(self, permission_group_id):
        """Sets the permission_group_id of this VendorUsersPostRequest.


        :param permission_group_id: The permission_group_id of this VendorUsersPostRequest.
        :type permission_group_id: float
        """

        self._permission_group_id = permission_group_id

    @property
    def team(self):
        """Gets the team of this VendorUsersPostRequest.

        A comma seperated list of teams the user belongs to

        :return: The team of this VendorUsersPostRequest.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this VendorUsersPostRequest.

        A comma seperated list of teams the user belongs to

        :param team: The team of this VendorUsersPostRequest.
        :type team: str
        """

        self._team = team
