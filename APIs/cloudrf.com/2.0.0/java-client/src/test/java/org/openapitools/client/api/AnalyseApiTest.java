/*
 * Cloud-RF API
 * Use this JSON API to build and test radio links for any radio, anywhere. Authenticate with your API2.0 key in the request header as key
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@cloudrf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AnalyseApi
 */
@Disabled
public class AnalyseApiTest {

    private final AnalyseApi api = new AnalyseApi();

    /**
     * Find the best server for overlapping coverage
     *
     * Merge and analyse sites within a network channel to determine the best server at a given location. Each site will be dynamically allocated a monochrome colour from a palette and the strongest signal promoted at a given location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interferenceTest() throws ApiException {
        String network = null;
        String name = null;
        api.interference(network, name);
        // TODO: test validations
    }

    /**
     * Merge sites into a super layer.
     *
     * A merge of &#39;area&#39; calculations for a network to create a single super layer. Stronger signals are promoted over weaker ones. The same colour key must be used.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meshTest() throws ApiException {
        String network = null;
        String name = null;
        api.mesh(network, name);
        // TODO: test validations
    }

    /**
     * Find the best server for somewhere
     *
     * Query your network to find the best server(s) for a given receiver/customer location. A previously generated network is required.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkTest() throws ApiException {
        String net = null;
        String nam = null;
        Float lat = null;
        Float lon = null;
        Integer alt = null;
        Float rxg = null;
        api.network(net, nam, lat, lon, alt, rxg);
        // TODO: test validations
    }

}
