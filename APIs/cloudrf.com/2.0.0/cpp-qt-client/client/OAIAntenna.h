/**
 * Cloud-RF API
 * Use this JSON API to build and test radio links for any radio, anywhere. Authenticate with your API2.0 key in the request header as key
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@cloudrf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAntenna.h
 *
 * 
 */

#ifndef OAIAntenna_H
#define OAIAntenna_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAntenna : public OAIObject {
public:
    OAIAntenna();
    OAIAntenna(QString json);
    ~OAIAntenna() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAnt() const;
    void setAnt(const qint32 &ant);
    bool is_ant_Set() const;
    bool is_ant_Valid() const;

    qint32 getAzi() const;
    void setAzi(const qint32 &azi);
    bool is_azi_Set() const;
    bool is_azi_Valid() const;

    qint32 getHbw() const;
    void setHbw(const qint32 &hbw);
    bool is_hbw_Set() const;
    bool is_hbw_Valid() const;

    QString getPol() const;
    void setPol(const QString &pol);
    bool is_pol_Set() const;
    bool is_pol_Valid() const;

    float getTlt() const;
    void setTlt(const float &tlt);
    bool is_tlt_Set() const;
    bool is_tlt_Valid() const;

    float getTxg() const;
    void setTxg(const float &txg);
    bool is_txg_Set() const;
    bool is_txg_Valid() const;

    float getTxl() const;
    void setTxl(const float &txl);
    bool is_txl_Set() const;
    bool is_txl_Valid() const;

    qint32 getVbw() const;
    void setVbw(const qint32 &vbw);
    bool is_vbw_Set() const;
    bool is_vbw_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ant;
    bool m_ant_isSet;
    bool m_ant_isValid;

    qint32 m_azi;
    bool m_azi_isSet;
    bool m_azi_isValid;

    qint32 m_hbw;
    bool m_hbw_isSet;
    bool m_hbw_isValid;

    QString m_pol;
    bool m_pol_isSet;
    bool m_pol_isValid;

    float m_tlt;
    bool m_tlt_isSet;
    bool m_tlt_isValid;

    float m_txg;
    bool m_txg_isSet;
    bool m_txg_isValid;

    float m_txl;
    bool m_txl_isSet;
    bool m_txl_isValid;

    qint32 m_vbw;
    bool m_vbw_isSet;
    bool m_vbw_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAntenna)

#endif // OAIAntenna_H
