/**
 * Cloud-RF API
 * Use this JSON API to build and test radio links for any radio, anywhere. Authenticate with your API2.0 key in the request header as key
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@cloudrf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddClutterRequest from './model/AddClutterRequest';
import Antenna from './model/Antenna';
import AreaRequest from './model/AreaRequest';
import Environment from './model/Environment';
import Feature from './model/Feature';
import Model from './model/Model';
import Output from './model/Output';
import PathRequest from './model/PathRequest';
import Point from './model/Point';
import PointsRequest from './model/PointsRequest';
import Receiver from './model/Receiver';
import Transmitter from './model/Transmitter';
import AnalyseApi from './api/AnalyseApi';
import CreateApi from './api/CreateApi';
import ManageApi from './api/ManageApi';


/**
* Use this JSON API to build and test radio links for any radio, anywhere. Authenticate with your API2.0 key in the request header as key.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudRfApi = require('index'); // See note below*.
* var xxxSvc = new CloudRfApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudRfApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudRfApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudRfApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddClutterRequest model constructor.
     * @property {module:model/AddClutterRequest}
     */
    AddClutterRequest,

    /**
     * The Antenna model constructor.
     * @property {module:model/Antenna}
     */
    Antenna,

    /**
     * The AreaRequest model constructor.
     * @property {module:model/AreaRequest}
     */
    AreaRequest,

    /**
     * The Environment model constructor.
     * @property {module:model/Environment}
     */
    Environment,

    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature,

    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model,

    /**
     * The Output model constructor.
     * @property {module:model/Output}
     */
    Output,

    /**
     * The PathRequest model constructor.
     * @property {module:model/PathRequest}
     */
    PathRequest,

    /**
     * The Point model constructor.
     * @property {module:model/Point}
     */
    Point,

    /**
     * The PointsRequest model constructor.
     * @property {module:model/PointsRequest}
     */
    PointsRequest,

    /**
     * The Receiver model constructor.
     * @property {module:model/Receiver}
     */
    Receiver,

    /**
     * The Transmitter model constructor.
     * @property {module:model/Transmitter}
     */
    Transmitter,

    /**
    * The AnalyseApi service constructor.
    * @property {module:api/AnalyseApi}
    */
    AnalyseApi,

    /**
    * The CreateApi service constructor.
    * @property {module:api/CreateApi}
    */
    CreateApi,

    /**
    * The ManageApi service constructor.
    * @property {module:api/ManageApi}
    */
    ManageApi
};
