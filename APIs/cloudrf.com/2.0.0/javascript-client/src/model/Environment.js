/**
 * Cloud-RF API
 * Use this JSON API to build and test radio links for any radio, anywhere. Authenticate with your API2.0 key in the request header as key
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@cloudrf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Environment model module.
 * @module model/Environment
 * @version 2.0.0
 */
class Environment {
    /**
     * Constructs a new <code>Environment</code>.
     * @alias module:model/Environment
     */
    constructor() { 
        
        Environment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['cll'] = 2;
        obj['clm'] = 1;
        obj['mat'] = 0.25;
    }

    /**
     * Constructs a <code>Environment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Environment} obj Optional instance to populate.
     * @return {module:model/Environment} The populated <code>Environment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Environment();

            if (data.hasOwnProperty('cll')) {
                obj['cll'] = ApiClient.convertToType(data['cll'], 'Number');
            }
            if (data.hasOwnProperty('clm')) {
                obj['clm'] = ApiClient.convertToType(data['clm'], 'Number');
            }
            if (data.hasOwnProperty('mat')) {
                obj['mat'] = ApiClient.convertToType(data['mat'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Environment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Environment</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Clutter loss. 0=None/DSM only, 1=Hard / LOS mode, 2=Soft / NLOS mode
 * @member {Number} cll
 * @default 2
 */
Environment.prototype['cll'] = 2;

/**
 * Clutter mode. 0=None/DSM only, 1=System & custom clutter, 2=Custom clutter only
 * @member {Number} clm
 * @default 1
 */
Environment.prototype['clm'] = 1;

/**
 * Clutter attenuation override in dB/m based on a tree block OR hollow building. Light foliage=0.1dB/m, brick=1.0dB/m, concrete=5dB/m
 * @member {Number} mat
 * @default 0.25
 */
Environment.prototype['mat'] = 0.25;






export default Environment;

