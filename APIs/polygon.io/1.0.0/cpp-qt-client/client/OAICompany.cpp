/**
 * Polygon
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompany.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompany::OAICompany(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompany::OAICompany() {
    this->initializeModel();
}

OAICompany::~OAICompany() {}

void OAICompany::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_exchange_isSet = false;
    m_exchange_isValid = false;

    m_industry_isSet = false;
    m_industry_isValid = false;

    m_marketcap_isSet = false;
    m_marketcap_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sector_isSet = false;
    m_sector_isValid = false;

    m_symbol_isSet = false;
    m_symbol_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAICompany::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompany::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_exchange_isValid = ::OpenAPI::fromJsonValue(m_exchange, json[QString("exchange")]);
    m_exchange_isSet = !json[QString("exchange")].isNull() && m_exchange_isValid;

    m_industry_isValid = ::OpenAPI::fromJsonValue(m_industry, json[QString("industry")]);
    m_industry_isSet = !json[QString("industry")].isNull() && m_industry_isValid;

    m_marketcap_isValid = ::OpenAPI::fromJsonValue(m_marketcap, json[QString("marketcap")]);
    m_marketcap_isSet = !json[QString("marketcap")].isNull() && m_marketcap_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sector_isValid = ::OpenAPI::fromJsonValue(m_sector, json[QString("sector")]);
    m_sector_isSet = !json[QString("sector")].isNull() && m_sector_isValid;

    m_symbol_isValid = ::OpenAPI::fromJsonValue(m_symbol, json[QString("symbol")]);
    m_symbol_isSet = !json[QString("symbol")].isNull() && m_symbol_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAICompany::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompany::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_exchange_isSet) {
        obj.insert(QString("exchange"), ::OpenAPI::toJsonValue(m_exchange));
    }
    if (m_industry_isSet) {
        obj.insert(QString("industry"), ::OpenAPI::toJsonValue(m_industry));
    }
    if (m_marketcap_isSet) {
        obj.insert(QString("marketcap"), ::OpenAPI::toJsonValue(m_marketcap));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sector_isSet) {
        obj.insert(QString("sector"), ::OpenAPI::toJsonValue(m_sector));
    }
    if (m_symbol_isSet) {
        obj.insert(QString("symbol"), ::OpenAPI::toJsonValue(m_symbol));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

QString OAICompany::getCountry() const {
    return m_country;
}
void OAICompany::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAICompany::is_country_Set() const{
    return m_country_isSet;
}

bool OAICompany::is_country_Valid() const{
    return m_country_isValid;
}

QString OAICompany::getExchange() const {
    return m_exchange;
}
void OAICompany::setExchange(const QString &exchange) {
    m_exchange = exchange;
    m_exchange_isSet = true;
}

bool OAICompany::is_exchange_Set() const{
    return m_exchange_isSet;
}

bool OAICompany::is_exchange_Valid() const{
    return m_exchange_isValid;
}

QString OAICompany::getIndustry() const {
    return m_industry;
}
void OAICompany::setIndustry(const QString &industry) {
    m_industry = industry;
    m_industry_isSet = true;
}

bool OAICompany::is_industry_Set() const{
    return m_industry_isSet;
}

bool OAICompany::is_industry_Valid() const{
    return m_industry_isValid;
}

double OAICompany::getMarketcap() const {
    return m_marketcap;
}
void OAICompany::setMarketcap(const double &marketcap) {
    m_marketcap = marketcap;
    m_marketcap_isSet = true;
}

bool OAICompany::is_marketcap_Set() const{
    return m_marketcap_isSet;
}

bool OAICompany::is_marketcap_Valid() const{
    return m_marketcap_isValid;
}

QString OAICompany::getName() const {
    return m_name;
}
void OAICompany::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICompany::is_name_Set() const{
    return m_name_isSet;
}

bool OAICompany::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICompany::getSector() const {
    return m_sector;
}
void OAICompany::setSector(const QString &sector) {
    m_sector = sector;
    m_sector_isSet = true;
}

bool OAICompany::is_sector_Set() const{
    return m_sector_isSet;
}

bool OAICompany::is_sector_Valid() const{
    return m_sector_isValid;
}

QString OAICompany::getSymbol() const {
    return m_symbol;
}
void OAICompany::setSymbol(const QString &symbol) {
    m_symbol = symbol;
    m_symbol_isSet = true;
}

bool OAICompany::is_symbol_Set() const{
    return m_symbol_isSet;
}

bool OAICompany::is_symbol_Valid() const{
    return m_symbol_isValid;
}

QDateTime OAICompany::getUpdated() const {
    return m_updated;
}
void OAICompany::setUpdated(const QDateTime &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAICompany::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAICompany::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAICompany::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketcap_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sector_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_symbol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompany::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
