/**
 * Polygon
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForex.h
 *
 * 
 */

#ifndef OAIForex_H
#define OAIForex_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForex : public OAIObject {
public:
    OAIForex();
    OAIForex(QString json);
    ~OAIForex() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getA() const;
    void setA(const qint32 &a);
    bool is_a_Set() const;
    bool is_a_Valid() const;

    qint32 getB() const;
    void setB(const qint32 &b);
    bool is_b_Set() const;
    bool is_b_Valid() const;

    qint32 getT() const;
    void setT(const qint32 &t);
    bool is_t_Set() const;
    bool is_t_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_a;
    bool m_a_isSet;
    bool m_a_isValid;

    qint32 m_b;
    bool m_b_isSet;
    bool m_b_isValid;

    qint32 m_t;
    bool m_t_isSet;
    bool m_t_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForex)

#endif // OAIForex_H
