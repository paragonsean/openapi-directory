/*
 * Polygon
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Company;
import org.openapitools.client.model.Error;
import java.time.LocalDate;
import org.openapitools.client.model.V1HistoricAggSizeSymbolDateGet200Response;
import org.openapitools.client.model.V1HistoricQuotesSymbolDateGet200Response;
import org.openapitools.client.model.V1HistoricTradesSymbolDateGet200Response;
import org.openapitools.client.model.V1LastQuoteStocksSymbolGet200Response;
import org.openapitools.client.model.V1LastStocksSymbolGet200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StocksApi
 */
@Disabled
public class StocksApiTest {

    private final StocksApi api = new StocksApi();

    /**
     * Available Companies
     *
     * Get a list of the traded companies that polygon.io streams. Company includes some details about the company which we hope to add more to soon. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1CompaniesGetTest() throws ApiException {
        String sort = null;
        BigDecimal perpage = null;
        BigDecimal page = null;
        List<Company> response = api.v1CompaniesGet(sort, perpage, page);
        // TODO: test validations
    }

    /**
     * Historic Aggregates
     *
     * Get historic aggregations for a symbol. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1HistoricAggSizeSymbolDateGetTest() throws ApiException {
        String size = null;
        String symbol = null;
        LocalDate date = null;
        Integer offset = null;
        Integer limit = null;
        V1HistoricAggSizeSymbolDateGet200Response response = api.v1HistoricAggSizeSymbolDateGet(size, symbol, date, offset, limit);
        // TODO: test validations
    }

    /**
     * Historic Quotes
     *
     * Get historic quotes for a symbol. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1HistoricQuotesSymbolDateGetTest() throws ApiException {
        String symbol = null;
        LocalDate date = null;
        Integer offset = null;
        Integer limit = null;
        V1HistoricQuotesSymbolDateGet200Response response = api.v1HistoricQuotesSymbolDateGet(symbol, date, offset, limit);
        // TODO: test validations
    }

    /**
     * Historic Trades
     *
     * Get historic trades for a symbol. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1HistoricTradesSymbolDateGetTest() throws ApiException {
        String symbol = null;
        LocalDate date = null;
        Integer offset = null;
        Integer limit = null;
        V1HistoricTradesSymbolDateGet200Response response = api.v1HistoricTradesSymbolDateGet(symbol, date, offset, limit);
        // TODO: test validations
    }

    /**
     * Last Quote for a Symbol
     *
     * Get the last quote tick for a given stock. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1LastQuoteStocksSymbolGetTest() throws ApiException {
        String symbol = null;
        V1LastQuoteStocksSymbolGet200Response response = api.v1LastQuoteStocksSymbolGet(symbol);
        // TODO: test validations
    }

    /**
     * Last Trade for a Symbol
     *
     * Get the last trade for a given stock. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1LastStocksSymbolGetTest() throws ApiException {
        String symbol = null;
        V1LastStocksSymbolGet200Response response = api.v1LastStocksSymbolGet(symbol);
        // TODO: test validations
    }

}
