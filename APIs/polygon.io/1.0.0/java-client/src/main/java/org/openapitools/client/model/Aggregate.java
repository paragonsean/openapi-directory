/*
 * Polygon
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Aggregate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:49.180080-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Aggregate {
  public static final String SERIALIZED_NAME_C = "c";
  @SerializedName(SERIALIZED_NAME_C)
  private Integer c;

  public static final String SERIALIZED_NAME_H = "h";
  @SerializedName(SERIALIZED_NAME_H)
  private Integer h;

  public static final String SERIALIZED_NAME_K = "k";
  @SerializedName(SERIALIZED_NAME_K)
  private Integer k;

  public static final String SERIALIZED_NAME_L = "l";
  @SerializedName(SERIALIZED_NAME_L)
  private Integer l;

  public static final String SERIALIZED_NAME_O = "o";
  @SerializedName(SERIALIZED_NAME_O)
  private Integer o;

  public static final String SERIALIZED_NAME_T = "t";
  @SerializedName(SERIALIZED_NAME_T)
  private Integer t;

  public static final String SERIALIZED_NAME_V = "v";
  @SerializedName(SERIALIZED_NAME_V)
  private Integer v;

  public Aggregate() {
  }

  public Aggregate c(Integer c) {
    this.c = c;
    return this;
  }

  /**
   * Close price
   * @return c
   */
  @javax.annotation.Nullable
  public Integer getC() {
    return c;
  }

  public void setC(Integer c) {
    this.c = c;
  }


  public Aggregate h(Integer h) {
    this.h = h;
    return this;
  }

  /**
   * High price
   * @return h
   */
  @javax.annotation.Nullable
  public Integer getH() {
    return h;
  }

  public void setH(Integer h) {
    this.h = h;
  }


  public Aggregate k(Integer k) {
    this.k = k;
    return this;
  }

  /**
   * Transactions ( 1 transaction contains X shares exchanged )
   * @return k
   */
  @javax.annotation.Nullable
  public Integer getK() {
    return k;
  }

  public void setK(Integer k) {
    this.k = k;
  }


  public Aggregate l(Integer l) {
    this.l = l;
    return this;
  }

  /**
   * Low price
   * @return l
   */
  @javax.annotation.Nullable
  public Integer getL() {
    return l;
  }

  public void setL(Integer l) {
    this.l = l;
  }


  public Aggregate o(Integer o) {
    this.o = o;
    return this;
  }

  /**
   * Open price
   * @return o
   */
  @javax.annotation.Nullable
  public Integer getO() {
    return o;
  }

  public void setO(Integer o) {
    this.o = o;
  }


  public Aggregate t(Integer t) {
    this.t = t;
    return this;
  }

  /**
   * Timestamp of this aggregation
   * @return t
   */
  @javax.annotation.Nullable
  public Integer getT() {
    return t;
  }

  public void setT(Integer t) {
    this.t = t;
  }


  public Aggregate v(Integer v) {
    this.v = v;
    return this;
  }

  /**
   * Total Volume of all trades ( total shares exchanged )
   * @return v
   */
  @javax.annotation.Nullable
  public Integer getV() {
    return v;
  }

  public void setV(Integer v) {
    this.v = v;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Aggregate aggregate = (Aggregate) o;
    return Objects.equals(this.c, aggregate.c) &&
        Objects.equals(this.h, aggregate.h) &&
        Objects.equals(this.k, aggregate.k) &&
        Objects.equals(this.l, aggregate.l) &&
        Objects.equals(this.o, aggregate.o) &&
        Objects.equals(this.t, aggregate.t) &&
        Objects.equals(this.v, aggregate.v);
  }

  @Override
  public int hashCode() {
    return Objects.hash(c, h, k, l, o, t, v);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Aggregate {\n");
    sb.append("    c: ").append(toIndentedString(c)).append("\n");
    sb.append("    h: ").append(toIndentedString(h)).append("\n");
    sb.append("    k: ").append(toIndentedString(k)).append("\n");
    sb.append("    l: ").append(toIndentedString(l)).append("\n");
    sb.append("    o: ").append(toIndentedString(o)).append("\n");
    sb.append("    t: ").append(toIndentedString(t)).append("\n");
    sb.append("    v: ").append(toIndentedString(v)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("c");
    openapiFields.add("h");
    openapiFields.add("k");
    openapiFields.add("l");
    openapiFields.add("o");
    openapiFields.add("t");
    openapiFields.add("v");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Aggregate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Aggregate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Aggregate is not found in the empty JSON string", Aggregate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Aggregate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Aggregate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Aggregate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Aggregate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Aggregate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Aggregate.class));

       return (TypeAdapter<T>) new TypeAdapter<Aggregate>() {
           @Override
           public void write(JsonWriter out, Aggregate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Aggregate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Aggregate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Aggregate
   * @throws IOException if the JSON string is invalid with respect to Aggregate
   */
  public static Aggregate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Aggregate.class);
  }

  /**
   * Convert an instance of Aggregate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

