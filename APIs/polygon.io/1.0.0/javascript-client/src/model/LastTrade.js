/**
 * Polygon
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LastTrade model module.
 * @module model/LastTrade
 * @version 1.0.0
 */
class LastTrade {
    /**
     * Constructs a new <code>LastTrade</code>.
     * @alias module:model/LastTrade
     */
    constructor() { 
        
        LastTrade.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LastTrade</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LastTrade} obj Optional instance to populate.
     * @return {module:model/LastTrade} The populated <code>LastTrade</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LastTrade();

            if (data.hasOwnProperty('cond1')) {
                obj['cond1'] = ApiClient.convertToType(data['cond1'], 'Number');
            }
            if (data.hasOwnProperty('cond2')) {
                obj['cond2'] = ApiClient.convertToType(data['cond2'], 'Number');
            }
            if (data.hasOwnProperty('cond3')) {
                obj['cond3'] = ApiClient.convertToType(data['cond3'], 'Number');
            }
            if (data.hasOwnProperty('cond4')) {
                obj['cond4'] = ApiClient.convertToType(data['cond4'], 'Number');
            }
            if (data.hasOwnProperty('exchange')) {
                obj['exchange'] = ApiClient.convertToType(data['exchange'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LastTrade</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LastTrade</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Condition 1 of the trade
 * @member {Number} cond1
 */
LastTrade.prototype['cond1'] = undefined;

/**
 * Condition 2 of the trade
 * @member {Number} cond2
 */
LastTrade.prototype['cond2'] = undefined;

/**
 * Condition 3 of the trade
 * @member {Number} cond3
 */
LastTrade.prototype['cond3'] = undefined;

/**
 * Condition 4 of the trade
 * @member {Number} cond4
 */
LastTrade.prototype['cond4'] = undefined;

/**
 * Exchange this trade happened on
 * @member {Number} exchange
 */
LastTrade.prototype['exchange'] = undefined;

/**
 * Price of the trade
 * @member {Number} price
 */
LastTrade.prototype['price'] = undefined;

/**
 * Size of this trade
 * @member {Number} size
 */
LastTrade.prototype['size'] = undefined;

/**
 * Timestamp of this trade
 * @member {Number} timestamp
 */
LastTrade.prototype['timestamp'] = undefined;






export default LastTrade;

