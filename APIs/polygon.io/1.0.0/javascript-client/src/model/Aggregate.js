/**
 * Polygon
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Aggregate model module.
 * @module model/Aggregate
 * @version 1.0.0
 */
class Aggregate {
    /**
     * Constructs a new <code>Aggregate</code>.
     * @alias module:model/Aggregate
     */
    constructor() { 
        
        Aggregate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Aggregate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Aggregate} obj Optional instance to populate.
     * @return {module:model/Aggregate} The populated <code>Aggregate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Aggregate();

            if (data.hasOwnProperty('c')) {
                obj['c'] = ApiClient.convertToType(data['c'], 'Number');
            }
            if (data.hasOwnProperty('h')) {
                obj['h'] = ApiClient.convertToType(data['h'], 'Number');
            }
            if (data.hasOwnProperty('k')) {
                obj['k'] = ApiClient.convertToType(data['k'], 'Number');
            }
            if (data.hasOwnProperty('l')) {
                obj['l'] = ApiClient.convertToType(data['l'], 'Number');
            }
            if (data.hasOwnProperty('o')) {
                obj['o'] = ApiClient.convertToType(data['o'], 'Number');
            }
            if (data.hasOwnProperty('t')) {
                obj['t'] = ApiClient.convertToType(data['t'], 'Number');
            }
            if (data.hasOwnProperty('v')) {
                obj['v'] = ApiClient.convertToType(data['v'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Aggregate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Aggregate</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Close price
 * @member {Number} c
 */
Aggregate.prototype['c'] = undefined;

/**
 * High price
 * @member {Number} h
 */
Aggregate.prototype['h'] = undefined;

/**
 * Transactions ( 1 transaction contains X shares exchanged )
 * @member {Number} k
 */
Aggregate.prototype['k'] = undefined;

/**
 * Low price
 * @member {Number} l
 */
Aggregate.prototype['l'] = undefined;

/**
 * Open price
 * @member {Number} o
 */
Aggregate.prototype['o'] = undefined;

/**
 * Timestamp of this aggregation
 * @member {Number} t
 */
Aggregate.prototype['t'] = undefined;

/**
 * Total Volume of all trades ( total shares exchanged )
 * @member {Number} v
 */
Aggregate.prototype['v'] = undefined;






export default Aggregate;

