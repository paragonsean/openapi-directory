# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregate import Aggregate
from openapi_server import util


class V1HistoricAggSizeSymbolDateGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: date=None, ms_latency: int=None, status: str=None, symbol: str=None, ticks: List[Aggregate]=None):
        """V1HistoricAggSizeSymbolDateGet200Response - a model defined in OpenAPI

        :param day: The day of this V1HistoricAggSizeSymbolDateGet200Response.
        :param ms_latency: The ms_latency of this V1HistoricAggSizeSymbolDateGet200Response.
        :param status: The status of this V1HistoricAggSizeSymbolDateGet200Response.
        :param symbol: The symbol of this V1HistoricAggSizeSymbolDateGet200Response.
        :param ticks: The ticks of this V1HistoricAggSizeSymbolDateGet200Response.
        """
        self.openapi_types = {
            'day': date,
            'ms_latency': int,
            'status': str,
            'symbol': str,
            'ticks': List[Aggregate]
        }

        self.attribute_map = {
            'day': 'day',
            'ms_latency': 'msLatency',
            'status': 'status',
            'symbol': 'symbol',
            'ticks': 'ticks'
        }

        self._day = day
        self._ms_latency = ms_latency
        self._status = status
        self._symbol = symbol
        self._ticks = ticks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1HistoricAggSizeSymbolDateGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _v1_historic_agg__size___symbol___date__get_200_response of this V1HistoricAggSizeSymbolDateGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this V1HistoricAggSizeSymbolDateGet200Response.

        Date that was evaluated from the request

        :return: The day of this V1HistoricAggSizeSymbolDateGet200Response.
        :rtype: date
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this V1HistoricAggSizeSymbolDateGet200Response.

        Date that was evaluated from the request

        :param day: The day of this V1HistoricAggSizeSymbolDateGet200Response.
        :type day: date
        """

        self._day = day

    @property
    def ms_latency(self):
        """Gets the ms_latency of this V1HistoricAggSizeSymbolDateGet200Response.

        Milliseconds of latency for the query results

        :return: The ms_latency of this V1HistoricAggSizeSymbolDateGet200Response.
        :rtype: int
        """
        return self._ms_latency

    @ms_latency.setter
    def ms_latency(self, ms_latency):
        """Sets the ms_latency of this V1HistoricAggSizeSymbolDateGet200Response.

        Milliseconds of latency for the query results

        :param ms_latency: The ms_latency of this V1HistoricAggSizeSymbolDateGet200Response.
        :type ms_latency: int
        """

        self._ms_latency = ms_latency

    @property
    def status(self):
        """Gets the status of this V1HistoricAggSizeSymbolDateGet200Response.

        Status of this requests response

        :return: The status of this V1HistoricAggSizeSymbolDateGet200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V1HistoricAggSizeSymbolDateGet200Response.

        Status of this requests response

        :param status: The status of this V1HistoricAggSizeSymbolDateGet200Response.
        :type status: str
        """

        self._status = status

    @property
    def symbol(self):
        """Gets the symbol of this V1HistoricAggSizeSymbolDateGet200Response.

        Symbol that was evaluated from the request

        :return: The symbol of this V1HistoricAggSizeSymbolDateGet200Response.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this V1HistoricAggSizeSymbolDateGet200Response.

        Symbol that was evaluated from the request

        :param symbol: The symbol of this V1HistoricAggSizeSymbolDateGet200Response.
        :type symbol: str
        """

        self._symbol = symbol

    @property
    def ticks(self):
        """Gets the ticks of this V1HistoricAggSizeSymbolDateGet200Response.


        :return: The ticks of this V1HistoricAggSizeSymbolDateGet200Response.
        :rtype: List[Aggregate]
        """
        return self._ticks

    @ticks.setter
    def ticks(self, ticks):
        """Sets the ticks of this V1HistoricAggSizeSymbolDateGet200Response.


        :param ticks: The ticks of this V1HistoricAggSizeSymbolDateGet200Response.
        :type ticks: List[Aggregate]
        """

        self._ticks = ticks
