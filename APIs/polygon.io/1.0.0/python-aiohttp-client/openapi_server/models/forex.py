# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Forex(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a: int=None, b: int=None, t: int=None):
        """Forex - a model defined in OpenAPI

        :param a: The a of this Forex.
        :param b: The b of this Forex.
        :param t: The t of this Forex.
        """
        self.openapi_types = {
            'a': int,
            'b': int,
            't': int
        }

        self.attribute_map = {
            'a': 'a',
            'b': 'b',
            't': 't'
        }

        self._a = a
        self._b = b
        self._t = t

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Forex':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Forex of this Forex.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a(self):
        """Gets the a of this Forex.

        Ask price

        :return: The a of this Forex.
        :rtype: int
        """
        return self._a

    @a.setter
    def a(self, a):
        """Sets the a of this Forex.

        Ask price

        :param a: The a of this Forex.
        :type a: int
        """

        self._a = a

    @property
    def b(self):
        """Gets the b of this Forex.

        Bid price

        :return: The b of this Forex.
        :rtype: int
        """
        return self._b

    @b.setter
    def b(self, b):
        """Sets the b of this Forex.

        Bid price

        :param b: The b of this Forex.
        :type b: int
        """

        self._b = b

    @property
    def t(self):
        """Gets the t of this Forex.

        Timestamp of this trade

        :return: The t of this Forex.
        :rtype: int
        """
        return self._t

    @t.setter
    def t(self, t):
        """Sets the t of this Forex.

        Timestamp of this trade

        :param t: The t of this Forex.
        :type t: int
        """

        self._t = t
