# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LastForexQuote(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, askprice: float=None, bidprice: float=None, timestamp: int=None):
        """LastForexQuote - a model defined in OpenAPI

        :param askprice: The askprice of this LastForexQuote.
        :param bidprice: The bidprice of this LastForexQuote.
        :param timestamp: The timestamp of this LastForexQuote.
        """
        self.openapi_types = {
            'askprice': float,
            'bidprice': float,
            'timestamp': int
        }

        self.attribute_map = {
            'askprice': 'askprice',
            'bidprice': 'bidprice',
            'timestamp': 'timestamp'
        }

        self._askprice = askprice
        self._bidprice = bidprice
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LastForexQuote':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LastForexQuote of this LastForexQuote.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def askprice(self):
        """Gets the askprice of this LastForexQuote.

        Ask Price

        :return: The askprice of this LastForexQuote.
        :rtype: float
        """
        return self._askprice

    @askprice.setter
    def askprice(self, askprice):
        """Sets the askprice of this LastForexQuote.

        Ask Price

        :param askprice: The askprice of this LastForexQuote.
        :type askprice: float
        """

        self._askprice = askprice

    @property
    def bidprice(self):
        """Gets the bidprice of this LastForexQuote.

        Bid Price

        :return: The bidprice of this LastForexQuote.
        :rtype: float
        """
        return self._bidprice

    @bidprice.setter
    def bidprice(self, bidprice):
        """Sets the bidprice of this LastForexQuote.

        Bid Price

        :param bidprice: The bidprice of this LastForexQuote.
        :type bidprice: float
        """

        self._bidprice = bidprice

    @property
    def timestamp(self):
        """Gets the timestamp of this LastForexQuote.

        Timestamp of this trade

        :return: The timestamp of this LastForexQuote.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this LastForexQuote.

        Timestamp of this trade

        :param timestamp: The timestamp of this LastForexQuote.
        :type timestamp: int
        """

        self._timestamp = timestamp
