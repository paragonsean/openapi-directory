/**
 * Reverse Planning Permission API
 * Programmatic API access to the reversepp.com planning application database
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostProposalMultiProposalRequest model module.
 * @module model/PostProposalMultiProposalRequest
 * @version 1.0
 */
class PostProposalMultiProposalRequest {
    /**
     * Constructs a new <code>PostProposalMultiProposalRequest</code>.
     * @alias module:model/PostProposalMultiProposalRequest
     */
    constructor() { 
        
        PostProposalMultiProposalRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostProposalMultiProposalRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostProposalMultiProposalRequest} obj Optional instance to populate.
     * @return {module:model/PostProposalMultiProposalRequest} The populated <code>PostProposalMultiProposalRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostProposalMultiProposalRequest();

            if (data.hasOwnProperty('api-key')) {
                obj['api-key'] = ApiClient.convertToType(data['api-key'], 'String');
            }
            if (data.hasOwnProperty('key-word')) {
                obj['key-word'] = ApiClient.convertToType(data['key-word'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostProposalMultiProposalRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostProposalMultiProposalRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api-key'] && !(typeof data['api-key'] === 'string' || data['api-key'] instanceof String)) {
            throw new Error("Expected the field `api-key` to be a primitive type in the JSON string but got " + data['api-key']);
        }
        // ensure the json data is a string
        if (data['key-word'] && !(typeof data['key-word'] === 'string' || data['key-word'] instanceof String)) {
            throw new Error("Expected the field `key-word` to be a primitive type in the JSON string but got " + data['key-word']);
        }

        return true;
    }


}



/**
 * @member {String} api-key
 */
PostProposalMultiProposalRequest.prototype['api-key'] = undefined;

/**
 * @member {String} key-word
 */
PostProposalMultiProposalRequest.prototype['key-word'] = undefined;






export default PostProposalMultiProposalRequest;

