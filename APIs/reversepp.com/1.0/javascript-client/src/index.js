/**
 * Reverse Planning Permission API
 * Programmatic API access to the reversepp.com planning application database
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import PostApplicantSingleApplicantMultiRequest from './model/PostApplicantSingleApplicantMultiRequest';
import PostFreeEndPointFreeRequest from './model/PostFreeEndPointFreeRequest';
import PostPartialAddressMultiPartialAddressMultiRequest from './model/PostPartialAddressMultiPartialAddressMultiRequest';
import PostPostcodeMultiPostcodeMultiRequest from './model/PostPostcodeMultiPostcodeMultiRequest';
import PostProposalMultiProposalRequest from './model/PostProposalMultiProposalRequest';
import ReversePlanningPermissionAPIApi from './api/ReversePlanningPermissionAPIApi';


/**
* Programmatic API access to the reversepp.com planning application database.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ReversePlanningPermissionApi = require('index'); // See note below*.
* var xxxSvc = new ReversePlanningPermissionApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ReversePlanningPermissionApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ReversePlanningPermissionApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ReversePlanningPermissionApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The PostApplicantSingleApplicantMultiRequest model constructor.
     * @property {module:model/PostApplicantSingleApplicantMultiRequest}
     */
    PostApplicantSingleApplicantMultiRequest,

    /**
     * The PostFreeEndPointFreeRequest model constructor.
     * @property {module:model/PostFreeEndPointFreeRequest}
     */
    PostFreeEndPointFreeRequest,

    /**
     * The PostPartialAddressMultiPartialAddressMultiRequest model constructor.
     * @property {module:model/PostPartialAddressMultiPartialAddressMultiRequest}
     */
    PostPartialAddressMultiPartialAddressMultiRequest,

    /**
     * The PostPostcodeMultiPostcodeMultiRequest model constructor.
     * @property {module:model/PostPostcodeMultiPostcodeMultiRequest}
     */
    PostPostcodeMultiPostcodeMultiRequest,

    /**
     * The PostProposalMultiProposalRequest model constructor.
     * @property {module:model/PostProposalMultiProposalRequest}
     */
    PostProposalMultiProposalRequest,

    /**
    * The ReversePlanningPermissionAPIApi service constructor.
    * @property {module:api/ReversePlanningPermissionAPIApi}
    */
    ReversePlanningPermissionAPIApi
};
