/*
 * Reverse Planning Permission API
 * Programmatic API access to the reversepp.com planning application database
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PostApplicantSingleApplicantMultiRequest;
import org.openapitools.client.model.PostFreeEndPointFreeRequest;
import org.openapitools.client.model.PostPartialAddressMultiPartialAddressMultiRequest;
import org.openapitools.client.model.PostPostcodeMultiPostcodeMultiRequest;
import org.openapitools.client.model.PostProposalMultiProposalRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReversePlanningPermissionApiApi
 */
@Disabled
public class ReversePlanningPermissionApiApiTest {

    private final ReversePlanningPermissionApiApi api = new ReversePlanningPermissionApiApi();

    /**
     * Retrieve 50 planning applications for an applicant name (example: John Smith). Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postApplicantSingleApplicantMultiTest() throws ApiException {
        PostApplicantSingleApplicantMultiRequest payload = null;
        api.postApplicantSingleApplicantMulti(payload);
        // TODO: test validations
    }

    /**
     * Retrieve a single planning application for an applicant (example: John Smith). Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postApplicantSingleApplicantSingleTest() throws ApiException {
        PostApplicantSingleApplicantMultiRequest payload = null;
        api.postApplicantSingleApplicantSingle(payload);
        // TODO: test validations
    }

    /**
     * Retrieve 1 planning application for proposal key word (example: Swimming Pool). Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFreeEndPointFreeTest() throws ApiException {
        PostFreeEndPointFreeRequest payload = null;
        api.postFreeEndPointFree(payload);
        // TODO: test validations
    }

    /**
     * Retrieve a single planning application for a partial address (example: Station Road). Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postPartialAddresSinglePartialAddressSingleTest() throws ApiException {
        PostPartialAddressMultiPartialAddressMultiRequest payload = null;
        api.postPartialAddresSinglePartialAddressSingle(payload);
        // TODO: test validations
    }

    /**
     * Retrieve 50 planning applications for a partial address (example: Station Road). Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postPartialAddressMultiPartialAddressMultiTest() throws ApiException {
        PostPartialAddressMultiPartialAddressMultiRequest payload = null;
        api.postPartialAddressMultiPartialAddressMulti(payload);
        // TODO: test validations
    }

    /**
     * Retrieve 50 planning applications for a postcode. Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postPostcodeMultiPostcodeMultiTest() throws ApiException {
        PostPostcodeMultiPostcodeMultiRequest payload = null;
        api.postPostcodeMultiPostcodeMulti(payload);
        // TODO: test validations
    }

    /**
     * Retrieve a single planning application for a postcode. Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postPostcodeSinglePostcodeSingleTest() throws ApiException {
        PostPostcodeMultiPostcodeMultiRequest payload = null;
        api.postPostcodeSinglePostcodeSingle(payload);
        // TODO: test validations
    }

    /**
     * Retrieve 50 planning applications for proposal key word (example: Swimming Pool). Rate limit is 100/day;10/minute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postProposalMultiProposalTest() throws ApiException {
        PostProposalMultiProposalRequest payload = null;
        api.postProposalMultiProposal(payload);
        // TODO: test validations
    }

}
