# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Sort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, empty: bool=None, sorted: bool=None, unsorted: bool=None):
        """Sort - a model defined in OpenAPI

        :param empty: The empty of this Sort.
        :param sorted: The sorted of this Sort.
        :param unsorted: The unsorted of this Sort.
        """
        self.openapi_types = {
            'empty': bool,
            'sorted': bool,
            'unsorted': bool
        }

        self.attribute_map = {
            'empty': 'empty',
            'sorted': 'sorted',
            'unsorted': 'unsorted'
        }

        self._empty = empty
        self._sorted = sorted
        self._unsorted = unsorted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sort of this Sort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def empty(self):
        """Gets the empty of this Sort.


        :return: The empty of this Sort.
        :rtype: bool
        """
        return self._empty

    @empty.setter
    def empty(self, empty):
        """Sets the empty of this Sort.


        :param empty: The empty of this Sort.
        :type empty: bool
        """

        self._empty = empty

    @property
    def sorted(self):
        """Gets the sorted of this Sort.


        :return: The sorted of this Sort.
        :rtype: bool
        """
        return self._sorted

    @sorted.setter
    def sorted(self, sorted):
        """Sets the sorted of this Sort.


        :param sorted: The sorted of this Sort.
        :type sorted: bool
        """

        self._sorted = sorted

    @property
    def unsorted(self):
        """Gets the unsorted of this Sort.


        :return: The unsorted of this Sort.
        :rtype: bool
        """
        return self._unsorted

    @unsorted.setter
    def unsorted(self, unsorted):
        """Sets the unsorted of this Sort.


        :param unsorted: The unsorted of this Sort.
        :type unsorted: bool
        """

        self._unsorted = unsorted
