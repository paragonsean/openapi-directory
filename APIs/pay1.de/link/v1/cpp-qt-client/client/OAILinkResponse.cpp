/**
 * PAYONE Link API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@payone.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkResponse::OAILinkResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkResponse::OAILinkResponse() {
    this->initializeModel();
}

OAILinkResponse::~OAILinkResponse() {}

void OAILinkResponse::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_background_image_isSet = false;
    m_background_image_isValid = false;

    m_billing_isSet = false;
    m_billing_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_error_url_isSet = false;
    m_error_url_isValid = false;

    m_expiration_isSet = false;
    m_expiration_isValid = false;

    m_hash_isSet = false;
    m_hash_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_intent_isSet = false;
    m_intent_isValid = false;

    m_invoice_information_isSet = false;
    m_invoice_information_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_logo_isSet = false;
    m_logo_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_mode_isSet = false;
    m_mode_isValid = false;

    m_modified_isSet = false;
    m_modified_isValid = false;

    m_notify_url_isSet = false;
    m_notify_url_isValid = false;

    m_payment_method_isSet = false;
    m_payment_method_isValid = false;

    m_payment_methods_isSet = false;
    m_payment_methods_isValid = false;

    m_payment_process_isSet = false;
    m_payment_process_isValid = false;

    m_portal_id_isSet = false;
    m_portal_id_isValid = false;

    m_redirect_url_isSet = false;
    m_redirect_url_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_shopping_cart_isSet = false;
    m_shopping_cart_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_success_url_isSet = false;
    m_success_url_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAILinkResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkResponse::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_background_image_isValid = ::OpenAPI::fromJsonValue(m_background_image, json[QString("backgroundImage")]);
    m_background_image_isSet = !json[QString("backgroundImage")].isNull() && m_background_image_isValid;

    m_billing_isValid = ::OpenAPI::fromJsonValue(m_billing, json[QString("billing")]);
    m_billing_isSet = !json[QString("billing")].isNull() && m_billing_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_error_url_isValid = ::OpenAPI::fromJsonValue(m_error_url, json[QString("errorUrl")]);
    m_error_url_isSet = !json[QString("errorUrl")].isNull() && m_error_url_isValid;

    m_expiration_isValid = ::OpenAPI::fromJsonValue(m_expiration, json[QString("expiration")]);
    m_expiration_isSet = !json[QString("expiration")].isNull() && m_expiration_isValid;

    m_hash_isValid = ::OpenAPI::fromJsonValue(m_hash, json[QString("hash")]);
    m_hash_isSet = !json[QString("hash")].isNull() && m_hash_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_intent_isValid = ::OpenAPI::fromJsonValue(m_intent, json[QString("intent")]);
    m_intent_isSet = !json[QString("intent")].isNull() && m_intent_isValid;

    m_invoice_information_isValid = ::OpenAPI::fromJsonValue(m_invoice_information, json[QString("invoiceInformation")]);
    m_invoice_information_isSet = !json[QString("invoiceInformation")].isNull() && m_invoice_information_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_logo_isValid = ::OpenAPI::fromJsonValue(m_logo, json[QString("logo")]);
    m_logo_isSet = !json[QString("logo")].isNull() && m_logo_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;

    m_modified_isValid = ::OpenAPI::fromJsonValue(m_modified, json[QString("modified")]);
    m_modified_isSet = !json[QString("modified")].isNull() && m_modified_isValid;

    m_notify_url_isValid = ::OpenAPI::fromJsonValue(m_notify_url, json[QString("notifyUrl")]);
    m_notify_url_isSet = !json[QString("notifyUrl")].isNull() && m_notify_url_isValid;

    m_payment_method_isValid = ::OpenAPI::fromJsonValue(m_payment_method, json[QString("paymentMethod")]);
    m_payment_method_isSet = !json[QString("paymentMethod")].isNull() && m_payment_method_isValid;

    m_payment_methods_isValid = ::OpenAPI::fromJsonValue(m_payment_methods, json[QString("paymentMethods")]);
    m_payment_methods_isSet = !json[QString("paymentMethods")].isNull() && m_payment_methods_isValid;

    m_payment_process_isValid = ::OpenAPI::fromJsonValue(m_payment_process, json[QString("paymentProcess")]);
    m_payment_process_isSet = !json[QString("paymentProcess")].isNull() && m_payment_process_isValid;

    m_portal_id_isValid = ::OpenAPI::fromJsonValue(m_portal_id, json[QString("portalId")]);
    m_portal_id_isSet = !json[QString("portalId")].isNull() && m_portal_id_isValid;

    m_redirect_url_isValid = ::OpenAPI::fromJsonValue(m_redirect_url, json[QString("redirectUrl")]);
    m_redirect_url_isSet = !json[QString("redirectUrl")].isNull() && m_redirect_url_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_shopping_cart_isValid = ::OpenAPI::fromJsonValue(m_shopping_cart, json[QString("shoppingCart")]);
    m_shopping_cart_isSet = !json[QString("shoppingCart")].isNull() && m_shopping_cart_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_success_url_isValid = ::OpenAPI::fromJsonValue(m_success_url, json[QString("successUrl")]);
    m_success_url_isSet = !json[QString("successUrl")].isNull() && m_success_url_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAILinkResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_background_image_isSet) {
        obj.insert(QString("backgroundImage"), ::OpenAPI::toJsonValue(m_background_image));
    }
    if (m_billing.isSet()) {
        obj.insert(QString("billing"), ::OpenAPI::toJsonValue(m_billing));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_error_url_isSet) {
        obj.insert(QString("errorUrl"), ::OpenAPI::toJsonValue(m_error_url));
    }
    if (m_expiration_isSet) {
        obj.insert(QString("expiration"), ::OpenAPI::toJsonValue(m_expiration));
    }
    if (m_hash_isSet) {
        obj.insert(QString("hash"), ::OpenAPI::toJsonValue(m_hash));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_intent_isSet) {
        obj.insert(QString("intent"), ::OpenAPI::toJsonValue(m_intent));
    }
    if (m_invoice_information.isSet()) {
        obj.insert(QString("invoiceInformation"), ::OpenAPI::toJsonValue(m_invoice_information));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_logo_isSet) {
        obj.insert(QString("logo"), ::OpenAPI::toJsonValue(m_logo));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_mode_isSet) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    if (m_modified_isSet) {
        obj.insert(QString("modified"), ::OpenAPI::toJsonValue(m_modified));
    }
    if (m_notify_url_isSet) {
        obj.insert(QString("notifyUrl"), ::OpenAPI::toJsonValue(m_notify_url));
    }
    if (m_payment_method_isSet) {
        obj.insert(QString("paymentMethod"), ::OpenAPI::toJsonValue(m_payment_method));
    }
    if (m_payment_methods.size() > 0) {
        obj.insert(QString("paymentMethods"), ::OpenAPI::toJsonValue(m_payment_methods));
    }
    if (m_payment_process_isSet) {
        obj.insert(QString("paymentProcess"), ::OpenAPI::toJsonValue(m_payment_process));
    }
    if (m_portal_id_isSet) {
        obj.insert(QString("portalId"), ::OpenAPI::toJsonValue(m_portal_id));
    }
    if (m_redirect_url_isSet) {
        obj.insert(QString("redirectUrl"), ::OpenAPI::toJsonValue(m_redirect_url));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    if (m_shipping.isSet()) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    if (m_shopping_cart.size() > 0) {
        obj.insert(QString("shoppingCart"), ::OpenAPI::toJsonValue(m_shopping_cart));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_success_url_isSet) {
        obj.insert(QString("successUrl"), ::OpenAPI::toJsonValue(m_success_url));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAILinkResponse::getAccountId() const {
    return m_account_id;
}
void OAILinkResponse::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAILinkResponse::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAILinkResponse::is_account_id_Valid() const{
    return m_account_id_isValid;
}

bool OAILinkResponse::isActive() const {
    return m_active;
}
void OAILinkResponse::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAILinkResponse::is_active_Set() const{
    return m_active_isSet;
}

bool OAILinkResponse::is_active_Valid() const{
    return m_active_isValid;
}

qint64 OAILinkResponse::getAmount() const {
    return m_amount;
}
void OAILinkResponse::setAmount(const qint64 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAILinkResponse::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAILinkResponse::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAILinkResponse::getBackgroundImage() const {
    return m_background_image;
}
void OAILinkResponse::setBackgroundImage(const QString &background_image) {
    m_background_image = background_image;
    m_background_image_isSet = true;
}

bool OAILinkResponse::is_background_image_Set() const{
    return m_background_image_isSet;
}

bool OAILinkResponse::is_background_image_Valid() const{
    return m_background_image_isValid;
}

OAIAddressDataDto OAILinkResponse::getBilling() const {
    return m_billing;
}
void OAILinkResponse::setBilling(const OAIAddressDataDto &billing) {
    m_billing = billing;
    m_billing_isSet = true;
}

bool OAILinkResponse::is_billing_Set() const{
    return m_billing_isSet;
}

bool OAILinkResponse::is_billing_Valid() const{
    return m_billing_isValid;
}

qint64 OAILinkResponse::getCreated() const {
    return m_created;
}
void OAILinkResponse::setCreated(const qint64 &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAILinkResponse::is_created_Set() const{
    return m_created_isSet;
}

bool OAILinkResponse::is_created_Valid() const{
    return m_created_isValid;
}

QString OAILinkResponse::getCurrency() const {
    return m_currency;
}
void OAILinkResponse::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAILinkResponse::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAILinkResponse::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAILinkResponse::getDescription() const {
    return m_description;
}
void OAILinkResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAILinkResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAILinkResponse::is_description_Valid() const{
    return m_description_isValid;
}

QString OAILinkResponse::getEmail() const {
    return m_email;
}
void OAILinkResponse::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAILinkResponse::is_email_Set() const{
    return m_email_isSet;
}

bool OAILinkResponse::is_email_Valid() const{
    return m_email_isValid;
}

QString OAILinkResponse::getErrorUrl() const {
    return m_error_url;
}
void OAILinkResponse::setErrorUrl(const QString &error_url) {
    m_error_url = error_url;
    m_error_url_isSet = true;
}

bool OAILinkResponse::is_error_url_Set() const{
    return m_error_url_isSet;
}

bool OAILinkResponse::is_error_url_Valid() const{
    return m_error_url_isValid;
}

QDate OAILinkResponse::getExpiration() const {
    return m_expiration;
}
void OAILinkResponse::setExpiration(const QDate &expiration) {
    m_expiration = expiration;
    m_expiration_isSet = true;
}

bool OAILinkResponse::is_expiration_Set() const{
    return m_expiration_isSet;
}

bool OAILinkResponse::is_expiration_Valid() const{
    return m_expiration_isValid;
}

QString OAILinkResponse::getHash() const {
    return m_hash;
}
void OAILinkResponse::setHash(const QString &hash) {
    m_hash = hash;
    m_hash_isSet = true;
}

bool OAILinkResponse::is_hash_Set() const{
    return m_hash_isSet;
}

bool OAILinkResponse::is_hash_Valid() const{
    return m_hash_isValid;
}

QString OAILinkResponse::getId() const {
    return m_id;
}
void OAILinkResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILinkResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAILinkResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILinkResponse::getIntent() const {
    return m_intent;
}
void OAILinkResponse::setIntent(const QString &intent) {
    m_intent = intent;
    m_intent_isSet = true;
}

bool OAILinkResponse::is_intent_Set() const{
    return m_intent_isSet;
}

bool OAILinkResponse::is_intent_Valid() const{
    return m_intent_isValid;
}

OAIInvoiceInformationDto OAILinkResponse::getInvoiceInformation() const {
    return m_invoice_information;
}
void OAILinkResponse::setInvoiceInformation(const OAIInvoiceInformationDto &invoice_information) {
    m_invoice_information = invoice_information;
    m_invoice_information_isSet = true;
}

bool OAILinkResponse::is_invoice_information_Set() const{
    return m_invoice_information_isSet;
}

bool OAILinkResponse::is_invoice_information_Valid() const{
    return m_invoice_information_isValid;
}

QString OAILinkResponse::getLanguage() const {
    return m_language;
}
void OAILinkResponse::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAILinkResponse::is_language_Set() const{
    return m_language_isSet;
}

bool OAILinkResponse::is_language_Valid() const{
    return m_language_isValid;
}

QString OAILinkResponse::getLink() const {
    return m_link;
}
void OAILinkResponse::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAILinkResponse::is_link_Set() const{
    return m_link_isSet;
}

bool OAILinkResponse::is_link_Valid() const{
    return m_link_isValid;
}

QString OAILinkResponse::getLogo() const {
    return m_logo;
}
void OAILinkResponse::setLogo(const QString &logo) {
    m_logo = logo;
    m_logo_isSet = true;
}

bool OAILinkResponse::is_logo_Set() const{
    return m_logo_isSet;
}

bool OAILinkResponse::is_logo_Valid() const{
    return m_logo_isValid;
}

QString OAILinkResponse::getMerchantId() const {
    return m_merchant_id;
}
void OAILinkResponse::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAILinkResponse::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAILinkResponse::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAILinkResponse::getMode() const {
    return m_mode;
}
void OAILinkResponse::setMode(const QString &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAILinkResponse::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAILinkResponse::is_mode_Valid() const{
    return m_mode_isValid;
}

qint64 OAILinkResponse::getModified() const {
    return m_modified;
}
void OAILinkResponse::setModified(const qint64 &modified) {
    m_modified = modified;
    m_modified_isSet = true;
}

bool OAILinkResponse::is_modified_Set() const{
    return m_modified_isSet;
}

bool OAILinkResponse::is_modified_Valid() const{
    return m_modified_isValid;
}

QString OAILinkResponse::getNotifyUrl() const {
    return m_notify_url;
}
void OAILinkResponse::setNotifyUrl(const QString &notify_url) {
    m_notify_url = notify_url;
    m_notify_url_isSet = true;
}

bool OAILinkResponse::is_notify_url_Set() const{
    return m_notify_url_isSet;
}

bool OAILinkResponse::is_notify_url_Valid() const{
    return m_notify_url_isValid;
}

QString OAILinkResponse::getPaymentMethod() const {
    return m_payment_method;
}
void OAILinkResponse::setPaymentMethod(const QString &payment_method) {
    m_payment_method = payment_method;
    m_payment_method_isSet = true;
}

bool OAILinkResponse::is_payment_method_Set() const{
    return m_payment_method_isSet;
}

bool OAILinkResponse::is_payment_method_Valid() const{
    return m_payment_method_isValid;
}

QList<QString> OAILinkResponse::getPaymentMethods() const {
    return m_payment_methods;
}
void OAILinkResponse::setPaymentMethods(const QList<QString> &payment_methods) {
    m_payment_methods = payment_methods;
    m_payment_methods_isSet = true;
}

bool OAILinkResponse::is_payment_methods_Set() const{
    return m_payment_methods_isSet;
}

bool OAILinkResponse::is_payment_methods_Valid() const{
    return m_payment_methods_isValid;
}

QString OAILinkResponse::getPaymentProcess() const {
    return m_payment_process;
}
void OAILinkResponse::setPaymentProcess(const QString &payment_process) {
    m_payment_process = payment_process;
    m_payment_process_isSet = true;
}

bool OAILinkResponse::is_payment_process_Set() const{
    return m_payment_process_isSet;
}

bool OAILinkResponse::is_payment_process_Valid() const{
    return m_payment_process_isValid;
}

QString OAILinkResponse::getPortalId() const {
    return m_portal_id;
}
void OAILinkResponse::setPortalId(const QString &portal_id) {
    m_portal_id = portal_id;
    m_portal_id_isSet = true;
}

bool OAILinkResponse::is_portal_id_Set() const{
    return m_portal_id_isSet;
}

bool OAILinkResponse::is_portal_id_Valid() const{
    return m_portal_id_isValid;
}

QString OAILinkResponse::getRedirectUrl() const {
    return m_redirect_url;
}
void OAILinkResponse::setRedirectUrl(const QString &redirect_url) {
    m_redirect_url = redirect_url;
    m_redirect_url_isSet = true;
}

bool OAILinkResponse::is_redirect_url_Set() const{
    return m_redirect_url_isSet;
}

bool OAILinkResponse::is_redirect_url_Valid() const{
    return m_redirect_url_isValid;
}

QString OAILinkResponse::getReference() const {
    return m_reference;
}
void OAILinkResponse::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAILinkResponse::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAILinkResponse::is_reference_Valid() const{
    return m_reference_isValid;
}

OAIAddressDataDto OAILinkResponse::getShipping() const {
    return m_shipping;
}
void OAILinkResponse::setShipping(const OAIAddressDataDto &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAILinkResponse::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAILinkResponse::is_shipping_Valid() const{
    return m_shipping_isValid;
}

QList<OAICartItemDto> OAILinkResponse::getShoppingCart() const {
    return m_shopping_cart;
}
void OAILinkResponse::setShoppingCart(const QList<OAICartItemDto> &shopping_cart) {
    m_shopping_cart = shopping_cart;
    m_shopping_cart_isSet = true;
}

bool OAILinkResponse::is_shopping_cart_Set() const{
    return m_shopping_cart_isSet;
}

bool OAILinkResponse::is_shopping_cart_Valid() const{
    return m_shopping_cart_isValid;
}

QString OAILinkResponse::getStatus() const {
    return m_status;
}
void OAILinkResponse::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILinkResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAILinkResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILinkResponse::getSuccessUrl() const {
    return m_success_url;
}
void OAILinkResponse::setSuccessUrl(const QString &success_url) {
    m_success_url = success_url;
    m_success_url_isSet = true;
}

bool OAILinkResponse::is_success_url_Set() const{
    return m_success_url_isSet;
}

bool OAILinkResponse::is_success_url_Valid() const{
    return m_success_url_isValid;
}

QString OAILinkResponse::getUserId() const {
    return m_user_id;
}
void OAILinkResponse::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAILinkResponse::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAILinkResponse::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAILinkResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_background_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notify_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_process_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_portal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopping_cart.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
