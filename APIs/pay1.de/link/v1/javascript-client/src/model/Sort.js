/**
 * PAYONE Link API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@payone.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Sort model module.
 * @module model/Sort
 * @version v1
 */
class Sort {
    /**
     * Constructs a new <code>Sort</code>.
     * @alias module:model/Sort
     */
    constructor() { 
        
        Sort.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sort} obj Optional instance to populate.
     * @return {module:model/Sort} The populated <code>Sort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sort();

            if (data.hasOwnProperty('empty')) {
                obj['empty'] = ApiClient.convertToType(data['empty'], 'Boolean');
            }
            if (data.hasOwnProperty('sorted')) {
                obj['sorted'] = ApiClient.convertToType(data['sorted'], 'Boolean');
            }
            if (data.hasOwnProperty('unsorted')) {
                obj['unsorted'] = ApiClient.convertToType(data['unsorted'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sort</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Boolean} empty
 */
Sort.prototype['empty'] = undefined;

/**
 * @member {Boolean} sorted
 */
Sort.prototype['sorted'] = undefined;

/**
 * @member {Boolean} unsorted
 */
Sort.prototype['unsorted'] = undefined;






export default Sort;

