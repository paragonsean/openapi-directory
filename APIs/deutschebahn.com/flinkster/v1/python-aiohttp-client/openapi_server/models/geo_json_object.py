# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.crs import Crs
from openapi_server import util


class GeoJsonObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bbox: List[float]=None, crs: Crs=None):
        """GeoJsonObject - a model defined in OpenAPI

        :param bbox: The bbox of this GeoJsonObject.
        :param crs: The crs of this GeoJsonObject.
        """
        self.openapi_types = {
            'bbox': List[float],
            'crs': Crs
        }

        self.attribute_map = {
            'bbox': 'bbox',
            'crs': 'crs'
        }

        self._bbox = bbox
        self._crs = crs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeoJsonObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeoJsonObject of this GeoJsonObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bbox(self):
        """Gets the bbox of this GeoJsonObject.


        :return: The bbox of this GeoJsonObject.
        :rtype: List[float]
        """
        return self._bbox

    @bbox.setter
    def bbox(self, bbox):
        """Sets the bbox of this GeoJsonObject.


        :param bbox: The bbox of this GeoJsonObject.
        :type bbox: List[float]
        """

        self._bbox = bbox

    @property
    def crs(self):
        """Gets the crs of this GeoJsonObject.


        :return: The crs of this GeoJsonObject.
        :rtype: Crs
        """
        return self._crs

    @crs.setter
    def crs(self, crs):
        """Sets the crs of this GeoJsonObject.


        :param crs: The crs of this GeoJsonObject.
        :type crs: Crs
        """

        self._crs = crs
