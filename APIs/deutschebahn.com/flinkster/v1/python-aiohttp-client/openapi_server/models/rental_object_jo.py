# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_jo import CategoryJO
from openapi_server.models.link_jo import LinkJO
from openapi_server.models.provider_jo import ProviderJO
from openapi_server import util


class RentalObjectJO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: List[LinkJO]=None, attributes: Dict[str, object]=None, category: CategoryJO=None, description: str=None, expand: str=None, href: str=None, name: str=None, provider: ProviderJO=None, provider_network_ids: List[int]=None, provider_rental_object_id: str=None, rental_model: str=None, type: str=None, uid: str=None):
        """RentalObjectJO - a model defined in OpenAPI

        :param links: The links of this RentalObjectJO.
        :param attributes: The attributes of this RentalObjectJO.
        :param category: The category of this RentalObjectJO.
        :param description: The description of this RentalObjectJO.
        :param expand: The expand of this RentalObjectJO.
        :param href: The href of this RentalObjectJO.
        :param name: The name of this RentalObjectJO.
        :param provider: The provider of this RentalObjectJO.
        :param provider_network_ids: The provider_network_ids of this RentalObjectJO.
        :param provider_rental_object_id: The provider_rental_object_id of this RentalObjectJO.
        :param rental_model: The rental_model of this RentalObjectJO.
        :param type: The type of this RentalObjectJO.
        :param uid: The uid of this RentalObjectJO.
        """
        self.openapi_types = {
            'links': List[LinkJO],
            'attributes': Dict[str, object],
            'category': CategoryJO,
            'description': str,
            'expand': str,
            'href': str,
            'name': str,
            'provider': ProviderJO,
            'provider_network_ids': List[int],
            'provider_rental_object_id': str,
            'rental_model': str,
            'type': str,
            'uid': str
        }

        self.attribute_map = {
            'links': '_links',
            'attributes': 'attributes',
            'category': 'category',
            'description': 'description',
            'expand': 'expand',
            'href': 'href',
            'name': 'name',
            'provider': 'provider',
            'provider_network_ids': 'providerNetworkIds',
            'provider_rental_object_id': 'providerRentalObjectId',
            'rental_model': 'rentalModel',
            'type': 'type',
            'uid': 'uid'
        }

        self._links = links
        self._attributes = attributes
        self._category = category
        self._description = description
        self._expand = expand
        self._href = href
        self._name = name
        self._provider = provider
        self._provider_network_ids = provider_network_ids
        self._provider_rental_object_id = provider_rental_object_id
        self._rental_model = rental_model
        self._type = type
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RentalObjectJO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RentalObjectJO of this RentalObjectJO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this RentalObjectJO.


        :return: The links of this RentalObjectJO.
        :rtype: List[LinkJO]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this RentalObjectJO.


        :param links: The links of this RentalObjectJO.
        :type links: List[LinkJO]
        """

        self._links = links

    @property
    def attributes(self):
        """Gets the attributes of this RentalObjectJO.


        :return: The attributes of this RentalObjectJO.
        :rtype: Dict[str, object]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this RentalObjectJO.


        :param attributes: The attributes of this RentalObjectJO.
        :type attributes: Dict[str, object]
        """

        self._attributes = attributes

    @property
    def category(self):
        """Gets the category of this RentalObjectJO.


        :return: The category of this RentalObjectJO.
        :rtype: CategoryJO
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this RentalObjectJO.


        :param category: The category of this RentalObjectJO.
        :type category: CategoryJO
        """

        self._category = category

    @property
    def description(self):
        """Gets the description of this RentalObjectJO.


        :return: The description of this RentalObjectJO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RentalObjectJO.


        :param description: The description of this RentalObjectJO.
        :type description: str
        """

        self._description = description

    @property
    def expand(self):
        """Gets the expand of this RentalObjectJO.


        :return: The expand of this RentalObjectJO.
        :rtype: str
        """
        return self._expand

    @expand.setter
    def expand(self, expand):
        """Sets the expand of this RentalObjectJO.


        :param expand: The expand of this RentalObjectJO.
        :type expand: str
        """

        self._expand = expand

    @property
    def href(self):
        """Gets the href of this RentalObjectJO.


        :return: The href of this RentalObjectJO.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this RentalObjectJO.


        :param href: The href of this RentalObjectJO.
        :type href: str
        """

        self._href = href

    @property
    def name(self):
        """Gets the name of this RentalObjectJO.


        :return: The name of this RentalObjectJO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RentalObjectJO.


        :param name: The name of this RentalObjectJO.
        :type name: str
        """

        self._name = name

    @property
    def provider(self):
        """Gets the provider of this RentalObjectJO.


        :return: The provider of this RentalObjectJO.
        :rtype: ProviderJO
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this RentalObjectJO.


        :param provider: The provider of this RentalObjectJO.
        :type provider: ProviderJO
        """

        self._provider = provider

    @property
    def provider_network_ids(self):
        """Gets the provider_network_ids of this RentalObjectJO.


        :return: The provider_network_ids of this RentalObjectJO.
        :rtype: List[int]
        """
        return self._provider_network_ids

    @provider_network_ids.setter
    def provider_network_ids(self, provider_network_ids):
        """Sets the provider_network_ids of this RentalObjectJO.


        :param provider_network_ids: The provider_network_ids of this RentalObjectJO.
        :type provider_network_ids: List[int]
        """

        self._provider_network_ids = provider_network_ids

    @property
    def provider_rental_object_id(self):
        """Gets the provider_rental_object_id of this RentalObjectJO.


        :return: The provider_rental_object_id of this RentalObjectJO.
        :rtype: str
        """
        return self._provider_rental_object_id

    @provider_rental_object_id.setter
    def provider_rental_object_id(self, provider_rental_object_id):
        """Sets the provider_rental_object_id of this RentalObjectJO.


        :param provider_rental_object_id: The provider_rental_object_id of this RentalObjectJO.
        :type provider_rental_object_id: str
        """

        self._provider_rental_object_id = provider_rental_object_id

    @property
    def rental_model(self):
        """Gets the rental_model of this RentalObjectJO.


        :return: The rental_model of this RentalObjectJO.
        :rtype: str
        """
        return self._rental_model

    @rental_model.setter
    def rental_model(self, rental_model):
        """Sets the rental_model of this RentalObjectJO.


        :param rental_model: The rental_model of this RentalObjectJO.
        :type rental_model: str
        """
        allowed_values = ["FREEFLOATING", "FREEFLOATINGWITHSTATION", "STATIONBASED", "PARKINGAREA", "UNKNOWN"]  # noqa: E501
        if rental_model not in allowed_values:
            raise ValueError(
                "Invalid value for `rental_model` ({0}), must be one of {1}"
                .format(rental_model, allowed_values)
            )

        self._rental_model = rental_model

    @property
    def type(self):
        """Gets the type of this RentalObjectJO.


        :return: The type of this RentalObjectJO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RentalObjectJO.


        :param type: The type of this RentalObjectJO.
        :type type: str
        """
        allowed_values = ["VEHICLE", "VEHICLEPOOL", "BIKE", "PEDELEC", "UNKNOWN"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this RentalObjectJO.


        :return: The uid of this RentalObjectJO.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this RentalObjectJO.


        :param uid: The uid of this RentalObjectJO.
        :type uid: str
        """

        self._uid = uid
