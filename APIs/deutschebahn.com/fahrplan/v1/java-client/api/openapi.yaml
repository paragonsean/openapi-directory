openapi: 3.0.1
info:
  contact:
    email: DBOpenData@deutschebahn.com
    name: DBOpenData
    url: https://developer.deutschebahn.com/store/
  description: |-
    A RESTful webservice to request a railway journey - FREE plan with restricted access (max. 10 requests per minute). Please ignore the message in the API Console about the access token.

    Register to use an less restricted version, which requires an access token.
  license:
    name: DB Data Portal
    url: http://data.deutschebahn.com/pages/nutzungsbedingungen
  termsOfService: http://data.deutschebahn.com/nutzungsbedingungen.html
  title: Fahrplan-Free
  version: v1
  x-apisguru-categories:
  - transport
  - open_data
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://pbs.twimg.com/profile_images/591140150413025280/Cjcqjl2J.png
  x-origin:
  - format: swagger
    url: https://developer.deutschebahn.com/store/api-docs/DBOpenData/Fahrplan-Free/v1
    version: "2.0"
  x-providerName: deutschebahn.com
  x-serviceName: fahrplan
servers:
- url: https://api.deutschebahn.com/freeplan/v1
- url: http://api.deutschebahn.com/freeplan/v1
paths:
  /arrivalBoard/{id}:
    get:
      description: Get arrival board at a given location at a given daten and time.
      parameters:
      - description: Id of location. Use attribute 'id' from the result of 'location'
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Date and time in ISO-8601 format, yyyy-mm-ddThh:mm:ss, example:\
          \ 2017-04-01 or 2017-04-01T10:30"
        in: query
        name: date
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardResponse'
          description: arrival board
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Invalid date/time specification.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The service has been disabled temporarily.
      summary: Get arrival board of a location
      x-auth-type: None
      x-throttling-tier: 10_per_minute
      x-accepts:
      - application/json
  /departureBoard/{id}:
    get:
      description: Get departure board at a given location at a given daten and time.
      parameters:
      - description: Id of a location. Use attribute 'id' from the result of 'location'
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Date and time in ISO-8601 format, yyyy-mm-ddThh:mm:ss, example:\
          \ 2017-04-01 or 2017-04-01T10:30"
        in: query
        name: date
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardResponse'
          description: departure board
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Invalid date/time specification.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The service has been disabled temporarily.
      summary: Get departure board of a location
      x-auth-type: None
      x-throttling-tier: 10_per_minute
      x-accepts:
      - application/json
  /journeyDetails/{id}:
    get:
      description: Retrieve details of a journey. The id of journey should come from
        an arrival board or a departure board.
      parameters:
      - description: Id of a journey. Use attribute 'detailsId' from the result of  'arrivalBoard'
          or 'departureBoard'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
          description: "journey details, locations of a journey"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The service has been disabled temporarily.
      summary: Get details about a single journey
      x-auth-type: None
      x-throttling-tier: 10_per_minute
      x-accepts:
      - application/json
  /location/{name}:
    get:
      description: Get information about locations matching the given name or name
        fragment
      parameters:
      - description: Name or name fragment of a location
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
          description: location information
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The service has been disabled temporarily.
      summary: Get location information
      x-auth-type: None
      x-throttling-tier: 10_per_minute
      x-accepts:
      - application/json
components:
  schemas:
    Board:
      example:
        dateTime: dateTime
        origin: origin
        detailsId: detailsId
        name: name
        boardId: boardId
        stopId: stopId
        track: track
        type: type
        stopName: stopName
      properties:
        boardId:
          description: ""
          type: string
        dateTime:
          description: ""
          type: string
        detailsId:
          description: ""
          type: string
        name:
          description: Name of train
          type: string
        origin:
          description: ""
          type: string
        stopId:
          description: ""
          type: string
        stopName:
          description: ""
          type: string
        track:
          description: ""
          type: string
        type:
          description: ""
          type: string
      required:
      - boardId
      - dateTime
      - detailsId
      - name
      - origin
      - stopId
      - stopName
      - track
      - type
      type: object
    BoardResponse:
      example:
        boards:
        - dateTime: dateTime
          origin: origin
          detailsId: detailsId
          name: name
          boardId: boardId
          stopId: stopId
          track: track
          type: type
          stopName: stopName
        - dateTime: dateTime
          origin: origin
          detailsId: detailsId
          name: name
          boardId: boardId
          stopId: stopId
          track: track
          type: type
          stopName: stopName
      properties:
        boards:
          items:
            $ref: '#/components/schemas/Board'
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - boards
      type: object
    ErrorModel:
      example:
        code: 0
        internal_code: 6
        message: message
        internal_message: internal_message
      properties:
        code:
          type: integer
        internal_code:
          type: integer
        internal_message:
          type: string
        message:
          type: string
      required:
      - code
      - message
      type: object
    JourneyResponse:
      example:
        train_locs:
        - depTime: depTime
          stopId: stopId
          lon: 6.027456183070403
          type: type
          arrTime: arrTime
          lat: 0.8008281904610115
          operator: operator
          stopName: stopName
          train: train
        - depTime: depTime
          stopId: stopId
          lon: 6.027456183070403
          type: type
          arrTime: arrTime
          lat: 0.8008281904610115
          operator: operator
          stopName: stopName
          train: train
      properties:
        train_locs:
          items:
            $ref: '#/components/schemas/TrainLocation'
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - train_locs
      type: object
    Location:
      example:
        name: name
        lon: 6.027456183070403
        id: id
        lat: 0.8008281904610115
      properties:
        id:
          description: "id of location (eva-number), example: 8000105"
          type: string
        lat:
          description: "latitude, example: 50.107149"
          type: number
        lon:
          description: "longitude, example: 8.663785"
          type: number
        name:
          description: "Name of location, example: Frankfurt(Main)Hbf"
          type: string
      required:
      - id
      - lat
      - lon
      - name
      type: object
    LocationResponse:
      example:
        locations:
        - name: name
          lon: 6.027456183070403
          id: id
          lat: 0.8008281904610115
        - name: name
          lon: 6.027456183070403
          id: id
          lat: 0.8008281904610115
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - locations
      type: object
    TrainLocation:
      example:
        depTime: depTime
        stopId: stopId
        lon: 6.027456183070403
        type: type
        arrTime: arrTime
        lat: 0.8008281904610115
        operator: operator
        stopName: stopName
        train: train
      properties:
        arrTime:
          description: ""
          type: string
        depTime:
          description: ""
          type: string
        lat:
          description: ""
          type: number
        lon:
          description: ""
          type: number
        operator:
          description: ""
          type: string
        stopId:
          description: ""
          type: string
        stopName:
          description: ""
          type: string
        train:
          description: ""
          type: string
        type:
          description: ""
          type: string
      required:
      - arrTime
      - depTime
      - lat
      - lon
      - operator
      - stopId
      - stopName
      - train
      - type
      type: object
x-original-swagger-version: "2.0"

