/**
 * Fahrplan-Free
 * A RESTful webservice to request a railway journey - FREE plan with restricted access (max. 10 requests per minute). Please ignore the message in the API Console about the access token.  Register to use an less restricted version, which requires an access token.
 *
 * The version of the OpenAPI document: v1
 * Contact: DBOpenData@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoardResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoardResponse::OAIBoardResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoardResponse::OAIBoardResponse() {
    this->initializeModel();
}

OAIBoardResponse::~OAIBoardResponse() {}

void OAIBoardResponse::initializeModel() {

    m_boards_isSet = false;
    m_boards_isValid = false;
}

void OAIBoardResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoardResponse::fromJsonObject(QJsonObject json) {

    m_boards_isValid = ::OpenAPI::fromJsonValue(m_boards, json[QString("boards")]);
    m_boards_isSet = !json[QString("boards")].isNull() && m_boards_isValid;
}

QString OAIBoardResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoardResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_boards.size() > 0) {
        obj.insert(QString("boards"), ::OpenAPI::toJsonValue(m_boards));
    }
    return obj;
}

QSet<OAIBoard> OAIBoardResponse::getBoards() const {
    return m_boards;
}
void OAIBoardResponse::setBoards(const QSet<OAIBoard> &boards) {
    m_boards = boards;
    m_boards_isSet = true;
}

bool OAIBoardResponse::is_boards_Set() const{
    return m_boards_isSet;
}

bool OAIBoardResponse::is_boards_Valid() const{
    return m_boards_isValid;
}

bool OAIBoardResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boards.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoardResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_boards_isValid && true;
}

} // namespace OpenAPI
