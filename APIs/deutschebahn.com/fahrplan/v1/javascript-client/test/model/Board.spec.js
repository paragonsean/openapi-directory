/**
 * Fahrplan-Free
 * A RESTful webservice to request a railway journey - FREE plan with restricted access (max. 10 requests per minute). Please ignore the message in the API Console about the access token.  Register to use an less restricted version, which requires an access token.
 *
 * The version of the OpenAPI document: v1
 * Contact: DBOpenData@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FahrplanFree);
  }
}(this, function(expect, FahrplanFree) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FahrplanFree.Board();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Board', function() {
    it('should create an instance of Board', function() {
      // uncomment below and update the code to test Board
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be.a(FahrplanFree.Board);
    });

    it('should have the property boardId (base name: "boardId")', function() {
      // uncomment below and update the code to test the property boardId
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "dateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property detailsId (base name: "detailsId")', function() {
      // uncomment below and update the code to test the property detailsId
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property stopId (base name: "stopId")', function() {
      // uncomment below and update the code to test the property stopId
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property stopName (base name: "stopName")', function() {
      // uncomment below and update the code to test the property stopName
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property track (base name: "track")', function() {
      // uncomment below and update the code to test the property track
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new FahrplanFree.Board();
      //expect(instance).to.be();
    });

  });

}));
