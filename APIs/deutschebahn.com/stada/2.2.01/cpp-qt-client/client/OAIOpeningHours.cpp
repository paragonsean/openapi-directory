/**
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOpeningHours.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOpeningHours::OAIOpeningHours(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOpeningHours::OAIOpeningHours() {
    this->initializeModel();
}

OAIOpeningHours::~OAIOpeningHours() {}

void OAIOpeningHours::initializeModel() {

    m_from_time_isSet = false;
    m_from_time_isValid = false;

    m_to_time_isSet = false;
    m_to_time_isValid = false;
}

void OAIOpeningHours::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOpeningHours::fromJsonObject(QJsonObject json) {

    m_from_time_isValid = ::OpenAPI::fromJsonValue(m_from_time, json[QString("fromTime")]);
    m_from_time_isSet = !json[QString("fromTime")].isNull() && m_from_time_isValid;

    m_to_time_isValid = ::OpenAPI::fromJsonValue(m_to_time, json[QString("toTime")]);
    m_to_time_isSet = !json[QString("toTime")].isNull() && m_to_time_isValid;
}

QString OAIOpeningHours::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOpeningHours::asJsonObject() const {
    QJsonObject obj;
    if (m_from_time_isSet) {
        obj.insert(QString("fromTime"), ::OpenAPI::toJsonValue(m_from_time));
    }
    if (m_to_time_isSet) {
        obj.insert(QString("toTime"), ::OpenAPI::toJsonValue(m_to_time));
    }
    return obj;
}

QDate OAIOpeningHours::getFromTime() const {
    return m_from_time;
}
void OAIOpeningHours::setFromTime(const QDate &from_time) {
    m_from_time = from_time;
    m_from_time_isSet = true;
}

bool OAIOpeningHours::is_from_time_Set() const{
    return m_from_time_isSet;
}

bool OAIOpeningHours::is_from_time_Valid() const{
    return m_from_time_isValid;
}

QDate OAIOpeningHours::getToTime() const {
    return m_to_time;
}
void OAIOpeningHours::setToTime(const QDate &to_time) {
    m_to_time = to_time;
    m_to_time_isSet = true;
}

bool OAIOpeningHours::is_to_time_Set() const{
    return m_to_time_isSet;
}

bool OAIOpeningHours::is_to_time_Valid() const{
    return m_to_time_isValid;
}

bool OAIOpeningHours::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOpeningHours::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
