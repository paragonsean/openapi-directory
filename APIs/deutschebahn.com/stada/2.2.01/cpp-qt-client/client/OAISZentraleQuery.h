/**
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISZentraleQuery.h
 *
 * 
 */

#ifndef OAISZentraleQuery_H
#define OAISZentraleQuery_H

#include <QJsonObject>

#include "OAISZentrale.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISZentrale;

class OAISZentraleQuery : public OAIObject {
public:
    OAISZentraleQuery();
    OAISZentraleQuery(QString json);
    ~OAISZentraleQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getLimit() const;
    void setLimit(const qint64 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint64 getOffset() const;
    void setOffset(const qint64 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QList<OAISZentrale> getResult() const;
    void setResult(const QList<OAISZentrale> &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    qint64 getTotal() const;
    void setTotal(const qint64 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint64 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QList<OAISZentrale> m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    qint64 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISZentraleQuery)

#endif // OAISZentraleQuery_H
