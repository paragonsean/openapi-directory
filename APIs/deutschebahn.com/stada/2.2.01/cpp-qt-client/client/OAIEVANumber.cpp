/**
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEVANumber.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEVANumber::OAIEVANumber(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEVANumber::OAIEVANumber() {
    this->initializeModel();
}

OAIEVANumber::~OAIEVANumber() {}

void OAIEVANumber::initializeModel() {

    m_geographic_coordinate_isSet = false;
    m_geographic_coordinate_isValid = false;

    m_is_main_isSet = false;
    m_is_main_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;
}

void OAIEVANumber::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEVANumber::fromJsonObject(QJsonObject json) {

    m_geographic_coordinate_isValid = ::OpenAPI::fromJsonValue(m_geographic_coordinate, json[QString("geographicCoordinate")]);
    m_geographic_coordinate_isSet = !json[QString("geographicCoordinate")].isNull() && m_geographic_coordinate_isValid;

    m_is_main_isValid = ::OpenAPI::fromJsonValue(m_is_main, json[QString("isMain")]);
    m_is_main_isSet = !json[QString("isMain")].isNull() && m_is_main_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;
}

QString OAIEVANumber::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEVANumber::asJsonObject() const {
    QJsonObject obj;
    if (m_geographic_coordinate.isSet()) {
        obj.insert(QString("geographicCoordinate"), ::OpenAPI::toJsonValue(m_geographic_coordinate));
    }
    if (m_is_main_isSet) {
        obj.insert(QString("isMain"), ::OpenAPI::toJsonValue(m_is_main));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    return obj;
}

OAIGeographicPoint OAIEVANumber::getGeographicCoordinate() const {
    return m_geographic_coordinate;
}
void OAIEVANumber::setGeographicCoordinate(const OAIGeographicPoint &geographic_coordinate) {
    m_geographic_coordinate = geographic_coordinate;
    m_geographic_coordinate_isSet = true;
}

bool OAIEVANumber::is_geographic_coordinate_Set() const{
    return m_geographic_coordinate_isSet;
}

bool OAIEVANumber::is_geographic_coordinate_Valid() const{
    return m_geographic_coordinate_isValid;
}

bool OAIEVANumber::isIsMain() const {
    return m_is_main;
}
void OAIEVANumber::setIsMain(const bool &is_main) {
    m_is_main = is_main;
    m_is_main_isSet = true;
}

bool OAIEVANumber::is_is_main_Set() const{
    return m_is_main_isSet;
}

bool OAIEVANumber::is_is_main_Valid() const{
    return m_is_main_isValid;
}

qint32 OAIEVANumber::getNumber() const {
    return m_number;
}
void OAIEVANumber::setNumber(const qint32 &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIEVANumber::is_number_Set() const{
    return m_number_isSet;
}

bool OAIEVANumber::is_number_Valid() const{
    return m_number_isValid;
}

bool OAIEVANumber::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_geographic_coordinate.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_main_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEVANumber::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
