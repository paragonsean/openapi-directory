/**
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import Aufgabentraeger from './model/Aufgabentraeger';
import EVANumber from './model/EVANumber';
import Error from './model/Error';
import GeographicPoint from './model/GeographicPoint';
import OpeningHours from './model/OpeningHours';
import Partial from './model/Partial';
import RegionalBereichRef from './model/RegionalBereichRef';
import Regionalbereich from './model/Regionalbereich';
import RiL100Identifier from './model/RiL100Identifier';
import SZentrale from './model/SZentrale';
import SZentraleQuery from './model/SZentraleQuery';
import SZentraleRef from './model/SZentraleRef';
import Schedule from './model/Schedule';
import Station from './model/Station';
import StationManagement from './model/StationManagement';
import StationManagementRef from './model/StationManagementRef';
import StationQuery from './model/StationQuery';
import TimetableOffice from './model/TimetableOffice';
import DefaultApi from './api/DefaultApi';


/**
* An API providing master data for German railway stations by DB Station&amp;Service AG..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Stationsdatenbereitstellung = require('index'); // See note below*.
* var xxxSvc = new Stationsdatenbereitstellung.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Stationsdatenbereitstellung.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Stationsdatenbereitstellung.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Stationsdatenbereitstellung.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.2.01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Aufgabentraeger model constructor.
     * @property {module:model/Aufgabentraeger}
     */
    Aufgabentraeger,

    /**
     * The EVANumber model constructor.
     * @property {module:model/EVANumber}
     */
    EVANumber,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The GeographicPoint model constructor.
     * @property {module:model/GeographicPoint}
     */
    GeographicPoint,

    /**
     * The OpeningHours model constructor.
     * @property {module:model/OpeningHours}
     */
    OpeningHours,

    /**
     * The Partial model constructor.
     * @property {module:model/Partial}
     */
    Partial,

    /**
     * The RegionalBereichRef model constructor.
     * @property {module:model/RegionalBereichRef}
     */
    RegionalBereichRef,

    /**
     * The Regionalbereich model constructor.
     * @property {module:model/Regionalbereich}
     */
    Regionalbereich,

    /**
     * The RiL100Identifier model constructor.
     * @property {module:model/RiL100Identifier}
     */
    RiL100Identifier,

    /**
     * The SZentrale model constructor.
     * @property {module:model/SZentrale}
     */
    SZentrale,

    /**
     * The SZentraleQuery model constructor.
     * @property {module:model/SZentraleQuery}
     */
    SZentraleQuery,

    /**
     * The SZentraleRef model constructor.
     * @property {module:model/SZentraleRef}
     */
    SZentraleRef,

    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule,

    /**
     * The Station model constructor.
     * @property {module:model/Station}
     */
    Station,

    /**
     * The StationManagement model constructor.
     * @property {module:model/StationManagement}
     */
    StationManagement,

    /**
     * The StationManagementRef model constructor.
     * @property {module:model/StationManagementRef}
     */
    StationManagementRef,

    /**
     * The StationQuery model constructor.
     * @property {module:model/StationQuery}
     */
    StationQuery,

    /**
     * The TimetableOffice model constructor.
     * @property {module:model/TimetableOffice}
     */
    TimetableOffice,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
