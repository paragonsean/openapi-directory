/**
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Stationsdatenbereitstellung);
  }
}(this, function(expect, Stationsdatenbereitstellung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Stationsdatenbereitstellung.Station();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Station', function() {
    it('should create an instance of Station', function() {
      // uncomment below and update the code to test Station
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be.a(Stationsdatenbereitstellung.Station);
    });

    it('should have the property dBinformation (base name: "DBinformation")', function() {
      // uncomment below and update the code to test the property dBinformation
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property aufgabentraeger (base name: "aufgabentraeger")', function() {
      // uncomment below and update the code to test the property aufgabentraeger
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property evaNumbers (base name: "evaNumbers")', function() {
      // uncomment below and update the code to test the property evaNumbers
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property federalState (base name: "federalState")', function() {
      // uncomment below and update the code to test the property federalState
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasBicycleParking (base name: "hasBicycleParking")', function() {
      // uncomment below and update the code to test the property hasBicycleParking
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasCarRental (base name: "hasCarRental")', function() {
      // uncomment below and update the code to test the property hasCarRental
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasDBLounge (base name: "hasDBLounge")', function() {
      // uncomment below and update the code to test the property hasDBLounge
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasLocalPublicTransport (base name: "hasLocalPublicTransport")', function() {
      // uncomment below and update the code to test the property hasLocalPublicTransport
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasLockerSystem (base name: "hasLockerSystem")', function() {
      // uncomment below and update the code to test the property hasLockerSystem
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasLostAndFound (base name: "hasLostAndFound")', function() {
      // uncomment below and update the code to test the property hasLostAndFound
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasMobilityService (base name: "hasMobilityService")', function() {
      // uncomment below and update the code to test the property hasMobilityService
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasParking (base name: "hasParking")', function() {
      // uncomment below and update the code to test the property hasParking
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasPublicFacilities (base name: "hasPublicFacilities")', function() {
      // uncomment below and update the code to test the property hasPublicFacilities
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasRailwayMission (base name: "hasRailwayMission")', function() {
      // uncomment below and update the code to test the property hasRailwayMission
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasSteplessAccess (base name: "hasSteplessAccess")', function() {
      // uncomment below and update the code to test the property hasSteplessAccess
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasTaxiRank (base name: "hasTaxiRank")', function() {
      // uncomment below and update the code to test the property hasTaxiRank
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasTravelCenter (base name: "hasTravelCenter")', function() {
      // uncomment below and update the code to test the property hasTravelCenter
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasTravelNecessities (base name: "hasTravelNecessities")', function() {
      // uncomment below and update the code to test the property hasTravelNecessities
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property hasWiFi (base name: "hasWiFi")', function() {
      // uncomment below and update the code to test the property hasWiFi
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property localServiceStaff (base name: "localServiceStaff")', function() {
      // uncomment below and update the code to test the property localServiceStaff
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property mailingAdress (base name: "mailingAdress")', function() {
      // uncomment below and update the code to test the property mailingAdress
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property priceCategory (base name: "priceCategory")', function() {
      // uncomment below and update the code to test the property priceCategory
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property regionalbereich (base name: "regionalbereich")', function() {
      // uncomment below and update the code to test the property regionalbereich
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property riL100Identifiers (base name: "riL100Identifiers")', function() {
      // uncomment below and update the code to test the property riL100Identifiers
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property stationManagement (base name: "stationManagement")', function() {
      // uncomment below and update the code to test the property stationManagement
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property szentrale (base name: "szentrale")', function() {
      // uncomment below and update the code to test the property szentrale
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

    it('should have the property timetableOffice (base name: "timetableOffice")', function() {
      // uncomment below and update the code to test the property timetableOffice
      //var instance = new Stationsdatenbereitstellung.Station();
      //expect(instance).to.be();
    });

  });

}));
