/*
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Aufgabentraeger;
import org.openapitools.client.model.EVANumber;
import org.openapitools.client.model.Partial;
import org.openapitools.client.model.RegionalBereichRef;
import org.openapitools.client.model.RiL100Identifier;
import org.openapitools.client.model.SZentraleRef;
import org.openapitools.client.model.Schedule;
import org.openapitools.client.model.StationManagementRef;
import org.openapitools.client.model.TimetableOffice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Station
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:02:18.691369-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Station {
  public static final String SERIALIZED_NAME_DBINFORMATION = "DBinformation";
  @SerializedName(SERIALIZED_NAME_DBINFORMATION)
  private Schedule dbinformation;

  public static final String SERIALIZED_NAME_AUFGABENTRAEGER = "aufgabentraeger";
  @SerializedName(SERIALIZED_NAME_AUFGABENTRAEGER)
  private Aufgabentraeger aufgabentraeger;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private Integer category;

  public static final String SERIALIZED_NAME_EVA_NUMBERS = "evaNumbers";
  @SerializedName(SERIALIZED_NAME_EVA_NUMBERS)
  private List<EVANumber> evaNumbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEDERAL_STATE = "federalState";
  @SerializedName(SERIALIZED_NAME_FEDERAL_STATE)
  private String federalState;

  public static final String SERIALIZED_NAME_HAS_BICYCLE_PARKING = "hasBicycleParking";
  @SerializedName(SERIALIZED_NAME_HAS_BICYCLE_PARKING)
  private Boolean hasBicycleParking;

  public static final String SERIALIZED_NAME_HAS_CAR_RENTAL = "hasCarRental";
  @SerializedName(SERIALIZED_NAME_HAS_CAR_RENTAL)
  private Boolean hasCarRental;

  public static final String SERIALIZED_NAME_HAS_D_B_LOUNGE = "hasDBLounge";
  @SerializedName(SERIALIZED_NAME_HAS_D_B_LOUNGE)
  private Boolean hasDBLounge;

  public static final String SERIALIZED_NAME_HAS_LOCAL_PUBLIC_TRANSPORT = "hasLocalPublicTransport";
  @SerializedName(SERIALIZED_NAME_HAS_LOCAL_PUBLIC_TRANSPORT)
  private Boolean hasLocalPublicTransport;

  public static final String SERIALIZED_NAME_HAS_LOCKER_SYSTEM = "hasLockerSystem";
  @SerializedName(SERIALIZED_NAME_HAS_LOCKER_SYSTEM)
  private Boolean hasLockerSystem;

  public static final String SERIALIZED_NAME_HAS_LOST_AND_FOUND = "hasLostAndFound";
  @SerializedName(SERIALIZED_NAME_HAS_LOST_AND_FOUND)
  private Boolean hasLostAndFound;

  public static final String SERIALIZED_NAME_HAS_MOBILITY_SERVICE = "hasMobilityService";
  @SerializedName(SERIALIZED_NAME_HAS_MOBILITY_SERVICE)
  private String hasMobilityService;

  public static final String SERIALIZED_NAME_HAS_PARKING = "hasParking";
  @SerializedName(SERIALIZED_NAME_HAS_PARKING)
  private Boolean hasParking;

  public static final String SERIALIZED_NAME_HAS_PUBLIC_FACILITIES = "hasPublicFacilities";
  @SerializedName(SERIALIZED_NAME_HAS_PUBLIC_FACILITIES)
  private Boolean hasPublicFacilities;

  public static final String SERIALIZED_NAME_HAS_RAILWAY_MISSION = "hasRailwayMission";
  @SerializedName(SERIALIZED_NAME_HAS_RAILWAY_MISSION)
  private Boolean hasRailwayMission;

  public static final String SERIALIZED_NAME_HAS_STEPLESS_ACCESS = "hasSteplessAccess";
  @SerializedName(SERIALIZED_NAME_HAS_STEPLESS_ACCESS)
  private Partial hasSteplessAccess;

  public static final String SERIALIZED_NAME_HAS_TAXI_RANK = "hasTaxiRank";
  @SerializedName(SERIALIZED_NAME_HAS_TAXI_RANK)
  private Boolean hasTaxiRank;

  public static final String SERIALIZED_NAME_HAS_TRAVEL_CENTER = "hasTravelCenter";
  @SerializedName(SERIALIZED_NAME_HAS_TRAVEL_CENTER)
  private Boolean hasTravelCenter;

  public static final String SERIALIZED_NAME_HAS_TRAVEL_NECESSITIES = "hasTravelNecessities";
  @SerializedName(SERIALIZED_NAME_HAS_TRAVEL_NECESSITIES)
  private Boolean hasTravelNecessities;

  public static final String SERIALIZED_NAME_HAS_WI_FI = "hasWiFi";
  @SerializedName(SERIALIZED_NAME_HAS_WI_FI)
  private Boolean hasWiFi;

  public static final String SERIALIZED_NAME_LOCAL_SERVICE_STAFF = "localServiceStaff";
  @SerializedName(SERIALIZED_NAME_LOCAL_SERVICE_STAFF)
  private Schedule localServiceStaff;

  public static final String SERIALIZED_NAME_MAILING_ADRESS = "mailingAdress";
  @SerializedName(SERIALIZED_NAME_MAILING_ADRESS)
  private Address mailingAdress;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_PRICE_CATEGORY = "priceCategory";
  @SerializedName(SERIALIZED_NAME_PRICE_CATEGORY)
  private Integer priceCategory;

  public static final String SERIALIZED_NAME_REGIONALBEREICH = "regionalbereich";
  @SerializedName(SERIALIZED_NAME_REGIONALBEREICH)
  private RegionalBereichRef regionalbereich;

  public static final String SERIALIZED_NAME_RI_L100_IDENTIFIERS = "riL100Identifiers";
  @SerializedName(SERIALIZED_NAME_RI_L100_IDENTIFIERS)
  private List<RiL100Identifier> riL100Identifiers = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATION_MANAGEMENT = "stationManagement";
  @SerializedName(SERIALIZED_NAME_STATION_MANAGEMENT)
  private StationManagementRef stationManagement;

  public static final String SERIALIZED_NAME_SZENTRALE = "szentrale";
  @SerializedName(SERIALIZED_NAME_SZENTRALE)
  private SZentraleRef szentrale;

  public static final String SERIALIZED_NAME_TIMETABLE_OFFICE = "timetableOffice";
  @SerializedName(SERIALIZED_NAME_TIMETABLE_OFFICE)
  private TimetableOffice timetableOffice;

  public Station() {
  }

  public Station dbinformation(Schedule dbinformation) {
    this.dbinformation = dbinformation;
    return this;
  }

  /**
   * Get dbinformation
   * @return dbinformation
   */
  @javax.annotation.Nullable
  public Schedule getDbinformation() {
    return dbinformation;
  }

  public void setDbinformation(Schedule dbinformation) {
    this.dbinformation = dbinformation;
  }


  public Station aufgabentraeger(Aufgabentraeger aufgabentraeger) {
    this.aufgabentraeger = aufgabentraeger;
    return this;
  }

  /**
   * Get aufgabentraeger
   * @return aufgabentraeger
   */
  @javax.annotation.Nullable
  public Aufgabentraeger getAufgabentraeger() {
    return aufgabentraeger;
  }

  public void setAufgabentraeger(Aufgabentraeger aufgabentraeger) {
    this.aufgabentraeger = aufgabentraeger;
  }


  public Station category(Integer category) {
    this.category = category;
    return this;
  }

  /**
   * the stations category (-1...7). Stations with category -1 or 0 are not in production, e.g. planned, saled, without train stops.
   * @return category
   */
  @javax.annotation.Nullable
  public Integer getCategory() {
    return category;
  }

  public void setCategory(Integer category) {
    this.category = category;
  }


  public Station evaNumbers(List<EVANumber> evaNumbers) {
    this.evaNumbers = evaNumbers;
    return this;
  }

  public Station addEvaNumbersItem(EVANumber evaNumbersItem) {
    if (this.evaNumbers == null) {
      this.evaNumbers = new ArrayList<>();
    }
    this.evaNumbers.add(evaNumbersItem);
    return this;
  }

  /**
   * station related EVA-Numbers
   * @return evaNumbers
   */
  @javax.annotation.Nullable
  public List<EVANumber> getEvaNumbers() {
    return evaNumbers;
  }

  public void setEvaNumbers(List<EVANumber> evaNumbers) {
    this.evaNumbers = evaNumbers;
  }


  public Station federalState(String federalState) {
    this.federalState = federalState;
    return this;
  }

  /**
   * german federal state
   * @return federalState
   */
  @javax.annotation.Nullable
  public String getFederalState() {
    return federalState;
  }

  public void setFederalState(String federalState) {
    this.federalState = federalState;
  }


  public Station hasBicycleParking(Boolean hasBicycleParking) {
    this.hasBicycleParking = hasBicycleParking;
    return this;
  }

  /**
   * public bicycle parking y/n
   * @return hasBicycleParking
   */
  @javax.annotation.Nullable
  public Boolean getHasBicycleParking() {
    return hasBicycleParking;
  }

  public void setHasBicycleParking(Boolean hasBicycleParking) {
    this.hasBicycleParking = hasBicycleParking;
  }


  public Station hasCarRental(Boolean hasCarRental) {
    this.hasCarRental = hasCarRental;
    return this;
  }

  /**
   * car sharing or car rental y/n
   * @return hasCarRental
   */
  @javax.annotation.Nullable
  public Boolean getHasCarRental() {
    return hasCarRental;
  }

  public void setHasCarRental(Boolean hasCarRental) {
    this.hasCarRental = hasCarRental;
  }


  public Station hasDBLounge(Boolean hasDBLounge) {
    this.hasDBLounge = hasDBLounge;
    return this;
  }

  /**
   * DB lounge y/n
   * @return hasDBLounge
   */
  @javax.annotation.Nullable
  public Boolean getHasDBLounge() {
    return hasDBLounge;
  }

  public void setHasDBLounge(Boolean hasDBLounge) {
    this.hasDBLounge = hasDBLounge;
  }


  public Station hasLocalPublicTransport(Boolean hasLocalPublicTransport) {
    this.hasLocalPublicTransport = hasLocalPublicTransport;
    return this;
  }

  /**
   * local public transport y/n
   * @return hasLocalPublicTransport
   */
  @javax.annotation.Nullable
  public Boolean getHasLocalPublicTransport() {
    return hasLocalPublicTransport;
  }

  public void setHasLocalPublicTransport(Boolean hasLocalPublicTransport) {
    this.hasLocalPublicTransport = hasLocalPublicTransport;
  }


  public Station hasLockerSystem(Boolean hasLockerSystem) {
    this.hasLockerSystem = hasLockerSystem;
    return this;
  }

  /**
   * public facilities y/n
   * @return hasLockerSystem
   */
  @javax.annotation.Nullable
  public Boolean getHasLockerSystem() {
    return hasLockerSystem;
  }

  public void setHasLockerSystem(Boolean hasLockerSystem) {
    this.hasLockerSystem = hasLockerSystem;
  }


  public Station hasLostAndFound(Boolean hasLostAndFound) {
    this.hasLostAndFound = hasLostAndFound;
    return this;
  }

  /**
   * lost and found y/n
   * @return hasLostAndFound
   */
  @javax.annotation.Nullable
  public Boolean getHasLostAndFound() {
    return hasLostAndFound;
  }

  public void setHasLostAndFound(Boolean hasLostAndFound) {
    this.hasLostAndFound = hasLostAndFound;
  }


  public Station hasMobilityService(String hasMobilityService) {
    this.hasMobilityService = hasMobilityService;
    return this;
  }

  /**
   * values are &#39;no&#39;, &#39;yes, advance notification is requested...&#39; or &#39;yes, advance notification is required...&#39;
   * @return hasMobilityService
   */
  @javax.annotation.Nullable
  public String getHasMobilityService() {
    return hasMobilityService;
  }

  public void setHasMobilityService(String hasMobilityService) {
    this.hasMobilityService = hasMobilityService;
  }


  public Station hasParking(Boolean hasParking) {
    this.hasParking = hasParking;
    return this;
  }

  /**
   * public parking y/n
   * @return hasParking
   */
  @javax.annotation.Nullable
  public Boolean getHasParking() {
    return hasParking;
  }

  public void setHasParking(Boolean hasParking) {
    this.hasParking = hasParking;
  }


  public Station hasPublicFacilities(Boolean hasPublicFacilities) {
    this.hasPublicFacilities = hasPublicFacilities;
    return this;
  }

  /**
   * public facilities y/n
   * @return hasPublicFacilities
   */
  @javax.annotation.Nullable
  public Boolean getHasPublicFacilities() {
    return hasPublicFacilities;
  }

  public void setHasPublicFacilities(Boolean hasPublicFacilities) {
    this.hasPublicFacilities = hasPublicFacilities;
  }


  public Station hasRailwayMission(Boolean hasRailwayMission) {
    this.hasRailwayMission = hasRailwayMission;
    return this;
  }

  /**
   * railway mission y/n
   * @return hasRailwayMission
   */
  @javax.annotation.Nullable
  public Boolean getHasRailwayMission() {
    return hasRailwayMission;
  }

  public void setHasRailwayMission(Boolean hasRailwayMission) {
    this.hasRailwayMission = hasRailwayMission;
  }


  public Station hasSteplessAccess(Partial hasSteplessAccess) {
    this.hasSteplessAccess = hasSteplessAccess;
    return this;
  }

  /**
   * Get hasSteplessAccess
   * @return hasSteplessAccess
   */
  @javax.annotation.Nullable
  public Partial getHasSteplessAccess() {
    return hasSteplessAccess;
  }

  public void setHasSteplessAccess(Partial hasSteplessAccess) {
    this.hasSteplessAccess = hasSteplessAccess;
  }


  public Station hasTaxiRank(Boolean hasTaxiRank) {
    this.hasTaxiRank = hasTaxiRank;
    return this;
  }

  /**
   * taxi rank in front of the station y/n
   * @return hasTaxiRank
   */
  @javax.annotation.Nullable
  public Boolean getHasTaxiRank() {
    return hasTaxiRank;
  }

  public void setHasTaxiRank(Boolean hasTaxiRank) {
    this.hasTaxiRank = hasTaxiRank;
  }


  public Station hasTravelCenter(Boolean hasTravelCenter) {
    this.hasTravelCenter = hasTravelCenter;
    return this;
  }

  /**
   * local travel center y/n
   * @return hasTravelCenter
   */
  @javax.annotation.Nullable
  public Boolean getHasTravelCenter() {
    return hasTravelCenter;
  }

  public void setHasTravelCenter(Boolean hasTravelCenter) {
    this.hasTravelCenter = hasTravelCenter;
  }


  public Station hasTravelNecessities(Boolean hasTravelNecessities) {
    this.hasTravelNecessities = hasTravelNecessities;
    return this;
  }

  /**
   * a shop for travel necessities y/n
   * @return hasTravelNecessities
   */
  @javax.annotation.Nullable
  public Boolean getHasTravelNecessities() {
    return hasTravelNecessities;
  }

  public void setHasTravelNecessities(Boolean hasTravelNecessities) {
    this.hasTravelNecessities = hasTravelNecessities;
  }


  public Station hasWiFi(Boolean hasWiFi) {
    this.hasWiFi = hasWiFi;
    return this;
  }

  /**
   * public Wi-Fi is available y/n
   * @return hasWiFi
   */
  @javax.annotation.Nullable
  public Boolean getHasWiFi() {
    return hasWiFi;
  }

  public void setHasWiFi(Boolean hasWiFi) {
    this.hasWiFi = hasWiFi;
  }


  public Station localServiceStaff(Schedule localServiceStaff) {
    this.localServiceStaff = localServiceStaff;
    return this;
  }

  /**
   * Get localServiceStaff
   * @return localServiceStaff
   */
  @javax.annotation.Nullable
  public Schedule getLocalServiceStaff() {
    return localServiceStaff;
  }

  public void setLocalServiceStaff(Schedule localServiceStaff) {
    this.localServiceStaff = localServiceStaff;
  }


  public Station mailingAdress(Address mailingAdress) {
    this.mailingAdress = mailingAdress;
    return this;
  }

  /**
   * Get mailingAdress
   * @return mailingAdress
   */
  @javax.annotation.Nullable
  public Address getMailingAdress() {
    return mailingAdress;
  }

  public void setMailingAdress(Address mailingAdress) {
    this.mailingAdress = mailingAdress;
  }


  public Station name(String name) {
    this.name = name;
    return this;
  }

  /**
   * the stations name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Station number(Integer number) {
    this.number = number;
    return this;
  }

  /**
   * unique identifier representing a specific railway station
   * @return number
   */
  @javax.annotation.Nullable
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }


  public Station priceCategory(Integer priceCategory) {
    this.priceCategory = priceCategory;
    return this;
  }

  /**
   * determines in some respect the price for train stops at a specific station (1..7)
   * @return priceCategory
   */
  @javax.annotation.Nullable
  public Integer getPriceCategory() {
    return priceCategory;
  }

  public void setPriceCategory(Integer priceCategory) {
    this.priceCategory = priceCategory;
  }


  public Station regionalbereich(RegionalBereichRef regionalbereich) {
    this.regionalbereich = regionalbereich;
    return this;
  }

  /**
   * Get regionalbereich
   * @return regionalbereich
   */
  @javax.annotation.Nullable
  public RegionalBereichRef getRegionalbereich() {
    return regionalbereich;
  }

  public void setRegionalbereich(RegionalBereichRef regionalbereich) {
    this.regionalbereich = regionalbereich;
  }


  public Station riL100Identifiers(List<RiL100Identifier> riL100Identifiers) {
    this.riL100Identifiers = riL100Identifiers;
    return this;
  }

  public Station addRiL100IdentifiersItem(RiL100Identifier riL100IdentifiersItem) {
    if (this.riL100Identifiers == null) {
      this.riL100Identifiers = new ArrayList<>();
    }
    this.riL100Identifiers.add(riL100IdentifiersItem);
    return this;
  }

  /**
   * station related Ril100s
   * @return riL100Identifiers
   */
  @javax.annotation.Nullable
  public List<RiL100Identifier> getRiL100Identifiers() {
    return riL100Identifiers;
  }

  public void setRiL100Identifiers(List<RiL100Identifier> riL100Identifiers) {
    this.riL100Identifiers = riL100Identifiers;
  }


  public Station stationManagement(StationManagementRef stationManagement) {
    this.stationManagement = stationManagement;
    return this;
  }

  /**
   * Get stationManagement
   * @return stationManagement
   */
  @javax.annotation.Nullable
  public StationManagementRef getStationManagement() {
    return stationManagement;
  }

  public void setStationManagement(StationManagementRef stationManagement) {
    this.stationManagement = stationManagement;
  }


  public Station szentrale(SZentraleRef szentrale) {
    this.szentrale = szentrale;
    return this;
  }

  /**
   * Get szentrale
   * @return szentrale
   */
  @javax.annotation.Nullable
  public SZentraleRef getSzentrale() {
    return szentrale;
  }

  public void setSzentrale(SZentraleRef szentrale) {
    this.szentrale = szentrale;
  }


  public Station timetableOffice(TimetableOffice timetableOffice) {
    this.timetableOffice = timetableOffice;
    return this;
  }

  /**
   * Get timetableOffice
   * @return timetableOffice
   */
  @javax.annotation.Nullable
  public TimetableOffice getTimetableOffice() {
    return timetableOffice;
  }

  public void setTimetableOffice(TimetableOffice timetableOffice) {
    this.timetableOffice = timetableOffice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Station station = (Station) o;
    return Objects.equals(this.dbinformation, station.dbinformation) &&
        Objects.equals(this.aufgabentraeger, station.aufgabentraeger) &&
        Objects.equals(this.category, station.category) &&
        Objects.equals(this.evaNumbers, station.evaNumbers) &&
        Objects.equals(this.federalState, station.federalState) &&
        Objects.equals(this.hasBicycleParking, station.hasBicycleParking) &&
        Objects.equals(this.hasCarRental, station.hasCarRental) &&
        Objects.equals(this.hasDBLounge, station.hasDBLounge) &&
        Objects.equals(this.hasLocalPublicTransport, station.hasLocalPublicTransport) &&
        Objects.equals(this.hasLockerSystem, station.hasLockerSystem) &&
        Objects.equals(this.hasLostAndFound, station.hasLostAndFound) &&
        Objects.equals(this.hasMobilityService, station.hasMobilityService) &&
        Objects.equals(this.hasParking, station.hasParking) &&
        Objects.equals(this.hasPublicFacilities, station.hasPublicFacilities) &&
        Objects.equals(this.hasRailwayMission, station.hasRailwayMission) &&
        Objects.equals(this.hasSteplessAccess, station.hasSteplessAccess) &&
        Objects.equals(this.hasTaxiRank, station.hasTaxiRank) &&
        Objects.equals(this.hasTravelCenter, station.hasTravelCenter) &&
        Objects.equals(this.hasTravelNecessities, station.hasTravelNecessities) &&
        Objects.equals(this.hasWiFi, station.hasWiFi) &&
        Objects.equals(this.localServiceStaff, station.localServiceStaff) &&
        Objects.equals(this.mailingAdress, station.mailingAdress) &&
        Objects.equals(this.name, station.name) &&
        Objects.equals(this.number, station.number) &&
        Objects.equals(this.priceCategory, station.priceCategory) &&
        Objects.equals(this.regionalbereich, station.regionalbereich) &&
        Objects.equals(this.riL100Identifiers, station.riL100Identifiers) &&
        Objects.equals(this.stationManagement, station.stationManagement) &&
        Objects.equals(this.szentrale, station.szentrale) &&
        Objects.equals(this.timetableOffice, station.timetableOffice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbinformation, aufgabentraeger, category, evaNumbers, federalState, hasBicycleParking, hasCarRental, hasDBLounge, hasLocalPublicTransport, hasLockerSystem, hasLostAndFound, hasMobilityService, hasParking, hasPublicFacilities, hasRailwayMission, hasSteplessAccess, hasTaxiRank, hasTravelCenter, hasTravelNecessities, hasWiFi, localServiceStaff, mailingAdress, name, number, priceCategory, regionalbereich, riL100Identifiers, stationManagement, szentrale, timetableOffice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Station {\n");
    sb.append("    dbinformation: ").append(toIndentedString(dbinformation)).append("\n");
    sb.append("    aufgabentraeger: ").append(toIndentedString(aufgabentraeger)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    evaNumbers: ").append(toIndentedString(evaNumbers)).append("\n");
    sb.append("    federalState: ").append(toIndentedString(federalState)).append("\n");
    sb.append("    hasBicycleParking: ").append(toIndentedString(hasBicycleParking)).append("\n");
    sb.append("    hasCarRental: ").append(toIndentedString(hasCarRental)).append("\n");
    sb.append("    hasDBLounge: ").append(toIndentedString(hasDBLounge)).append("\n");
    sb.append("    hasLocalPublicTransport: ").append(toIndentedString(hasLocalPublicTransport)).append("\n");
    sb.append("    hasLockerSystem: ").append(toIndentedString(hasLockerSystem)).append("\n");
    sb.append("    hasLostAndFound: ").append(toIndentedString(hasLostAndFound)).append("\n");
    sb.append("    hasMobilityService: ").append(toIndentedString(hasMobilityService)).append("\n");
    sb.append("    hasParking: ").append(toIndentedString(hasParking)).append("\n");
    sb.append("    hasPublicFacilities: ").append(toIndentedString(hasPublicFacilities)).append("\n");
    sb.append("    hasRailwayMission: ").append(toIndentedString(hasRailwayMission)).append("\n");
    sb.append("    hasSteplessAccess: ").append(toIndentedString(hasSteplessAccess)).append("\n");
    sb.append("    hasTaxiRank: ").append(toIndentedString(hasTaxiRank)).append("\n");
    sb.append("    hasTravelCenter: ").append(toIndentedString(hasTravelCenter)).append("\n");
    sb.append("    hasTravelNecessities: ").append(toIndentedString(hasTravelNecessities)).append("\n");
    sb.append("    hasWiFi: ").append(toIndentedString(hasWiFi)).append("\n");
    sb.append("    localServiceStaff: ").append(toIndentedString(localServiceStaff)).append("\n");
    sb.append("    mailingAdress: ").append(toIndentedString(mailingAdress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    priceCategory: ").append(toIndentedString(priceCategory)).append("\n");
    sb.append("    regionalbereich: ").append(toIndentedString(regionalbereich)).append("\n");
    sb.append("    riL100Identifiers: ").append(toIndentedString(riL100Identifiers)).append("\n");
    sb.append("    stationManagement: ").append(toIndentedString(stationManagement)).append("\n");
    sb.append("    szentrale: ").append(toIndentedString(szentrale)).append("\n");
    sb.append("    timetableOffice: ").append(toIndentedString(timetableOffice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DBinformation");
    openapiFields.add("aufgabentraeger");
    openapiFields.add("category");
    openapiFields.add("evaNumbers");
    openapiFields.add("federalState");
    openapiFields.add("hasBicycleParking");
    openapiFields.add("hasCarRental");
    openapiFields.add("hasDBLounge");
    openapiFields.add("hasLocalPublicTransport");
    openapiFields.add("hasLockerSystem");
    openapiFields.add("hasLostAndFound");
    openapiFields.add("hasMobilityService");
    openapiFields.add("hasParking");
    openapiFields.add("hasPublicFacilities");
    openapiFields.add("hasRailwayMission");
    openapiFields.add("hasSteplessAccess");
    openapiFields.add("hasTaxiRank");
    openapiFields.add("hasTravelCenter");
    openapiFields.add("hasTravelNecessities");
    openapiFields.add("hasWiFi");
    openapiFields.add("localServiceStaff");
    openapiFields.add("mailingAdress");
    openapiFields.add("name");
    openapiFields.add("number");
    openapiFields.add("priceCategory");
    openapiFields.add("regionalbereich");
    openapiFields.add("riL100Identifiers");
    openapiFields.add("stationManagement");
    openapiFields.add("szentrale");
    openapiFields.add("timetableOffice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Station
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Station.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Station is not found in the empty JSON string", Station.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Station.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Station` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DBinformation`
      if (jsonObj.get("DBinformation") != null && !jsonObj.get("DBinformation").isJsonNull()) {
        Schedule.validateJsonElement(jsonObj.get("DBinformation"));
      }
      // validate the optional field `aufgabentraeger`
      if (jsonObj.get("aufgabentraeger") != null && !jsonObj.get("aufgabentraeger").isJsonNull()) {
        Aufgabentraeger.validateJsonElement(jsonObj.get("aufgabentraeger"));
      }
      if (jsonObj.get("evaNumbers") != null && !jsonObj.get("evaNumbers").isJsonNull()) {
        JsonArray jsonArrayevaNumbers = jsonObj.getAsJsonArray("evaNumbers");
        if (jsonArrayevaNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("evaNumbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `evaNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("evaNumbers").toString()));
          }

          // validate the optional field `evaNumbers` (array)
          for (int i = 0; i < jsonArrayevaNumbers.size(); i++) {
            EVANumber.validateJsonElement(jsonArrayevaNumbers.get(i));
          };
        }
      }
      if ((jsonObj.get("federalState") != null && !jsonObj.get("federalState").isJsonNull()) && !jsonObj.get("federalState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `federalState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("federalState").toString()));
      }
      if ((jsonObj.get("hasMobilityService") != null && !jsonObj.get("hasMobilityService").isJsonNull()) && !jsonObj.get("hasMobilityService").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hasMobilityService` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hasMobilityService").toString()));
      }
      // validate the optional field `hasSteplessAccess`
      if (jsonObj.get("hasSteplessAccess") != null && !jsonObj.get("hasSteplessAccess").isJsonNull()) {
        Partial.validateJsonElement(jsonObj.get("hasSteplessAccess"));
      }
      // validate the optional field `localServiceStaff`
      if (jsonObj.get("localServiceStaff") != null && !jsonObj.get("localServiceStaff").isJsonNull()) {
        Schedule.validateJsonElement(jsonObj.get("localServiceStaff"));
      }
      // validate the optional field `mailingAdress`
      if (jsonObj.get("mailingAdress") != null && !jsonObj.get("mailingAdress").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("mailingAdress"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `regionalbereich`
      if (jsonObj.get("regionalbereich") != null && !jsonObj.get("regionalbereich").isJsonNull()) {
        RegionalBereichRef.validateJsonElement(jsonObj.get("regionalbereich"));
      }
      if (jsonObj.get("riL100Identifiers") != null && !jsonObj.get("riL100Identifiers").isJsonNull()) {
        JsonArray jsonArrayriL100Identifiers = jsonObj.getAsJsonArray("riL100Identifiers");
        if (jsonArrayriL100Identifiers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("riL100Identifiers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `riL100Identifiers` to be an array in the JSON string but got `%s`", jsonObj.get("riL100Identifiers").toString()));
          }

          // validate the optional field `riL100Identifiers` (array)
          for (int i = 0; i < jsonArrayriL100Identifiers.size(); i++) {
            RiL100Identifier.validateJsonElement(jsonArrayriL100Identifiers.get(i));
          };
        }
      }
      // validate the optional field `stationManagement`
      if (jsonObj.get("stationManagement") != null && !jsonObj.get("stationManagement").isJsonNull()) {
        StationManagementRef.validateJsonElement(jsonObj.get("stationManagement"));
      }
      // validate the optional field `szentrale`
      if (jsonObj.get("szentrale") != null && !jsonObj.get("szentrale").isJsonNull()) {
        SZentraleRef.validateJsonElement(jsonObj.get("szentrale"));
      }
      // validate the optional field `timetableOffice`
      if (jsonObj.get("timetableOffice") != null && !jsonObj.get("timetableOffice").isJsonNull()) {
        TimetableOffice.validateJsonElement(jsonObj.get("timetableOffice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Station.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Station' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Station> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Station.class));

       return (TypeAdapter<T>) new TypeAdapter<Station>() {
           @Override
           public void write(JsonWriter out, Station value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Station read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Station given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Station
   * @throws IOException if the JSON string is invalid with respect to Station
   */
  public static Station fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Station.class);
  }

  /**
   * Convert an instance of Station to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

