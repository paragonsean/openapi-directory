/*
 * Stationsdatenbereitstellung
 * An API providing master data for German railway stations by DB Station&Service AG.
 *
 * The version of the OpenAPI document: 2.2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Aufgabentraeger;
import org.openapitools.client.model.EVANumber;
import org.openapitools.client.model.Partial;
import org.openapitools.client.model.RegionalBereichRef;
import org.openapitools.client.model.RiL100Identifier;
import org.openapitools.client.model.SZentraleRef;
import org.openapitools.client.model.Schedule;
import org.openapitools.client.model.StationManagementRef;
import org.openapitools.client.model.TimetableOffice;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Station
 */
public class StationTest {
    private final Station model = new Station();

    /**
     * Model tests for Station
     */
    @Test
    public void testStation() {
        // TODO: test Station
    }

    /**
     * Test the property 'dbinformation'
     */
    @Test
    public void dbinformationTest() {
        // TODO: test dbinformation
    }

    /**
     * Test the property 'aufgabentraeger'
     */
    @Test
    public void aufgabentraegerTest() {
        // TODO: test aufgabentraeger
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'evaNumbers'
     */
    @Test
    public void evaNumbersTest() {
        // TODO: test evaNumbers
    }

    /**
     * Test the property 'federalState'
     */
    @Test
    public void federalStateTest() {
        // TODO: test federalState
    }

    /**
     * Test the property 'hasBicycleParking'
     */
    @Test
    public void hasBicycleParkingTest() {
        // TODO: test hasBicycleParking
    }

    /**
     * Test the property 'hasCarRental'
     */
    @Test
    public void hasCarRentalTest() {
        // TODO: test hasCarRental
    }

    /**
     * Test the property 'hasDBLounge'
     */
    @Test
    public void hasDBLoungeTest() {
        // TODO: test hasDBLounge
    }

    /**
     * Test the property 'hasLocalPublicTransport'
     */
    @Test
    public void hasLocalPublicTransportTest() {
        // TODO: test hasLocalPublicTransport
    }

    /**
     * Test the property 'hasLockerSystem'
     */
    @Test
    public void hasLockerSystemTest() {
        // TODO: test hasLockerSystem
    }

    /**
     * Test the property 'hasLostAndFound'
     */
    @Test
    public void hasLostAndFoundTest() {
        // TODO: test hasLostAndFound
    }

    /**
     * Test the property 'hasMobilityService'
     */
    @Test
    public void hasMobilityServiceTest() {
        // TODO: test hasMobilityService
    }

    /**
     * Test the property 'hasParking'
     */
    @Test
    public void hasParkingTest() {
        // TODO: test hasParking
    }

    /**
     * Test the property 'hasPublicFacilities'
     */
    @Test
    public void hasPublicFacilitiesTest() {
        // TODO: test hasPublicFacilities
    }

    /**
     * Test the property 'hasRailwayMission'
     */
    @Test
    public void hasRailwayMissionTest() {
        // TODO: test hasRailwayMission
    }

    /**
     * Test the property 'hasSteplessAccess'
     */
    @Test
    public void hasSteplessAccessTest() {
        // TODO: test hasSteplessAccess
    }

    /**
     * Test the property 'hasTaxiRank'
     */
    @Test
    public void hasTaxiRankTest() {
        // TODO: test hasTaxiRank
    }

    /**
     * Test the property 'hasTravelCenter'
     */
    @Test
    public void hasTravelCenterTest() {
        // TODO: test hasTravelCenter
    }

    /**
     * Test the property 'hasTravelNecessities'
     */
    @Test
    public void hasTravelNecessitiesTest() {
        // TODO: test hasTravelNecessities
    }

    /**
     * Test the property 'hasWiFi'
     */
    @Test
    public void hasWiFiTest() {
        // TODO: test hasWiFi
    }

    /**
     * Test the property 'localServiceStaff'
     */
    @Test
    public void localServiceStaffTest() {
        // TODO: test localServiceStaff
    }

    /**
     * Test the property 'mailingAdress'
     */
    @Test
    public void mailingAdressTest() {
        // TODO: test mailingAdress
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'priceCategory'
     */
    @Test
    public void priceCategoryTest() {
        // TODO: test priceCategory
    }

    /**
     * Test the property 'regionalbereich'
     */
    @Test
    public void regionalbereichTest() {
        // TODO: test regionalbereich
    }

    /**
     * Test the property 'riL100Identifiers'
     */
    @Test
    public void riL100IdentifiersTest() {
        // TODO: test riL100Identifiers
    }

    /**
     * Test the property 'stationManagement'
     */
    @Test
    public void stationManagementTest() {
        // TODO: test stationManagement
    }

    /**
     * Test the property 'szentrale'
     */
    @Test
    public void szentraleTest() {
        // TODO: test szentrale
    }

    /**
     * Test the property 'timetableOffice'
     */
    @Test
    public void timetableOfficeTest() {
        // TODO: test timetableOffice
    }

}
