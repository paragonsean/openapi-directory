# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.aufgabentraeger import Aufgabentraeger
from openapi_server.models.eva_number import EVANumber
from openapi_server.models.partial import Partial
from openapi_server.models.regional_bereich_ref import RegionalBereichRef
from openapi_server.models.ri_l100_identifier import RiL100Identifier
from openapi_server.models.s_zentrale_ref import SZentraleRef
from openapi_server.models.schedule import Schedule
from openapi_server.models.station_management_ref import StationManagementRef
from openapi_server.models.timetable_office import TimetableOffice
from openapi_server import util


class Station(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, d_binformation: Schedule=None, aufgabentraeger: Aufgabentraeger=None, category: int=None, eva_numbers: List[EVANumber]=None, federal_state: str=None, has_bicycle_parking: bool=None, has_car_rental: bool=None, has_db_lounge: bool=None, has_local_public_transport: bool=None, has_locker_system: bool=None, has_lost_and_found: bool=None, has_mobility_service: str=None, has_parking: bool=None, has_public_facilities: bool=None, has_railway_mission: bool=None, has_stepless_access: Partial=None, has_taxi_rank: bool=None, has_travel_center: bool=None, has_travel_necessities: bool=None, has_wi_fi: bool=None, local_service_staff: Schedule=None, mailing_adress: Address=None, name: str=None, number: int=None, price_category: int=None, regionalbereich: RegionalBereichRef=None, ri_l100_identifiers: List[RiL100Identifier]=None, station_management: StationManagementRef=None, szentrale: SZentraleRef=None, timetable_office: TimetableOffice=None):
        """Station - a model defined in OpenAPI

        :param d_binformation: The d_binformation of this Station.
        :param aufgabentraeger: The aufgabentraeger of this Station.
        :param category: The category of this Station.
        :param eva_numbers: The eva_numbers of this Station.
        :param federal_state: The federal_state of this Station.
        :param has_bicycle_parking: The has_bicycle_parking of this Station.
        :param has_car_rental: The has_car_rental of this Station.
        :param has_db_lounge: The has_db_lounge of this Station.
        :param has_local_public_transport: The has_local_public_transport of this Station.
        :param has_locker_system: The has_locker_system of this Station.
        :param has_lost_and_found: The has_lost_and_found of this Station.
        :param has_mobility_service: The has_mobility_service of this Station.
        :param has_parking: The has_parking of this Station.
        :param has_public_facilities: The has_public_facilities of this Station.
        :param has_railway_mission: The has_railway_mission of this Station.
        :param has_stepless_access: The has_stepless_access of this Station.
        :param has_taxi_rank: The has_taxi_rank of this Station.
        :param has_travel_center: The has_travel_center of this Station.
        :param has_travel_necessities: The has_travel_necessities of this Station.
        :param has_wi_fi: The has_wi_fi of this Station.
        :param local_service_staff: The local_service_staff of this Station.
        :param mailing_adress: The mailing_adress of this Station.
        :param name: The name of this Station.
        :param number: The number of this Station.
        :param price_category: The price_category of this Station.
        :param regionalbereich: The regionalbereich of this Station.
        :param ri_l100_identifiers: The ri_l100_identifiers of this Station.
        :param station_management: The station_management of this Station.
        :param szentrale: The szentrale of this Station.
        :param timetable_office: The timetable_office of this Station.
        """
        self.openapi_types = {
            'd_binformation': Schedule,
            'aufgabentraeger': Aufgabentraeger,
            'category': int,
            'eva_numbers': List[EVANumber],
            'federal_state': str,
            'has_bicycle_parking': bool,
            'has_car_rental': bool,
            'has_db_lounge': bool,
            'has_local_public_transport': bool,
            'has_locker_system': bool,
            'has_lost_and_found': bool,
            'has_mobility_service': str,
            'has_parking': bool,
            'has_public_facilities': bool,
            'has_railway_mission': bool,
            'has_stepless_access': Partial,
            'has_taxi_rank': bool,
            'has_travel_center': bool,
            'has_travel_necessities': bool,
            'has_wi_fi': bool,
            'local_service_staff': Schedule,
            'mailing_adress': Address,
            'name': str,
            'number': int,
            'price_category': int,
            'regionalbereich': RegionalBereichRef,
            'ri_l100_identifiers': List[RiL100Identifier],
            'station_management': StationManagementRef,
            'szentrale': SZentraleRef,
            'timetable_office': TimetableOffice
        }

        self.attribute_map = {
            'd_binformation': 'DBinformation',
            'aufgabentraeger': 'aufgabentraeger',
            'category': 'category',
            'eva_numbers': 'evaNumbers',
            'federal_state': 'federalState',
            'has_bicycle_parking': 'hasBicycleParking',
            'has_car_rental': 'hasCarRental',
            'has_db_lounge': 'hasDBLounge',
            'has_local_public_transport': 'hasLocalPublicTransport',
            'has_locker_system': 'hasLockerSystem',
            'has_lost_and_found': 'hasLostAndFound',
            'has_mobility_service': 'hasMobilityService',
            'has_parking': 'hasParking',
            'has_public_facilities': 'hasPublicFacilities',
            'has_railway_mission': 'hasRailwayMission',
            'has_stepless_access': 'hasSteplessAccess',
            'has_taxi_rank': 'hasTaxiRank',
            'has_travel_center': 'hasTravelCenter',
            'has_travel_necessities': 'hasTravelNecessities',
            'has_wi_fi': 'hasWiFi',
            'local_service_staff': 'localServiceStaff',
            'mailing_adress': 'mailingAdress',
            'name': 'name',
            'number': 'number',
            'price_category': 'priceCategory',
            'regionalbereich': 'regionalbereich',
            'ri_l100_identifiers': 'riL100Identifiers',
            'station_management': 'stationManagement',
            'szentrale': 'szentrale',
            'timetable_office': 'timetableOffice'
        }

        self._d_binformation = d_binformation
        self._aufgabentraeger = aufgabentraeger
        self._category = category
        self._eva_numbers = eva_numbers
        self._federal_state = federal_state
        self._has_bicycle_parking = has_bicycle_parking
        self._has_car_rental = has_car_rental
        self._has_db_lounge = has_db_lounge
        self._has_local_public_transport = has_local_public_transport
        self._has_locker_system = has_locker_system
        self._has_lost_and_found = has_lost_and_found
        self._has_mobility_service = has_mobility_service
        self._has_parking = has_parking
        self._has_public_facilities = has_public_facilities
        self._has_railway_mission = has_railway_mission
        self._has_stepless_access = has_stepless_access
        self._has_taxi_rank = has_taxi_rank
        self._has_travel_center = has_travel_center
        self._has_travel_necessities = has_travel_necessities
        self._has_wi_fi = has_wi_fi
        self._local_service_staff = local_service_staff
        self._mailing_adress = mailing_adress
        self._name = name
        self._number = number
        self._price_category = price_category
        self._regionalbereich = regionalbereich
        self._ri_l100_identifiers = ri_l100_identifiers
        self._station_management = station_management
        self._szentrale = szentrale
        self._timetable_office = timetable_office

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Station':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Station of this Station.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def d_binformation(self):
        """Gets the d_binformation of this Station.


        :return: The d_binformation of this Station.
        :rtype: Schedule
        """
        return self._d_binformation

    @d_binformation.setter
    def d_binformation(self, d_binformation):
        """Sets the d_binformation of this Station.


        :param d_binformation: The d_binformation of this Station.
        :type d_binformation: Schedule
        """

        self._d_binformation = d_binformation

    @property
    def aufgabentraeger(self):
        """Gets the aufgabentraeger of this Station.


        :return: The aufgabentraeger of this Station.
        :rtype: Aufgabentraeger
        """
        return self._aufgabentraeger

    @aufgabentraeger.setter
    def aufgabentraeger(self, aufgabentraeger):
        """Sets the aufgabentraeger of this Station.


        :param aufgabentraeger: The aufgabentraeger of this Station.
        :type aufgabentraeger: Aufgabentraeger
        """

        self._aufgabentraeger = aufgabentraeger

    @property
    def category(self):
        """Gets the category of this Station.

        the stations category (-1...7). Stations with category -1 or 0 are not in production, e.g. planned, saled, without train stops.

        :return: The category of this Station.
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Station.

        the stations category (-1...7). Stations with category -1 or 0 are not in production, e.g. planned, saled, without train stops.

        :param category: The category of this Station.
        :type category: int
        """

        self._category = category

    @property
    def eva_numbers(self):
        """Gets the eva_numbers of this Station.

        station related EVA-Numbers

        :return: The eva_numbers of this Station.
        :rtype: List[EVANumber]
        """
        return self._eva_numbers

    @eva_numbers.setter
    def eva_numbers(self, eva_numbers):
        """Sets the eva_numbers of this Station.

        station related EVA-Numbers

        :param eva_numbers: The eva_numbers of this Station.
        :type eva_numbers: List[EVANumber]
        """

        self._eva_numbers = eva_numbers

    @property
    def federal_state(self):
        """Gets the federal_state of this Station.

        german federal state

        :return: The federal_state of this Station.
        :rtype: str
        """
        return self._federal_state

    @federal_state.setter
    def federal_state(self, federal_state):
        """Sets the federal_state of this Station.

        german federal state

        :param federal_state: The federal_state of this Station.
        :type federal_state: str
        """

        self._federal_state = federal_state

    @property
    def has_bicycle_parking(self):
        """Gets the has_bicycle_parking of this Station.

        public bicycle parking y/n

        :return: The has_bicycle_parking of this Station.
        :rtype: bool
        """
        return self._has_bicycle_parking

    @has_bicycle_parking.setter
    def has_bicycle_parking(self, has_bicycle_parking):
        """Sets the has_bicycle_parking of this Station.

        public bicycle parking y/n

        :param has_bicycle_parking: The has_bicycle_parking of this Station.
        :type has_bicycle_parking: bool
        """

        self._has_bicycle_parking = has_bicycle_parking

    @property
    def has_car_rental(self):
        """Gets the has_car_rental of this Station.

        car sharing or car rental y/n

        :return: The has_car_rental of this Station.
        :rtype: bool
        """
        return self._has_car_rental

    @has_car_rental.setter
    def has_car_rental(self, has_car_rental):
        """Sets the has_car_rental of this Station.

        car sharing or car rental y/n

        :param has_car_rental: The has_car_rental of this Station.
        :type has_car_rental: bool
        """

        self._has_car_rental = has_car_rental

    @property
    def has_db_lounge(self):
        """Gets the has_db_lounge of this Station.

        DB lounge y/n

        :return: The has_db_lounge of this Station.
        :rtype: bool
        """
        return self._has_db_lounge

    @has_db_lounge.setter
    def has_db_lounge(self, has_db_lounge):
        """Sets the has_db_lounge of this Station.

        DB lounge y/n

        :param has_db_lounge: The has_db_lounge of this Station.
        :type has_db_lounge: bool
        """

        self._has_db_lounge = has_db_lounge

    @property
    def has_local_public_transport(self):
        """Gets the has_local_public_transport of this Station.

        local public transport y/n

        :return: The has_local_public_transport of this Station.
        :rtype: bool
        """
        return self._has_local_public_transport

    @has_local_public_transport.setter
    def has_local_public_transport(self, has_local_public_transport):
        """Sets the has_local_public_transport of this Station.

        local public transport y/n

        :param has_local_public_transport: The has_local_public_transport of this Station.
        :type has_local_public_transport: bool
        """

        self._has_local_public_transport = has_local_public_transport

    @property
    def has_locker_system(self):
        """Gets the has_locker_system of this Station.

        public facilities y/n

        :return: The has_locker_system of this Station.
        :rtype: bool
        """
        return self._has_locker_system

    @has_locker_system.setter
    def has_locker_system(self, has_locker_system):
        """Sets the has_locker_system of this Station.

        public facilities y/n

        :param has_locker_system: The has_locker_system of this Station.
        :type has_locker_system: bool
        """

        self._has_locker_system = has_locker_system

    @property
    def has_lost_and_found(self):
        """Gets the has_lost_and_found of this Station.

        lost and found y/n

        :return: The has_lost_and_found of this Station.
        :rtype: bool
        """
        return self._has_lost_and_found

    @has_lost_and_found.setter
    def has_lost_and_found(self, has_lost_and_found):
        """Sets the has_lost_and_found of this Station.

        lost and found y/n

        :param has_lost_and_found: The has_lost_and_found of this Station.
        :type has_lost_and_found: bool
        """

        self._has_lost_and_found = has_lost_and_found

    @property
    def has_mobility_service(self):
        """Gets the has_mobility_service of this Station.

        values are 'no', 'yes, advance notification is requested...' or 'yes, advance notification is required...'

        :return: The has_mobility_service of this Station.
        :rtype: str
        """
        return self._has_mobility_service

    @has_mobility_service.setter
    def has_mobility_service(self, has_mobility_service):
        """Sets the has_mobility_service of this Station.

        values are 'no', 'yes, advance notification is requested...' or 'yes, advance notification is required...'

        :param has_mobility_service: The has_mobility_service of this Station.
        :type has_mobility_service: str
        """

        self._has_mobility_service = has_mobility_service

    @property
    def has_parking(self):
        """Gets the has_parking of this Station.

        public parking y/n

        :return: The has_parking of this Station.
        :rtype: bool
        """
        return self._has_parking

    @has_parking.setter
    def has_parking(self, has_parking):
        """Sets the has_parking of this Station.

        public parking y/n

        :param has_parking: The has_parking of this Station.
        :type has_parking: bool
        """

        self._has_parking = has_parking

    @property
    def has_public_facilities(self):
        """Gets the has_public_facilities of this Station.

        public facilities y/n

        :return: The has_public_facilities of this Station.
        :rtype: bool
        """
        return self._has_public_facilities

    @has_public_facilities.setter
    def has_public_facilities(self, has_public_facilities):
        """Sets the has_public_facilities of this Station.

        public facilities y/n

        :param has_public_facilities: The has_public_facilities of this Station.
        :type has_public_facilities: bool
        """

        self._has_public_facilities = has_public_facilities

    @property
    def has_railway_mission(self):
        """Gets the has_railway_mission of this Station.

        railway mission y/n

        :return: The has_railway_mission of this Station.
        :rtype: bool
        """
        return self._has_railway_mission

    @has_railway_mission.setter
    def has_railway_mission(self, has_railway_mission):
        """Sets the has_railway_mission of this Station.

        railway mission y/n

        :param has_railway_mission: The has_railway_mission of this Station.
        :type has_railway_mission: bool
        """

        self._has_railway_mission = has_railway_mission

    @property
    def has_stepless_access(self):
        """Gets the has_stepless_access of this Station.


        :return: The has_stepless_access of this Station.
        :rtype: Partial
        """
        return self._has_stepless_access

    @has_stepless_access.setter
    def has_stepless_access(self, has_stepless_access):
        """Sets the has_stepless_access of this Station.


        :param has_stepless_access: The has_stepless_access of this Station.
        :type has_stepless_access: Partial
        """

        self._has_stepless_access = has_stepless_access

    @property
    def has_taxi_rank(self):
        """Gets the has_taxi_rank of this Station.

        taxi rank in front of the station y/n

        :return: The has_taxi_rank of this Station.
        :rtype: bool
        """
        return self._has_taxi_rank

    @has_taxi_rank.setter
    def has_taxi_rank(self, has_taxi_rank):
        """Sets the has_taxi_rank of this Station.

        taxi rank in front of the station y/n

        :param has_taxi_rank: The has_taxi_rank of this Station.
        :type has_taxi_rank: bool
        """

        self._has_taxi_rank = has_taxi_rank

    @property
    def has_travel_center(self):
        """Gets the has_travel_center of this Station.

        local travel center y/n

        :return: The has_travel_center of this Station.
        :rtype: bool
        """
        return self._has_travel_center

    @has_travel_center.setter
    def has_travel_center(self, has_travel_center):
        """Sets the has_travel_center of this Station.

        local travel center y/n

        :param has_travel_center: The has_travel_center of this Station.
        :type has_travel_center: bool
        """

        self._has_travel_center = has_travel_center

    @property
    def has_travel_necessities(self):
        """Gets the has_travel_necessities of this Station.

        a shop for travel necessities y/n

        :return: The has_travel_necessities of this Station.
        :rtype: bool
        """
        return self._has_travel_necessities

    @has_travel_necessities.setter
    def has_travel_necessities(self, has_travel_necessities):
        """Sets the has_travel_necessities of this Station.

        a shop for travel necessities y/n

        :param has_travel_necessities: The has_travel_necessities of this Station.
        :type has_travel_necessities: bool
        """

        self._has_travel_necessities = has_travel_necessities

    @property
    def has_wi_fi(self):
        """Gets the has_wi_fi of this Station.

        public Wi-Fi is available y/n

        :return: The has_wi_fi of this Station.
        :rtype: bool
        """
        return self._has_wi_fi

    @has_wi_fi.setter
    def has_wi_fi(self, has_wi_fi):
        """Sets the has_wi_fi of this Station.

        public Wi-Fi is available y/n

        :param has_wi_fi: The has_wi_fi of this Station.
        :type has_wi_fi: bool
        """

        self._has_wi_fi = has_wi_fi

    @property
    def local_service_staff(self):
        """Gets the local_service_staff of this Station.


        :return: The local_service_staff of this Station.
        :rtype: Schedule
        """
        return self._local_service_staff

    @local_service_staff.setter
    def local_service_staff(self, local_service_staff):
        """Sets the local_service_staff of this Station.


        :param local_service_staff: The local_service_staff of this Station.
        :type local_service_staff: Schedule
        """

        self._local_service_staff = local_service_staff

    @property
    def mailing_adress(self):
        """Gets the mailing_adress of this Station.


        :return: The mailing_adress of this Station.
        :rtype: Address
        """
        return self._mailing_adress

    @mailing_adress.setter
    def mailing_adress(self, mailing_adress):
        """Sets the mailing_adress of this Station.


        :param mailing_adress: The mailing_adress of this Station.
        :type mailing_adress: Address
        """

        self._mailing_adress = mailing_adress

    @property
    def name(self):
        """Gets the name of this Station.

        the stations name

        :return: The name of this Station.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Station.

        the stations name

        :param name: The name of this Station.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this Station.

        unique identifier representing a specific railway station

        :return: The number of this Station.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Station.

        unique identifier representing a specific railway station

        :param number: The number of this Station.
        :type number: int
        """

        self._number = number

    @property
    def price_category(self):
        """Gets the price_category of this Station.

        determines in some respect the price for train stops at a specific station (1..7)

        :return: The price_category of this Station.
        :rtype: int
        """
        return self._price_category

    @price_category.setter
    def price_category(self, price_category):
        """Sets the price_category of this Station.

        determines in some respect the price for train stops at a specific station (1..7)

        :param price_category: The price_category of this Station.
        :type price_category: int
        """

        self._price_category = price_category

    @property
    def regionalbereich(self):
        """Gets the regionalbereich of this Station.


        :return: The regionalbereich of this Station.
        :rtype: RegionalBereichRef
        """
        return self._regionalbereich

    @regionalbereich.setter
    def regionalbereich(self, regionalbereich):
        """Sets the regionalbereich of this Station.


        :param regionalbereich: The regionalbereich of this Station.
        :type regionalbereich: RegionalBereichRef
        """

        self._regionalbereich = regionalbereich

    @property
    def ri_l100_identifiers(self):
        """Gets the ri_l100_identifiers of this Station.

        station related Ril100s

        :return: The ri_l100_identifiers of this Station.
        :rtype: List[RiL100Identifier]
        """
        return self._ri_l100_identifiers

    @ri_l100_identifiers.setter
    def ri_l100_identifiers(self, ri_l100_identifiers):
        """Sets the ri_l100_identifiers of this Station.

        station related Ril100s

        :param ri_l100_identifiers: The ri_l100_identifiers of this Station.
        :type ri_l100_identifiers: List[RiL100Identifier]
        """

        self._ri_l100_identifiers = ri_l100_identifiers

    @property
    def station_management(self):
        """Gets the station_management of this Station.


        :return: The station_management of this Station.
        :rtype: StationManagementRef
        """
        return self._station_management

    @station_management.setter
    def station_management(self, station_management):
        """Sets the station_management of this Station.


        :param station_management: The station_management of this Station.
        :type station_management: StationManagementRef
        """

        self._station_management = station_management

    @property
    def szentrale(self):
        """Gets the szentrale of this Station.


        :return: The szentrale of this Station.
        :rtype: SZentraleRef
        """
        return self._szentrale

    @szentrale.setter
    def szentrale(self, szentrale):
        """Sets the szentrale of this Station.


        :param szentrale: The szentrale of this Station.
        :type szentrale: SZentraleRef
        """

        self._szentrale = szentrale

    @property
    def timetable_office(self):
        """Gets the timetable_office of this Station.


        :return: The timetable_office of this Station.
        :rtype: TimetableOffice
        """
        return self._timetable_office

    @timetable_office.setter
    def timetable_office(self, timetable_office):
        """Sets the timetable_office of this Station.


        :param timetable_office: The timetable_office of this Station.
        :type timetable_office: TimetableOffice
        """

        self._timetable_office = timetable_office
