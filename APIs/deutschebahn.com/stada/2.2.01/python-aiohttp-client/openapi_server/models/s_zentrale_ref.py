# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SZentraleRef(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, number: int=None, public_phone_number: str=None):
        """SZentraleRef - a model defined in OpenAPI

        :param name: The name of this SZentraleRef.
        :param number: The number of this SZentraleRef.
        :param public_phone_number: The public_phone_number of this SZentraleRef.
        """
        self.openapi_types = {
            'name': str,
            'number': int,
            'public_phone_number': str
        }

        self.attribute_map = {
            'name': 'name',
            'number': 'number',
            'public_phone_number': 'publicPhoneNumber'
        }

        self._name = name
        self._number = number
        self._public_phone_number = public_phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SZentraleRef':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SZentraleRef of this SZentraleRef.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this SZentraleRef.

        unique identifier of 3SZentrale

        :return: The name of this SZentraleRef.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SZentraleRef.

        unique identifier of 3SZentrale

        :param name: The name of this SZentraleRef.
        :type name: str
        """

        self._name = name

    @property
    def number(self):
        """Gets the number of this SZentraleRef.

        unique identifier for SZentrale

        :return: The number of this SZentraleRef.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this SZentraleRef.

        unique identifier for SZentrale

        :param number: The number of this SZentraleRef.
        :type number: int
        """

        self._number = number

    @property
    def public_phone_number(self):
        """Gets the public_phone_number of this SZentraleRef.


        :return: The public_phone_number of this SZentraleRef.
        :rtype: str
        """
        return self._public_phone_number

    @public_phone_number.setter
    def public_phone_number(self, public_phone_number):
        """Sets the public_phone_number of this SZentraleRef.


        :param public_phone_number: The public_phone_number of this SZentraleRef.
        :type public_phone_number: str
        """

        self._public_phone_number = public_phone_number
