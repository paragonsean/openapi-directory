/**
 * Reisezentren-API
 * This REST-API enables you to query information about travel centers in Germany.
 *
 * The version of the OpenAPI document: v1
 * Contact: Joachim.Schirrmacher@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import TravelCenter from '../model/TravelCenter';

/**
* Default service.
* @module api/DefaultApi
* @version v1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reisezentrenGet operation.
     * @callback module:api/DefaultApi~reisezentrenGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TravelCenter>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all station infos
     * Get all station infos
     * @param {Object} opts Optional parameters
     * @param {String} [name] A station name or part of it
     * @param {module:api/DefaultApi~reisezentrenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TravelCenter>}
     */
    reisezentrenGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [TravelCenter];
      return this.apiClient.callApi(
        '/reisezentren', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reisezentrenIdGet operation.
     * @callback module:api/DefaultApi~reisezentrenIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TravelCenter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get information about a specific station
     * Get information about a specific station
     * @param {String} id Station id
     * @param {module:api/DefaultApi~reisezentrenIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TravelCenter}
     */
    reisezentrenIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling reisezentrenIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TravelCenter;
      return this.apiClient.callApi(
        '/reisezentren/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reisezentrenLocLatLonDistGet operation.
     * @callback module:api/DefaultApi~reisezentrenLocLatLonDistGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TravelCenter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get stations in a given radius
     * Get stations in a given radius
     * @param {Number} lat Latitude
     * @param {Number} lon Longitude
     * @param {Number} dist Radius
     * @param {module:api/DefaultApi~reisezentrenLocLatLonDistGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TravelCenter}
     */
    reisezentrenLocLatLonDistGet(lat, lon, dist, callback) {
      let postBody = null;
      // verify the required parameter 'lat' is set
      if (lat === undefined || lat === null) {
        throw new Error("Missing the required parameter 'lat' when calling reisezentrenLocLatLonDistGet");
      }
      // verify the required parameter 'lon' is set
      if (lon === undefined || lon === null) {
        throw new Error("Missing the required parameter 'lon' when calling reisezentrenLocLatLonDistGet");
      }
      // verify the required parameter 'dist' is set
      if (dist === undefined || dist === null) {
        throw new Error("Missing the required parameter 'dist' when calling reisezentrenLocLatLonDistGet");
      }

      let pathParams = {
        'lat': lat,
        'lon': lon,
        'dist': dist
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TravelCenter;
      return this.apiClient.callApi(
        '/reisezentren/loc/{lat}/{lon}/{dist}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reisezentrenLocLatLonGet operation.
     * @callback module:api/DefaultApi~reisezentrenLocLatLonGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TravelCenter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get information about a station near a location
     * Get information about a station near a location
     * @param {Number} lat Latitude
     * @param {Number} lon Longitude
     * @param {module:api/DefaultApi~reisezentrenLocLatLonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TravelCenter}
     */
    reisezentrenLocLatLonGet(lat, lon, callback) {
      let postBody = null;
      // verify the required parameter 'lat' is set
      if (lat === undefined || lat === null) {
        throw new Error("Missing the required parameter 'lat' when calling reisezentrenLocLatLonGet");
      }
      // verify the required parameter 'lon' is set
      if (lon === undefined || lon === null) {
        throw new Error("Missing the required parameter 'lon' when calling reisezentrenLocLatLonGet");
      }

      let pathParams = {
        'lat': lat,
        'lon': lon
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TravelCenter;
      return this.apiClient.callApi(
        '/reisezentren/loc/{lat}/{lon}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
