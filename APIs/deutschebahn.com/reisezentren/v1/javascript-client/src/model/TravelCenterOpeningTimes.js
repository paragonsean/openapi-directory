/**
 * Reisezentren-API
 * This REST-API enables you to query information about travel centers in Germany.
 *
 * The version of the OpenAPI document: v1
 * Contact: Joachim.Schirrmacher@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TravelCenterOpeningTimes model module.
 * @module model/TravelCenterOpeningTimes
 * @version v1
 */
class TravelCenterOpeningTimes {
    /**
     * Constructs a new <code>TravelCenterOpeningTimes</code>.
     * Opening times of the travel center, ordered by week day
     * @alias module:model/TravelCenterOpeningTimes
     */
    constructor() { 
        
        TravelCenterOpeningTimes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TravelCenterOpeningTimes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TravelCenterOpeningTimes} obj Optional instance to populate.
     * @return {module:model/TravelCenterOpeningTimes} The populated <code>TravelCenterOpeningTimes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TravelCenterOpeningTimes();

            if (data.hasOwnProperty('fri')) {
                obj['fri'] = ApiClient.convertToType(data['fri'], ['String']);
            }
            if (data.hasOwnProperty('mon')) {
                obj['mon'] = ApiClient.convertToType(data['mon'], ['String']);
            }
            if (data.hasOwnProperty('sat')) {
                obj['sat'] = ApiClient.convertToType(data['sat'], ['String']);
            }
            if (data.hasOwnProperty('sun')) {
                obj['sun'] = ApiClient.convertToType(data['sun'], ['String']);
            }
            if (data.hasOwnProperty('thu')) {
                obj['thu'] = ApiClient.convertToType(data['thu'], ['String']);
            }
            if (data.hasOwnProperty('tue')) {
                obj['tue'] = ApiClient.convertToType(data['tue'], ['String']);
            }
            if (data.hasOwnProperty('wed')) {
                obj['wed'] = ApiClient.convertToType(data['wed'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TravelCenterOpeningTimes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TravelCenterOpeningTimes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['fri'])) {
            throw new Error("Expected the field `fri` to be an array in the JSON data but got " + data['fri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['mon'])) {
            throw new Error("Expected the field `mon` to be an array in the JSON data but got " + data['mon']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sat'])) {
            throw new Error("Expected the field `sat` to be an array in the JSON data but got " + data['sat']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sun'])) {
            throw new Error("Expected the field `sun` to be an array in the JSON data but got " + data['sun']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['thu'])) {
            throw new Error("Expected the field `thu` to be an array in the JSON data but got " + data['thu']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tue'])) {
            throw new Error("Expected the field `tue` to be an array in the JSON data but got " + data['tue']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['wed'])) {
            throw new Error("Expected the field `wed` to be an array in the JSON data but got " + data['wed']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} fri
 */
TravelCenterOpeningTimes.prototype['fri'] = undefined;

/**
 * @member {Array.<String>} mon
 */
TravelCenterOpeningTimes.prototype['mon'] = undefined;

/**
 * @member {Array.<String>} sat
 */
TravelCenterOpeningTimes.prototype['sat'] = undefined;

/**
 * @member {Array.<String>} sun
 */
TravelCenterOpeningTimes.prototype['sun'] = undefined;

/**
 * @member {Array.<String>} thu
 */
TravelCenterOpeningTimes.prototype['thu'] = undefined;

/**
 * @member {Array.<String>} tue
 */
TravelCenterOpeningTimes.prototype['tue'] = undefined;

/**
 * @member {Array.<String>} wed
 */
TravelCenterOpeningTimes.prototype['wed'] = undefined;






export default TravelCenterOpeningTimes;

