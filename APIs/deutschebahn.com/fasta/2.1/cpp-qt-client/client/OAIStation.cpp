/**
 * FaSta - Station Facilities Status
 * A RESTful webservice to retrieve data about the operational state of public elevators and escalators in german railway stations.
 *
 * The version of the OpenAPI document: 2.1
 * Contact: michael.binzen@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStation::OAIStation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStation::OAIStation() {
    this->initializeModel();
}

OAIStation::~OAIStation() {}

void OAIStation::initializeModel() {

    m_facilities_isSet = false;
    m_facilities_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_stationnumber_isSet = false;
    m_stationnumber_isValid = false;
}

void OAIStation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStation::fromJsonObject(QJsonObject json) {

    m_facilities_isValid = ::OpenAPI::fromJsonValue(m_facilities, json[QString("facilities")]);
    m_facilities_isSet = !json[QString("facilities")].isNull() && m_facilities_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_stationnumber_isValid = ::OpenAPI::fromJsonValue(m_stationnumber, json[QString("stationnumber")]);
    m_stationnumber_isSet = !json[QString("stationnumber")].isNull() && m_stationnumber_isValid;
}

QString OAIStation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStation::asJsonObject() const {
    QJsonObject obj;
    if (m_facilities.size() > 0) {
        obj.insert(QString("facilities"), ::OpenAPI::toJsonValue(m_facilities));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_stationnumber_isSet) {
        obj.insert(QString("stationnumber"), ::OpenAPI::toJsonValue(m_stationnumber));
    }
    return obj;
}

QList<OAIFacility> OAIStation::getFacilities() const {
    return m_facilities;
}
void OAIStation::setFacilities(const QList<OAIFacility> &facilities) {
    m_facilities = facilities;
    m_facilities_isSet = true;
}

bool OAIStation::is_facilities_Set() const{
    return m_facilities_isSet;
}

bool OAIStation::is_facilities_Valid() const{
    return m_facilities_isValid;
}

QString OAIStation::getName() const {
    return m_name;
}
void OAIStation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStation::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIStation::getStationnumber() const {
    return m_stationnumber;
}
void OAIStation::setStationnumber(const qint64 &stationnumber) {
    m_stationnumber = stationnumber;
    m_stationnumber_isSet = true;
}

bool OAIStation::is_stationnumber_Set() const{
    return m_stationnumber_isSet;
}

bool OAIStation::is_stationnumber_Valid() const{
    return m_stationnumber_isValid;
}

bool OAIStation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stationnumber_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_stationnumber_isValid && true;
}

} // namespace OpenAPI
