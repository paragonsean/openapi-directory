/**
 * Betriebsstellen
 * This REST-API enables you to query station and stop infos
 *
 * The version of the OpenAPI document: v1
 * Contact: Joachim.Schirrmacher@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Betriebsstellen);
  }
}(this, function(expect, Betriebsstellen) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Betriebsstellen.Station();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Station', function() {
    it('should create an instance of Station', function() {
      // uncomment below and update the code to test Station
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be.a(Betriebsstellen.Station);
    });

    it('should have the property RB (base name: "RB")', function() {
      // uncomment below and update the code to test the property RB
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property UIC (base name: "UIC")', function() {
      // uncomment below and update the code to test the property UIC
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property abbrev (base name: "abbrev")', function() {
      // uncomment below and update the code to test the property abbrev
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property borderStation (base name: "borderStation")', function() {
      // uncomment below and update the code to test the property borderStation
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property locationCode (base name: "locationCode")', function() {
      // uncomment below and update the code to test the property locationCode
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property _short (base name: "short")', function() {
      // uncomment below and update the code to test the property _short
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property timeTableRelevant (base name: "timeTableRelevant")', function() {
      // uncomment below and update the code to test the property timeTableRelevant
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property validFrom (base name: "validFrom")', function() {
      // uncomment below and update the code to test the property validFrom
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

    it('should have the property validTill (base name: "validTill")', function() {
      // uncomment below and update the code to test the property validTill
      //var instance = new Betriebsstellen.Station();
      //expect(instance).to.be();
    });

  });

}));
