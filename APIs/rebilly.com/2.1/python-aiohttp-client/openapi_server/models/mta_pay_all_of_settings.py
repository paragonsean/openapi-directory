# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MtaPayAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, goods: str=None, mobile_pay: str=None):
        """MtaPayAllOfSettings - a model defined in OpenAPI

        :param goods: The goods of this MtaPayAllOfSettings.
        :param mobile_pay: The mobile_pay of this MtaPayAllOfSettings.
        """
        self.openapi_types = {
            'goods': str,
            'mobile_pay': str
        }

        self.attribute_map = {
            'goods': 'goods',
            'mobile_pay': 'mobilePay'
        }

        self._goods = goods
        self._mobile_pay = mobile_pay

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MtaPayAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MtaPay_allOf_settings of this MtaPayAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def goods(self):
        """Gets the goods of this MtaPayAllOfSettings.

        MTA Pay Gateway goods.

        :return: The goods of this MtaPayAllOfSettings.
        :rtype: str
        """
        return self._goods

    @goods.setter
    def goods(self, goods):
        """Sets the goods of this MtaPayAllOfSettings.

        MTA Pay Gateway goods.

        :param goods: The goods of this MtaPayAllOfSettings.
        :type goods: str
        """
        if goods is None:
            raise ValueError("Invalid value for `goods`, must not be `None`")

        self._goods = goods

    @property
    def mobile_pay(self):
        """Gets the mobile_pay of this MtaPayAllOfSettings.

        MTA Pay Gateway mobile pay param.

        :return: The mobile_pay of this MtaPayAllOfSettings.
        :rtype: str
        """
        return self._mobile_pay

    @mobile_pay.setter
    def mobile_pay(self, mobile_pay):
        """Sets the mobile_pay of this MtaPayAllOfSettings.

        MTA Pay Gateway mobile pay param.

        :param mobile_pay: The mobile_pay of this MtaPayAllOfSettings.
        :type mobile_pay: str
        """
        if mobile_pay is None:
            raise ValueError("Invalid value for `mobile_pay`, must not be `None`")

        self._mobile_pay = mobile_pay
