# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class USAePayAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pin: str=None, source_key: str=None):
        """USAePayAllOfCredentials - a model defined in OpenAPI

        :param pin: The pin of this USAePayAllOfCredentials.
        :param source_key: The source_key of this USAePayAllOfCredentials.
        """
        self.openapi_types = {
            'pin': str,
            'source_key': str
        }

        self.attribute_map = {
            'pin': 'pin',
            'source_key': 'sourceKey'
        }

        self._pin = pin
        self._source_key = source_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'USAePayAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The USAePay_allOf_credentials of this USAePayAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pin(self):
        """Gets the pin of this USAePayAllOfCredentials.

        USAePay Gateway pin.

        :return: The pin of this USAePayAllOfCredentials.
        :rtype: str
        """
        return self._pin

    @pin.setter
    def pin(self, pin):
        """Sets the pin of this USAePayAllOfCredentials.

        USAePay Gateway pin.

        :param pin: The pin of this USAePayAllOfCredentials.
        :type pin: str
        """
        if pin is None:
            raise ValueError("Invalid value for `pin`, must not be `None`")

        self._pin = pin

    @property
    def source_key(self):
        """Gets the source_key of this USAePayAllOfCredentials.

        USAePay Gateway source key.

        :return: The source_key of this USAePayAllOfCredentials.
        :rtype: str
        """
        return self._source_key

    @source_key.setter
    def source_key(self, source_key):
        """Sets the source_key of this USAePayAllOfCredentials.

        USAePay Gateway source key.

        :param source_key: The source_key of this USAePayAllOfCredentials.
        :type source_key: str
        """
        if source_key is None:
            raise ValueError("Invalid value for `source_key`, must not be `None`")

        self._source_key = source_key
