# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.validation_error_extensions_invalid_fields_inner import ValidationErrorExtensionsInvalidFieldsInner
from openapi_server import util


class ValidationErrorExtensions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invalid_fields: List[ValidationErrorExtensionsInvalidFieldsInner]=None):
        """ValidationErrorExtensions - a model defined in OpenAPI

        :param invalid_fields: The invalid_fields of this ValidationErrorExtensions.
        """
        self.openapi_types = {
            'invalid_fields': List[ValidationErrorExtensionsInvalidFieldsInner]
        }

        self.attribute_map = {
            'invalid_fields': 'invalidFields'
        }

        self._invalid_fields = invalid_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidationErrorExtensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidationErrorExtensions of this ValidationErrorExtensions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invalid_fields(self):
        """Gets the invalid_fields of this ValidationErrorExtensions.


        :return: The invalid_fields of this ValidationErrorExtensions.
        :rtype: List[ValidationErrorExtensionsInvalidFieldsInner]
        """
        return self._invalid_fields

    @invalid_fields.setter
    def invalid_fields(self, invalid_fields):
        """Sets the invalid_fields of this ValidationErrorExtensions.


        :param invalid_fields: The invalid_fields of this ValidationErrorExtensions.
        :type invalid_fields: List[ValidationErrorExtensionsInvalidFieldsInner]
        """

        self._invalid_fields = invalid_fields
