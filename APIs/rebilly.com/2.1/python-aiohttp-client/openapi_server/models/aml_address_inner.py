# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AMLAddressInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, address2: str=None, birthplace: bool=False, city: str=None, country: str=None, region: str=None):
        """AMLAddressInner - a model defined in OpenAPI

        :param address: The address of this AMLAddressInner.
        :param address2: The address2 of this AMLAddressInner.
        :param birthplace: The birthplace of this AMLAddressInner.
        :param city: The city of this AMLAddressInner.
        :param country: The country of this AMLAddressInner.
        :param region: The region of this AMLAddressInner.
        """
        self.openapi_types = {
            'address': str,
            'address2': str,
            'birthplace': bool,
            'city': str,
            'country': str,
            'region': str
        }

        self.attribute_map = {
            'address': 'address',
            'address2': 'address2',
            'birthplace': 'birthplace',
            'city': 'city',
            'country': 'country',
            'region': 'region'
        }

        self._address = address
        self._address2 = address2
        self._birthplace = birthplace
        self._city = city
        self._country = country
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AMLAddressInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AML_address_inner of this AMLAddressInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this AMLAddressInner.

        Street Address Line 1.

        :return: The address of this AMLAddressInner.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AMLAddressInner.

        Street Address Line 1.

        :param address: The address of this AMLAddressInner.
        :type address: str
        """

        self._address = address

    @property
    def address2(self):
        """Gets the address2 of this AMLAddressInner.

        Street Address Line 2.

        :return: The address2 of this AMLAddressInner.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this AMLAddressInner.

        Street Address Line 2.

        :param address2: The address2 of this AMLAddressInner.
        :type address2: str
        """

        self._address2 = address2

    @property
    def birthplace(self):
        """Gets the birthplace of this AMLAddressInner.

        This address is their birth place.

        :return: The birthplace of this AMLAddressInner.
        :rtype: bool
        """
        return self._birthplace

    @birthplace.setter
    def birthplace(self, birthplace):
        """Sets the birthplace of this AMLAddressInner.

        This address is their birth place.

        :param birthplace: The birthplace of this AMLAddressInner.
        :type birthplace: bool
        """

        self._birthplace = birthplace

    @property
    def city(self):
        """Gets the city of this AMLAddressInner.

        City.

        :return: The city of this AMLAddressInner.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this AMLAddressInner.

        City.

        :param city: The city of this AMLAddressInner.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this AMLAddressInner.

        Country.

        :return: The country of this AMLAddressInner.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AMLAddressInner.

        Country.

        :param country: The country of this AMLAddressInner.
        :type country: str
        """

        self._country = country

    @property
    def region(self):
        """Gets the region of this AMLAddressInner.

        State/Province/Region.

        :return: The region of this AMLAddressInner.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this AMLAddressInner.

        State/Province/Region.

        :param region: The region of this AMLAddressInner.
        :type region: str
        """

        self._region = region
