# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JetPayAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, terminal_id: str=None):
        """JetPayAllOfCredentials - a model defined in OpenAPI

        :param terminal_id: The terminal_id of this JetPayAllOfCredentials.
        """
        self.openapi_types = {
            'terminal_id': str
        }

        self.attribute_map = {
            'terminal_id': 'TerminalID'
        }

        self._terminal_id = terminal_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JetPayAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JetPay_allOf_credentials of this JetPayAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def terminal_id(self):
        """Gets the terminal_id of this JetPayAllOfCredentials.

        JetPay Gateway terminal ID.

        :return: The terminal_id of this JetPayAllOfCredentials.
        :rtype: str
        """
        return self._terminal_id

    @terminal_id.setter
    def terminal_id(self, terminal_id):
        """Sets the terminal_id of this JetPayAllOfCredentials.

        JetPay Gateway terminal ID.

        :param terminal_id: The terminal_id of this JetPayAllOfCredentials.
        :type terminal_id: str
        """
        if terminal_id is None:
            raise ValueError("Invalid value for `terminal_id`, must not be `None`")

        self._terminal_id = terminal_id
