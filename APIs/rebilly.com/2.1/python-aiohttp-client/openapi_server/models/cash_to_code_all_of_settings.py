# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CashToCodeAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amounts: List[float]=None, skip_amount_selection: bool=False):
        """CashToCodeAllOfSettings - a model defined in OpenAPI

        :param amounts: The amounts of this CashToCodeAllOfSettings.
        :param skip_amount_selection: The skip_amount_selection of this CashToCodeAllOfSettings.
        """
        self.openapi_types = {
            'amounts': List[float],
            'skip_amount_selection': bool
        }

        self.attribute_map = {
            'amounts': 'amounts',
            'skip_amount_selection': 'skipAmountSelection'
        }

        self._amounts = amounts
        self._skip_amount_selection = skip_amount_selection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CashToCodeAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CashToCode_allOf_settings of this CashToCodeAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amounts(self):
        """Gets the amounts of this CashToCodeAllOfSettings.

        Amounts for which to allow transactions.

        :return: The amounts of this CashToCodeAllOfSettings.
        :rtype: List[float]
        """
        return self._amounts

    @amounts.setter
    def amounts(self, amounts):
        """Sets the amounts of this CashToCodeAllOfSettings.

        Amounts for which to allow transactions.

        :param amounts: The amounts of this CashToCodeAllOfSettings.
        :type amounts: List[float]
        """

        self._amounts = amounts

    @property
    def skip_amount_selection(self):
        """Gets the skip_amount_selection of this CashToCodeAllOfSettings.

        Skip amount selection screen.

        :return: The skip_amount_selection of this CashToCodeAllOfSettings.
        :rtype: bool
        """
        return self._skip_amount_selection

    @skip_amount_selection.setter
    def skip_amount_selection(self, skip_amount_selection):
        """Sets the skip_amount_selection of this CashToCodeAllOfSettings.

        Skip amount selection screen.

        :param skip_amount_selection: The skip_amount_selection of this CashToCodeAllOfSettings.
        :type skip_amount_selection: bool
        """

        self._skip_amount_selection = skip_amount_selection
