# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.self_link import SelfLink
from openapi_server import util


class CustomField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: List[SelfLink]=None, additional_schema: object=None, description: str=None, name: str=None, type: str=None):
        """CustomField - a model defined in OpenAPI

        :param links: The links of this CustomField.
        :param additional_schema: The additional_schema of this CustomField.
        :param description: The description of this CustomField.
        :param name: The name of this CustomField.
        :param type: The type of this CustomField.
        """
        self.openapi_types = {
            'links': List[SelfLink],
            'additional_schema': object,
            'description': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'links': '_links',
            'additional_schema': 'additionalSchema',
            'description': 'description',
            'name': 'name',
            'type': 'type'
        }

        self._links = links
        self._additional_schema = additional_schema
        self._description = description
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomField of this CustomField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this CustomField.

        The links related to resource.

        :return: The links of this CustomField.
        :rtype: List[SelfLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this CustomField.

        The links related to resource.

        :param links: The links of this CustomField.
        :type links: List[SelfLink]
        """
        if links is not None and len(links) < 1:
            raise ValueError("Invalid value for `links`, number of items must be greater than or equal to `1`")

        self._links = links

    @property
    def additional_schema(self):
        """Gets the additional_schema of this CustomField.

        Additional parameters which can be added according to type: Parameter Name | Types         | Description -------------- | ------------- | ------------- allowedValues  | string, array | List of allowed values maxLength      | string        | Maximum allowed length for the string, 255 by default, up to 4000 The additional schema adds additional constrains for values. 

        :return: The additional_schema of this CustomField.
        :rtype: object
        """
        return self._additional_schema

    @additional_schema.setter
    def additional_schema(self, additional_schema):
        """Sets the additional_schema of this CustomField.

        Additional parameters which can be added according to type: Parameter Name | Types         | Description -------------- | ------------- | ------------- allowedValues  | string, array | List of allowed values maxLength      | string        | Maximum allowed length for the string, 255 by default, up to 4000 The additional schema adds additional constrains for values. 

        :param additional_schema: The additional_schema of this CustomField.
        :type additional_schema: object
        """

        self._additional_schema = additional_schema

    @property
    def description(self):
        """Gets the description of this CustomField.

        The custom field description.

        :return: The description of this CustomField.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CustomField.

        The custom field description.

        :param description: The description of this CustomField.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this CustomField.

        The name of the custom field.

        :return: The name of this CustomField.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomField.

        The name of the custom field.

        :param name: The name of this CustomField.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this CustomField.

        Type value    | Description ------------- | ------------- array         | An array of strings up to 255 characters, maximum size is 1000 elements boolean       | true or false date          | String of format \"full-date\" (YYYY-MM-DD) from RFC-3339 (full-date) datetime      | String of format \"date-time\" (YYYY-MM-DDTHH:MM:SSZ) from RFC-3339 (date-time) integer       | Cardinal value of -2^31..2^31-1 number        | Float value. It can take cardinal values also which are interpreted as float string        | Regular string up to 255 characters monetary      | A map of 3-letters currency code and amount, e.g. {\"currency\": \"EUR\", \"amount\": 25.30} The type cannot be changed. 

        :return: The type of this CustomField.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CustomField.

        Type value    | Description ------------- | ------------- array         | An array of strings up to 255 characters, maximum size is 1000 elements boolean       | true or false date          | String of format \"full-date\" (YYYY-MM-DD) from RFC-3339 (full-date) datetime      | String of format \"date-time\" (YYYY-MM-DDTHH:MM:SSZ) from RFC-3339 (date-time) integer       | Cardinal value of -2^31..2^31-1 number        | Float value. It can take cardinal values also which are interpreted as float string        | Regular string up to 255 characters monetary      | A map of 3-letters currency code and amount, e.g. {\"currency\": \"EUR\", \"amount\": 25.30} The type cannot be changed. 

        :param type: The type of this CustomField.
        :type type: str
        """
        allowed_values = ["array", "boolean", "datetime", "integer", "number", "string", "monetary"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
