# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopprAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rebilly_publishable_key: str=None):
        """CopprAllOfSettings - a model defined in OpenAPI

        :param rebilly_publishable_key: The rebilly_publishable_key of this CopprAllOfSettings.
        """
        self.openapi_types = {
            'rebilly_publishable_key': str
        }

        self.attribute_map = {
            'rebilly_publishable_key': 'rebillyPublishableKey'
        }

        self._rebilly_publishable_key = rebilly_publishable_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopprAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Coppr_allOf_settings of this CopprAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rebilly_publishable_key(self):
        """Gets the rebilly_publishable_key of this CopprAllOfSettings.

        Rebilly publishable api key. If provided a payment token will be created for each transaction.

        :return: The rebilly_publishable_key of this CopprAllOfSettings.
        :rtype: str
        """
        return self._rebilly_publishable_key

    @rebilly_publishable_key.setter
    def rebilly_publishable_key(self, rebilly_publishable_key):
        """Sets the rebilly_publishable_key of this CopprAllOfSettings.

        Rebilly publishable api key. If provided a payment token will be created for each transaction.

        :param rebilly_publishable_key: The rebilly_publishable_key of this CopprAllOfSettings.
        :type rebilly_publishable_key: str
        """

        self._rebilly_publishable_key = rebilly_publishable_key
