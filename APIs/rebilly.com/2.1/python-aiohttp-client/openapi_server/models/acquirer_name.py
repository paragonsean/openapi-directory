# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcquirerName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ADYEN = 'Adyen'
    ALIPAY = 'Alipay'
    AIB = 'AIB'
    AIRPAY = 'Airpay'
    APCOPAY = 'ApcoPay'
    ASIAPAYMENTGATEWAY = 'AsiaPaymentGateway'
    ASTROPAY_CARD = 'AstroPay Card'
    IPAY_OPTIONS = 'Ipay Options'
    B_PLUS_S = 'B+S'
    BAMBORA = 'Bambora'
    BITPAY = 'BitPay'
    BANK_OF_AMERICA = 'Bank of America'
    BANK_OF_MOSCOW = 'Bank of Moscow'
    BANK_OF_REBILLY = 'Bank of Rebilly'
    BANK_ONE = 'Bank One'
    BMO_HARRIS_BANK = 'BMO Harris Bank'
    BORGUN = 'Borgun'
    BRAINTREEPAYMENTS = 'BraintreePayments'
    CARDKNOX = 'Cardknox'
    CASHLIB = 'CASHlib'
    CASHTOCODE = 'CashToCode'
    CATALUNYA_CAIXA = 'Catalunya Caixa'
    CCAVENUE = 'CCAvenue'
    CHASE = 'Chase'
    CHINAUNIONPAY = 'ChinaUnionPay'
    CIM = 'CIM'
    CIRCLE = 'Circle'
    CITADEL = 'Citadel'
    CLEARHAUS = 'Clearhaus'
    CODVOUCHER = 'CODVoucher'
    COINPAYMENTS = 'CoinPayments'
    CONEKTA = 'Conekta'
    COPPR = 'Coppr'
    CREDORAX = 'Credorax'
    CRYPTONATOR = 'Cryptonator'
    CYBERSOURCE = 'CyberSource'
    DLOCAL = 'dLocal'
    DRAGONPHOENIX = 'Dragonphoenix'
    EBANX = 'EBANX'
    ECOPAYZ = 'ecoPayz'
    ECOREPAY = 'EcorePay'
    ELAVON = 'Elavon'
    EMS = 'EMS'
    EPG = 'EPG'
    EUTELLER = 'Euteller'
    EZEEWALLET = 'eZeeWallet'
    EZYEFT = 'ezyEFT'
    FIFTH_THIRD_BANK = 'Fifth Third Bank'
    FINRAX = 'Finrax'
    FIRST_DATA_BUYPASS = 'First Data Buypass'
    FIRST_DATA_NASHVILLE = 'First Data Nashville'
    FIRST_DATA_NORTH = 'First Data North'
    FIRST_DATA_OMAHA = 'First Data Omaha'
    FINTECSYSTEMS = 'FinTecSystems'
    FLEXEPIN = 'Flexepin'
    FORTE = 'Forte'
    FUNDSEND = 'FundSend'
    GIGADAT = 'Gigadat'
    GLOBAL_EAST = 'Global East'
    GOONEY = 'Gooney'
    GPAYSAFE = 'Gpaysafe'
    HEARTLAND = 'Heartland'
    HIPAY = 'HiPay'
    HSBC = 'HSBC'
    ICANPAY = 'iCanPay'
    ICEPAY = 'ICEPAY'
    ICHEQUE = 'iCheque'
    ILIXIUM = 'Ilixium'
    INGENICO = 'Ingenico'
    INOVAPAY = 'INOVAPAY'
    INTUIT = 'Intuit'
    JETON = 'Jeton'
    KHELOCARD = 'Khelocard'
    KONNEKTIVE = 'Konnektive'
    LOONIE = 'loonie'
    LPG = 'LPG'
    MASAPAY = 'Masapay'
    MERRICK = 'Merrick'
    MISSION_VALLEY_BANK = 'Mission Valley Bank'
    MIFINITY = 'MiFinity'
    MONERIS = 'Moneris'
    MUCHBETTER = 'MuchBetter'
    MYFATOORAH = 'MyFatoorah'
    NATWEST = 'NATWEST'
    NEOSURF = 'Neosurf'
    NETBANKING = 'Netbanking'
    NETELLER = 'Neteller'
    NINJAWALLET = 'NinjaWallet'
    NMI = 'NMI'
    NUAPAY = 'NuaPay'
    OCHAPAY = 'OchaPay'
    ONLINEUEBERWEISEN = 'Onlineueberweisen'
    ONRAMP = 'OnRamp'
    OTHER = 'Other'
    PANAMERICAN = 'Panamerican'
    PANDA_BANK = 'Panda Bank'
    PARAMOUNT = 'Paramount'
    PARAMOUNTEFT = 'ParamountEft'
    PARAMOUNTINTERAC = 'ParamountInterac'
    PAY4FUN = 'Pay4fun'
    PAYCASH = 'PayCash'
    PAYCLUB = 'PayClub'
    PAYMENTASIA = 'PaymentAsia'
    PAYMENTECHNOLOGIES = 'PaymenTechnologies'
    PAYMENTSOS = 'PaymentsOS'
    PAYMERO = 'Paymero'
    PAYNETICS = 'Paynetics'
    PAYPAL = 'PayPal'
    PAYR = 'Payr'
    PAYTABS = 'PayTabs'
    PAYULATAM = 'PayULatam'
    PAYVISION = 'Payvision'
    PIASTRIX = 'Piastrix'
    PEOPLES_TRUST_COMPANY = 'Peoples Trust Company'
    POSTFINANCE = 'PostFinance'
    PRIVATBANK = 'Privatbank'
    PROSA = 'Prosa'
    QQPAY = 'QQPay'
    RAPYD = 'Rapyd'
    RBC = 'RBC'
    RBS_WORLDPAY = 'RBS WorldPay'
    REALTIME = 'RealTime'
    ROTESSA = 'Rotessa'
    SALTARPAY = 'SaltarPay'
    SECURETRADING = 'SecureTrading'
    SECURIONPAY = 'SecurionPay'
    SKRILL = 'Skrill'
    SMARTINVOICE = 'SmartInvoice'
    SMSVOUCHER = 'SMSVoucher'
    SOFORT = 'Sofort'
    SPARKPAY = 'SparkPay'
    STATE_BANK_OF_MAURITIUS = 'State Bank of Mauritius'
    STRIPE = 'Stripe'
    TBI = 'TBI'
    TESTPROCESSOR = 'TestProcessor'
    TODITOCASH = 'ToditoCash'
    TRUSTLY = 'Trustly'
    TRUSTPAY = 'TrustPay'
    TRUSTSPAY = 'TrustsPay'
    TSYS = 'TSYS'
    TWINT = 'TWINT'
    UPAYCARD = 'UPayCard'
    VANTIV = 'Vantiv'
    VCREDITOS = 'VCreditos'
    VOICEPAY = 'VoicePay'
    WALLET88 = 'Wallet88'
    WECHAT_PAY = 'WeChat Pay'
    WELLS_FARGO = 'Wells Fargo'
    WING_HANG_BANK = 'Wing Hang Bank'
    WIRECARD = 'Wirecard'
    WORLDPAY = 'WorldPay'
    XPAY = 'XPay'
    ZIMPLER = 'Zimpler'
    ZOTAPAY = 'Zotapay'

    def __init__(self):
        """AcquirerName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcquirerName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcquirerName of this AcquirerName.
        """
        return util.deserialize_model(dikt, cls)
