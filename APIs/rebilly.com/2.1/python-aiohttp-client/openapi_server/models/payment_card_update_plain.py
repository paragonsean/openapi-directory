# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_object import ContactObject
from openapi_server import util


class PaymentCardUpdatePlain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: ContactObject=None, custom_fields: object=None, cvv: str=None, exp_month: int=None, exp_year: int=None, sticky_gateway_account_id: str=None):
        """PaymentCardUpdatePlain - a model defined in OpenAPI

        :param billing_address: The billing_address of this PaymentCardUpdatePlain.
        :param custom_fields: The custom_fields of this PaymentCardUpdatePlain.
        :param cvv: The cvv of this PaymentCardUpdatePlain.
        :param exp_month: The exp_month of this PaymentCardUpdatePlain.
        :param exp_year: The exp_year of this PaymentCardUpdatePlain.
        :param sticky_gateway_account_id: The sticky_gateway_account_id of this PaymentCardUpdatePlain.
        """
        self.openapi_types = {
            'billing_address': ContactObject,
            'custom_fields': object,
            'cvv': str,
            'exp_month': int,
            'exp_year': int,
            'sticky_gateway_account_id': str
        }

        self.attribute_map = {
            'billing_address': 'billingAddress',
            'custom_fields': 'customFields',
            'cvv': 'cvv',
            'exp_month': 'expMonth',
            'exp_year': 'expYear',
            'sticky_gateway_account_id': 'stickyGatewayAccountId'
        }

        self._billing_address = billing_address
        self._custom_fields = custom_fields
        self._cvv = cvv
        self._exp_month = exp_month
        self._exp_year = exp_year
        self._sticky_gateway_account_id = sticky_gateway_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentCardUpdatePlain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentCardUpdatePlain of this PaymentCardUpdatePlain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this PaymentCardUpdatePlain.

        The billing address.

        :return: The billing_address of this PaymentCardUpdatePlain.
        :rtype: ContactObject
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this PaymentCardUpdatePlain.

        The billing address.

        :param billing_address: The billing_address of this PaymentCardUpdatePlain.
        :type billing_address: ContactObject
        """

        self._billing_address = billing_address

    @property
    def custom_fields(self):
        """Gets the custom_fields of this PaymentCardUpdatePlain.

        Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). 

        :return: The custom_fields of this PaymentCardUpdatePlain.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this PaymentCardUpdatePlain.

        Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). 

        :param custom_fields: The custom_fields of this PaymentCardUpdatePlain.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def cvv(self):
        """Gets the cvv of this PaymentCardUpdatePlain.

        Card's cvv (card verification value).

        :return: The cvv of this PaymentCardUpdatePlain.
        :rtype: str
        """
        return self._cvv

    @cvv.setter
    def cvv(self, cvv):
        """Sets the cvv of this PaymentCardUpdatePlain.

        Card's cvv (card verification value).

        :param cvv: The cvv of this PaymentCardUpdatePlain.
        :type cvv: str
        """

        self._cvv = cvv

    @property
    def exp_month(self):
        """Gets the exp_month of this PaymentCardUpdatePlain.

        Card's expiration month.

        :return: The exp_month of this PaymentCardUpdatePlain.
        :rtype: int
        """
        return self._exp_month

    @exp_month.setter
    def exp_month(self, exp_month):
        """Sets the exp_month of this PaymentCardUpdatePlain.

        Card's expiration month.

        :param exp_month: The exp_month of this PaymentCardUpdatePlain.
        :type exp_month: int
        """

        self._exp_month = exp_month

    @property
    def exp_year(self):
        """Gets the exp_year of this PaymentCardUpdatePlain.

        Card's expiration year.

        :return: The exp_year of this PaymentCardUpdatePlain.
        :rtype: int
        """
        return self._exp_year

    @exp_year.setter
    def exp_year(self, exp_year):
        """Sets the exp_year of this PaymentCardUpdatePlain.

        Card's expiration year.

        :param exp_year: The exp_year of this PaymentCardUpdatePlain.
        :type exp_year: int
        """

        self._exp_year = exp_year

    @property
    def sticky_gateway_account_id(self):
        """Gets the sticky_gateway_account_id of this PaymentCardUpdatePlain.

        Sticky gateway account ID.

        :return: The sticky_gateway_account_id of this PaymentCardUpdatePlain.
        :rtype: str
        """
        return self._sticky_gateway_account_id

    @sticky_gateway_account_id.setter
    def sticky_gateway_account_id(self, sticky_gateway_account_id):
        """Sets the sticky_gateway_account_id of this PaymentCardUpdatePlain.

        Sticky gateway account ID.

        :param sticky_gateway_account_id: The sticky_gateway_account_id of this PaymentCardUpdatePlain.
        :type sticky_gateway_account_id: str
        """
        if sticky_gateway_account_id is not None and len(sticky_gateway_account_id) > 50:
            raise ValueError("Invalid value for `sticky_gateway_account_id`, length must be less than or equal to `50`")

        self._sticky_gateway_account_id = sticky_gateway_account_id
