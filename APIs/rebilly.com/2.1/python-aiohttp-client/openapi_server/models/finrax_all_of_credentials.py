# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FinraxAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, api_secret: str=None, business_id: str=None):
        """FinraxAllOfCredentials - a model defined in OpenAPI

        :param api_key: The api_key of this FinraxAllOfCredentials.
        :param api_secret: The api_secret of this FinraxAllOfCredentials.
        :param business_id: The business_id of this FinraxAllOfCredentials.
        """
        self.openapi_types = {
            'api_key': str,
            'api_secret': str,
            'business_id': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'api_secret': 'apiSecret',
            'business_id': 'businessId'
        }

        self._api_key = api_key
        self._api_secret = api_secret
        self._business_id = business_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FinraxAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Finrax_allOf_credentials of this FinraxAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this FinraxAllOfCredentials.

        Finrax API Key.

        :return: The api_key of this FinraxAllOfCredentials.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this FinraxAllOfCredentials.

        Finrax API Key.

        :param api_key: The api_key of this FinraxAllOfCredentials.
        :type api_key: str
        """
        if api_key is None:
            raise ValueError("Invalid value for `api_key`, must not be `None`")

        self._api_key = api_key

    @property
    def api_secret(self):
        """Gets the api_secret of this FinraxAllOfCredentials.

        Finrax API Secret.

        :return: The api_secret of this FinraxAllOfCredentials.
        :rtype: str
        """
        return self._api_secret

    @api_secret.setter
    def api_secret(self, api_secret):
        """Sets the api_secret of this FinraxAllOfCredentials.

        Finrax API Secret.

        :param api_secret: The api_secret of this FinraxAllOfCredentials.
        :type api_secret: str
        """
        if api_secret is None:
            raise ValueError("Invalid value for `api_secret`, must not be `None`")

        self._api_secret = api_secret

    @property
    def business_id(self):
        """Gets the business_id of this FinraxAllOfCredentials.

        Finrax Business Id.

        :return: The business_id of this FinraxAllOfCredentials.
        :rtype: str
        """
        return self._business_id

    @business_id.setter
    def business_id(self, business_id):
        """Sets the business_id of this FinraxAllOfCredentials.

        Finrax Business Id.

        :param business_id: The business_id of this FinraxAllOfCredentials.
        :type business_id: str
        """
        if business_id is None:
            raise ValueError("Invalid value for `business_id`, must not be `None`")

        self._business_id = business_id
