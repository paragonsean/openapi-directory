# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HiPayAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_password: str=None, api_username: str=None):
        """HiPayAllOfCredentials - a model defined in OpenAPI

        :param api_password: The api_password of this HiPayAllOfCredentials.
        :param api_username: The api_username of this HiPayAllOfCredentials.
        """
        self.openapi_types = {
            'api_password': str,
            'api_username': str
        }

        self.attribute_map = {
            'api_password': 'apiPassword',
            'api_username': 'apiUsername'
        }

        self._api_password = api_password
        self._api_username = api_username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HiPayAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HiPay_allOf_credentials of this HiPayAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_password(self):
        """Gets the api_password of this HiPayAllOfCredentials.

        HiPay API password.

        :return: The api_password of this HiPayAllOfCredentials.
        :rtype: str
        """
        return self._api_password

    @api_password.setter
    def api_password(self, api_password):
        """Sets the api_password of this HiPayAllOfCredentials.

        HiPay API password.

        :param api_password: The api_password of this HiPayAllOfCredentials.
        :type api_password: str
        """
        if api_password is None:
            raise ValueError("Invalid value for `api_password`, must not be `None`")

        self._api_password = api_password

    @property
    def api_username(self):
        """Gets the api_username of this HiPayAllOfCredentials.

        HiPay API user name.

        :return: The api_username of this HiPayAllOfCredentials.
        :rtype: str
        """
        return self._api_username

    @api_username.setter
    def api_username(self, api_username):
        """Sets the api_username of this HiPayAllOfCredentials.

        HiPay API user name.

        :param api_username: The api_username of this HiPayAllOfCredentials.
        :type api_username: str
        """
        if api_username is None:
            raise ValueError("Invalid value for `api_username`, must not be `None`")

        self._api_username = api_username
