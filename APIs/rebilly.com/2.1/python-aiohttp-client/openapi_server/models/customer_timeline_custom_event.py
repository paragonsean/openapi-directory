# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.self_link import SelfLink
from openapi_server import util


class CustomerTimelineCustomEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: List[SelfLink]=None, created_time: datetime=None, id: str=None, name: str=None, updated_time: datetime=None):
        """CustomerTimelineCustomEvent - a model defined in OpenAPI

        :param links: The links of this CustomerTimelineCustomEvent.
        :param created_time: The created_time of this CustomerTimelineCustomEvent.
        :param id: The id of this CustomerTimelineCustomEvent.
        :param name: The name of this CustomerTimelineCustomEvent.
        :param updated_time: The updated_time of this CustomerTimelineCustomEvent.
        """
        self.openapi_types = {
            'links': List[SelfLink],
            'created_time': datetime,
            'id': str,
            'name': str,
            'updated_time': datetime
        }

        self.attribute_map = {
            'links': '_links',
            'created_time': 'createdTime',
            'id': 'id',
            'name': 'name',
            'updated_time': 'updatedTime'
        }

        self._links = links
        self._created_time = created_time
        self._id = id
        self._name = name
        self._updated_time = updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerTimelineCustomEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerTimelineCustomEvent of this CustomerTimelineCustomEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this CustomerTimelineCustomEvent.

        The links related to resource.

        :return: The links of this CustomerTimelineCustomEvent.
        :rtype: List[SelfLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this CustomerTimelineCustomEvent.

        The links related to resource.

        :param links: The links of this CustomerTimelineCustomEvent.
        :type links: List[SelfLink]
        """
        if links is not None and len(links) < 1:
            raise ValueError("Invalid value for `links`, number of items must be greater than or equal to `1`")

        self._links = links

    @property
    def created_time(self):
        """Gets the created_time of this CustomerTimelineCustomEvent.

        Customer Timeline Custom event created time.

        :return: The created_time of this CustomerTimelineCustomEvent.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this CustomerTimelineCustomEvent.

        Customer Timeline Custom event created time.

        :param created_time: The created_time of this CustomerTimelineCustomEvent.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def id(self):
        """Gets the id of this CustomerTimelineCustomEvent.

        Customer Timeline Custom Event identifier string.

        :return: The id of this CustomerTimelineCustomEvent.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerTimelineCustomEvent.

        Customer Timeline Custom Event identifier string.

        :param id: The id of this CustomerTimelineCustomEvent.
        :type id: str
        """
        if id is not None and len(id) > 50:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `50`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this CustomerTimelineCustomEvent.

        Customer Timeline Custom Event type name. It must not be similar to any Rebilly system event.

        :return: The name of this CustomerTimelineCustomEvent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomerTimelineCustomEvent.

        Customer Timeline Custom Event type name. It must not be similar to any Rebilly system event.

        :param name: The name of this CustomerTimelineCustomEvent.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def updated_time(self):
        """Gets the updated_time of this CustomerTimelineCustomEvent.

        Customer Timeline Custom event updated time.

        :return: The updated_time of this CustomerTimelineCustomEvent.
        :rtype: datetime
        """
        return self._updated_time

    @updated_time.setter
    def updated_time(self, updated_time):
        """Sets the updated_time of this CustomerTimelineCustomEvent.

        Customer Timeline Custom event updated time.

        :param updated_time: The updated_time of this CustomerTimelineCustomEvent.
        :type updated_time: datetime
        """

        self._updated_time = updated_time
