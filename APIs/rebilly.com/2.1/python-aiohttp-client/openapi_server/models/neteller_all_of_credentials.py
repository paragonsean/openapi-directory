# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetellerAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paysafe_payments_api_password: str=None, paysafe_payments_api_username: str=None):
        """NetellerAllOfCredentials - a model defined in OpenAPI

        :param paysafe_payments_api_password: The paysafe_payments_api_password of this NetellerAllOfCredentials.
        :param paysafe_payments_api_username: The paysafe_payments_api_username of this NetellerAllOfCredentials.
        """
        self.openapi_types = {
            'paysafe_payments_api_password': str,
            'paysafe_payments_api_username': str
        }

        self.attribute_map = {
            'paysafe_payments_api_password': 'paysafePaymentsApiPassword',
            'paysafe_payments_api_username': 'paysafePaymentsApiUsername'
        }

        self._paysafe_payments_api_password = paysafe_payments_api_password
        self._paysafe_payments_api_username = paysafe_payments_api_username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetellerAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Neteller_allOf_credentials of this NetellerAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paysafe_payments_api_password(self):
        """Gets the paysafe_payments_api_password of this NetellerAllOfCredentials.

        Neteller App Paysafe Payments API Password for a private key.

        :return: The paysafe_payments_api_password of this NetellerAllOfCredentials.
        :rtype: str
        """
        return self._paysafe_payments_api_password

    @paysafe_payments_api_password.setter
    def paysafe_payments_api_password(self, paysafe_payments_api_password):
        """Sets the paysafe_payments_api_password of this NetellerAllOfCredentials.

        Neteller App Paysafe Payments API Password for a private key.

        :param paysafe_payments_api_password: The paysafe_payments_api_password of this NetellerAllOfCredentials.
        :type paysafe_payments_api_password: str
        """
        if paysafe_payments_api_password is None:
            raise ValueError("Invalid value for `paysafe_payments_api_password`, must not be `None`")

        self._paysafe_payments_api_password = paysafe_payments_api_password

    @property
    def paysafe_payments_api_username(self):
        """Gets the paysafe_payments_api_username of this NetellerAllOfCredentials.

        Neteller App Paysafe Payments API Username for a private key.

        :return: The paysafe_payments_api_username of this NetellerAllOfCredentials.
        :rtype: str
        """
        return self._paysafe_payments_api_username

    @paysafe_payments_api_username.setter
    def paysafe_payments_api_username(self, paysafe_payments_api_username):
        """Sets the paysafe_payments_api_username of this NetellerAllOfCredentials.

        Neteller App Paysafe Payments API Username for a private key.

        :param paysafe_payments_api_username: The paysafe_payments_api_username of this NetellerAllOfCredentials.
        :type paysafe_payments_api_username: str
        """
        if paysafe_payments_api_username is None:
            raise ValueError("Invalid value for `paysafe_payments_api_username`, must not be `None`")

        self._paysafe_payments_api_username = paysafe_payments_api_username
