# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.apple_pay_validation_all_of_validation_request import ApplePayValidationAllOfValidationRequest
from openapi_server.models.digital_wallet_validation import DigitalWalletValidation
from openapi_server import util


class ApplePayValidation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, validation_request: ApplePayValidationAllOfValidationRequest=None, validation_response: object=None):
        """ApplePayValidation - a model defined in OpenAPI

        :param type: The type of this ApplePayValidation.
        :param validation_request: The validation_request of this ApplePayValidation.
        :param validation_response: The validation_response of this ApplePayValidation.
        """
        self.openapi_types = {
            'type': str,
            'validation_request': ApplePayValidationAllOfValidationRequest,
            'validation_response': object
        }

        self.attribute_map = {
            'type': 'type',
            'validation_request': 'validationRequest',
            'validation_response': 'validationResponse'
        }

        self._type = type
        self._validation_request = validation_request
        self._validation_response = validation_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplePayValidation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplePayValidation of this ApplePayValidation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this ApplePayValidation.


        :return: The type of this ApplePayValidation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApplePayValidation.


        :param type: The type of this ApplePayValidation.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def validation_request(self):
        """Gets the validation_request of this ApplePayValidation.


        :return: The validation_request of this ApplePayValidation.
        :rtype: ApplePayValidationAllOfValidationRequest
        """
        return self._validation_request

    @validation_request.setter
    def validation_request(self, validation_request):
        """Sets the validation_request of this ApplePayValidation.


        :param validation_request: The validation_request of this ApplePayValidation.
        :type validation_request: ApplePayValidationAllOfValidationRequest
        """
        if validation_request is None:
            raise ValueError("Invalid value for `validation_request`, must not be `None`")

        self._validation_request = validation_request

    @property
    def validation_response(self):
        """Gets the validation_response of this ApplePayValidation.

        The validation response to use by the Apple Pay SDK to proceed.

        :return: The validation_response of this ApplePayValidation.
        :rtype: object
        """
        return self._validation_response

    @validation_response.setter
    def validation_response(self, validation_response):
        """Sets the validation_response of this ApplePayValidation.

        The validation response to use by the Apple Pay SDK to proceed.

        :param validation_response: The validation_response of this ApplePayValidation.
        :type validation_response: object
        """

        self._validation_response = validation_response
