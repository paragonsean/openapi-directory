# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PurchaseBumpOffer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bump_amount: float=None, bump_amount_in_usd: float=None, custom_fields: object=None, offer_id: str=None, offer_type: str=None):
        """PurchaseBumpOffer - a model defined in OpenAPI

        :param bump_amount: The bump_amount of this PurchaseBumpOffer.
        :param bump_amount_in_usd: The bump_amount_in_usd of this PurchaseBumpOffer.
        :param custom_fields: The custom_fields of this PurchaseBumpOffer.
        :param offer_id: The offer_id of this PurchaseBumpOffer.
        :param offer_type: The offer_type of this PurchaseBumpOffer.
        """
        self.openapi_types = {
            'bump_amount': float,
            'bump_amount_in_usd': float,
            'custom_fields': object,
            'offer_id': str,
            'offer_type': str
        }

        self.attribute_map = {
            'bump_amount': 'bumpAmount',
            'bump_amount_in_usd': 'bumpAmountInUsd',
            'custom_fields': 'customFields',
            'offer_id': 'offerId',
            'offer_type': 'offerType'
        }

        self._bump_amount = bump_amount
        self._bump_amount_in_usd = bump_amount_in_usd
        self._custom_fields = custom_fields
        self._offer_id = offer_id
        self._offer_type = offer_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseBumpOffer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseBumpOffer of this PurchaseBumpOffer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bump_amount(self):
        """Gets the bump_amount of this PurchaseBumpOffer.

        Bump amount.

        :return: The bump_amount of this PurchaseBumpOffer.
        :rtype: float
        """
        return self._bump_amount

    @bump_amount.setter
    def bump_amount(self, bump_amount):
        """Sets the bump_amount of this PurchaseBumpOffer.

        Bump amount.

        :param bump_amount: The bump_amount of this PurchaseBumpOffer.
        :type bump_amount: float
        """
        if bump_amount is None:
            raise ValueError("Invalid value for `bump_amount`, must not be `None`")

        self._bump_amount = bump_amount

    @property
    def bump_amount_in_usd(self):
        """Gets the bump_amount_in_usd of this PurchaseBumpOffer.

        Bump amount in USD.

        :return: The bump_amount_in_usd of this PurchaseBumpOffer.
        :rtype: float
        """
        return self._bump_amount_in_usd

    @bump_amount_in_usd.setter
    def bump_amount_in_usd(self, bump_amount_in_usd):
        """Sets the bump_amount_in_usd of this PurchaseBumpOffer.

        Bump amount in USD.

        :param bump_amount_in_usd: The bump_amount_in_usd of this PurchaseBumpOffer.
        :type bump_amount_in_usd: float
        """

        self._bump_amount_in_usd = bump_amount_in_usd

    @property
    def custom_fields(self):
        """Gets the custom_fields of this PurchaseBumpOffer.

        Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). 

        :return: The custom_fields of this PurchaseBumpOffer.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this PurchaseBumpOffer.

        Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). 

        :param custom_fields: The custom_fields of this PurchaseBumpOffer.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def offer_id(self):
        """Gets the offer_id of this PurchaseBumpOffer.

        Offer ID.

        :return: The offer_id of this PurchaseBumpOffer.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this PurchaseBumpOffer.

        Offer ID.

        :param offer_id: The offer_id of this PurchaseBumpOffer.
        :type offer_id: str
        """
        if offer_id is None:
            raise ValueError("Invalid value for `offer_id`, must not be `None`")

        self._offer_id = offer_id

    @property
    def offer_type(self):
        """Gets the offer_type of this PurchaseBumpOffer.

        Offer Type.

        :return: The offer_type of this PurchaseBumpOffer.
        :rtype: str
        """
        return self._offer_type

    @offer_type.setter
    def offer_type(self, offer_type):
        """Sets the offer_type of this PurchaseBumpOffer.

        Offer Type.

        :param offer_type: The offer_type of this PurchaseBumpOffer.
        :type offer_type: str
        """
        if offer_type is None:
            raise ValueError("Invalid value for `offer_type`, must not be `None`")

        self._offer_type = offer_type
