# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommonSubscriptionOrderAllOfTrial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, end_time: datetime=None):
        """CommonSubscriptionOrderAllOfTrial - a model defined in OpenAPI

        :param enabled: The enabled of this CommonSubscriptionOrderAllOfTrial.
        :param end_time: The end_time of this CommonSubscriptionOrderAllOfTrial.
        """
        self.openapi_types = {
            'enabled': bool,
            'end_time': datetime
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'end_time': 'endTime'
        }

        self._enabled = enabled
        self._end_time = end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommonSubscriptionOrderAllOfTrial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommonSubscriptionOrder_allOf_trial of this CommonSubscriptionOrderAllOfTrial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this CommonSubscriptionOrderAllOfTrial.

        Enable or disable the trial for this subscription. If enabled for plans without trial prices, the trial will be free.

        :return: The enabled of this CommonSubscriptionOrderAllOfTrial.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this CommonSubscriptionOrderAllOfTrial.

        Enable or disable the trial for this subscription. If enabled for plans without trial prices, the trial will be free.

        :param enabled: The enabled of this CommonSubscriptionOrderAllOfTrial.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def end_time(self):
        """Gets the end_time of this CommonSubscriptionOrderAllOfTrial.

        The time the trial should end.

        :return: The end_time of this CommonSubscriptionOrderAllOfTrial.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this CommonSubscriptionOrderAllOfTrial.

        The time the trial should end.

        :param end_time: The end_time of this CommonSubscriptionOrderAllOfTrial.
        :type end_time: datetime
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time
