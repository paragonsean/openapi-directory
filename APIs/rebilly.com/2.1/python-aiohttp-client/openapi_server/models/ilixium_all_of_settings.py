# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IlixiumAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, platform: str='itix', use_credit_endpoint: bool=None, use_ip_frame: bool=None, use_standalone_credit_endpoint: bool=None):
        """IlixiumAllOfSettings - a model defined in OpenAPI

        :param platform: The platform of this IlixiumAllOfSettings.
        :param use_credit_endpoint: The use_credit_endpoint of this IlixiumAllOfSettings.
        :param use_ip_frame: The use_ip_frame of this IlixiumAllOfSettings.
        :param use_standalone_credit_endpoint: The use_standalone_credit_endpoint of this IlixiumAllOfSettings.
        """
        self.openapi_types = {
            'platform': str,
            'use_credit_endpoint': bool,
            'use_ip_frame': bool,
            'use_standalone_credit_endpoint': bool
        }

        self.attribute_map = {
            'platform': 'platform',
            'use_credit_endpoint': 'useCreditEndpoint',
            'use_ip_frame': 'useIpFrame',
            'use_standalone_credit_endpoint': 'useStandaloneCreditEndpoint'
        }

        self._platform = platform
        self._use_credit_endpoint = use_credit_endpoint
        self._use_ip_frame = use_ip_frame
        self._use_standalone_credit_endpoint = use_standalone_credit_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IlixiumAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Ilixium_allOf_settings of this IlixiumAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def platform(self):
        """Gets the platform of this IlixiumAllOfSettings.

        Direct API platform.

        :return: The platform of this IlixiumAllOfSettings.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this IlixiumAllOfSettings.

        Direct API platform.

        :param platform: The platform of this IlixiumAllOfSettings.
        :type platform: str
        """
        allowed_values = ["itix", "tpg"]  # noqa: E501
        if platform not in allowed_values:
            raise ValueError(
                "Invalid value for `platform` ({0}), must be one of {1}"
                .format(platform, allowed_values)
            )

        self._platform = platform

    @property
    def use_credit_endpoint(self):
        """Gets the use_credit_endpoint of this IlixiumAllOfSettings.

        Use previous approval credit endpoint for payouts.

        :return: The use_credit_endpoint of this IlixiumAllOfSettings.
        :rtype: bool
        """
        return self._use_credit_endpoint

    @use_credit_endpoint.setter
    def use_credit_endpoint(self, use_credit_endpoint):
        """Sets the use_credit_endpoint of this IlixiumAllOfSettings.

        Use previous approval credit endpoint for payouts.

        :param use_credit_endpoint: The use_credit_endpoint of this IlixiumAllOfSettings.
        :type use_credit_endpoint: bool
        """

        self._use_credit_endpoint = use_credit_endpoint

    @property
    def use_ip_frame(self):
        """Gets the use_ip_frame of this IlixiumAllOfSettings.

        Force Ilixium to process via Ip Frame.

        :return: The use_ip_frame of this IlixiumAllOfSettings.
        :rtype: bool
        """
        return self._use_ip_frame

    @use_ip_frame.setter
    def use_ip_frame(self, use_ip_frame):
        """Sets the use_ip_frame of this IlixiumAllOfSettings.

        Force Ilixium to process via Ip Frame.

        :param use_ip_frame: The use_ip_frame of this IlixiumAllOfSettings.
        :type use_ip_frame: bool
        """

        self._use_ip_frame = use_ip_frame

    @property
    def use_standalone_credit_endpoint(self):
        """Gets the use_standalone_credit_endpoint of this IlixiumAllOfSettings.

        Use standalone (token) credit endpoint for payouts.

        :return: The use_standalone_credit_endpoint of this IlixiumAllOfSettings.
        :rtype: bool
        """
        return self._use_standalone_credit_endpoint

    @use_standalone_credit_endpoint.setter
    def use_standalone_credit_endpoint(self, use_standalone_credit_endpoint):
        """Sets the use_standalone_credit_endpoint of this IlixiumAllOfSettings.

        Use standalone (token) credit endpoint for payouts.

        :param use_standalone_credit_endpoint: The use_standalone_credit_endpoint of this IlixiumAllOfSettings.
        :type use_standalone_credit_endpoint: bool
        """

        self._use_standalone_credit_endpoint = use_standalone_credit_endpoint
