# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer import Customer
from openapi_server.models.invoice import Invoice
from openapi_server.models.subscription import Subscription
from openapi_server.models.transaction import Transaction
from openapi_server import util


class Search(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customers: List[Customer]=None, invoices: List[Invoice]=None, orders: List[Subscription]=None, searched: List[str]=None, transactions: List[Transaction]=None):
        """Search - a model defined in OpenAPI

        :param customers: The customers of this Search.
        :param invoices: The invoices of this Search.
        :param orders: The orders of this Search.
        :param searched: The searched of this Search.
        :param transactions: The transactions of this Search.
        """
        self.openapi_types = {
            'customers': List[Customer],
            'invoices': List[Invoice],
            'orders': List[Subscription],
            'searched': List[str],
            'transactions': List[Transaction]
        }

        self.attribute_map = {
            'customers': 'customers',
            'invoices': 'invoices',
            'orders': 'orders',
            'searched': 'searched',
            'transactions': 'transactions'
        }

        self._customers = customers
        self._invoices = invoices
        self._orders = orders
        self._searched = searched
        self._transactions = transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Search':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Search of this Search.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customers(self):
        """Gets the customers of this Search.

        List of returned customers.

        :return: The customers of this Search.
        :rtype: List[Customer]
        """
        return self._customers

    @customers.setter
    def customers(self, customers):
        """Sets the customers of this Search.

        List of returned customers.

        :param customers: The customers of this Search.
        :type customers: List[Customer]
        """

        self._customers = customers

    @property
    def invoices(self):
        """Gets the invoices of this Search.

        List of returned invoices.

        :return: The invoices of this Search.
        :rtype: List[Invoice]
        """
        return self._invoices

    @invoices.setter
    def invoices(self, invoices):
        """Sets the invoices of this Search.

        List of returned invoices.

        :param invoices: The invoices of this Search.
        :type invoices: List[Invoice]
        """

        self._invoices = invoices

    @property
    def orders(self):
        """Gets the orders of this Search.

        List of returned orders.

        :return: The orders of this Search.
        :rtype: List[Subscription]
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this Search.

        List of returned orders.

        :param orders: The orders of this Search.
        :type orders: List[Subscription]
        """

        self._orders = orders

    @property
    def searched(self):
        """Gets the searched of this Search.

        Names of searched resources, even if they returned nothing.

        :return: The searched of this Search.
        :rtype: List[str]
        """
        return self._searched

    @searched.setter
    def searched(self, searched):
        """Sets the searched of this Search.

        Names of searched resources, even if they returned nothing.

        :param searched: The searched of this Search.
        :type searched: List[str]
        """

        self._searched = searched

    @property
    def transactions(self):
        """Gets the transactions of this Search.

        List of returned transactions.

        :return: The transactions of this Search.
        :rtype: List[Transaction]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this Search.

        List of returned transactions.

        :param transactions: The transactions of this Search.
        :type transactions: List[Transaction]
        """

        self._transactions = transactions
