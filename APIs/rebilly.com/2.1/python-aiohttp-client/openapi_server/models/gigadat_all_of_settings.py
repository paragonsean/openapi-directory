# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GigadatAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sandbox: bool=False):
        """GigadatAllOfSettings - a model defined in OpenAPI

        :param sandbox: The sandbox of this GigadatAllOfSettings.
        """
        self.openapi_types = {
            'sandbox': bool
        }

        self.attribute_map = {
            'sandbox': 'sandbox'
        }

        self._sandbox = sandbox

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GigadatAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Gigadat_allOf_settings of this GigadatAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sandbox(self):
        """Gets the sandbox of this GigadatAllOfSettings.

        True if gateway account is in sandbox mode.

        :return: The sandbox of this GigadatAllOfSettings.
        :rtype: bool
        """
        return self._sandbox

    @sandbox.setter
    def sandbox(self, sandbox):
        """Sets the sandbox of this GigadatAllOfSettings.

        True if gateway account is in sandbox mode.

        :param sandbox: The sandbox of this GigadatAllOfSettings.
        :type sandbox: bool
        """
        if sandbox is None:
            raise ValueError("Invalid value for `sandbox`, must not be `None`")

        self._sandbox = sandbox
