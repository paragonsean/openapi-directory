# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CouponExpiration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expired_time: datetime=None):
        """CouponExpiration - a model defined in OpenAPI

        :param expired_time: The expired_time of this CouponExpiration.
        """
        self.openapi_types = {
            'expired_time': datetime
        }

        self.attribute_map = {
            'expired_time': 'expiredTime'
        }

        self._expired_time = expired_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CouponExpiration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CouponExpiration of this CouponExpiration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expired_time(self):
        """Gets the expired_time of this CouponExpiration.

        The coupon's expiry time, must be greater than the issued time. Null or empty string will immediately expire the coupon.

        :return: The expired_time of this CouponExpiration.
        :rtype: datetime
        """
        return self._expired_time

    @expired_time.setter
    def expired_time(self, expired_time):
        """Sets the expired_time of this CouponExpiration.

        The coupon's expiry time, must be greater than the issued time. Null or empty string will immediately expire the coupon.

        :param expired_time: The expired_time of this CouponExpiration.
        :type expired_time: datetime
        """
        if expired_time is None:
            raise ValueError("Invalid value for `expired_time`, must not be `None`")

        self._expired_time = expired_time
