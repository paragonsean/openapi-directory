# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaymentMethod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    PAYMENT_MINUS_CARD = 'payment-card'
    ACH = 'ach'
    CASH = 'cash'
    CHECK = 'check'
    PAYPAL = 'paypal'
    ADVCASH = 'AdvCash'
    AIRPAY = 'Airpay'
    ALFA_MINUS_CLICK = 'Alfa-click'
    ALIPAY = 'Alipay'
    APPLE_PAY = 'Apple Pay'
    ASTROPAY_CARD = 'AstroPay Card'
    ASTRO_PAY_MINUS_GO = 'AstroPay-GO'
    BANK_MINUS_TRANSFER = 'bank-transfer'
    BANK_MINUS_TRANSFER_MINUS_2 = 'bank-transfer-2'
    BANK_MINUS_TRANSFER_MINUS_3 = 'bank-transfer-3'
    BANK_MINUS_TRANSFER_MINUS_4 = 'bank-transfer-4'
    BANK_MINUS_TRANSFER_MINUS_5 = 'bank-transfer-5'
    BANK_MINUS_TRANSFER_MINUS_6 = 'bank-transfer-6'
    BANK_MINUS_TRANSFER_MINUS_7 = 'bank-transfer-7'
    BANK_MINUS_TRANSFER_MINUS_8 = 'bank-transfer-8'
    BANK_MINUS_TRANSFER_MINUS_9 = 'bank-transfer-9'
    BEELINE = 'Beeline'
    BELFIUS_MINUS_DIRECT_MINUS_NET = 'Belfius-direct-net'
    BITCOIN = 'bitcoin'
    BOLETO = 'Boleto'
    BOLETO_MINUS_2 = 'Boleto-2'
    BOLETO_MINUS_3 = 'Boleto-3'
    CASH_MINUS_DEPOSIT = 'cash-deposit'
    CASHLIB = 'CASHlib'
    CASHTOCODE = 'CashToCode'
    CCAVENUE = 'CCAvenue'
    CHINA_UNIONPAY = 'China UnionPay'
    CODVOUCHER = 'CODVoucher'
    CONEKTA_MINUS_OXXO = 'Conekta-oxxo'
    CONEKTA_MINUS_SPEI = 'Conekta-spei'
    CRYPTOCURRENCY = 'cryptocurrency'
    CUPON_MINUS_DE_MINUS_PAGOS = 'Cupon-de-pagos'
    CYBERSOURCE = 'CyberSource'
    DOMESTIC_MINUS_CARDS = 'domestic-cards'
    ECHECK = 'echeck'
    ECOPAYZ = 'ecoPayz'
    ECOVOUCHER = 'ecoVoucher'
    EPS = 'EPS'
    E_PAY_PERIOD_BG = 'ePay.bg'
    ETHEREUM = 'Ethereum'
    E_MINUS_WALLET = 'e-wallet'
    EZYEFT = 'ezyEFT'
    EZEEWALLET = 'eZeeWallet'
    FLEXEPIN = 'Flexepin'
    GIROPAY = 'Giropay'
    GOOGLE_PAY = 'Google Pay'
    GPAYSAFE = 'Gpaysafe'
    IDEBIT = 'iDebit'
    IDEAL = 'iDEAL'
    ING_MINUS_HOMEPAY = 'ING-homepay'
    INOVAPAY_MINUS_PIN = 'INOVAPAY-pin'
    INOVAPAY_MINUS_WALLET = 'INOVAPAY-wallet'
    INSTADEBIT = 'InstaDebit'
    INSTANT_MINUS_BANK_MINUS_TRANSFER = 'instant-bank-transfer'
    INTERAC_MINUS_ONLINE = 'Interac-online'
    INTERAC_MINUS_E_TRANSFER = 'Interac-eTransfer'
    INTERAC_MINUS_EXPRESS_MINUS_CONNECT = 'Interac-express-connect'
    INTERAC = 'Interac'
    INVOICE = 'invoice'
    IWALLET = 'iWallet'
    JETON = 'Jeton'
    JPAY = 'jpay'
    KHELOCARD = 'Khelocard'
    KLARNA = 'Klarna'
    LITECOIN = 'Litecoin'
    LOONIE = 'loonie'
    LPG_MINUS_ONLINE = 'LPG-online'
    LPG_MINUS_PAYMENT_MINUS_CARD = 'LPG-payment-card'
    MEGAFON = 'Megafon'
    MI_FINITY_MINUS_E_WALLET = 'MiFinity-eWallet'
    MISCELLANEOUS = 'miscellaneous'
    BANCONTACT = 'Bancontact'
    MTS = 'MTS'
    MUCHBETTER = 'MuchBetter'
    MYFATOORAH = 'MyFatoorah'
    NEOSURF = 'Neosurf'
    NETBANKING = 'Netbanking'
    NETELLER = 'Neteller'
    NORDEA_MINUS_SOLO = 'Nordea-Solo'
    OCHAPAY = 'OchaPay'
    ONLINE_MINUS_BANK_MINUS_TRANSFER = 'online-bank-transfer'
    ONLINEUEBERWEISEN = 'Onlineueberweisen'
    ORIENTAL_MINUS_WALLET = 'oriental-wallet'
    OXXO = 'OXXO'
    PAGSMILE_MINUS_LOTTERY = 'Pagsmile-lottery'
    PAGSMILE_MINUS_DEPOSIT_MINUS_EXPRESS = 'Pagsmile-deposit-express'
    PAYCASH = 'PayCash'
    PAYEER = 'Payeer'
    PAYMENT_ASIA_MINUS_CRYPTO = 'PaymentAsia-crypto'
    PAYSAFECARD = 'Paysafecard'
    PAYTABS = 'PayTabs'
    PAY4FUN = 'Pay4Fun'
    PAYMERO = 'Paymero'
    PAYMERO_MINUS_QR = 'Paymero-QR'
    PAYULATAM = 'PayULatam'
    PERFECT_MINUS_MONEY = 'Perfect-money'
    PIASTRIX = 'Piastrix'
    PIX = 'PIX'
    PINPAY = 'PinPay'
    PHONE = 'phone'
    PHONEPE = 'PhonePe'
    POLI = 'POLi'
    POST_FINANCE_MINUS_CARD = 'PostFinance-card'
    POST_FINANCE_MINUS_E_MINUS_FINANCE = 'PostFinance-e-finance'
    PRZELEWY24 = 'Przelewy24'
    QIWI = 'QIWI'
    QQPAY = 'QQPay'
    RESURS = 'Resurs'
    SEPA = 'SEPA'
    SIIRTO = 'Siirto'
    SKRILL = 'Skrill'
    SKRILL_RAPID_TRANSFER = 'Skrill Rapid Transfer'
    SMSVOUCHER = 'SMSVoucher'
    SOFORT = 'Sofort'
    SPARKPAY = 'SparkPay'
    SWIFT_MINUS_DBT = 'swift-dbt'
    TELE2 = 'Tele2'
    TERMINALY_MINUS_RF = 'Terminaly-RF'
    TETHER = 'Tether'
    TODITO_CASH_MINUS_CARD = 'ToditoCash-card'
    TRUSTLY = 'Trustly'
    TWINT = 'TWINT'
    UNICRYPT = 'UniCrypt'
    UPAYCARD = 'UPayCard'
    UPI = 'UPI'
    VCREDITOS = 'VCreditos'
    VENUSPOINT = 'VenusPoint'
    VOUCHER = 'voucher'
    VOUCHER_MINUS_2 = 'voucher-2'
    VOUCHER_MINUS_3 = 'voucher-3'
    VOUCHER_MINUS_4 = 'voucher-4'
    WEBMONEY = 'Webmoney'
    WEBPAY = 'Webpay'
    WEBPAY_MINUS_2 = 'Webpay-2'
    WEBPAY_CARD = 'Webpay Card'
    WECHAT_PAY = 'WeChat Pay'
    X_PAY_MINUS_P2_P = 'XPay-P2P'
    X_PAY_MINUS_QR = 'XPay-QR'
    YANDEX_MINUS_MONEY = 'Yandex-money'
    ZOTAPAY = 'Zotapay'
    ZIMPLER = 'Zimpler'

    def __init__(self):
        """PaymentMethod - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentMethod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentMethod of this PaymentMethod.
        """
        return util.deserialize_model(dikt, cls)
