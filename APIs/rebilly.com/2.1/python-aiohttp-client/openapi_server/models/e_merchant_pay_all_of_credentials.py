# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EMerchantPayAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, client_id: str=None, password: str=None, token: str=None, username: str=None):
        """EMerchantPayAllOfCredentials - a model defined in OpenAPI

        :param api_key: The api_key of this EMerchantPayAllOfCredentials.
        :param client_id: The client_id of this EMerchantPayAllOfCredentials.
        :param password: The password of this EMerchantPayAllOfCredentials.
        :param token: The token of this EMerchantPayAllOfCredentials.
        :param username: The username of this EMerchantPayAllOfCredentials.
        """
        self.openapi_types = {
            'api_key': str,
            'client_id': str,
            'password': str,
            'token': str,
            'username': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'client_id': 'clientId',
            'password': 'password',
            'token': 'token',
            'username': 'username'
        }

        self._api_key = api_key
        self._client_id = client_id
        self._password = password
        self._token = token
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EMerchantPayAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eMerchantPay_allOf_credentials of this EMerchantPayAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this EMerchantPayAllOfCredentials.

        eMerchantPay Gateway api key.

        :return: The api_key of this EMerchantPayAllOfCredentials.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this EMerchantPayAllOfCredentials.

        eMerchantPay Gateway api key.

        :param api_key: The api_key of this EMerchantPayAllOfCredentials.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def client_id(self):
        """Gets the client_id of this EMerchantPayAllOfCredentials.

        eMerchantPay Gateway client ID.

        :return: The client_id of this EMerchantPayAllOfCredentials.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this EMerchantPayAllOfCredentials.

        eMerchantPay Gateway client ID.

        :param client_id: The client_id of this EMerchantPayAllOfCredentials.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def password(self):
        """Gets the password of this EMerchantPayAllOfCredentials.

        eMerchantPay password for Genesis platform.

        :return: The password of this EMerchantPayAllOfCredentials.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this EMerchantPayAllOfCredentials.

        eMerchantPay password for Genesis platform.

        :param password: The password of this EMerchantPayAllOfCredentials.
        :type password: str
        """

        self._password = password

    @property
    def token(self):
        """Gets the token of this EMerchantPayAllOfCredentials.

        eMerchantPay token for Genesis platform.

        :return: The token of this EMerchantPayAllOfCredentials.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this EMerchantPayAllOfCredentials.

        eMerchantPay token for Genesis platform.

        :param token: The token of this EMerchantPayAllOfCredentials.
        :type token: str
        """

        self._token = token

    @property
    def username(self):
        """Gets the username of this EMerchantPayAllOfCredentials.

        eMerchantPay username for Genesis platform.

        :return: The username of this EMerchantPayAllOfCredentials.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this EMerchantPayAllOfCredentials.

        eMerchantPay username for Genesis platform.

        :param username: The username of this EMerchantPayAllOfCredentials.
        :type username: str
        """

        self._username = username
