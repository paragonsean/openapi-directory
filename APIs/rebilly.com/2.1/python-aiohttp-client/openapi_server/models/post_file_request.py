# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_create_from_inline import FileCreateFromInline
from openapi_server.models.file_create_from_url import FileCreateFromUrl
from openapi_server import util


class PostFileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, file: str=None, is_public: bool=None, name: str=None, tags: List[str]=None, url: str=None):
        """PostFileRequest - a model defined in OpenAPI

        :param description: The description of this PostFileRequest.
        :param file: The file of this PostFileRequest.
        :param is_public: The is_public of this PostFileRequest.
        :param name: The name of this PostFileRequest.
        :param tags: The tags of this PostFileRequest.
        :param url: The url of this PostFileRequest.
        """
        self.openapi_types = {
            'description': str,
            'file': str,
            'is_public': bool,
            'name': str,
            'tags': List[str],
            'url': str
        }

        self.attribute_map = {
            'description': 'description',
            'file': 'file',
            'is_public': 'isPublic',
            'name': 'name',
            'tags': 'tags',
            'url': 'url'
        }

        self._description = description
        self._file = file
        self._is_public = is_public
        self._name = name
        self._tags = tags
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostFileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostFile_request of this PostFileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PostFileRequest.

        The file description.

        :return: The description of this PostFileRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PostFileRequest.

        The file description.

        :param description: The description of this PostFileRequest.
        :type description: str
        """

        self._description = description

    @property
    def file(self):
        """Gets the file of this PostFileRequest.

        The file in base64 encoded format.

        :return: The file of this PostFileRequest.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this PostFileRequest.

        The file in base64 encoded format.

        :param file: The file of this PostFileRequest.
        :type file: str
        """
        if file is None:
            raise ValueError("Invalid value for `file`, must not be `None`")

        self._file = file

    @property
    def is_public(self):
        """Gets the is_public of this PostFileRequest.

        The File visibility. If public a permalink is provided.

        :return: The is_public of this PostFileRequest.
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this PostFileRequest.

        The File visibility. If public a permalink is provided.

        :param is_public: The is_public of this PostFileRequest.
        :type is_public: bool
        """

        self._is_public = is_public

    @property
    def name(self):
        """Gets the name of this PostFileRequest.

        The file name used for downloading.

        :return: The name of this PostFileRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PostFileRequest.

        The file name used for downloading.

        :param name: The name of this PostFileRequest.
        :type name: str
        """

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this PostFileRequest.

        The tags list.

        :return: The tags of this PostFileRequest.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PostFileRequest.

        The tags list.

        :param tags: The tags of this PostFileRequest.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def url(self):
        """Gets the url of this PostFileRequest.

        The URL of the file to upload.

        :return: The url of this PostFileRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PostFileRequest.

        The URL of the file to upload.

        :param url: The url of this PostFileRequest.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
