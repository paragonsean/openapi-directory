# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DigitalWalletsApplePay(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_enabled: bool=False):
        """DigitalWalletsApplePay - a model defined in OpenAPI

        :param is_enabled: The is_enabled of this DigitalWalletsApplePay.
        """
        self.openapi_types = {
            'is_enabled': bool
        }

        self.attribute_map = {
            'is_enabled': 'isEnabled'
        }

        self._is_enabled = is_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DigitalWalletsApplePay':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DigitalWallets_applePay of this DigitalWalletsApplePay.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_enabled(self):
        """Gets the is_enabled of this DigitalWalletsApplePay.

        Set true if Apple Pay is enabled.

        :return: The is_enabled of this DigitalWalletsApplePay.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this DigitalWalletsApplePay.

        Set true if Apple Pay is enabled.

        :param is_enabled: The is_enabled of this DigitalWalletsApplePay.
        :type is_enabled: bool
        """
        if is_enabled is None:
            raise ValueError("Invalid value for `is_enabled`, must not be `None`")

        self._is_enabled = is_enabled
