# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SagepayAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, m_id: str=None, m_key: str=None):
        """SagepayAllOfCredentials - a model defined in OpenAPI

        :param m_id: The m_id of this SagepayAllOfCredentials.
        :param m_key: The m_key of this SagepayAllOfCredentials.
        """
        self.openapi_types = {
            'm_id': str,
            'm_key': str
        }

        self.attribute_map = {
            'm_id': 'M_ID',
            'm_key': 'M_KEY'
        }

        self._m_id = m_id
        self._m_key = m_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SagepayAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sagepay_allOf_credentials of this SagepayAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def m_id(self):
        """Gets the m_id of this SagepayAllOfCredentials.

        Sagepay Gateway merchant ID.

        :return: The m_id of this SagepayAllOfCredentials.
        :rtype: str
        """
        return self._m_id

    @m_id.setter
    def m_id(self, m_id):
        """Sets the m_id of this SagepayAllOfCredentials.

        Sagepay Gateway merchant ID.

        :param m_id: The m_id of this SagepayAllOfCredentials.
        :type m_id: str
        """
        if m_id is None:
            raise ValueError("Invalid value for `m_id`, must not be `None`")

        self._m_id = m_id

    @property
    def m_key(self):
        """Gets the m_key of this SagepayAllOfCredentials.

        Sagepay Gateway merchant key.

        :return: The m_key of this SagepayAllOfCredentials.
        :rtype: str
        """
        return self._m_key

    @m_key.setter
    def m_key(self, m_key):
        """Sets the m_key of this SagepayAllOfCredentials.

        Sagepay Gateway merchant key.

        :param m_key: The m_key of this SagepayAllOfCredentials.
        :type m_key: str
        """
        if m_key is None:
            raise ValueError("Invalid value for `m_key`, must not be `None`")

        self._m_key = m_key
