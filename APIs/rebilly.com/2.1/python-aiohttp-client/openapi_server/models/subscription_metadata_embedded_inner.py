# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer import Customer
from openapi_server.models.customer_embed import CustomerEmbed
from openapi_server.models.initial_invoice_embed import InitialInvoiceEmbed
from openapi_server.models.invoice import Invoice
from openapi_server.models.lead_source import LeadSource
from openapi_server.models.lead_source_embed import LeadSourceEmbed
from openapi_server.models.recent_invoice_embed import RecentInvoiceEmbed
from openapi_server.models.website_embed import WebsiteEmbed
from openapi_server import util


class SubscriptionMetadataEmbeddedInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recent_invoice: Invoice=None, initial_invoice: Invoice=None, customer: Customer=None, website: object=None, lead_source: LeadSource=None):
        """SubscriptionMetadataEmbeddedInner - a model defined in OpenAPI

        :param recent_invoice: The recent_invoice of this SubscriptionMetadataEmbeddedInner.
        :param initial_invoice: The initial_invoice of this SubscriptionMetadataEmbeddedInner.
        :param customer: The customer of this SubscriptionMetadataEmbeddedInner.
        :param website: The website of this SubscriptionMetadataEmbeddedInner.
        :param lead_source: The lead_source of this SubscriptionMetadataEmbeddedInner.
        """
        self.openapi_types = {
            'recent_invoice': Invoice,
            'initial_invoice': Invoice,
            'customer': Customer,
            'website': object,
            'lead_source': LeadSource
        }

        self.attribute_map = {
            'recent_invoice': 'recentInvoice',
            'initial_invoice': 'initialInvoice',
            'customer': 'customer',
            'website': 'website',
            'lead_source': 'leadSource'
        }

        self._recent_invoice = recent_invoice
        self._initial_invoice = initial_invoice
        self._customer = customer
        self._website = website
        self._lead_source = lead_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionMetadataEmbeddedInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionMetadata__embedded_inner of this SubscriptionMetadataEmbeddedInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recent_invoice(self):
        """Gets the recent_invoice of this SubscriptionMetadataEmbeddedInner.


        :return: The recent_invoice of this SubscriptionMetadataEmbeddedInner.
        :rtype: Invoice
        """
        return self._recent_invoice

    @recent_invoice.setter
    def recent_invoice(self, recent_invoice):
        """Sets the recent_invoice of this SubscriptionMetadataEmbeddedInner.


        :param recent_invoice: The recent_invoice of this SubscriptionMetadataEmbeddedInner.
        :type recent_invoice: Invoice
        """

        self._recent_invoice = recent_invoice

    @property
    def initial_invoice(self):
        """Gets the initial_invoice of this SubscriptionMetadataEmbeddedInner.


        :return: The initial_invoice of this SubscriptionMetadataEmbeddedInner.
        :rtype: Invoice
        """
        return self._initial_invoice

    @initial_invoice.setter
    def initial_invoice(self, initial_invoice):
        """Sets the initial_invoice of this SubscriptionMetadataEmbeddedInner.


        :param initial_invoice: The initial_invoice of this SubscriptionMetadataEmbeddedInner.
        :type initial_invoice: Invoice
        """

        self._initial_invoice = initial_invoice

    @property
    def customer(self):
        """Gets the customer of this SubscriptionMetadataEmbeddedInner.


        :return: The customer of this SubscriptionMetadataEmbeddedInner.
        :rtype: Customer
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this SubscriptionMetadataEmbeddedInner.


        :param customer: The customer of this SubscriptionMetadataEmbeddedInner.
        :type customer: Customer
        """

        self._customer = customer

    @property
    def website(self):
        """Gets the website of this SubscriptionMetadataEmbeddedInner.


        :return: The website of this SubscriptionMetadataEmbeddedInner.
        :rtype: object
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this SubscriptionMetadataEmbeddedInner.


        :param website: The website of this SubscriptionMetadataEmbeddedInner.
        :type website: object
        """

        self._website = website

    @property
    def lead_source(self):
        """Gets the lead_source of this SubscriptionMetadataEmbeddedInner.


        :return: The lead_source of this SubscriptionMetadataEmbeddedInner.
        :rtype: LeadSource
        """
        return self._lead_source

    @lead_source.setter
    def lead_source(self, lead_source):
        """Sets the lead_source of this SubscriptionMetadataEmbeddedInner.


        :param lead_source: The lead_source of this SubscriptionMetadataEmbeddedInner.
        :type lead_source: LeadSource
        """

        self._lead_source = lead_source
