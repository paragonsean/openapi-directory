# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForteAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, api_access_id: str=None, api_secret_key: str=None, location_id: str=None):
        """ForteAllOfCredentials - a model defined in OpenAPI

        :param account_id: The account_id of this ForteAllOfCredentials.
        :param api_access_id: The api_access_id of this ForteAllOfCredentials.
        :param api_secret_key: The api_secret_key of this ForteAllOfCredentials.
        :param location_id: The location_id of this ForteAllOfCredentials.
        """
        self.openapi_types = {
            'account_id': str,
            'api_access_id': str,
            'api_secret_key': str,
            'location_id': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'api_access_id': 'apiAccessId',
            'api_secret_key': 'apiSecretKey',
            'location_id': 'locationId'
        }

        self._account_id = account_id
        self._api_access_id = api_access_id
        self._api_secret_key = api_secret_key
        self._location_id = location_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForteAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Forte_allOf_credentials of this ForteAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this ForteAllOfCredentials.

        Forte Gateway account ID.

        :return: The account_id of this ForteAllOfCredentials.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ForteAllOfCredentials.

        Forte Gateway account ID.

        :param account_id: The account_id of this ForteAllOfCredentials.
        :type account_id: str
        """
        if account_id is None:
            raise ValueError("Invalid value for `account_id`, must not be `None`")

        self._account_id = account_id

    @property
    def api_access_id(self):
        """Gets the api_access_id of this ForteAllOfCredentials.

        Forte Gateway api access ID.

        :return: The api_access_id of this ForteAllOfCredentials.
        :rtype: str
        """
        return self._api_access_id

    @api_access_id.setter
    def api_access_id(self, api_access_id):
        """Sets the api_access_id of this ForteAllOfCredentials.

        Forte Gateway api access ID.

        :param api_access_id: The api_access_id of this ForteAllOfCredentials.
        :type api_access_id: str
        """
        if api_access_id is None:
            raise ValueError("Invalid value for `api_access_id`, must not be `None`")

        self._api_access_id = api_access_id

    @property
    def api_secret_key(self):
        """Gets the api_secret_key of this ForteAllOfCredentials.

        Forte Gateway api secret key.

        :return: The api_secret_key of this ForteAllOfCredentials.
        :rtype: str
        """
        return self._api_secret_key

    @api_secret_key.setter
    def api_secret_key(self, api_secret_key):
        """Sets the api_secret_key of this ForteAllOfCredentials.

        Forte Gateway api secret key.

        :param api_secret_key: The api_secret_key of this ForteAllOfCredentials.
        :type api_secret_key: str
        """
        if api_secret_key is None:
            raise ValueError("Invalid value for `api_secret_key`, must not be `None`")

        self._api_secret_key = api_secret_key

    @property
    def location_id(self):
        """Gets the location_id of this ForteAllOfCredentials.

        Forte Gateway location ID.

        :return: The location_id of this ForteAllOfCredentials.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ForteAllOfCredentials.

        Forte Gateway location ID.

        :param location_id: The location_id of this ForteAllOfCredentials.
        :type location_id: str
        """
        if location_id is None:
            raise ValueError("Invalid value for `location_id`, must not be `None`")

        self._location_id = location_id
