# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_method import PaymentMethod
from openapi_server import util


class PaymentMethods(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, methods: List[PaymentMethod]=None):
        """PaymentMethods - a model defined in OpenAPI

        :param methods: The methods of this PaymentMethods.
        """
        self.openapi_types = {
            'methods': List[PaymentMethod]
        }

        self.attribute_map = {
            'methods': 'methods'
        }

        self._methods = methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentMethods':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentMethods of this PaymentMethods.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def methods(self):
        """Gets the methods of this PaymentMethods.

        The list of available payment methods. Only payment methods with at least one active gateway account are allowed.  If not specified all available payment methods will be displayed.  Customer can choose any of those as well as the payment instrument for them. Additional steps will occur via a redirect to `approvalUrl`. 

        :return: The methods of this PaymentMethods.
        :rtype: List[PaymentMethod]
        """
        return self._methods

    @methods.setter
    def methods(self, methods):
        """Sets the methods of this PaymentMethods.

        The list of available payment methods. Only payment methods with at least one active gateway account are allowed.  If not specified all available payment methods will be displayed.  Customer can choose any of those as well as the payment instrument for them. Additional steps will occur via a redirect to `approvalUrl`. 

        :param methods: The methods of this PaymentMethods.
        :type methods: List[PaymentMethod]
        """

        self._methods = methods
