# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_object import ContactObject
from openapi_server import util


class BankAccountUpdatePlain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_type: str=None, bank_name: str=None, billing_address: ContactObject=None, custom_fields: object=None):
        """BankAccountUpdatePlain - a model defined in OpenAPI

        :param account_type: The account_type of this BankAccountUpdatePlain.
        :param bank_name: The bank_name of this BankAccountUpdatePlain.
        :param billing_address: The billing_address of this BankAccountUpdatePlain.
        :param custom_fields: The custom_fields of this BankAccountUpdatePlain.
        """
        self.openapi_types = {
            'account_type': str,
            'bank_name': str,
            'billing_address': ContactObject,
            'custom_fields': object
        }

        self.attribute_map = {
            'account_type': 'accountType',
            'bank_name': 'bankName',
            'billing_address': 'billingAddress',
            'custom_fields': 'customFields'
        }

        self._account_type = account_type
        self._bank_name = bank_name
        self._billing_address = billing_address
        self._custom_fields = custom_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountUpdatePlain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccountUpdatePlain of this BankAccountUpdatePlain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_type(self):
        """Gets the account_type of this BankAccountUpdatePlain.

        Bank's account type.

        :return: The account_type of this BankAccountUpdatePlain.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this BankAccountUpdatePlain.

        Bank's account type.

        :param account_type: The account_type of this BankAccountUpdatePlain.
        :type account_type: str
        """
        allowed_values = ["checking", "savings", "other"]  # noqa: E501
        if account_type not in allowed_values:
            raise ValueError(
                "Invalid value for `account_type` ({0}), must be one of {1}"
                .format(account_type, allowed_values)
            )

        self._account_type = account_type

    @property
    def bank_name(self):
        """Gets the bank_name of this BankAccountUpdatePlain.

        Bank's name.

        :return: The bank_name of this BankAccountUpdatePlain.
        :rtype: str
        """
        return self._bank_name

    @bank_name.setter
    def bank_name(self, bank_name):
        """Sets the bank_name of this BankAccountUpdatePlain.

        Bank's name.

        :param bank_name: The bank_name of this BankAccountUpdatePlain.
        :type bank_name: str
        """

        self._bank_name = bank_name

    @property
    def billing_address(self):
        """Gets the billing_address of this BankAccountUpdatePlain.

        The billing address.

        :return: The billing_address of this BankAccountUpdatePlain.
        :rtype: ContactObject
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this BankAccountUpdatePlain.

        The billing address.

        :param billing_address: The billing_address of this BankAccountUpdatePlain.
        :type billing_address: ContactObject
        """

        self._billing_address = billing_address

    @property
    def custom_fields(self):
        """Gets the custom_fields of this BankAccountUpdatePlain.

        Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). 

        :return: The custom_fields of this BankAccountUpdatePlain.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this BankAccountUpdatePlain.

        Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). 

        :param custom_fields: The custom_fields of this BankAccountUpdatePlain.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields
