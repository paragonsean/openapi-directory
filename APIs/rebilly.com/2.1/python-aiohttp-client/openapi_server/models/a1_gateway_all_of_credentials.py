# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class A1GatewayAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, password: str=None):
        """A1GatewayAllOfCredentials - a model defined in OpenAPI

        :param account_id: The account_id of this A1GatewayAllOfCredentials.
        :param password: The password of this A1GatewayAllOfCredentials.
        """
        self.openapi_types = {
            'account_id': str,
            'password': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'password': 'password'
        }

        self._account_id = account_id
        self._password = password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'A1GatewayAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The A1Gateway_allOf_credentials of this A1GatewayAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this A1GatewayAllOfCredentials.

        A1Gateway account ID.

        :return: The account_id of this A1GatewayAllOfCredentials.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this A1GatewayAllOfCredentials.

        A1Gateway account ID.

        :param account_id: The account_id of this A1GatewayAllOfCredentials.
        :type account_id: str
        """
        if account_id is None:
            raise ValueError("Invalid value for `account_id`, must not be `None`")

        self._account_id = account_id

    @property
    def password(self):
        """Gets the password of this A1GatewayAllOfCredentials.

        A1Gateway password.

        :return: The password of this A1GatewayAllOfCredentials.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this A1GatewayAllOfCredentials.

        A1Gateway password.

        :param password: The password of this A1GatewayAllOfCredentials.
        :type password: str
        """
        if password is None:
            raise ValueError("Invalid value for `password`, must not be `None`")

        self._password = password
