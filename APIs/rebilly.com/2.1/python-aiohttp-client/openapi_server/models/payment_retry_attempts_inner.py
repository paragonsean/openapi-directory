# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount_adjustment import AmountAdjustment
from openapi_server.models.common_schedule_instruction import CommonScheduleInstruction
from openapi_server import util


class PaymentRetryAttemptsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payment_instruction: AmountAdjustment=None, schedule_instruction: CommonScheduleInstruction=None):
        """PaymentRetryAttemptsInner - a model defined in OpenAPI

        :param payment_instruction: The payment_instruction of this PaymentRetryAttemptsInner.
        :param schedule_instruction: The schedule_instruction of this PaymentRetryAttemptsInner.
        """
        self.openapi_types = {
            'payment_instruction': AmountAdjustment,
            'schedule_instruction': CommonScheduleInstruction
        }

        self.attribute_map = {
            'payment_instruction': 'paymentInstruction',
            'schedule_instruction': 'scheduleInstruction'
        }

        self._payment_instruction = payment_instruction
        self._schedule_instruction = schedule_instruction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentRetryAttemptsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentRetry_attempts_inner of this PaymentRetryAttemptsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payment_instruction(self):
        """Gets the payment_instruction of this PaymentRetryAttemptsInner.


        :return: The payment_instruction of this PaymentRetryAttemptsInner.
        :rtype: AmountAdjustment
        """
        return self._payment_instruction

    @payment_instruction.setter
    def payment_instruction(self, payment_instruction):
        """Sets the payment_instruction of this PaymentRetryAttemptsInner.


        :param payment_instruction: The payment_instruction of this PaymentRetryAttemptsInner.
        :type payment_instruction: AmountAdjustment
        """
        if payment_instruction is None:
            raise ValueError("Invalid value for `payment_instruction`, must not be `None`")

        self._payment_instruction = payment_instruction

    @property
    def schedule_instruction(self):
        """Gets the schedule_instruction of this PaymentRetryAttemptsInner.


        :return: The schedule_instruction of this PaymentRetryAttemptsInner.
        :rtype: CommonScheduleInstruction
        """
        return self._schedule_instruction

    @schedule_instruction.setter
    def schedule_instruction(self, schedule_instruction):
        """Sets the schedule_instruction of this PaymentRetryAttemptsInner.


        :param schedule_instruction: The schedule_instruction of this PaymentRetryAttemptsInner.
        :type schedule_instruction: CommonScheduleInstruction
        """
        if schedule_instruction is None:
            raise ValueError("Invalid value for `schedule_instruction`, must not be `None`")

        self._schedule_instruction = schedule_instruction
