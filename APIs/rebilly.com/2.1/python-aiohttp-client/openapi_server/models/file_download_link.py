# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileDownloadLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rel: str=None, href: str=None):
        """FileDownloadLink - a model defined in OpenAPI

        :param rel: The rel of this FileDownloadLink.
        :param href: The href of this FileDownloadLink.
        """
        self.openapi_types = {
            'rel': str,
            'href': str
        }

        self.attribute_map = {
            'rel': 'rel',
            'href': 'href'
        }

        self._rel = rel
        self._href = href

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileDownloadLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileDownloadLink of this FileDownloadLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rel(self):
        """Gets the rel of this FileDownloadLink.

        The link type.

        :return: The rel of this FileDownloadLink.
        :rtype: str
        """
        return self._rel

    @rel.setter
    def rel(self, rel):
        """Sets the rel of this FileDownloadLink.

        The link type.

        :param rel: The rel of this FileDownloadLink.
        :type rel: str
        """
        allowed_values = ["download"]  # noqa: E501
        if rel not in allowed_values:
            raise ValueError(
                "Invalid value for `rel` ({0}), must be one of {1}"
                .format(rel, allowed_values)
            )

        self._rel = rel

    @property
    def href(self):
        """Gets the href of this FileDownloadLink.

        The link URL.

        :return: The href of this FileDownloadLink.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this FileDownloadLink.

        The link URL.

        :param href: The href of this FileDownloadLink.
        :type href: str
        """
        if href is None:
            raise ValueError("Invalid value for `href`, must not be `None`")

        self._href = href
