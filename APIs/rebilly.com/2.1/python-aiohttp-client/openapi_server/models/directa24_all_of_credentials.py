# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Directa24AllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secret_key: str=None, web_pay_login: str=None, web_pay_tran_key: str=None, x_login: str=None, x_tran_key: str=None):
        """Directa24AllOfCredentials - a model defined in OpenAPI

        :param secret_key: The secret_key of this Directa24AllOfCredentials.
        :param web_pay_login: The web_pay_login of this Directa24AllOfCredentials.
        :param web_pay_tran_key: The web_pay_tran_key of this Directa24AllOfCredentials.
        :param x_login: The x_login of this Directa24AllOfCredentials.
        :param x_tran_key: The x_tran_key of this Directa24AllOfCredentials.
        """
        self.openapi_types = {
            'secret_key': str,
            'web_pay_login': str,
            'web_pay_tran_key': str,
            'x_login': str,
            'x_tran_key': str
        }

        self.attribute_map = {
            'secret_key': 'secret_key',
            'web_pay_login': 'web_pay_login',
            'web_pay_tran_key': 'web_pay_tran_key',
            'x_login': 'x_login',
            'x_tran_key': 'x_tran_key'
        }

        self._secret_key = secret_key
        self._web_pay_login = web_pay_login
        self._web_pay_tran_key = web_pay_tran_key
        self._x_login = x_login
        self._x_tran_key = x_tran_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Directa24AllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Directa24_allOf_credentials of this Directa24AllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secret_key(self):
        """Gets the secret_key of this Directa24AllOfCredentials.

        Directa24 secret key.

        :return: The secret_key of this Directa24AllOfCredentials.
        :rtype: str
        """
        return self._secret_key

    @secret_key.setter
    def secret_key(self, secret_key):
        """Sets the secret_key of this Directa24AllOfCredentials.

        Directa24 secret key.

        :param secret_key: The secret_key of this Directa24AllOfCredentials.
        :type secret_key: str
        """
        if secret_key is None:
            raise ValueError("Invalid value for `secret_key`, must not be `None`")

        self._secret_key = secret_key

    @property
    def web_pay_login(self):
        """Gets the web_pay_login of this Directa24AllOfCredentials.

        Directa24 web pay status login.

        :return: The web_pay_login of this Directa24AllOfCredentials.
        :rtype: str
        """
        return self._web_pay_login

    @web_pay_login.setter
    def web_pay_login(self, web_pay_login):
        """Sets the web_pay_login of this Directa24AllOfCredentials.

        Directa24 web pay status login.

        :param web_pay_login: The web_pay_login of this Directa24AllOfCredentials.
        :type web_pay_login: str
        """
        if web_pay_login is None:
            raise ValueError("Invalid value for `web_pay_login`, must not be `None`")

        self._web_pay_login = web_pay_login

    @property
    def web_pay_tran_key(self):
        """Gets the web_pay_tran_key of this Directa24AllOfCredentials.

        Directa24 web pay status password.

        :return: The web_pay_tran_key of this Directa24AllOfCredentials.
        :rtype: str
        """
        return self._web_pay_tran_key

    @web_pay_tran_key.setter
    def web_pay_tran_key(self, web_pay_tran_key):
        """Sets the web_pay_tran_key of this Directa24AllOfCredentials.

        Directa24 web pay status password.

        :param web_pay_tran_key: The web_pay_tran_key of this Directa24AllOfCredentials.
        :type web_pay_tran_key: str
        """
        if web_pay_tran_key is None:
            raise ValueError("Invalid value for `web_pay_tran_key`, must not be `None`")

        self._web_pay_tran_key = web_pay_tran_key

    @property
    def x_login(self):
        """Gets the x_login of this Directa24AllOfCredentials.

        Directa24 login.

        :return: The x_login of this Directa24AllOfCredentials.
        :rtype: str
        """
        return self._x_login

    @x_login.setter
    def x_login(self, x_login):
        """Sets the x_login of this Directa24AllOfCredentials.

        Directa24 login.

        :param x_login: The x_login of this Directa24AllOfCredentials.
        :type x_login: str
        """
        if x_login is None:
            raise ValueError("Invalid value for `x_login`, must not be `None`")

        self._x_login = x_login

    @property
    def x_tran_key(self):
        """Gets the x_tran_key of this Directa24AllOfCredentials.

        Directa24 transaction key.

        :return: The x_tran_key of this Directa24AllOfCredentials.
        :rtype: str
        """
        return self._x_tran_key

    @x_tran_key.setter
    def x_tran_key(self, x_tran_key):
        """Sets the x_tran_key of this Directa24AllOfCredentials.

        Directa24 transaction key.

        :param x_tran_key: The x_tran_key of this Directa24AllOfCredentials.
        :type x_tran_key: str
        """
        if x_tran_key is None:
            raise ValueError("Invalid value for `x_tran_key`, must not be `None`")

        self._x_tran_key = x_tran_key
