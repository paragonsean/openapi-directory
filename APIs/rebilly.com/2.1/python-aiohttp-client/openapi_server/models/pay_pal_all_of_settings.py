# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PayPalAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_guest_checkout: bool=False, redirect_url: str=None):
        """PayPalAllOfSettings - a model defined in OpenAPI

        :param enable_guest_checkout: The enable_guest_checkout of this PayPalAllOfSettings.
        :param redirect_url: The redirect_url of this PayPalAllOfSettings.
        """
        self.openapi_types = {
            'enable_guest_checkout': bool,
            'redirect_url': str
        }

        self.attribute_map = {
            'enable_guest_checkout': 'enableGuestCheckout',
            'redirect_url': 'redirectUrl'
        }

        self._enable_guest_checkout = enable_guest_checkout
        self._redirect_url = redirect_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayPalAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayPal_allOf_settings of this PayPalAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_guest_checkout(self):
        """Gets the enable_guest_checkout of this PayPalAllOfSettings.

        Allow users without PayPal accounts to pay using credit or debit cards.

        :return: The enable_guest_checkout of this PayPalAllOfSettings.
        :rtype: bool
        """
        return self._enable_guest_checkout

    @enable_guest_checkout.setter
    def enable_guest_checkout(self, enable_guest_checkout):
        """Sets the enable_guest_checkout of this PayPalAllOfSettings.

        Allow users without PayPal accounts to pay using credit or debit cards.

        :param enable_guest_checkout: The enable_guest_checkout of this PayPalAllOfSettings.
        :type enable_guest_checkout: bool
        """

        self._enable_guest_checkout = enable_guest_checkout

    @property
    def redirect_url(self):
        """Gets the redirect_url of this PayPalAllOfSettings.

        The URL where the user will be redirected after authorizing the account on PayPal.

        :return: The redirect_url of this PayPalAllOfSettings.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this PayPalAllOfSettings.

        The URL where the user will be redirected after authorizing the account on PayPal.

        :param redirect_url: The redirect_url of this PayPalAllOfSettings.
        :type redirect_url: str
        """
        if redirect_url is None:
            raise ValueError("Invalid value for `redirect_url`, must not be `None`")

        self._redirect_url = redirect_url
