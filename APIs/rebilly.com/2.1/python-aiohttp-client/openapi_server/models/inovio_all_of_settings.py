# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InovioAllOfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merchant_account_id: str=None, product_id: str=None, website_id: str=None):
        """InovioAllOfSettings - a model defined in OpenAPI

        :param merchant_account_id: The merchant_account_id of this InovioAllOfSettings.
        :param product_id: The product_id of this InovioAllOfSettings.
        :param website_id: The website_id of this InovioAllOfSettings.
        """
        self.openapi_types = {
            'merchant_account_id': str,
            'product_id': str,
            'website_id': str
        }

        self.attribute_map = {
            'merchant_account_id': 'merchantAccountId',
            'product_id': 'productId',
            'website_id': 'websiteId'
        }

        self._merchant_account_id = merchant_account_id
        self._product_id = product_id
        self._website_id = website_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InovioAllOfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Inovio_allOf_settings of this InovioAllOfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merchant_account_id(self):
        """Gets the merchant_account_id of this InovioAllOfSettings.

        Inovio merchant account ID.

        :return: The merchant_account_id of this InovioAllOfSettings.
        :rtype: str
        """
        return self._merchant_account_id

    @merchant_account_id.setter
    def merchant_account_id(self, merchant_account_id):
        """Sets the merchant_account_id of this InovioAllOfSettings.

        Inovio merchant account ID.

        :param merchant_account_id: The merchant_account_id of this InovioAllOfSettings.
        :type merchant_account_id: str
        """
        if merchant_account_id is None:
            raise ValueError("Invalid value for `merchant_account_id`, must not be `None`")

        self._merchant_account_id = merchant_account_id

    @property
    def product_id(self):
        """Gets the product_id of this InovioAllOfSettings.

        Inovio product ID.

        :return: The product_id of this InovioAllOfSettings.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this InovioAllOfSettings.

        Inovio product ID.

        :param product_id: The product_id of this InovioAllOfSettings.
        :type product_id: str
        """
        if product_id is None:
            raise ValueError("Invalid value for `product_id`, must not be `None`")

        self._product_id = product_id

    @property
    def website_id(self):
        """Gets the website_id of this InovioAllOfSettings.

        Inovio website ID.

        :return: The website_id of this InovioAllOfSettings.
        :rtype: str
        """
        return self._website_id

    @website_id.setter
    def website_id(self, website_id):
        """Sets the website_id of this InovioAllOfSettings.

        Inovio website ID.

        :param website_id: The website_id of this InovioAllOfSettings.
        :type website_id: str
        """
        if website_id is None:
            raise ValueError("Invalid value for `website_id`, must not be `None`")

        self._website_id = website_id
