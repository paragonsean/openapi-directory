# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gateway_account import GatewayAccount
from openapi_server import util


class GatewayAccountEmbed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_account: GatewayAccount=None):
        """GatewayAccountEmbed - a model defined in OpenAPI

        :param gateway_account: The gateway_account of this GatewayAccountEmbed.
        """
        self.openapi_types = {
            'gateway_account': GatewayAccount
        }

        self.attribute_map = {
            'gateway_account': 'gatewayAccount'
        }

        self._gateway_account = gateway_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GatewayAccountEmbed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GatewayAccountEmbed of this GatewayAccountEmbed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_account(self):
        """Gets the gateway_account of this GatewayAccountEmbed.


        :return: The gateway_account of this GatewayAccountEmbed.
        :rtype: GatewayAccount
        """
        return self._gateway_account

    @gateway_account.setter
    def gateway_account(self, gateway_account):
        """Sets the gateway_account of this GatewayAccountEmbed.


        :param gateway_account: The gateway_account of this GatewayAccountEmbed.
        :type gateway_account: GatewayAccount
        """

        self._gateway_account = gateway_account
