# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Subscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_type: str=None):
        """Subscription - a model defined in OpenAPI

        :param order_type: The order_type of this Subscription.
        """
        self.openapi_types = {
            'order_type': str
        }

        self.attribute_map = {
            'order_type': 'orderType'
        }

        self._order_type = order_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscription of this Subscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_type(self):
        """Gets the order_type of this Subscription.

        Specifies the type of order, a subscription or a one-time purchase. 

        :return: The order_type of this Subscription.
        :rtype: str
        """
        return self._order_type

    @order_type.setter
    def order_type(self, order_type):
        """Sets the order_type of this Subscription.

        Specifies the type of order, a subscription or a one-time purchase. 

        :param order_type: The order_type of this Subscription.
        :type order_type: str
        """
        allowed_values = ["subscription-order", "one-time-order"]  # noqa: E501
        if order_type not in allowed_values:
            raise ValueError(
                "Invalid value for `order_type` ({0}), must be one of {1}"
                .format(order_type, allowed_values)
            )

        self._order_type = order_type
