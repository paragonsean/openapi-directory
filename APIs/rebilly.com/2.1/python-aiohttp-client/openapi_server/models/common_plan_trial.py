# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.plan_period import PlanPeriod
from openapi_server import util


class CommonPlanTrial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, period: PlanPeriod=None, price: float=None):
        """CommonPlanTrial - a model defined in OpenAPI

        :param period: The period of this CommonPlanTrial.
        :param price: The price of this CommonPlanTrial.
        """
        self.openapi_types = {
            'period': PlanPeriod,
            'price': float
        }

        self.attribute_map = {
            'period': 'period',
            'price': 'price'
        }

        self._period = period
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommonPlanTrial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommonPlan_trial of this CommonPlanTrial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def period(self):
        """Gets the period of this CommonPlanTrial.


        :return: The period of this CommonPlanTrial.
        :rtype: PlanPeriod
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this CommonPlanTrial.


        :param period: The period of this CommonPlanTrial.
        :type period: PlanPeriod
        """
        if period is None:
            raise ValueError("Invalid value for `period`, must not be `None`")

        self._period = period

    @property
    def price(self):
        """Gets the price of this CommonPlanTrial.

        The price of the trial. For a free trial, use `0`.

        :return: The price of this CommonPlanTrial.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CommonPlanTrial.

        The price of the trial. For a free trial, use `0`.

        :param price: The price of this CommonPlanTrial.
        :type price: float
        """
        if price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")

        self._price = price
