# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaysafeAllOfCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_num: str=None, store_id: str=None, store_pwd: str=None):
        """PaysafeAllOfCredentials - a model defined in OpenAPI

        :param account_num: The account_num of this PaysafeAllOfCredentials.
        :param store_id: The store_id of this PaysafeAllOfCredentials.
        :param store_pwd: The store_pwd of this PaysafeAllOfCredentials.
        """
        self.openapi_types = {
            'account_num': str,
            'store_id': str,
            'store_pwd': str
        }

        self.attribute_map = {
            'account_num': 'accountNum',
            'store_id': 'storeId',
            'store_pwd': 'storePwd'
        }

        self._account_num = account_num
        self._store_id = store_id
        self._store_pwd = store_pwd

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaysafeAllOfCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Paysafe_allOf_credentials of this PaysafeAllOfCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_num(self):
        """Gets the account_num of this PaysafeAllOfCredentials.

        Paysafe Gateway account number.

        :return: The account_num of this PaysafeAllOfCredentials.
        :rtype: str
        """
        return self._account_num

    @account_num.setter
    def account_num(self, account_num):
        """Sets the account_num of this PaysafeAllOfCredentials.

        Paysafe Gateway account number.

        :param account_num: The account_num of this PaysafeAllOfCredentials.
        :type account_num: str
        """
        if account_num is None:
            raise ValueError("Invalid value for `account_num`, must not be `None`")

        self._account_num = account_num

    @property
    def store_id(self):
        """Gets the store_id of this PaysafeAllOfCredentials.

        Paysafe Gateway store ID.

        :return: The store_id of this PaysafeAllOfCredentials.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this PaysafeAllOfCredentials.

        Paysafe Gateway store ID.

        :param store_id: The store_id of this PaysafeAllOfCredentials.
        :type store_id: str
        """
        if store_id is None:
            raise ValueError("Invalid value for `store_id`, must not be `None`")

        self._store_id = store_id

    @property
    def store_pwd(self):
        """Gets the store_pwd of this PaysafeAllOfCredentials.

        Paysafe Gateway store password.

        :return: The store_pwd of this PaysafeAllOfCredentials.
        :rtype: str
        """
        return self._store_pwd

    @store_pwd.setter
    def store_pwd(self, store_pwd):
        """Sets the store_pwd of this PaysafeAllOfCredentials.

        Paysafe Gateway store password.

        :param store_pwd: The store_pwd of this PaysafeAllOfCredentials.
        :type store_pwd: str
        """
        if store_pwd is None:
            raise ValueError("Invalid value for `store_pwd`, must not be `None`")

        self._store_pwd = store_pwd
