# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invoice_retry_schedule_instruction import InvoiceRetryScheduleInstruction
from openapi_server import util


class InvoiceAllOfRetryInstructionAttempts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_instruction: InvoiceRetryScheduleInstruction=None):
        """InvoiceAllOfRetryInstructionAttempts - a model defined in OpenAPI

        :param schedule_instruction: The schedule_instruction of this InvoiceAllOfRetryInstructionAttempts.
        """
        self.openapi_types = {
            'schedule_instruction': InvoiceRetryScheduleInstruction
        }

        self.attribute_map = {
            'schedule_instruction': 'scheduleInstruction'
        }

        self._schedule_instruction = schedule_instruction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceAllOfRetryInstructionAttempts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Invoice_allOf_retryInstruction_attempts of this InvoiceAllOfRetryInstructionAttempts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_instruction(self):
        """Gets the schedule_instruction of this InvoiceAllOfRetryInstructionAttempts.


        :return: The schedule_instruction of this InvoiceAllOfRetryInstructionAttempts.
        :rtype: InvoiceRetryScheduleInstruction
        """
        return self._schedule_instruction

    @schedule_instruction.setter
    def schedule_instruction(self, schedule_instruction):
        """Sets the schedule_instruction of this InvoiceAllOfRetryInstructionAttempts.


        :param schedule_instruction: The schedule_instruction of this InvoiceAllOfRetryInstructionAttempts.
        :type schedule_instruction: InvoiceRetryScheduleInstruction
        """
        if schedule_instruction is None:
            raise ValueError("Invalid value for `schedule_instruction`, must not be `None`")

        self._schedule_instruction = schedule_instruction
