# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transaction import Transaction
from openapi_server import util


class RetriedTransactionEmbed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retried_transaction: Transaction=None):
        """RetriedTransactionEmbed - a model defined in OpenAPI

        :param retried_transaction: The retried_transaction of this RetriedTransactionEmbed.
        """
        self.openapi_types = {
            'retried_transaction': Transaction
        }

        self.attribute_map = {
            'retried_transaction': 'retriedTransaction'
        }

        self._retried_transaction = retried_transaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetriedTransactionEmbed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetriedTransactionEmbed of this RetriedTransactionEmbed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retried_transaction(self):
        """Gets the retried_transaction of this RetriedTransactionEmbed.


        :return: The retried_transaction of this RetriedTransactionEmbed.
        :rtype: Transaction
        """
        return self._retried_transaction

    @retried_transaction.setter
    def retried_transaction(self, retried_transaction):
        """Sets the retried_transaction of this RetriedTransactionEmbed.


        :param retried_transaction: The retried_transaction of this RetriedTransactionEmbed.
        :type retried_transaction: Transaction
        """

        self._retried_transaction = retried_transaction
