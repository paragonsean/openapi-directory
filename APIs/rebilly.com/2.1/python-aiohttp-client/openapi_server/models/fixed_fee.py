# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.plan_price_formula import PlanPriceFormula
from openapi_server import util


class FixedFee(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, formula: str=None, price: float=None):
        """FixedFee - a model defined in OpenAPI

        :param formula: The formula of this FixedFee.
        :param price: The price of this FixedFee.
        """
        self.openapi_types = {
            'formula': str,
            'price': float
        }

        self.attribute_map = {
            'formula': 'formula',
            'price': 'price'
        }

        self._formula = formula
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FixedFee':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The fixed-fee of this FixedFee.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def formula(self):
        """Gets the formula of this FixedFee.

        The price formula determines what algorithm is used to calculate the invoice price based on a few factors, - the quantity in the order (which may be variable if usage pricing, otherwise determined when creating the order) - the price brackets data  To determine which formula is correct, please see the price formula documentation. 

        :return: The formula of this FixedFee.
        :rtype: str
        """
        return self._formula

    @formula.setter
    def formula(self, formula):
        """Sets the formula of this FixedFee.

        The price formula determines what algorithm is used to calculate the invoice price based on a few factors, - the quantity in the order (which may be variable if usage pricing, otherwise determined when creating the order) - the price brackets data  To determine which formula is correct, please see the price formula documentation. 

        :param formula: The formula of this FixedFee.
        :type formula: str
        """
        allowed_values = ["fixed-fee", "flat-rate", "stairstep", "tiered", "volume"]  # noqa: E501
        if formula not in allowed_values:
            raise ValueError(
                "Invalid value for `formula` ({0}), must be one of {1}"
                .format(formula, allowed_values)
            )

        self._formula = formula

    @property
    def price(self):
        """Gets the price of this FixedFee.

        For the very simple price when it's fixed and does not depend on the quantity chosen by customer.  If the price is 0, it's free. 

        :return: The price of this FixedFee.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this FixedFee.

        For the very simple price when it's fixed and does not depend on the quantity chosen by customer.  If the price is 0, it's free. 

        :param price: The price of this FixedFee.
        :type price: float
        """
        if price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")

        self._price = price
