# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transaction import Transaction
from openapi_server import util


class ParentTransactionEmbed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent_transaction: Transaction=None):
        """ParentTransactionEmbed - a model defined in OpenAPI

        :param parent_transaction: The parent_transaction of this ParentTransactionEmbed.
        """
        self.openapi_types = {
            'parent_transaction': Transaction
        }

        self.attribute_map = {
            'parent_transaction': 'parentTransaction'
        }

        self._parent_transaction = parent_transaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParentTransactionEmbed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParentTransactionEmbed of this ParentTransactionEmbed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent_transaction(self):
        """Gets the parent_transaction of this ParentTransactionEmbed.


        :return: The parent_transaction of this ParentTransactionEmbed.
        :rtype: Transaction
        """
        return self._parent_transaction

    @parent_transaction.setter
    def parent_transaction(self, parent_transaction):
        """Sets the parent_transaction of this ParentTransactionEmbed.


        :param parent_transaction: The parent_transaction of this ParentTransactionEmbed.
        :type parent_transaction: Transaction
        """

        self._parent_transaction = parent_transaction
