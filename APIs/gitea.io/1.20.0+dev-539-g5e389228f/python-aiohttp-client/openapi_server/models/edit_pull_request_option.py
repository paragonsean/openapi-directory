# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EditPullRequestOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_maintainer_edit: bool=None, assignee: str=None, assignees: List[str]=None, base: str=None, body: str=None, due_date: datetime=None, labels: List[int]=None, milestone: int=None, state: str=None, title: str=None, unset_due_date: bool=None):
        """EditPullRequestOption - a model defined in OpenAPI

        :param allow_maintainer_edit: The allow_maintainer_edit of this EditPullRequestOption.
        :param assignee: The assignee of this EditPullRequestOption.
        :param assignees: The assignees of this EditPullRequestOption.
        :param base: The base of this EditPullRequestOption.
        :param body: The body of this EditPullRequestOption.
        :param due_date: The due_date of this EditPullRequestOption.
        :param labels: The labels of this EditPullRequestOption.
        :param milestone: The milestone of this EditPullRequestOption.
        :param state: The state of this EditPullRequestOption.
        :param title: The title of this EditPullRequestOption.
        :param unset_due_date: The unset_due_date of this EditPullRequestOption.
        """
        self.openapi_types = {
            'allow_maintainer_edit': bool,
            'assignee': str,
            'assignees': List[str],
            'base': str,
            'body': str,
            'due_date': datetime,
            'labels': List[int],
            'milestone': int,
            'state': str,
            'title': str,
            'unset_due_date': bool
        }

        self.attribute_map = {
            'allow_maintainer_edit': 'allow_maintainer_edit',
            'assignee': 'assignee',
            'assignees': 'assignees',
            'base': 'base',
            'body': 'body',
            'due_date': 'due_date',
            'labels': 'labels',
            'milestone': 'milestone',
            'state': 'state',
            'title': 'title',
            'unset_due_date': 'unset_due_date'
        }

        self._allow_maintainer_edit = allow_maintainer_edit
        self._assignee = assignee
        self._assignees = assignees
        self._base = base
        self._body = body
        self._due_date = due_date
        self._labels = labels
        self._milestone = milestone
        self._state = state
        self._title = title
        self._unset_due_date = unset_due_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditPullRequestOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EditPullRequestOption of this EditPullRequestOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_maintainer_edit(self):
        """Gets the allow_maintainer_edit of this EditPullRequestOption.


        :return: The allow_maintainer_edit of this EditPullRequestOption.
        :rtype: bool
        """
        return self._allow_maintainer_edit

    @allow_maintainer_edit.setter
    def allow_maintainer_edit(self, allow_maintainer_edit):
        """Sets the allow_maintainer_edit of this EditPullRequestOption.


        :param allow_maintainer_edit: The allow_maintainer_edit of this EditPullRequestOption.
        :type allow_maintainer_edit: bool
        """

        self._allow_maintainer_edit = allow_maintainer_edit

    @property
    def assignee(self):
        """Gets the assignee of this EditPullRequestOption.


        :return: The assignee of this EditPullRequestOption.
        :rtype: str
        """
        return self._assignee

    @assignee.setter
    def assignee(self, assignee):
        """Sets the assignee of this EditPullRequestOption.


        :param assignee: The assignee of this EditPullRequestOption.
        :type assignee: str
        """

        self._assignee = assignee

    @property
    def assignees(self):
        """Gets the assignees of this EditPullRequestOption.


        :return: The assignees of this EditPullRequestOption.
        :rtype: List[str]
        """
        return self._assignees

    @assignees.setter
    def assignees(self, assignees):
        """Sets the assignees of this EditPullRequestOption.


        :param assignees: The assignees of this EditPullRequestOption.
        :type assignees: List[str]
        """

        self._assignees = assignees

    @property
    def base(self):
        """Gets the base of this EditPullRequestOption.


        :return: The base of this EditPullRequestOption.
        :rtype: str
        """
        return self._base

    @base.setter
    def base(self, base):
        """Sets the base of this EditPullRequestOption.


        :param base: The base of this EditPullRequestOption.
        :type base: str
        """

        self._base = base

    @property
    def body(self):
        """Gets the body of this EditPullRequestOption.


        :return: The body of this EditPullRequestOption.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this EditPullRequestOption.


        :param body: The body of this EditPullRequestOption.
        :type body: str
        """

        self._body = body

    @property
    def due_date(self):
        """Gets the due_date of this EditPullRequestOption.


        :return: The due_date of this EditPullRequestOption.
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this EditPullRequestOption.


        :param due_date: The due_date of this EditPullRequestOption.
        :type due_date: datetime
        """

        self._due_date = due_date

    @property
    def labels(self):
        """Gets the labels of this EditPullRequestOption.


        :return: The labels of this EditPullRequestOption.
        :rtype: List[int]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this EditPullRequestOption.


        :param labels: The labels of this EditPullRequestOption.
        :type labels: List[int]
        """

        self._labels = labels

    @property
    def milestone(self):
        """Gets the milestone of this EditPullRequestOption.


        :return: The milestone of this EditPullRequestOption.
        :rtype: int
        """
        return self._milestone

    @milestone.setter
    def milestone(self, milestone):
        """Sets the milestone of this EditPullRequestOption.


        :param milestone: The milestone of this EditPullRequestOption.
        :type milestone: int
        """

        self._milestone = milestone

    @property
    def state(self):
        """Gets the state of this EditPullRequestOption.


        :return: The state of this EditPullRequestOption.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this EditPullRequestOption.


        :param state: The state of this EditPullRequestOption.
        :type state: str
        """

        self._state = state

    @property
    def title(self):
        """Gets the title of this EditPullRequestOption.


        :return: The title of this EditPullRequestOption.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EditPullRequestOption.


        :param title: The title of this EditPullRequestOption.
        :type title: str
        """

        self._title = title

    @property
    def unset_due_date(self):
        """Gets the unset_due_date of this EditPullRequestOption.


        :return: The unset_due_date of this EditPullRequestOption.
        :rtype: bool
        """
        return self._unset_due_date

    @unset_due_date.setter
    def unset_due_date(self, unset_due_date):
        """Sets the unset_due_date of this EditPullRequestOption.


        :param unset_due_date: The unset_due_date of this EditPullRequestOption.
        :type unset_due_date: bool
        """

        self._unset_due_date = unset_due_date
