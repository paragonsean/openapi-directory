# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PushMirror(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, interval: str=None, last_error: str=None, last_update: str=None, remote_address: str=None, remote_name: str=None, repo_name: str=None, sync_on_commit: bool=None):
        """PushMirror - a model defined in OpenAPI

        :param created: The created of this PushMirror.
        :param interval: The interval of this PushMirror.
        :param last_error: The last_error of this PushMirror.
        :param last_update: The last_update of this PushMirror.
        :param remote_address: The remote_address of this PushMirror.
        :param remote_name: The remote_name of this PushMirror.
        :param repo_name: The repo_name of this PushMirror.
        :param sync_on_commit: The sync_on_commit of this PushMirror.
        """
        self.openapi_types = {
            'created': str,
            'interval': str,
            'last_error': str,
            'last_update': str,
            'remote_address': str,
            'remote_name': str,
            'repo_name': str,
            'sync_on_commit': bool
        }

        self.attribute_map = {
            'created': 'created',
            'interval': 'interval',
            'last_error': 'last_error',
            'last_update': 'last_update',
            'remote_address': 'remote_address',
            'remote_name': 'remote_name',
            'repo_name': 'repo_name',
            'sync_on_commit': 'sync_on_commit'
        }

        self._created = created
        self._interval = interval
        self._last_error = last_error
        self._last_update = last_update
        self._remote_address = remote_address
        self._remote_name = remote_name
        self._repo_name = repo_name
        self._sync_on_commit = sync_on_commit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PushMirror':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PushMirror of this PushMirror.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this PushMirror.


        :return: The created of this PushMirror.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this PushMirror.


        :param created: The created of this PushMirror.
        :type created: str
        """

        self._created = created

    @property
    def interval(self):
        """Gets the interval of this PushMirror.


        :return: The interval of this PushMirror.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this PushMirror.


        :param interval: The interval of this PushMirror.
        :type interval: str
        """

        self._interval = interval

    @property
    def last_error(self):
        """Gets the last_error of this PushMirror.


        :return: The last_error of this PushMirror.
        :rtype: str
        """
        return self._last_error

    @last_error.setter
    def last_error(self, last_error):
        """Sets the last_error of this PushMirror.


        :param last_error: The last_error of this PushMirror.
        :type last_error: str
        """

        self._last_error = last_error

    @property
    def last_update(self):
        """Gets the last_update of this PushMirror.


        :return: The last_update of this PushMirror.
        :rtype: str
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this PushMirror.


        :param last_update: The last_update of this PushMirror.
        :type last_update: str
        """

        self._last_update = last_update

    @property
    def remote_address(self):
        """Gets the remote_address of this PushMirror.


        :return: The remote_address of this PushMirror.
        :rtype: str
        """
        return self._remote_address

    @remote_address.setter
    def remote_address(self, remote_address):
        """Sets the remote_address of this PushMirror.


        :param remote_address: The remote_address of this PushMirror.
        :type remote_address: str
        """

        self._remote_address = remote_address

    @property
    def remote_name(self):
        """Gets the remote_name of this PushMirror.


        :return: The remote_name of this PushMirror.
        :rtype: str
        """
        return self._remote_name

    @remote_name.setter
    def remote_name(self, remote_name):
        """Sets the remote_name of this PushMirror.


        :param remote_name: The remote_name of this PushMirror.
        :type remote_name: str
        """

        self._remote_name = remote_name

    @property
    def repo_name(self):
        """Gets the repo_name of this PushMirror.


        :return: The repo_name of this PushMirror.
        :rtype: str
        """
        return self._repo_name

    @repo_name.setter
    def repo_name(self, repo_name):
        """Sets the repo_name of this PushMirror.


        :param repo_name: The repo_name of this PushMirror.
        :type repo_name: str
        """

        self._repo_name = repo_name

    @property
    def sync_on_commit(self):
        """Gets the sync_on_commit of this PushMirror.


        :return: The sync_on_commit of this PushMirror.
        :rtype: bool
        """
        return self._sync_on_commit

    @sync_on_commit.setter
    def sync_on_commit(self, sync_on_commit):
        """Sets the sync_on_commit of this PushMirror.


        :param sync_on_commit: The sync_on_commit of this PushMirror.
        :type sync_on_commit: bool
        """

        self._sync_on_commit = sync_on_commit
