# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user import User
from openapi_server import util


class PullReviewComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, commit_id: str=None, created_at: datetime=None, diff_hunk: str=None, html_url: str=None, id: int=None, original_commit_id: str=None, original_position: int=None, path: str=None, position: int=None, pull_request_review_id: int=None, pull_request_url: str=None, resolver: User=None, updated_at: datetime=None, user: User=None):
        """PullReviewComment - a model defined in OpenAPI

        :param body: The body of this PullReviewComment.
        :param commit_id: The commit_id of this PullReviewComment.
        :param created_at: The created_at of this PullReviewComment.
        :param diff_hunk: The diff_hunk of this PullReviewComment.
        :param html_url: The html_url of this PullReviewComment.
        :param id: The id of this PullReviewComment.
        :param original_commit_id: The original_commit_id of this PullReviewComment.
        :param original_position: The original_position of this PullReviewComment.
        :param path: The path of this PullReviewComment.
        :param position: The position of this PullReviewComment.
        :param pull_request_review_id: The pull_request_review_id of this PullReviewComment.
        :param pull_request_url: The pull_request_url of this PullReviewComment.
        :param resolver: The resolver of this PullReviewComment.
        :param updated_at: The updated_at of this PullReviewComment.
        :param user: The user of this PullReviewComment.
        """
        self.openapi_types = {
            'body': str,
            'commit_id': str,
            'created_at': datetime,
            'diff_hunk': str,
            'html_url': str,
            'id': int,
            'original_commit_id': str,
            'original_position': int,
            'path': str,
            'position': int,
            'pull_request_review_id': int,
            'pull_request_url': str,
            'resolver': User,
            'updated_at': datetime,
            'user': User
        }

        self.attribute_map = {
            'body': 'body',
            'commit_id': 'commit_id',
            'created_at': 'created_at',
            'diff_hunk': 'diff_hunk',
            'html_url': 'html_url',
            'id': 'id',
            'original_commit_id': 'original_commit_id',
            'original_position': 'original_position',
            'path': 'path',
            'position': 'position',
            'pull_request_review_id': 'pull_request_review_id',
            'pull_request_url': 'pull_request_url',
            'resolver': 'resolver',
            'updated_at': 'updated_at',
            'user': 'user'
        }

        self._body = body
        self._commit_id = commit_id
        self._created_at = created_at
        self._diff_hunk = diff_hunk
        self._html_url = html_url
        self._id = id
        self._original_commit_id = original_commit_id
        self._original_position = original_position
        self._path = path
        self._position = position
        self._pull_request_review_id = pull_request_review_id
        self._pull_request_url = pull_request_url
        self._resolver = resolver
        self._updated_at = updated_at
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullReviewComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullReviewComment of this PullReviewComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this PullReviewComment.


        :return: The body of this PullReviewComment.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this PullReviewComment.


        :param body: The body of this PullReviewComment.
        :type body: str
        """

        self._body = body

    @property
    def commit_id(self):
        """Gets the commit_id of this PullReviewComment.


        :return: The commit_id of this PullReviewComment.
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this PullReviewComment.


        :param commit_id: The commit_id of this PullReviewComment.
        :type commit_id: str
        """

        self._commit_id = commit_id

    @property
    def created_at(self):
        """Gets the created_at of this PullReviewComment.


        :return: The created_at of this PullReviewComment.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PullReviewComment.


        :param created_at: The created_at of this PullReviewComment.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def diff_hunk(self):
        """Gets the diff_hunk of this PullReviewComment.


        :return: The diff_hunk of this PullReviewComment.
        :rtype: str
        """
        return self._diff_hunk

    @diff_hunk.setter
    def diff_hunk(self, diff_hunk):
        """Sets the diff_hunk of this PullReviewComment.


        :param diff_hunk: The diff_hunk of this PullReviewComment.
        :type diff_hunk: str
        """

        self._diff_hunk = diff_hunk

    @property
    def html_url(self):
        """Gets the html_url of this PullReviewComment.


        :return: The html_url of this PullReviewComment.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this PullReviewComment.


        :param html_url: The html_url of this PullReviewComment.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def id(self):
        """Gets the id of this PullReviewComment.


        :return: The id of this PullReviewComment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PullReviewComment.


        :param id: The id of this PullReviewComment.
        :type id: int
        """

        self._id = id

    @property
    def original_commit_id(self):
        """Gets the original_commit_id of this PullReviewComment.


        :return: The original_commit_id of this PullReviewComment.
        :rtype: str
        """
        return self._original_commit_id

    @original_commit_id.setter
    def original_commit_id(self, original_commit_id):
        """Sets the original_commit_id of this PullReviewComment.


        :param original_commit_id: The original_commit_id of this PullReviewComment.
        :type original_commit_id: str
        """

        self._original_commit_id = original_commit_id

    @property
    def original_position(self):
        """Gets the original_position of this PullReviewComment.


        :return: The original_position of this PullReviewComment.
        :rtype: int
        """
        return self._original_position

    @original_position.setter
    def original_position(self, original_position):
        """Sets the original_position of this PullReviewComment.


        :param original_position: The original_position of this PullReviewComment.
        :type original_position: int
        """

        self._original_position = original_position

    @property
    def path(self):
        """Gets the path of this PullReviewComment.


        :return: The path of this PullReviewComment.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this PullReviewComment.


        :param path: The path of this PullReviewComment.
        :type path: str
        """

        self._path = path

    @property
    def position(self):
        """Gets the position of this PullReviewComment.


        :return: The position of this PullReviewComment.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PullReviewComment.


        :param position: The position of this PullReviewComment.
        :type position: int
        """

        self._position = position

    @property
    def pull_request_review_id(self):
        """Gets the pull_request_review_id of this PullReviewComment.


        :return: The pull_request_review_id of this PullReviewComment.
        :rtype: int
        """
        return self._pull_request_review_id

    @pull_request_review_id.setter
    def pull_request_review_id(self, pull_request_review_id):
        """Sets the pull_request_review_id of this PullReviewComment.


        :param pull_request_review_id: The pull_request_review_id of this PullReviewComment.
        :type pull_request_review_id: int
        """

        self._pull_request_review_id = pull_request_review_id

    @property
    def pull_request_url(self):
        """Gets the pull_request_url of this PullReviewComment.


        :return: The pull_request_url of this PullReviewComment.
        :rtype: str
        """
        return self._pull_request_url

    @pull_request_url.setter
    def pull_request_url(self, pull_request_url):
        """Sets the pull_request_url of this PullReviewComment.


        :param pull_request_url: The pull_request_url of this PullReviewComment.
        :type pull_request_url: str
        """

        self._pull_request_url = pull_request_url

    @property
    def resolver(self):
        """Gets the resolver of this PullReviewComment.


        :return: The resolver of this PullReviewComment.
        :rtype: User
        """
        return self._resolver

    @resolver.setter
    def resolver(self, resolver):
        """Sets the resolver of this PullReviewComment.


        :param resolver: The resolver of this PullReviewComment.
        :type resolver: User
        """

        self._resolver = resolver

    @property
    def updated_at(self):
        """Gets the updated_at of this PullReviewComment.


        :return: The updated_at of this PullReviewComment.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PullReviewComment.


        :param updated_at: The updated_at of this PullReviewComment.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user(self):
        """Gets the user of this PullReviewComment.


        :return: The user of this PullReviewComment.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this PullReviewComment.


        :param user: The user of this PullReviewComment.
        :type user: User
        """

        self._user = user
