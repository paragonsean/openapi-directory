# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commit_affected_files import CommitAffectedFiles
from openapi_server.models.commit_meta import CommitMeta
from openapi_server.models.commit_stats import CommitStats
from openapi_server.models.repo_commit import RepoCommit
from openapi_server.models.user import User
from openapi_server import util


class Commit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: User=None, commit: RepoCommit=None, committer: User=None, created: datetime=None, files: List[CommitAffectedFiles]=None, html_url: str=None, parents: List[CommitMeta]=None, sha: str=None, stats: CommitStats=None, url: str=None):
        """Commit - a model defined in OpenAPI

        :param author: The author of this Commit.
        :param commit: The commit of this Commit.
        :param committer: The committer of this Commit.
        :param created: The created of this Commit.
        :param files: The files of this Commit.
        :param html_url: The html_url of this Commit.
        :param parents: The parents of this Commit.
        :param sha: The sha of this Commit.
        :param stats: The stats of this Commit.
        :param url: The url of this Commit.
        """
        self.openapi_types = {
            'author': User,
            'commit': RepoCommit,
            'committer': User,
            'created': datetime,
            'files': List[CommitAffectedFiles],
            'html_url': str,
            'parents': List[CommitMeta],
            'sha': str,
            'stats': CommitStats,
            'url': str
        }

        self.attribute_map = {
            'author': 'author',
            'commit': 'commit',
            'committer': 'committer',
            'created': 'created',
            'files': 'files',
            'html_url': 'html_url',
            'parents': 'parents',
            'sha': 'sha',
            'stats': 'stats',
            'url': 'url'
        }

        self._author = author
        self._commit = commit
        self._committer = committer
        self._created = created
        self._files = files
        self._html_url = html_url
        self._parents = parents
        self._sha = sha
        self._stats = stats
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Commit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Commit of this Commit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this Commit.


        :return: The author of this Commit.
        :rtype: User
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this Commit.


        :param author: The author of this Commit.
        :type author: User
        """

        self._author = author

    @property
    def commit(self):
        """Gets the commit of this Commit.


        :return: The commit of this Commit.
        :rtype: RepoCommit
        """
        return self._commit

    @commit.setter
    def commit(self, commit):
        """Sets the commit of this Commit.


        :param commit: The commit of this Commit.
        :type commit: RepoCommit
        """

        self._commit = commit

    @property
    def committer(self):
        """Gets the committer of this Commit.


        :return: The committer of this Commit.
        :rtype: User
        """
        return self._committer

    @committer.setter
    def committer(self, committer):
        """Sets the committer of this Commit.


        :param committer: The committer of this Commit.
        :type committer: User
        """

        self._committer = committer

    @property
    def created(self):
        """Gets the created of this Commit.


        :return: The created of this Commit.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Commit.


        :param created: The created of this Commit.
        :type created: datetime
        """

        self._created = created

    @property
    def files(self):
        """Gets the files of this Commit.


        :return: The files of this Commit.
        :rtype: List[CommitAffectedFiles]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this Commit.


        :param files: The files of this Commit.
        :type files: List[CommitAffectedFiles]
        """

        self._files = files

    @property
    def html_url(self):
        """Gets the html_url of this Commit.


        :return: The html_url of this Commit.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this Commit.


        :param html_url: The html_url of this Commit.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def parents(self):
        """Gets the parents of this Commit.


        :return: The parents of this Commit.
        :rtype: List[CommitMeta]
        """
        return self._parents

    @parents.setter
    def parents(self, parents):
        """Sets the parents of this Commit.


        :param parents: The parents of this Commit.
        :type parents: List[CommitMeta]
        """

        self._parents = parents

    @property
    def sha(self):
        """Gets the sha of this Commit.


        :return: The sha of this Commit.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this Commit.


        :param sha: The sha of this Commit.
        :type sha: str
        """

        self._sha = sha

    @property
    def stats(self):
        """Gets the stats of this Commit.


        :return: The stats of this Commit.
        :rtype: CommitStats
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this Commit.


        :param stats: The stats of this Commit.
        :type stats: CommitStats
        """

        self._stats = stats

    @property
    def url(self):
        """Gets the url of this Commit.


        :return: The url of this Commit.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Commit.


        :param url: The url of this Commit.
        :type url: str
        """

        self._url = url
