# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team import Team
from openapi_server.models.user import User
from openapi_server import util


class PullReview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, comments_count: int=None, commit_id: str=None, dismissed: bool=None, html_url: str=None, id: int=None, official: bool=None, pull_request_url: str=None, stale: bool=None, state: str=None, submitted_at: datetime=None, team: Team=None, updated_at: datetime=None, user: User=None):
        """PullReview - a model defined in OpenAPI

        :param body: The body of this PullReview.
        :param comments_count: The comments_count of this PullReview.
        :param commit_id: The commit_id of this PullReview.
        :param dismissed: The dismissed of this PullReview.
        :param html_url: The html_url of this PullReview.
        :param id: The id of this PullReview.
        :param official: The official of this PullReview.
        :param pull_request_url: The pull_request_url of this PullReview.
        :param stale: The stale of this PullReview.
        :param state: The state of this PullReview.
        :param submitted_at: The submitted_at of this PullReview.
        :param team: The team of this PullReview.
        :param updated_at: The updated_at of this PullReview.
        :param user: The user of this PullReview.
        """
        self.openapi_types = {
            'body': str,
            'comments_count': int,
            'commit_id': str,
            'dismissed': bool,
            'html_url': str,
            'id': int,
            'official': bool,
            'pull_request_url': str,
            'stale': bool,
            'state': str,
            'submitted_at': datetime,
            'team': Team,
            'updated_at': datetime,
            'user': User
        }

        self.attribute_map = {
            'body': 'body',
            'comments_count': 'comments_count',
            'commit_id': 'commit_id',
            'dismissed': 'dismissed',
            'html_url': 'html_url',
            'id': 'id',
            'official': 'official',
            'pull_request_url': 'pull_request_url',
            'stale': 'stale',
            'state': 'state',
            'submitted_at': 'submitted_at',
            'team': 'team',
            'updated_at': 'updated_at',
            'user': 'user'
        }

        self._body = body
        self._comments_count = comments_count
        self._commit_id = commit_id
        self._dismissed = dismissed
        self._html_url = html_url
        self._id = id
        self._official = official
        self._pull_request_url = pull_request_url
        self._stale = stale
        self._state = state
        self._submitted_at = submitted_at
        self._team = team
        self._updated_at = updated_at
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullReview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullReview of this PullReview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this PullReview.


        :return: The body of this PullReview.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this PullReview.


        :param body: The body of this PullReview.
        :type body: str
        """

        self._body = body

    @property
    def comments_count(self):
        """Gets the comments_count of this PullReview.


        :return: The comments_count of this PullReview.
        :rtype: int
        """
        return self._comments_count

    @comments_count.setter
    def comments_count(self, comments_count):
        """Sets the comments_count of this PullReview.


        :param comments_count: The comments_count of this PullReview.
        :type comments_count: int
        """

        self._comments_count = comments_count

    @property
    def commit_id(self):
        """Gets the commit_id of this PullReview.


        :return: The commit_id of this PullReview.
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this PullReview.


        :param commit_id: The commit_id of this PullReview.
        :type commit_id: str
        """

        self._commit_id = commit_id

    @property
    def dismissed(self):
        """Gets the dismissed of this PullReview.


        :return: The dismissed of this PullReview.
        :rtype: bool
        """
        return self._dismissed

    @dismissed.setter
    def dismissed(self, dismissed):
        """Sets the dismissed of this PullReview.


        :param dismissed: The dismissed of this PullReview.
        :type dismissed: bool
        """

        self._dismissed = dismissed

    @property
    def html_url(self):
        """Gets the html_url of this PullReview.


        :return: The html_url of this PullReview.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this PullReview.


        :param html_url: The html_url of this PullReview.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def id(self):
        """Gets the id of this PullReview.


        :return: The id of this PullReview.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PullReview.


        :param id: The id of this PullReview.
        :type id: int
        """

        self._id = id

    @property
    def official(self):
        """Gets the official of this PullReview.


        :return: The official of this PullReview.
        :rtype: bool
        """
        return self._official

    @official.setter
    def official(self, official):
        """Sets the official of this PullReview.


        :param official: The official of this PullReview.
        :type official: bool
        """

        self._official = official

    @property
    def pull_request_url(self):
        """Gets the pull_request_url of this PullReview.


        :return: The pull_request_url of this PullReview.
        :rtype: str
        """
        return self._pull_request_url

    @pull_request_url.setter
    def pull_request_url(self, pull_request_url):
        """Sets the pull_request_url of this PullReview.


        :param pull_request_url: The pull_request_url of this PullReview.
        :type pull_request_url: str
        """

        self._pull_request_url = pull_request_url

    @property
    def stale(self):
        """Gets the stale of this PullReview.


        :return: The stale of this PullReview.
        :rtype: bool
        """
        return self._stale

    @stale.setter
    def stale(self, stale):
        """Sets the stale of this PullReview.


        :param stale: The stale of this PullReview.
        :type stale: bool
        """

        self._stale = stale

    @property
    def state(self):
        """Gets the state of this PullReview.

        ReviewStateType review state type

        :return: The state of this PullReview.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PullReview.

        ReviewStateType review state type

        :param state: The state of this PullReview.
        :type state: str
        """

        self._state = state

    @property
    def submitted_at(self):
        """Gets the submitted_at of this PullReview.


        :return: The submitted_at of this PullReview.
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this PullReview.


        :param submitted_at: The submitted_at of this PullReview.
        :type submitted_at: datetime
        """

        self._submitted_at = submitted_at

    @property
    def team(self):
        """Gets the team of this PullReview.


        :return: The team of this PullReview.
        :rtype: Team
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PullReview.


        :param team: The team of this PullReview.
        :type team: Team
        """

        self._team = team

    @property
    def updated_at(self):
        """Gets the updated_at of this PullReview.


        :return: The updated_at of this PullReview.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PullReview.


        :param updated_at: The updated_at of this PullReview.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user(self):
        """Gets the user of this PullReview.


        :return: The user of this PullReview.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this PullReview.


        :param user: The user of this PullReview.
        :type user: User
        """

        self._user = user
