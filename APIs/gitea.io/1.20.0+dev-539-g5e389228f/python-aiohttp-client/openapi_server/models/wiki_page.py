# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wiki_commit import WikiCommit
from openapi_server import util


class WikiPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit_count: int=None, content_base64: str=None, footer: str=None, html_url: str=None, last_commit: WikiCommit=None, sidebar: str=None, sub_url: str=None, title: str=None):
        """WikiPage - a model defined in OpenAPI

        :param commit_count: The commit_count of this WikiPage.
        :param content_base64: The content_base64 of this WikiPage.
        :param footer: The footer of this WikiPage.
        :param html_url: The html_url of this WikiPage.
        :param last_commit: The last_commit of this WikiPage.
        :param sidebar: The sidebar of this WikiPage.
        :param sub_url: The sub_url of this WikiPage.
        :param title: The title of this WikiPage.
        """
        self.openapi_types = {
            'commit_count': int,
            'content_base64': str,
            'footer': str,
            'html_url': str,
            'last_commit': WikiCommit,
            'sidebar': str,
            'sub_url': str,
            'title': str
        }

        self.attribute_map = {
            'commit_count': 'commit_count',
            'content_base64': 'content_base64',
            'footer': 'footer',
            'html_url': 'html_url',
            'last_commit': 'last_commit',
            'sidebar': 'sidebar',
            'sub_url': 'sub_url',
            'title': 'title'
        }

        self._commit_count = commit_count
        self._content_base64 = content_base64
        self._footer = footer
        self._html_url = html_url
        self._last_commit = last_commit
        self._sidebar = sidebar
        self._sub_url = sub_url
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WikiPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WikiPage of this WikiPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit_count(self):
        """Gets the commit_count of this WikiPage.


        :return: The commit_count of this WikiPage.
        :rtype: int
        """
        return self._commit_count

    @commit_count.setter
    def commit_count(self, commit_count):
        """Sets the commit_count of this WikiPage.


        :param commit_count: The commit_count of this WikiPage.
        :type commit_count: int
        """

        self._commit_count = commit_count

    @property
    def content_base64(self):
        """Gets the content_base64 of this WikiPage.

        Page content, base64 encoded

        :return: The content_base64 of this WikiPage.
        :rtype: str
        """
        return self._content_base64

    @content_base64.setter
    def content_base64(self, content_base64):
        """Sets the content_base64 of this WikiPage.

        Page content, base64 encoded

        :param content_base64: The content_base64 of this WikiPage.
        :type content_base64: str
        """

        self._content_base64 = content_base64

    @property
    def footer(self):
        """Gets the footer of this WikiPage.


        :return: The footer of this WikiPage.
        :rtype: str
        """
        return self._footer

    @footer.setter
    def footer(self, footer):
        """Sets the footer of this WikiPage.


        :param footer: The footer of this WikiPage.
        :type footer: str
        """

        self._footer = footer

    @property
    def html_url(self):
        """Gets the html_url of this WikiPage.


        :return: The html_url of this WikiPage.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this WikiPage.


        :param html_url: The html_url of this WikiPage.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def last_commit(self):
        """Gets the last_commit of this WikiPage.


        :return: The last_commit of this WikiPage.
        :rtype: WikiCommit
        """
        return self._last_commit

    @last_commit.setter
    def last_commit(self, last_commit):
        """Sets the last_commit of this WikiPage.


        :param last_commit: The last_commit of this WikiPage.
        :type last_commit: WikiCommit
        """

        self._last_commit = last_commit

    @property
    def sidebar(self):
        """Gets the sidebar of this WikiPage.


        :return: The sidebar of this WikiPage.
        :rtype: str
        """
        return self._sidebar

    @sidebar.setter
    def sidebar(self, sidebar):
        """Sets the sidebar of this WikiPage.


        :param sidebar: The sidebar of this WikiPage.
        :type sidebar: str
        """

        self._sidebar = sidebar

    @property
    def sub_url(self):
        """Gets the sub_url of this WikiPage.


        :return: The sub_url of this WikiPage.
        :rtype: str
        """
        return self._sub_url

    @sub_url.setter
    def sub_url(self, sub_url):
        """Sets the sub_url of this WikiPage.


        :param sub_url: The sub_url of this WikiPage.
        :type sub_url: str
        """

        self._sub_url = sub_url

    @property
    def title(self):
        """Gets the title of this WikiPage.


        :return: The title of this WikiPage.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this WikiPage.


        :param title: The title of this WikiPage.
        :type title: str
        """

        self._title = title
