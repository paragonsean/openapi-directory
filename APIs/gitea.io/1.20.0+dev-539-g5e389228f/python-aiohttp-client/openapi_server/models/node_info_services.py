# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeInfoServices(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inbound: List[str]=None, outbound: List[str]=None):
        """NodeInfoServices - a model defined in OpenAPI

        :param inbound: The inbound of this NodeInfoServices.
        :param outbound: The outbound of this NodeInfoServices.
        """
        self.openapi_types = {
            'inbound': List[str],
            'outbound': List[str]
        }

        self.attribute_map = {
            'inbound': 'inbound',
            'outbound': 'outbound'
        }

        self._inbound = inbound
        self._outbound = outbound

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeInfoServices':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeInfoServices of this NodeInfoServices.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound(self):
        """Gets the inbound of this NodeInfoServices.


        :return: The inbound of this NodeInfoServices.
        :rtype: List[str]
        """
        return self._inbound

    @inbound.setter
    def inbound(self, inbound):
        """Sets the inbound of this NodeInfoServices.


        :param inbound: The inbound of this NodeInfoServices.
        :type inbound: List[str]
        """

        self._inbound = inbound

    @property
    def outbound(self):
        """Gets the outbound of this NodeInfoServices.


        :return: The outbound of this NodeInfoServices.
        :rtype: List[str]
        """
        return self._outbound

    @outbound.setter
    def outbound(self, outbound):
        """Sets the outbound of this NodeInfoServices.


        :param outbound: The outbound of this NodeInfoServices.
        :type outbound: List[str]
        """

        self._outbound = outbound
