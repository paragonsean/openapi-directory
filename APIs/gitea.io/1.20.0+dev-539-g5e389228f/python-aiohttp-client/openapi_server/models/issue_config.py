# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.issue_config_contact_link import IssueConfigContactLink
from openapi_server import util


class IssueConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blank_issues_enabled: bool=None, contact_links: List[IssueConfigContactLink]=None):
        """IssueConfig - a model defined in OpenAPI

        :param blank_issues_enabled: The blank_issues_enabled of this IssueConfig.
        :param contact_links: The contact_links of this IssueConfig.
        """
        self.openapi_types = {
            'blank_issues_enabled': bool,
            'contact_links': List[IssueConfigContactLink]
        }

        self.attribute_map = {
            'blank_issues_enabled': 'blank_issues_enabled',
            'contact_links': 'contact_links'
        }

        self._blank_issues_enabled = blank_issues_enabled
        self._contact_links = contact_links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueConfig of this IssueConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blank_issues_enabled(self):
        """Gets the blank_issues_enabled of this IssueConfig.


        :return: The blank_issues_enabled of this IssueConfig.
        :rtype: bool
        """
        return self._blank_issues_enabled

    @blank_issues_enabled.setter
    def blank_issues_enabled(self, blank_issues_enabled):
        """Sets the blank_issues_enabled of this IssueConfig.


        :param blank_issues_enabled: The blank_issues_enabled of this IssueConfig.
        :type blank_issues_enabled: bool
        """

        self._blank_issues_enabled = blank_issues_enabled

    @property
    def contact_links(self):
        """Gets the contact_links of this IssueConfig.


        :return: The contact_links of this IssueConfig.
        :rtype: List[IssueConfigContactLink]
        """
        return self._contact_links

    @contact_links.setter
    def contact_links(self, contact_links):
        """Sets the contact_links of this IssueConfig.


        :param contact_links: The contact_links of this IssueConfig.
        :type contact_links: List[IssueConfigContactLink]
        """

        self._contact_links = contact_links
