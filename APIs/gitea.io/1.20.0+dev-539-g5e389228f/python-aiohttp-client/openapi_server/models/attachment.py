# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, browser_download_url: str=None, created_at: datetime=None, download_count: int=None, id: int=None, name: str=None, size: int=None, uuid: str=None):
        """Attachment - a model defined in OpenAPI

        :param browser_download_url: The browser_download_url of this Attachment.
        :param created_at: The created_at of this Attachment.
        :param download_count: The download_count of this Attachment.
        :param id: The id of this Attachment.
        :param name: The name of this Attachment.
        :param size: The size of this Attachment.
        :param uuid: The uuid of this Attachment.
        """
        self.openapi_types = {
            'browser_download_url': str,
            'created_at': datetime,
            'download_count': int,
            'id': int,
            'name': str,
            'size': int,
            'uuid': str
        }

        self.attribute_map = {
            'browser_download_url': 'browser_download_url',
            'created_at': 'created_at',
            'download_count': 'download_count',
            'id': 'id',
            'name': 'name',
            'size': 'size',
            'uuid': 'uuid'
        }

        self._browser_download_url = browser_download_url
        self._created_at = created_at
        self._download_count = download_count
        self._id = id
        self._name = name
        self._size = size
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attachment of this Attachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def browser_download_url(self):
        """Gets the browser_download_url of this Attachment.


        :return: The browser_download_url of this Attachment.
        :rtype: str
        """
        return self._browser_download_url

    @browser_download_url.setter
    def browser_download_url(self, browser_download_url):
        """Sets the browser_download_url of this Attachment.


        :param browser_download_url: The browser_download_url of this Attachment.
        :type browser_download_url: str
        """

        self._browser_download_url = browser_download_url

    @property
    def created_at(self):
        """Gets the created_at of this Attachment.


        :return: The created_at of this Attachment.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Attachment.


        :param created_at: The created_at of this Attachment.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def download_count(self):
        """Gets the download_count of this Attachment.


        :return: The download_count of this Attachment.
        :rtype: int
        """
        return self._download_count

    @download_count.setter
    def download_count(self, download_count):
        """Sets the download_count of this Attachment.


        :param download_count: The download_count of this Attachment.
        :type download_count: int
        """

        self._download_count = download_count

    @property
    def id(self):
        """Gets the id of this Attachment.


        :return: The id of this Attachment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Attachment.


        :param id: The id of this Attachment.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Attachment.


        :return: The name of this Attachment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Attachment.


        :param name: The name of this Attachment.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this Attachment.


        :return: The size of this Attachment.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Attachment.


        :param size: The size of this Attachment.
        :type size: int
        """

        self._size = size

    @property
    def uuid(self):
        """Gets the uuid of this Attachment.


        :return: The uuid of this Attachment.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Attachment.


        :param uuid: The uuid of this Attachment.
        :type uuid: str
        """

        self._uuid = uuid
