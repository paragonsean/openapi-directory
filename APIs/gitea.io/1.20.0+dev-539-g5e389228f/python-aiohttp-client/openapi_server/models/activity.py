# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.comment import Comment
from openapi_server.models.repository import Repository
from openapi_server.models.user import User
from openapi_server import util


class Activity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, act_user: User=None, act_user_id: int=None, comment: Comment=None, comment_id: int=None, content: str=None, created: datetime=None, id: int=None, is_private: bool=None, op_type: str=None, ref_name: str=None, repo: Repository=None, repo_id: int=None, user_id: int=None):
        """Activity - a model defined in OpenAPI

        :param act_user: The act_user of this Activity.
        :param act_user_id: The act_user_id of this Activity.
        :param comment: The comment of this Activity.
        :param comment_id: The comment_id of this Activity.
        :param content: The content of this Activity.
        :param created: The created of this Activity.
        :param id: The id of this Activity.
        :param is_private: The is_private of this Activity.
        :param op_type: The op_type of this Activity.
        :param ref_name: The ref_name of this Activity.
        :param repo: The repo of this Activity.
        :param repo_id: The repo_id of this Activity.
        :param user_id: The user_id of this Activity.
        """
        self.openapi_types = {
            'act_user': User,
            'act_user_id': int,
            'comment': Comment,
            'comment_id': int,
            'content': str,
            'created': datetime,
            'id': int,
            'is_private': bool,
            'op_type': str,
            'ref_name': str,
            'repo': Repository,
            'repo_id': int,
            'user_id': int
        }

        self.attribute_map = {
            'act_user': 'act_user',
            'act_user_id': 'act_user_id',
            'comment': 'comment',
            'comment_id': 'comment_id',
            'content': 'content',
            'created': 'created',
            'id': 'id',
            'is_private': 'is_private',
            'op_type': 'op_type',
            'ref_name': 'ref_name',
            'repo': 'repo',
            'repo_id': 'repo_id',
            'user_id': 'user_id'
        }

        self._act_user = act_user
        self._act_user_id = act_user_id
        self._comment = comment
        self._comment_id = comment_id
        self._content = content
        self._created = created
        self._id = id
        self._is_private = is_private
        self._op_type = op_type
        self._ref_name = ref_name
        self._repo = repo
        self._repo_id = repo_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Activity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity of this Activity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def act_user(self):
        """Gets the act_user of this Activity.


        :return: The act_user of this Activity.
        :rtype: User
        """
        return self._act_user

    @act_user.setter
    def act_user(self, act_user):
        """Sets the act_user of this Activity.


        :param act_user: The act_user of this Activity.
        :type act_user: User
        """

        self._act_user = act_user

    @property
    def act_user_id(self):
        """Gets the act_user_id of this Activity.


        :return: The act_user_id of this Activity.
        :rtype: int
        """
        return self._act_user_id

    @act_user_id.setter
    def act_user_id(self, act_user_id):
        """Sets the act_user_id of this Activity.


        :param act_user_id: The act_user_id of this Activity.
        :type act_user_id: int
        """

        self._act_user_id = act_user_id

    @property
    def comment(self):
        """Gets the comment of this Activity.


        :return: The comment of this Activity.
        :rtype: Comment
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Activity.


        :param comment: The comment of this Activity.
        :type comment: Comment
        """

        self._comment = comment

    @property
    def comment_id(self):
        """Gets the comment_id of this Activity.


        :return: The comment_id of this Activity.
        :rtype: int
        """
        return self._comment_id

    @comment_id.setter
    def comment_id(self, comment_id):
        """Sets the comment_id of this Activity.


        :param comment_id: The comment_id of this Activity.
        :type comment_id: int
        """

        self._comment_id = comment_id

    @property
    def content(self):
        """Gets the content of this Activity.


        :return: The content of this Activity.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Activity.


        :param content: The content of this Activity.
        :type content: str
        """

        self._content = content

    @property
    def created(self):
        """Gets the created of this Activity.


        :return: The created of this Activity.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Activity.


        :param created: The created of this Activity.
        :type created: datetime
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this Activity.


        :return: The id of this Activity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Activity.


        :param id: The id of this Activity.
        :type id: int
        """

        self._id = id

    @property
    def is_private(self):
        """Gets the is_private of this Activity.


        :return: The is_private of this Activity.
        :rtype: bool
        """
        return self._is_private

    @is_private.setter
    def is_private(self, is_private):
        """Sets the is_private of this Activity.


        :param is_private: The is_private of this Activity.
        :type is_private: bool
        """

        self._is_private = is_private

    @property
    def op_type(self):
        """Gets the op_type of this Activity.


        :return: The op_type of this Activity.
        :rtype: str
        """
        return self._op_type

    @op_type.setter
    def op_type(self, op_type):
        """Sets the op_type of this Activity.


        :param op_type: The op_type of this Activity.
        :type op_type: str
        """

        self._op_type = op_type

    @property
    def ref_name(self):
        """Gets the ref_name of this Activity.


        :return: The ref_name of this Activity.
        :rtype: str
        """
        return self._ref_name

    @ref_name.setter
    def ref_name(self, ref_name):
        """Sets the ref_name of this Activity.


        :param ref_name: The ref_name of this Activity.
        :type ref_name: str
        """

        self._ref_name = ref_name

    @property
    def repo(self):
        """Gets the repo of this Activity.


        :return: The repo of this Activity.
        :rtype: Repository
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this Activity.


        :param repo: The repo of this Activity.
        :type repo: Repository
        """

        self._repo = repo

    @property
    def repo_id(self):
        """Gets the repo_id of this Activity.


        :return: The repo_id of this Activity.
        :rtype: int
        """
        return self._repo_id

    @repo_id.setter
    def repo_id(self, repo_id):
        """Sets the repo_id of this Activity.


        :param repo_id: The repo_id of this Activity.
        :type repo_id: int
        """

        self._repo_id = repo_id

    @property
    def user_id(self):
        """Gets the user_id of this Activity.


        :return: The user_id of this Activity.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Activity.


        :param user_id: The user_id of this Activity.
        :type user_id: int
        """

        self._user_id = user_id
