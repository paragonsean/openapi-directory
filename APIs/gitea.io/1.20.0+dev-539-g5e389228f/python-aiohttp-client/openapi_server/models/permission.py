# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Permission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin: bool=None, pull: bool=None, push: bool=None):
        """Permission - a model defined in OpenAPI

        :param admin: The admin of this Permission.
        :param pull: The pull of this Permission.
        :param push: The push of this Permission.
        """
        self.openapi_types = {
            'admin': bool,
            'pull': bool,
            'push': bool
        }

        self.attribute_map = {
            'admin': 'admin',
            'pull': 'pull',
            'push': 'push'
        }

        self._admin = admin
        self._pull = pull
        self._push = push

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Permission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Permission of this Permission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin(self):
        """Gets the admin of this Permission.


        :return: The admin of this Permission.
        :rtype: bool
        """
        return self._admin

    @admin.setter
    def admin(self, admin):
        """Sets the admin of this Permission.


        :param admin: The admin of this Permission.
        :type admin: bool
        """

        self._admin = admin

    @property
    def pull(self):
        """Gets the pull of this Permission.


        :return: The pull of this Permission.
        :rtype: bool
        """
        return self._pull

    @pull.setter
    def pull(self, pull):
        """Sets the pull of this Permission.


        :param pull: The pull of this Permission.
        :type pull: bool
        """

        self._pull = pull

    @property
    def push(self):
        """Gets the push of this Permission.


        :return: The push of this Permission.
        :rtype: bool
        """
        return self._push

    @push.setter
    def push(self, push):
        """Sets the push of this Permission.


        :param push: The push of this Permission.
        :type push: bool
        """

        self._push = push
