# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateGPGKeyOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, armored_public_key: str=None, armored_signature: str=None):
        """CreateGPGKeyOption - a model defined in OpenAPI

        :param armored_public_key: The armored_public_key of this CreateGPGKeyOption.
        :param armored_signature: The armored_signature of this CreateGPGKeyOption.
        """
        self.openapi_types = {
            'armored_public_key': str,
            'armored_signature': str
        }

        self.attribute_map = {
            'armored_public_key': 'armored_public_key',
            'armored_signature': 'armored_signature'
        }

        self._armored_public_key = armored_public_key
        self._armored_signature = armored_signature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGPGKeyOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGPGKeyOption of this CreateGPGKeyOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def armored_public_key(self):
        """Gets the armored_public_key of this CreateGPGKeyOption.

        An armored GPG key to add

        :return: The armored_public_key of this CreateGPGKeyOption.
        :rtype: str
        """
        return self._armored_public_key

    @armored_public_key.setter
    def armored_public_key(self, armored_public_key):
        """Sets the armored_public_key of this CreateGPGKeyOption.

        An armored GPG key to add

        :param armored_public_key: The armored_public_key of this CreateGPGKeyOption.
        :type armored_public_key: str
        """
        if armored_public_key is None:
            raise ValueError("Invalid value for `armored_public_key`, must not be `None`")

        self._armored_public_key = armored_public_key

    @property
    def armored_signature(self):
        """Gets the armored_signature of this CreateGPGKeyOption.


        :return: The armored_signature of this CreateGPGKeyOption.
        :rtype: str
        """
        return self._armored_signature

    @armored_signature.setter
    def armored_signature(self, armored_signature):
        """Sets the armored_signature of this CreateGPGKeyOption.


        :param armored_signature: The armored_signature of this CreateGPGKeyOption.
        :type armored_signature: str
        """

        self._armored_signature = armored_signature
