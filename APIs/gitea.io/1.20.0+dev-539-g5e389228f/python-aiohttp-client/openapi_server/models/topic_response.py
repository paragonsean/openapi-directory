# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TopicResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, id: int=None, repo_count: int=None, topic_name: str=None, updated: datetime=None):
        """TopicResponse - a model defined in OpenAPI

        :param created: The created of this TopicResponse.
        :param id: The id of this TopicResponse.
        :param repo_count: The repo_count of this TopicResponse.
        :param topic_name: The topic_name of this TopicResponse.
        :param updated: The updated of this TopicResponse.
        """
        self.openapi_types = {
            'created': datetime,
            'id': int,
            'repo_count': int,
            'topic_name': str,
            'updated': datetime
        }

        self.attribute_map = {
            'created': 'created',
            'id': 'id',
            'repo_count': 'repo_count',
            'topic_name': 'topic_name',
            'updated': 'updated'
        }

        self._created = created
        self._id = id
        self._repo_count = repo_count
        self._topic_name = topic_name
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TopicResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TopicResponse of this TopicResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this TopicResponse.


        :return: The created of this TopicResponse.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this TopicResponse.


        :param created: The created of this TopicResponse.
        :type created: datetime
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this TopicResponse.


        :return: The id of this TopicResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TopicResponse.


        :param id: The id of this TopicResponse.
        :type id: int
        """

        self._id = id

    @property
    def repo_count(self):
        """Gets the repo_count of this TopicResponse.


        :return: The repo_count of this TopicResponse.
        :rtype: int
        """
        return self._repo_count

    @repo_count.setter
    def repo_count(self, repo_count):
        """Sets the repo_count of this TopicResponse.


        :param repo_count: The repo_count of this TopicResponse.
        :type repo_count: int
        """

        self._repo_count = repo_count

    @property
    def topic_name(self):
        """Gets the topic_name of this TopicResponse.


        :return: The topic_name of this TopicResponse.
        :rtype: str
        """
        return self._topic_name

    @topic_name.setter
    def topic_name(self, topic_name):
        """Sets the topic_name of this TopicResponse.


        :param topic_name: The topic_name of this TopicResponse.
        :type topic_name: str
        """

        self._topic_name = topic_name

    @property
    def updated(self):
        """Gets the updated of this TopicResponse.


        :return: The updated of this TopicResponse.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this TopicResponse.


        :param updated: The updated of this TopicResponse.
        :type updated: datetime
        """

        self._updated = updated
