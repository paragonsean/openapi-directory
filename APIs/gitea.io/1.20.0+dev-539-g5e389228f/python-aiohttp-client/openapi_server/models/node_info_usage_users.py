# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeInfoUsageUsers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_halfyear: int=None, active_month: int=None, total: int=None):
        """NodeInfoUsageUsers - a model defined in OpenAPI

        :param active_halfyear: The active_halfyear of this NodeInfoUsageUsers.
        :param active_month: The active_month of this NodeInfoUsageUsers.
        :param total: The total of this NodeInfoUsageUsers.
        """
        self.openapi_types = {
            'active_halfyear': int,
            'active_month': int,
            'total': int
        }

        self.attribute_map = {
            'active_halfyear': 'activeHalfyear',
            'active_month': 'activeMonth',
            'total': 'total'
        }

        self._active_halfyear = active_halfyear
        self._active_month = active_month
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeInfoUsageUsers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeInfoUsageUsers of this NodeInfoUsageUsers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_halfyear(self):
        """Gets the active_halfyear of this NodeInfoUsageUsers.


        :return: The active_halfyear of this NodeInfoUsageUsers.
        :rtype: int
        """
        return self._active_halfyear

    @active_halfyear.setter
    def active_halfyear(self, active_halfyear):
        """Sets the active_halfyear of this NodeInfoUsageUsers.


        :param active_halfyear: The active_halfyear of this NodeInfoUsageUsers.
        :type active_halfyear: int
        """

        self._active_halfyear = active_halfyear

    @property
    def active_month(self):
        """Gets the active_month of this NodeInfoUsageUsers.


        :return: The active_month of this NodeInfoUsageUsers.
        :rtype: int
        """
        return self._active_month

    @active_month.setter
    def active_month(self, active_month):
        """Sets the active_month of this NodeInfoUsageUsers.


        :param active_month: The active_month of this NodeInfoUsageUsers.
        :type active_month: int
        """

        self._active_month = active_month

    @property
    def total(self):
        """Gets the total of this NodeInfoUsageUsers.


        :return: The total of this NodeInfoUsageUsers.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this NodeInfoUsageUsers.


        :param total: The total of this NodeInfoUsageUsers.
        :type total: int
        """

        self._total = total
