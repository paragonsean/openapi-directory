# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Email(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, primary: bool=None, user_id: int=None, username: str=None, verified: bool=None):
        """Email - a model defined in OpenAPI

        :param email: The email of this Email.
        :param primary: The primary of this Email.
        :param user_id: The user_id of this Email.
        :param username: The username of this Email.
        :param verified: The verified of this Email.
        """
        self.openapi_types = {
            'email': str,
            'primary': bool,
            'user_id': int,
            'username': str,
            'verified': bool
        }

        self.attribute_map = {
            'email': 'email',
            'primary': 'primary',
            'user_id': 'user_id',
            'username': 'username',
            'verified': 'verified'
        }

        self._email = email
        self._primary = primary
        self._user_id = user_id
        self._username = username
        self._verified = verified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Email':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Email of this Email.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this Email.


        :return: The email of this Email.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Email.


        :param email: The email of this Email.
        :type email: str
        """

        self._email = email

    @property
    def primary(self):
        """Gets the primary of this Email.


        :return: The primary of this Email.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this Email.


        :param primary: The primary of this Email.
        :type primary: bool
        """

        self._primary = primary

    @property
    def user_id(self):
        """Gets the user_id of this Email.


        :return: The user_id of this Email.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Email.


        :param user_id: The user_id of this Email.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def username(self):
        """Gets the username of this Email.


        :return: The username of this Email.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Email.


        :param username: The username of this Email.
        :type username: str
        """

        self._username = username

    @property
    def verified(self):
        """Gets the verified of this Email.


        :return: The verified of this Email.
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this Email.


        :param verified: The verified of this Email.
        :type verified: bool
        """

        self._verified = verified
