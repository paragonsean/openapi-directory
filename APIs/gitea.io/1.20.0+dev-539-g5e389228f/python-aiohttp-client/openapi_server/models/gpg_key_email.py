# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GPGKeyEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, verified: bool=None):
        """GPGKeyEmail - a model defined in OpenAPI

        :param email: The email of this GPGKeyEmail.
        :param verified: The verified of this GPGKeyEmail.
        """
        self.openapi_types = {
            'email': str,
            'verified': bool
        }

        self.attribute_map = {
            'email': 'email',
            'verified': 'verified'
        }

        self._email = email
        self._verified = verified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GPGKeyEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GPGKeyEmail of this GPGKeyEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this GPGKeyEmail.


        :return: The email of this GPGKeyEmail.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GPGKeyEmail.


        :param email: The email of this GPGKeyEmail.
        :type email: str
        """

        self._email = email

    @property
    def verified(self):
        """Gets the verified of this GPGKeyEmail.


        :return: The verified of this GPGKeyEmail.
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this GPGKeyEmail.


        :param verified: The verified of this GPGKeyEmail.
        :type verified: bool
        """

        self._verified = verified
