# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateBranchProtectionOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approvals_whitelist_teams: List[str]=None, approvals_whitelist_username: List[str]=None, block_on_official_review_requests: bool=None, block_on_outdated_branch: bool=None, block_on_rejected_reviews: bool=None, branch_name: str=None, dismiss_stale_approvals: bool=None, enable_approvals_whitelist: bool=None, enable_merge_whitelist: bool=None, enable_push: bool=None, enable_push_whitelist: bool=None, enable_status_check: bool=None, merge_whitelist_teams: List[str]=None, merge_whitelist_usernames: List[str]=None, protected_file_patterns: str=None, push_whitelist_deploy_keys: bool=None, push_whitelist_teams: List[str]=None, push_whitelist_usernames: List[str]=None, require_signed_commits: bool=None, required_approvals: int=None, rule_name: str=None, status_check_contexts: List[str]=None, unprotected_file_patterns: str=None):
        """CreateBranchProtectionOption - a model defined in OpenAPI

        :param approvals_whitelist_teams: The approvals_whitelist_teams of this CreateBranchProtectionOption.
        :param approvals_whitelist_username: The approvals_whitelist_username of this CreateBranchProtectionOption.
        :param block_on_official_review_requests: The block_on_official_review_requests of this CreateBranchProtectionOption.
        :param block_on_outdated_branch: The block_on_outdated_branch of this CreateBranchProtectionOption.
        :param block_on_rejected_reviews: The block_on_rejected_reviews of this CreateBranchProtectionOption.
        :param branch_name: The branch_name of this CreateBranchProtectionOption.
        :param dismiss_stale_approvals: The dismiss_stale_approvals of this CreateBranchProtectionOption.
        :param enable_approvals_whitelist: The enable_approvals_whitelist of this CreateBranchProtectionOption.
        :param enable_merge_whitelist: The enable_merge_whitelist of this CreateBranchProtectionOption.
        :param enable_push: The enable_push of this CreateBranchProtectionOption.
        :param enable_push_whitelist: The enable_push_whitelist of this CreateBranchProtectionOption.
        :param enable_status_check: The enable_status_check of this CreateBranchProtectionOption.
        :param merge_whitelist_teams: The merge_whitelist_teams of this CreateBranchProtectionOption.
        :param merge_whitelist_usernames: The merge_whitelist_usernames of this CreateBranchProtectionOption.
        :param protected_file_patterns: The protected_file_patterns of this CreateBranchProtectionOption.
        :param push_whitelist_deploy_keys: The push_whitelist_deploy_keys of this CreateBranchProtectionOption.
        :param push_whitelist_teams: The push_whitelist_teams of this CreateBranchProtectionOption.
        :param push_whitelist_usernames: The push_whitelist_usernames of this CreateBranchProtectionOption.
        :param require_signed_commits: The require_signed_commits of this CreateBranchProtectionOption.
        :param required_approvals: The required_approvals of this CreateBranchProtectionOption.
        :param rule_name: The rule_name of this CreateBranchProtectionOption.
        :param status_check_contexts: The status_check_contexts of this CreateBranchProtectionOption.
        :param unprotected_file_patterns: The unprotected_file_patterns of this CreateBranchProtectionOption.
        """
        self.openapi_types = {
            'approvals_whitelist_teams': List[str],
            'approvals_whitelist_username': List[str],
            'block_on_official_review_requests': bool,
            'block_on_outdated_branch': bool,
            'block_on_rejected_reviews': bool,
            'branch_name': str,
            'dismiss_stale_approvals': bool,
            'enable_approvals_whitelist': bool,
            'enable_merge_whitelist': bool,
            'enable_push': bool,
            'enable_push_whitelist': bool,
            'enable_status_check': bool,
            'merge_whitelist_teams': List[str],
            'merge_whitelist_usernames': List[str],
            'protected_file_patterns': str,
            'push_whitelist_deploy_keys': bool,
            'push_whitelist_teams': List[str],
            'push_whitelist_usernames': List[str],
            'require_signed_commits': bool,
            'required_approvals': int,
            'rule_name': str,
            'status_check_contexts': List[str],
            'unprotected_file_patterns': str
        }

        self.attribute_map = {
            'approvals_whitelist_teams': 'approvals_whitelist_teams',
            'approvals_whitelist_username': 'approvals_whitelist_username',
            'block_on_official_review_requests': 'block_on_official_review_requests',
            'block_on_outdated_branch': 'block_on_outdated_branch',
            'block_on_rejected_reviews': 'block_on_rejected_reviews',
            'branch_name': 'branch_name',
            'dismiss_stale_approvals': 'dismiss_stale_approvals',
            'enable_approvals_whitelist': 'enable_approvals_whitelist',
            'enable_merge_whitelist': 'enable_merge_whitelist',
            'enable_push': 'enable_push',
            'enable_push_whitelist': 'enable_push_whitelist',
            'enable_status_check': 'enable_status_check',
            'merge_whitelist_teams': 'merge_whitelist_teams',
            'merge_whitelist_usernames': 'merge_whitelist_usernames',
            'protected_file_patterns': 'protected_file_patterns',
            'push_whitelist_deploy_keys': 'push_whitelist_deploy_keys',
            'push_whitelist_teams': 'push_whitelist_teams',
            'push_whitelist_usernames': 'push_whitelist_usernames',
            'require_signed_commits': 'require_signed_commits',
            'required_approvals': 'required_approvals',
            'rule_name': 'rule_name',
            'status_check_contexts': 'status_check_contexts',
            'unprotected_file_patterns': 'unprotected_file_patterns'
        }

        self._approvals_whitelist_teams = approvals_whitelist_teams
        self._approvals_whitelist_username = approvals_whitelist_username
        self._block_on_official_review_requests = block_on_official_review_requests
        self._block_on_outdated_branch = block_on_outdated_branch
        self._block_on_rejected_reviews = block_on_rejected_reviews
        self._branch_name = branch_name
        self._dismiss_stale_approvals = dismiss_stale_approvals
        self._enable_approvals_whitelist = enable_approvals_whitelist
        self._enable_merge_whitelist = enable_merge_whitelist
        self._enable_push = enable_push
        self._enable_push_whitelist = enable_push_whitelist
        self._enable_status_check = enable_status_check
        self._merge_whitelist_teams = merge_whitelist_teams
        self._merge_whitelist_usernames = merge_whitelist_usernames
        self._protected_file_patterns = protected_file_patterns
        self._push_whitelist_deploy_keys = push_whitelist_deploy_keys
        self._push_whitelist_teams = push_whitelist_teams
        self._push_whitelist_usernames = push_whitelist_usernames
        self._require_signed_commits = require_signed_commits
        self._required_approvals = required_approvals
        self._rule_name = rule_name
        self._status_check_contexts = status_check_contexts
        self._unprotected_file_patterns = unprotected_file_patterns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBranchProtectionOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBranchProtectionOption of this CreateBranchProtectionOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approvals_whitelist_teams(self):
        """Gets the approvals_whitelist_teams of this CreateBranchProtectionOption.


        :return: The approvals_whitelist_teams of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._approvals_whitelist_teams

    @approvals_whitelist_teams.setter
    def approvals_whitelist_teams(self, approvals_whitelist_teams):
        """Sets the approvals_whitelist_teams of this CreateBranchProtectionOption.


        :param approvals_whitelist_teams: The approvals_whitelist_teams of this CreateBranchProtectionOption.
        :type approvals_whitelist_teams: List[str]
        """

        self._approvals_whitelist_teams = approvals_whitelist_teams

    @property
    def approvals_whitelist_username(self):
        """Gets the approvals_whitelist_username of this CreateBranchProtectionOption.


        :return: The approvals_whitelist_username of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._approvals_whitelist_username

    @approvals_whitelist_username.setter
    def approvals_whitelist_username(self, approvals_whitelist_username):
        """Sets the approvals_whitelist_username of this CreateBranchProtectionOption.


        :param approvals_whitelist_username: The approvals_whitelist_username of this CreateBranchProtectionOption.
        :type approvals_whitelist_username: List[str]
        """

        self._approvals_whitelist_username = approvals_whitelist_username

    @property
    def block_on_official_review_requests(self):
        """Gets the block_on_official_review_requests of this CreateBranchProtectionOption.


        :return: The block_on_official_review_requests of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._block_on_official_review_requests

    @block_on_official_review_requests.setter
    def block_on_official_review_requests(self, block_on_official_review_requests):
        """Sets the block_on_official_review_requests of this CreateBranchProtectionOption.


        :param block_on_official_review_requests: The block_on_official_review_requests of this CreateBranchProtectionOption.
        :type block_on_official_review_requests: bool
        """

        self._block_on_official_review_requests = block_on_official_review_requests

    @property
    def block_on_outdated_branch(self):
        """Gets the block_on_outdated_branch of this CreateBranchProtectionOption.


        :return: The block_on_outdated_branch of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._block_on_outdated_branch

    @block_on_outdated_branch.setter
    def block_on_outdated_branch(self, block_on_outdated_branch):
        """Sets the block_on_outdated_branch of this CreateBranchProtectionOption.


        :param block_on_outdated_branch: The block_on_outdated_branch of this CreateBranchProtectionOption.
        :type block_on_outdated_branch: bool
        """

        self._block_on_outdated_branch = block_on_outdated_branch

    @property
    def block_on_rejected_reviews(self):
        """Gets the block_on_rejected_reviews of this CreateBranchProtectionOption.


        :return: The block_on_rejected_reviews of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._block_on_rejected_reviews

    @block_on_rejected_reviews.setter
    def block_on_rejected_reviews(self, block_on_rejected_reviews):
        """Sets the block_on_rejected_reviews of this CreateBranchProtectionOption.


        :param block_on_rejected_reviews: The block_on_rejected_reviews of this CreateBranchProtectionOption.
        :type block_on_rejected_reviews: bool
        """

        self._block_on_rejected_reviews = block_on_rejected_reviews

    @property
    def branch_name(self):
        """Gets the branch_name of this CreateBranchProtectionOption.

        Deprecated: true

        :return: The branch_name of this CreateBranchProtectionOption.
        :rtype: str
        """
        return self._branch_name

    @branch_name.setter
    def branch_name(self, branch_name):
        """Sets the branch_name of this CreateBranchProtectionOption.

        Deprecated: true

        :param branch_name: The branch_name of this CreateBranchProtectionOption.
        :type branch_name: str
        """

        self._branch_name = branch_name

    @property
    def dismiss_stale_approvals(self):
        """Gets the dismiss_stale_approvals of this CreateBranchProtectionOption.


        :return: The dismiss_stale_approvals of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._dismiss_stale_approvals

    @dismiss_stale_approvals.setter
    def dismiss_stale_approvals(self, dismiss_stale_approvals):
        """Sets the dismiss_stale_approvals of this CreateBranchProtectionOption.


        :param dismiss_stale_approvals: The dismiss_stale_approvals of this CreateBranchProtectionOption.
        :type dismiss_stale_approvals: bool
        """

        self._dismiss_stale_approvals = dismiss_stale_approvals

    @property
    def enable_approvals_whitelist(self):
        """Gets the enable_approvals_whitelist of this CreateBranchProtectionOption.


        :return: The enable_approvals_whitelist of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._enable_approvals_whitelist

    @enable_approvals_whitelist.setter
    def enable_approvals_whitelist(self, enable_approvals_whitelist):
        """Sets the enable_approvals_whitelist of this CreateBranchProtectionOption.


        :param enable_approvals_whitelist: The enable_approvals_whitelist of this CreateBranchProtectionOption.
        :type enable_approvals_whitelist: bool
        """

        self._enable_approvals_whitelist = enable_approvals_whitelist

    @property
    def enable_merge_whitelist(self):
        """Gets the enable_merge_whitelist of this CreateBranchProtectionOption.


        :return: The enable_merge_whitelist of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._enable_merge_whitelist

    @enable_merge_whitelist.setter
    def enable_merge_whitelist(self, enable_merge_whitelist):
        """Sets the enable_merge_whitelist of this CreateBranchProtectionOption.


        :param enable_merge_whitelist: The enable_merge_whitelist of this CreateBranchProtectionOption.
        :type enable_merge_whitelist: bool
        """

        self._enable_merge_whitelist = enable_merge_whitelist

    @property
    def enable_push(self):
        """Gets the enable_push of this CreateBranchProtectionOption.


        :return: The enable_push of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._enable_push

    @enable_push.setter
    def enable_push(self, enable_push):
        """Sets the enable_push of this CreateBranchProtectionOption.


        :param enable_push: The enable_push of this CreateBranchProtectionOption.
        :type enable_push: bool
        """

        self._enable_push = enable_push

    @property
    def enable_push_whitelist(self):
        """Gets the enable_push_whitelist of this CreateBranchProtectionOption.


        :return: The enable_push_whitelist of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._enable_push_whitelist

    @enable_push_whitelist.setter
    def enable_push_whitelist(self, enable_push_whitelist):
        """Sets the enable_push_whitelist of this CreateBranchProtectionOption.


        :param enable_push_whitelist: The enable_push_whitelist of this CreateBranchProtectionOption.
        :type enable_push_whitelist: bool
        """

        self._enable_push_whitelist = enable_push_whitelist

    @property
    def enable_status_check(self):
        """Gets the enable_status_check of this CreateBranchProtectionOption.


        :return: The enable_status_check of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._enable_status_check

    @enable_status_check.setter
    def enable_status_check(self, enable_status_check):
        """Sets the enable_status_check of this CreateBranchProtectionOption.


        :param enable_status_check: The enable_status_check of this CreateBranchProtectionOption.
        :type enable_status_check: bool
        """

        self._enable_status_check = enable_status_check

    @property
    def merge_whitelist_teams(self):
        """Gets the merge_whitelist_teams of this CreateBranchProtectionOption.


        :return: The merge_whitelist_teams of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._merge_whitelist_teams

    @merge_whitelist_teams.setter
    def merge_whitelist_teams(self, merge_whitelist_teams):
        """Sets the merge_whitelist_teams of this CreateBranchProtectionOption.


        :param merge_whitelist_teams: The merge_whitelist_teams of this CreateBranchProtectionOption.
        :type merge_whitelist_teams: List[str]
        """

        self._merge_whitelist_teams = merge_whitelist_teams

    @property
    def merge_whitelist_usernames(self):
        """Gets the merge_whitelist_usernames of this CreateBranchProtectionOption.


        :return: The merge_whitelist_usernames of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._merge_whitelist_usernames

    @merge_whitelist_usernames.setter
    def merge_whitelist_usernames(self, merge_whitelist_usernames):
        """Sets the merge_whitelist_usernames of this CreateBranchProtectionOption.


        :param merge_whitelist_usernames: The merge_whitelist_usernames of this CreateBranchProtectionOption.
        :type merge_whitelist_usernames: List[str]
        """

        self._merge_whitelist_usernames = merge_whitelist_usernames

    @property
    def protected_file_patterns(self):
        """Gets the protected_file_patterns of this CreateBranchProtectionOption.


        :return: The protected_file_patterns of this CreateBranchProtectionOption.
        :rtype: str
        """
        return self._protected_file_patterns

    @protected_file_patterns.setter
    def protected_file_patterns(self, protected_file_patterns):
        """Sets the protected_file_patterns of this CreateBranchProtectionOption.


        :param protected_file_patterns: The protected_file_patterns of this CreateBranchProtectionOption.
        :type protected_file_patterns: str
        """

        self._protected_file_patterns = protected_file_patterns

    @property
    def push_whitelist_deploy_keys(self):
        """Gets the push_whitelist_deploy_keys of this CreateBranchProtectionOption.


        :return: The push_whitelist_deploy_keys of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._push_whitelist_deploy_keys

    @push_whitelist_deploy_keys.setter
    def push_whitelist_deploy_keys(self, push_whitelist_deploy_keys):
        """Sets the push_whitelist_deploy_keys of this CreateBranchProtectionOption.


        :param push_whitelist_deploy_keys: The push_whitelist_deploy_keys of this CreateBranchProtectionOption.
        :type push_whitelist_deploy_keys: bool
        """

        self._push_whitelist_deploy_keys = push_whitelist_deploy_keys

    @property
    def push_whitelist_teams(self):
        """Gets the push_whitelist_teams of this CreateBranchProtectionOption.


        :return: The push_whitelist_teams of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._push_whitelist_teams

    @push_whitelist_teams.setter
    def push_whitelist_teams(self, push_whitelist_teams):
        """Sets the push_whitelist_teams of this CreateBranchProtectionOption.


        :param push_whitelist_teams: The push_whitelist_teams of this CreateBranchProtectionOption.
        :type push_whitelist_teams: List[str]
        """

        self._push_whitelist_teams = push_whitelist_teams

    @property
    def push_whitelist_usernames(self):
        """Gets the push_whitelist_usernames of this CreateBranchProtectionOption.


        :return: The push_whitelist_usernames of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._push_whitelist_usernames

    @push_whitelist_usernames.setter
    def push_whitelist_usernames(self, push_whitelist_usernames):
        """Sets the push_whitelist_usernames of this CreateBranchProtectionOption.


        :param push_whitelist_usernames: The push_whitelist_usernames of this CreateBranchProtectionOption.
        :type push_whitelist_usernames: List[str]
        """

        self._push_whitelist_usernames = push_whitelist_usernames

    @property
    def require_signed_commits(self):
        """Gets the require_signed_commits of this CreateBranchProtectionOption.


        :return: The require_signed_commits of this CreateBranchProtectionOption.
        :rtype: bool
        """
        return self._require_signed_commits

    @require_signed_commits.setter
    def require_signed_commits(self, require_signed_commits):
        """Sets the require_signed_commits of this CreateBranchProtectionOption.


        :param require_signed_commits: The require_signed_commits of this CreateBranchProtectionOption.
        :type require_signed_commits: bool
        """

        self._require_signed_commits = require_signed_commits

    @property
    def required_approvals(self):
        """Gets the required_approvals of this CreateBranchProtectionOption.


        :return: The required_approvals of this CreateBranchProtectionOption.
        :rtype: int
        """
        return self._required_approvals

    @required_approvals.setter
    def required_approvals(self, required_approvals):
        """Sets the required_approvals of this CreateBranchProtectionOption.


        :param required_approvals: The required_approvals of this CreateBranchProtectionOption.
        :type required_approvals: int
        """

        self._required_approvals = required_approvals

    @property
    def rule_name(self):
        """Gets the rule_name of this CreateBranchProtectionOption.


        :return: The rule_name of this CreateBranchProtectionOption.
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name):
        """Sets the rule_name of this CreateBranchProtectionOption.


        :param rule_name: The rule_name of this CreateBranchProtectionOption.
        :type rule_name: str
        """

        self._rule_name = rule_name

    @property
    def status_check_contexts(self):
        """Gets the status_check_contexts of this CreateBranchProtectionOption.


        :return: The status_check_contexts of this CreateBranchProtectionOption.
        :rtype: List[str]
        """
        return self._status_check_contexts

    @status_check_contexts.setter
    def status_check_contexts(self, status_check_contexts):
        """Sets the status_check_contexts of this CreateBranchProtectionOption.


        :param status_check_contexts: The status_check_contexts of this CreateBranchProtectionOption.
        :type status_check_contexts: List[str]
        """

        self._status_check_contexts = status_check_contexts

    @property
    def unprotected_file_patterns(self):
        """Gets the unprotected_file_patterns of this CreateBranchProtectionOption.


        :return: The unprotected_file_patterns of this CreateBranchProtectionOption.
        :rtype: str
        """
        return self._unprotected_file_patterns

    @unprotected_file_patterns.setter
    def unprotected_file_patterns(self, unprotected_file_patterns):
        """Sets the unprotected_file_patterns of this CreateBranchProtectionOption.


        :param unprotected_file_patterns: The unprotected_file_patterns of this CreateBranchProtectionOption.
        :type unprotected_file_patterns: str
        """

        self._unprotected_file_patterns = unprotected_file_patterns
