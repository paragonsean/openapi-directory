# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeneralUISettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_reactions: List[str]=None, custom_emojis: List[str]=None, default_theme: str=None):
        """GeneralUISettings - a model defined in OpenAPI

        :param allowed_reactions: The allowed_reactions of this GeneralUISettings.
        :param custom_emojis: The custom_emojis of this GeneralUISettings.
        :param default_theme: The default_theme of this GeneralUISettings.
        """
        self.openapi_types = {
            'allowed_reactions': List[str],
            'custom_emojis': List[str],
            'default_theme': str
        }

        self.attribute_map = {
            'allowed_reactions': 'allowed_reactions',
            'custom_emojis': 'custom_emojis',
            'default_theme': 'default_theme'
        }

        self._allowed_reactions = allowed_reactions
        self._custom_emojis = custom_emojis
        self._default_theme = default_theme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeneralUISettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeneralUISettings of this GeneralUISettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_reactions(self):
        """Gets the allowed_reactions of this GeneralUISettings.


        :return: The allowed_reactions of this GeneralUISettings.
        :rtype: List[str]
        """
        return self._allowed_reactions

    @allowed_reactions.setter
    def allowed_reactions(self, allowed_reactions):
        """Sets the allowed_reactions of this GeneralUISettings.


        :param allowed_reactions: The allowed_reactions of this GeneralUISettings.
        :type allowed_reactions: List[str]
        """

        self._allowed_reactions = allowed_reactions

    @property
    def custom_emojis(self):
        """Gets the custom_emojis of this GeneralUISettings.


        :return: The custom_emojis of this GeneralUISettings.
        :rtype: List[str]
        """
        return self._custom_emojis

    @custom_emojis.setter
    def custom_emojis(self, custom_emojis):
        """Sets the custom_emojis of this GeneralUISettings.


        :param custom_emojis: The custom_emojis of this GeneralUISettings.
        :type custom_emojis: List[str]
        """

        self._custom_emojis = custom_emojis

    @property
    def default_theme(self):
        """Gets the default_theme of this GeneralUISettings.


        :return: The default_theme of this GeneralUISettings.
        :rtype: str
        """
        return self._default_theme

    @default_theme.setter
    def default_theme(self, default_theme):
        """Sets the default_theme of this GeneralUISettings.


        :param default_theme: The default_theme of this GeneralUISettings.
        :type default_theme: str
        """

        self._default_theme = default_theme
