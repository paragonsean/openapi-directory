# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.issue import Issue
from openapi_server import util


class TrackedTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, id: int=None, issue: Issue=None, issue_id: int=None, time: int=None, user_id: int=None, user_name: str=None):
        """TrackedTime - a model defined in OpenAPI

        :param created: The created of this TrackedTime.
        :param id: The id of this TrackedTime.
        :param issue: The issue of this TrackedTime.
        :param issue_id: The issue_id of this TrackedTime.
        :param time: The time of this TrackedTime.
        :param user_id: The user_id of this TrackedTime.
        :param user_name: The user_name of this TrackedTime.
        """
        self.openapi_types = {
            'created': datetime,
            'id': int,
            'issue': Issue,
            'issue_id': int,
            'time': int,
            'user_id': int,
            'user_name': str
        }

        self.attribute_map = {
            'created': 'created',
            'id': 'id',
            'issue': 'issue',
            'issue_id': 'issue_id',
            'time': 'time',
            'user_id': 'user_id',
            'user_name': 'user_name'
        }

        self._created = created
        self._id = id
        self._issue = issue
        self._issue_id = issue_id
        self._time = time
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrackedTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrackedTime of this TrackedTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this TrackedTime.


        :return: The created of this TrackedTime.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this TrackedTime.


        :param created: The created of this TrackedTime.
        :type created: datetime
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this TrackedTime.


        :return: The id of this TrackedTime.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TrackedTime.


        :param id: The id of this TrackedTime.
        :type id: int
        """

        self._id = id

    @property
    def issue(self):
        """Gets the issue of this TrackedTime.


        :return: The issue of this TrackedTime.
        :rtype: Issue
        """
        return self._issue

    @issue.setter
    def issue(self, issue):
        """Sets the issue of this TrackedTime.


        :param issue: The issue of this TrackedTime.
        :type issue: Issue
        """

        self._issue = issue

    @property
    def issue_id(self):
        """Gets the issue_id of this TrackedTime.

        deprecated (only for backwards compatibility)

        :return: The issue_id of this TrackedTime.
        :rtype: int
        """
        return self._issue_id

    @issue_id.setter
    def issue_id(self, issue_id):
        """Sets the issue_id of this TrackedTime.

        deprecated (only for backwards compatibility)

        :param issue_id: The issue_id of this TrackedTime.
        :type issue_id: int
        """

        self._issue_id = issue_id

    @property
    def time(self):
        """Gets the time of this TrackedTime.

        Time in seconds

        :return: The time of this TrackedTime.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this TrackedTime.

        Time in seconds

        :param time: The time of this TrackedTime.
        :type time: int
        """

        self._time = time

    @property
    def user_id(self):
        """Gets the user_id of this TrackedTime.

        deprecated (only for backwards compatibility)

        :return: The user_id of this TrackedTime.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this TrackedTime.

        deprecated (only for backwards compatibility)

        :param user_id: The user_id of this TrackedTime.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this TrackedTime.


        :return: The user_name of this TrackedTime.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this TrackedTime.


        :param user_name: The user_name of this TrackedTime.
        :type user_name: str
        """

        self._user_name = user_name
