# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.git_object import GitObject
from openapi_server import util


class Reference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object: GitObject=None, ref: str=None, url: str=None):
        """Reference - a model defined in OpenAPI

        :param object: The object of this Reference.
        :param ref: The ref of this Reference.
        :param url: The url of this Reference.
        """
        self.openapi_types = {
            'object': GitObject,
            'ref': str,
            'url': str
        }

        self.attribute_map = {
            'object': 'object',
            'ref': 'ref',
            'url': 'url'
        }

        self._object = object
        self._ref = ref
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Reference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Reference of this Reference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self):
        """Gets the object of this Reference.


        :return: The object of this Reference.
        :rtype: GitObject
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this Reference.


        :param object: The object of this Reference.
        :type object: GitObject
        """

        self._object = object

    @property
    def ref(self):
        """Gets the ref of this Reference.


        :return: The ref of this Reference.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this Reference.


        :param ref: The ref of this Reference.
        :type ref: str
        """

        self._ref = ref

    @property
    def url(self):
        """Gets the url of this Reference.


        :return: The url of this Reference.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Reference.


        :param url: The url of this Reference.
        :type url: str
        """

        self._url = url
