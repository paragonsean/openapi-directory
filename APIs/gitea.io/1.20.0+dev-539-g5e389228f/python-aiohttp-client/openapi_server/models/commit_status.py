# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user import User
from openapi_server import util


class CommitStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: str=None, created_at: datetime=None, creator: User=None, description: str=None, id: int=None, status: str=None, target_url: str=None, updated_at: datetime=None, url: str=None):
        """CommitStatus - a model defined in OpenAPI

        :param context: The context of this CommitStatus.
        :param created_at: The created_at of this CommitStatus.
        :param creator: The creator of this CommitStatus.
        :param description: The description of this CommitStatus.
        :param id: The id of this CommitStatus.
        :param status: The status of this CommitStatus.
        :param target_url: The target_url of this CommitStatus.
        :param updated_at: The updated_at of this CommitStatus.
        :param url: The url of this CommitStatus.
        """
        self.openapi_types = {
            'context': str,
            'created_at': datetime,
            'creator': User,
            'description': str,
            'id': int,
            'status': str,
            'target_url': str,
            'updated_at': datetime,
            'url': str
        }

        self.attribute_map = {
            'context': 'context',
            'created_at': 'created_at',
            'creator': 'creator',
            'description': 'description',
            'id': 'id',
            'status': 'status',
            'target_url': 'target_url',
            'updated_at': 'updated_at',
            'url': 'url'
        }

        self._context = context
        self._created_at = created_at
        self._creator = creator
        self._description = description
        self._id = id
        self._status = status
        self._target_url = target_url
        self._updated_at = updated_at
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitStatus of this CommitStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this CommitStatus.


        :return: The context of this CommitStatus.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this CommitStatus.


        :param context: The context of this CommitStatus.
        :type context: str
        """

        self._context = context

    @property
    def created_at(self):
        """Gets the created_at of this CommitStatus.


        :return: The created_at of this CommitStatus.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CommitStatus.


        :param created_at: The created_at of this CommitStatus.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def creator(self):
        """Gets the creator of this CommitStatus.


        :return: The creator of this CommitStatus.
        :rtype: User
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this CommitStatus.


        :param creator: The creator of this CommitStatus.
        :type creator: User
        """

        self._creator = creator

    @property
    def description(self):
        """Gets the description of this CommitStatus.


        :return: The description of this CommitStatus.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CommitStatus.


        :param description: The description of this CommitStatus.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this CommitStatus.


        :return: The id of this CommitStatus.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CommitStatus.


        :param id: The id of this CommitStatus.
        :type id: int
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this CommitStatus.

        CommitStatusState holds the state of a CommitStatus It can be \"pending\", \"success\", \"error\", \"failure\", and \"warning\"

        :return: The status of this CommitStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CommitStatus.

        CommitStatusState holds the state of a CommitStatus It can be \"pending\", \"success\", \"error\", \"failure\", and \"warning\"

        :param status: The status of this CommitStatus.
        :type status: str
        """

        self._status = status

    @property
    def target_url(self):
        """Gets the target_url of this CommitStatus.


        :return: The target_url of this CommitStatus.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this CommitStatus.


        :param target_url: The target_url of this CommitStatus.
        :type target_url: str
        """

        self._target_url = target_url

    @property
    def updated_at(self):
        """Gets the updated_at of this CommitStatus.


        :return: The updated_at of this CommitStatus.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CommitStatus.


        :param updated_at: The updated_at of this CommitStatus.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this CommitStatus.


        :return: The url of this CommitStatus.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CommitStatus.


        :param url: The url of this CommitStatus.
        :type url: str
        """

        self._url = url
