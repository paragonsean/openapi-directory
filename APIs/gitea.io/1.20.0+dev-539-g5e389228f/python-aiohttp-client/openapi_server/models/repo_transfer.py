# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team import Team
from openapi_server.models.user import User
from openapi_server import util


class RepoTransfer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, doer: User=None, recipient: User=None, teams: List[Team]=None):
        """RepoTransfer - a model defined in OpenAPI

        :param doer: The doer of this RepoTransfer.
        :param recipient: The recipient of this RepoTransfer.
        :param teams: The teams of this RepoTransfer.
        """
        self.openapi_types = {
            'doer': User,
            'recipient': User,
            'teams': List[Team]
        }

        self.attribute_map = {
            'doer': 'doer',
            'recipient': 'recipient',
            'teams': 'teams'
        }

        self._doer = doer
        self._recipient = recipient
        self._teams = teams

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepoTransfer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepoTransfer of this RepoTransfer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doer(self):
        """Gets the doer of this RepoTransfer.


        :return: The doer of this RepoTransfer.
        :rtype: User
        """
        return self._doer

    @doer.setter
    def doer(self, doer):
        """Sets the doer of this RepoTransfer.


        :param doer: The doer of this RepoTransfer.
        :type doer: User
        """

        self._doer = doer

    @property
    def recipient(self):
        """Gets the recipient of this RepoTransfer.


        :return: The recipient of this RepoTransfer.
        :rtype: User
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this RepoTransfer.


        :param recipient: The recipient of this RepoTransfer.
        :type recipient: User
        """

        self._recipient = recipient

    @property
    def teams(self):
        """Gets the teams of this RepoTransfer.


        :return: The teams of this RepoTransfer.
        :rtype: List[Team]
        """
        return self._teams

    @teams.setter
    def teams(self, teams):
        """Sets the teams of this RepoTransfer.


        :param teams: The teams of this RepoTransfer.
        :type teams: List[Team]
        """

        self._teams = teams
