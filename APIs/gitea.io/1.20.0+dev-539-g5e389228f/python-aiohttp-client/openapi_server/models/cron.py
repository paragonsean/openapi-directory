# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Cron(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exec_times: int=None, name: str=None, next: datetime=None, prev: datetime=None, schedule: str=None):
        """Cron - a model defined in OpenAPI

        :param exec_times: The exec_times of this Cron.
        :param name: The name of this Cron.
        :param next: The next of this Cron.
        :param prev: The prev of this Cron.
        :param schedule: The schedule of this Cron.
        """
        self.openapi_types = {
            'exec_times': int,
            'name': str,
            'next': datetime,
            'prev': datetime,
            'schedule': str
        }

        self.attribute_map = {
            'exec_times': 'exec_times',
            'name': 'name',
            'next': 'next',
            'prev': 'prev',
            'schedule': 'schedule'
        }

        self._exec_times = exec_times
        self._name = name
        self._next = next
        self._prev = prev
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Cron':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cron of this Cron.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exec_times(self):
        """Gets the exec_times of this Cron.


        :return: The exec_times of this Cron.
        :rtype: int
        """
        return self._exec_times

    @exec_times.setter
    def exec_times(self, exec_times):
        """Sets the exec_times of this Cron.


        :param exec_times: The exec_times of this Cron.
        :type exec_times: int
        """

        self._exec_times = exec_times

    @property
    def name(self):
        """Gets the name of this Cron.


        :return: The name of this Cron.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Cron.


        :param name: The name of this Cron.
        :type name: str
        """

        self._name = name

    @property
    def next(self):
        """Gets the next of this Cron.


        :return: The next of this Cron.
        :rtype: datetime
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this Cron.


        :param next: The next of this Cron.
        :type next: datetime
        """

        self._next = next

    @property
    def prev(self):
        """Gets the prev of this Cron.


        :return: The prev of this Cron.
        :rtype: datetime
        """
        return self._prev

    @prev.setter
    def prev(self, prev):
        """Sets the prev of this Cron.


        :param prev: The prev of this Cron.
        :type prev: datetime
        """

        self._prev = prev

    @property
    def schedule(self):
        """Gets the schedule of this Cron.


        :return: The schedule of this Cron.
        :rtype: str
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this Cron.


        :param schedule: The schedule of this Cron.
        :type schedule: str
        """

        self._schedule = schedule
