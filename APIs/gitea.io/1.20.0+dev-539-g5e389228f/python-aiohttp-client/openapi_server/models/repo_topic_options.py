# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepoTopicOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, topics: List[str]=None):
        """RepoTopicOptions - a model defined in OpenAPI

        :param topics: The topics of this RepoTopicOptions.
        """
        self.openapi_types = {
            'topics': List[str]
        }

        self.attribute_map = {
            'topics': 'topics'
        }

        self._topics = topics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepoTopicOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepoTopicOptions of this RepoTopicOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def topics(self):
        """Gets the topics of this RepoTopicOptions.

        list of topic names

        :return: The topics of this RepoTopicOptions.
        :rtype: List[str]
        """
        return self._topics

    @topics.setter
    def topics(self, topics):
        """Sets the topics of this RepoTopicOptions.

        list of topic names

        :param topics: The topics of this RepoTopicOptions.
        :type topics: List[str]
        """

        self._topics = topics
