# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StopWatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, duration: str=None, issue_index: int=None, issue_title: str=None, repo_name: str=None, repo_owner_name: str=None, seconds: int=None):
        """StopWatch - a model defined in OpenAPI

        :param created: The created of this StopWatch.
        :param duration: The duration of this StopWatch.
        :param issue_index: The issue_index of this StopWatch.
        :param issue_title: The issue_title of this StopWatch.
        :param repo_name: The repo_name of this StopWatch.
        :param repo_owner_name: The repo_owner_name of this StopWatch.
        :param seconds: The seconds of this StopWatch.
        """
        self.openapi_types = {
            'created': datetime,
            'duration': str,
            'issue_index': int,
            'issue_title': str,
            'repo_name': str,
            'repo_owner_name': str,
            'seconds': int
        }

        self.attribute_map = {
            'created': 'created',
            'duration': 'duration',
            'issue_index': 'issue_index',
            'issue_title': 'issue_title',
            'repo_name': 'repo_name',
            'repo_owner_name': 'repo_owner_name',
            'seconds': 'seconds'
        }

        self._created = created
        self._duration = duration
        self._issue_index = issue_index
        self._issue_title = issue_title
        self._repo_name = repo_name
        self._repo_owner_name = repo_owner_name
        self._seconds = seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopWatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopWatch of this StopWatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this StopWatch.


        :return: The created of this StopWatch.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this StopWatch.


        :param created: The created of this StopWatch.
        :type created: datetime
        """

        self._created = created

    @property
    def duration(self):
        """Gets the duration of this StopWatch.


        :return: The duration of this StopWatch.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this StopWatch.


        :param duration: The duration of this StopWatch.
        :type duration: str
        """

        self._duration = duration

    @property
    def issue_index(self):
        """Gets the issue_index of this StopWatch.


        :return: The issue_index of this StopWatch.
        :rtype: int
        """
        return self._issue_index

    @issue_index.setter
    def issue_index(self, issue_index):
        """Sets the issue_index of this StopWatch.


        :param issue_index: The issue_index of this StopWatch.
        :type issue_index: int
        """

        self._issue_index = issue_index

    @property
    def issue_title(self):
        """Gets the issue_title of this StopWatch.


        :return: The issue_title of this StopWatch.
        :rtype: str
        """
        return self._issue_title

    @issue_title.setter
    def issue_title(self, issue_title):
        """Sets the issue_title of this StopWatch.


        :param issue_title: The issue_title of this StopWatch.
        :type issue_title: str
        """

        self._issue_title = issue_title

    @property
    def repo_name(self):
        """Gets the repo_name of this StopWatch.


        :return: The repo_name of this StopWatch.
        :rtype: str
        """
        return self._repo_name

    @repo_name.setter
    def repo_name(self, repo_name):
        """Sets the repo_name of this StopWatch.


        :param repo_name: The repo_name of this StopWatch.
        :type repo_name: str
        """

        self._repo_name = repo_name

    @property
    def repo_owner_name(self):
        """Gets the repo_owner_name of this StopWatch.


        :return: The repo_owner_name of this StopWatch.
        :rtype: str
        """
        return self._repo_owner_name

    @repo_owner_name.setter
    def repo_owner_name(self, repo_owner_name):
        """Sets the repo_owner_name of this StopWatch.


        :param repo_owner_name: The repo_owner_name of this StopWatch.
        :type repo_owner_name: str
        """

        self._repo_owner_name = repo_owner_name

    @property
    def seconds(self):
        """Gets the seconds of this StopWatch.


        :return: The seconds of this StopWatch.
        :rtype: int
        """
        return self._seconds

    @seconds.setter
    def seconds(self, seconds):
        """Sets the seconds of this StopWatch.


        :param seconds: The seconds of this StopWatch.
        :type seconds: int
        """

        self._seconds = seconds
