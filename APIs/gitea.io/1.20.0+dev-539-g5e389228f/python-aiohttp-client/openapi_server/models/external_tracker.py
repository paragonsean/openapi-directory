# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExternalTracker(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_tracker_format: str=None, external_tracker_regexp_pattern: str=None, external_tracker_style: str=None, external_tracker_url: str=None):
        """ExternalTracker - a model defined in OpenAPI

        :param external_tracker_format: The external_tracker_format of this ExternalTracker.
        :param external_tracker_regexp_pattern: The external_tracker_regexp_pattern of this ExternalTracker.
        :param external_tracker_style: The external_tracker_style of this ExternalTracker.
        :param external_tracker_url: The external_tracker_url of this ExternalTracker.
        """
        self.openapi_types = {
            'external_tracker_format': str,
            'external_tracker_regexp_pattern': str,
            'external_tracker_style': str,
            'external_tracker_url': str
        }

        self.attribute_map = {
            'external_tracker_format': 'external_tracker_format',
            'external_tracker_regexp_pattern': 'external_tracker_regexp_pattern',
            'external_tracker_style': 'external_tracker_style',
            'external_tracker_url': 'external_tracker_url'
        }

        self._external_tracker_format = external_tracker_format
        self._external_tracker_regexp_pattern = external_tracker_regexp_pattern
        self._external_tracker_style = external_tracker_style
        self._external_tracker_url = external_tracker_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExternalTracker':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExternalTracker of this ExternalTracker.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_tracker_format(self):
        """Gets the external_tracker_format of this ExternalTracker.

        External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.

        :return: The external_tracker_format of this ExternalTracker.
        :rtype: str
        """
        return self._external_tracker_format

    @external_tracker_format.setter
    def external_tracker_format(self, external_tracker_format):
        """Sets the external_tracker_format of this ExternalTracker.

        External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.

        :param external_tracker_format: The external_tracker_format of this ExternalTracker.
        :type external_tracker_format: str
        """

        self._external_tracker_format = external_tracker_format

    @property
    def external_tracker_regexp_pattern(self):
        """Gets the external_tracker_regexp_pattern of this ExternalTracker.

        External Issue Tracker issue regular expression

        :return: The external_tracker_regexp_pattern of this ExternalTracker.
        :rtype: str
        """
        return self._external_tracker_regexp_pattern

    @external_tracker_regexp_pattern.setter
    def external_tracker_regexp_pattern(self, external_tracker_regexp_pattern):
        """Sets the external_tracker_regexp_pattern of this ExternalTracker.

        External Issue Tracker issue regular expression

        :param external_tracker_regexp_pattern: The external_tracker_regexp_pattern of this ExternalTracker.
        :type external_tracker_regexp_pattern: str
        """

        self._external_tracker_regexp_pattern = external_tracker_regexp_pattern

    @property
    def external_tracker_style(self):
        """Gets the external_tracker_style of this ExternalTracker.

        External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`

        :return: The external_tracker_style of this ExternalTracker.
        :rtype: str
        """
        return self._external_tracker_style

    @external_tracker_style.setter
    def external_tracker_style(self, external_tracker_style):
        """Sets the external_tracker_style of this ExternalTracker.

        External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`

        :param external_tracker_style: The external_tracker_style of this ExternalTracker.
        :type external_tracker_style: str
        """

        self._external_tracker_style = external_tracker_style

    @property
    def external_tracker_url(self):
        """Gets the external_tracker_url of this ExternalTracker.

        URL of external issue tracker.

        :return: The external_tracker_url of this ExternalTracker.
        :rtype: str
        """
        return self._external_tracker_url

    @external_tracker_url.setter
    def external_tracker_url(self, external_tracker_url):
        """Sets the external_tracker_url of this ExternalTracker.

        URL of external issue tracker.

        :param external_tracker_url: The external_tracker_url of this ExternalTracker.
        :type external_tracker_url: str
        """

        self._external_tracker_url = external_tracker_url
