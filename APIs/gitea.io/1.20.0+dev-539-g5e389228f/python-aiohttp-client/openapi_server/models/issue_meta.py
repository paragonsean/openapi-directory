# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssueMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index: int=None, owner: str=None, repo: str=None):
        """IssueMeta - a model defined in OpenAPI

        :param index: The index of this IssueMeta.
        :param owner: The owner of this IssueMeta.
        :param repo: The repo of this IssueMeta.
        """
        self.openapi_types = {
            'index': int,
            'owner': str,
            'repo': str
        }

        self.attribute_map = {
            'index': 'index',
            'owner': 'owner',
            'repo': 'repo'
        }

        self._index = index
        self._owner = owner
        self._repo = repo

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueMeta of this IssueMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self):
        """Gets the index of this IssueMeta.


        :return: The index of this IssueMeta.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this IssueMeta.


        :param index: The index of this IssueMeta.
        :type index: int
        """

        self._index = index

    @property
    def owner(self):
        """Gets the owner of this IssueMeta.


        :return: The owner of this IssueMeta.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this IssueMeta.


        :param owner: The owner of this IssueMeta.
        :type owner: str
        """

        self._owner = owner

    @property
    def repo(self):
        """Gets the repo of this IssueMeta.


        :return: The repo of this IssueMeta.
        :rtype: str
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this IssueMeta.


        :param repo: The repo of this IssueMeta.
        :type repo: str
        """

        self._repo = repo
