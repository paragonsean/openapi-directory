# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Milestone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closed_at: datetime=None, closed_issues: int=None, created_at: datetime=None, description: str=None, due_on: datetime=None, id: int=None, open_issues: int=None, state: str=None, title: str=None, updated_at: datetime=None):
        """Milestone - a model defined in OpenAPI

        :param closed_at: The closed_at of this Milestone.
        :param closed_issues: The closed_issues of this Milestone.
        :param created_at: The created_at of this Milestone.
        :param description: The description of this Milestone.
        :param due_on: The due_on of this Milestone.
        :param id: The id of this Milestone.
        :param open_issues: The open_issues of this Milestone.
        :param state: The state of this Milestone.
        :param title: The title of this Milestone.
        :param updated_at: The updated_at of this Milestone.
        """
        self.openapi_types = {
            'closed_at': datetime,
            'closed_issues': int,
            'created_at': datetime,
            'description': str,
            'due_on': datetime,
            'id': int,
            'open_issues': int,
            'state': str,
            'title': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'closed_at': 'closed_at',
            'closed_issues': 'closed_issues',
            'created_at': 'created_at',
            'description': 'description',
            'due_on': 'due_on',
            'id': 'id',
            'open_issues': 'open_issues',
            'state': 'state',
            'title': 'title',
            'updated_at': 'updated_at'
        }

        self._closed_at = closed_at
        self._closed_issues = closed_issues
        self._created_at = created_at
        self._description = description
        self._due_on = due_on
        self._id = id
        self._open_issues = open_issues
        self._state = state
        self._title = title
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Milestone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Milestone of this Milestone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closed_at(self):
        """Gets the closed_at of this Milestone.


        :return: The closed_at of this Milestone.
        :rtype: datetime
        """
        return self._closed_at

    @closed_at.setter
    def closed_at(self, closed_at):
        """Sets the closed_at of this Milestone.


        :param closed_at: The closed_at of this Milestone.
        :type closed_at: datetime
        """

        self._closed_at = closed_at

    @property
    def closed_issues(self):
        """Gets the closed_issues of this Milestone.


        :return: The closed_issues of this Milestone.
        :rtype: int
        """
        return self._closed_issues

    @closed_issues.setter
    def closed_issues(self, closed_issues):
        """Sets the closed_issues of this Milestone.


        :param closed_issues: The closed_issues of this Milestone.
        :type closed_issues: int
        """

        self._closed_issues = closed_issues

    @property
    def created_at(self):
        """Gets the created_at of this Milestone.


        :return: The created_at of this Milestone.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Milestone.


        :param created_at: The created_at of this Milestone.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this Milestone.


        :return: The description of this Milestone.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Milestone.


        :param description: The description of this Milestone.
        :type description: str
        """

        self._description = description

    @property
    def due_on(self):
        """Gets the due_on of this Milestone.


        :return: The due_on of this Milestone.
        :rtype: datetime
        """
        return self._due_on

    @due_on.setter
    def due_on(self, due_on):
        """Sets the due_on of this Milestone.


        :param due_on: The due_on of this Milestone.
        :type due_on: datetime
        """

        self._due_on = due_on

    @property
    def id(self):
        """Gets the id of this Milestone.


        :return: The id of this Milestone.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Milestone.


        :param id: The id of this Milestone.
        :type id: int
        """

        self._id = id

    @property
    def open_issues(self):
        """Gets the open_issues of this Milestone.


        :return: The open_issues of this Milestone.
        :rtype: int
        """
        return self._open_issues

    @open_issues.setter
    def open_issues(self, open_issues):
        """Sets the open_issues of this Milestone.


        :param open_issues: The open_issues of this Milestone.
        :type open_issues: int
        """

        self._open_issues = open_issues

    @property
    def state(self):
        """Gets the state of this Milestone.

        StateType issue state type

        :return: The state of this Milestone.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Milestone.

        StateType issue state type

        :param state: The state of this Milestone.
        :type state: str
        """

        self._state = state

    @property
    def title(self):
        """Gets the title of this Milestone.


        :return: The title of this Milestone.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Milestone.


        :param title: The title of this Milestone.
        :type title: str
        """

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this Milestone.


        :return: The updated_at of this Milestone.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Milestone.


        :param updated_at: The updated_at of this Milestone.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
