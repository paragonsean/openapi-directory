# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payload_commit_verification import PayloadCommitVerification
from openapi_server.models.payload_user import PayloadUser
from openapi_server import util


class PayloadCommit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added: List[str]=None, author: PayloadUser=None, committer: PayloadUser=None, id: str=None, message: str=None, modified: List[str]=None, removed: List[str]=None, timestamp: datetime=None, url: str=None, verification: PayloadCommitVerification=None):
        """PayloadCommit - a model defined in OpenAPI

        :param added: The added of this PayloadCommit.
        :param author: The author of this PayloadCommit.
        :param committer: The committer of this PayloadCommit.
        :param id: The id of this PayloadCommit.
        :param message: The message of this PayloadCommit.
        :param modified: The modified of this PayloadCommit.
        :param removed: The removed of this PayloadCommit.
        :param timestamp: The timestamp of this PayloadCommit.
        :param url: The url of this PayloadCommit.
        :param verification: The verification of this PayloadCommit.
        """
        self.openapi_types = {
            'added': List[str],
            'author': PayloadUser,
            'committer': PayloadUser,
            'id': str,
            'message': str,
            'modified': List[str],
            'removed': List[str],
            'timestamp': datetime,
            'url': str,
            'verification': PayloadCommitVerification
        }

        self.attribute_map = {
            'added': 'added',
            'author': 'author',
            'committer': 'committer',
            'id': 'id',
            'message': 'message',
            'modified': 'modified',
            'removed': 'removed',
            'timestamp': 'timestamp',
            'url': 'url',
            'verification': 'verification'
        }

        self._added = added
        self._author = author
        self._committer = committer
        self._id = id
        self._message = message
        self._modified = modified
        self._removed = removed
        self._timestamp = timestamp
        self._url = url
        self._verification = verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayloadCommit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayloadCommit of this PayloadCommit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added(self):
        """Gets the added of this PayloadCommit.


        :return: The added of this PayloadCommit.
        :rtype: List[str]
        """
        return self._added

    @added.setter
    def added(self, added):
        """Sets the added of this PayloadCommit.


        :param added: The added of this PayloadCommit.
        :type added: List[str]
        """

        self._added = added

    @property
    def author(self):
        """Gets the author of this PayloadCommit.


        :return: The author of this PayloadCommit.
        :rtype: PayloadUser
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this PayloadCommit.


        :param author: The author of this PayloadCommit.
        :type author: PayloadUser
        """

        self._author = author

    @property
    def committer(self):
        """Gets the committer of this PayloadCommit.


        :return: The committer of this PayloadCommit.
        :rtype: PayloadUser
        """
        return self._committer

    @committer.setter
    def committer(self, committer):
        """Sets the committer of this PayloadCommit.


        :param committer: The committer of this PayloadCommit.
        :type committer: PayloadUser
        """

        self._committer = committer

    @property
    def id(self):
        """Gets the id of this PayloadCommit.

        sha1 hash of the commit

        :return: The id of this PayloadCommit.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PayloadCommit.

        sha1 hash of the commit

        :param id: The id of this PayloadCommit.
        :type id: str
        """

        self._id = id

    @property
    def message(self):
        """Gets the message of this PayloadCommit.


        :return: The message of this PayloadCommit.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PayloadCommit.


        :param message: The message of this PayloadCommit.
        :type message: str
        """

        self._message = message

    @property
    def modified(self):
        """Gets the modified of this PayloadCommit.


        :return: The modified of this PayloadCommit.
        :rtype: List[str]
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this PayloadCommit.


        :param modified: The modified of this PayloadCommit.
        :type modified: List[str]
        """

        self._modified = modified

    @property
    def removed(self):
        """Gets the removed of this PayloadCommit.


        :return: The removed of this PayloadCommit.
        :rtype: List[str]
        """
        return self._removed

    @removed.setter
    def removed(self, removed):
        """Sets the removed of this PayloadCommit.


        :param removed: The removed of this PayloadCommit.
        :type removed: List[str]
        """

        self._removed = removed

    @property
    def timestamp(self):
        """Gets the timestamp of this PayloadCommit.


        :return: The timestamp of this PayloadCommit.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this PayloadCommit.


        :param timestamp: The timestamp of this PayloadCommit.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def url(self):
        """Gets the url of this PayloadCommit.


        :return: The url of this PayloadCommit.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PayloadCommit.


        :param url: The url of this PayloadCommit.
        :type url: str
        """

        self._url = url

    @property
    def verification(self):
        """Gets the verification of this PayloadCommit.


        :return: The verification of this PayloadCommit.
        :rtype: PayloadCommitVerification
        """
        return self._verification

    @verification.setter
    def verification(self, verification):
        """Sets the verification of this PayloadCommit.


        :param verification: The verification of this PayloadCommit.
        :type verification: PayloadCommitVerification
        """

        self._verification = verification
