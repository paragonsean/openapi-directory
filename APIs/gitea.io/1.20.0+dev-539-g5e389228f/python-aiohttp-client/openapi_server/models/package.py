# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repository import Repository
from openapi_server.models.user import User
from openapi_server import util


class Package(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, creator: User=None, id: int=None, name: str=None, owner: User=None, repository: Repository=None, type: str=None, version: str=None):
        """Package - a model defined in OpenAPI

        :param created_at: The created_at of this Package.
        :param creator: The creator of this Package.
        :param id: The id of this Package.
        :param name: The name of this Package.
        :param owner: The owner of this Package.
        :param repository: The repository of this Package.
        :param type: The type of this Package.
        :param version: The version of this Package.
        """
        self.openapi_types = {
            'created_at': datetime,
            'creator': User,
            'id': int,
            'name': str,
            'owner': User,
            'repository': Repository,
            'type': str,
            'version': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'creator': 'creator',
            'id': 'id',
            'name': 'name',
            'owner': 'owner',
            'repository': 'repository',
            'type': 'type',
            'version': 'version'
        }

        self._created_at = created_at
        self._creator = creator
        self._id = id
        self._name = name
        self._owner = owner
        self._repository = repository
        self._type = type
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Package':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Package of this Package.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Package.


        :return: The created_at of this Package.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Package.


        :param created_at: The created_at of this Package.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def creator(self):
        """Gets the creator of this Package.


        :return: The creator of this Package.
        :rtype: User
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this Package.


        :param creator: The creator of this Package.
        :type creator: User
        """

        self._creator = creator

    @property
    def id(self):
        """Gets the id of this Package.


        :return: The id of this Package.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Package.


        :param id: The id of this Package.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Package.


        :return: The name of this Package.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Package.


        :param name: The name of this Package.
        :type name: str
        """

        self._name = name

    @property
    def owner(self):
        """Gets the owner of this Package.


        :return: The owner of this Package.
        :rtype: User
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this Package.


        :param owner: The owner of this Package.
        :type owner: User
        """

        self._owner = owner

    @property
    def repository(self):
        """Gets the repository of this Package.


        :return: The repository of this Package.
        :rtype: Repository
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this Package.


        :param repository: The repository of this Package.
        :type repository: Repository
        """

        self._repository = repository

    @property
    def type(self):
        """Gets the type of this Package.


        :return: The type of this Package.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Package.


        :param type: The type of this Package.
        :type type: str
        """

        self._type = type

    @property
    def version(self):
        """Gets the version of this Package.


        :return: The version of this Package.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Package.


        :param version: The version of this Package.
        :type version: str
        """

        self._version = version
