# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserSettingsOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, diff_view_style: str=None, full_name: str=None, hide_activity: bool=None, hide_email: bool=None, language: str=None, location: str=None, theme: str=None, website: str=None):
        """UserSettingsOptions - a model defined in OpenAPI

        :param description: The description of this UserSettingsOptions.
        :param diff_view_style: The diff_view_style of this UserSettingsOptions.
        :param full_name: The full_name of this UserSettingsOptions.
        :param hide_activity: The hide_activity of this UserSettingsOptions.
        :param hide_email: The hide_email of this UserSettingsOptions.
        :param language: The language of this UserSettingsOptions.
        :param location: The location of this UserSettingsOptions.
        :param theme: The theme of this UserSettingsOptions.
        :param website: The website of this UserSettingsOptions.
        """
        self.openapi_types = {
            'description': str,
            'diff_view_style': str,
            'full_name': str,
            'hide_activity': bool,
            'hide_email': bool,
            'language': str,
            'location': str,
            'theme': str,
            'website': str
        }

        self.attribute_map = {
            'description': 'description',
            'diff_view_style': 'diff_view_style',
            'full_name': 'full_name',
            'hide_activity': 'hide_activity',
            'hide_email': 'hide_email',
            'language': 'language',
            'location': 'location',
            'theme': 'theme',
            'website': 'website'
        }

        self._description = description
        self._diff_view_style = diff_view_style
        self._full_name = full_name
        self._hide_activity = hide_activity
        self._hide_email = hide_email
        self._language = language
        self._location = location
        self._theme = theme
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserSettingsOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserSettingsOptions of this UserSettingsOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UserSettingsOptions.


        :return: The description of this UserSettingsOptions.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UserSettingsOptions.


        :param description: The description of this UserSettingsOptions.
        :type description: str
        """

        self._description = description

    @property
    def diff_view_style(self):
        """Gets the diff_view_style of this UserSettingsOptions.


        :return: The diff_view_style of this UserSettingsOptions.
        :rtype: str
        """
        return self._diff_view_style

    @diff_view_style.setter
    def diff_view_style(self, diff_view_style):
        """Sets the diff_view_style of this UserSettingsOptions.


        :param diff_view_style: The diff_view_style of this UserSettingsOptions.
        :type diff_view_style: str
        """

        self._diff_view_style = diff_view_style

    @property
    def full_name(self):
        """Gets the full_name of this UserSettingsOptions.


        :return: The full_name of this UserSettingsOptions.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this UserSettingsOptions.


        :param full_name: The full_name of this UserSettingsOptions.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def hide_activity(self):
        """Gets the hide_activity of this UserSettingsOptions.


        :return: The hide_activity of this UserSettingsOptions.
        :rtype: bool
        """
        return self._hide_activity

    @hide_activity.setter
    def hide_activity(self, hide_activity):
        """Sets the hide_activity of this UserSettingsOptions.


        :param hide_activity: The hide_activity of this UserSettingsOptions.
        :type hide_activity: bool
        """

        self._hide_activity = hide_activity

    @property
    def hide_email(self):
        """Gets the hide_email of this UserSettingsOptions.

        Privacy

        :return: The hide_email of this UserSettingsOptions.
        :rtype: bool
        """
        return self._hide_email

    @hide_email.setter
    def hide_email(self, hide_email):
        """Sets the hide_email of this UserSettingsOptions.

        Privacy

        :param hide_email: The hide_email of this UserSettingsOptions.
        :type hide_email: bool
        """

        self._hide_email = hide_email

    @property
    def language(self):
        """Gets the language of this UserSettingsOptions.


        :return: The language of this UserSettingsOptions.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this UserSettingsOptions.


        :param language: The language of this UserSettingsOptions.
        :type language: str
        """

        self._language = language

    @property
    def location(self):
        """Gets the location of this UserSettingsOptions.


        :return: The location of this UserSettingsOptions.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this UserSettingsOptions.


        :param location: The location of this UserSettingsOptions.
        :type location: str
        """

        self._location = location

    @property
    def theme(self):
        """Gets the theme of this UserSettingsOptions.


        :return: The theme of this UserSettingsOptions.
        :rtype: str
        """
        return self._theme

    @theme.setter
    def theme(self, theme):
        """Sets the theme of this UserSettingsOptions.


        :param theme: The theme of this UserSettingsOptions.
        :type theme: str
        """

        self._theme = theme

    @property
    def website(self):
        """Gets the website of this UserSettingsOptions.


        :return: The website of this UserSettingsOptions.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this UserSettingsOptions.


        :param website: The website of this UserSettingsOptions.
        :type website: str
        """

        self._website = website
