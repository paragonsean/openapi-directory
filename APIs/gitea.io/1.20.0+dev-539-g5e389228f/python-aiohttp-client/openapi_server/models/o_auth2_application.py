# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OAuth2Application(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_secret: str=None, confidential_client: bool=None, created: datetime=None, id: int=None, name: str=None, redirect_uris: List[str]=None):
        """OAuth2Application - a model defined in OpenAPI

        :param client_id: The client_id of this OAuth2Application.
        :param client_secret: The client_secret of this OAuth2Application.
        :param confidential_client: The confidential_client of this OAuth2Application.
        :param created: The created of this OAuth2Application.
        :param id: The id of this OAuth2Application.
        :param name: The name of this OAuth2Application.
        :param redirect_uris: The redirect_uris of this OAuth2Application.
        """
        self.openapi_types = {
            'client_id': str,
            'client_secret': str,
            'confidential_client': bool,
            'created': datetime,
            'id': int,
            'name': str,
            'redirect_uris': List[str]
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'client_secret': 'client_secret',
            'confidential_client': 'confidential_client',
            'created': 'created',
            'id': 'id',
            'name': 'name',
            'redirect_uris': 'redirect_uris'
        }

        self._client_id = client_id
        self._client_secret = client_secret
        self._confidential_client = confidential_client
        self._created = created
        self._id = id
        self._name = name
        self._redirect_uris = redirect_uris

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OAuth2Application':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OAuth2Application of this OAuth2Application.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this OAuth2Application.


        :return: The client_id of this OAuth2Application.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this OAuth2Application.


        :param client_id: The client_id of this OAuth2Application.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this OAuth2Application.


        :return: The client_secret of this OAuth2Application.
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this OAuth2Application.


        :param client_secret: The client_secret of this OAuth2Application.
        :type client_secret: str
        """

        self._client_secret = client_secret

    @property
    def confidential_client(self):
        """Gets the confidential_client of this OAuth2Application.


        :return: The confidential_client of this OAuth2Application.
        :rtype: bool
        """
        return self._confidential_client

    @confidential_client.setter
    def confidential_client(self, confidential_client):
        """Sets the confidential_client of this OAuth2Application.


        :param confidential_client: The confidential_client of this OAuth2Application.
        :type confidential_client: bool
        """

        self._confidential_client = confidential_client

    @property
    def created(self):
        """Gets the created of this OAuth2Application.


        :return: The created of this OAuth2Application.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this OAuth2Application.


        :param created: The created of this OAuth2Application.
        :type created: datetime
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this OAuth2Application.


        :return: The id of this OAuth2Application.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OAuth2Application.


        :param id: The id of this OAuth2Application.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this OAuth2Application.


        :return: The name of this OAuth2Application.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OAuth2Application.


        :param name: The name of this OAuth2Application.
        :type name: str
        """

        self._name = name

    @property
    def redirect_uris(self):
        """Gets the redirect_uris of this OAuth2Application.


        :return: The redirect_uris of this OAuth2Application.
        :rtype: List[str]
        """
        return self._redirect_uris

    @redirect_uris.setter
    def redirect_uris(self, redirect_uris):
        """Sets the redirect_uris of this OAuth2Application.


        :param redirect_uris: The redirect_uris of this OAuth2Application.
        :type redirect_uris: List[str]
        """

        self._redirect_uris = redirect_uris
