# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Organization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_url: str=None, description: str=None, full_name: str=None, id: int=None, location: str=None, name: str=None, repo_admin_change_team_access: bool=None, username: str=None, visibility: str=None, website: str=None):
        """Organization - a model defined in OpenAPI

        :param avatar_url: The avatar_url of this Organization.
        :param description: The description of this Organization.
        :param full_name: The full_name of this Organization.
        :param id: The id of this Organization.
        :param location: The location of this Organization.
        :param name: The name of this Organization.
        :param repo_admin_change_team_access: The repo_admin_change_team_access of this Organization.
        :param username: The username of this Organization.
        :param visibility: The visibility of this Organization.
        :param website: The website of this Organization.
        """
        self.openapi_types = {
            'avatar_url': str,
            'description': str,
            'full_name': str,
            'id': int,
            'location': str,
            'name': str,
            'repo_admin_change_team_access': bool,
            'username': str,
            'visibility': str,
            'website': str
        }

        self.attribute_map = {
            'avatar_url': 'avatar_url',
            'description': 'description',
            'full_name': 'full_name',
            'id': 'id',
            'location': 'location',
            'name': 'name',
            'repo_admin_change_team_access': 'repo_admin_change_team_access',
            'username': 'username',
            'visibility': 'visibility',
            'website': 'website'
        }

        self._avatar_url = avatar_url
        self._description = description
        self._full_name = full_name
        self._id = id
        self._location = location
        self._name = name
        self._repo_admin_change_team_access = repo_admin_change_team_access
        self._username = username
        self._visibility = visibility
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Organization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Organization of this Organization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_url(self):
        """Gets the avatar_url of this Organization.


        :return: The avatar_url of this Organization.
        :rtype: str
        """
        return self._avatar_url

    @avatar_url.setter
    def avatar_url(self, avatar_url):
        """Sets the avatar_url of this Organization.


        :param avatar_url: The avatar_url of this Organization.
        :type avatar_url: str
        """

        self._avatar_url = avatar_url

    @property
    def description(self):
        """Gets the description of this Organization.


        :return: The description of this Organization.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Organization.


        :param description: The description of this Organization.
        :type description: str
        """

        self._description = description

    @property
    def full_name(self):
        """Gets the full_name of this Organization.


        :return: The full_name of this Organization.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Organization.


        :param full_name: The full_name of this Organization.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def id(self):
        """Gets the id of this Organization.


        :return: The id of this Organization.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Organization.


        :param id: The id of this Organization.
        :type id: int
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this Organization.


        :return: The location of this Organization.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Organization.


        :param location: The location of this Organization.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this Organization.


        :return: The name of this Organization.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Organization.


        :param name: The name of this Organization.
        :type name: str
        """

        self._name = name

    @property
    def repo_admin_change_team_access(self):
        """Gets the repo_admin_change_team_access of this Organization.


        :return: The repo_admin_change_team_access of this Organization.
        :rtype: bool
        """
        return self._repo_admin_change_team_access

    @repo_admin_change_team_access.setter
    def repo_admin_change_team_access(self, repo_admin_change_team_access):
        """Sets the repo_admin_change_team_access of this Organization.


        :param repo_admin_change_team_access: The repo_admin_change_team_access of this Organization.
        :type repo_admin_change_team_access: bool
        """

        self._repo_admin_change_team_access = repo_admin_change_team_access

    @property
    def username(self):
        """Gets the username of this Organization.

        deprecated

        :return: The username of this Organization.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Organization.

        deprecated

        :param username: The username of this Organization.
        :type username: str
        """

        self._username = username

    @property
    def visibility(self):
        """Gets the visibility of this Organization.


        :return: The visibility of this Organization.
        :rtype: str
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this Organization.


        :param visibility: The visibility of this Organization.
        :type visibility: str
        """

        self._visibility = visibility

    @property
    def website(self):
        """Gets the website of this Organization.


        :return: The website of this Organization.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Organization.


        :param website: The website of this Organization.
        :type website: str
        """

        self._website = website
