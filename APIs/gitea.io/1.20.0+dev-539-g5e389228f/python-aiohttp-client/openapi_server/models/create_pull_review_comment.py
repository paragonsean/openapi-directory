# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreatePullReviewComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, new_position: int=None, old_position: int=None, path: str=None):
        """CreatePullReviewComment - a model defined in OpenAPI

        :param body: The body of this CreatePullReviewComment.
        :param new_position: The new_position of this CreatePullReviewComment.
        :param old_position: The old_position of this CreatePullReviewComment.
        :param path: The path of this CreatePullReviewComment.
        """
        self.openapi_types = {
            'body': str,
            'new_position': int,
            'old_position': int,
            'path': str
        }

        self.attribute_map = {
            'body': 'body',
            'new_position': 'new_position',
            'old_position': 'old_position',
            'path': 'path'
        }

        self._body = body
        self._new_position = new_position
        self._old_position = old_position
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePullReviewComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePullReviewComment of this CreatePullReviewComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this CreatePullReviewComment.


        :return: The body of this CreatePullReviewComment.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this CreatePullReviewComment.


        :param body: The body of this CreatePullReviewComment.
        :type body: str
        """

        self._body = body

    @property
    def new_position(self):
        """Gets the new_position of this CreatePullReviewComment.

        if comment to new file line or 0

        :return: The new_position of this CreatePullReviewComment.
        :rtype: int
        """
        return self._new_position

    @new_position.setter
    def new_position(self, new_position):
        """Sets the new_position of this CreatePullReviewComment.

        if comment to new file line or 0

        :param new_position: The new_position of this CreatePullReviewComment.
        :type new_position: int
        """

        self._new_position = new_position

    @property
    def old_position(self):
        """Gets the old_position of this CreatePullReviewComment.

        if comment to old file line or 0

        :return: The old_position of this CreatePullReviewComment.
        :rtype: int
        """
        return self._old_position

    @old_position.setter
    def old_position(self, old_position):
        """Sets the old_position of this CreatePullReviewComment.

        if comment to old file line or 0

        :param old_position: The old_position of this CreatePullReviewComment.
        :type old_position: int
        """

        self._old_position = old_position

    @property
    def path(self):
        """Gets the path of this CreatePullReviewComment.

        the tree path

        :return: The path of this CreatePullReviewComment.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this CreatePullReviewComment.

        the tree path

        :param path: The path of this CreatePullReviewComment.
        :type path: str
        """

        self._path = path
