openapi: 3.0.0
info:
  contact:
    x-twitter: giteaio
  description: This documentation describes the Gitea API.
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: Gitea API.
  version: 1.20.0+dev-539-g5e389228f
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://twitter.com/giteaio/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://try.gitea.io/swagger.v1.json
    version: "3.0"
  x-providerName: gitea.io
servers:
- url: /api/v1
security:
- BasicAuth: []
- Token: []
- AccessToken: []
- AuthorizationHeaderToken: []
- SudoParam: []
- SudoHeader: []
- TOTPHeader: []
paths:
  /activitypub/user-id/{user-id}:
    get:
      operationId: activitypub_person
      parameters:
      - description: user ID of the user
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPub'
            text/html:
              schema:
                $ref: '#/components/schemas/ActivityPub'
          description: ActivityPub
      summary: Returns the Person actor for a user
      tags:
      - activitypub
      x-openapi-router-controller: openapi_server.controllers.activitypub_controller
  /activitypub/user-id/{user-id}/inbox:
    post:
      operationId: activitypub_person_inbox
      parameters:
      - description: user ID of the user
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Send to the inbox
      tags:
      - activitypub
      x-openapi-router-controller: openapi_server.controllers.activitypub_controller
  /admin/cron:
    get:
      operationId: admin_cron_list
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cron'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Cron'
                type: array
          description: CronList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List cron tasks
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/cron/{task}:
    post:
      operationId: admin_cron_run
      parameters:
      - description: task to run
        explode: false
        in: path
        name: task
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Run cron task
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/emails:
    get:
      operationId: admin_get_all_emails
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
          description: EmailList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List all emails
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/emails/search:
    get:
      operationId: admin_search_emails
      parameters:
      - description: keyword
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
          description: EmailList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Search all emails
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/hooks:
    get:
      operationId: admin_list_hooks
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: HookList
      summary: List system's webhooks
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
    post:
      operationId: admin_create_hook
      requestBody:
        $ref: '#/components/requestBodies/CreateHookOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Create a hook
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/hooks/{id}:
    get:
      operationId: admin_get_hook
      parameters:
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Get a hook
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
    patch:
      operationId: admin_edit_hook
      parameters:
      - description: id of the hook to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditHookOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Update a hook
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/orgs:
    get:
      operationId: admin_get_all_orgs
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: OrganizationList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List all organizations
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/unadopted:
    get:
      operationId: admin_unadopted_list
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: pattern of repositories to search for
        explode: true
        in: query
        name: pattern
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/html:
              schema:
                items:
                  type: string
                type: array
          description: StringSlice
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List unadopted repositories
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/unadopted/{owner}/{repo}:
    delete:
      operationId: admin_delete_unadopted_repository
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete unadopted files
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
    post:
      operationId: admin_adopt_repository
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Adopt unadopted files as a repository
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/users:
    get:
      operationId: admin_search_users
      parameters:
      - description: ID of the user's login source to search for
        explode: true
        in: query
        name: source_id
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: user's login name to search for
        explode: true
        in: query
        name: login_name
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Search users according filter conditions
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
    post:
      operationId: admin_create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a user
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/users/{username}:
    delete:
      operationId: admin_delete_user
      parameters:
      - description: username of user to delete
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: purge the user from the system completely
        explode: true
        in: query
        name: purge
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a user
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
    patch:
      operationId: admin_edit_user
      parameters:
      - description: username of user to edit
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Edit an existing user
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/users/{username}/keys:
    post:
      operationId: admin_create_public_key
      parameters:
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateKeyOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
            text/html:
              schema:
                $ref: '#/components/schemas/PublicKey'
          description: PublicKey
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a public key on behalf of a user
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/users/{username}/keys/{id}:
    delete:
      operationId: admin_delete_user_public_key
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: id of the key to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a user's public key
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/users/{username}/orgs:
    post:
      operationId: admin_create_org
      parameters:
      - description: username of the user that will own the created organization
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateOrgOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create an organization
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/users/{username}/rename:
    post:
      operationId: admin_rename_user
      parameters:
      - description: existing username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameUserOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/RenameUserOption'
        required: true
        x-body-name: body
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Rename a user
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /admin/users/{username}/repos:
    post:
      operationId: admin_create_repo
      parameters:
      - description: username of the user. This user will own the created repository
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepoOption'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a repository on behalf of a user
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
      x-codegen-request-body-name: body
  /amdin/hooks/{id}:
    delete:
      operationId: admin_delete_hook
      parameters:
      - description: id of the hook to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a hook
      tags:
      - admin
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /markdown:
    post:
      operationId: render_markdown
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkdownOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: MarkdownRender is a rendered markdown document
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Render a markdown document as HTML
      tags:
      - miscellaneous
      x-openapi-router-controller: openapi_server.controllers.miscellaneous_controller
      x-codegen-request-body-name: body
  /markdown/raw:
    post:
      operationId: render_markdown_raw
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: Request body to render
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: MarkdownRender is a rendered markdown document
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Render raw markdown as HTML
      tags:
      - miscellaneous
      x-openapi-router-controller: openapi_server.controllers.miscellaneous_controller
      x-codegen-request-body-name: body
  /markup:
    post:
      operationId: render_markup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkupOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: MarkupRender is a rendered markup document
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Render a markup document as HTML
      tags:
      - miscellaneous
      x-openapi-router-controller: openapi_server.controllers.miscellaneous_controller
      x-codegen-request-body-name: body
  /nodeinfo:
    get:
      operationId: get_node_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'
            text/html:
              schema:
                $ref: '#/components/schemas/NodeInfo'
          description: NodeInfo
      summary: Returns the nodeinfo of the Gitea application
      tags:
      - miscellaneous
      x-openapi-router-controller: openapi_server.controllers.miscellaneous_controller
  /notifications:
    get:
      operationId: notify_get_list
      parameters:
      - description: "If true, show notifications marked as read. Default value is\
          \ false"
        explode: true
        in: query
        name: all
        required: false
        schema:
          type: boolean
        style: form
      - description: "Show notifications with the provided status types. Options are:\
          \ unread, read and/or pinned. Defaults to unread & pinned."
        explode: true
        in: query
        name: status-types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter notifications by subject type
        explode: true
        in: query
        name: subject-type
        required: false
        schema:
          items:
            enum:
            - issue
            - pull
            - commit
            - repository
            type: string
          type: array
        style: form
      - description: Only show notifications updated after the given time. This is
          a timestamp in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show notifications updated before the given time. This is
          a timestamp in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
          description: NotificationThreadList
      summary: List users's notification threads
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
    put:
      operationId: notify_read_list
      parameters:
      - description: Describes the last point that notifications were checked. Anything
          updated since this time will not be updated.
        explode: true
        in: query
        name: last_read_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If true, mark all notifications on this repo. Default value\
          \ is false"
        explode: true
        in: query
        name: all
        required: false
        schema:
          type: string
        style: form
      - description: "Mark notifications with the provided status types. Options are:\
          \ unread, read and/or pinned. Defaults to unread."
        explode: true
        in: query
        name: status-types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Status to mark notifications as, Defaults to read."
        explode: true
        in: query
        name: to-status
        required: false
        schema:
          type: string
        style: form
      responses:
        "205":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
          description: NotificationThreadList
      summary: "Mark notification threads as read, pinned or unread"
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
  /notifications/new:
    get:
      operationId: notify_new_available
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCount'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationCount'
          description: Number of unread notifications
      summary: Check if unread notifications exist
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
  /notifications/threads/{id}:
    get:
      operationId: notify_get_thread
      parameters:
      - description: id of notification thread
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationThread'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationThread'
          description: NotificationThread
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Get notification thread by ID
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
    patch:
      operationId: notify_read_thread
      parameters:
      - description: id of notification thread
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Status to mark notifications as
        explode: true
        in: query
        name: to-status
        required: false
        schema:
          default: read
          type: string
        style: form
      responses:
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationThread'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationThread'
          description: NotificationThread
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Mark notification thread as read by ID
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
  /org/{org}/repos:
    post:
      deprecated: true
      operationId: create_org_repo_deprecated
      parameters:
      - description: name of organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateRepoOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a repository in an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs:
    get:
      operationId: org_get_all
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: OrganizationList
      summary: Get list of organizations
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    post:
      operationId: org_create
      requestBody:
        $ref: '#/components/requestBodies/CreateOrgOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}:
    delete:
      operationId: org_delete
      parameters:
      - description: organization that is to be deleted
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_get
      parameters:
      - description: name of the organization to get
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization
      summary: Get an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    patch:
      operationId: org_edit
      parameters:
      - description: name of the organization to edit
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditOrgOption'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization
      summary: Edit an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/activities/feeds:
    get:
      operationId: org_list_activity_feeds
      parameters:
      - description: name of the org
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: the date of the activities to be found
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: ActivityFeedsList
        "404":
          description: APINotFound is a not found empty response
      summary: List an organization's activity feeds
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /orgs/{org}/hooks:
    get:
      operationId: org_list_hooks
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: HookList
      summary: List an organization's webhooks
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    post:
      operationId: org_create_hook
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateHookOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Create a hook
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/hooks/{id}:
    delete:
      operationId: org_delete_hook
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a hook
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_get_hook
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Get a hook
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    patch:
      operationId: org_edit_hook
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditHookOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Update a hook
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/labels:
    get:
      operationId: org_list_labels
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: LabelList
      summary: List an organization's labels
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    post:
      operationId: org_create_label
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateLabelOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
            text/html:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a label for an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/labels/{id}:
    delete:
      operationId: org_delete_label
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: id of the label to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a label
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_get_label
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: id of the label to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
            text/html:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label
      summary: Get a single label
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    patch:
      operationId: org_edit_label
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: id of the label to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditLabelOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
            text/html:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Update a label
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/members:
    get:
      operationId: org_list_members
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List an organization's members
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /orgs/{org}/members/{username}:
    delete:
      operationId: org_delete_member
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: member removed
      summary: Remove a member from an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_is_member
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: user is a member
        "303":
          description: "redirection to /orgs/{org}/public_members/{username}"
        "404":
          description: user is not a member
      summary: Check if a user is a member of an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /orgs/{org}/public_members:
    get:
      operationId: org_list_public_members
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List an organization's public members
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /orgs/{org}/public_members/{username}:
    delete:
      operationId: org_conceal_member
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Conceal a user's membership
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_is_public_member
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: user is a public member
        "404":
          description: user is not a public member
      summary: Check if a user is a public member of an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    put:
      operationId: org_publicize_member
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: membership publicized
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Publicize a user's membership
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /orgs/{org}/repos:
    get:
      operationId: org_list_repos
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List an organization's repos
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    post:
      operationId: create_org_repo
      parameters:
      - description: name of organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateRepoOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Create a repository in an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/teams:
    get:
      operationId: org_list_teams
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
          description: TeamList
      summary: List an organization's teams
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    post:
      operationId: org_create_team
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
            text/html:
              schema:
                $ref: '#/components/schemas/Team'
          description: Team
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /orgs/{org}/teams/search:
    get:
      operationId: team_search
      parameters:
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: keywords to search
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: include search within team description (defaults to true)
        explode: true
        in: query
        name: include_desc
        required: false
        schema:
          type: boolean
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamSearch_200_response'
          description: SearchResults of a successful search
      summary: Search for teams within an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /packages/{owner}:
    get:
      operationId: list_packages
      parameters:
      - description: owner of the packages
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: package type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - cargo
          - chef
          - composer
          - conan
          - conda
          - container
          - generic
          - helm
          - maven
          - npm
          - nuget
          - pub
          - pypi
          - rubygems
          - swift
          - vagrant
          type: string
        style: form
      - description: name filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Package'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Package'
                type: array
          description: PackageList
      summary: Gets all packages of an owner
      tags:
      - package
      x-openapi-router-controller: openapi_server.controllers.package_controller
  /packages/{owner}/{type}/{name}/{version}:
    delete:
      operationId: delete_package
      parameters:
      - description: owner of the package
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: type of the package
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name of the package
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: version of the package
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a package
      tags:
      - package
      x-openapi-router-controller: openapi_server.controllers.package_controller
    get:
      operationId: get_package
      parameters:
      - description: owner of the package
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: type of the package
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name of the package
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: version of the package
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
            text/html:
              schema:
                $ref: '#/components/schemas/Package'
          description: Package
        "404":
          description: APINotFound is a not found empty response
      summary: Gets a package
      tags:
      - package
      x-openapi-router-controller: openapi_server.controllers.package_controller
  /packages/{owner}/{type}/{name}/{version}/files:
    get:
      operationId: list_package_files
      parameters:
      - description: owner of the package
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: type of the package
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: name of the package
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: version of the package
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageFile'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PackageFile'
                type: array
          description: PackageFileList
        "404":
          description: APINotFound is a not found empty response
      summary: Gets all files of a package
      tags:
      - package
      x-openapi-router-controller: openapi_server.controllers.package_controller
  /repos/issues/search:
    get:
      operationId: issue_search_issues
      parameters:
      - description: whether issue is open or closed
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: comma separated list of labels. Fetch only issues that have any
          of this labels. Non existent labels are discarded
        explode: true
        in: query
        name: labels
        required: false
        schema:
          type: string
        style: form
      - description: comma separated list of milestone names. Fetch only issues that
          have any of this milestones. Non existent are discarded
        explode: true
        in: query
        name: milestones
        required: false
        schema:
          type: string
        style: form
      - description: search string
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: repository to prioritize in the results
        explode: true
        in: query
        name: priority_repo_id
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: filter by type (issues / pulls) if set
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Only show notifications updated after the given time. This is
          a timestamp in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show notifications updated before the given time. This is
          a timestamp in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "filter (issues / pulls) assigned to you, default is false"
        explode: true
        in: query
        name: assigned
        required: false
        schema:
          type: boolean
        style: form
      - description: "filter (issues / pulls) created by you, default is false"
        explode: true
        in: query
        name: created
        required: false
        schema:
          type: boolean
        style: form
      - description: "filter (issues / pulls) mentioning you, default is false"
        explode: true
        in: query
        name: mentioned
        required: false
        schema:
          type: boolean
        style: form
      - description: "filter pulls requesting your review, default is false"
        explode: true
        in: query
        name: review_requested
        required: false
        schema:
          type: boolean
        style: form
      - description: "filter pulls reviewed by you, default is false"
        explode: true
        in: query
        name: reviewed
        required: false
        schema:
          type: boolean
        style: form
      - description: filter by owner
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: filter by team (requires organization owner parameter to be provided)
        explode: true
        in: query
        name: team
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
          description: IssueList
      summary: Search for issues across the repositories that the user has access
        to
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/migrate:
    post:
      operationId: repo_migrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrateRepoOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "409":
          description: The repository with the same name already exists.
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Migrate a remote git repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/search:
    get:
      operationId: repo_search
      parameters:
      - description: keyword
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Limit search to repositories with keyword as topic
        explode: true
        in: query
        name: topic
        required: false
        schema:
          type: boolean
        style: form
      - description: include search of keyword within repository description
        explode: true
        in: query
        name: includeDesc
        required: false
        schema:
          type: boolean
        style: form
      - description: search only for repos that the user with the given id owns or
          contributes to
        explode: true
        in: query
        name: uid
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: repo owner to prioritize in the results
        explode: true
        in: query
        name: priority_owner_id
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: search only for repos that belong to the given team id
        explode: true
        in: query
        name: team_id
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: search only for repos that the user with the given id has starred
        explode: true
        in: query
        name: starredBy
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: include private repositories this user has access to (defaults
          to true)
        explode: true
        in: query
        name: private
        required: false
        schema:
          type: boolean
        style: form
      - description: "show only pubic, private or all repositories (defaults to all)"
        explode: true
        in: query
        name: is_private
        required: false
        schema:
          type: boolean
        style: form
      - description: include template repositories this user has access to (defaults
          to true)
        explode: true
        in: query
        name: template
        required: false
        schema:
          type: boolean
        style: form
      - description: "show only archived, non-archived or all repositories (defaults\
          \ to all)"
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: "type of repository to search for. Supported values are \"fork\"\
          , \"source\", \"mirror\" and \"collaborative\""
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      - description: "if `uid` is given, search only for repos that the user owns"
        explode: true
        in: query
        name: exclusive
        required: false
        schema:
          type: boolean
        style: form
      - description: "sort repos by attribute. Supported values are \"alpha\", \"\
          created\", \"updated\", \"size\", and \"id\". Default is \"alpha\""
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: "sort order, either \"asc\" (ascending) or \"desc\" (descending).\
          \ Default is \"asc\", ignored if \"sort\" is not specified."
        explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
            text/html:
              schema:
                $ref: '#/components/schemas/SearchResults'
          description: SearchResults
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Search for repositories
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}:
    delete:
      operationId: repo_delete
      parameters:
      - description: owner of the repo to delete
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to delete
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
      summary: Get a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit
      parameters:
      - description: owner of the repo to edit
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to edit
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditRepoOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/EditRepoOption'
        description: Properties of a repo that you can edit
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Edit a repository's properties. Only fields that are set will be changed.
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/activities/feeds:
    get:
      operationId: repo_list_activity_feeds
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: the date of the activities to be found
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: ActivityFeedsList
        "404":
          description: APINotFound is a not found empty response
      summary: List a repository's activity feeds
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/archive/{archive}:
    get:
      operationId: repo_get_archive
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: the git reference for download with attached archive format (e.g.
          master.zip)
        explode: false
        in: path
        name: archive
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: success
        "404":
          description: APINotFound is a not found empty response
      summary: Get an archive of a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/assignees:
    get:
      operationId: repo_get_assignees
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: Return all users that have write access and can be assigned to issues
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/branch_protections:
    get:
      operationId: repo_list_branch_protection
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BranchProtection'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/BranchProtection'
                type: array
          description: BranchProtectionList
      summary: List branch protections for a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_branch_protection
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBranchProtectionOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchProtection'
            text/html:
              schema:
                $ref: '#/components/schemas/BranchProtection'
          description: BranchProtection
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a branch protections for a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/branch_protections/{name}:
    delete:
      operationId: repo_delete_branch_protection
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of protected branch
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a specific branch protection for the repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_branch_protection
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of protected branch
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchProtection'
            text/html:
              schema:
                $ref: '#/components/schemas/BranchProtection'
          description: BranchProtection
        "404":
          description: APINotFound is a not found empty response
      summary: Get a specific branch protection for the repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_branch_protection
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of protected branch
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBranchProtectionOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchProtection'
            text/html:
              schema:
                $ref: '#/components/schemas/BranchProtection'
          description: BranchProtection
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Edit a branch protections for a repository. Only fields that are set
        will be changed
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/branches:
    get:
      operationId: repo_list_branches
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Branch'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Branch'
                type: array
          description: BranchList
      summary: List a repository's branches
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_branch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBranchRepoOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
            text/html:
              schema:
                $ref: '#/components/schemas/Branch'
          description: Branch
        "404":
          description: The old branch does not exist.
        "409":
          description: The branch with the same name already exists.
      summary: Create a branch
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/branches/{branch}:
    delete:
      operationId: repo_delete_branch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: branch to delete
        explode: false
        in: path
        name: branch
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a specific branch from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_branch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: branch to get
        explode: false
        in: path
        name: branch
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
            text/html:
              schema:
                $ref: '#/components/schemas/Branch'
          description: Branch
        "404":
          description: APINotFound is a not found empty response
      summary: "Retrieve a specific branch from a repository, including its effective\
        \ branch protection"
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/collaborators:
    get:
      operationId: repo_list_collaborators
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List a repository's collaborators
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/collaborators/{collaborator}:
    delete:
      operationId: repo_delete_collaborator
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: username of the collaborator to delete
        explode: false
        in: path
        name: collaborator
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a collaborator from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_check_collaborator
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: username of the collaborator
        explode: false
        in: path
        name: collaborator
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Check if a user is a collaborator of a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    put:
      operationId: repo_add_collaborator
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: username of the collaborator to add
        explode: false
        in: path
        name: collaborator
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCollaboratorOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/AddCollaboratorOption'
        x-body-name: body
      responses:
        "204":
          description: APIEmpty is an empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a collaborator to a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/collaborators/{collaborator}/permission:
    get:
      operationId: repo_get_repo_permissions
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: username of the collaborator
        explode: false
        in: path
        name: collaborator
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCollaboratorPermission'
            text/html:
              schema:
                $ref: '#/components/schemas/RepoCollaboratorPermission'
          description: RepoCollaboratorPermission
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Get repository permissions for a user
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/commits:
    get:
      operationId: repo_get_all_commits
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: SHA or branch to start listing commits from (usually 'master')
        explode: true
        in: query
        name: sha
        required: false
        schema:
          type: string
        style: form
      - description: filepath of a file/dir
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: "include diff stats for every commit (disable for speedup, default\
          \ 'true')"
        explode: true
        in: query
        name: stat
        required: false
        schema:
          type: boolean
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results (ignored if used with 'path')
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Commit'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Commit'
                type: array
          description: CommitList
          headers:
            X-HasMore:
              description: True if there is another page
              explode: false
              schema:
                type: boolean
              style: simple
            X-Page:
              description: The current page
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-PageCount:
              description: Total number of pages
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-PerPage:
              description: Commits per page
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-Total:
              description: Total commit count
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            text/html:
              schema:
                $ref: '#/components/schemas/APIError'
          description: EmptyRepository
      summary: Get a list of all commits from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/commits/{ref}/status:
    get:
      operationId: repo_get_combined_status_by_ref
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of branch/tag/commit
        explode: false
        in: path
        name: ref
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/CombinedStatus'
          description: CombinedStatus
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: "Get a commit's combined status, by branch/tag/commit reference"
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/commits/{ref}/statuses:
    get:
      operationId: repo_list_statuses_by_ref
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of branch/tag/commit
        explode: false
        in: path
        name: ref
        required: true
        schema:
          type: string
        style: simple
      - description: type of sort
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - oldest
          - recentupdate
          - leastupdate
          - leastindex
          - highestindex
          type: string
        style: form
      - description: type of state
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - pending
          - success
          - error
          - failure
          - warning
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommitStatus'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/CommitStatus'
                type: array
          description: CommitStatusList
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: "Get a commit's statuses, by branch/tag/commit reference"
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/contents:
    get:
      operationId: repo_get_contents_list
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the commit/branch/tag. Default the repository’s default
          branch (usually master)
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentsResponse'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ContentsResponse'
                type: array
          description: ContentsListResponse
        "404":
          description: APINotFound is a not found empty response
      summary: Gets the metadata of all the entries of the root dir
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/contents/{filepath}:
    delete:
      operationId: repo_delete_file
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: path of the file to delete
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFileOptions'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
          description: FileDeleteResponse
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a file in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
    get:
      operationId: repo_get_contents
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "path of the dir, file, symlink or submodule in the repo"
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the commit/branch/tag. Default the repository’s default
          branch (usually master)
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/ContentsResponse'
          description: ContentsResponse
        "404":
          description: APINotFound is a not found empty response
      summary: "Gets the metadata and contents (if a file) of an entry in a repository,\
        \ or a list of entries if a dir"
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_file
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: path of the file to create
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileOptions'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: FileResponse
        "403":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a file in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
    put:
      operationId: repo_update_file
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: path of the file to update
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateFileOptions'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: FileResponse
        "403":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Update a file in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/diffpatch:
    post:
      operationId: repo_apply_diff_patch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateFileOptions'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: FileResponse
      summary: Apply diff patch to repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/editorconfig/{filepath}:
    get:
      operationId: repo_get_editor_config
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: filepath of file to get
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the commit/branch/tag. Default the repository’s default
          branch (usually master)
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: success
        "404":
          description: APINotFound is a not found empty response
      summary: Get the EditorConfig definitions of a file in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/forks:
    get:
      operationId: list_forks
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List a repository's forks
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: create_fork
      parameters:
      - description: owner of the repo to fork
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to fork
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForkOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateForkOption'
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "409":
          description: The repository with the same name already exists.
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Fork a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/git/blobs/{sha}:
    get:
      operationId: get_blob
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: sha of the commit
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitBlobResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/GitBlobResponse'
          description: GitBlobResponse
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Gets the blob of a repository.
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/commits/{sha}:
    get:
      operationId: repo_get_single_commit
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: a git ref or commit sha
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
            text/html:
              schema:
                $ref: '#/components/schemas/Commit'
          description: Commit
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get a single commit from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/commits/{sha}.{diffType}:
    get:
      operationId: repo_download_commit_diff_or_patch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: SHA of the commit to get
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      - description: whether the output is diff or patch
        explode: false
        in: path
        name: diffType
        required: true
        schema:
          enum:
          - diff
          - patch
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: APIString is a string response
        "404":
          description: APINotFound is a not found empty response
      summary: Get a commit's diff or patch
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/notes/{sha}:
    get:
      operationId: repo_get_note
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: a git ref or commit sha
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
            text/html:
              schema:
                $ref: '#/components/schemas/Note'
          description: Note
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get a note corresponding to a single commit from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/refs:
    get:
      operationId: repo_list_all_git_refs
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reference'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Reference'
                type: array
          description: ReferenceList
        "404":
          description: APINotFound is a not found empty response
      summary: Get specified ref or filtered repository's refs
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/refs/{ref}:
    get:
      operationId: repo_list_git_refs
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: part or full name of the ref
        explode: false
        in: path
        name: ref
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reference'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Reference'
                type: array
          description: ReferenceList
        "404":
          description: APINotFound is a not found empty response
      summary: Get specified ref or filtered repository's refs
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/tags/{sha}:
    get:
      operationId: get_annotated_tag
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "sha of the tag. The Git tags API only supports annotated tag\
          \ objects, not lightweight tags."
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotatedTag'
            text/html:
              schema:
                $ref: '#/components/schemas/AnnotatedTag'
          description: AnnotatedTag
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Gets the tag object of an annotated tag (not lightweight tags)
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/git/trees/{sha}:
    get:
      operationId: get_tree
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: sha of the commit
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      - description: show all directories and files
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          type: boolean
        style: form
      - description: "page number; the 'truncated' field in the response will be true\
          \ if there are still more items after this page, false if the last page"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: number of items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitTreeResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/GitTreeResponse'
          description: GitTreeResponse
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Gets the tree of a repository.
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/hooks:
    get:
      operationId: repo_list_hooks
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: HookList
      summary: List the hooks in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHookOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Create a hook
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/hooks/git:
    get:
      operationId: repo_list_git_hooks
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitHook'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/GitHook'
                type: array
          description: GitHookList
      summary: List the Git hooks in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/hooks/git/{id}:
    delete:
      operationId: repo_delete_git_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a Git hook in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_git_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHook'
            text/html:
              schema:
                $ref: '#/components/schemas/GitHook'
          description: GitHook
        "404":
          description: APINotFound is a not found empty response
      summary: Get a Git hook
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_git_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditGitHookOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/EditGitHookOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHook'
            text/html:
              schema:
                $ref: '#/components/schemas/GitHook'
          description: GitHook
        "404":
          description: APINotFound is a not found empty response
      summary: Edit a Git hook in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/hooks/{id}:
    delete:
      operationId: repo_delete_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a hook in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
        "404":
          description: APINotFound is a not found empty response
      summary: Get a hook
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the hook
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditHookOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/EditHookOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Edit a hook in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/hooks/{id}/tests:
    post:
      operationId: repo_test_hook
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the hook to test
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The name of the commit/branch/tag, indicates which commit will\
          \ be loaded to the webhook payload."
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Test a push webhook
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/issue_config:
    get:
      operationId: repo_get_issue_config
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueConfig'
            text/html:
              schema:
                $ref: '#/components/schemas/IssueConfig'
          description: RepoIssueConfig
      summary: Returns the issue config for a repo
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/issue_config/validate:
    get:
      operationId: repo_validate_issue_config
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueConfigValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/IssueConfigValidation'
          description: RepoIssueConfigValidation
      summary: Returns the validation information for a issue config
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/issue_templates:
    get:
      operationId: repo_get_issue_templates
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IssueTemplate'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/IssueTemplate'
                type: array
          description: IssueTemplates
      summary: Get available issue templates for a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/issues:
    get:
      operationId: issue_list_issues
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: whether issue is open or closed
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - closed
          - open
          - all
          type: string
        style: form
      - description: comma separated list of labels. Fetch only issues that have any
          of this labels. Non existent labels are discarded
        explode: true
        in: query
        name: labels
        required: false
        schema:
          type: string
        style: form
      - description: search string
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: filter by type (issues / pulls) if set
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - issues
          - pulls
          type: string
        style: form
      - description: comma separated list of milestone names or ids. It uses names
          and fall back to ids. Fetch only issues that have any of this milestones.
          Non existent milestones are discarded
        explode: true
        in: query
        name: milestones
        required: false
        schema:
          type: string
        style: form
      - description: Only show items updated after the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show items updated before the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show items which were created by the the given user
        explode: true
        in: query
        name: created_by
        required: false
        schema:
          type: string
        style: form
      - description: Only show items for which the given user is assigned
        explode: true
        in: query
        name: assigned_by
        required: false
        schema:
          type: string
        style: form
      - description: Only show items in which the given user was mentioned
        explode: true
        in: query
        name: mentioned_by
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
          description: IssueList
      summary: List a repository's issues
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_issue
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "412":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: "Create an issue. If using deadline only the date will be taken into\
        \ account, and time of day ignored."
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/comments:
    get:
      operationId: issue_get_repo_comments
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "if provided, only comments updated since the provided time are\
          \ returned."
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "if provided, only comments updated before the provided time\
          \ are returned."
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: CommentList
      summary: List all comments in a repository
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/comments/{id}:
    delete:
      operationId: issue_delete_comment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of comment to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a comment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_comment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            text/html:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Get a comment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      operationId: issue_edit_comment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditIssueCommentOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            text/html:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Edit a comment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/comments/{id}/assets:
    get:
      operationId: issue_list_issue_comment_attachments
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: AttachmentList
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List comment's attachments
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_issue_comment_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: name of the attachment
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/issueCreateIssueCommentAttachment'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a comment attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}:
    delete:
      operationId: issue_delete_issue_comment_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to delete
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a comment attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_issue_comment_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to get
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get a comment attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      operationId: issue_edit_issue_comment_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to edit
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditAttachmentOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Edit a comment attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/comments/{id}/reactions:
    delete:
      operationId: issue_delete_comment_reaction
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditReactionOption'
        x-body-name: body
      responses:
        "200":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Remove a reaction from a comment of an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
    get:
      operationId: issue_get_comment_reactions
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reaction'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Reaction'
                type: array
          description: ReactionList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get a list of reactions from a comment of an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_post_comment_reaction
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the comment to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditReactionOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
            text/html:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: Reaction
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
            text/html:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: Reaction
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a reaction to a comment of an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}:
    delete:
      operationId: issue_delete
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of issue to delete
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_issue
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to get
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
        "404":
          description: APINotFound is a not found empty response
      summary: Get an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      operationId: issue_edit_issue
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to edit
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditIssueOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "412":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: "Edit an issue. If using deadline only the date will be taken into\
        \ account, and time of day ignored."
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/assets:
    get:
      operationId: issue_list_issue_attachments
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: AttachmentList
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List issue's attachments
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_issue_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: name of the attachment
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/issueCreateIssueCommentAttachment'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create an issue attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}:
    delete:
      operationId: issue_delete_issue_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to delete
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete an issue attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_issue_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to get
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get an issue attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      operationId: issue_edit_issue_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to edit
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditAttachmentOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "404":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Edit an issue attachment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/blocks:
    delete:
      operationId: issue_remove_issue_blocking
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IssueMeta'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
      summary: Unblock the issue given in the body by the issue in path
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
    get:
      operationId: issue_list_blocks
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
          description: IssueList
      summary: List issues that are blocked by this issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_issue_blocking
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IssueMeta'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
        "404":
          description: the issue does not exist
      summary: Block the issue given in the body by the issue in path
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/comments:
    get:
      operationId: issue_get_comments
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "if provided, only comments updated since the specified time\
          \ are returned."
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "if provided, only comments updated before the provided time\
          \ are returned."
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: CommentList
      summary: List all comments on an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_comment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueCommentOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            text/html:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a comment to an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/comments/{id}:
    delete:
      deprecated: true
      operationId: issue_delete_comment_deprecated
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: this parameter is ignored
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: integer
        style: simple
      - description: id of comment to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a comment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      deprecated: true
      operationId: issue_edit_comment_deprecated
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: this parameter is ignored
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: integer
        style: simple
      - description: id of the comment to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditIssueCommentOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            text/html:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Edit a comment
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/deadline:
    post:
      operationId: issue_edit_issue_deadline
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to create or update a deadline on
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDeadlineOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueDeadline'
            text/html:
              schema:
                $ref: '#/components/schemas/IssueDeadline'
          description: IssueDeadline
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: "Set an issue deadline. If set to null, the deadline is deleted. If\
        \ using deadline only the date will be taken into account, and time of day\
        \ ignored."
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/dependencies:
    delete:
      operationId: issue_remove_issue_dependencies
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IssueMeta'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
      summary: Remove an issue dependency
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
    get:
      operationId: issue_list_issue_dependencies
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
          description: IssueList
      summary: "List an issue's dependencies, i.e all issues that block this issue."
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_issue_dependencies
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IssueMeta'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
            text/html:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Issue
        "404":
          description: the issue does not exist
      summary: Make the issue in the url depend on the issue in the form.
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/labels:
    delete:
      operationId: issue_clear_labels
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Remove all labels from an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_labels
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: LabelList
        "404":
          description: APINotFound is a not found empty response
      summary: Get an issue's labels
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_add_label
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IssueLabelsOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: LabelList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a label to an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
    put:
      operationId: issue_replace_labels
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IssueLabelsOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: LabelList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Replace an issue's labels
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/labels/{id}:
    delete:
      operationId: issue_remove_label
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the label to remove
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Remove a label from an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/reactions:
    delete:
      operationId: issue_delete_issue_reaction
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditReactionOption'
        x-body-name: body
      responses:
        "200":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Remove a reaction from an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
    get:
      operationId: issue_get_issue_reactions
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reaction'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Reaction'
                type: array
          description: ReactionList
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get a list reactions of an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_post_issue_reaction
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditReactionOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
            text/html:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: Reaction
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
            text/html:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: Reaction
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a reaction to an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/stopwatch/delete:
    delete:
      operationId: issue_delete_stop_watch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to stop the stopwatch on
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: "Not repo writer, user does not have rights to toggle stopwatch"
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: Cannot cancel a non existent stopwatch
      summary: Delete an issue's existing stopwatch.
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/stopwatch/start:
    post:
      operationId: issue_start_stop_watch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to create the stopwatch on
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "201":
          description: APIEmpty is an empty response
        "403":
          description: "Not repo writer, user does not have rights to toggle stopwatch"
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: Cannot start a stopwatch again if it already exists
      summary: Start stopwatch on an issue.
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/stopwatch/stop:
    post:
      operationId: issue_stop_stop_watch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to stop the stopwatch on
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "201":
          description: APIEmpty is an empty response
        "403":
          description: "Not repo writer, user does not have rights to toggle stopwatch"
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: Cannot stop a non existent stopwatch
      summary: Stop an issue's existing stopwatch.
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/subscriptions:
    get:
      operationId: issue_subscriptions
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
        "404":
          description: APINotFound is a not found empty response
      summary: Get users who subscribed on an issue.
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/subscriptions/check:
    get:
      operationId: issue_check_subscription
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchInfo'
            text/html:
              schema:
                $ref: '#/components/schemas/WatchInfo'
          description: WatchInfo
        "404":
          description: APINotFound is a not found empty response
      summary: Check if user is subscribed to an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/subscriptions/{user}:
    delete:
      operationId: issue_delete_subscription
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: user witch unsubscribe
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Already unsubscribed
        "201":
          description: Successfully Unsubscribed
        "304":
          description: User can only subscribe itself if he is no admin
        "404":
          description: APINotFound is a not found empty response
      summary: Unsubscribe user from issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    put:
      operationId: issue_add_subscription
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: user to subscribe
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Already subscribed
        "201":
          description: Successfully Subscribed
        "304":
          description: User can only subscribe itself if he is no admin
        "404":
          description: APINotFound is a not found empty response
      summary: Subscribe user to issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/timeline:
    get:
      operationId: issue_get_comments_and_timeline
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "if provided, only comments updated since the specified time\
          \ are returned."
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "if provided, only comments updated before the provided time\
          \ are returned."
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimelineComment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/TimelineComment'
                type: array
          description: TimelineList
      summary: List all comments and events on an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/issues/{index}/times:
    delete:
      operationId: issue_reset_time
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue to add tracked time to
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Reset a tracked time of an issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_tracked_times
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: optional filter by user (available for issue managers)
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      - description: Only show times updated after the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show times updated before the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
          description: TrackedTimeList
        "404":
          description: APINotFound is a not found empty response
      summary: List an issue's tracked times
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_add_time
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTimeOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackedTime'
            text/html:
              schema:
                $ref: '#/components/schemas/TrackedTime'
          description: TrackedTime
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add tracked time to a issue
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/issues/{index}/times/{id}:
    delete:
      operationId: issue_delete_time
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the issue
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of time to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete specific tracked time
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
  /repos/{owner}/{repo}/keys:
    get:
      operationId: repo_list_keys
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: the key_id to search for
        explode: true
        in: query
        name: key_id
        required: false
        schema:
          type: integer
        style: form
      - description: fingerprint of the key
        explode: true
        in: query
        name: fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeployKey'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/DeployKey'
                type: array
          description: DeployKeyList
      summary: List a repository's keys
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_key
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateKeyOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployKey'
            text/html:
              schema:
                $ref: '#/components/schemas/DeployKey'
          description: DeployKey
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a key to a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/keys/{id}:
    delete:
      operationId: repo_delete_key
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the key to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a key from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_key
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the key to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployKey'
            text/html:
              schema:
                $ref: '#/components/schemas/DeployKey'
          description: DeployKey
      summary: Get a repository's key by id
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/labels:
    get:
      operationId: issue_list_labels
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: LabelList
      summary: Get all of a repository's labels
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_label
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateLabelOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
            text/html:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a label
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/labels/{id}:
    delete:
      operationId: issue_delete_label
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the label to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a label
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_label
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the label to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
            text/html:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label
      summary: Get a single label
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      operationId: issue_edit_label
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the label to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditLabelOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
            text/html:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Update a label
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/languages:
    get:
      operationId: repo_get_languages
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
            text/html:
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
          description: LanguageStatistics
        "404":
          description: APINotFound is a not found empty response
      summary: Get languages and number of bytes of code written
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/media/{filepath}:
    get:
      operationId: repo_get_raw_file_or_lfs
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: filepath of the file to get
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the commit/branch/tag. Default the repository’s default
          branch (usually master)
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns raw file content.
        "404":
          description: APINotFound is a not found empty response
      summary: Get a file or it's LFS object from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/milestones:
    get:
      operationId: issue_get_milestones_list
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "Milestone state, Recognized values are open, closed and all.\
          \ Defaults to \"open\""
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: filter by milestone name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Milestone'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Milestone'
                type: array
          description: MilestoneList
      summary: Get all of a repository's opened milestones
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    post:
      operationId: issue_create_milestone
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMilestoneOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
            text/html:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Milestone
      summary: Create a milestone
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/milestones/{id}:
    delete:
      operationId: issue_delete_milestone
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "the milestone to delete, identified by ID and if not available\
          \ by name"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a milestone
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    get:
      operationId: issue_get_milestone
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "the milestone to get, identified by ID and if not available\
          \ by name"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
            text/html:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Milestone
      summary: Get a milestone
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
    patch:
      operationId: issue_edit_milestone
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "the milestone to edit, identified by ID and if not available\
          \ by name"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMilestoneOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
            text/html:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Milestone
      summary: Update a milestone
      tags:
      - issue
      x-openapi-router-controller: openapi_server.controllers.issue_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/mirror-sync:
    post:
      operationId: repo_mirror_sync
      parameters:
      - description: owner of the repo to sync
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to sync
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Sync a mirrored repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/notifications:
    get:
      operationId: notify_get_repo_list
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "If true, show notifications marked as read. Default value is\
          \ false"
        explode: true
        in: query
        name: all
        required: false
        schema:
          type: boolean
        style: form
      - description: "Show notifications with the provided status types. Options are:\
          \ unread, read and/or pinned. Defaults to unread & pinned"
        explode: true
        in: query
        name: status-types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter notifications by subject type
        explode: true
        in: query
        name: subject-type
        required: false
        schema:
          items:
            enum:
            - issue
            - pull
            - commit
            - repository
            type: string
          type: array
        style: form
      - description: Only show notifications updated after the given time. This is
          a timestamp in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show notifications updated before the given time. This is
          a timestamp in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
          description: NotificationThreadList
      summary: List users's notification threads on a specific repo
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
    put:
      operationId: notify_read_repo_list
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "If true, mark all notifications on this repo. Default value\
          \ is false"
        explode: true
        in: query
        name: all
        required: false
        schema:
          type: string
        style: form
      - description: "Mark notifications with the provided status types. Options are:\
          \ unread, read and/or pinned. Defaults to unread."
        explode: true
        in: query
        name: status-types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Status to mark notifications as. Defaults to read.
        explode: true
        in: query
        name: to-status
        required: false
        schema:
          type: string
        style: form
      - description: Describes the last point that notifications were checked. Anything
          updated since this time will not be updated.
        explode: true
        in: query
        name: last_read_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "205":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationThread'
                type: array
          description: NotificationThreadList
      summary: "Mark notification threads as read, pinned or unread on a specific\
        \ repo"
      tags:
      - notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
  /repos/{owner}/{repo}/pulls:
    get:
      operationId: repo_list_pull_requests
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "State of pull request: open or closed (optional)"
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - closed
          - open
          - all
          type: string
        style: form
      - description: Type of sort
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - oldest
          - recentupdate
          - leastupdate
          - mostcomment
          - leastcomment
          - priority
          type: string
        style: form
      - description: ID of the milestone
        explode: true
        in: query
        name: milestone
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Label IDs
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PullRequest'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PullRequest'
                type: array
          description: PullRequestList
      summary: List a repo's pull requests
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_pull_request
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePullRequestOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: PullRequest
        "409":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}:
    get:
      operationId: repo_get_pull_request
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to get
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: PullRequest
        "404":
          description: APINotFound is a not found empty response
      summary: Get a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_pull_request
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to edit
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPullRequestOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: PullRequest
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "409":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "412":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: "Update a pull request. If using deadline only the date will be taken\
        \ into account, and time of day ignored."
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}.{diffType}:
    get:
      operationId: repo_download_pull_diff_or_patch
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to get
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: whether the output is diff or patch
        explode: false
        in: path
        name: diffType
        required: true
        schema:
          enum:
          - diff
          - patch
          type: string
        style: simple
      - description: "whether to include binary file changes. if true, the diff is\
          \ applicable with `git apply`"
        explode: true
        in: query
        name: binary
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: APIString is a string response
        "404":
          description: APINotFound is a not found empty response
      summary: Get a pull request diff or patch
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/pulls/{index}/commits:
    get:
      operationId: repo_get_pull_request_commits
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to get
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Commit'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Commit'
                type: array
          description: CommitList
          headers:
            X-HasMore:
              description: True if there is another page
              explode: false
              schema:
                type: boolean
              style: simple
            X-Page:
              description: The current page
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-PageCount:
              description: Total number of pages
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-PerPage:
              description: Commits per page
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-Total:
              description: Total commit count
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Get commits for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/pulls/{index}/files:
    get:
      operationId: repo_get_pull_request_files
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to get
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: skip to given file
        explode: true
        in: query
        name: skip-to
        required: false
        schema:
          type: string
        style: form
      - description: whitespace behavior
        explode: true
        in: query
        name: whitespace
        required: false
        schema:
          enum:
          - ignore-all
          - ignore-change
          - ignore-eol
          - show-all
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChangedFile'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/ChangedFile'
                type: array
          description: ChangedFileList
          headers:
            X-HasMore:
              description: True if there is another page
              explode: false
              schema:
                type: boolean
              style: simple
            X-Page:
              description: The current page
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-PageCount:
              description: Total number of pages
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-PerPage:
              description: Commits per page
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
            X-Total:
              description: Total commit count
              explode: false
              schema:
                format: int64
                type: integer
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Get changed files for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/pulls/{index}/merge:
    delete:
      operationId: repo_cancel_scheduled_auto_merge
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to merge
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Cancel the scheduled auto merge for the given pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_pull_request_is_merged
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: pull request has been merged
        "404":
          description: pull request has not been merged
      summary: Check if a pull request has been merged
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_merge_pull_request
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to merge
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergePullRequestOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/MergePullRequestOption'
        x-body-name: body
      responses:
        "200":
          description: APIEmpty is an empty response
        "405":
          description: APIEmpty is an empty response
        "409":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Merge a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}/requested_reviewers:
    delete:
      operationId: repo_delete_pull_review_requests
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PullReviewRequestOptions'
        x-body-name: body
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: cancel review requests for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
    post:
      operationId: repo_create_pull_review_requests
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PullReviewRequestOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PullReview'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PullReview'
                type: array
          description: PullReviewList
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: create review requests for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}/reviews:
    get:
      operationId: repo_list_pull_reviews
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PullReview'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PullReview'
                type: array
          description: PullReviewList
        "404":
          description: APINotFound is a not found empty response
      summary: List all reviews for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_pull_review
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePullReviewOptions'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreatePullReviewOptions'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullReview'
            text/html:
              schema:
                $ref: '#/components/schemas/PullReview'
          description: PullReview
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a review to an pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}/reviews/{id}:
    delete:
      operationId: repo_delete_pull_review
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the review
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a specific review from a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_pull_review
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the review
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullReview'
            text/html:
              schema:
                $ref: '#/components/schemas/PullReview'
          description: PullReview
        "404":
          description: APINotFound is a not found empty response
      summary: Get a specific review for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_submit_pull_review
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the review
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPullReviewOptions'
          text/plain:
            schema:
              $ref: '#/components/schemas/SubmitPullReviewOptions'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullReview'
            text/html:
              schema:
                $ref: '#/components/schemas/PullReview'
          description: PullReview
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Submit a pending review to an pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}/reviews/{id}/comments:
    get:
      operationId: repo_get_pull_review_comments
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the review
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PullReviewComment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PullReviewComment'
                type: array
          description: PullCommentList
        "404":
          description: APINotFound is a not found empty response
      summary: Get a specific review for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/pulls/{index}/reviews/{id}/dismissals:
    post:
      operationId: repo_dismiss_pull_review
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the review
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissPullReviewOptions'
          text/plain:
            schema:
              $ref: '#/components/schemas/DismissPullReviewOptions'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullReview'
            text/html:
              schema:
                $ref: '#/components/schemas/PullReview'
          description: PullReview
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Dismiss a review for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/pulls/{index}/reviews/{id}/undismissals:
    post:
      operationId: repo_un_dismiss_pull_review
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the review
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullReview'
            text/html:
              schema:
                $ref: '#/components/schemas/PullReview'
          description: PullReview
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Cancel to dismiss a review for a pull request
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/pulls/{index}/update:
    post:
      operationId: repo_update_pull_request
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: index of the pull request to get
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: how to update pull request
        explode: true
        in: query
        name: style
        required: false
        schema:
          enum:
          - merge
          - rebase
          type: string
        style: form
      responses:
        "200":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Merge PR's baseBranch into headBranch
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/push_mirrors:
    get:
      operationId: repo_list_push_mirrors
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PushMirror'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PushMirror'
                type: array
          description: PushMirrorList
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get all push mirrors of the repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_add_push_mirror
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePushMirrorOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushMirror'
            text/html:
              schema:
                $ref: '#/components/schemas/PushMirror'
          description: PushMirror
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: add a push mirror to the repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/push_mirrors-sync:
    post:
      operationId: repo_push_mirror_sync
      parameters:
      - description: owner of the repo to sync
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to sync
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: APIEmpty is an empty response
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Sync all push mirrored repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/push_mirrors/{name}:
    delete:
      operationId: repo_delete_push_mirror
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: remote name of the pushMirror
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: deletes a push mirror from a repository by remoteName
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_push_mirror_by_remote_name
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: remote name of push mirror
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushMirror'
            text/html:
              schema:
                $ref: '#/components/schemas/PushMirror'
          description: PushMirror
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get push mirror of the repository by remoteName
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/raw/{filepath}:
    get:
      operationId: repo_get_raw_file
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: filepath of the file to get
        explode: false
        in: path
        name: filepath
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the commit/branch/tag. Default the repository’s default
          branch (usually master)
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns raw file content.
        "404":
          description: APINotFound is a not found empty response
      summary: Get a file from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/releases:
    get:
      operationId: repo_list_releases
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: "filter (exclude / include) drafts, if you dont have repo write\
          \ access none will show"
        explode: true
        in: query
        name: draft
        required: false
        schema:
          type: boolean
        style: form
      - description: filter (exclude / include) pre-releases
        explode: true
        in: query
        name: pre-release
        required: false
        schema:
          type: boolean
        style: form
      - description: "page size of results, deprecated - use limit"
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Release'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Release'
                type: array
          description: ReleaseList
      summary: List a repo's releases
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_release
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReleaseOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
            text/html:
              schema:
                $ref: '#/components/schemas/Release'
          description: Release
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a release
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/releases/latest:
    get:
      operationId: repo_get_latest_release
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
            text/html:
              schema:
                $ref: '#/components/schemas/Release'
          description: Release
        "404":
          description: APINotFound is a not found empty response
      summary: "Gets the most recent non-prerelease, non-draft release of a repository,\
        \ sorted by created_at"
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/releases/tags/{tag}:
    delete:
      operationId: repo_delete_release_by_tag
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: tag name of the release to delete
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
        "405":
          description: APIEmpty is an empty response
      summary: Delete a release by tag name
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_release_by_tag
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: tag name of the release to get
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
            text/html:
              schema:
                $ref: '#/components/schemas/Release'
          description: Release
        "404":
          description: APINotFound is a not found empty response
      summary: Get a release by tag name
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/releases/{id}:
    delete:
      operationId: repo_delete_release
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
        "405":
          description: APIEmpty is an empty response
      summary: Delete a release
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_release
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
            text/html:
              schema:
                $ref: '#/components/schemas/Release'
          description: Release
        "404":
          description: APINotFound is a not found empty response
      summary: Get a release
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_release
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditReleaseOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
            text/html:
              schema:
                $ref: '#/components/schemas/Release'
          description: Release
        "404":
          description: APINotFound is a not found empty response
      summary: Update a release
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/releases/{id}/assets:
    get:
      operationId: repo_list_release_attachments
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: AttachmentList
      summary: List release's attachments
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_release_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: name of the attachment
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/issueCreateIssueCommentAttachment'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a release attachment
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}:
    delete:
      operationId: repo_delete_release_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to delete
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a release attachment
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_release_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to get
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
      summary: Get a release attachment
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_release_attachment
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: id of the release
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: id of the attachment to edit
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditAttachmentOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/html:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment
      summary: Edit a release attachment
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/reviewers:
    get:
      operationId: repo_get_reviewers
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: Return all users that can be requested to review in this repo
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/signing-key.gpg:
    get:
      operationId: repo_signing_key
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: GPG armored public key
      summary: Get signing-key.gpg for given repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/stargazers:
    get:
      operationId: repo_list_stargazers
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List a repo's stargazers
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/statuses/{sha}:
    get:
      operationId: repo_list_statuses
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: sha of the commit
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      - description: type of sort
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - oldest
          - recentupdate
          - leastupdate
          - leastindex
          - highestindex
          type: string
        style: form
      - description: type of state
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - pending
          - success
          - error
          - failure
          - warning
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommitStatus'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/CommitStatus'
                type: array
          description: CommitStatusList
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Get a commit's statuses
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_status
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: sha of the commit
        explode: false
        in: path
        name: sha
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStatusOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateStatusOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/CommitStatus'
          description: CommitStatus
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a commit status
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/subscribers:
    get:
      operationId: repo_list_subscribers
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List a repo's watchers
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/subscription:
    delete:
      operationId: user_current_delete_subscription
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Unwatch a repo
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: user_current_check_subscription
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchInfo'
            text/html:
              schema:
                $ref: '#/components/schemas/WatchInfo'
          description: WatchInfo
        "404":
          description: User is not watching this repo or repo do not exist
      summary: Check if the current user is watching a repo
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    put:
      operationId: user_current_put_subscription
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchInfo'
            text/html:
              schema:
                $ref: '#/components/schemas/WatchInfo'
          description: WatchInfo
      summary: Watch a repo
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/tags:
    get:
      operationId: repo_list_tags
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: "page size of results, default maximum page size is 50"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: TagList
      summary: List a repository's tags
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    post:
      operationId: repo_create_tag
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateTagOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Tag
        "404":
          description: APINotFound is a not found empty response
        "405":
          description: APIEmpty is an empty response
        "409":
          description: APIConflict is a conflict empty response
      summary: Create a new git tag in a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/tags/{tag}:
    delete:
      operationId: repo_delete_tag
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of tag to delete
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
        "405":
          description: APIEmpty is an empty response
        "409":
          description: APIConflict is a conflict empty response
      summary: Delete a repository's tag by name
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_tag
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of tag
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Tag
        "404":
          description: APINotFound is a not found empty response
      summary: Get the tag of a repository by tag name
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/teams:
    get:
      operationId: repo_list_teams
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
          description: TeamList
      summary: List a repository's teams
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/teams/{team}:
    delete:
      operationId: repo_delete_team
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: team name
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "405":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a team from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_check_team
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: team name
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
            text/html:
              schema:
                $ref: '#/components/schemas/Team'
          description: Team
        "404":
          description: APINotFound is a not found empty response
        "405":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Check if a team is assigned to a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    put:
      operationId: repo_add_team
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: team name
        explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "405":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a team to a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/times:
    get:
      operationId: repo_tracked_times
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: optional filter by user (available for issue managers)
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      - description: Only show times updated after the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show times updated before the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
          description: TrackedTimeList
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List a repo's tracked times
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/times/{user}:
    get:
      deprecated: true
      operationId: user_tracked_times
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: username of user
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
          description: TrackedTimeList
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: List a user's tracked times in a repo
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/topics:
    get:
      operationId: repo_list_topics
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicName'
            text/html:
              schema:
                $ref: '#/components/schemas/TopicName'
          description: TopicNames
      summary: Get list of topics that a repository has
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    put:
      operationId: repo_update_topics
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoTopicOptions'
          text/plain:
            schema:
              $ref: '#/components/schemas/RepoTopicOptions'
        x-body-name: body
      responses:
        "204":
          description: APIEmpty is an empty response
        "422":
          description: APIInvalidTopicsError is error format response to invalid topics
          headers:
            invalidTopics:
              explode: false
              schema:
                items:
                  type: string
                type: array
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
      summary: Replace list of topics for a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/topics/{topic}:
    delete:
      operationId: repo_delete_topic
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of the topic to delete
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "422":
          description: APIInvalidTopicsError is error format response to invalid topics
          headers:
            invalidTopics:
              explode: false
              schema:
                items:
                  type: string
                type: array
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete a topic from a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    put:
      operationId: repo_add_topic
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of the topic to add
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "422":
          description: APIInvalidTopicsError is error format response to invalid topics
          headers:
            invalidTopics:
              explode: false
              schema:
                items:
                  type: string
                type: array
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a topic to a repository
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/transfer:
    post:
      operationId: repo_transfer
      parameters:
      - description: owner of the repo to transfer
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to transfer
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRepoOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/TransferRepoOption'
        description: Transfer Options
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Transfer a repo ownership
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/transfer/accept:
    post:
      operationId: accept_repo_transfer
      parameters:
      - description: owner of the repo to transfer
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to transfer
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Accept a repo transfer
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/transfer/reject:
    post:
      operationId: reject_repo_transfer
      parameters:
      - description: owner of the repo to transfer
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to transfer
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Reject a repo transfer
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/wiki/new:
    post:
      operationId: repo_create_wiki_page
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateWikiPageOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
            text/html:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: WikiPage
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a wiki page
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/wiki/page/{pageName}:
    delete:
      operationId: repo_delete_wiki_page
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of the page
        explode: false
        in: path
        name: pageName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a wiki page
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    get:
      operationId: repo_get_wiki_page
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of the page
        explode: false
        in: path
        name: pageName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
            text/html:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: WikiPage
        "404":
          description: APINotFound is a not found empty response
      summary: Get a wiki page
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
    patch:
      operationId: repo_edit_wiki_page
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of the page
        explode: false
        in: path
        name: pageName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateWikiPageOptions'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
            text/html:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: WikiPage
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Edit a wiki page
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repos/{owner}/{repo}/wiki/pages:
    get:
      operationId: repo_get_wiki_pages
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WikiPageMetaData'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/WikiPageMetaData'
                type: array
          description: WikiPageList
        "404":
          description: APINotFound is a not found empty response
      summary: Get all wiki pages
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{owner}/{repo}/wiki/revisions/{pageName}:
    get:
      operationId: repo_get_wiki_page_revisions
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      - description: name of the page
        explode: false
        in: path
        name: pageName
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiCommitList'
            text/html:
              schema:
                $ref: '#/components/schemas/WikiCommitList'
          description: WikiCommitList
        "404":
          description: APINotFound is a not found empty response
      summary: Get revisions of a wiki page
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /repos/{template_owner}/{template_repo}/generate:
    post:
      operationId: generate_repo
      parameters:
      - description: name of the template repository owner
        explode: false
        in: path
        name: template_owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the template repository
        explode: false
        in: path
        name: template_repo
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRepoOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
        "409":
          description: The repository with the same name already exists.
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a repository using a template
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /repositories/{id}:
    get:
      operationId: repo_get_by_id
      parameters:
      - description: id of the repo to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
      summary: Get a repository by id
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /settings/api:
    get:
      operationId: get_general_api_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralAPISettings'
            text/html:
              schema:
                $ref: '#/components/schemas/GeneralAPISettings'
          description: GeneralAPISettings
      summary: Get instance's global settings for api
      tags:
      - settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
  /settings/attachment:
    get:
      operationId: get_general_attachment_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralAttachmentSettings'
            text/html:
              schema:
                $ref: '#/components/schemas/GeneralAttachmentSettings'
          description: GeneralAttachmentSettings
      summary: Get instance's global settings for Attachment
      tags:
      - settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
  /settings/repository:
    get:
      operationId: get_general_repository_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRepoSettings'
            text/html:
              schema:
                $ref: '#/components/schemas/GeneralRepoSettings'
          description: GeneralRepoSettings
      summary: Get instance's global settings for repositories
      tags:
      - settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
  /settings/ui:
    get:
      operationId: get_general_ui_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralUISettings'
            text/html:
              schema:
                $ref: '#/components/schemas/GeneralUISettings'
          description: GeneralUISettings
      summary: Get instance's global settings for ui
      tags:
      - settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
  /signing-key.gpg:
    get:
      operationId: get_signing_key
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: GPG armored public key
      summary: Get default signing-key.gpg
      tags:
      - miscellaneous
      x-openapi-router-controller: openapi_server.controllers.miscellaneous_controller
  /teams/{id}:
    delete:
      operationId: org_delete_team
      parameters:
      - description: id of the team to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: team deleted
      summary: Delete a team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_get_team
      parameters:
      - description: id of the team to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
            text/html:
              schema:
                $ref: '#/components/schemas/Team'
          description: Team
      summary: Get a team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    patch:
      operationId: org_edit_team
      parameters:
      - description: id of the team to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditTeamOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
            text/html:
              schema:
                $ref: '#/components/schemas/Team'
          description: Team
      summary: Edit a team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
      x-codegen-request-body-name: body
  /teams/{id}/activities/feeds:
    get:
      operationId: org_list_team_activity_feeds
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: the date of the activities to be found
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: ActivityFeedsList
        "404":
          description: APINotFound is a not found empty response
      summary: List a team's activity feeds
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /teams/{id}/members:
    get:
      operationId: org_list_team_members
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List a team's members
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /teams/{id}/members/{username}:
    delete:
      operationId: org_remove_team_member
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: username of the user to remove
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Remove a team member
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_list_team_member
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: username of the member to list
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "404":
          description: APINotFound is a not found empty response
      summary: List a particular member of team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    put:
      operationId: org_add_team_member
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: username of the user to add
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Add a team member
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /teams/{id}/repos:
    get:
      operationId: org_list_team_repos
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List a team's repos
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /teams/{id}/repos/{org}/{repo}:
    delete:
      description: "This does not delete the repository, it only removes the repository\
        \ from the team."
      operationId: org_remove_team_repository
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: organization that owns the repo to remove
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to remove
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Remove a repository from a team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: org_list_team_repo
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: organization that owns the repo to list
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to list
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "404":
          description: APINotFound is a not found empty response
      summary: List a particular repo of team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    put:
      operationId: org_add_team_repository
      parameters:
      - description: id of the team
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: organization that owns the repo to add
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to add
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a repository to a team
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /topics/search:
    get:
      operationId: topic_search
      parameters:
      - description: keywords to search
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TopicResponse'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/TopicResponse'
                type: array
          description: TopicListResponse
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: search topics via keyword
      tags:
      - repository
      x-openapi-router-controller: openapi_server.controllers.repository_controller
  /user:
    get:
      operationId: user_get_current
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: User
      summary: Get the authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/applications/oauth2:
    get:
      operationId: user_get_oauth2_application
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Application'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Application'
                type: array
          description: OAuth2ApplicationList represents a list of OAuth2 applications.
      summary: List the authenticated user's oauth2 applications
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_create_o_auth2_application
      requestBody:
        $ref: '#/components/requestBodies/CreateOAuth2ApplicationOptions'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
            text/html:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: OAuth2Application
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: creates a new OAuth2 application
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/applications/oauth2/{id}:
    delete:
      operationId: user_delete_o_auth2_application
      parameters:
      - description: token to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: delete an OAuth2 Application
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: user_get_o_auth2_application
      parameters:
      - description: Application ID to be found
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
            text/html:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: OAuth2Application
        "404":
          description: APINotFound is a not found empty response
      summary: get an OAuth2 Application
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    patch:
      operationId: user_update_o_auth2_application
      parameters:
      - description: application to be updated
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateOAuth2ApplicationOptions'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
            text/html:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: OAuth2Application
        "404":
          description: APINotFound is a not found empty response
      summary: "update an OAuth2 Application, this includes regenerating the client\
        \ secret"
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/emails:
    delete:
      operationId: user_delete_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEmailOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/DeleteEmailOption'
        x-body-name: body
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Delete email addresses
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
    get:
      operationId: user_list_emails
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
          description: EmailList
      summary: List the authenticated user's email addresses
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_add_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailOption'
          text/plain:
            schema:
              $ref: '#/components/schemas/CreateEmailOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Email'
                type: array
          description: EmailList
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Add email addresses
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/followers:
    get:
      operationId: user_current_list_followers
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List the authenticated user's followers
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/following:
    get:
      operationId: user_current_list_following
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List the users that the authenticated user is following
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/following/{username}:
    delete:
      operationId: user_current_delete_follow
      parameters:
      - description: username of user to unfollow
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Unfollow a user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: user_current_check_following
      parameters:
      - description: username of followed user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Check whether a user is followed by the authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    put:
      operationId: user_current_put_follow
      parameters:
      - description: username of user to follow
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Follow a user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/gpg_key_token:
    get:
      operationId: get_verification_token
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: APIString is a string response
        "404":
          description: APINotFound is a not found empty response
      summary: Get a Token to verify
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/gpg_key_verify:
    post:
      operationId: user_verify_gpg_key
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPGKey'
            text/html:
              schema:
                $ref: '#/components/schemas/GPGKey'
          description: GPGKey
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Verify a GPG key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/gpg_keys:
    get:
      operationId: user_current_list_gpg_keys
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GPGKey'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/GPGKey'
                type: array
          description: GPGKeyList
      summary: List the authenticated user's GPG keys
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_current_post_gpg_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGPGKeyOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPGKey'
            text/html:
              schema:
                $ref: '#/components/schemas/GPGKey'
          description: GPGKey
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a GPG key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/gpg_keys/{id}:
    delete:
      operationId: user_current_delete_gpg_key
      parameters:
      - description: id of key to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Remove a GPG key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: user_current_get_gpg_key
      parameters:
      - description: id of key to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPGKey'
            text/html:
              schema:
                $ref: '#/components/schemas/GPGKey'
          description: GPGKey
        "404":
          description: APINotFound is a not found empty response
      summary: Get a GPG key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/hooks:
    get:
      operationId: user_list_hooks
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: HookList
      summary: List the authenticated user's webhooks
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_create_hook
      requestBody:
        $ref: '#/components/requestBodies/CreateHookOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Create a hook
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/hooks/{id}:
    delete:
      operationId: user_delete_hook
      parameters:
      - description: id of the hook to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Delete a hook
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: user_get_hook
      parameters:
      - description: id of the hook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Get a hook
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    patch:
      operationId: user_edit_hook
      parameters:
      - description: id of the hook to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EditHookOption'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
            text/html:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
      summary: Update a hook
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/keys:
    get:
      operationId: user_current_list_keys
      parameters:
      - description: fingerprint of the key
        explode: true
        in: query
        name: fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublicKey'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PublicKey'
                type: array
          description: PublicKeyList
      summary: List the authenticated user's public keys
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_current_post_key
      requestBody:
        $ref: '#/components/requestBodies/CreateKeyOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
            text/html:
              schema:
                $ref: '#/components/schemas/PublicKey'
          description: PublicKey
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a public key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/keys/{id}:
    delete:
      operationId: user_current_delete_key
      parameters:
      - description: id of key to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Delete a public key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: user_current_get_key
      parameters:
      - description: id of key to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
            text/html:
              schema:
                $ref: '#/components/schemas/PublicKey'
          description: PublicKey
        "404":
          description: APINotFound is a not found empty response
      summary: Get a public key
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/orgs:
    get:
      operationId: org_list_current_user_orgs
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: OrganizationList
      summary: List the current user's organizations
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /user/repos:
    get:
      operationId: user_current_list_repos
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List the repos that the authenticated user owns
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: create_current_user_repo
      requestBody:
        $ref: '#/components/requestBodies/CreateRepoOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            text/html:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Repository
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "409":
          description: The repository with the same name already exists.
        "422":
          description: APIValidationError is error format response related to input
            validation
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a repository
      tags:
      - repository
      - user
      x-openapi-router-controller: openapi_server.controllers.repository_controller
      x-codegen-request-body-name: body
  /user/settings:
    get:
      operationId: get_user_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSettings'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/UserSettings'
                type: array
          description: UserSettings
      summary: Get user settings
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    patch:
      operationId: update_user_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingsOptions'
          text/plain:
            schema:
              $ref: '#/components/schemas/UserSettingsOptions'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSettings'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/UserSettings'
                type: array
          description: UserSettings
      summary: Update user settings
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /user/starred:
    get:
      operationId: user_current_list_starred
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: The repos that the authenticated user has starred
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/starred/{owner}/{repo}:
    delete:
      operationId: user_current_delete_star
      parameters:
      - description: owner of the repo to unstar
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to unstar
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Unstar the given repo
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: user_current_check_starring
      parameters:
      - description: owner of the repo
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Whether the authenticated is starring the repo
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    put:
      operationId: user_current_put_star
      parameters:
      - description: owner of the repo to star
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: name of the repo to star
        explode: false
        in: path
        name: repo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
      summary: Star the given repo
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/stopwatches:
    get:
      operationId: user_get_stop_watches
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StopWatch'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/StopWatch'
                type: array
          description: StopWatchList
      summary: Get list of all existing stopwatches
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/subscriptions:
    get:
      operationId: user_current_list_subscriptions
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List repositories watched by the authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/teams:
    get:
      operationId: user_list_teams
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
          description: TeamList
      summary: List all the teams a user belongs to
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/times:
    get:
      operationId: user_current_tracked_times
      parameters:
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only show times updated after the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only show times updated before the given time. This is a timestamp
          in RFC 3339 format
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/TrackedTime'
                type: array
          description: TrackedTimeList
      summary: List the current user's tracked times
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/search:
    get:
      operationId: user_search
      parameters:
      - description: keyword
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: ID of the user to search for
        explode: true
        in: query
        name: uid
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSearch_200_response'
          description: SearchResults of a successful search
      summary: Search for users
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}:
    get:
      operationId: user_get
      parameters:
      - description: username of user to get
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "404":
          description: APINotFound is a not found empty response
      summary: Get a user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/activities/feeds:
    get:
      operationId: user_list_activity_feeds
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: "if true, only show actions performed by the requested user"
        explode: true
        in: query
        name: only-performed-by
        required: false
        schema:
          type: boolean
        style: form
      - description: the date of the activities to be found
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: ActivityFeedsList
        "404":
          description: APINotFound is a not found empty response
      summary: List a user's activity feeds
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/followers:
    get:
      operationId: user_list_followers
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List the given user's followers
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/following:
    get:
      operationId: user_list_following
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: UserList
      summary: List the users that the given user is following
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/following/{target}:
    get:
      operationId: user_check_following
      parameters:
      - description: username of following user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: username of followed user
        explode: false
        in: path
        name: target
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
      summary: Check if one user is following another user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/gpg_keys:
    get:
      operationId: user_list_gpg_keys
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GPGKey'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/GPGKey'
                type: array
          description: GPGKeyList
      summary: List the given user's GPG keys
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/heatmap:
    get:
      operationId: user_get_heatmap_data
      parameters:
      - description: username of user to get
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserHeatmapData'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/UserHeatmapData'
                type: array
          description: UserHeatmapData
        "404":
          description: APINotFound is a not found empty response
      summary: Get a user's heatmap
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/keys:
    get:
      operationId: user_list_keys
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: fingerprint of the key
        explode: true
        in: query
        name: fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublicKey'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PublicKey'
                type: array
          description: PublicKeyList
      summary: List the given user's public keys
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/orgs:
    get:
      operationId: org_list_user_orgs
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: OrganizationList
      summary: List a user's organizations
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /users/{username}/orgs/{org}/permissions:
    get:
      operationId: org_get_user_permissions
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: name of the organization
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPermissions'
            text/html:
              schema:
                $ref: '#/components/schemas/OrganizationPermissions'
          description: OrganizationPermissions
        "403":
          description: APIForbiddenError is a forbidden error response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: APINotFound is a not found empty response
      summary: Get user permissions in organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /users/{username}/repos:
    get:
      operationId: user_list_repos
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List the repos owned by the given user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/starred:
    get:
      operationId: user_list_starred
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: The repos that the given user has starred
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/subscriptions:
    get:
      operationId: user_list_subscriptions
      parameters:
      - description: username of the user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: RepositoryList
      summary: List the repositories watched by a user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{username}/tokens:
    get:
      operationId: user_get_tokens
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: page number of results to return (1-based)
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: page size of results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessToken'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/AccessToken'
                type: array
          description: AccessTokenList represents a list of API access token.
      summary: List the authenticated user's access tokens
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_create_token
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessTokenOption'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/html:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: AccessToken represents an API access token.
        "400":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: Create an access token
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /users/{username}/tokens/{token}:
    delete:
      operationId: user_delete_access_token
      parameters:
      - description: username of user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: "token to be deleted, identified by ID and if not available by\
          \ name"
        explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: APIEmpty is an empty response
        "404":
          description: APINotFound is a not found empty response
        "422":
          description: APIError is error format response
          headers:
            message:
              explode: false
              schema:
                type: string
              style: simple
            url:
              explode: false
              schema:
                type: string
              style: simple
      summary: delete an access token
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /version:
    get:
      operationId: get_version
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerVersion'
            text/html:
              schema:
                $ref: '#/components/schemas/ServerVersion'
          description: ServerVersion
      summary: Returns the version of the Gitea application
      tags:
      - miscellaneous
      x-openapi-router-controller: openapi_server.controllers.miscellaneous_controller
components:
  requestBodies:
    CreateHookOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateHookOption'
      required: true
    CreateKeyOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateKeyOption'
    CreateLabelOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLabelOption'
    CreateOAuth2ApplicationOptions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOAuth2ApplicationOptions'
        text/plain:
          schema:
            $ref: '#/components/schemas/CreateOAuth2ApplicationOptions'
      required: true
    CreateOrgOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrgOption'
      required: true
    CreateRepoOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRepoOption'
    CreateWikiPageOptions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateWikiPageOptions'
    EditAttachmentOptions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditAttachmentOptions'
    EditHookOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditHookOption'
    EditIssueCommentOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditIssueCommentOption'
    EditLabelOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditLabelOption'
    EditReactionOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditReactionOption'
    IssueLabelsOption:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueLabelsOption'
    IssueMeta:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueMeta'
        text/plain:
          schema:
            $ref: '#/components/schemas/IssueMeta'
    PullReviewRequestOptions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PullReviewRequestOptions'
        text/plain:
          schema:
            $ref: '#/components/schemas/PullReviewRequestOptions'
      required: true
    UpdateFileOptions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFileOptions'
      required: true
    issueCreateIssueCommentAttachment:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/issueCreateIssueCommentAttachment_request'
      required: true
  responses:
    AccessToken:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessToken'
        text/html:
          schema:
            $ref: '#/components/schemas/AccessToken'
      description: AccessToken represents an API access token.
    AccessTokenList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/AccessToken'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/AccessToken'
            type: array
      description: AccessTokenList represents a list of API access token.
    ActivityFeedsList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Activity'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Activity'
            type: array
      description: ActivityFeedsList
    ActivityPub:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityPub'
        text/html:
          schema:
            $ref: '#/components/schemas/ActivityPub'
      description: ActivityPub
    AnnotatedTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnnotatedTag'
        text/html:
          schema:
            $ref: '#/components/schemas/AnnotatedTag'
      description: AnnotatedTag
    Attachment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment'
        text/html:
          schema:
            $ref: '#/components/schemas/Attachment'
      description: Attachment
    AttachmentList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Attachment'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Attachment'
            type: array
      description: AttachmentList
    Branch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Branch'
        text/html:
          schema:
            $ref: '#/components/schemas/Branch'
      description: Branch
    BranchList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Branch'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Branch'
            type: array
      description: BranchList
    BranchProtection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BranchProtection'
        text/html:
          schema:
            $ref: '#/components/schemas/BranchProtection'
      description: BranchProtection
    BranchProtectionList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/BranchProtection'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/BranchProtection'
            type: array
      description: BranchProtectionList
    ChangedFileList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/ChangedFile'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/ChangedFile'
            type: array
      description: ChangedFileList
      headers:
        X-HasMore:
          description: True if there is another page
          explode: false
          schema:
            type: boolean
          style: simple
        X-Page:
          description: The current page
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
        X-PageCount:
          description: Total number of pages
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
        X-PerPage:
          description: Commits per page
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
        X-Total:
          description: Total commit count
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
    CombinedStatus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CombinedStatus'
        text/html:
          schema:
            $ref: '#/components/schemas/CombinedStatus'
      description: CombinedStatus
    Comment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'
        text/html:
          schema:
            $ref: '#/components/schemas/Comment'
      description: Comment
    CommentList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Comment'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Comment'
            type: array
      description: CommentList
    Commit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Commit'
        text/html:
          schema:
            $ref: '#/components/schemas/Commit'
      description: Commit
    CommitList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Commit'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Commit'
            type: array
      description: CommitList
      headers:
        X-HasMore:
          description: True if there is another page
          explode: false
          schema:
            type: boolean
          style: simple
        X-Page:
          description: The current page
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
        X-PageCount:
          description: Total number of pages
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
        X-PerPage:
          description: Commits per page
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
        X-Total:
          description: Total commit count
          explode: false
          schema:
            format: int64
            type: integer
          style: simple
    CommitStatus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommitStatus'
        text/html:
          schema:
            $ref: '#/components/schemas/CommitStatus'
      description: CommitStatus
    CommitStatusList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/CommitStatus'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/CommitStatus'
            type: array
      description: CommitStatusList
    ContentsListResponse:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/ContentsResponse'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/ContentsResponse'
            type: array
      description: ContentsListResponse
    ContentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentsResponse'
        text/html:
          schema:
            $ref: '#/components/schemas/ContentsResponse'
      description: ContentsResponse
    CronList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Cron'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Cron'
            type: array
      description: CronList
    DeployKey:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeployKey'
        text/html:
          schema:
            $ref: '#/components/schemas/DeployKey'
      description: DeployKey
    DeployKeyList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/DeployKey'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/DeployKey'
            type: array
      description: DeployKeyList
    EmailList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Email'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Email'
            type: array
      description: EmailList
    EmptyRepository:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
        text/html:
          schema:
            $ref: '#/components/schemas/APIError'
      description: EmptyRepository
    FileDeleteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileDeleteResponse'
        text/html:
          schema:
            $ref: '#/components/schemas/FileDeleteResponse'
      description: FileDeleteResponse
    FileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileResponse'
        text/html:
          schema:
            $ref: '#/components/schemas/FileResponse'
      description: FileResponse
    GPGKey:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPGKey'
        text/html:
          schema:
            $ref: '#/components/schemas/GPGKey'
      description: GPGKey
    GPGKeyList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/GPGKey'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/GPGKey'
            type: array
      description: GPGKeyList
    GeneralAPISettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralAPISettings'
        text/html:
          schema:
            $ref: '#/components/schemas/GeneralAPISettings'
      description: GeneralAPISettings
    GeneralAttachmentSettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralAttachmentSettings'
        text/html:
          schema:
            $ref: '#/components/schemas/GeneralAttachmentSettings'
      description: GeneralAttachmentSettings
    GeneralRepoSettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralRepoSettings'
        text/html:
          schema:
            $ref: '#/components/schemas/GeneralRepoSettings'
      description: GeneralRepoSettings
    GeneralUISettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralUISettings'
        text/html:
          schema:
            $ref: '#/components/schemas/GeneralUISettings'
      description: GeneralUISettings
    GitBlobResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitBlobResponse'
        text/html:
          schema:
            $ref: '#/components/schemas/GitBlobResponse'
      description: GitBlobResponse
    GitHook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitHook'
        text/html:
          schema:
            $ref: '#/components/schemas/GitHook'
      description: GitHook
    GitHookList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/GitHook'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/GitHook'
            type: array
      description: GitHookList
    GitTreeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitTreeResponse'
        text/html:
          schema:
            $ref: '#/components/schemas/GitTreeResponse'
      description: GitTreeResponse
    Hook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hook'
        text/html:
          schema:
            $ref: '#/components/schemas/Hook'
      description: Hook
    HookList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hook'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Hook'
            type: array
      description: HookList
    Issue:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Issue'
        text/html:
          schema:
            $ref: '#/components/schemas/Issue'
      description: Issue
    IssueDeadline:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueDeadline'
        text/html:
          schema:
            $ref: '#/components/schemas/IssueDeadline'
      description: IssueDeadline
    IssueList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Issue'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Issue'
            type: array
      description: IssueList
    IssueTemplates:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/IssueTemplate'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/IssueTemplate'
            type: array
      description: IssueTemplates
    Label:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Label'
        text/html:
          schema:
            $ref: '#/components/schemas/Label'
      description: Label
    LabelList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Label'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Label'
            type: array
      description: LabelList
    LanguageStatistics:
      content:
        application/json:
          schema:
            additionalProperties:
              format: int64
              type: integer
            type: object
        text/html:
          schema:
            additionalProperties:
              format: int64
              type: integer
            type: object
      description: LanguageStatistics
    MarkdownRender:
      content:
        application/json:
          schema:
            type: string
        text/html:
          schema:
            type: string
      description: MarkdownRender is a rendered markdown document
    MarkupRender:
      content:
        application/json:
          schema:
            type: string
        text/html:
          schema:
            type: string
      description: MarkupRender is a rendered markup document
    Milestone:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Milestone'
        text/html:
          schema:
            $ref: '#/components/schemas/Milestone'
      description: Milestone
    MilestoneList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Milestone'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Milestone'
            type: array
      description: MilestoneList
    NodeInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NodeInfo'
        text/html:
          schema:
            $ref: '#/components/schemas/NodeInfo'
      description: NodeInfo
    Note:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note'
        text/html:
          schema:
            $ref: '#/components/schemas/Note'
      description: Note
    NotificationCount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotificationCount'
        text/html:
          schema:
            $ref: '#/components/schemas/NotificationCount'
      description: Number of unread notifications
    NotificationThread:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotificationThread'
        text/html:
          schema:
            $ref: '#/components/schemas/NotificationThread'
      description: NotificationThread
    NotificationThreadList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/NotificationThread'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/NotificationThread'
            type: array
      description: NotificationThreadList
    OAuth2Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OAuth2Application'
        text/html:
          schema:
            $ref: '#/components/schemas/OAuth2Application'
      description: OAuth2Application
    OAuth2ApplicationList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/OAuth2Application'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/OAuth2Application'
            type: array
      description: OAuth2ApplicationList represents a list of OAuth2 applications.
    Organization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
        text/html:
          schema:
            $ref: '#/components/schemas/Organization'
      description: Organization
    OrganizationList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Organization'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Organization'
            type: array
      description: OrganizationList
    OrganizationPermissions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationPermissions'
        text/html:
          schema:
            $ref: '#/components/schemas/OrganizationPermissions'
      description: OrganizationPermissions
    Package:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Package'
        text/html:
          schema:
            $ref: '#/components/schemas/Package'
      description: Package
    PackageFileList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PackageFile'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/PackageFile'
            type: array
      description: PackageFileList
    PackageList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Package'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Package'
            type: array
      description: PackageList
    PublicKey:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublicKey'
        text/html:
          schema:
            $ref: '#/components/schemas/PublicKey'
      description: PublicKey
    PublicKeyList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PublicKey'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/PublicKey'
            type: array
      description: PublicKeyList
    PullRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PullRequest'
        text/html:
          schema:
            $ref: '#/components/schemas/PullRequest'
      description: PullRequest
    PullRequestList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PullRequest'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/PullRequest'
            type: array
      description: PullRequestList
    PullReview:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PullReview'
        text/html:
          schema:
            $ref: '#/components/schemas/PullReview'
      description: PullReview
    PullReviewComment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PullReviewComment'
        text/html:
          schema:
            $ref: '#/components/schemas/PullReviewComment'
      description: PullComment
    PullReviewCommentList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PullReviewComment'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/PullReviewComment'
            type: array
      description: PullCommentList
    PullReviewList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PullReview'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/PullReview'
            type: array
      description: PullReviewList
    PushMirror:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushMirror'
        text/html:
          schema:
            $ref: '#/components/schemas/PushMirror'
      description: PushMirror
    PushMirrorList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/PushMirror'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/PushMirror'
            type: array
      description: PushMirrorList
    Reaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reaction'
        text/html:
          schema:
            $ref: '#/components/schemas/Reaction'
      description: Reaction
    ReactionList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Reaction'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Reaction'
            type: array
      description: ReactionList
    Reference:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reference'
        text/html:
          schema:
            $ref: '#/components/schemas/Reference'
      description: Reference
    ReferenceList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Reference'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Reference'
            type: array
      description: ReferenceList
    Release:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Release'
        text/html:
          schema:
            $ref: '#/components/schemas/Release'
      description: Release
    ReleaseList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Release'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Release'
            type: array
      description: ReleaseList
    RepoCollaboratorPermission:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoCollaboratorPermission'
        text/html:
          schema:
            $ref: '#/components/schemas/RepoCollaboratorPermission'
      description: RepoCollaboratorPermission
    RepoIssueConfig:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueConfig'
        text/html:
          schema:
            $ref: '#/components/schemas/IssueConfig'
      description: RepoIssueConfig
    RepoIssueConfigValidation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueConfigValidation'
        text/html:
          schema:
            $ref: '#/components/schemas/IssueConfigValidation'
      description: RepoIssueConfigValidation
    Repository:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Repository'
        text/html:
          schema:
            $ref: '#/components/schemas/Repository'
      description: Repository
    RepositoryList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Repository'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Repository'
            type: array
      description: RepositoryList
    SearchResults:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResults'
        text/html:
          schema:
            $ref: '#/components/schemas/SearchResults'
      description: SearchResults
    ServerVersion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerVersion'
        text/html:
          schema:
            $ref: '#/components/schemas/ServerVersion'
      description: ServerVersion
    StopWatch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StopWatch'
        text/html:
          schema:
            $ref: '#/components/schemas/StopWatch'
      description: StopWatch
    StopWatchList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StopWatch'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/StopWatch'
            type: array
      description: StopWatchList
    StringSlice:
      content:
        application/json:
          schema:
            items:
              type: string
            type: array
        text/html:
          schema:
            items:
              type: string
            type: array
      description: StringSlice
    Tag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tag'
        text/html:
          schema:
            $ref: '#/components/schemas/Tag'
      description: Tag
    TagList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Tag'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Tag'
            type: array
      description: TagList
    Team:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Team'
        text/html:
          schema:
            $ref: '#/components/schemas/Team'
      description: Team
    TeamList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Team'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/Team'
            type: array
      description: TeamList
    TimelineList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TimelineComment'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/TimelineComment'
            type: array
      description: TimelineList
    TopicListResponse:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TopicResponse'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/TopicResponse'
            type: array
      description: TopicListResponse
    TopicNames:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicName'
        text/html:
          schema:
            $ref: '#/components/schemas/TopicName'
      description: TopicNames
    TrackedTime:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackedTime'
        text/html:
          schema:
            $ref: '#/components/schemas/TrackedTime'
      description: TrackedTime
    TrackedTimeList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TrackedTime'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/TrackedTime'
            type: array
      description: TrackedTimeList
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        text/html:
          schema:
            $ref: '#/components/schemas/User'
      description: User
    UserHeatmapData:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/UserHeatmapData'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/UserHeatmapData'
            type: array
      description: UserHeatmapData
    UserList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
      description: UserList
    UserSettings:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/UserSettings'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/UserSettings'
            type: array
      description: UserSettings
    WatchInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WatchInfo'
        text/html:
          schema:
            $ref: '#/components/schemas/WatchInfo'
      description: WatchInfo
    WikiCommitList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WikiCommitList'
        text/html:
          schema:
            $ref: '#/components/schemas/WikiCommitList'
      description: WikiCommitList
    WikiPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WikiPage'
        text/html:
          schema:
            $ref: '#/components/schemas/WikiPage'
      description: WikiPage
    WikiPageList:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/WikiPageMetaData'
            type: array
        text/html:
          schema:
            items:
              $ref: '#/components/schemas/WikiPageMetaData'
            type: array
      description: WikiPageList
    conflict:
      description: APIConflict is a conflict empty response
    empty:
      description: APIEmpty is an empty response
    error:
      description: APIError is error format response
      headers:
        message:
          explode: false
          schema:
            type: string
          style: simple
        url:
          explode: false
          schema:
            type: string
          style: simple
    forbidden:
      description: APIForbiddenError is a forbidden error response
      headers:
        message:
          explode: false
          schema:
            type: string
          style: simple
        url:
          explode: false
          schema:
            type: string
          style: simple
    invalidTopicsError:
      description: APIInvalidTopicsError is error format response to invalid topics
      headers:
        invalidTopics:
          explode: false
          schema:
            items:
              type: string
            type: array
          style: simple
        message:
          explode: false
          schema:
            type: string
          style: simple
    notFound:
      description: APINotFound is a not found empty response
    parameterBodies:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePushMirrorOption'
        text/html:
          schema:
            $ref: '#/components/schemas/CreatePushMirrorOption'
      description: parameterBodies
    redirect:
      description: APIRedirect is a redirect response
    string:
      content:
        application/json:
          schema:
            type: string
        text/html:
          schema:
            type: string
      description: APIString is a string response
    validationError:
      description: APIValidationError is error format response related to input validation
      headers:
        message:
          explode: false
          schema:
            type: string
          style: simple
        url:
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    APIError:
      description: APIError is an api error with a message
      example:
        message: message
        url: url
      properties:
        message:
          title: message
          type: string
          x-go-name: Message
        url:
          title: url
          type: string
          x-go-name: URL
      title: APIError
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    AccessToken:
      example:
        sha1: sha1
        name: name
        token_last_eight: token_last_eight
        id: 0
        scopes:
        - scopes
        - scopes
      properties:
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Name
        scopes:
          items:
            type: string
          title: scopes
          type: array
          x-go-name: Scopes
        sha1:
          title: sha1
          type: string
          x-go-name: Token
        token_last_eight:
          title: token_last_eight
          type: string
          x-go-name: TokenLastEight
      title: AccessToken represents an API access token.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Activity:
      example:
        is_private: true
        ref_name: ref_name
        act_user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        created: 2000-01-23T04:56:07.000+00:00
        repo:
          parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        comment_id: 7
        content: content
        user_id: 2
        repo_id: 3
        act_user_id: 0
        comment:
          issue_url: issue_url
          assets:
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          original_author_id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 5
          pull_request_url: pull_request_url
          body: body
          original_author: original_author
          user:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
        id: 9
        op_type: op_type
      properties:
        act_user:
          $ref: '#/components/schemas/User'
        act_user_id:
          format: int64
          title: act_user_id
          type: integer
          x-go-name: ActUserID
        comment:
          $ref: '#/components/schemas/Comment'
        comment_id:
          format: int64
          title: comment_id
          type: integer
          x-go-name: CommentID
        content:
          title: content
          type: string
          x-go-name: Content
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        is_private:
          title: is_private
          type: boolean
          x-go-name: IsPrivate
        op_type:
          title: op_type
          type: string
          x-go-name: OpType
        ref_name:
          title: ref_name
          type: string
          x-go-name: RefName
        repo:
          $ref: '#/components/schemas/Repository'
        repo_id:
          format: int64
          title: repo_id
          type: integer
          x-go-name: RepoID
        user_id:
          format: int64
          title: user_id
          type: integer
          x-go-name: UserID
      title: Activity
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ActivityPub:
      description: ActivityPub type
      example:
        '@context': '@context'
      properties:
        '@context':
          title: '@context'
          type: string
          x-go-name: Context
      title: ActivityPub
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    AddCollaboratorOption:
      description: AddCollaboratorOption options when adding a user as a collaborator
        of a repository
      example:
        permission: permission
      properties:
        permission:
          title: permission
          type: string
          x-go-name: Permission
      title: AddCollaboratorOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    AddTimeOption:
      description: AddTimeOption options for adding time to an issue
      example:
        created: 2000-01-23T04:56:07.000+00:00
        user_name: user_name
        time: 0
      properties:
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        time:
          description: time in seconds
          format: int64
          title: time
          type: integer
          x-go-name: Time
        user_name:
          description: User who spent the time (optional)
          title: user_name
          type: string
          x-go-name: User
      required:
      - time
      title: AddTimeOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    AnnotatedTag:
      description: AnnotatedTag represents an annotated tag
      example:
        tagger:
          date: date
          name: name
          email: email
        tag: tag
        message: message
        sha: sha
        url: url
        verification:
          reason: reason
          payload: payload
          signature: signature
          verified: true
          signer:
            name: name
            email: email
            username: username
        object:
          type: type
          sha: sha
          url: url
      properties:
        message:
          title: message
          type: string
          x-go-name: Message
        object:
          $ref: '#/components/schemas/AnnotatedTagObject'
        sha:
          title: sha
          type: string
          x-go-name: SHA
        tag:
          title: tag
          type: string
          x-go-name: Tag
        tagger:
          $ref: '#/components/schemas/CommitUser'
        url:
          title: url
          type: string
          x-go-name: URL
        verification:
          $ref: '#/components/schemas/PayloadCommitVerification'
      title: AnnotatedTag
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    AnnotatedTagObject:
      description: AnnotatedTagObject contains meta information of the tag object
      example:
        type: type
        sha: sha
        url: url
      properties:
        sha:
          title: sha
          type: string
          x-go-name: SHA
        type:
          title: type
          type: string
          x-go-name: Type
        url:
          title: url
          type: string
          x-go-name: URL
      title: AnnotatedTagObject
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Attachment:
      description: Attachment a generic attachment
      example:
        size: 5
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        browser_download_url: browser_download_url
        id: 1
        uuid: uuid
        download_count: 6
      properties:
        browser_download_url:
          title: browser_download_url
          type: string
          x-go-name: DownloadURL
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        download_count:
          format: int64
          title: download_count
          type: integer
          x-go-name: DownloadCount
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Name
        size:
          format: int64
          title: size
          type: integer
          x-go-name: Size
        uuid:
          title: uuid
          type: string
          x-go-name: UUID
      title: Attachment
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Branch:
      description: Branch represents a repository branch
      example:
        enable_status_check: true
        status_check_contexts:
        - status_check_contexts
        - status_check_contexts
        protected: true
        user_can_push: true
        commit:
          committer:
            name: name
            email: email
            username: username
          removed:
          - removed
          - removed
          added:
          - added
          - added
          author:
            name: name
            email: email
            username: username
          modified:
          - modified
          - modified
          id: id
          message: message
          url: url
          verification:
            reason: reason
            payload: payload
            signature: signature
            verified: true
            signer:
              name: name
              email: email
              username: username
          timestamp: 2000-01-23T04:56:07.000+00:00
        name: name
        required_approvals: 0
        effective_branch_protection_name: effective_branch_protection_name
        user_can_merge: true
      properties:
        commit:
          $ref: '#/components/schemas/PayloadCommit'
        effective_branch_protection_name:
          title: effective_branch_protection_name
          type: string
          x-go-name: EffectiveBranchProtectionName
        enable_status_check:
          title: enable_status_check
          type: boolean
          x-go-name: EnableStatusCheck
        name:
          title: name
          type: string
          x-go-name: Name
        protected:
          title: protected
          type: boolean
          x-go-name: Protected
        required_approvals:
          format: int64
          title: required_approvals
          type: integer
          x-go-name: RequiredApprovals
        status_check_contexts:
          items:
            type: string
          title: status_check_contexts
          type: array
          x-go-name: StatusCheckContexts
        user_can_merge:
          title: user_can_merge
          type: boolean
          x-go-name: UserCanMerge
        user_can_push:
          title: user_can_push
          type: boolean
          x-go-name: UserCanPush
      title: Branch
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    BranchProtection:
      description: BranchProtection represents a branch protection for a repository
      example:
        merge_whitelist_teams:
        - merge_whitelist_teams
        - merge_whitelist_teams
        enable_push: true
        push_whitelist_teams:
        - push_whitelist_teams
        - push_whitelist_teams
        block_on_outdated_branch: true
        push_whitelist_deploy_keys: true
        created_at: 2000-01-23T04:56:07.000+00:00
        enable_status_check: true
        merge_whitelist_usernames:
        - merge_whitelist_usernames
        - merge_whitelist_usernames
        updated_at: 2000-01-23T04:56:07.000+00:00
        branch_name: branch_name
        required_approvals: 0
        block_on_rejected_reviews: true
        require_signed_commits: true
        enable_merge_whitelist: true
        enable_push_whitelist: true
        rule_name: rule_name
        approvals_whitelist_username:
        - approvals_whitelist_username
        - approvals_whitelist_username
        dismiss_stale_approvals: true
        status_check_contexts:
        - status_check_contexts
        - status_check_contexts
        push_whitelist_usernames:
        - push_whitelist_usernames
        - push_whitelist_usernames
        protected_file_patterns: protected_file_patterns
        enable_approvals_whitelist: true
        approvals_whitelist_teams:
        - approvals_whitelist_teams
        - approvals_whitelist_teams
        unprotected_file_patterns: unprotected_file_patterns
        block_on_official_review_requests: true
      properties:
        approvals_whitelist_teams:
          items:
            type: string
          title: approvals_whitelist_teams
          type: array
          x-go-name: ApprovalsWhitelistTeams
        approvals_whitelist_username:
          items:
            type: string
          title: approvals_whitelist_username
          type: array
          x-go-name: ApprovalsWhitelistUsernames
        block_on_official_review_requests:
          title: block_on_official_review_requests
          type: boolean
          x-go-name: BlockOnOfficialReviewRequests
        block_on_outdated_branch:
          title: block_on_outdated_branch
          type: boolean
          x-go-name: BlockOnOutdatedBranch
        block_on_rejected_reviews:
          title: block_on_rejected_reviews
          type: boolean
          x-go-name: BlockOnRejectedReviews
        branch_name:
          description: "Deprecated: true"
          title: branch_name
          type: string
          x-go-name: BranchName
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        dismiss_stale_approvals:
          title: dismiss_stale_approvals
          type: boolean
          x-go-name: DismissStaleApprovals
        enable_approvals_whitelist:
          title: enable_approvals_whitelist
          type: boolean
          x-go-name: EnableApprovalsWhitelist
        enable_merge_whitelist:
          title: enable_merge_whitelist
          type: boolean
          x-go-name: EnableMergeWhitelist
        enable_push:
          title: enable_push
          type: boolean
          x-go-name: EnablePush
        enable_push_whitelist:
          title: enable_push_whitelist
          type: boolean
          x-go-name: EnablePushWhitelist
        enable_status_check:
          title: enable_status_check
          type: boolean
          x-go-name: EnableStatusCheck
        merge_whitelist_teams:
          items:
            type: string
          title: merge_whitelist_teams
          type: array
          x-go-name: MergeWhitelistTeams
        merge_whitelist_usernames:
          items:
            type: string
          title: merge_whitelist_usernames
          type: array
          x-go-name: MergeWhitelistUsernames
        protected_file_patterns:
          title: protected_file_patterns
          type: string
          x-go-name: ProtectedFilePatterns
        push_whitelist_deploy_keys:
          title: push_whitelist_deploy_keys
          type: boolean
          x-go-name: PushWhitelistDeployKeys
        push_whitelist_teams:
          items:
            type: string
          title: push_whitelist_teams
          type: array
          x-go-name: PushWhitelistTeams
        push_whitelist_usernames:
          items:
            type: string
          title: push_whitelist_usernames
          type: array
          x-go-name: PushWhitelistUsernames
        require_signed_commits:
          title: require_signed_commits
          type: boolean
          x-go-name: RequireSignedCommits
        required_approvals:
          format: int64
          title: required_approvals
          type: integer
          x-go-name: RequiredApprovals
        rule_name:
          title: rule_name
          type: string
          x-go-name: RuleName
        status_check_contexts:
          items:
            type: string
          title: status_check_contexts
          type: array
          x-go-name: StatusCheckContexts
        unprotected_file_patterns:
          title: unprotected_file_patterns
          type: string
          x-go-name: UnprotectedFilePatterns
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
      title: BranchProtection
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ChangedFile:
      description: ChangedFile store information about files affected by the pull
        request
      example:
        filename: filename
        additions: 0
        deletions: 1
        html_url: html_url
        changes: 6
        previous_filename: previous_filename
        raw_url: raw_url
        contents_url: contents_url
        status: status
      properties:
        additions:
          format: int64
          title: additions
          type: integer
          x-go-name: Additions
        changes:
          format: int64
          title: changes
          type: integer
          x-go-name: Changes
        contents_url:
          title: contents_url
          type: string
          x-go-name: ContentsURL
        deletions:
          format: int64
          title: deletions
          type: integer
          x-go-name: Deletions
        filename:
          title: filename
          type: string
          x-go-name: Filename
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        previous_filename:
          title: previous_filename
          type: string
          x-go-name: PreviousFilename
        raw_url:
          title: raw_url
          type: string
          x-go-name: RawURL
        status:
          title: status
          type: string
          x-go-name: Status
      title: ChangedFile
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CombinedStatus:
      description: CombinedStatus holds the combined state of several statuses for
        a single commit
      example:
        commit_url: commit_url
        total_count: 6
        statuses:
        - creator:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          updated_at: 2000-01-23T04:56:07.000+00:00
          target_url: target_url
          context: context
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          url: url
          status: status
        - creator:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          updated_at: 2000-01-23T04:56:07.000+00:00
          target_url: target_url
          context: context
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          url: url
          status: status
        state: state
        repository:
          parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        sha: sha
        url: url
      properties:
        commit_url:
          title: commit_url
          type: string
          x-go-name: CommitURL
        repository:
          $ref: '#/components/schemas/Repository'
        sha:
          title: sha
          type: string
          x-go-name: SHA
        state:
          description: |-
            CommitStatusState holds the state of a CommitStatus
            It can be "pending", "success", "error", "failure", and "warning"
          title: CommitStatusState
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        statuses:
          items:
            $ref: '#/components/schemas/CommitStatus'
          title: statuses
          type: array
          x-go-name: Statuses
        total_count:
          format: int64
          title: total_count
          type: integer
          x-go-name: TotalCount
        url:
          title: url
          type: string
          x-go-name: URL
      title: CombinedStatus
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Comment:
      description: Comment represents a comment on a commit or issue
      example:
        issue_url: issue_url
        assets:
        - size: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          browser_download_url: browser_download_url
          id: 1
          uuid: uuid
          download_count: 6
        - size: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          browser_download_url: browser_download_url
          id: 1
          uuid: uuid
          download_count: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        html_url: html_url
        original_author_id: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 5
        pull_request_url: pull_request_url
        body: body
        original_author: original_author
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Attachment'
          title: assets
          type: array
          x-go-name: Attachments
        body:
          title: body
          type: string
          x-go-name: Body
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        issue_url:
          title: issue_url
          type: string
          x-go-name: IssueURL
        original_author:
          title: original_author
          type: string
          x-go-name: OriginalAuthor
        original_author_id:
          format: int64
          title: original_author_id
          type: integer
          x-go-name: OriginalAuthorID
        pull_request_url:
          title: pull_request_url
          type: string
          x-go-name: PRURL
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        user:
          $ref: '#/components/schemas/User'
      title: Comment
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Commit:
      example:
        committer:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        stats:
          total: 1
          additions: 0
          deletions: 6
        author:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        created: 2000-01-23T04:56:07.000+00:00
        html_url: html_url
        commit:
          committer:
            date: date
            name: name
            email: email
          author:
            date: date
            name: name
            email: email
          tree:
            created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
          message: message
          url: url
          verification:
            reason: reason
            payload: payload
            signature: signature
            verified: true
            signer:
              name: name
              email: email
              username: username
        files:
        - filename: filename
        - filename: filename
        sha: sha
        url: url
        parents:
        - created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
        - created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
      properties:
        author:
          $ref: '#/components/schemas/User'
        commit:
          $ref: '#/components/schemas/RepoCommit'
        committer:
          $ref: '#/components/schemas/User'
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        files:
          items:
            $ref: '#/components/schemas/CommitAffectedFiles'
          title: files
          type: array
          x-go-name: Files
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        parents:
          items:
            $ref: '#/components/schemas/CommitMeta'
          title: parents
          type: array
          x-go-name: Parents
        sha:
          title: sha
          type: string
          x-go-name: SHA
        stats:
          $ref: '#/components/schemas/CommitStats'
        url:
          title: url
          type: string
          x-go-name: URL
      title: Commit contains information generated from a Git commit.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitAffectedFiles:
      description: CommitAffectedFiles store information about files affected by the
        commit
      example:
        filename: filename
      properties:
        filename:
          title: filename
          type: string
          x-go-name: Filename
      title: CommitAffectedFiles
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitDateOptions:
      description: CommitDateOptions store dates for GIT_AUTHOR_DATE and GIT_COMMITTER_DATE
      example:
        committer: 2000-01-23T04:56:07.000+00:00
        author: 2000-01-23T04:56:07.000+00:00
      properties:
        author:
          format: date-time
          title: author
          type: string
          x-go-name: Author
        committer:
          format: date-time
          title: committer
          type: string
          x-go-name: Committer
      title: CommitDateOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitMeta:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        sha: sha
        url: url
      properties:
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        sha:
          title: sha
          type: string
          x-go-name: SHA
        url:
          title: url
          type: string
          x-go-name: URL
      title: CommitMeta contains meta information of a commit in terms of API.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitStats:
      description: CommitStats is statistics for a RepoCommit
      example:
        total: 1
        additions: 0
        deletions: 6
      properties:
        additions:
          format: int64
          title: additions
          type: integer
          x-go-name: Additions
        deletions:
          format: int64
          title: deletions
          type: integer
          x-go-name: Deletions
        total:
          format: int64
          title: total
          type: integer
          x-go-name: Total
      title: CommitStats
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitStatus:
      description: CommitStatus holds a single status of a single Commit
      example:
        creator:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        updated_at: 2000-01-23T04:56:07.000+00:00
        target_url: target_url
        context: context
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        url: url
        status: status
      properties:
        context:
          title: context
          type: string
          x-go-name: Context
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        creator:
          $ref: '#/components/schemas/User'
        description:
          title: description
          type: string
          x-go-name: Description
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        status:
          description: |-
            CommitStatusState holds the state of a CommitStatus
            It can be "pending", "success", "error", "failure", and "warning"
          title: CommitStatusState
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        target_url:
          title: target_url
          type: string
          x-go-name: TargetURL
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        url:
          title: url
          type: string
          x-go-name: URL
      title: CommitStatus
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitStatusState:
      description: |-
        CommitStatusState holds the state of a CommitStatus
        It can be "pending", "success", "error", "failure", and "warning"
      title: CommitStatusState
      type: string
      x-go-package: code.gitea.io/gitea/modules/structs
    CommitUser:
      example:
        date: date
        name: name
        email: email
      properties:
        date:
          title: date
          type: string
          x-go-name: Date
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        name:
          title: name
          type: string
          x-go-name: Name
      title: CommitUser contains information of a user in the context of a commit.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ContentsResponse:
      description: "ContentsResponse contains information about a repo's entry's (dir,\
        \ file, symlink, submodule) metadata and content"
      example:
        _links:
          git: git
          self: self
          html: html
        submodule_git_url: submodule_git_url
        last_commit_sha: last_commit_sha
        encoding: encoding
        type: type
        sha: sha
        content: content
        url: url
        target: target
        path: path
        size: 0
        html_url: html_url
        download_url: download_url
        name: name
        git_url: git_url
      properties:
        _links:
          $ref: '#/components/schemas/FileLinksResponse'
        content:
          description: "`content` is populated when `type` is `file`, otherwise null"
          title: content
          type: string
          x-go-name: Content
        download_url:
          title: download_url
          type: string
          x-go-name: DownloadURL
        encoding:
          description: "`encoding` is populated when `type` is `file`, otherwise null"
          title: encoding
          type: string
          x-go-name: Encoding
        git_url:
          title: git_url
          type: string
          x-go-name: GitURL
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        last_commit_sha:
          title: last_commit_sha
          type: string
          x-go-name: LastCommitSHA
        name:
          title: name
          type: string
          x-go-name: Name
        path:
          title: path
          type: string
          x-go-name: Path
        sha:
          title: sha
          type: string
          x-go-name: SHA
        size:
          format: int64
          title: size
          type: integer
          x-go-name: Size
        submodule_git_url:
          description: "`submodule_git_url` is populated when `type` is `submodule`,\
            \ otherwise null"
          title: submodule_git_url
          type: string
          x-go-name: SubmoduleGitURL
        target:
          description: "`target` is populated when `type` is `symlink`, otherwise\
            \ null"
          title: target
          type: string
          x-go-name: Target
        type:
          description: "`type` will be `file`, `dir`, `symlink`, or `submodule`"
          title: type
          type: string
          x-go-name: Type
        url:
          title: url
          type: string
          x-go-name: URL
      title: ContentsResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateAccessTokenOption:
      description: CreateAccessTokenOption options when create access token
      example:
        name: name
        scopes:
        - scopes
        - scopes
      properties:
        name:
          title: name
          type: string
          x-go-name: Name
        scopes:
          items:
            type: string
          title: scopes
          type: array
          x-go-name: Scopes
      required:
      - name
      title: CreateAccessTokenOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateBranchProtectionOption:
      description: CreateBranchProtectionOption options for creating a branch protection
      example:
        block_on_rejected_reviews: true
        merge_whitelist_teams:
        - merge_whitelist_teams
        - merge_whitelist_teams
        enable_push: true
        require_signed_commits: true
        enable_merge_whitelist: true
        enable_push_whitelist: true
        push_whitelist_teams:
        - push_whitelist_teams
        - push_whitelist_teams
        block_on_outdated_branch: true
        push_whitelist_deploy_keys: true
        rule_name: rule_name
        approvals_whitelist_username:
        - approvals_whitelist_username
        - approvals_whitelist_username
        dismiss_stale_approvals: true
        enable_status_check: true
        status_check_contexts:
        - status_check_contexts
        - status_check_contexts
        push_whitelist_usernames:
        - push_whitelist_usernames
        - push_whitelist_usernames
        merge_whitelist_usernames:
        - merge_whitelist_usernames
        - merge_whitelist_usernames
        protected_file_patterns: protected_file_patterns
        branch_name: branch_name
        enable_approvals_whitelist: true
        approvals_whitelist_teams:
        - approvals_whitelist_teams
        - approvals_whitelist_teams
        required_approvals: 0
        unprotected_file_patterns: unprotected_file_patterns
        block_on_official_review_requests: true
      properties:
        approvals_whitelist_teams:
          items:
            type: string
          title: approvals_whitelist_teams
          type: array
          x-go-name: ApprovalsWhitelistTeams
        approvals_whitelist_username:
          items:
            type: string
          title: approvals_whitelist_username
          type: array
          x-go-name: ApprovalsWhitelistUsernames
        block_on_official_review_requests:
          title: block_on_official_review_requests
          type: boolean
          x-go-name: BlockOnOfficialReviewRequests
        block_on_outdated_branch:
          title: block_on_outdated_branch
          type: boolean
          x-go-name: BlockOnOutdatedBranch
        block_on_rejected_reviews:
          title: block_on_rejected_reviews
          type: boolean
          x-go-name: BlockOnRejectedReviews
        branch_name:
          description: "Deprecated: true"
          title: branch_name
          type: string
          x-go-name: BranchName
        dismiss_stale_approvals:
          title: dismiss_stale_approvals
          type: boolean
          x-go-name: DismissStaleApprovals
        enable_approvals_whitelist:
          title: enable_approvals_whitelist
          type: boolean
          x-go-name: EnableApprovalsWhitelist
        enable_merge_whitelist:
          title: enable_merge_whitelist
          type: boolean
          x-go-name: EnableMergeWhitelist
        enable_push:
          title: enable_push
          type: boolean
          x-go-name: EnablePush
        enable_push_whitelist:
          title: enable_push_whitelist
          type: boolean
          x-go-name: EnablePushWhitelist
        enable_status_check:
          title: enable_status_check
          type: boolean
          x-go-name: EnableStatusCheck
        merge_whitelist_teams:
          items:
            type: string
          title: merge_whitelist_teams
          type: array
          x-go-name: MergeWhitelistTeams
        merge_whitelist_usernames:
          items:
            type: string
          title: merge_whitelist_usernames
          type: array
          x-go-name: MergeWhitelistUsernames
        protected_file_patterns:
          title: protected_file_patterns
          type: string
          x-go-name: ProtectedFilePatterns
        push_whitelist_deploy_keys:
          title: push_whitelist_deploy_keys
          type: boolean
          x-go-name: PushWhitelistDeployKeys
        push_whitelist_teams:
          items:
            type: string
          title: push_whitelist_teams
          type: array
          x-go-name: PushWhitelistTeams
        push_whitelist_usernames:
          items:
            type: string
          title: push_whitelist_usernames
          type: array
          x-go-name: PushWhitelistUsernames
        require_signed_commits:
          title: require_signed_commits
          type: boolean
          x-go-name: RequireSignedCommits
        required_approvals:
          format: int64
          title: required_approvals
          type: integer
          x-go-name: RequiredApprovals
        rule_name:
          title: rule_name
          type: string
          x-go-name: RuleName
        status_check_contexts:
          items:
            type: string
          title: status_check_contexts
          type: array
          x-go-name: StatusCheckContexts
        unprotected_file_patterns:
          title: unprotected_file_patterns
          type: string
          x-go-name: UnprotectedFilePatterns
      title: CreateBranchProtectionOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateBranchRepoOption:
      description: CreateBranchRepoOption options when creating a branch in a repository
      example:
        new_branch_name: new_branch_name
        old_branch_name: old_branch_name
      properties:
        new_branch_name:
          description: Name of the branch to create
          title: new_branch_name
          type: string
          uniqueItems: true
          x-go-name: BranchName
        old_branch_name:
          description: Name of the old branch to create from
          title: old_branch_name
          type: string
          uniqueItems: true
          x-go-name: OldBranchName
      required:
      - new_branch_name
      title: CreateBranchRepoOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateEmailOption:
      description: CreateEmailOption options when creating email addresses
      example:
        emails:
        - emails
        - emails
      properties:
        emails:
          description: email addresses to add
          items:
            type: string
          title: emails
          type: array
          x-go-name: Emails
      title: CreateEmailOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateFileOptions:
      description: |-
        CreateFileOptions options for creating files
        Note: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)
      example:
        committer:
          name: name
          email: email
        author:
          name: name
          email: email
        new_branch: new_branch
        dates:
          committer: 2000-01-23T04:56:07.000+00:00
          author: 2000-01-23T04:56:07.000+00:00
        signoff: true
        message: message
        branch: branch
        content: content
      properties:
        author:
          $ref: '#/components/schemas/Identity'
        branch:
          description: "branch (optional) to base this file from. if not given, the\
            \ default branch is used"
          title: branch
          type: string
          x-go-name: BranchName
        committer:
          $ref: '#/components/schemas/Identity'
        content:
          description: content must be base64 encoded
          title: content
          type: string
          x-go-name: Content
        dates:
          $ref: '#/components/schemas/CommitDateOptions'
        message:
          description: "message (optional) for the commit of this file. if not supplied,\
            \ a default message will be used"
          title: message
          type: string
          x-go-name: Message
        new_branch:
          description: new_branch (optional) will make a new branch from `branch`
            before creating the file
          title: new_branch
          type: string
          x-go-name: NewBranchName
        signoff:
          description: Add a Signed-off-by trailer by the committer at the end of
            the commit log message.
          title: signoff
          type: boolean
          x-go-name: Signoff
      required:
      - content
      title: CreateFileOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateForkOption:
      description: CreateForkOption options for creating a fork
      example:
        organization: organization
        name: name
      properties:
        name:
          description: name of the forked repository
          title: name
          type: string
          x-go-name: Name
        organization:
          description: "organization name, if forking into an organization"
          title: organization
          type: string
          x-go-name: Organization
      title: CreateForkOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateGPGKeyOption:
      description: CreateGPGKeyOption options create user GPG key
      example:
        armored_public_key: armored_public_key
        armored_signature: armored_signature
      properties:
        armored_public_key:
          description: An armored GPG key to add
          title: armored_public_key
          type: string
          uniqueItems: true
          x-go-name: ArmoredKey
        armored_signature:
          title: armored_signature
          type: string
          x-go-name: Signature
      required:
      - armored_public_key
      title: CreateGPGKeyOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateHookOption:
      description: CreateHookOption options when create a hook
      example:
        branch_filter: branch_filter
        active: false
        type: dingtalk
        config:
          key: config
        authorization_header: authorization_header
        events:
        - events
        - events
      properties:
        active:
          default: false
          title: active
          type: boolean
          x-go-name: Active
        authorization_header:
          title: authorization_header
          type: string
          x-go-name: AuthorizationHeader
        branch_filter:
          title: branch_filter
          type: string
          x-go-name: BranchFilter
        config:
          additionalProperties:
            type: string
          description: |-
            CreateHookOptionConfig has all config options in it
            required are "content_type" and "url" Required
          title: config
          type: object
          x-go-package: code.gitea.io/gitea/modules/structs
        events:
          items:
            type: string
          title: events
          type: array
          x-go-name: Events
        type:
          enum:
          - dingtalk
          - discord
          - gitea
          - gogs
          - msteams
          - slack
          - telegram
          - feishu
          - wechatwork
          - packagist
          title: type
          type: string
          x-go-name: Type
      required:
      - config
      - type
      title: CreateHookOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateHookOptionConfig:
      additionalProperties:
        type: string
      description: |-
        CreateHookOptionConfig has all config options in it
        required are "content_type" and "url" Required
      title: config
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateIssueCommentOption:
      description: CreateIssueCommentOption options for creating a comment on an issue
      example:
        body: body
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
      required:
      - body
      title: CreateIssueCommentOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateIssueOption:
      description: CreateIssueOption options to create one issue
      example:
        ref: ref
        milestone: 6
        due_date: 2000-01-23T04:56:07.000+00:00
        assignees:
        - assignees
        - assignees
        closed: true
        assignee: assignee
        body: body
        title: title
        labels:
        - 0
        - 0
      properties:
        assignee:
          description: deprecated
          title: assignee
          type: string
          x-go-name: Assignee
        assignees:
          items:
            type: string
          title: assignees
          type: array
          x-go-name: Assignees
        body:
          title: body
          type: string
          x-go-name: Body
        closed:
          title: closed
          type: boolean
          x-go-name: Closed
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
        labels:
          description: list of label ids
          items:
            format: int64
            type: integer
          title: labels
          type: array
          x-go-name: Labels
        milestone:
          description: milestone id
          format: int64
          title: milestone
          type: integer
          x-go-name: Milestone
        ref:
          title: ref
          type: string
          x-go-name: Ref
        title:
          title: title
          type: string
          x-go-name: Title
      required:
      - title
      title: CreateIssueOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateKeyOption:
      description: CreateKeyOption options when creating a key
      example:
        read_only: true
        title: title
        key: key
      properties:
        key:
          description: An armored SSH key to add
          title: key
          type: string
          uniqueItems: true
          x-go-name: Key
        read_only:
          description: Describe if the key has only read access or read/write
          title: read_only
          type: boolean
          x-go-name: ReadOnly
        title:
          description: Title of the key to add
          title: title
          type: string
          uniqueItems: true
          x-go-name: Title
      required:
      - key
      - title
      title: CreateKeyOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateLabelOption:
      description: CreateLabelOption options for creating a label
      example:
        color: '#00aabb'
        name: name
        description: description
        exclusive: false
      properties:
        color:
          example: '#00aabb'
          title: color
          type: string
          x-go-name: Color
        description:
          title: description
          type: string
          x-go-name: Description
        exclusive:
          example: false
          title: exclusive
          type: boolean
          x-go-name: Exclusive
        name:
          title: name
          type: string
          x-go-name: Name
      required:
      - color
      - name
      title: CreateLabelOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateMilestoneOption:
      description: CreateMilestoneOption options for creating a milestone
      example:
        description: description
        state: open
        title: title
        due_on: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          title: description
          type: string
          x-go-name: Description
        due_on:
          format: date-time
          title: due_on
          type: string
          x-go-name: Deadline
        state:
          enum:
          - open
          - closed
          title: state
          type: string
          x-go-name: State
        title:
          title: title
          type: string
          x-go-name: Title
      title: CreateMilestoneOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateOAuth2ApplicationOptions:
      description: CreateOAuth2ApplicationOptions holds options to create an oauth2
        application
      example:
        name: name
        confidential_client: true
        redirect_uris:
        - redirect_uris
        - redirect_uris
      properties:
        confidential_client:
          title: confidential_client
          type: boolean
          x-go-name: ConfidentialClient
        name:
          title: name
          type: string
          x-go-name: Name
        redirect_uris:
          items:
            type: string
          title: redirect_uris
          type: array
          x-go-name: RedirectURIs
      title: CreateOAuth2ApplicationOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateOrgOption:
      description: CreateOrgOption options for creating an organization
      example:
        website: website
        full_name: full_name
        repo_admin_change_team_access: true
        visibility: public
        description: description
        location: location
        username: username
      properties:
        description:
          title: description
          type: string
          x-go-name: Description
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        location:
          title: location
          type: string
          x-go-name: Location
        repo_admin_change_team_access:
          title: repo_admin_change_team_access
          type: boolean
          x-go-name: RepoAdminChangeTeamAccess
        username:
          title: username
          type: string
          x-go-name: UserName
        visibility:
          description: "possible values are `public` (default), `limited` or `private`"
          enum:
          - public
          - limited
          - private
          title: visibility
          type: string
          x-go-name: Visibility
        website:
          title: website
          type: string
          x-go-name: Website
      required:
      - username
      title: CreateOrgOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreatePullRequestOption:
      description: CreatePullRequestOption options when creating a pull request
      example:
        head: head
        milestone: 6
        due_date: 2000-01-23T04:56:07.000+00:00
        assignees:
        - assignees
        - assignees
        assignee: assignee
        body: body
        title: title
        base: base
        labels:
        - 0
        - 0
      properties:
        assignee:
          title: assignee
          type: string
          x-go-name: Assignee
        assignees:
          items:
            type: string
          title: assignees
          type: array
          x-go-name: Assignees
        base:
          title: base
          type: string
          x-go-name: Base
        body:
          title: body
          type: string
          x-go-name: Body
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
        head:
          title: head
          type: string
          x-go-name: Head
        labels:
          items:
            format: int64
            type: integer
          title: labels
          type: array
          x-go-name: Labels
        milestone:
          format: int64
          title: milestone
          type: integer
          x-go-name: Milestone
        title:
          title: title
          type: string
          x-go-name: Title
      title: CreatePullRequestOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreatePullReviewComment:
      description: CreatePullReviewComment represent a review comment for creation
        api
      example:
        path: path
        new_position: 0
        old_position: 6
        body: body
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
        new_position:
          description: if comment to new file line or 0
          format: int64
          title: new_position
          type: integer
          x-go-name: NewLineNum
        old_position:
          description: if comment to old file line or 0
          format: int64
          title: old_position
          type: integer
          x-go-name: OldLineNum
        path:
          description: the tree path
          title: path
          type: string
          x-go-name: Path
      title: CreatePullReviewComment
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreatePullReviewOptions:
      description: CreatePullReviewOptions are options to create a pull review
      example:
        comments:
        - path: path
          new_position: 0
          old_position: 6
          body: body
        - path: path
          new_position: 0
          old_position: 6
          body: body
        body: body
        event: event
        commit_id: commit_id
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
        comments:
          items:
            $ref: '#/components/schemas/CreatePullReviewComment'
          title: comments
          type: array
          x-go-name: Comments
        commit_id:
          title: commit_id
          type: string
          x-go-name: CommitID
        event:
          description: ReviewStateType review state type
          title: state
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
      title: CreatePullReviewOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreatePushMirrorOption:
      example:
        remote_username: remote_username
        sync_on_commit: true
        interval: interval
        remote_address: remote_address
        remote_password: remote_password
      properties:
        interval:
          title: interval
          type: string
          x-go-name: Interval
        remote_address:
          title: remote_address
          type: string
          x-go-name: RemoteAddress
        remote_password:
          title: remote_password
          type: string
          x-go-name: RemotePassword
        remote_username:
          title: remote_username
          type: string
          x-go-name: RemoteUsername
        sync_on_commit:
          title: sync_on_commit
          type: boolean
          x-go-name: SyncOnCommit
      title: CreatePushMirrorOption represents need information to create a push mirror
        of a repository.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateReleaseOption:
      description: CreateReleaseOption options when creating a release
      example:
        prerelease: true
        tag_name: tag_name
        draft: true
        target_commitish: target_commitish
        name: name
        body: body
      properties:
        body:
          title: body
          type: string
          x-go-name: Note
        draft:
          title: draft
          type: boolean
          x-go-name: IsDraft
        name:
          title: name
          type: string
          x-go-name: Title
        prerelease:
          title: prerelease
          type: boolean
          x-go-name: IsPrerelease
        tag_name:
          title: tag_name
          type: string
          x-go-name: TagName
        target_commitish:
          title: target_commitish
          type: string
          x-go-name: Target
      required:
      - tag_name
      title: CreateReleaseOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateRepoOption:
      description: CreateRepoOption options when creating repository
      example:
        auto_init: true
        template: true
        issue_labels: issue_labels
        license: license
        private: true
        trust_model: default
        gitignores: gitignores
        name: name
        description: description
        default_branch: default_branch
        readme: readme
      properties:
        auto_init:
          description: Whether the repository should be auto-initialized?
          title: auto_init
          type: boolean
          x-go-name: AutoInit
        default_branch:
          description: DefaultBranch of the repository (used when initializes and
            in template)
          title: default_branch
          type: string
          x-go-name: DefaultBranch
        description:
          description: Description of the repository to create
          title: description
          type: string
          x-go-name: Description
        gitignores:
          description: Gitignores to use
          title: gitignores
          type: string
          x-go-name: Gitignores
        issue_labels:
          description: Label-Set to use
          title: issue_labels
          type: string
          x-go-name: IssueLabels
        license:
          description: License to use
          title: license
          type: string
          x-go-name: License
        name:
          description: Name of the repository to create
          title: name
          type: string
          uniqueItems: true
          x-go-name: Name
        private:
          description: Whether the repository is private
          title: private
          type: boolean
          x-go-name: Private
        readme:
          description: Readme of the repository to create
          title: readme
          type: string
          x-go-name: Readme
        template:
          description: Whether the repository is template
          title: template
          type: boolean
          x-go-name: Template
        trust_model:
          description: TrustModel of the repository
          enum:
          - default
          - collaborator
          - committer
          - collaboratorcommitter
          title: trust_model
          type: string
          x-go-name: TrustModel
      required:
      - name
      title: CreateRepoOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateStatusOption:
      description: CreateStatusOption holds the information needed to create a new
        CommitStatus for a Commit
      example:
        target_url: target_url
        context: context
        description: description
        state: state
      properties:
        context:
          title: context
          type: string
          x-go-name: Context
        description:
          title: description
          type: string
          x-go-name: Description
        state:
          description: |-
            CommitStatusState holds the state of a CommitStatus
            It can be "pending", "success", "error", "failure", and "warning"
          title: CommitStatusState
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        target_url:
          title: target_url
          type: string
          x-go-name: TargetURL
      title: CreateStatusOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateTagOption:
      description: CreateTagOption options when creating a tag
      example:
        tag_name: tag_name
        message: message
        target: target
      properties:
        message:
          title: message
          type: string
          x-go-name: Message
        tag_name:
          title: tag_name
          type: string
          x-go-name: TagName
        target:
          title: target
          type: string
          x-go-name: Target
      required:
      - tag_name
      title: CreateTagOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateTeamOption:
      description: CreateTeamOption options for creating a team
      example:
        can_create_org_repo: true
        units_map:
          repo.code: read
          repo.ext_issues: none
          repo.ext_wiki: none
          repo.issues: write
          repo.projects: none
          repo.pulls: owner
          repo.releases: none
          repo.wiki: admin
        name: name
        description: description
        permission: read
        includes_all_repositories: true
        units:
        - repo.code
        - repo.issues
        - repo.ext_issues
        - repo.wiki
        - repo.pulls
        - repo.releases
        - repo.projects
        - repo.ext_wiki
      properties:
        can_create_org_repo:
          title: can_create_org_repo
          type: boolean
          x-go-name: CanCreateOrgRepo
        description:
          title: description
          type: string
          x-go-name: Description
        includes_all_repositories:
          title: includes_all_repositories
          type: boolean
          x-go-name: IncludesAllRepositories
        name:
          title: name
          type: string
          x-go-name: Name
        permission:
          enum:
          - read
          - write
          - admin
          title: permission
          type: string
          x-go-name: Permission
        units:
          example:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
          items:
            type: string
          title: units
          type: array
          x-go-name: Units
        units_map:
          additionalProperties:
            type: string
          example:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          title: units_map
          type: object
          x-go-name: UnitsMap
      required:
      - name
      title: CreateTeamOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateUserOption:
      description: CreateUserOption create user options
      example:
        must_change_password: true
        password: password
        full_name: full_name
        login_name: login_name
        visibility: visibility
        restricted: true
        created_at: 2000-01-23T04:56:07.000+00:00
        send_notify: true
        source_id: 0
        email: email
        username: username
      properties:
        created_at:
          description: |-
            For explicitly setting the user creation timestamp. Useful when users are
            migrated from other systems. When omitted, the user's creation timestamp
            will be set to "now".
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        login_name:
          title: login_name
          type: string
          x-go-name: LoginName
        must_change_password:
          title: must_change_password
          type: boolean
          x-go-name: MustChangePassword
        password:
          title: password
          type: string
          x-go-name: Password
        restricted:
          title: restricted
          type: boolean
          x-go-name: Restricted
        send_notify:
          title: send_notify
          type: boolean
          x-go-name: SendNotify
        source_id:
          format: int64
          title: source_id
          type: integer
          x-go-name: SourceID
        username:
          title: username
          type: string
          x-go-name: Username
        visibility:
          title: visibility
          type: string
          x-go-name: Visibility
      required:
      - email
      - password
      - username
      title: CreateUserOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    CreateWikiPageOptions:
      description: CreateWikiPageOptions form for creating wiki
      example:
        content_base64: content_base64
        message: message
        title: title
      properties:
        content_base64:
          description: content must be base64 encoded
          title: content_base64
          type: string
          x-go-name: ContentBase64
        message:
          description: optional commit message summarizing the change
          title: message
          type: string
          x-go-name: Message
        title:
          description: page title. leave empty to keep unchanged
          title: title
          type: string
          x-go-name: Title
      title: CreateWikiPageOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Cron:
      description: Cron represents a Cron task
      example:
        next: 2000-01-23T04:56:07.000+00:00
        schedule: schedule
        exec_times: 0
        prev: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        exec_times:
          format: int64
          title: exec_times
          type: integer
          x-go-name: ExecTimes
        name:
          title: name
          type: string
          x-go-name: Name
        next:
          format: date-time
          title: next
          type: string
          x-go-name: Next
        prev:
          format: date-time
          title: prev
          type: string
          x-go-name: Prev
        schedule:
          title: schedule
          type: string
          x-go-name: Schedule
      title: Cron
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    DeleteEmailOption:
      description: DeleteEmailOption options when deleting email addresses
      example:
        emails:
        - emails
        - emails
      properties:
        emails:
          description: email addresses to delete
          items:
            type: string
          title: emails
          type: array
          x-go-name: Emails
      title: DeleteEmailOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    DeleteFileOptions:
      description: |-
        DeleteFileOptions options for deleting files (used for other File structs below)
        Note: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)
      example:
        committer:
          name: name
          email: email
        author:
          name: name
          email: email
        new_branch: new_branch
        dates:
          committer: 2000-01-23T04:56:07.000+00:00
          author: 2000-01-23T04:56:07.000+00:00
        signoff: true
        message: message
        branch: branch
        sha: sha
      properties:
        author:
          $ref: '#/components/schemas/Identity'
        branch:
          description: "branch (optional) to base this file from. if not given, the\
            \ default branch is used"
          title: branch
          type: string
          x-go-name: BranchName
        committer:
          $ref: '#/components/schemas/Identity'
        dates:
          $ref: '#/components/schemas/CommitDateOptions'
        message:
          description: "message (optional) for the commit of this file. if not supplied,\
            \ a default message will be used"
          title: message
          type: string
          x-go-name: Message
        new_branch:
          description: new_branch (optional) will make a new branch from `branch`
            before creating the file
          title: new_branch
          type: string
          x-go-name: NewBranchName
        sha:
          description: sha is the SHA for the file that already exists
          title: sha
          type: string
          x-go-name: SHA
        signoff:
          description: Add a Signed-off-by trailer by the committer at the end of
            the commit log message.
          title: signoff
          type: boolean
          x-go-name: Signoff
      required:
      - sha
      title: DeleteFileOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    DeployKey:
      description: DeployKey a deploy key
      example:
        key_id: 6
        read_only: true
        fingerprint: fingerprint
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        repository:
          parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        title: title
        key: key
        url: url
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        fingerprint:
          title: fingerprint
          type: string
          x-go-name: Fingerprint
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        key:
          title: key
          type: string
          x-go-name: Key
        key_id:
          format: int64
          title: key_id
          type: integer
          x-go-name: KeyID
        read_only:
          title: read_only
          type: boolean
          x-go-name: ReadOnly
        repository:
          $ref: '#/components/schemas/Repository'
        title:
          title: title
          type: string
          x-go-name: Title
        url:
          title: url
          type: string
          x-go-name: URL
      title: DeployKey
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    DismissPullReviewOptions:
      description: DismissPullReviewOptions are options to dismiss a pull review
      example:
        message: message
        priors: true
      properties:
        message:
          title: message
          type: string
          x-go-name: Message
        priors:
          title: priors
          type: boolean
          x-go-name: Priors
      title: DismissPullReviewOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditAttachmentOptions:
      description: EditAttachmentOptions options for editing attachments
      example:
        name: name
      properties:
        name:
          title: name
          type: string
          x-go-name: Name
      title: EditAttachmentOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditBranchProtectionOption:
      description: EditBranchProtectionOption options for editing a branch protection
      example:
        block_on_rejected_reviews: true
        merge_whitelist_teams:
        - merge_whitelist_teams
        - merge_whitelist_teams
        enable_push: true
        require_signed_commits: true
        enable_merge_whitelist: true
        enable_push_whitelist: true
        push_whitelist_teams:
        - push_whitelist_teams
        - push_whitelist_teams
        block_on_outdated_branch: true
        push_whitelist_deploy_keys: true
        approvals_whitelist_username:
        - approvals_whitelist_username
        - approvals_whitelist_username
        dismiss_stale_approvals: true
        enable_status_check: true
        status_check_contexts:
        - status_check_contexts
        - status_check_contexts
        push_whitelist_usernames:
        - push_whitelist_usernames
        - push_whitelist_usernames
        merge_whitelist_usernames:
        - merge_whitelist_usernames
        - merge_whitelist_usernames
        protected_file_patterns: protected_file_patterns
        enable_approvals_whitelist: true
        approvals_whitelist_teams:
        - approvals_whitelist_teams
        - approvals_whitelist_teams
        required_approvals: 0
        unprotected_file_patterns: unprotected_file_patterns
        block_on_official_review_requests: true
      properties:
        approvals_whitelist_teams:
          items:
            type: string
          title: approvals_whitelist_teams
          type: array
          x-go-name: ApprovalsWhitelistTeams
        approvals_whitelist_username:
          items:
            type: string
          title: approvals_whitelist_username
          type: array
          x-go-name: ApprovalsWhitelistUsernames
        block_on_official_review_requests:
          title: block_on_official_review_requests
          type: boolean
          x-go-name: BlockOnOfficialReviewRequests
        block_on_outdated_branch:
          title: block_on_outdated_branch
          type: boolean
          x-go-name: BlockOnOutdatedBranch
        block_on_rejected_reviews:
          title: block_on_rejected_reviews
          type: boolean
          x-go-name: BlockOnRejectedReviews
        dismiss_stale_approvals:
          title: dismiss_stale_approvals
          type: boolean
          x-go-name: DismissStaleApprovals
        enable_approvals_whitelist:
          title: enable_approvals_whitelist
          type: boolean
          x-go-name: EnableApprovalsWhitelist
        enable_merge_whitelist:
          title: enable_merge_whitelist
          type: boolean
          x-go-name: EnableMergeWhitelist
        enable_push:
          title: enable_push
          type: boolean
          x-go-name: EnablePush
        enable_push_whitelist:
          title: enable_push_whitelist
          type: boolean
          x-go-name: EnablePushWhitelist
        enable_status_check:
          title: enable_status_check
          type: boolean
          x-go-name: EnableStatusCheck
        merge_whitelist_teams:
          items:
            type: string
          title: merge_whitelist_teams
          type: array
          x-go-name: MergeWhitelistTeams
        merge_whitelist_usernames:
          items:
            type: string
          title: merge_whitelist_usernames
          type: array
          x-go-name: MergeWhitelistUsernames
        protected_file_patterns:
          title: protected_file_patterns
          type: string
          x-go-name: ProtectedFilePatterns
        push_whitelist_deploy_keys:
          title: push_whitelist_deploy_keys
          type: boolean
          x-go-name: PushWhitelistDeployKeys
        push_whitelist_teams:
          items:
            type: string
          title: push_whitelist_teams
          type: array
          x-go-name: PushWhitelistTeams
        push_whitelist_usernames:
          items:
            type: string
          title: push_whitelist_usernames
          type: array
          x-go-name: PushWhitelistUsernames
        require_signed_commits:
          title: require_signed_commits
          type: boolean
          x-go-name: RequireSignedCommits
        required_approvals:
          format: int64
          title: required_approvals
          type: integer
          x-go-name: RequiredApprovals
        status_check_contexts:
          items:
            type: string
          title: status_check_contexts
          type: array
          x-go-name: StatusCheckContexts
        unprotected_file_patterns:
          title: unprotected_file_patterns
          type: string
          x-go-name: UnprotectedFilePatterns
      title: EditBranchProtectionOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditDeadlineOption:
      description: EditDeadlineOption options for creating a deadline
      example:
        due_date: 2000-01-23T04:56:07.000+00:00
      properties:
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
      required:
      - due_date
      title: EditDeadlineOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditGitHookOption:
      description: EditGitHookOption options when modifying one Git hook
      example:
        content: content
      properties:
        content:
          title: content
          type: string
          x-go-name: Content
      title: EditGitHookOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditHookOption:
      description: EditHookOption options when modify one hook
      example:
        branch_filter: branch_filter
        active: true
        config:
          key: config
        authorization_header: authorization_header
        events:
        - events
        - events
      properties:
        active:
          title: active
          type: boolean
          x-go-name: Active
        authorization_header:
          title: authorization_header
          type: string
          x-go-name: AuthorizationHeader
        branch_filter:
          title: branch_filter
          type: string
          x-go-name: BranchFilter
        config:
          additionalProperties:
            type: string
          title: config
          type: object
          x-go-name: Config
        events:
          items:
            type: string
          title: events
          type: array
          x-go-name: Events
      title: EditHookOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditIssueCommentOption:
      description: EditIssueCommentOption options for editing a comment
      example:
        body: body
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
      required:
      - body
      title: EditIssueCommentOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditIssueOption:
      description: EditIssueOption options for editing an issue
      example:
        unset_due_date: true
        ref: ref
        milestone: 0
        due_date: 2000-01-23T04:56:07.000+00:00
        assignees:
        - assignees
        - assignees
        assignee: assignee
        state: state
        body: body
        title: title
      properties:
        assignee:
          description: deprecated
          title: assignee
          type: string
          x-go-name: Assignee
        assignees:
          items:
            type: string
          title: assignees
          type: array
          x-go-name: Assignees
        body:
          title: body
          type: string
          x-go-name: Body
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
        milestone:
          format: int64
          title: milestone
          type: integer
          x-go-name: Milestone
        ref:
          title: ref
          type: string
          x-go-name: Ref
        state:
          title: state
          type: string
          x-go-name: State
        title:
          title: title
          type: string
          x-go-name: Title
        unset_due_date:
          title: unset_due_date
          type: boolean
          x-go-name: RemoveDeadline
      title: EditIssueOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditLabelOption:
      description: EditLabelOption options for editing a label
      example:
        color: '#00aabb'
        name: name
        description: description
        exclusive: false
      properties:
        color:
          example: '#00aabb'
          title: color
          type: string
          x-go-name: Color
        description:
          title: description
          type: string
          x-go-name: Description
        exclusive:
          example: false
          title: exclusive
          type: boolean
          x-go-name: Exclusive
        name:
          title: name
          type: string
          x-go-name: Name
      title: EditLabelOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditMilestoneOption:
      description: EditMilestoneOption options for editing a milestone
      example:
        description: description
        state: state
        title: title
        due_on: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          title: description
          type: string
          x-go-name: Description
        due_on:
          format: date-time
          title: due_on
          type: string
          x-go-name: Deadline
        state:
          title: state
          type: string
          x-go-name: State
        title:
          title: title
          type: string
          x-go-name: Title
      title: EditMilestoneOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditOrgOption:
      description: EditOrgOption options for editing an organization
      example:
        website: website
        full_name: full_name
        repo_admin_change_team_access: true
        visibility: public
        description: description
        location: location
      properties:
        description:
          title: description
          type: string
          x-go-name: Description
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        location:
          title: location
          type: string
          x-go-name: Location
        repo_admin_change_team_access:
          title: repo_admin_change_team_access
          type: boolean
          x-go-name: RepoAdminChangeTeamAccess
        visibility:
          description: "possible values are `public`, `limited` or `private`"
          enum:
          - public
          - limited
          - private
          title: visibility
          type: string
          x-go-name: Visibility
        website:
          title: website
          type: string
          x-go-name: Website
      title: EditOrgOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditPullRequestOption:
      description: EditPullRequestOption options when modify pull request
      example:
        unset_due_date: true
        milestone: 6
        allow_maintainer_edit: true
        due_date: 2000-01-23T04:56:07.000+00:00
        assignees:
        - assignees
        - assignees
        assignee: assignee
        state: state
        body: body
        title: title
        base: base
        labels:
        - 0
        - 0
      properties:
        allow_maintainer_edit:
          title: allow_maintainer_edit
          type: boolean
          x-go-name: AllowMaintainerEdit
        assignee:
          title: assignee
          type: string
          x-go-name: Assignee
        assignees:
          items:
            type: string
          title: assignees
          type: array
          x-go-name: Assignees
        base:
          title: base
          type: string
          x-go-name: Base
        body:
          title: body
          type: string
          x-go-name: Body
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
        labels:
          items:
            format: int64
            type: integer
          title: labels
          type: array
          x-go-name: Labels
        milestone:
          format: int64
          title: milestone
          type: integer
          x-go-name: Milestone
        state:
          title: state
          type: string
          x-go-name: State
        title:
          title: title
          type: string
          x-go-name: Title
        unset_due_date:
          title: unset_due_date
          type: boolean
          x-go-name: RemoveDeadline
      title: EditPullRequestOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditReactionOption:
      description: EditReactionOption contain the reaction type
      example:
        content: content
      properties:
        content:
          title: content
          type: string
          x-go-name: Reaction
      title: EditReactionOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditReleaseOption:
      description: EditReleaseOption options when editing a release
      example:
        prerelease: true
        tag_name: tag_name
        draft: true
        target_commitish: target_commitish
        name: name
        body: body
      properties:
        body:
          title: body
          type: string
          x-go-name: Note
        draft:
          title: draft
          type: boolean
          x-go-name: IsDraft
        name:
          title: name
          type: string
          x-go-name: Title
        prerelease:
          title: prerelease
          type: boolean
          x-go-name: IsPrerelease
        tag_name:
          title: tag_name
          type: string
          x-go-name: TagName
        target_commitish:
          title: target_commitish
          type: string
          x-go-name: Target
      title: EditReleaseOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditRepoOption:
      description: EditRepoOption options when editing a repository's properties
      example:
        ignore_whitespace_conflicts: true
        template: true
        allow_manual_merge: true
        private: true
        has_packages: true
        has_releases: true
        default_allow_maintainer_edit: true
        description: description
        allow_rebase_update: true
        has_pull_requests: true
        has_projects: true
        archived: true
        autodetect_manual_merge: true
        has_actions: true
        has_wiki: true
        allow_merge_commits: true
        allow_rebase_explicit: true
        external_tracker:
          external_tracker_regexp_pattern: external_tracker_regexp_pattern
          external_tracker_style: external_tracker_style
          external_tracker_url: external_tracker_url
          external_tracker_format: external_tracker_format
        mirror_interval: mirror_interval
        enable_prune: true
        allow_squash_merge: true
        external_wiki:
          external_wiki_url: external_wiki_url
        website: website
        internal_tracker:
          enable_issue_dependencies: true
          allow_only_contributors_to_track_time: true
          enable_time_tracker: true
        default_delete_branch_after_merge: true
        has_issues: true
        allow_rebase: true
        default_merge_style: default_merge_style
        name: name
        default_branch: default_branch
      properties:
        allow_manual_merge:
          description: "either `true` to allow mark pr as merged manually, or `false`\
            \ to prevent it."
          title: allow_manual_merge
          type: boolean
          x-go-name: AllowManualMerge
        allow_merge_commits:
          description: "either `true` to allow merging pull requests with a merge\
            \ commit, or `false` to prevent merging pull requests with merge commits."
          title: allow_merge_commits
          type: boolean
          x-go-name: AllowMerge
        allow_rebase:
          description: "either `true` to allow rebase-merging pull requests, or `false`\
            \ to prevent rebase-merging."
          title: allow_rebase
          type: boolean
          x-go-name: AllowRebase
        allow_rebase_explicit:
          description: "either `true` to allow rebase with explicit merge commits\
            \ (--no-ff), or `false` to prevent rebase with explicit merge commits."
          title: allow_rebase_explicit
          type: boolean
          x-go-name: AllowRebaseMerge
        allow_rebase_update:
          description: "either `true` to allow updating pull request branch by rebase,\
            \ or `false` to prevent it."
          title: allow_rebase_update
          type: boolean
          x-go-name: AllowRebaseUpdate
        allow_squash_merge:
          description: "either `true` to allow squash-merging pull requests, or `false`\
            \ to prevent squash-merging."
          title: allow_squash_merge
          type: boolean
          x-go-name: AllowSquash
        archived:
          description: set to `true` to archive this repository.
          title: archived
          type: boolean
          x-go-name: Archived
        autodetect_manual_merge:
          description: "either `true` to enable AutodetectManualMerge, or `false`\
            \ to prevent it. Note: In some special cases, misjudgments can occur."
          title: autodetect_manual_merge
          type: boolean
          x-go-name: AutodetectManualMerge
        default_allow_maintainer_edit:
          description: set to `true` to allow edits from maintainers by default
          title: default_allow_maintainer_edit
          type: boolean
          x-go-name: DefaultAllowMaintainerEdit
        default_branch:
          description: sets the default branch for this repository.
          title: default_branch
          type: string
          x-go-name: DefaultBranch
        default_delete_branch_after_merge:
          description: set to `true` to delete pr branch after merge by default
          title: default_delete_branch_after_merge
          type: boolean
          x-go-name: DefaultDeleteBranchAfterMerge
        default_merge_style:
          description: "set to a merge style to be used by this repository: \"merge\"\
            , \"rebase\", \"rebase-merge\", or \"squash\"."
          title: default_merge_style
          type: string
          x-go-name: DefaultMergeStyle
        description:
          description: a short description of the repository.
          title: description
          type: string
          x-go-name: Description
        enable_prune:
          description: enable prune - remove obsolete remote-tracking references
          title: enable_prune
          type: boolean
          x-go-name: EnablePrune
        external_tracker:
          $ref: '#/components/schemas/ExternalTracker'
        external_wiki:
          $ref: '#/components/schemas/ExternalWiki'
        has_actions:
          description: "either `true` to enable actions unit, or `false` to disable\
            \ them."
          title: has_actions
          type: boolean
          x-go-name: HasActions
        has_issues:
          description: either `true` to enable issues for this repository or `false`
            to disable them.
          title: has_issues
          type: boolean
          x-go-name: HasIssues
        has_packages:
          description: "either `true` to enable packages unit, or `false` to disable\
            \ them."
          title: has_packages
          type: boolean
          x-go-name: HasPackages
        has_projects:
          description: "either `true` to enable project unit, or `false` to disable\
            \ them."
          title: has_projects
          type: boolean
          x-go-name: HasProjects
        has_pull_requests:
          description: "either `true` to allow pull requests, or `false` to prevent\
            \ pull request."
          title: has_pull_requests
          type: boolean
          x-go-name: HasPullRequests
        has_releases:
          description: "either `true` to enable releases unit, or `false` to disable\
            \ them."
          title: has_releases
          type: boolean
          x-go-name: HasReleases
        has_wiki:
          description: either `true` to enable the wiki for this repository or `false`
            to disable it.
          title: has_wiki
          type: boolean
          x-go-name: HasWiki
        ignore_whitespace_conflicts:
          description: "either `true` to ignore whitespace for conflicts, or `false`\
            \ to not ignore whitespace."
          title: ignore_whitespace_conflicts
          type: boolean
          x-go-name: IgnoreWhitespaceConflicts
        internal_tracker:
          $ref: '#/components/schemas/InternalTracker'
        mirror_interval:
          description: set to a string like `8h30m0s` to set the mirror interval time
          title: mirror_interval
          type: string
          x-go-name: MirrorInterval
        name:
          description: name of the repository
          title: name
          type: string
          uniqueItems: true
          x-go-name: Name
        private:
          description: |-
            either `true` to make the repository private or `false` to make it public.
            Note: you will get a 422 error if the organization restricts changing repository visibility to organization
            owners and a non-owner tries to change the value of private.
          title: private
          type: boolean
          x-go-name: Private
        template:
          description: either `true` to make this repository a template or `false`
            to make it a normal repository
          title: template
          type: boolean
          x-go-name: Template
        website:
          description: a URL with more information about the repository.
          title: website
          type: string
          x-go-name: Website
      title: EditRepoOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditTeamOption:
      description: EditTeamOption options for editing a team
      example:
        can_create_org_repo: true
        units_map:
          repo.code: read
          repo.ext_issues: none
          repo.ext_wiki: none
          repo.issues: write
          repo.projects: none
          repo.pulls: owner
          repo.releases: none
          repo.wiki: admin
        name: name
        description: description
        permission: read
        includes_all_repositories: true
        units:
        - repo.code
        - repo.issues
        - repo.ext_issues
        - repo.wiki
        - repo.pulls
        - repo.releases
        - repo.projects
        - repo.ext_wiki
      properties:
        can_create_org_repo:
          title: can_create_org_repo
          type: boolean
          x-go-name: CanCreateOrgRepo
        description:
          title: description
          type: string
          x-go-name: Description
        includes_all_repositories:
          title: includes_all_repositories
          type: boolean
          x-go-name: IncludesAllRepositories
        name:
          title: name
          type: string
          x-go-name: Name
        permission:
          enum:
          - read
          - write
          - admin
          title: permission
          type: string
          x-go-name: Permission
        units:
          example:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
          items:
            type: string
          title: units
          type: array
          x-go-name: Units
        units_map:
          additionalProperties:
            type: string
          example:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          title: units_map
          type: object
          x-go-name: UnitsMap
      required:
      - name
      title: EditTeamOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    EditUserOption:
      description: EditUserOption edit user options
      example:
        website: website
        visibility: visibility
        active: true
        admin: true
        description: description
        max_repo_creation: 0
        must_change_password: true
        password: password
        full_name: full_name
        login_name: login_name
        restricted: true
        location: location
        allow_create_organization: true
        prohibit_login: true
        source_id: 6
        allow_import_local: true
        email: email
        allow_git_hook: true
      properties:
        active:
          title: active
          type: boolean
          x-go-name: Active
        admin:
          title: admin
          type: boolean
          x-go-name: Admin
        allow_create_organization:
          title: allow_create_organization
          type: boolean
          x-go-name: AllowCreateOrganization
        allow_git_hook:
          title: allow_git_hook
          type: boolean
          x-go-name: AllowGitHook
        allow_import_local:
          title: allow_import_local
          type: boolean
          x-go-name: AllowImportLocal
        description:
          title: description
          type: string
          x-go-name: Description
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        location:
          title: location
          type: string
          x-go-name: Location
        login_name:
          title: login_name
          type: string
          x-go-name: LoginName
        max_repo_creation:
          format: int64
          title: max_repo_creation
          type: integer
          x-go-name: MaxRepoCreation
        must_change_password:
          title: must_change_password
          type: boolean
          x-go-name: MustChangePassword
        password:
          title: password
          type: string
          x-go-name: Password
        prohibit_login:
          title: prohibit_login
          type: boolean
          x-go-name: ProhibitLogin
        restricted:
          title: restricted
          type: boolean
          x-go-name: Restricted
        source_id:
          format: int64
          title: source_id
          type: integer
          x-go-name: SourceID
        visibility:
          title: visibility
          type: string
          x-go-name: Visibility
        website:
          title: website
          type: string
          x-go-name: Website
      required:
      - login_name
      - source_id
      title: EditUserOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Email:
      description: Email an email address belonging to a user
      example:
        user_id: 0
        verified: true
        email: email
        primary: true
        username: username
      properties:
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        primary:
          title: primary
          type: boolean
          x-go-name: Primary
        user_id:
          format: int64
          title: user_id
          type: integer
          x-go-name: UserID
        username:
          title: username
          type: string
          x-go-name: UserName
        verified:
          title: verified
          type: boolean
          x-go-name: Verified
      title: Email
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ExternalTracker:
      description: ExternalTracker represents settings for external tracker
      example:
        external_tracker_regexp_pattern: external_tracker_regexp_pattern
        external_tracker_style: external_tracker_style
        external_tracker_url: external_tracker_url
        external_tracker_format: external_tracker_format
      properties:
        external_tracker_format:
          description: "External Issue Tracker URL Format. Use the placeholders {user},\
            \ {repo} and {index} for the username, repository name and issue index."
          title: external_tracker_format
          type: string
          x-go-name: ExternalTrackerFormat
        external_tracker_regexp_pattern:
          description: External Issue Tracker issue regular expression
          title: external_tracker_regexp_pattern
          type: string
          x-go-name: ExternalTrackerRegexpPattern
        external_tracker_style:
          description: "External Issue Tracker Number Format, either `numeric`, `alphanumeric`,\
            \ or `regexp`"
          title: external_tracker_style
          type: string
          x-go-name: ExternalTrackerStyle
        external_tracker_url:
          description: URL of external issue tracker.
          title: external_tracker_url
          type: string
          x-go-name: ExternalTrackerURL
      title: ExternalTracker
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ExternalWiki:
      description: ExternalWiki represents setting for external wiki
      example:
        external_wiki_url: external_wiki_url
      properties:
        external_wiki_url:
          description: URL of external wiki.
          title: external_wiki_url
          type: string
          x-go-name: ExternalWikiURL
      title: ExternalWiki
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    FileCommitResponse:
      example:
        committer:
          date: date
          name: name
          email: email
        author:
          date: date
          name: name
          email: email
        created: 2000-01-23T04:56:07.000+00:00
        html_url: html_url
        tree:
          created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
        message: message
        sha: sha
        url: url
        parents:
        - created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
        - created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
      properties:
        author:
          $ref: '#/components/schemas/CommitUser'
        committer:
          $ref: '#/components/schemas/CommitUser'
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        message:
          title: message
          type: string
          x-go-name: Message
        parents:
          items:
            $ref: '#/components/schemas/CommitMeta'
          title: parents
          type: array
          x-go-name: Parents
        sha:
          title: sha
          type: string
          x-go-name: SHA
        tree:
          $ref: '#/components/schemas/CommitMeta'
        url:
          title: url
          type: string
          x-go-name: URL
      title: FileCommitResponse contains information generated from a Git commit for
        a repo's file.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    FileDeleteResponse:
      description: FileDeleteResponse contains information about a repo's file that
        was deleted
      example:
        commit:
          committer:
            date: date
            name: name
            email: email
          author:
            date: date
            name: name
            email: email
          created: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          tree:
            created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
          message: message
          sha: sha
          url: url
          parents:
          - created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
          - created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
        content: ""
        verification:
          reason: reason
          payload: payload
          signature: signature
          verified: true
          signer:
            name: name
            email: email
            username: username
      properties:
        commit:
          $ref: '#/components/schemas/FileCommitResponse'
        content:
          title: content
          x-go-name: Content
        verification:
          $ref: '#/components/schemas/PayloadCommitVerification'
      title: FileDeleteResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    FileLinksResponse:
      description: FileLinksResponse contains the links for a repo's file
      example:
        git: git
        self: self
        html: html
      properties:
        git:
          title: git
          type: string
          x-go-name: GitURL
        html:
          title: html
          type: string
          x-go-name: HTMLURL
        self:
          title: self
          type: string
          x-go-name: Self
      title: FileLinksResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    FileResponse:
      description: FileResponse contains information about a repo's file
      example:
        commit:
          committer:
            date: date
            name: name
            email: email
          author:
            date: date
            name: name
            email: email
          created: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          tree:
            created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
          message: message
          sha: sha
          url: url
          parents:
          - created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
          - created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
        content:
          _links:
            git: git
            self: self
            html: html
          submodule_git_url: submodule_git_url
          last_commit_sha: last_commit_sha
          encoding: encoding
          type: type
          sha: sha
          content: content
          url: url
          target: target
          path: path
          size: 0
          html_url: html_url
          download_url: download_url
          name: name
          git_url: git_url
        verification:
          reason: reason
          payload: payload
          signature: signature
          verified: true
          signer:
            name: name
            email: email
            username: username
      properties:
        commit:
          $ref: '#/components/schemas/FileCommitResponse'
        content:
          $ref: '#/components/schemas/ContentsResponse'
        verification:
          $ref: '#/components/schemas/PayloadCommitVerification'
      title: FileResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GPGKey:
      description: GPGKey a user GPG key to sign commit and tag in repository
      example:
        public_key: public_key
        key_id: key_id
        verified: true
        created_at: 2000-01-23T04:56:07.000+00:00
        emails:
        - verified: true
          email: email
        - verified: true
          email: email
        can_certify: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        can_encrypt_comms: true
        can_encrypt_storage: true
        can_sign: true
        id: 0
        subkeys:
        - null
        - null
        primary_key_id: primary_key_id
      properties:
        can_certify:
          title: can_certify
          type: boolean
          x-go-name: CanCertify
        can_encrypt_comms:
          title: can_encrypt_comms
          type: boolean
          x-go-name: CanEncryptComms
        can_encrypt_storage:
          title: can_encrypt_storage
          type: boolean
          x-go-name: CanEncryptStorage
        can_sign:
          title: can_sign
          type: boolean
          x-go-name: CanSign
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        emails:
          items:
            $ref: '#/components/schemas/GPGKeyEmail'
          title: emails
          type: array
          x-go-name: Emails
        expires_at:
          format: date-time
          title: expires_at
          type: string
          x-go-name: Expires
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        key_id:
          title: key_id
          type: string
          x-go-name: KeyID
        primary_key_id:
          title: primary_key_id
          type: string
          x-go-name: PrimaryKeyID
        public_key:
          title: public_key
          type: string
          x-go-name: PublicKey
        subkeys:
          items:
            $ref: '#/components/schemas/GPGKey'
          title: subkeys
          type: array
          x-go-name: SubsKey
        verified:
          title: verified
          type: boolean
          x-go-name: Verified
      title: GPGKey
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GPGKeyEmail:
      description: GPGKeyEmail an email attached to a GPGKey
      example:
        verified: true
        email: email
      properties:
        email:
          title: email
          type: string
          x-go-name: Email
        verified:
          title: verified
          type: boolean
          x-go-name: Verified
      title: GPGKeyEmail
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GeneralAPISettings:
      description: GeneralAPISettings contains global api settings exposed by it
      example:
        max_response_items: 5
        default_git_trees_per_page: 0
        default_paging_num: 1
        default_max_blob_size: 6
      properties:
        default_git_trees_per_page:
          format: int64
          title: default_git_trees_per_page
          type: integer
          x-go-name: DefaultGitTreesPerPage
        default_max_blob_size:
          format: int64
          title: default_max_blob_size
          type: integer
          x-go-name: DefaultMaxBlobSize
        default_paging_num:
          format: int64
          title: default_paging_num
          type: integer
          x-go-name: DefaultPagingNum
        max_response_items:
          format: int64
          title: max_response_items
          type: integer
          x-go-name: MaxResponseItems
      title: GeneralAPISettings
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GeneralAttachmentSettings:
      description: GeneralAttachmentSettings contains global Attachment settings exposed
        by API
      example:
        max_files: 0
        allowed_types: allowed_types
        enabled: true
        max_size: 6
      properties:
        allowed_types:
          title: allowed_types
          type: string
          x-go-name: AllowedTypes
        enabled:
          title: enabled
          type: boolean
          x-go-name: Enabled
        max_files:
          format: int64
          title: max_files
          type: integer
          x-go-name: MaxFiles
        max_size:
          format: int64
          title: max_size
          type: integer
          x-go-name: MaxSize
      title: GeneralAttachmentSettings
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GeneralRepoSettings:
      description: GeneralRepoSettings contains global repository settings exposed
        by API
      example:
        migrations_disabled: true
        http_git_disabled: true
        lfs_disabled: true
        mirrors_disabled: true
        time_tracking_disabled: true
        stars_disabled: true
      properties:
        http_git_disabled:
          title: http_git_disabled
          type: boolean
          x-go-name: HTTPGitDisabled
        lfs_disabled:
          title: lfs_disabled
          type: boolean
          x-go-name: LFSDisabled
        migrations_disabled:
          title: migrations_disabled
          type: boolean
          x-go-name: MigrationsDisabled
        mirrors_disabled:
          title: mirrors_disabled
          type: boolean
          x-go-name: MirrorsDisabled
        stars_disabled:
          title: stars_disabled
          type: boolean
          x-go-name: StarsDisabled
        time_tracking_disabled:
          title: time_tracking_disabled
          type: boolean
          x-go-name: TimeTrackingDisabled
      title: GeneralRepoSettings
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GeneralUISettings:
      description: GeneralUISettings contains global ui settings exposed by API
      example:
        custom_emojis:
        - custom_emojis
        - custom_emojis
        allowed_reactions:
        - allowed_reactions
        - allowed_reactions
        default_theme: default_theme
      properties:
        allowed_reactions:
          items:
            type: string
          title: allowed_reactions
          type: array
          x-go-name: AllowedReactions
        custom_emojis:
          items:
            type: string
          title: custom_emojis
          type: array
          x-go-name: CustomEmojis
        default_theme:
          title: default_theme
          type: string
          x-go-name: DefaultTheme
      title: GeneralUISettings
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GenerateRepoOption:
      description: GenerateRepoOption options when creating repository using a template
      example:
        git_content: true
        owner: owner
        private: true
        git_hooks: true
        webhooks: true
        topics: true
        name: name
        description: description
        default_branch: default_branch
        avatar: true
        labels: true
      properties:
        avatar:
          description: include avatar of the template repo
          title: avatar
          type: boolean
          x-go-name: Avatar
        default_branch:
          description: Default branch of the new repository
          title: default_branch
          type: string
          x-go-name: DefaultBranch
        description:
          description: Description of the repository to create
          title: description
          type: string
          x-go-name: Description
        git_content:
          description: include git content of default branch in template repo
          title: git_content
          type: boolean
          x-go-name: GitContent
        git_hooks:
          description: include git hooks in template repo
          title: git_hooks
          type: boolean
          x-go-name: GitHooks
        labels:
          description: include labels in template repo
          title: labels
          type: boolean
          x-go-name: Labels
        name:
          description: Name of the repository to create
          title: name
          type: string
          uniqueItems: true
          x-go-name: Name
        owner:
          description: The organization or person who will own the new repository
          title: owner
          type: string
          x-go-name: Owner
        private:
          description: Whether the repository is private
          title: private
          type: boolean
          x-go-name: Private
        topics:
          description: include topics in template repo
          title: topics
          type: boolean
          x-go-name: Topics
        webhooks:
          description: include webhooks in template repo
          title: webhooks
          type: boolean
          x-go-name: Webhooks
      required:
      - name
      - owner
      title: GenerateRepoOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GitBlobResponse:
      description: GitBlobResponse represents a git blob
      example:
        size: 0
        encoding: encoding
        sha: sha
        content: content
        url: url
      properties:
        content:
          title: content
          type: string
          x-go-name: Content
        encoding:
          title: encoding
          type: string
          x-go-name: Encoding
        sha:
          title: sha
          type: string
          x-go-name: SHA
        size:
          format: int64
          title: size
          type: integer
          x-go-name: Size
        url:
          title: url
          type: string
          x-go-name: URL
      title: GitBlobResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GitEntry:
      description: GitEntry represents a git tree
      example:
        mode: mode
        path: path
        size: 1
        type: type
        sha: sha
        url: url
      properties:
        mode:
          title: mode
          type: string
          x-go-name: Mode
        path:
          title: path
          type: string
          x-go-name: Path
        sha:
          title: sha
          type: string
          x-go-name: SHA
        size:
          format: int64
          title: size
          type: integer
          x-go-name: Size
        type:
          title: type
          type: string
          x-go-name: Type
        url:
          title: url
          type: string
          x-go-name: URL
      title: GitEntry
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GitHook:
      description: GitHook represents a Git repository hook
      example:
        is_active: true
        name: name
        content: content
      properties:
        content:
          title: content
          type: string
          x-go-name: Content
        is_active:
          title: is_active
          type: boolean
          x-go-name: IsActive
        name:
          title: name
          type: string
          x-go-name: Name
      title: GitHook
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GitObject:
      example:
        type: type
        sha: sha
        url: url
      properties:
        sha:
          title: sha
          type: string
          x-go-name: SHA
        type:
          title: type
          type: string
          x-go-name: Type
        url:
          title: url
          type: string
          x-go-name: URL
      title: GitObject represents a Git object.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    GitTreeResponse:
      description: GitTreeResponse returns a git tree
      example:
        total_count: 6
        tree:
        - mode: mode
          path: path
          size: 1
          type: type
          sha: sha
          url: url
        - mode: mode
          path: path
          size: 1
          type: type
          sha: sha
          url: url
        truncated: true
        page: 0
        sha: sha
        url: url
      properties:
        page:
          format: int64
          title: page
          type: integer
          x-go-name: Page
        sha:
          title: sha
          type: string
          x-go-name: SHA
        total_count:
          format: int64
          title: total_count
          type: integer
          x-go-name: TotalCount
        tree:
          items:
            $ref: '#/components/schemas/GitEntry'
          title: tree
          type: array
          x-go-name: Entries
        truncated:
          title: truncated
          type: boolean
          x-go-name: Truncated
        url:
          title: url
          type: string
          x-go-name: URL
      title: GitTreeResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Hook:
      description: Hook a hook is a web hook when one repository changed
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        type: type
        config:
          key: config
        authorization_header: authorization_header
        events:
        - events
        - events
      properties:
        active:
          title: active
          type: boolean
          x-go-name: Active
        authorization_header:
          title: authorization_header
          type: string
          x-go-name: AuthorizationHeader
        config:
          additionalProperties:
            type: string
          title: config
          type: object
          x-go-name: Config
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        events:
          items:
            type: string
          title: events
          type: array
          x-go-name: Events
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        type:
          title: type
          type: string
          x-go-name: Type
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
      title: Hook
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Identity:
      description: Identity for a person's identity like an author or committer
      example:
        name: name
        email: email
      properties:
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        name:
          title: name
          type: string
          x-go-name: Name
      title: Identity
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    InternalTracker:
      description: InternalTracker represents settings for internal tracker
      example:
        enable_issue_dependencies: true
        allow_only_contributors_to_track_time: true
        enable_time_tracker: true
      properties:
        allow_only_contributors_to_track_time:
          description: Let only contributors track time (Built-in issue tracker)
          title: allow_only_contributors_to_track_time
          type: boolean
          x-go-name: AllowOnlyContributorsToTrackTime
        enable_issue_dependencies:
          description: Enable dependencies for issues and pull requests (Built-in
            issue tracker)
          title: enable_issue_dependencies
          type: boolean
          x-go-name: EnableIssueDependencies
        enable_time_tracker:
          description: Enable time tracking (Built-in issue tracker)
          title: enable_time_tracker
          type: boolean
          x-go-name: EnableTimeTracker
      title: InternalTracker
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Issue:
      description: Issue represents an issue in a repository
      example:
        is_locked: true
        pull_request:
          merged_at: 2000-01-23T04:56:07.000+00:00
          merged: true
        closed_at: 2000-01-23T04:56:07.000+00:00
        comments: 0
        original_author_id: 7
        due_date: 2000-01-23T04:56:07.000+00:00
        assignees:
        - website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        - website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        repository:
          owner: owner
          full_name: full_name
          name: name
          id: 9
        title: title
        url: url
        labels:
        - color: 00aabb
          name: name
          description: description
          exclusive: false
          id: 0
          url: url
        - color: 00aabb
          name: name
          description: description
          exclusive: false
          id: 0
          url: url
        number: 2
        ref: ref
        assets:
        - size: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          browser_download_url: browser_download_url
          id: 1
          uuid: uuid
          download_count: 6
        - size: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          browser_download_url: browser_download_url
          id: 1
          uuid: uuid
          download_count: 6
        milestone:
          closed_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 5
          state: state
          closed_issues: 1
          open_issues: 5
          title: title
          due_on: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        html_url: html_url
        assignee:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        id: 6
        state: state
        original_author: original_author
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Attachment'
          title: assets
          type: array
          x-go-name: Attachments
        assignee:
          $ref: '#/components/schemas/User'
        assignees:
          items:
            $ref: '#/components/schemas/User'
          title: assignees
          type: array
          x-go-name: Assignees
        body:
          title: body
          type: string
          x-go-name: Body
        closed_at:
          format: date-time
          title: closed_at
          type: string
          x-go-name: Closed
        comments:
          format: int64
          title: comments
          type: integer
          x-go-name: Comments
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        is_locked:
          title: is_locked
          type: boolean
          x-go-name: IsLocked
        labels:
          items:
            $ref: '#/components/schemas/Label'
          title: labels
          type: array
          x-go-name: Labels
        milestone:
          $ref: '#/components/schemas/Milestone'
        number:
          format: int64
          title: number
          type: integer
          x-go-name: Index
        original_author:
          title: original_author
          type: string
          x-go-name: OriginalAuthor
        original_author_id:
          format: int64
          title: original_author_id
          type: integer
          x-go-name: OriginalAuthorID
        pull_request:
          $ref: '#/components/schemas/PullRequestMeta'
        ref:
          title: ref
          type: string
          x-go-name: Ref
        repository:
          $ref: '#/components/schemas/RepositoryMeta'
        state:
          description: StateType issue state type
          title: StateType
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        title:
          title: title
          type: string
          x-go-name: Title
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        url:
          title: url
          type: string
          x-go-name: URL
        user:
          $ref: '#/components/schemas/User'
      title: Issue
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueConfig:
      example:
        contact_links:
        - about: about
          name: name
          url: url
        - about: about
          name: name
          url: url
        blank_issues_enabled: true
      properties:
        blank_issues_enabled:
          title: blank_issues_enabled
          type: boolean
          x-go-name: BlankIssuesEnabled
        contact_links:
          items:
            $ref: '#/components/schemas/IssueConfigContactLink'
          title: contact_links
          type: array
          x-go-name: ContactLinks
      title: IssueConfig
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueConfigContactLink:
      example:
        about: about
        name: name
        url: url
      properties:
        about:
          title: about
          type: string
          x-go-name: About
        name:
          title: name
          type: string
          x-go-name: Name
        url:
          title: url
          type: string
          x-go-name: URL
      title: IssueConfigContactLink
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueConfigValidation:
      example:
        valid: true
        message: message
      properties:
        message:
          title: message
          type: string
          x-go-name: Message
        valid:
          title: valid
          type: boolean
          x-go-name: Valid
      title: IssueConfigValidation
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueDeadline:
      description: IssueDeadline represents an issue deadline
      example:
        due_date: 2000-01-23T04:56:07.000+00:00
      properties:
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
      title: IssueDeadline
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueFormField:
      description: IssueFormField represents a form field
      example:
        attributes:
          key: ""
        id: id
        validations:
          key: ""
        type: type
      properties:
        attributes:
          additionalProperties: {}
          title: attributes
          type: object
          x-go-name: Attributes
        id:
          title: id
          type: string
          x-go-name: ID
        type:
          title: "IssueFormFieldType defines issue form field type, can be \"markdown\"\
            , \"textarea\", \"input\", \"dropdown\" or \"checkboxes\""
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        validations:
          additionalProperties: {}
          title: validations
          type: object
          x-go-name: Validations
      title: IssueFormField
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueFormFieldType:
      title: "IssueFormFieldType defines issue form field type, can be \"markdown\"\
        , \"textarea\", \"input\", \"dropdown\" or \"checkboxes\""
      type: string
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueLabelsOption:
      description: IssueLabelsOption a collection of labels
      example:
        labels:
        - 0
        - 0
      properties:
        labels:
          description: list of label IDs
          items:
            format: int64
            type: integer
          title: labels
          type: array
          x-go-name: Labels
      title: IssueLabelsOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueMeta:
      description: IssueMeta basic issue information
      example:
        owner: owner
        repo: repo
        index: 0
      properties:
        index:
          format: int64
          title: index
          type: integer
          x-go-name: Index
        owner:
          title: owner
          type: string
          x-go-name: Owner
        repo:
          title: repo
          type: string
          x-go-name: Name
      title: IssueMeta
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueTemplate:
      description: IssueTemplate represents an issue template for a repository
      example:
        ref: ref
        file_name: file_name
        about: about
        name: name
        body:
        - attributes:
            key: ""
          id: id
          validations:
            key: ""
          type: type
        - attributes:
            key: ""
          id: id
          validations:
            key: ""
          type: type
        title: title
        content: content
        labels:
        - labels
        - labels
      properties:
        about:
          title: about
          type: string
          x-go-name: About
        body:
          items:
            $ref: '#/components/schemas/IssueFormField'
          title: body
          type: array
          x-go-name: Fields
        content:
          title: content
          type: string
          x-go-name: Content
        file_name:
          title: file_name
          type: string
          x-go-name: FileName
        labels:
          items:
            type: string
          title: labels
          type: array
          x-go-package: code.gitea.io/gitea/modules/structs
        name:
          title: name
          type: string
          x-go-name: Name
        ref:
          title: ref
          type: string
          x-go-name: Ref
        title:
          title: title
          type: string
          x-go-name: Title
      title: IssueTemplate
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    IssueTemplateLabels:
      items:
        type: string
      title: labels
      type: array
      x-go-package: code.gitea.io/gitea/modules/structs
    Label:
      description: Label a label to an issue or a pr
      example:
        color: 00aabb
        name: name
        description: description
        exclusive: false
        id: 0
        url: url
      properties:
        color:
          example: 00aabb
          title: color
          type: string
          x-go-name: Color
        description:
          title: description
          type: string
          x-go-name: Description
        exclusive:
          example: false
          title: exclusive
          type: boolean
          x-go-name: Exclusive
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Name
        url:
          title: url
          type: string
          x-go-name: URL
      title: Label
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    MarkdownOption:
      description: MarkdownOption markdown options
      example:
        Context: Context
        Mode: Mode
        Wiki: true
        Text: Text
      properties:
        Context:
          description: |-
            Context to render

            in: body
          title: Context
          type: string
        Mode:
          description: |-
            Mode to render (comment, gfm, markdown)

            in: body
          title: Mode
          type: string
        Text:
          description: |-
            Text markdown to render

            in: body
          title: Text
          type: string
        Wiki:
          description: |-
            Is it a wiki page ?

            in: body
          title: Wiki
          type: boolean
      title: MarkdownOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    MarkupOption:
      description: MarkupOption markup options
      example:
        Context: Context
        FilePath: FilePath
        Mode: Mode
        Wiki: true
        Text: Text
      properties:
        Context:
          description: |-
            Context to render

            in: body
          title: Context
          type: string
        FilePath:
          description: |-
            File path for detecting extension in file mode

            in: body
          title: FilePath
          type: string
        Mode:
          description: |-
            Mode to render (comment, gfm, markdown, file)

            in: body
          title: Mode
          type: string
        Text:
          description: |-
            Text markup to render

            in: body
          title: Text
          type: string
        Wiki:
          description: |-
            Is it a wiki page ?

            in: body
          title: Wiki
          type: boolean
      title: MarkupOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    MergePullRequestOption:
      description: MergePullRequestForm form for merging Pull Request
      example:
        force_merge: true
        head_commit_id: head_commit_id
        delete_branch_after_merge: true
        merge_when_checks_succeed: true
        Do: merge
        MergeCommitID: MergeCommitID
        MergeMessageField: MergeMessageField
        MergeTitleField: MergeTitleField
      properties:
        Do:
          enum:
          - merge
          - rebase
          - rebase-merge
          - squash
          - manually-merged
          title: Do
          type: string
        MergeCommitID:
          title: MergeCommitID
          type: string
        MergeMessageField:
          title: MergeMessageField
          type: string
        MergeTitleField:
          title: MergeTitleField
          type: string
        delete_branch_after_merge:
          title: delete_branch_after_merge
          type: boolean
          x-go-name: DeleteBranchAfterMerge
        force_merge:
          title: force_merge
          type: boolean
          x-go-name: ForceMerge
        head_commit_id:
          title: head_commit_id
          type: string
          x-go-name: HeadCommitID
        merge_when_checks_succeed:
          title: merge_when_checks_succeed
          type: boolean
          x-go-name: MergeWhenChecksSucceed
      required:
      - Do
      title: MergePullRequestOption
      type: object
      x-go-name: MergePullRequestForm
      x-go-package: code.gitea.io/gitea/services/forms
    MigrateRepoOptions:
      description: |-
        MigrateRepoOptions options for migrating repository's
        this is used to interact with api v1
      example:
        lfs_endpoint: lfs_endpoint
        mirror: true
        private: true
        clone_addr: clone_addr
        wiki: true
        auth_password: auth_password
        description: description
        issues: true
        labels: true
        releases: true
        pull_requests: true
        uid: 0
        auth_username: auth_username
        service: git
        lfs: true
        repo_name: repo_name
        auth_token: auth_token
        milestones: true
        repo_owner: repo_owner
        mirror_interval: mirror_interval
      properties:
        auth_password:
          title: auth_password
          type: string
          x-go-name: AuthPassword
        auth_token:
          title: auth_token
          type: string
          x-go-name: AuthToken
        auth_username:
          title: auth_username
          type: string
          x-go-name: AuthUsername
        clone_addr:
          title: clone_addr
          type: string
          x-go-name: CloneAddr
        description:
          title: description
          type: string
          x-go-name: Description
        issues:
          title: issues
          type: boolean
          x-go-name: Issues
        labels:
          title: labels
          type: boolean
          x-go-name: Labels
        lfs:
          title: lfs
          type: boolean
          x-go-name: LFS
        lfs_endpoint:
          title: lfs_endpoint
          type: string
          x-go-name: LFSEndpoint
        milestones:
          title: milestones
          type: boolean
          x-go-name: Milestones
        mirror:
          title: mirror
          type: boolean
          x-go-name: Mirror
        mirror_interval:
          title: mirror_interval
          type: string
          x-go-name: MirrorInterval
        private:
          title: private
          type: boolean
          x-go-name: Private
        pull_requests:
          title: pull_requests
          type: boolean
          x-go-name: PullRequests
        releases:
          title: releases
          type: boolean
          x-go-name: Releases
        repo_name:
          title: repo_name
          type: string
          x-go-name: RepoName
        repo_owner:
          description: Name of User or Organisation who will own Repo after migration
          title: repo_owner
          type: string
          x-go-name: RepoOwner
        service:
          enum:
          - git
          - github
          - gitea
          - gitlab
          title: service
          type: string
          x-go-name: Service
        uid:
          description: deprecated (only for backwards compatibility)
          format: int64
          title: uid
          type: integer
          x-go-name: RepoOwnerID
        wiki:
          title: wiki
          type: boolean
          x-go-name: Wiki
      required:
      - clone_addr
      - repo_name
      title: MigrateRepoOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Milestone:
      description: Milestone milestone is a collection of issues on one repository
      example:
        closed_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 5
        state: state
        closed_issues: 1
        open_issues: 5
        title: title
        due_on: 2000-01-23T04:56:07.000+00:00
      properties:
        closed_at:
          format: date-time
          title: closed_at
          type: string
          x-go-name: Closed
        closed_issues:
          format: int64
          title: closed_issues
          type: integer
          x-go-name: ClosedIssues
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        description:
          title: description
          type: string
          x-go-name: Description
        due_on:
          format: date-time
          title: due_on
          type: string
          x-go-name: Deadline
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        open_issues:
          format: int64
          title: open_issues
          type: integer
          x-go-name: OpenIssues
        state:
          description: StateType issue state type
          title: StateType
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        title:
          title: title
          type: string
          x-go-name: Title
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
      title: Milestone
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NodeInfo:
      description: NodeInfo contains standardized way of exposing metadata about a
        server running one of the distributed social networks
      example:
        metadata: "{}"
        software:
          name: name
          repository: repository
          version: version
          homepage: homepage
        usage:
          localPosts: 6
          localComments: 0
          users:
            total: 5
            activeHalfyear: 1
            activeMonth: 5
        services:
          inbound:
          - inbound
          - inbound
          outbound:
          - outbound
          - outbound
        protocols:
        - protocols
        - protocols
        version: version
        openRegistrations: true
      properties:
        metadata:
          title: metadata
          type: object
          x-go-name: Metadata
        openRegistrations:
          title: openRegistrations
          type: boolean
          x-go-name: OpenRegistrations
        protocols:
          items:
            type: string
          title: protocols
          type: array
          x-go-name: Protocols
        services:
          $ref: '#/components/schemas/NodeInfoServices'
        software:
          $ref: '#/components/schemas/NodeInfoSoftware'
        usage:
          $ref: '#/components/schemas/NodeInfoUsage'
        version:
          title: version
          type: string
          x-go-name: Version
      title: NodeInfo
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NodeInfoServices:
      description: NodeInfoServices contains the third party sites this server can
        connect to via their application API
      example:
        inbound:
        - inbound
        - inbound
        outbound:
        - outbound
        - outbound
      properties:
        inbound:
          items:
            type: string
          title: inbound
          type: array
          x-go-name: Inbound
        outbound:
          items:
            type: string
          title: outbound
          type: array
          x-go-name: Outbound
      title: NodeInfoServices
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NodeInfoSoftware:
      description: NodeInfoSoftware contains Metadata about server software in use
      example:
        name: name
        repository: repository
        version: version
        homepage: homepage
      properties:
        homepage:
          title: homepage
          type: string
          x-go-name: Homepage
        name:
          title: name
          type: string
          x-go-name: Name
        repository:
          title: repository
          type: string
          x-go-name: Repository
        version:
          title: version
          type: string
          x-go-name: Version
      title: NodeInfoSoftware
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NodeInfoUsage:
      description: NodeInfoUsage contains usage statistics for this server
      example:
        localPosts: 6
        localComments: 0
        users:
          total: 5
          activeHalfyear: 1
          activeMonth: 5
      properties:
        localComments:
          format: int64
          title: localComments
          type: integer
          x-go-name: LocalComments
        localPosts:
          format: int64
          title: localPosts
          type: integer
          x-go-name: LocalPosts
        users:
          $ref: '#/components/schemas/NodeInfoUsageUsers'
      title: NodeInfoUsage
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NodeInfoUsageUsers:
      description: NodeInfoUsageUsers contains statistics about the users of this
        server
      example:
        total: 5
        activeHalfyear: 1
        activeMonth: 5
      properties:
        activeHalfyear:
          format: int64
          title: activeHalfyear
          type: integer
          x-go-name: ActiveHalfyear
        activeMonth:
          format: int64
          title: activeMonth
          type: integer
          x-go-name: ActiveMonth
        total:
          format: int64
          title: total
          type: integer
          x-go-name: Total
      title: NodeInfoUsageUsers
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Note:
      description: Note contains information related to a git note
      example:
        commit:
          committer:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          stats:
            total: 1
            additions: 0
            deletions: 6
          author:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          created: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          commit:
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              created: 2000-01-23T04:56:07.000+00:00
              sha: sha
              url: url
            message: message
            url: url
            verification:
              reason: reason
              payload: payload
              signature: signature
              verified: true
              signer:
                name: name
                email: email
                username: username
          files:
          - filename: filename
          - filename: filename
          sha: sha
          url: url
          parents:
          - created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
          - created: 2000-01-23T04:56:07.000+00:00
            sha: sha
            url: url
        message: message
      properties:
        commit:
          $ref: '#/components/schemas/Commit'
        message:
          title: message
          type: string
          x-go-name: Message
      title: Note
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NotificationCount:
      description: NotificationCount number of unread notifications
      example:
        new: 0
      properties:
        new:
          format: int64
          title: new
          type: integer
          x-go-name: New
      title: NotificationCount
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NotificationSubject:
      description: NotificationSubject contains the notification subject (Issue/Pull/Commit)
      example:
        latest_comment_url: latest_comment_url
        latest_comment_html_url: latest_comment_html_url
        html_url: html_url
        state: state
        title: title
        type: type
        url: url
      properties:
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        latest_comment_html_url:
          title: latest_comment_html_url
          type: string
          x-go-name: LatestCommentHTMLURL
        latest_comment_url:
          title: latest_comment_url
          type: string
          x-go-name: LatestCommentURL
        state:
          description: StateType issue state type
          title: StateType
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        title:
          title: title
          type: string
          x-go-name: Title
        type:
          description: NotifySubjectType represent type of notification subject
          title: type
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        url:
          title: url
          type: string
          x-go-name: URL
      title: NotificationSubject
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NotificationThread:
      description: NotificationThread expose Notification on API
      example:
        pinned: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        unread: true
        subject:
          latest_comment_url: latest_comment_url
          latest_comment_html_url: latest_comment_html_url
          html_url: html_url
          state: state
          title: title
          type: type
          url: url
        id: 0
        repository:
          parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        url: url
      properties:
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        pinned:
          title: pinned
          type: boolean
          x-go-name: Pinned
        repository:
          $ref: '#/components/schemas/Repository'
        subject:
          $ref: '#/components/schemas/NotificationSubject'
        unread:
          title: unread
          type: boolean
          x-go-name: Unread
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: UpdatedAt
        url:
          title: url
          type: string
          x-go-name: URL
      title: NotificationThread
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    NotifySubjectType:
      description: NotifySubjectType represent type of notification subject
      title: type
      type: string
      x-go-package: code.gitea.io/gitea/modules/structs
    OAuth2Application:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        confidential_client: true
        client_secret: client_secret
        id: 0
        redirect_uris:
        - redirect_uris
        - redirect_uris
        client_id: client_id
      properties:
        client_id:
          title: client_id
          type: string
          x-go-name: ClientID
        client_secret:
          title: client_secret
          type: string
          x-go-name: ClientSecret
        confidential_client:
          title: confidential_client
          type: boolean
          x-go-name: ConfidentialClient
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Name
        redirect_uris:
          items:
            type: string
          title: redirect_uris
          type: array
          x-go-name: RedirectURIs
      title: OAuth2Application represents an OAuth2 application.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Organization:
      description: Organization represents an organization
      example:
        website: website
        full_name: full_name
        repo_admin_change_team_access: true
        avatar_url: avatar_url
        visibility: visibility
        name: name
        description: description
        location: location
        id: 0
        username: username
      properties:
        avatar_url:
          title: avatar_url
          type: string
          x-go-name: AvatarURL
        description:
          title: description
          type: string
          x-go-name: Description
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        location:
          title: location
          type: string
          x-go-name: Location
        name:
          title: name
          type: string
          x-go-name: Name
        repo_admin_change_team_access:
          title: repo_admin_change_team_access
          type: boolean
          x-go-name: RepoAdminChangeTeamAccess
        username:
          description: deprecated
          title: username
          type: string
          x-go-name: UserName
        visibility:
          title: visibility
          type: string
          x-go-name: Visibility
        website:
          title: website
          type: string
          x-go-name: Website
      title: Organization
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    OrganizationPermissions:
      description: OrganizationPermissions list different users permissions on an
        organization
      example:
        can_read: true
        is_admin: true
        can_create_repository: true
        can_write: true
        is_owner: true
      properties:
        can_create_repository:
          title: can_create_repository
          type: boolean
          x-go-name: CanCreateRepository
        can_read:
          title: can_read
          type: boolean
          x-go-name: CanRead
        can_write:
          title: can_write
          type: boolean
          x-go-name: CanWrite
        is_admin:
          title: is_admin
          type: boolean
          x-go-name: IsAdmin
        is_owner:
          title: is_owner
          type: boolean
          x-go-name: IsOwner
      title: OrganizationPermissions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PRBranchInfo:
      description: PRBranchInfo information about a branch
      example:
        ref: ref
        repo_id: 0
        repo:
          parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        label: label
        sha: sha
      properties:
        label:
          title: label
          type: string
          x-go-name: Name
        ref:
          title: ref
          type: string
          x-go-name: Ref
        repo:
          $ref: '#/components/schemas/Repository'
        repo_id:
          format: int64
          title: repo_id
          type: integer
          x-go-name: RepoID
        sha:
          title: sha
          type: string
          x-go-name: Sha
      title: PRBranchInfo
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Package:
      description: Package represents a package
      example:
        owner:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        creator:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        repository:
          parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        type: type
        version: version
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: CreatedAt
        creator:
          $ref: '#/components/schemas/User'
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Name
        owner:
          $ref: '#/components/schemas/User'
        repository:
          $ref: '#/components/schemas/Repository'
        type:
          title: type
          type: string
          x-go-name: Type
        version:
          title: version
          type: string
          x-go-name: Version
      title: Package
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PackageFile:
      description: PackageFile represents a package file
      example:
        sha1: sha1
        sha256: sha256
        Size: 0
        name: name
        sha512: sha512
        id: 6
        md5: md5
      properties:
        Size:
          format: int64
          title: Size
          type: integer
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        md5:
          title: md5
          type: string
          x-go-name: HashMD5
        name:
          title: name
          type: string
          x-go-name: Name
        sha1:
          title: sha1
          type: string
          x-go-name: HashSHA1
        sha256:
          title: sha256
          type: string
          x-go-name: HashSHA256
        sha512:
          title: sha512
          type: string
          x-go-name: HashSHA512
      title: PackageFile
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PayloadCommit:
      description: PayloadCommit represents a commit
      example:
        committer:
          name: name
          email: email
          username: username
        removed:
        - removed
        - removed
        added:
        - added
        - added
        author:
          name: name
          email: email
          username: username
        modified:
        - modified
        - modified
        id: id
        message: message
        url: url
        verification:
          reason: reason
          payload: payload
          signature: signature
          verified: true
          signer:
            name: name
            email: email
            username: username
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        added:
          items:
            type: string
          title: added
          type: array
          x-go-name: Added
        author:
          $ref: '#/components/schemas/PayloadUser'
        committer:
          $ref: '#/components/schemas/PayloadUser'
        id:
          description: sha1 hash of the commit
          title: id
          type: string
          x-go-name: ID
        message:
          title: message
          type: string
          x-go-name: Message
        modified:
          items:
            type: string
          title: modified
          type: array
          x-go-name: Modified
        removed:
          items:
            type: string
          title: removed
          type: array
          x-go-name: Removed
        timestamp:
          format: date-time
          title: timestamp
          type: string
          x-go-name: Timestamp
        url:
          title: url
          type: string
          x-go-name: URL
        verification:
          $ref: '#/components/schemas/PayloadCommitVerification'
      title: PayloadCommit
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PayloadCommitVerification:
      description: PayloadCommitVerification represents the GPG verification of a
        commit
      example:
        reason: reason
        payload: payload
        signature: signature
        verified: true
        signer:
          name: name
          email: email
          username: username
      properties:
        payload:
          title: payload
          type: string
          x-go-name: Payload
        reason:
          title: reason
          type: string
          x-go-name: Reason
        signature:
          title: signature
          type: string
          x-go-name: Signature
        signer:
          $ref: '#/components/schemas/PayloadUser'
        verified:
          title: verified
          type: boolean
          x-go-name: Verified
      title: PayloadCommitVerification
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PayloadUser:
      description: PayloadUser represents the author or committer of a commit
      example:
        name: name
        email: email
        username: username
      properties:
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        name:
          description: Full name of the commit author
          title: name
          type: string
          x-go-name: Name
        username:
          title: username
          type: string
          x-go-name: UserName
      title: PayloadUser
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Permission:
      description: Permission represents a set of permissions
      example:
        pull: true
        admin: true
        push: true
      properties:
        admin:
          title: admin
          type: boolean
          x-go-name: Admin
        pull:
          title: pull
          type: boolean
          x-go-name: Pull
        push:
          title: push
          type: boolean
          x-go-name: Push
      title: Permission
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PublicKey:
      description: PublicKey publickey is a user key to push code to repository
      example:
        key_type: key_type
        read_only: true
        fingerprint: fingerprint
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        title: title
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        key: key
        url: url
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        fingerprint:
          title: fingerprint
          type: string
          x-go-name: Fingerprint
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        key:
          title: key
          type: string
          x-go-name: Key
        key_type:
          title: key_type
          type: string
          x-go-name: KeyType
        read_only:
          title: read_only
          type: boolean
          x-go-name: ReadOnly
        title:
          title: title
          type: string
          x-go-name: Title
        url:
          title: url
          type: string
          x-go-name: URL
        user:
          $ref: '#/components/schemas/User'
      title: PublicKey
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PullRequest:
      description: PullRequest represents a pull request
      example:
        is_locked: true
        assignees:
        - website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        - website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        created_at: 2000-01-23T04:56:07.000+00:00
        diff_url: diff_url
        merged_by:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        body: body
        title: title
        head:
          ref: ref
          repo_id: 0
          repo:
            parent: null
            has_packages: true
            open_pr_counter: 5
            has_releases: true
            language: language
            repo_transfer:
              teams:
              - can_create_org_repo: true
                units_map:
                  repo.code: read
                  repo.ext_issues: none
                  repo.ext_wiki: none
                  repo.issues: write
                  repo.projects: none
                  repo.pulls: owner
                  repo.releases: none
                  repo.wiki: admin
                organization:
                  website: website
                  full_name: full_name
                  repo_admin_change_team_access: true
                  avatar_url: avatar_url
                  visibility: visibility
                  name: name
                  description: description
                  location: location
                  id: 0
                  username: username
                name: name
                description: description
                permission: none
                id: 2
                includes_all_repositories: true
                units:
                - repo.code
                - repo.issues
                - repo.ext_issues
                - repo.wiki
                - repo.pulls
                - repo.releases
                - repo.projects
                - repo.ext_wiki
              - can_create_org_repo: true
                units_map:
                  repo.code: read
                  repo.ext_issues: none
                  repo.ext_wiki: none
                  repo.issues: write
                  repo.projects: none
                  repo.pulls: owner
                  repo.releases: none
                  repo.wiki: admin
                organization:
                  website: website
                  full_name: full_name
                  repo_admin_change_team_access: true
                  avatar_url: avatar_url
                  visibility: visibility
                  name: name
                  description: description
                  location: location
                  id: 0
                  username: username
                name: name
                description: description
                permission: none
                id: 2
                includes_all_repositories: true
                units:
                - repo.code
                - repo.issues
                - repo.ext_issues
                - repo.wiki
                - repo.pulls
                - repo.releases
                - repo.projects
                - repo.ext_wiki
              doer:
                website: website
                visibility: visibility
                created: 2000-01-23T04:56:07.000+00:00
                last_login: 2000-01-23T04:56:07.000+00:00
                active: true
                description: description
                language: language
                starred_repos_count: 5
                login: login
                is_admin: true
                full_name: full_name
                login_name: empty
                avatar_url: avatar_url
                following_count: 6
                restricted: true
                followers_count: 0
                location: location
                id: 1
                prohibit_login: true
                email: email
              recipient:
                website: website
                visibility: visibility
                created: 2000-01-23T04:56:07.000+00:00
                last_login: 2000-01-23T04:56:07.000+00:00
                active: true
                description: description
                language: language
                starred_repos_count: 5
                login: login
                is_admin: true
                full_name: full_name
                login_name: empty
                avatar_url: avatar_url
                following_count: 6
                restricted: true
                followers_count: 0
                location: location
                id: 1
                prohibit_login: true
                email: email
            has_pull_requests: true
            empty: true
            has_actions: true
            permissions:
              pull: true
              admin: true
              push: true
            id: 6
            release_counter: 5
            default_delete_branch_after_merge: true
            ssh_url: ssh_url
            full_name: full_name
            size: 7
            languages_url: languages_url
            clone_url: clone_url
            html_url: html_url
            name: name
            default_branch: default_branch
            mirror_updated: 2000-01-23T04:56:07.000+00:00
            ignore_whitespace_conflicts: true
            template: true
            internal: true
            mirror: true
            private: true
            open_issues_count: 1
            link: link
            created_at: 2000-01-23T04:56:07.000+00:00
            default_allow_maintainer_edit: true
            description: description
            allow_rebase_update: true
            has_projects: true
            archived: true
            has_wiki: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            allow_merge_commits: true
            stars_count: 9
            allow_rebase_explicit: true
            external_tracker:
              external_tracker_regexp_pattern: external_tracker_regexp_pattern
              external_tracker_style: external_tracker_style
              external_tracker_url: external_tracker_url
              external_tracker_format: external_tracker_format
            mirror_interval: mirror_interval
            owner:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            allow_squash_merge: true
            external_wiki:
              external_wiki_url: external_wiki_url
            website: website
            internal_tracker:
              enable_issue_dependencies: true
              allow_only_contributors_to_track_time: true
              enable_time_tracker: true
            has_issues: true
            allow_rebase: true
            default_merge_style: default_merge_style
            fork: true
            avatar_url: avatar_url
            original_url: original_url
            watchers_count: 3
            forks_count: 0
          label: label
          sha: sha
        number: 5
        mergeable: true
        patch_url: patch_url
        updated_at: 2000-01-23T04:56:07.000+00:00
        merge_base: merge_base
        merge_commit_sha: merge_commit_sha
        id: 1
        state: state
        closed_at: 2000-01-23T04:56:07.000+00:00
        comments: 6
        merged_at: 2000-01-23T04:56:07.000+00:00
        due_date: 2000-01-23T04:56:07.000+00:00
        merged: true
        url: url
        labels:
        - color: 00aabb
          name: name
          description: description
          exclusive: false
          id: 0
          url: url
        - color: 00aabb
          name: name
          description: description
          exclusive: false
          id: 0
          url: url
        milestone:
          closed_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 5
          state: state
          closed_issues: 1
          open_issues: 5
          title: title
          due_on: 2000-01-23T04:56:07.000+00:00
        allow_maintainer_edit: true
        html_url: html_url
        assignee:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        base:
          ref: ref
          repo_id: 0
          repo:
            parent: null
            has_packages: true
            open_pr_counter: 5
            has_releases: true
            language: language
            repo_transfer:
              teams:
              - can_create_org_repo: true
                units_map:
                  repo.code: read
                  repo.ext_issues: none
                  repo.ext_wiki: none
                  repo.issues: write
                  repo.projects: none
                  repo.pulls: owner
                  repo.releases: none
                  repo.wiki: admin
                organization:
                  website: website
                  full_name: full_name
                  repo_admin_change_team_access: true
                  avatar_url: avatar_url
                  visibility: visibility
                  name: name
                  description: description
                  location: location
                  id: 0
                  username: username
                name: name
                description: description
                permission: none
                id: 2
                includes_all_repositories: true
                units:
                - repo.code
                - repo.issues
                - repo.ext_issues
                - repo.wiki
                - repo.pulls
                - repo.releases
                - repo.projects
                - repo.ext_wiki
              - can_create_org_repo: true
                units_map:
                  repo.code: read
                  repo.ext_issues: none
                  repo.ext_wiki: none
                  repo.issues: write
                  repo.projects: none
                  repo.pulls: owner
                  repo.releases: none
                  repo.wiki: admin
                organization:
                  website: website
                  full_name: full_name
                  repo_admin_change_team_access: true
                  avatar_url: avatar_url
                  visibility: visibility
                  name: name
                  description: description
                  location: location
                  id: 0
                  username: username
                name: name
                description: description
                permission: none
                id: 2
                includes_all_repositories: true
                units:
                - repo.code
                - repo.issues
                - repo.ext_issues
                - repo.wiki
                - repo.pulls
                - repo.releases
                - repo.projects
                - repo.ext_wiki
              doer:
                website: website
                visibility: visibility
                created: 2000-01-23T04:56:07.000+00:00
                last_login: 2000-01-23T04:56:07.000+00:00
                active: true
                description: description
                language: language
                starred_repos_count: 5
                login: login
                is_admin: true
                full_name: full_name
                login_name: empty
                avatar_url: avatar_url
                following_count: 6
                restricted: true
                followers_count: 0
                location: location
                id: 1
                prohibit_login: true
                email: email
              recipient:
                website: website
                visibility: visibility
                created: 2000-01-23T04:56:07.000+00:00
                last_login: 2000-01-23T04:56:07.000+00:00
                active: true
                description: description
                language: language
                starred_repos_count: 5
                login: login
                is_admin: true
                full_name: full_name
                login_name: empty
                avatar_url: avatar_url
                following_count: 6
                restricted: true
                followers_count: 0
                location: location
                id: 1
                prohibit_login: true
                email: email
            has_pull_requests: true
            empty: true
            has_actions: true
            permissions:
              pull: true
              admin: true
              push: true
            id: 6
            release_counter: 5
            default_delete_branch_after_merge: true
            ssh_url: ssh_url
            full_name: full_name
            size: 7
            languages_url: languages_url
            clone_url: clone_url
            html_url: html_url
            name: name
            default_branch: default_branch
            mirror_updated: 2000-01-23T04:56:07.000+00:00
            ignore_whitespace_conflicts: true
            template: true
            internal: true
            mirror: true
            private: true
            open_issues_count: 1
            link: link
            created_at: 2000-01-23T04:56:07.000+00:00
            default_allow_maintainer_edit: true
            description: description
            allow_rebase_update: true
            has_projects: true
            archived: true
            has_wiki: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            allow_merge_commits: true
            stars_count: 9
            allow_rebase_explicit: true
            external_tracker:
              external_tracker_regexp_pattern: external_tracker_regexp_pattern
              external_tracker_style: external_tracker_style
              external_tracker_url: external_tracker_url
              external_tracker_format: external_tracker_format
            mirror_interval: mirror_interval
            owner:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            allow_squash_merge: true
            external_wiki:
              external_wiki_url: external_wiki_url
            website: website
            internal_tracker:
              enable_issue_dependencies: true
              allow_only_contributors_to_track_time: true
              enable_time_tracker: true
            has_issues: true
            allow_rebase: true
            default_merge_style: default_merge_style
            fork: true
            avatar_url: avatar_url
            original_url: original_url
            watchers_count: 3
            forks_count: 0
          label: label
          sha: sha
      properties:
        allow_maintainer_edit:
          title: allow_maintainer_edit
          type: boolean
          x-go-name: AllowMaintainerEdit
        assignee:
          $ref: '#/components/schemas/User'
        assignees:
          items:
            $ref: '#/components/schemas/User'
          title: assignees
          type: array
          x-go-name: Assignees
        base:
          $ref: '#/components/schemas/PRBranchInfo'
        body:
          title: body
          type: string
          x-go-name: Body
        closed_at:
          format: date-time
          title: closed_at
          type: string
          x-go-name: Closed
        comments:
          format: int64
          title: comments
          type: integer
          x-go-name: Comments
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        diff_url:
          title: diff_url
          type: string
          x-go-name: DiffURL
        due_date:
          format: date-time
          title: due_date
          type: string
          x-go-name: Deadline
        head:
          $ref: '#/components/schemas/PRBranchInfo'
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        is_locked:
          title: is_locked
          type: boolean
          x-go-name: IsLocked
        labels:
          items:
            $ref: '#/components/schemas/Label'
          title: labels
          type: array
          x-go-name: Labels
        merge_base:
          title: merge_base
          type: string
          x-go-name: MergeBase
        merge_commit_sha:
          title: merge_commit_sha
          type: string
          x-go-name: MergedCommitID
        mergeable:
          title: mergeable
          type: boolean
          x-go-name: Mergeable
        merged:
          title: merged
          type: boolean
          x-go-name: HasMerged
        merged_at:
          format: date-time
          title: merged_at
          type: string
          x-go-name: Merged
        merged_by:
          $ref: '#/components/schemas/User'
        milestone:
          $ref: '#/components/schemas/Milestone'
        number:
          format: int64
          title: number
          type: integer
          x-go-name: Index
        patch_url:
          title: patch_url
          type: string
          x-go-name: PatchURL
        state:
          description: StateType issue state type
          title: StateType
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        title:
          title: title
          type: string
          x-go-name: Title
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        url:
          title: url
          type: string
          x-go-name: URL
        user:
          $ref: '#/components/schemas/User'
      title: PullRequest
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PullRequestMeta:
      description: PullRequestMeta PR info if an issue is a PR
      example:
        merged_at: 2000-01-23T04:56:07.000+00:00
        merged: true
      properties:
        merged:
          title: merged
          type: boolean
          x-go-name: HasMerged
        merged_at:
          format: date-time
          title: merged_at
          type: string
          x-go-name: Merged
      title: PullRequestMeta
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PullReview:
      description: PullReview represents a pull request review
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        dismissed: true
        official: true
        pull_request_url: pull_request_url
        team:
          can_create_org_repo: true
          units_map:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          organization:
            website: website
            full_name: full_name
            repo_admin_change_team_access: true
            avatar_url: avatar_url
            visibility: visibility
            name: name
            description: description
            location: location
            id: 0
            username: username
          name: name
          description: description
          permission: none
          id: 2
          includes_all_repositories: true
          units:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
        body: body
        stale: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        comments_count: 0
        html_url: html_url
        id: 6
        state: state
        commit_id: commit_id
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
        comments_count:
          format: int64
          title: comments_count
          type: integer
          x-go-name: CodeCommentsCount
        commit_id:
          title: commit_id
          type: string
          x-go-name: CommitID
        dismissed:
          title: dismissed
          type: boolean
          x-go-name: Dismissed
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        official:
          title: official
          type: boolean
          x-go-name: Official
        pull_request_url:
          title: pull_request_url
          type: string
          x-go-name: HTMLPullURL
        stale:
          title: stale
          type: boolean
          x-go-name: Stale
        state:
          description: ReviewStateType review state type
          title: state
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
        submitted_at:
          format: date-time
          title: submitted_at
          type: string
          x-go-name: Submitted
        team:
          $ref: '#/components/schemas/Team'
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        user:
          $ref: '#/components/schemas/User'
      title: PullReview
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PullReviewComment:
      description: PullReviewComment represents a comment on a pull request review
      example:
        resolver:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        original_commit_id: original_commit_id
        diff_hunk: diff_hunk
        created_at: 2000-01-23T04:56:07.000+00:00
        pull_request_url: pull_request_url
        body: body
        path: path
        original_position: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        html_url: html_url
        pull_request_review_id: 5
        id: 0
        position: 1
        commit_id: commit_id
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
        commit_id:
          title: commit_id
          type: string
          x-go-name: CommitID
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        diff_hunk:
          title: diff_hunk
          type: string
          x-go-name: DiffHunk
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        original_commit_id:
          title: original_commit_id
          type: string
          x-go-name: OrigCommitID
        original_position:
          format: uint64
          title: original_position
          type: integer
          x-go-name: OldLineNum
        path:
          title: path
          type: string
          x-go-name: Path
        position:
          format: uint64
          title: position
          type: integer
          x-go-name: LineNum
        pull_request_review_id:
          format: int64
          title: pull_request_review_id
          type: integer
          x-go-name: ReviewID
        pull_request_url:
          title: pull_request_url
          type: string
          x-go-name: HTMLPullURL
        resolver:
          $ref: '#/components/schemas/User'
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        user:
          $ref: '#/components/schemas/User'
      title: PullReviewComment
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PullReviewRequestOptions:
      description: PullReviewRequestOptions are options to add or remove pull review
        requests
      example:
        team_reviewers:
        - team_reviewers
        - team_reviewers
        reviewers:
        - reviewers
        - reviewers
      properties:
        reviewers:
          items:
            type: string
          title: reviewers
          type: array
          x-go-name: Reviewers
        team_reviewers:
          items:
            type: string
          title: team_reviewers
          type: array
          x-go-name: TeamReviewers
      title: PullReviewRequestOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    PushMirror:
      description: PushMirror represents information of a push mirror
      example:
        sync_on_commit: true
        remote_name: remote_name
        created: created
        last_update: last_update
        interval: interval
        repo_name: repo_name
        last_error: last_error
        remote_address: remote_address
      properties:
        created:
          title: created
          type: string
          x-go-name: CreatedUnix
        interval:
          title: interval
          type: string
          x-go-name: Interval
        last_error:
          title: last_error
          type: string
          x-go-name: LastError
        last_update:
          title: last_update
          type: string
          x-go-name: LastUpdateUnix
        remote_address:
          title: remote_address
          type: string
          x-go-name: RemoteAddress
        remote_name:
          title: remote_name
          type: string
          x-go-name: RemoteName
        repo_name:
          title: repo_name
          type: string
          x-go-name: RepoName
        sync_on_commit:
          title: sync_on_commit
          type: boolean
          x-go-name: SyncOnCommit
      title: PushMirror
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Reaction:
      description: Reaction contain one reaction
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        content: content
      properties:
        content:
          title: content
          type: string
          x-go-name: Reaction
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        user:
          $ref: '#/components/schemas/User'
      title: Reaction
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Reference:
      example:
        ref: ref
        url: url
        object:
          type: type
          sha: sha
          url: url
      properties:
        object:
          $ref: '#/components/schemas/GitObject'
        ref:
          title: ref
          type: string
          x-go-name: Ref
        url:
          title: url
          type: string
          x-go-name: URL
      title: Reference represents a Git reference.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Release:
      description: Release represents a repository release
      example:
        author:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        tag_name: tag_name
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        url: url
        assets:
        - size: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          browser_download_url: browser_download_url
          id: 1
          uuid: uuid
          download_count: 6
        - size: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          browser_download_url: browser_download_url
          id: 1
          uuid: uuid
          download_count: 6
        prerelease: true
        draft: true
        html_url: html_url
        target_commitish: target_commitish
        zipball_url: zipball_url
        name: name
        id: 0
        published_at: 2000-01-23T04:56:07.000+00:00
        tarball_url: tarball_url
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Attachment'
          title: assets
          type: array
          x-go-name: Attachments
        author:
          $ref: '#/components/schemas/User'
        body:
          title: body
          type: string
          x-go-name: Note
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: CreatedAt
        draft:
          title: draft
          type: boolean
          x-go-name: IsDraft
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Title
        prerelease:
          title: prerelease
          type: boolean
          x-go-name: IsPrerelease
        published_at:
          format: date-time
          title: published_at
          type: string
          x-go-name: PublishedAt
        tag_name:
          title: tag_name
          type: string
          x-go-name: TagName
        tarball_url:
          title: tarball_url
          type: string
          x-go-name: TarURL
        target_commitish:
          title: target_commitish
          type: string
          x-go-name: Target
        url:
          title: url
          type: string
          x-go-name: URL
        zipball_url:
          title: zipball_url
          type: string
          x-go-name: ZipURL
      title: Release
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    RenameUserOption:
      description: RenameUserOption options when renaming a user
      example:
        new_username: new_username
      properties:
        new_username:
          description: New username for this user. This name cannot be in use yet
            by any other user.
          title: new_username
          type: string
          uniqueItems: true
          x-go-name: NewName
      required:
      - new_username
      title: RenameUserOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    RepoCollaboratorPermission:
      description: RepoCollaboratorPermission to get repository permission for a collaborator
      example:
        role_name: role_name
        permission: permission
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        permission:
          title: permission
          type: string
          x-go-name: Permission
        role_name:
          title: role_name
          type: string
          x-go-name: RoleName
        user:
          $ref: '#/components/schemas/User'
      title: RepoCollaboratorPermission
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    RepoCommit:
      example:
        committer:
          date: date
          name: name
          email: email
        author:
          date: date
          name: name
          email: email
        tree:
          created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
        message: message
        url: url
        verification:
          reason: reason
          payload: payload
          signature: signature
          verified: true
          signer:
            name: name
            email: email
            username: username
      properties:
        author:
          $ref: '#/components/schemas/CommitUser'
        committer:
          $ref: '#/components/schemas/CommitUser'
        message:
          title: message
          type: string
          x-go-name: Message
        tree:
          $ref: '#/components/schemas/CommitMeta'
        url:
          title: url
          type: string
          x-go-name: URL
        verification:
          $ref: '#/components/schemas/PayloadCommitVerification'
      title: RepoCommit contains information of a commit in the context of a repository.
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    RepoTopicOptions:
      description: RepoTopicOptions a collection of repo topic names
      example:
        topics:
        - topics
        - topics
      properties:
        topics:
          description: list of topic names
          items:
            type: string
          title: topics
          type: array
          x-go-name: Topics
      title: RepoTopicOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    RepoTransfer:
      description: RepoTransfer represents a pending repo transfer
      example:
        teams:
        - can_create_org_repo: true
          units_map:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          organization:
            website: website
            full_name: full_name
            repo_admin_change_team_access: true
            avatar_url: avatar_url
            visibility: visibility
            name: name
            description: description
            location: location
            id: 0
            username: username
          name: name
          description: description
          permission: none
          id: 2
          includes_all_repositories: true
          units:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
        - can_create_org_repo: true
          units_map:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          organization:
            website: website
            full_name: full_name
            repo_admin_change_team_access: true
            avatar_url: avatar_url
            visibility: visibility
            name: name
            description: description
            location: location
            id: 0
            username: username
          name: name
          description: description
          permission: none
          id: 2
          includes_all_repositories: true
          units:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
        doer:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        recipient:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        doer:
          $ref: '#/components/schemas/User'
        recipient:
          $ref: '#/components/schemas/User'
        teams:
          items:
            $ref: '#/components/schemas/Team'
          title: teams
          type: array
          x-go-name: Teams
      title: RepoTransfer
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Repository:
      description: Repository represents a repository
      example:
        parent: null
        has_packages: true
        open_pr_counter: 5
        has_releases: true
        language: language
        repo_transfer:
          teams:
          - can_create_org_repo: true
            units_map:
              repo.code: read
              repo.ext_issues: none
              repo.ext_wiki: none
              repo.issues: write
              repo.projects: none
              repo.pulls: owner
              repo.releases: none
              repo.wiki: admin
            organization:
              website: website
              full_name: full_name
              repo_admin_change_team_access: true
              avatar_url: avatar_url
              visibility: visibility
              name: name
              description: description
              location: location
              id: 0
              username: username
            name: name
            description: description
            permission: none
            id: 2
            includes_all_repositories: true
            units:
            - repo.code
            - repo.issues
            - repo.ext_issues
            - repo.wiki
            - repo.pulls
            - repo.releases
            - repo.projects
            - repo.ext_wiki
          - can_create_org_repo: true
            units_map:
              repo.code: read
              repo.ext_issues: none
              repo.ext_wiki: none
              repo.issues: write
              repo.projects: none
              repo.pulls: owner
              repo.releases: none
              repo.wiki: admin
            organization:
              website: website
              full_name: full_name
              repo_admin_change_team_access: true
              avatar_url: avatar_url
              visibility: visibility
              name: name
              description: description
              location: location
              id: 0
              username: username
            name: name
            description: description
            permission: none
            id: 2
            includes_all_repositories: true
            units:
            - repo.code
            - repo.issues
            - repo.ext_issues
            - repo.wiki
            - repo.pulls
            - repo.releases
            - repo.projects
            - repo.ext_wiki
          doer:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          recipient:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
        has_pull_requests: true
        empty: true
        has_actions: true
        permissions:
          pull: true
          admin: true
          push: true
        id: 6
        release_counter: 5
        default_delete_branch_after_merge: true
        ssh_url: ssh_url
        full_name: full_name
        size: 7
        languages_url: languages_url
        clone_url: clone_url
        html_url: html_url
        name: name
        default_branch: default_branch
        mirror_updated: 2000-01-23T04:56:07.000+00:00
        ignore_whitespace_conflicts: true
        template: true
        internal: true
        mirror: true
        private: true
        open_issues_count: 1
        link: link
        created_at: 2000-01-23T04:56:07.000+00:00
        default_allow_maintainer_edit: true
        description: description
        allow_rebase_update: true
        has_projects: true
        archived: true
        has_wiki: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        allow_merge_commits: true
        stars_count: 9
        allow_rebase_explicit: true
        external_tracker:
          external_tracker_regexp_pattern: external_tracker_regexp_pattern
          external_tracker_style: external_tracker_style
          external_tracker_url: external_tracker_url
          external_tracker_format: external_tracker_format
        mirror_interval: mirror_interval
        owner:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        allow_squash_merge: true
        external_wiki:
          external_wiki_url: external_wiki_url
        website: website
        internal_tracker:
          enable_issue_dependencies: true
          allow_only_contributors_to_track_time: true
          enable_time_tracker: true
        has_issues: true
        allow_rebase: true
        default_merge_style: default_merge_style
        fork: true
        avatar_url: avatar_url
        original_url: original_url
        watchers_count: 3
        forks_count: 0
      properties:
        allow_merge_commits:
          title: allow_merge_commits
          type: boolean
          x-go-name: AllowMerge
        allow_rebase:
          title: allow_rebase
          type: boolean
          x-go-name: AllowRebase
        allow_rebase_explicit:
          title: allow_rebase_explicit
          type: boolean
          x-go-name: AllowRebaseMerge
        allow_rebase_update:
          title: allow_rebase_update
          type: boolean
          x-go-name: AllowRebaseUpdate
        allow_squash_merge:
          title: allow_squash_merge
          type: boolean
          x-go-name: AllowSquash
        archived:
          title: archived
          type: boolean
          x-go-name: Archived
        avatar_url:
          title: avatar_url
          type: string
          x-go-name: AvatarURL
        clone_url:
          title: clone_url
          type: string
          x-go-name: CloneURL
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        default_allow_maintainer_edit:
          title: default_allow_maintainer_edit
          type: boolean
          x-go-name: DefaultAllowMaintainerEdit
        default_branch:
          title: default_branch
          type: string
          x-go-name: DefaultBranch
        default_delete_branch_after_merge:
          title: default_delete_branch_after_merge
          type: boolean
          x-go-name: DefaultDeleteBranchAfterMerge
        default_merge_style:
          title: default_merge_style
          type: string
          x-go-name: DefaultMergeStyle
        description:
          title: description
          type: string
          x-go-name: Description
        empty:
          title: empty
          type: boolean
          x-go-name: Empty
        external_tracker:
          $ref: '#/components/schemas/ExternalTracker'
        external_wiki:
          $ref: '#/components/schemas/ExternalWiki'
        fork:
          title: fork
          type: boolean
          x-go-name: Fork
        forks_count:
          format: int64
          title: forks_count
          type: integer
          x-go-name: Forks
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        has_actions:
          title: has_actions
          type: boolean
          x-go-name: HasActions
        has_issues:
          title: has_issues
          type: boolean
          x-go-name: HasIssues
        has_packages:
          title: has_packages
          type: boolean
          x-go-name: HasPackages
        has_projects:
          title: has_projects
          type: boolean
          x-go-name: HasProjects
        has_pull_requests:
          title: has_pull_requests
          type: boolean
          x-go-name: HasPullRequests
        has_releases:
          title: has_releases
          type: boolean
          x-go-name: HasReleases
        has_wiki:
          title: has_wiki
          type: boolean
          x-go-name: HasWiki
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        ignore_whitespace_conflicts:
          title: ignore_whitespace_conflicts
          type: boolean
          x-go-name: IgnoreWhitespaceConflicts
        internal:
          title: internal
          type: boolean
          x-go-name: Internal
        internal_tracker:
          $ref: '#/components/schemas/InternalTracker'
        language:
          title: language
          type: string
          x-go-name: Language
        languages_url:
          title: languages_url
          type: string
          x-go-name: LanguagesURL
        link:
          title: link
          type: string
          x-go-name: Link
        mirror:
          title: mirror
          type: boolean
          x-go-name: Mirror
        mirror_interval:
          title: mirror_interval
          type: string
          x-go-name: MirrorInterval
        mirror_updated:
          format: date-time
          title: mirror_updated
          type: string
          x-go-name: MirrorUpdated
        name:
          title: name
          type: string
          x-go-name: Name
        open_issues_count:
          format: int64
          title: open_issues_count
          type: integer
          x-go-name: OpenIssues
        open_pr_counter:
          format: int64
          title: open_pr_counter
          type: integer
          x-go-name: OpenPulls
        original_url:
          title: original_url
          type: string
          x-go-name: OriginalURL
        owner:
          $ref: '#/components/schemas/User'
        parent:
          $ref: '#/components/schemas/Repository'
        permissions:
          $ref: '#/components/schemas/Permission'
        private:
          title: private
          type: boolean
          x-go-name: Private
        release_counter:
          format: int64
          title: release_counter
          type: integer
          x-go-name: Releases
        repo_transfer:
          $ref: '#/components/schemas/RepoTransfer'
        size:
          format: int64
          title: size
          type: integer
          x-go-name: Size
        ssh_url:
          title: ssh_url
          type: string
          x-go-name: SSHURL
        stars_count:
          format: int64
          title: stars_count
          type: integer
          x-go-name: Stars
        template:
          title: template
          type: boolean
          x-go-name: Template
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        watchers_count:
          format: int64
          title: watchers_count
          type: integer
          x-go-name: Watchers
        website:
          title: website
          type: string
          x-go-name: Website
      title: Repository
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    RepositoryMeta:
      description: RepositoryMeta basic repository information
      example:
        owner: owner
        full_name: full_name
        name: name
        id: 9
      properties:
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        name:
          title: name
          type: string
          x-go-name: Name
        owner:
          title: owner
          type: string
          x-go-name: Owner
      title: RepositoryMeta
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ReviewStateType:
      description: ReviewStateType review state type
      title: state
      type: string
      x-go-package: code.gitea.io/gitea/modules/structs
    SearchResults:
      description: SearchResults results of a successful search
      example:
        data:
        - parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        - parent: null
          has_packages: true
          open_pr_counter: 5
          has_releases: true
          language: language
          repo_transfer:
            teams:
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            - can_create_org_repo: true
              units_map:
                repo.code: read
                repo.ext_issues: none
                repo.ext_wiki: none
                repo.issues: write
                repo.projects: none
                repo.pulls: owner
                repo.releases: none
                repo.wiki: admin
              organization:
                website: website
                full_name: full_name
                repo_admin_change_team_access: true
                avatar_url: avatar_url
                visibility: visibility
                name: name
                description: description
                location: location
                id: 0
                username: username
              name: name
              description: description
              permission: none
              id: 2
              includes_all_repositories: true
              units:
              - repo.code
              - repo.issues
              - repo.ext_issues
              - repo.wiki
              - repo.pulls
              - repo.releases
              - repo.projects
              - repo.ext_wiki
            doer:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            recipient:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          has_pull_requests: true
          empty: true
          has_actions: true
          permissions:
            pull: true
            admin: true
            push: true
          id: 6
          release_counter: 5
          default_delete_branch_after_merge: true
          ssh_url: ssh_url
          full_name: full_name
          size: 7
          languages_url: languages_url
          clone_url: clone_url
          html_url: html_url
          name: name
          default_branch: default_branch
          mirror_updated: 2000-01-23T04:56:07.000+00:00
          ignore_whitespace_conflicts: true
          template: true
          internal: true
          mirror: true
          private: true
          open_issues_count: 1
          link: link
          created_at: 2000-01-23T04:56:07.000+00:00
          default_allow_maintainer_edit: true
          description: description
          allow_rebase_update: true
          has_projects: true
          archived: true
          has_wiki: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          allow_merge_commits: true
          stars_count: 9
          allow_rebase_explicit: true
          external_tracker:
            external_tracker_regexp_pattern: external_tracker_regexp_pattern
            external_tracker_style: external_tracker_style
            external_tracker_url: external_tracker_url
            external_tracker_format: external_tracker_format
          mirror_interval: mirror_interval
          owner:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          allow_squash_merge: true
          external_wiki:
            external_wiki_url: external_wiki_url
          website: website
          internal_tracker:
            enable_issue_dependencies: true
            allow_only_contributors_to_track_time: true
            enable_time_tracker: true
          has_issues: true
          allow_rebase: true
          default_merge_style: default_merge_style
          fork: true
          avatar_url: avatar_url
          original_url: original_url
          watchers_count: 3
          forks_count: 0
        ok: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/Repository'
          title: data
          type: array
          x-go-name: Data
        ok:
          title: ok
          type: boolean
          x-go-name: OK
      title: SearchResults
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    ServerVersion:
      description: ServerVersion wraps the version of the server
      example:
        version: version
      properties:
        version:
          title: version
          type: string
          x-go-name: Version
      title: ServerVersion
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    StateType:
      description: StateType issue state type
      title: StateType
      type: string
      x-go-package: code.gitea.io/gitea/modules/structs
    StopWatch:
      description: StopWatch represent a running stopwatch
      example:
        duration: duration
        seconds: 6
        issue_index: 0
        created: 2000-01-23T04:56:07.000+00:00
        repo_owner_name: repo_owner_name
        issue_title: issue_title
        repo_name: repo_name
      properties:
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        duration:
          title: duration
          type: string
          x-go-name: Duration
        issue_index:
          format: int64
          title: issue_index
          type: integer
          x-go-name: IssueIndex
        issue_title:
          title: issue_title
          type: string
          x-go-name: IssueTitle
        repo_name:
          title: repo_name
          type: string
          x-go-name: RepoName
        repo_owner_name:
          title: repo_owner_name
          type: string
          x-go-name: RepoOwnerName
        seconds:
          format: int64
          title: seconds
          type: integer
          x-go-name: Seconds
      title: StopWatch
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    SubmitPullReviewOptions:
      description: SubmitPullReviewOptions are options to submit a pending pull review
      example:
        body: body
        event: event
      properties:
        body:
          title: body
          type: string
          x-go-name: Body
        event:
          description: ReviewStateType review state type
          title: state
          type: string
          x-go-package: code.gitea.io/gitea/modules/structs
      title: SubmitPullReviewOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Tag:
      description: Tag represents a repository tag
      example:
        zipball_url: zipball_url
        commit:
          created: 2000-01-23T04:56:07.000+00:00
          sha: sha
          url: url
        name: name
        id: id
        message: message
        tarball_url: tarball_url
      properties:
        commit:
          $ref: '#/components/schemas/CommitMeta'
        id:
          title: id
          type: string
          x-go-name: ID
        message:
          title: message
          type: string
          x-go-name: Message
        name:
          title: name
          type: string
          x-go-name: Name
        tarball_url:
          title: tarball_url
          type: string
          x-go-name: TarballURL
        zipball_url:
          title: zipball_url
          type: string
          x-go-name: ZipballURL
      title: Tag
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    Team:
      description: Team represents a team in an organization
      example:
        can_create_org_repo: true
        units_map:
          repo.code: read
          repo.ext_issues: none
          repo.ext_wiki: none
          repo.issues: write
          repo.projects: none
          repo.pulls: owner
          repo.releases: none
          repo.wiki: admin
        organization:
          website: website
          full_name: full_name
          repo_admin_change_team_access: true
          avatar_url: avatar_url
          visibility: visibility
          name: name
          description: description
          location: location
          id: 0
          username: username
        name: name
        description: description
        permission: none
        id: 2
        includes_all_repositories: true
        units:
        - repo.code
        - repo.issues
        - repo.ext_issues
        - repo.wiki
        - repo.pulls
        - repo.releases
        - repo.projects
        - repo.ext_wiki
      properties:
        can_create_org_repo:
          title: can_create_org_repo
          type: boolean
          x-go-name: CanCreateOrgRepo
        description:
          title: description
          type: string
          x-go-name: Description
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        includes_all_repositories:
          title: includes_all_repositories
          type: boolean
          x-go-name: IncludesAllRepositories
        name:
          title: name
          type: string
          x-go-name: Name
        organization:
          $ref: '#/components/schemas/Organization'
        permission:
          enum:
          - none
          - read
          - write
          - admin
          - owner
          title: permission
          type: string
          x-go-name: Permission
        units:
          example:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
          items:
            type: string
          title: units
          type: array
          x-go-name: Units
        units_map:
          additionalProperties:
            type: string
          example:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          title: units_map
          type: object
          x-go-name: UnitsMap
      title: Team
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    TimeStamp:
      description: TimeStamp defines a timestamp
      format: int64
      title: timestamp
      type: integer
      x-go-package: code.gitea.io/gitea/modules/timeutil
    TimelineComment:
      description: TimelineComment represents a timeline comment (comment of any type)
        on a commit or issue
      example:
        issue_url: issue_url
        review_id: 5
        ref_commit_sha: ref_commit_sha
        old_milestone:
          closed_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 5
          state: state
          closed_issues: 1
          open_issues: 5
          title: title
          due_on: 2000-01-23T04:56:07.000+00:00
        ref_issue:
          is_locked: true
          pull_request:
            merged_at: 2000-01-23T04:56:07.000+00:00
            merged: true
          closed_at: 2000-01-23T04:56:07.000+00:00
          comments: 0
          original_author_id: 7
          due_date: 2000-01-23T04:56:07.000+00:00
          assignees:
          - website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          - website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          repository:
            owner: owner
            full_name: full_name
            name: name
            id: 9
          title: title
          url: url
          labels:
          - color: 00aabb
            name: name
            description: description
            exclusive: false
            id: 0
            url: url
          - color: 00aabb
            name: name
            description: description
            exclusive: false
            id: 0
            url: url
          number: 2
          ref: ref
          assets:
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          milestone:
            closed_at: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 5
            state: state
            closed_issues: 1
            open_issues: 5
            title: title
            due_on: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          assignee:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          id: 6
          state: state
          original_author: original_author
          user:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
        created_at: 2000-01-23T04:56:07.000+00:00
        old_title: old_title
        resolve_doer:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        body: body
        type: type
        new_title: new_title
        old_project_id: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        project_id: 1
        dependent_issue:
          is_locked: true
          pull_request:
            merged_at: 2000-01-23T04:56:07.000+00:00
            merged: true
          closed_at: 2000-01-23T04:56:07.000+00:00
          comments: 0
          original_author_id: 7
          due_date: 2000-01-23T04:56:07.000+00:00
          assignees:
          - website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          - website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          repository:
            owner: owner
            full_name: full_name
            name: name
            id: 9
          title: title
          url: url
          labels:
          - color: 00aabb
            name: name
            description: description
            exclusive: false
            id: 0
            url: url
          - color: 00aabb
            name: name
            description: description
            exclusive: false
            id: 0
            url: url
          number: 2
          ref: ref
          assets:
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          milestone:
            closed_at: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 5
            state: state
            closed_issues: 1
            open_issues: 5
            title: title
            due_on: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          assignee:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          id: 6
          state: state
          original_author: original_author
          user:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
        id: 0
        removed_assignee: true
        tracked_time:
          issue:
            is_locked: true
            pull_request:
              merged_at: 2000-01-23T04:56:07.000+00:00
              merged: true
            closed_at: 2000-01-23T04:56:07.000+00:00
            comments: 0
            original_author_id: 7
            due_date: 2000-01-23T04:56:07.000+00:00
            assignees:
            - website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            - website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            created_at: 2000-01-23T04:56:07.000+00:00
            body: body
            repository:
              owner: owner
              full_name: full_name
              name: name
              id: 9
            title: title
            url: url
            labels:
            - color: 00aabb
              name: name
              description: description
              exclusive: false
              id: 0
              url: url
            - color: 00aabb
              name: name
              description: description
              exclusive: false
              id: 0
              url: url
            number: 2
            ref: ref
            assets:
            - size: 5
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              browser_download_url: browser_download_url
              id: 1
              uuid: uuid
              download_count: 6
            - size: 5
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              browser_download_url: browser_download_url
              id: 1
              uuid: uuid
              download_count: 6
            milestone:
              closed_at: 2000-01-23T04:56:07.000+00:00
              updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              id: 5
              state: state
              closed_issues: 1
              open_issues: 5
              title: title
              due_on: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            html_url: html_url
            assignee:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
            id: 6
            state: state
            original_author: original_author
            user:
              website: website
              visibility: visibility
              created: 2000-01-23T04:56:07.000+00:00
              last_login: 2000-01-23T04:56:07.000+00:00
              active: true
              description: description
              language: language
              starred_repos_count: 5
              login: login
              is_admin: true
              full_name: full_name
              login_name: empty
              avatar_url: avatar_url
              following_count: 6
              restricted: true
              followers_count: 0
              location: location
              id: 1
              prohibit_login: true
              email: email
          issue_id: 2
          user_id: 9
          created: 2000-01-23T04:56:07.000+00:00
          user_name: user_name
          id: 5
          time: 7
        ref_action: ref_action
        label:
          color: 00aabb
          name: name
          description: description
          exclusive: false
          id: 0
          url: url
        pull_request_url: pull_request_url
        milestone:
          closed_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 5
          state: state
          closed_issues: 1
          open_issues: 5
          title: title
          due_on: 2000-01-23T04:56:07.000+00:00
        new_ref: new_ref
        assignee_team:
          can_create_org_repo: true
          units_map:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          organization:
            website: website
            full_name: full_name
            repo_admin_change_team_access: true
            avatar_url: avatar_url
            visibility: visibility
            name: name
            description: description
            location: location
            id: 0
            username: username
          name: name
          description: description
          permission: none
          id: 2
          includes_all_repositories: true
          units:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
        old_ref: old_ref
        html_url: html_url
        ref_comment:
          issue_url: issue_url
          assets:
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          original_author_id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 5
          pull_request_url: pull_request_url
          body: body
          original_author: original_author
          user:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
        assignee:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        user:
          website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
      properties:
        assignee:
          $ref: '#/components/schemas/User'
        assignee_team:
          $ref: '#/components/schemas/Team'
        body:
          title: body
          type: string
          x-go-name: Body
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: Created
        dependent_issue:
          $ref: '#/components/schemas/Issue'
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        issue_url:
          title: issue_url
          type: string
          x-go-name: IssueURL
        label:
          $ref: '#/components/schemas/Label'
        milestone:
          $ref: '#/components/schemas/Milestone'
        new_ref:
          title: new_ref
          type: string
          x-go-name: NewRef
        new_title:
          title: new_title
          type: string
          x-go-name: NewTitle
        old_milestone:
          $ref: '#/components/schemas/Milestone'
        old_project_id:
          format: int64
          title: old_project_id
          type: integer
          x-go-name: OldProjectID
        old_ref:
          title: old_ref
          type: string
          x-go-name: OldRef
        old_title:
          title: old_title
          type: string
          x-go-name: OldTitle
        project_id:
          format: int64
          title: project_id
          type: integer
          x-go-name: ProjectID
        pull_request_url:
          title: pull_request_url
          type: string
          x-go-name: PRURL
        ref_action:
          title: ref_action
          type: string
          x-go-name: RefAction
        ref_comment:
          $ref: '#/components/schemas/Comment'
        ref_commit_sha:
          description: commit SHA where issue/PR was referenced
          title: ref_commit_sha
          type: string
          x-go-name: RefCommitSHA
        ref_issue:
          $ref: '#/components/schemas/Issue'
        removed_assignee:
          description: whether the assignees were removed or added
          title: removed_assignee
          type: boolean
          x-go-name: RemovedAssignee
        resolve_doer:
          $ref: '#/components/schemas/User'
        review_id:
          format: int64
          title: review_id
          type: integer
          x-go-name: ReviewID
        tracked_time:
          $ref: '#/components/schemas/TrackedTime'
        type:
          title: type
          type: string
          x-go-name: Type
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-go-name: Updated
        user:
          $ref: '#/components/schemas/User'
      title: TimelineComment
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    TopicName:
      description: TopicName a list of repo topic names
      example:
        topics:
        - topics
        - topics
      properties:
        topics:
          items:
            type: string
          title: topics
          type: array
          x-go-name: TopicNames
      title: TopicName
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    TopicResponse:
      description: TopicResponse for returning topics
      example:
        created: 2000-01-23T04:56:07.000+00:00
        topic_name: topic_name
        id: 0
        repo_count: 6
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        repo_count:
          format: int64
          title: repo_count
          type: integer
          x-go-name: RepoCount
        topic_name:
          title: topic_name
          type: string
          x-go-name: Name
        updated:
          format: date-time
          title: updated
          type: string
          x-go-name: Updated
      title: TopicResponse
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    TrackedTime:
      description: TrackedTime worked time for an issue / pr
      example:
        issue:
          is_locked: true
          pull_request:
            merged_at: 2000-01-23T04:56:07.000+00:00
            merged: true
          closed_at: 2000-01-23T04:56:07.000+00:00
          comments: 0
          original_author_id: 7
          due_date: 2000-01-23T04:56:07.000+00:00
          assignees:
          - website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          - website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          repository:
            owner: owner
            full_name: full_name
            name: name
            id: 9
          title: title
          url: url
          labels:
          - color: 00aabb
            name: name
            description: description
            exclusive: false
            id: 0
            url: url
          - color: 00aabb
            name: name
            description: description
            exclusive: false
            id: 0
            url: url
          number: 2
          ref: ref
          assets:
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          - size: 5
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            browser_download_url: browser_download_url
            id: 1
            uuid: uuid
            download_count: 6
          milestone:
            closed_at: 2000-01-23T04:56:07.000+00:00
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 5
            state: state
            closed_issues: 1
            open_issues: 5
            title: title
            due_on: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          html_url: html_url
          assignee:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
          id: 6
          state: state
          original_author: original_author
          user:
            website: website
            visibility: visibility
            created: 2000-01-23T04:56:07.000+00:00
            last_login: 2000-01-23T04:56:07.000+00:00
            active: true
            description: description
            language: language
            starred_repos_count: 5
            login: login
            is_admin: true
            full_name: full_name
            login_name: empty
            avatar_url: avatar_url
            following_count: 6
            restricted: true
            followers_count: 0
            location: location
            id: 1
            prohibit_login: true
            email: email
        issue_id: 2
        user_id: 9
        created: 2000-01-23T04:56:07.000+00:00
        user_name: user_name
        id: 5
        time: 7
      properties:
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        id:
          format: int64
          title: id
          type: integer
          x-go-name: ID
        issue:
          $ref: '#/components/schemas/Issue'
        issue_id:
          description: deprecated (only for backwards compatibility)
          format: int64
          title: issue_id
          type: integer
          x-go-name: IssueID
        time:
          description: Time in seconds
          format: int64
          title: time
          type: integer
          x-go-name: Time
        user_id:
          description: deprecated (only for backwards compatibility)
          format: int64
          title: user_id
          type: integer
          x-go-name: UserID
        user_name:
          title: user_name
          type: string
          x-go-name: UserName
      title: TrackedTime
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    TransferRepoOption:
      description: TransferRepoOption options when transfer a repository's ownership
      example:
        new_owner: new_owner
        team_ids:
        - 0
        - 0
      properties:
        new_owner:
          title: new_owner
          type: string
          x-go-name: NewOwner
        team_ids:
          description: ID of the team or teams to add to the repository. Teams can
            only be added to organization-owned repositories.
          items:
            format: int64
            type: integer
          title: team_ids
          type: array
          x-go-name: TeamIDs
      required:
      - new_owner
      title: TransferRepoOption
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    UpdateFileOptions:
      description: |-
        UpdateFileOptions options for updating files
        Note: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)
      example:
        committer:
          name: name
          email: email
        author:
          name: name
          email: email
        from_path: from_path
        new_branch: new_branch
        dates:
          committer: 2000-01-23T04:56:07.000+00:00
          author: 2000-01-23T04:56:07.000+00:00
        signoff: true
        message: message
        branch: branch
        sha: sha
        content: content
      properties:
        author:
          $ref: '#/components/schemas/Identity'
        branch:
          description: "branch (optional) to base this file from. if not given, the\
            \ default branch is used"
          title: branch
          type: string
          x-go-name: BranchName
        committer:
          $ref: '#/components/schemas/Identity'
        content:
          description: content must be base64 encoded
          title: content
          type: string
          x-go-name: Content
        dates:
          $ref: '#/components/schemas/CommitDateOptions'
        from_path:
          description: from_path (optional) is the path of the original file which
            will be moved/renamed to the path in the URL
          title: from_path
          type: string
          x-go-name: FromPath
        message:
          description: "message (optional) for the commit of this file. if not supplied,\
            \ a default message will be used"
          title: message
          type: string
          x-go-name: Message
        new_branch:
          description: new_branch (optional) will make a new branch from `branch`
            before creating the file
          title: new_branch
          type: string
          x-go-name: NewBranchName
        sha:
          description: sha is the SHA for the file that already exists
          title: sha
          type: string
          x-go-name: SHA
        signoff:
          description: Add a Signed-off-by trailer by the committer at the end of
            the commit log message.
          title: signoff
          type: boolean
          x-go-name: Signoff
      required:
      - content
      - sha
      title: UpdateFileOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    User:
      description: User represents a user
      example:
        website: website
        visibility: visibility
        created: 2000-01-23T04:56:07.000+00:00
        last_login: 2000-01-23T04:56:07.000+00:00
        active: true
        description: description
        language: language
        starred_repos_count: 5
        login: login
        is_admin: true
        full_name: full_name
        login_name: empty
        avatar_url: avatar_url
        following_count: 6
        restricted: true
        followers_count: 0
        location: location
        id: 1
        prohibit_login: true
        email: email
      properties:
        active:
          description: Is user active
          title: active
          type: boolean
          x-go-name: IsActive
        avatar_url:
          description: URL to the user's avatar
          title: avatar_url
          type: string
          x-go-name: AvatarURL
        created:
          format: date-time
          title: created
          type: string
          x-go-name: Created
        description:
          description: the user's description
          title: description
          type: string
          x-go-name: Description
        email:
          format: email
          title: email
          type: string
          x-go-name: Email
        followers_count:
          description: user counts
          format: int64
          title: followers_count
          type: integer
          x-go-name: Followers
        following_count:
          format: int64
          title: following_count
          type: integer
          x-go-name: Following
        full_name:
          description: the user's full name
          title: full_name
          type: string
          x-go-name: FullName
        id:
          description: the user's id
          format: int64
          title: id
          type: integer
          x-go-name: ID
        is_admin:
          description: Is the user an administrator
          title: is_admin
          type: boolean
          x-go-name: IsAdmin
        language:
          description: User locale
          title: language
          type: string
          x-go-name: Language
        last_login:
          format: date-time
          title: last_login
          type: string
          x-go-name: LastLogin
        location:
          description: the user's location
          title: location
          type: string
          x-go-name: Location
        login:
          description: the user's username
          title: login
          type: string
          x-go-name: UserName
        login_name:
          default: empty
          description: the user's authentication sign-in name.
          title: login_name
          type: string
          x-go-name: LoginName
        prohibit_login:
          description: Is user login prohibited
          title: prohibit_login
          type: boolean
          x-go-name: ProhibitLogin
        restricted:
          description: Is user restricted
          title: restricted
          type: boolean
          x-go-name: Restricted
        starred_repos_count:
          format: int64
          title: starred_repos_count
          type: integer
          x-go-name: StarredRepos
        visibility:
          description: "User visibility level option: public, limited, private"
          title: visibility
          type: string
          x-go-name: Visibility
        website:
          description: the user's website
          title: website
          type: string
          x-go-name: Website
      title: User
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    UserHeatmapData:
      description: UserHeatmapData represents the data needed to create a heatmap
      example:
        contributions: 0
        timestamp: 6
      properties:
        contributions:
          format: int64
          title: contributions
          type: integer
          x-go-name: Contributions
        timestamp:
          description: TimeStamp defines a timestamp
          format: int64
          title: timestamp
          type: integer
          x-go-package: code.gitea.io/gitea/modules/timeutil
      title: UserHeatmapData
      type: object
      x-go-package: code.gitea.io/gitea/models/activities
    UserSettings:
      description: UserSettings represents user settings
      example:
        website: website
        full_name: full_name
        hide_activity: true
        diff_view_style: diff_view_style
        description: description
        language: language
        location: location
        theme: theme
        hide_email: true
      properties:
        description:
          title: description
          type: string
          x-go-name: Description
        diff_view_style:
          title: diff_view_style
          type: string
          x-go-name: DiffViewStyle
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        hide_activity:
          title: hide_activity
          type: boolean
          x-go-name: HideActivity
        hide_email:
          description: Privacy
          title: hide_email
          type: boolean
          x-go-name: HideEmail
        language:
          title: language
          type: string
          x-go-name: Language
        location:
          title: location
          type: string
          x-go-name: Location
        theme:
          title: theme
          type: string
          x-go-name: Theme
        website:
          title: website
          type: string
          x-go-name: Website
      title: UserSettings
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    UserSettingsOptions:
      description: UserSettingsOptions represents options to change user settings
      example:
        website: website
        full_name: full_name
        hide_activity: true
        diff_view_style: diff_view_style
        description: description
        language: language
        location: location
        theme: theme
        hide_email: true
      properties:
        description:
          title: description
          type: string
          x-go-name: Description
        diff_view_style:
          title: diff_view_style
          type: string
          x-go-name: DiffViewStyle
        full_name:
          title: full_name
          type: string
          x-go-name: FullName
        hide_activity:
          title: hide_activity
          type: boolean
          x-go-name: HideActivity
        hide_email:
          description: Privacy
          title: hide_email
          type: boolean
          x-go-name: HideEmail
        language:
          title: language
          type: string
          x-go-name: Language
        location:
          title: location
          type: string
          x-go-name: Location
        theme:
          title: theme
          type: string
          x-go-name: Theme
        website:
          title: website
          type: string
          x-go-name: Website
      title: UserSettingsOptions
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    WatchInfo:
      description: WatchInfo represents an API watch status of one repository
      example:
        ignored: true
        reason: ""
        subscribed: true
        created_at: 2000-01-23T04:56:07.000+00:00
        repository_url: repository_url
        url: url
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
          x-go-name: CreatedAt
        ignored:
          title: ignored
          type: boolean
          x-go-name: Ignored
        reason:
          title: reason
          x-go-name: Reason
        repository_url:
          title: repository_url
          type: string
          x-go-name: RepositoryURL
        subscribed:
          title: subscribed
          type: boolean
          x-go-name: Subscribed
        url:
          title: url
          type: string
          x-go-name: URL
      title: WatchInfo
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    WikiCommit:
      description: WikiCommit page commit/revision
      example:
        author:
          date: date
          name: name
          email: email
        message: message
        commiter:
          date: date
          name: name
          email: email
        sha: sha
      properties:
        author:
          $ref: '#/components/schemas/CommitUser'
        commiter:
          $ref: '#/components/schemas/CommitUser'
        message:
          title: message
          type: string
          x-go-name: Message
        sha:
          title: sha
          type: string
          x-go-name: ID
      title: WikiCommit
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    WikiCommitList:
      description: WikiCommitList commit/revision list
      example:
        count: 0
        commits:
        - author:
            date: date
            name: name
            email: email
          message: message
          commiter:
            date: date
            name: name
            email: email
          sha: sha
        - author:
            date: date
            name: name
            email: email
          message: message
          commiter:
            date: date
            name: name
            email: email
          sha: sha
      properties:
        commits:
          items:
            $ref: '#/components/schemas/WikiCommit'
          title: commits
          type: array
          x-go-name: WikiCommits
        count:
          format: int64
          title: count
          type: integer
          x-go-name: Count
      title: WikiCommitList
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    WikiPage:
      description: WikiPage a wiki page
      example:
        commit_count: 0
        last_commit:
          author:
            date: date
            name: name
            email: email
          message: message
          commiter:
            date: date
            name: name
            email: email
          sha: sha
        footer: footer
        sub_url: sub_url
        sidebar: sidebar
        html_url: html_url
        content_base64: content_base64
        title: title
      properties:
        commit_count:
          format: int64
          title: commit_count
          type: integer
          x-go-name: CommitCount
        content_base64:
          description: "Page content, base64 encoded"
          title: content_base64
          type: string
          x-go-name: ContentBase64
        footer:
          title: footer
          type: string
          x-go-name: Footer
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        last_commit:
          $ref: '#/components/schemas/WikiCommit'
        sidebar:
          title: sidebar
          type: string
          x-go-name: Sidebar
        sub_url:
          title: sub_url
          type: string
          x-go-name: SubURL
        title:
          title: title
          type: string
          x-go-name: Title
      title: WikiPage
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    WikiPageMetaData:
      description: WikiPageMetaData wiki page meta information
      example:
        last_commit:
          author:
            date: date
            name: name
            email: email
          message: message
          commiter:
            date: date
            name: name
            email: email
          sha: sha
        sub_url: sub_url
        html_url: html_url
        title: title
      properties:
        html_url:
          title: html_url
          type: string
          x-go-name: HTMLURL
        last_commit:
          $ref: '#/components/schemas/WikiCommit'
        sub_url:
          title: sub_url
          type: string
          x-go-name: SubURL
        title:
          title: title
          type: string
          x-go-name: Title
      title: WikiPageMetaData
      type: object
      x-go-package: code.gitea.io/gitea/modules/structs
    teamSearch_200_response:
      example:
        data:
        - can_create_org_repo: true
          units_map:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          organization:
            website: website
            full_name: full_name
            repo_admin_change_team_access: true
            avatar_url: avatar_url
            visibility: visibility
            name: name
            description: description
            location: location
            id: 0
            username: username
          name: name
          description: description
          permission: none
          id: 2
          includes_all_repositories: true
          units:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
        - can_create_org_repo: true
          units_map:
            repo.code: read
            repo.ext_issues: none
            repo.ext_wiki: none
            repo.issues: write
            repo.projects: none
            repo.pulls: owner
            repo.releases: none
            repo.wiki: admin
          organization:
            website: website
            full_name: full_name
            repo_admin_change_team_access: true
            avatar_url: avatar_url
            visibility: visibility
            name: name
            description: description
            location: location
            id: 0
            username: username
          name: name
          description: description
          permission: none
          id: 2
          includes_all_repositories: true
          units:
          - repo.code
          - repo.issues
          - repo.ext_issues
          - repo.wiki
          - repo.pulls
          - repo.releases
          - repo.projects
          - repo.ext_wiki
        ok: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/Team'
          title: data
          type: array
        ok:
          title: ok
          type: boolean
      title: teamSearch_200_response
      type: object
    issueCreateIssueCommentAttachment_request:
      properties:
        attachment:
          description: attachment to upload
          format: binary
          type: string
      required:
      - attachment
      type: object
    userSearch_200_response:
      example:
        data:
        - website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        - website: website
          visibility: visibility
          created: 2000-01-23T04:56:07.000+00:00
          last_login: 2000-01-23T04:56:07.000+00:00
          active: true
          description: description
          language: language
          starred_repos_count: 5
          login: login
          is_admin: true
          full_name: full_name
          login_name: empty
          avatar_url: avatar_url
          following_count: 6
          restricted: true
          followers_count: 0
          location: location
          id: 1
          prohibit_login: true
          email: email
        ok: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          title: data
          type: array
        ok:
          title: ok
          type: boolean
      title: userSearch_200_response
      type: object
  securitySchemes:
    AccessToken:
      in: query
      name: access_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_AccessToken
    AuthorizationHeaderToken:
      description: API tokens must be prepended with "token" followed by a space.
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_AuthorizationHeaderToken
    BasicAuth:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_BasicAuth
    SudoHeader:
      description: Sudo API request as the user provided as the key. Admin privileges
        are required.
      in: header
      name: Sudo
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_SudoHeader
    SudoParam:
      description: Sudo API request as the user provided as the key. Admin privileges
        are required.
      in: query
      name: sudo
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_SudoParam
    TOTPHeader:
      description: Must be used in combination with BasicAuth if two-factor authentication
        is enabled.
      in: header
      name: X-GITEA-OTP
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_TOTPHeader
    Token:
      in: query
      name: token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_Token
