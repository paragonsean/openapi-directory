/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GeneralRepoSettings contains global repository settings exposed by API
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:48.734827-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GeneralRepoSettings {
  public static final String SERIALIZED_NAME_HTTP_GIT_DISABLED = "http_git_disabled";
  @SerializedName(SERIALIZED_NAME_HTTP_GIT_DISABLED)
  private Boolean httpGitDisabled;

  public static final String SERIALIZED_NAME_LFS_DISABLED = "lfs_disabled";
  @SerializedName(SERIALIZED_NAME_LFS_DISABLED)
  private Boolean lfsDisabled;

  public static final String SERIALIZED_NAME_MIGRATIONS_DISABLED = "migrations_disabled";
  @SerializedName(SERIALIZED_NAME_MIGRATIONS_DISABLED)
  private Boolean migrationsDisabled;

  public static final String SERIALIZED_NAME_MIRRORS_DISABLED = "mirrors_disabled";
  @SerializedName(SERIALIZED_NAME_MIRRORS_DISABLED)
  private Boolean mirrorsDisabled;

  public static final String SERIALIZED_NAME_STARS_DISABLED = "stars_disabled";
  @SerializedName(SERIALIZED_NAME_STARS_DISABLED)
  private Boolean starsDisabled;

  public static final String SERIALIZED_NAME_TIME_TRACKING_DISABLED = "time_tracking_disabled";
  @SerializedName(SERIALIZED_NAME_TIME_TRACKING_DISABLED)
  private Boolean timeTrackingDisabled;

  public GeneralRepoSettings() {
  }

  public GeneralRepoSettings httpGitDisabled(Boolean httpGitDisabled) {
    this.httpGitDisabled = httpGitDisabled;
    return this;
  }

  /**
   * Get httpGitDisabled
   * @return httpGitDisabled
   */
  @javax.annotation.Nullable
  public Boolean getHttpGitDisabled() {
    return httpGitDisabled;
  }

  public void setHttpGitDisabled(Boolean httpGitDisabled) {
    this.httpGitDisabled = httpGitDisabled;
  }


  public GeneralRepoSettings lfsDisabled(Boolean lfsDisabled) {
    this.lfsDisabled = lfsDisabled;
    return this;
  }

  /**
   * Get lfsDisabled
   * @return lfsDisabled
   */
  @javax.annotation.Nullable
  public Boolean getLfsDisabled() {
    return lfsDisabled;
  }

  public void setLfsDisabled(Boolean lfsDisabled) {
    this.lfsDisabled = lfsDisabled;
  }


  public GeneralRepoSettings migrationsDisabled(Boolean migrationsDisabled) {
    this.migrationsDisabled = migrationsDisabled;
    return this;
  }

  /**
   * Get migrationsDisabled
   * @return migrationsDisabled
   */
  @javax.annotation.Nullable
  public Boolean getMigrationsDisabled() {
    return migrationsDisabled;
  }

  public void setMigrationsDisabled(Boolean migrationsDisabled) {
    this.migrationsDisabled = migrationsDisabled;
  }


  public GeneralRepoSettings mirrorsDisabled(Boolean mirrorsDisabled) {
    this.mirrorsDisabled = mirrorsDisabled;
    return this;
  }

  /**
   * Get mirrorsDisabled
   * @return mirrorsDisabled
   */
  @javax.annotation.Nullable
  public Boolean getMirrorsDisabled() {
    return mirrorsDisabled;
  }

  public void setMirrorsDisabled(Boolean mirrorsDisabled) {
    this.mirrorsDisabled = mirrorsDisabled;
  }


  public GeneralRepoSettings starsDisabled(Boolean starsDisabled) {
    this.starsDisabled = starsDisabled;
    return this;
  }

  /**
   * Get starsDisabled
   * @return starsDisabled
   */
  @javax.annotation.Nullable
  public Boolean getStarsDisabled() {
    return starsDisabled;
  }

  public void setStarsDisabled(Boolean starsDisabled) {
    this.starsDisabled = starsDisabled;
  }


  public GeneralRepoSettings timeTrackingDisabled(Boolean timeTrackingDisabled) {
    this.timeTrackingDisabled = timeTrackingDisabled;
    return this;
  }

  /**
   * Get timeTrackingDisabled
   * @return timeTrackingDisabled
   */
  @javax.annotation.Nullable
  public Boolean getTimeTrackingDisabled() {
    return timeTrackingDisabled;
  }

  public void setTimeTrackingDisabled(Boolean timeTrackingDisabled) {
    this.timeTrackingDisabled = timeTrackingDisabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralRepoSettings generalRepoSettings = (GeneralRepoSettings) o;
    return Objects.equals(this.httpGitDisabled, generalRepoSettings.httpGitDisabled) &&
        Objects.equals(this.lfsDisabled, generalRepoSettings.lfsDisabled) &&
        Objects.equals(this.migrationsDisabled, generalRepoSettings.migrationsDisabled) &&
        Objects.equals(this.mirrorsDisabled, generalRepoSettings.mirrorsDisabled) &&
        Objects.equals(this.starsDisabled, generalRepoSettings.starsDisabled) &&
        Objects.equals(this.timeTrackingDisabled, generalRepoSettings.timeTrackingDisabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(httpGitDisabled, lfsDisabled, migrationsDisabled, mirrorsDisabled, starsDisabled, timeTrackingDisabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralRepoSettings {\n");
    sb.append("    httpGitDisabled: ").append(toIndentedString(httpGitDisabled)).append("\n");
    sb.append("    lfsDisabled: ").append(toIndentedString(lfsDisabled)).append("\n");
    sb.append("    migrationsDisabled: ").append(toIndentedString(migrationsDisabled)).append("\n");
    sb.append("    mirrorsDisabled: ").append(toIndentedString(mirrorsDisabled)).append("\n");
    sb.append("    starsDisabled: ").append(toIndentedString(starsDisabled)).append("\n");
    sb.append("    timeTrackingDisabled: ").append(toIndentedString(timeTrackingDisabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("http_git_disabled");
    openapiFields.add("lfs_disabled");
    openapiFields.add("migrations_disabled");
    openapiFields.add("mirrors_disabled");
    openapiFields.add("stars_disabled");
    openapiFields.add("time_tracking_disabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GeneralRepoSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GeneralRepoSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GeneralRepoSettings is not found in the empty JSON string", GeneralRepoSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GeneralRepoSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GeneralRepoSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GeneralRepoSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GeneralRepoSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GeneralRepoSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GeneralRepoSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GeneralRepoSettings>() {
           @Override
           public void write(JsonWriter out, GeneralRepoSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GeneralRepoSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GeneralRepoSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GeneralRepoSettings
   * @throws IOException if the JSON string is invalid with respect to GeneralRepoSettings
   */
  public static GeneralRepoSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GeneralRepoSettings.class);
  }

  /**
   * Convert an instance of GeneralRepoSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

