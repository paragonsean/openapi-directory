/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ExternalTracker;
import org.openapitools.client.model.ExternalWiki;
import org.openapitools.client.model.InternalTracker;
import org.openapitools.client.model.Permission;
import org.openapitools.client.model.RepoTransfer;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Repository
 */
public class RepositoryTest {
    private final Repository model = new Repository();

    /**
     * Model tests for Repository
     */
    @Test
    public void testRepository() {
        // TODO: test Repository
    }

    /**
     * Test the property 'allowMergeCommits'
     */
    @Test
    public void allowMergeCommitsTest() {
        // TODO: test allowMergeCommits
    }

    /**
     * Test the property 'allowRebase'
     */
    @Test
    public void allowRebaseTest() {
        // TODO: test allowRebase
    }

    /**
     * Test the property 'allowRebaseExplicit'
     */
    @Test
    public void allowRebaseExplicitTest() {
        // TODO: test allowRebaseExplicit
    }

    /**
     * Test the property 'allowRebaseUpdate'
     */
    @Test
    public void allowRebaseUpdateTest() {
        // TODO: test allowRebaseUpdate
    }

    /**
     * Test the property 'allowSquashMerge'
     */
    @Test
    public void allowSquashMergeTest() {
        // TODO: test allowSquashMerge
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'avatarUrl'
     */
    @Test
    public void avatarUrlTest() {
        // TODO: test avatarUrl
    }

    /**
     * Test the property 'cloneUrl'
     */
    @Test
    public void cloneUrlTest() {
        // TODO: test cloneUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultAllowMaintainerEdit'
     */
    @Test
    public void defaultAllowMaintainerEditTest() {
        // TODO: test defaultAllowMaintainerEdit
    }

    /**
     * Test the property 'defaultBranch'
     */
    @Test
    public void defaultBranchTest() {
        // TODO: test defaultBranch
    }

    /**
     * Test the property 'defaultDeleteBranchAfterMerge'
     */
    @Test
    public void defaultDeleteBranchAfterMergeTest() {
        // TODO: test defaultDeleteBranchAfterMerge
    }

    /**
     * Test the property 'defaultMergeStyle'
     */
    @Test
    public void defaultMergeStyleTest() {
        // TODO: test defaultMergeStyle
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'empty'
     */
    @Test
    public void emptyTest() {
        // TODO: test empty
    }

    /**
     * Test the property 'externalTracker'
     */
    @Test
    public void externalTrackerTest() {
        // TODO: test externalTracker
    }

    /**
     * Test the property 'externalWiki'
     */
    @Test
    public void externalWikiTest() {
        // TODO: test externalWiki
    }

    /**
     * Test the property 'fork'
     */
    @Test
    public void forkTest() {
        // TODO: test fork
    }

    /**
     * Test the property 'forksCount'
     */
    @Test
    public void forksCountTest() {
        // TODO: test forksCount
    }

    /**
     * Test the property 'fullName'
     */
    @Test
    public void fullNameTest() {
        // TODO: test fullName
    }

    /**
     * Test the property 'hasActions'
     */
    @Test
    public void hasActionsTest() {
        // TODO: test hasActions
    }

    /**
     * Test the property 'hasIssues'
     */
    @Test
    public void hasIssuesTest() {
        // TODO: test hasIssues
    }

    /**
     * Test the property 'hasPackages'
     */
    @Test
    public void hasPackagesTest() {
        // TODO: test hasPackages
    }

    /**
     * Test the property 'hasProjects'
     */
    @Test
    public void hasProjectsTest() {
        // TODO: test hasProjects
    }

    /**
     * Test the property 'hasPullRequests'
     */
    @Test
    public void hasPullRequestsTest() {
        // TODO: test hasPullRequests
    }

    /**
     * Test the property 'hasReleases'
     */
    @Test
    public void hasReleasesTest() {
        // TODO: test hasReleases
    }

    /**
     * Test the property 'hasWiki'
     */
    @Test
    public void hasWikiTest() {
        // TODO: test hasWiki
    }

    /**
     * Test the property 'htmlUrl'
     */
    @Test
    public void htmlUrlTest() {
        // TODO: test htmlUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ignoreWhitespaceConflicts'
     */
    @Test
    public void ignoreWhitespaceConflictsTest() {
        // TODO: test ignoreWhitespaceConflicts
    }

    /**
     * Test the property 'internal'
     */
    @Test
    public void internalTest() {
        // TODO: test internal
    }

    /**
     * Test the property 'internalTracker'
     */
    @Test
    public void internalTrackerTest() {
        // TODO: test internalTracker
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'languagesUrl'
     */
    @Test
    public void languagesUrlTest() {
        // TODO: test languagesUrl
    }

    /**
     * Test the property 'link'
     */
    @Test
    public void linkTest() {
        // TODO: test link
    }

    /**
     * Test the property 'mirror'
     */
    @Test
    public void mirrorTest() {
        // TODO: test mirror
    }

    /**
     * Test the property 'mirrorInterval'
     */
    @Test
    public void mirrorIntervalTest() {
        // TODO: test mirrorInterval
    }

    /**
     * Test the property 'mirrorUpdated'
     */
    @Test
    public void mirrorUpdatedTest() {
        // TODO: test mirrorUpdated
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'openIssuesCount'
     */
    @Test
    public void openIssuesCountTest() {
        // TODO: test openIssuesCount
    }

    /**
     * Test the property 'openPrCounter'
     */
    @Test
    public void openPrCounterTest() {
        // TODO: test openPrCounter
    }

    /**
     * Test the property 'originalUrl'
     */
    @Test
    public void originalUrlTest() {
        // TODO: test originalUrl
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'parent'
     */
    @Test
    public void parentTest() {
        // TODO: test parent
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property '_private'
     */
    @Test
    public void _privateTest() {
        // TODO: test _private
    }

    /**
     * Test the property 'releaseCounter'
     */
    @Test
    public void releaseCounterTest() {
        // TODO: test releaseCounter
    }

    /**
     * Test the property 'repoTransfer'
     */
    @Test
    public void repoTransferTest() {
        // TODO: test repoTransfer
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'sshUrl'
     */
    @Test
    public void sshUrlTest() {
        // TODO: test sshUrl
    }

    /**
     * Test the property 'starsCount'
     */
    @Test
    public void starsCountTest() {
        // TODO: test starsCount
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'watchersCount'
     */
    @Test
    public void watchersCountTest() {
        // TODO: test watchersCount
    }

    /**
     * Test the property 'website'
     */
    @Test
    public void websiteTest() {
        // TODO: test website
    }

}
