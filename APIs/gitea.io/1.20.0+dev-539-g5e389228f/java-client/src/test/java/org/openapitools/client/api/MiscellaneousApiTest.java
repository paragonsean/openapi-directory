/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MarkdownOption;
import org.openapitools.client.model.MarkupOption;
import org.openapitools.client.model.NodeInfo;
import org.openapitools.client.model.ServerVersion;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MiscellaneousApi
 */
@Disabled
public class MiscellaneousApiTest {

    private final MiscellaneousApi api = new MiscellaneousApi();

    /**
     * Returns the nodeinfo of the Gitea application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNodeInfoTest() throws ApiException {
        NodeInfo response = api.getNodeInfo();
        // TODO: test validations
    }

    /**
     * Get default signing-key.gpg
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSigningKeyTest() throws ApiException {
        String response = api.getSigningKey();
        // TODO: test validations
    }

    /**
     * Returns the version of the Gitea application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVersionTest() throws ApiException {
        ServerVersion response = api.getVersion();
        // TODO: test validations
    }

    /**
     * Render a markdown document as HTML
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renderMarkdownTest() throws ApiException {
        MarkdownOption markdownOption = null;
        String response = api.renderMarkdown(markdownOption);
        // TODO: test validations
    }

    /**
     * Render raw markdown as HTML
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renderMarkdownRawTest() throws ApiException {
        String body = null;
        String response = api.renderMarkdownRaw(body);
        // TODO: test validations
    }

    /**
     * Render a markup document as HTML
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renderMarkupTest() throws ApiException {
        MarkupOption markupOption = null;
        String response = api.renderMarkup(markupOption);
        // TODO: test validations
    }

}
