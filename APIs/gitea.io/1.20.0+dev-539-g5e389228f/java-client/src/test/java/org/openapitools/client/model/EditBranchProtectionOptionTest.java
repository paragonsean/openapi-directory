/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EditBranchProtectionOption
 */
public class EditBranchProtectionOptionTest {
    private final EditBranchProtectionOption model = new EditBranchProtectionOption();

    /**
     * Model tests for EditBranchProtectionOption
     */
    @Test
    public void testEditBranchProtectionOption() {
        // TODO: test EditBranchProtectionOption
    }

    /**
     * Test the property 'approvalsWhitelistTeams'
     */
    @Test
    public void approvalsWhitelistTeamsTest() {
        // TODO: test approvalsWhitelistTeams
    }

    /**
     * Test the property 'approvalsWhitelistUsername'
     */
    @Test
    public void approvalsWhitelistUsernameTest() {
        // TODO: test approvalsWhitelistUsername
    }

    /**
     * Test the property 'blockOnOfficialReviewRequests'
     */
    @Test
    public void blockOnOfficialReviewRequestsTest() {
        // TODO: test blockOnOfficialReviewRequests
    }

    /**
     * Test the property 'blockOnOutdatedBranch'
     */
    @Test
    public void blockOnOutdatedBranchTest() {
        // TODO: test blockOnOutdatedBranch
    }

    /**
     * Test the property 'blockOnRejectedReviews'
     */
    @Test
    public void blockOnRejectedReviewsTest() {
        // TODO: test blockOnRejectedReviews
    }

    /**
     * Test the property 'dismissStaleApprovals'
     */
    @Test
    public void dismissStaleApprovalsTest() {
        // TODO: test dismissStaleApprovals
    }

    /**
     * Test the property 'enableApprovalsWhitelist'
     */
    @Test
    public void enableApprovalsWhitelistTest() {
        // TODO: test enableApprovalsWhitelist
    }

    /**
     * Test the property 'enableMergeWhitelist'
     */
    @Test
    public void enableMergeWhitelistTest() {
        // TODO: test enableMergeWhitelist
    }

    /**
     * Test the property 'enablePush'
     */
    @Test
    public void enablePushTest() {
        // TODO: test enablePush
    }

    /**
     * Test the property 'enablePushWhitelist'
     */
    @Test
    public void enablePushWhitelistTest() {
        // TODO: test enablePushWhitelist
    }

    /**
     * Test the property 'enableStatusCheck'
     */
    @Test
    public void enableStatusCheckTest() {
        // TODO: test enableStatusCheck
    }

    /**
     * Test the property 'mergeWhitelistTeams'
     */
    @Test
    public void mergeWhitelistTeamsTest() {
        // TODO: test mergeWhitelistTeams
    }

    /**
     * Test the property 'mergeWhitelistUsernames'
     */
    @Test
    public void mergeWhitelistUsernamesTest() {
        // TODO: test mergeWhitelistUsernames
    }

    /**
     * Test the property 'protectedFilePatterns'
     */
    @Test
    public void protectedFilePatternsTest() {
        // TODO: test protectedFilePatterns
    }

    /**
     * Test the property 'pushWhitelistDeployKeys'
     */
    @Test
    public void pushWhitelistDeployKeysTest() {
        // TODO: test pushWhitelistDeployKeys
    }

    /**
     * Test the property 'pushWhitelistTeams'
     */
    @Test
    public void pushWhitelistTeamsTest() {
        // TODO: test pushWhitelistTeams
    }

    /**
     * Test the property 'pushWhitelistUsernames'
     */
    @Test
    public void pushWhitelistUsernamesTest() {
        // TODO: test pushWhitelistUsernames
    }

    /**
     * Test the property 'requireSignedCommits'
     */
    @Test
    public void requireSignedCommitsTest() {
        // TODO: test requireSignedCommits
    }

    /**
     * Test the property 'requiredApprovals'
     */
    @Test
    public void requiredApprovalsTest() {
        // TODO: test requiredApprovals
    }

    /**
     * Test the property 'statusCheckContexts'
     */
    @Test
    public void statusCheckContextsTest() {
        // TODO: test statusCheckContexts
    }

    /**
     * Test the property 'unprotectedFilePatterns'
     */
    @Test
    public void unprotectedFilePatternsTest() {
        // TODO: test unprotectedFilePatterns
    }

}
