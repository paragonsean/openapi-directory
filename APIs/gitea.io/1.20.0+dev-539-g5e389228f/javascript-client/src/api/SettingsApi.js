/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GeneralAPISettings from '../model/GeneralAPISettings';
import GeneralAttachmentSettings from '../model/GeneralAttachmentSettings';
import GeneralRepoSettings from '../model/GeneralRepoSettings';
import GeneralUISettings from '../model/GeneralUISettings';

/**
* Settings service.
* @module api/SettingsApi
* @version 1.20.0+dev-539-g5e389228f
*/
export default class SettingsApi {

    /**
    * Constructs a new SettingsApi. 
    * @alias module:api/SettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getGeneralAPISettings operation.
     * @callback module:api/SettingsApi~getGeneralAPISettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GeneralAPISettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get instance's global settings for api
     * @param {module:api/SettingsApi~getGeneralAPISettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GeneralAPISettings}
     */
    getGeneralAPISettings(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TOTPHeader', 'AuthorizationHeaderToken', 'SudoHeader', 'BasicAuth', 'AccessToken', 'SudoParam', 'Token'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/html'];
      let returnType = GeneralAPISettings;
      return this.apiClient.callApi(
        '/settings/api', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getGeneralAttachmentSettings operation.
     * @callback module:api/SettingsApi~getGeneralAttachmentSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GeneralAttachmentSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get instance's global settings for Attachment
     * @param {module:api/SettingsApi~getGeneralAttachmentSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GeneralAttachmentSettings}
     */
    getGeneralAttachmentSettings(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TOTPHeader', 'AuthorizationHeaderToken', 'SudoHeader', 'BasicAuth', 'AccessToken', 'SudoParam', 'Token'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/html'];
      let returnType = GeneralAttachmentSettings;
      return this.apiClient.callApi(
        '/settings/attachment', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getGeneralRepositorySettings operation.
     * @callback module:api/SettingsApi~getGeneralRepositorySettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GeneralRepoSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get instance's global settings for repositories
     * @param {module:api/SettingsApi~getGeneralRepositorySettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GeneralRepoSettings}
     */
    getGeneralRepositorySettings(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TOTPHeader', 'AuthorizationHeaderToken', 'SudoHeader', 'BasicAuth', 'AccessToken', 'SudoParam', 'Token'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/html'];
      let returnType = GeneralRepoSettings;
      return this.apiClient.callApi(
        '/settings/repository', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getGeneralUISettings operation.
     * @callback module:api/SettingsApi~getGeneralUISettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GeneralUISettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get instance's global settings for ui
     * @param {module:api/SettingsApi~getGeneralUISettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GeneralUISettings}
     */
    getGeneralUISettings(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TOTPHeader', 'AuthorizationHeaderToken', 'SudoHeader', 'BasicAuth', 'AccessToken', 'SudoParam', 'Token'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/html'];
      let returnType = GeneralUISettings;
      return this.apiClient.callApi(
        '/settings/ui', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
