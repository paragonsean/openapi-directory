/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MigrateRepoOptions model module.
 * @module model/MigrateRepoOptions
 * @version 1.20.0+dev-539-g5e389228f
 */
class MigrateRepoOptions {
    /**
     * Constructs a new <code>MigrateRepoOptions</code>.
     * MigrateRepoOptions options for migrating repository&#39;s this is used to interact with api v1
     * @alias module:model/MigrateRepoOptions
     * @param cloneAddr {String} 
     * @param repoName {String} 
     */
    constructor(cloneAddr, repoName) { 
        
        MigrateRepoOptions.initialize(this, cloneAddr, repoName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cloneAddr, repoName) { 
        obj['clone_addr'] = cloneAddr;
        obj['repo_name'] = repoName;
    }

    /**
     * Constructs a <code>MigrateRepoOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrateRepoOptions} obj Optional instance to populate.
     * @return {module:model/MigrateRepoOptions} The populated <code>MigrateRepoOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrateRepoOptions();

            if (data.hasOwnProperty('auth_password')) {
                obj['auth_password'] = ApiClient.convertToType(data['auth_password'], 'String');
            }
            if (data.hasOwnProperty('auth_token')) {
                obj['auth_token'] = ApiClient.convertToType(data['auth_token'], 'String');
            }
            if (data.hasOwnProperty('auth_username')) {
                obj['auth_username'] = ApiClient.convertToType(data['auth_username'], 'String');
            }
            if (data.hasOwnProperty('clone_addr')) {
                obj['clone_addr'] = ApiClient.convertToType(data['clone_addr'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('issues')) {
                obj['issues'] = ApiClient.convertToType(data['issues'], 'Boolean');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], 'Boolean');
            }
            if (data.hasOwnProperty('lfs')) {
                obj['lfs'] = ApiClient.convertToType(data['lfs'], 'Boolean');
            }
            if (data.hasOwnProperty('lfs_endpoint')) {
                obj['lfs_endpoint'] = ApiClient.convertToType(data['lfs_endpoint'], 'String');
            }
            if (data.hasOwnProperty('milestones')) {
                obj['milestones'] = ApiClient.convertToType(data['milestones'], 'Boolean');
            }
            if (data.hasOwnProperty('mirror')) {
                obj['mirror'] = ApiClient.convertToType(data['mirror'], 'Boolean');
            }
            if (data.hasOwnProperty('mirror_interval')) {
                obj['mirror_interval'] = ApiClient.convertToType(data['mirror_interval'], 'String');
            }
            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], 'Boolean');
            }
            if (data.hasOwnProperty('pull_requests')) {
                obj['pull_requests'] = ApiClient.convertToType(data['pull_requests'], 'Boolean');
            }
            if (data.hasOwnProperty('releases')) {
                obj['releases'] = ApiClient.convertToType(data['releases'], 'Boolean');
            }
            if (data.hasOwnProperty('repo_name')) {
                obj['repo_name'] = ApiClient.convertToType(data['repo_name'], 'String');
            }
            if (data.hasOwnProperty('repo_owner')) {
                obj['repo_owner'] = ApiClient.convertToType(data['repo_owner'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'Number');
            }
            if (data.hasOwnProperty('wiki')) {
                obj['wiki'] = ApiClient.convertToType(data['wiki'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrateRepoOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrateRepoOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MigrateRepoOptions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['auth_password'] && !(typeof data['auth_password'] === 'string' || data['auth_password'] instanceof String)) {
            throw new Error("Expected the field `auth_password` to be a primitive type in the JSON string but got " + data['auth_password']);
        }
        // ensure the json data is a string
        if (data['auth_token'] && !(typeof data['auth_token'] === 'string' || data['auth_token'] instanceof String)) {
            throw new Error("Expected the field `auth_token` to be a primitive type in the JSON string but got " + data['auth_token']);
        }
        // ensure the json data is a string
        if (data['auth_username'] && !(typeof data['auth_username'] === 'string' || data['auth_username'] instanceof String)) {
            throw new Error("Expected the field `auth_username` to be a primitive type in the JSON string but got " + data['auth_username']);
        }
        // ensure the json data is a string
        if (data['clone_addr'] && !(typeof data['clone_addr'] === 'string' || data['clone_addr'] instanceof String)) {
            throw new Error("Expected the field `clone_addr` to be a primitive type in the JSON string but got " + data['clone_addr']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['lfs_endpoint'] && !(typeof data['lfs_endpoint'] === 'string' || data['lfs_endpoint'] instanceof String)) {
            throw new Error("Expected the field `lfs_endpoint` to be a primitive type in the JSON string but got " + data['lfs_endpoint']);
        }
        // ensure the json data is a string
        if (data['mirror_interval'] && !(typeof data['mirror_interval'] === 'string' || data['mirror_interval'] instanceof String)) {
            throw new Error("Expected the field `mirror_interval` to be a primitive type in the JSON string but got " + data['mirror_interval']);
        }
        // ensure the json data is a string
        if (data['repo_name'] && !(typeof data['repo_name'] === 'string' || data['repo_name'] instanceof String)) {
            throw new Error("Expected the field `repo_name` to be a primitive type in the JSON string but got " + data['repo_name']);
        }
        // ensure the json data is a string
        if (data['repo_owner'] && !(typeof data['repo_owner'] === 'string' || data['repo_owner'] instanceof String)) {
            throw new Error("Expected the field `repo_owner` to be a primitive type in the JSON string but got " + data['repo_owner']);
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }

        return true;
    }


}

MigrateRepoOptions.RequiredProperties = ["clone_addr", "repo_name"];

/**
 * @member {String} auth_password
 */
MigrateRepoOptions.prototype['auth_password'] = undefined;

/**
 * @member {String} auth_token
 */
MigrateRepoOptions.prototype['auth_token'] = undefined;

/**
 * @member {String} auth_username
 */
MigrateRepoOptions.prototype['auth_username'] = undefined;

/**
 * @member {String} clone_addr
 */
MigrateRepoOptions.prototype['clone_addr'] = undefined;

/**
 * @member {String} description
 */
MigrateRepoOptions.prototype['description'] = undefined;

/**
 * @member {Boolean} issues
 */
MigrateRepoOptions.prototype['issues'] = undefined;

/**
 * @member {Boolean} labels
 */
MigrateRepoOptions.prototype['labels'] = undefined;

/**
 * @member {Boolean} lfs
 */
MigrateRepoOptions.prototype['lfs'] = undefined;

/**
 * @member {String} lfs_endpoint
 */
MigrateRepoOptions.prototype['lfs_endpoint'] = undefined;

/**
 * @member {Boolean} milestones
 */
MigrateRepoOptions.prototype['milestones'] = undefined;

/**
 * @member {Boolean} mirror
 */
MigrateRepoOptions.prototype['mirror'] = undefined;

/**
 * @member {String} mirror_interval
 */
MigrateRepoOptions.prototype['mirror_interval'] = undefined;

/**
 * @member {Boolean} private
 */
MigrateRepoOptions.prototype['private'] = undefined;

/**
 * @member {Boolean} pull_requests
 */
MigrateRepoOptions.prototype['pull_requests'] = undefined;

/**
 * @member {Boolean} releases
 */
MigrateRepoOptions.prototype['releases'] = undefined;

/**
 * @member {String} repo_name
 */
MigrateRepoOptions.prototype['repo_name'] = undefined;

/**
 * Name of User or Organisation who will own Repo after migration
 * @member {String} repo_owner
 */
MigrateRepoOptions.prototype['repo_owner'] = undefined;

/**
 * @member {module:model/MigrateRepoOptions.ServiceEnum} service
 */
MigrateRepoOptions.prototype['service'] = undefined;

/**
 * deprecated (only for backwards compatibility)
 * @member {Number} uid
 */
MigrateRepoOptions.prototype['uid'] = undefined;

/**
 * @member {Boolean} wiki
 */
MigrateRepoOptions.prototype['wiki'] = undefined;





/**
 * Allowed values for the <code>service</code> property.
 * @enum {String}
 * @readonly
 */
MigrateRepoOptions['ServiceEnum'] = {

    /**
     * value: "git"
     * @const
     */
    "git": "git",

    /**
     * value: "github"
     * @const
     */
    "github": "github",

    /**
     * value: "gitea"
     * @const
     */
    "gitea": "gitea",

    /**
     * value: "gitlab"
     * @const
     */
    "gitlab": "gitlab"
};



export default MigrateRepoOptions;

