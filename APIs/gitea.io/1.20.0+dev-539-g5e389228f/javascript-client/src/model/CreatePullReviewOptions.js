/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatePullReviewComment from './CreatePullReviewComment';

/**
 * The CreatePullReviewOptions model module.
 * @module model/CreatePullReviewOptions
 * @version 1.20.0+dev-539-g5e389228f
 */
class CreatePullReviewOptions {
    /**
     * Constructs a new <code>CreatePullReviewOptions</code>.
     * CreatePullReviewOptions are options to create a pull review
     * @alias module:model/CreatePullReviewOptions
     */
    constructor() { 
        
        CreatePullReviewOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreatePullReviewOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePullReviewOptions} obj Optional instance to populate.
     * @return {module:model/CreatePullReviewOptions} The populated <code>CreatePullReviewOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePullReviewOptions();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [CreatePullReviewComment]);
            }
            if (data.hasOwnProperty('commit_id')) {
                obj['commit_id'] = ApiClient.convertToType(data['commit_id'], 'String');
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePullReviewOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePullReviewOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        if (data['comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['comments'])) {
                throw new Error("Expected the field `comments` to be an array in the JSON data but got " + data['comments']);
            }
            // validate the optional field `comments` (array)
            for (const item of data['comments']) {
                CreatePullReviewComment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['commit_id'] && !(typeof data['commit_id'] === 'string' || data['commit_id'] instanceof String)) {
            throw new Error("Expected the field `commit_id` to be a primitive type in the JSON string but got " + data['commit_id']);
        }
        // ensure the json data is a string
        if (data['event'] && !(typeof data['event'] === 'string' || data['event'] instanceof String)) {
            throw new Error("Expected the field `event` to be a primitive type in the JSON string but got " + data['event']);
        }

        return true;
    }


}



/**
 * @member {String} body
 */
CreatePullReviewOptions.prototype['body'] = undefined;

/**
 * @member {Array.<module:model/CreatePullReviewComment>} comments
 */
CreatePullReviewOptions.prototype['comments'] = undefined;

/**
 * @member {String} commit_id
 */
CreatePullReviewOptions.prototype['commit_id'] = undefined;

/**
 * ReviewStateType review state type
 * @member {String} event
 */
CreatePullReviewOptions.prototype['event'] = undefined;






export default CreatePullReviewOptions;

