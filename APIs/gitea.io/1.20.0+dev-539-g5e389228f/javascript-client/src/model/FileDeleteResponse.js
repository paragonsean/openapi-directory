/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileCommitResponse from './FileCommitResponse';
import PayloadCommitVerification from './PayloadCommitVerification';

/**
 * The FileDeleteResponse model module.
 * @module model/FileDeleteResponse
 * @version 1.20.0+dev-539-g5e389228f
 */
class FileDeleteResponse {
    /**
     * Constructs a new <code>FileDeleteResponse</code>.
     * FileDeleteResponse contains information about a repo&#39;s file that was deleted
     * @alias module:model/FileDeleteResponse
     */
    constructor() { 
        
        FileDeleteResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileDeleteResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileDeleteResponse} obj Optional instance to populate.
     * @return {module:model/FileDeleteResponse} The populated <code>FileDeleteResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileDeleteResponse();

            if (data.hasOwnProperty('commit')) {
                obj['commit'] = FileCommitResponse.constructFromObject(data['commit']);
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], Object);
            }
            if (data.hasOwnProperty('verification')) {
                obj['verification'] = PayloadCommitVerification.constructFromObject(data['verification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileDeleteResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileDeleteResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `commit`
        if (data['commit']) { // data not null
          FileCommitResponse.validateJSON(data['commit']);
        }
        // validate the optional field `verification`
        if (data['verification']) { // data not null
          PayloadCommitVerification.validateJSON(data['verification']);
        }

        return true;
    }


}



/**
 * @member {module:model/FileCommitResponse} commit
 */
FileDeleteResponse.prototype['commit'] = undefined;

/**
 * @member {Object} content
 */
FileDeleteResponse.prototype['content'] = undefined;

/**
 * @member {module:model/PayloadCommitVerification} verification
 */
FileDeleteResponse.prototype['verification'] = undefined;






export default FileDeleteResponse;

