/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeInfoUsageUsers from './NodeInfoUsageUsers';

/**
 * The NodeInfoUsage model module.
 * @module model/NodeInfoUsage
 * @version 1.20.0+dev-539-g5e389228f
 */
class NodeInfoUsage {
    /**
     * Constructs a new <code>NodeInfoUsage</code>.
     * NodeInfoUsage contains usage statistics for this server
     * @alias module:model/NodeInfoUsage
     */
    constructor() { 
        
        NodeInfoUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeInfoUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeInfoUsage} obj Optional instance to populate.
     * @return {module:model/NodeInfoUsage} The populated <code>NodeInfoUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeInfoUsage();

            if (data.hasOwnProperty('localComments')) {
                obj['localComments'] = ApiClient.convertToType(data['localComments'], 'Number');
            }
            if (data.hasOwnProperty('localPosts')) {
                obj['localPosts'] = ApiClient.convertToType(data['localPosts'], 'Number');
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = NodeInfoUsageUsers.constructFromObject(data['users']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeInfoUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeInfoUsage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `users`
        if (data['users']) { // data not null
          NodeInfoUsageUsers.validateJSON(data['users']);
        }

        return true;
    }


}



/**
 * @member {Number} localComments
 */
NodeInfoUsage.prototype['localComments'] = undefined;

/**
 * @member {Number} localPosts
 */
NodeInfoUsage.prototype['localPosts'] = undefined;

/**
 * @member {module:model/NodeInfoUsageUsers} users
 */
NodeInfoUsage.prototype['users'] = undefined;






export default NodeInfoUsage;

