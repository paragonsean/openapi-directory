/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreatePullReviewComment model module.
 * @module model/CreatePullReviewComment
 * @version 1.20.0+dev-539-g5e389228f
 */
class CreatePullReviewComment {
    /**
     * Constructs a new <code>CreatePullReviewComment</code>.
     * CreatePullReviewComment represent a review comment for creation api
     * @alias module:model/CreatePullReviewComment
     */
    constructor() { 
        
        CreatePullReviewComment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreatePullReviewComment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePullReviewComment} obj Optional instance to populate.
     * @return {module:model/CreatePullReviewComment} The populated <code>CreatePullReviewComment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePullReviewComment();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('new_position')) {
                obj['new_position'] = ApiClient.convertToType(data['new_position'], 'Number');
            }
            if (data.hasOwnProperty('old_position')) {
                obj['old_position'] = ApiClient.convertToType(data['old_position'], 'Number');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePullReviewComment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePullReviewComment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * @member {String} body
 */
CreatePullReviewComment.prototype['body'] = undefined;

/**
 * if comment to new file line or 0
 * @member {Number} new_position
 */
CreatePullReviewComment.prototype['new_position'] = undefined;

/**
 * if comment to old file line or 0
 * @member {Number} old_position
 */
CreatePullReviewComment.prototype['old_position'] = undefined;

/**
 * the tree path
 * @member {String} path
 */
CreatePullReviewComment.prototype['path'] = undefined;






export default CreatePullReviewComment;

