/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganizationPermissions model module.
 * @module model/OrganizationPermissions
 * @version 1.20.0+dev-539-g5e389228f
 */
class OrganizationPermissions {
    /**
     * Constructs a new <code>OrganizationPermissions</code>.
     * OrganizationPermissions list different users permissions on an organization
     * @alias module:model/OrganizationPermissions
     */
    constructor() { 
        
        OrganizationPermissions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganizationPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationPermissions} obj Optional instance to populate.
     * @return {module:model/OrganizationPermissions} The populated <code>OrganizationPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationPermissions();

            if (data.hasOwnProperty('can_create_repository')) {
                obj['can_create_repository'] = ApiClient.convertToType(data['can_create_repository'], 'Boolean');
            }
            if (data.hasOwnProperty('can_read')) {
                obj['can_read'] = ApiClient.convertToType(data['can_read'], 'Boolean');
            }
            if (data.hasOwnProperty('can_write')) {
                obj['can_write'] = ApiClient.convertToType(data['can_write'], 'Boolean');
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'Boolean');
            }
            if (data.hasOwnProperty('is_owner')) {
                obj['is_owner'] = ApiClient.convertToType(data['is_owner'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationPermissions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationPermissions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Boolean} can_create_repository
 */
OrganizationPermissions.prototype['can_create_repository'] = undefined;

/**
 * @member {Boolean} can_read
 */
OrganizationPermissions.prototype['can_read'] = undefined;

/**
 * @member {Boolean} can_write
 */
OrganizationPermissions.prototype['can_write'] = undefined;

/**
 * @member {Boolean} is_admin
 */
OrganizationPermissions.prototype['is_admin'] = undefined;

/**
 * @member {Boolean} is_owner
 */
OrganizationPermissions.prototype['is_owner'] = undefined;






export default OrganizationPermissions;

