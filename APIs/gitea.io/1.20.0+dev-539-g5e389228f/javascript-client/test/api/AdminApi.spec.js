/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiteaApi);
  }
}(this, function(expect, GiteaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiteaApi.AdminApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdminApi', function() {
    describe('adminAdoptRepository', function() {
      it('should call adminAdoptRepository successfully', function(done) {
        //uncomment below and update the code to test adminAdoptRepository
        //instance.adminAdoptRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreateHook', function() {
      it('should call adminCreateHook successfully', function(done) {
        //uncomment below and update the code to test adminCreateHook
        //instance.adminCreateHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreateOrg', function() {
      it('should call adminCreateOrg successfully', function(done) {
        //uncomment below and update the code to test adminCreateOrg
        //instance.adminCreateOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreatePublicKey', function() {
      it('should call adminCreatePublicKey successfully', function(done) {
        //uncomment below and update the code to test adminCreatePublicKey
        //instance.adminCreatePublicKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreateRepo', function() {
      it('should call adminCreateRepo successfully', function(done) {
        //uncomment below and update the code to test adminCreateRepo
        //instance.adminCreateRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreateUser', function() {
      it('should call adminCreateUser successfully', function(done) {
        //uncomment below and update the code to test adminCreateUser
        //instance.adminCreateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCronList', function() {
      it('should call adminCronList successfully', function(done) {
        //uncomment below and update the code to test adminCronList
        //instance.adminCronList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCronRun', function() {
      it('should call adminCronRun successfully', function(done) {
        //uncomment below and update the code to test adminCronRun
        //instance.adminCronRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteHook', function() {
      it('should call adminDeleteHook successfully', function(done) {
        //uncomment below and update the code to test adminDeleteHook
        //instance.adminDeleteHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteUnadoptedRepository', function() {
      it('should call adminDeleteUnadoptedRepository successfully', function(done) {
        //uncomment below and update the code to test adminDeleteUnadoptedRepository
        //instance.adminDeleteUnadoptedRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteUser', function() {
      it('should call adminDeleteUser successfully', function(done) {
        //uncomment below and update the code to test adminDeleteUser
        //instance.adminDeleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteUserPublicKey', function() {
      it('should call adminDeleteUserPublicKey successfully', function(done) {
        //uncomment below and update the code to test adminDeleteUserPublicKey
        //instance.adminDeleteUserPublicKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminEditHook', function() {
      it('should call adminEditHook successfully', function(done) {
        //uncomment below and update the code to test adminEditHook
        //instance.adminEditHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminEditUser', function() {
      it('should call adminEditUser successfully', function(done) {
        //uncomment below and update the code to test adminEditUser
        //instance.adminEditUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminGetAllEmails', function() {
      it('should call adminGetAllEmails successfully', function(done) {
        //uncomment below and update the code to test adminGetAllEmails
        //instance.adminGetAllEmails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminGetAllOrgs', function() {
      it('should call adminGetAllOrgs successfully', function(done) {
        //uncomment below and update the code to test adminGetAllOrgs
        //instance.adminGetAllOrgs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminGetHook', function() {
      it('should call adminGetHook successfully', function(done) {
        //uncomment below and update the code to test adminGetHook
        //instance.adminGetHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminListHooks', function() {
      it('should call adminListHooks successfully', function(done) {
        //uncomment below and update the code to test adminListHooks
        //instance.adminListHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminRenameUser', function() {
      it('should call adminRenameUser successfully', function(done) {
        //uncomment below and update the code to test adminRenameUser
        //instance.adminRenameUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminSearchEmails', function() {
      it('should call adminSearchEmails successfully', function(done) {
        //uncomment below and update the code to test adminSearchEmails
        //instance.adminSearchEmails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminSearchUsers', function() {
      it('should call adminSearchUsers successfully', function(done) {
        //uncomment below and update the code to test adminSearchUsers
        //instance.adminSearchUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminUnadoptedList', function() {
      it('should call adminUnadoptedList successfully', function(done) {
        //uncomment below and update the code to test adminUnadoptedList
        //instance.adminUnadoptedList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
