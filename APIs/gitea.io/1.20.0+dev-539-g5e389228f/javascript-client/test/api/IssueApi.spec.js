/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiteaApi);
  }
}(this, function(expect, GiteaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiteaApi.IssueApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IssueApi', function() {
    describe('issueAddLabel', function() {
      it('should call issueAddLabel successfully', function(done) {
        //uncomment below and update the code to test issueAddLabel
        //instance.issueAddLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueAddSubscription', function() {
      it('should call issueAddSubscription successfully', function(done) {
        //uncomment below and update the code to test issueAddSubscription
        //instance.issueAddSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueAddTime', function() {
      it('should call issueAddTime successfully', function(done) {
        //uncomment below and update the code to test issueAddTime
        //instance.issueAddTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCheckSubscription', function() {
      it('should call issueCheckSubscription successfully', function(done) {
        //uncomment below and update the code to test issueCheckSubscription
        //instance.issueCheckSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueClearLabels', function() {
      it('should call issueClearLabels successfully', function(done) {
        //uncomment below and update the code to test issueClearLabels
        //instance.issueClearLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateComment', function() {
      it('should call issueCreateComment successfully', function(done) {
        //uncomment below and update the code to test issueCreateComment
        //instance.issueCreateComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateIssue', function() {
      it('should call issueCreateIssue successfully', function(done) {
        //uncomment below and update the code to test issueCreateIssue
        //instance.issueCreateIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateIssueAttachment', function() {
      it('should call issueCreateIssueAttachment successfully', function(done) {
        //uncomment below and update the code to test issueCreateIssueAttachment
        //instance.issueCreateIssueAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateIssueBlocking', function() {
      it('should call issueCreateIssueBlocking successfully', function(done) {
        //uncomment below and update the code to test issueCreateIssueBlocking
        //instance.issueCreateIssueBlocking(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateIssueCommentAttachment', function() {
      it('should call issueCreateIssueCommentAttachment successfully', function(done) {
        //uncomment below and update the code to test issueCreateIssueCommentAttachment
        //instance.issueCreateIssueCommentAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateIssueDependencies', function() {
      it('should call issueCreateIssueDependencies successfully', function(done) {
        //uncomment below and update the code to test issueCreateIssueDependencies
        //instance.issueCreateIssueDependencies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateLabel', function() {
      it('should call issueCreateLabel successfully', function(done) {
        //uncomment below and update the code to test issueCreateLabel
        //instance.issueCreateLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueCreateMilestone', function() {
      it('should call issueCreateMilestone successfully', function(done) {
        //uncomment below and update the code to test issueCreateMilestone
        //instance.issueCreateMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDelete', function() {
      it('should call issueDelete successfully', function(done) {
        //uncomment below and update the code to test issueDelete
        //instance.issueDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteComment', function() {
      it('should call issueDeleteComment successfully', function(done) {
        //uncomment below and update the code to test issueDeleteComment
        //instance.issueDeleteComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteCommentDeprecated', function() {
      it('should call issueDeleteCommentDeprecated successfully', function(done) {
        //uncomment below and update the code to test issueDeleteCommentDeprecated
        //instance.issueDeleteCommentDeprecated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteCommentReaction', function() {
      it('should call issueDeleteCommentReaction successfully', function(done) {
        //uncomment below and update the code to test issueDeleteCommentReaction
        //instance.issueDeleteCommentReaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteIssueAttachment', function() {
      it('should call issueDeleteIssueAttachment successfully', function(done) {
        //uncomment below and update the code to test issueDeleteIssueAttachment
        //instance.issueDeleteIssueAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteIssueCommentAttachment', function() {
      it('should call issueDeleteIssueCommentAttachment successfully', function(done) {
        //uncomment below and update the code to test issueDeleteIssueCommentAttachment
        //instance.issueDeleteIssueCommentAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteIssueReaction', function() {
      it('should call issueDeleteIssueReaction successfully', function(done) {
        //uncomment below and update the code to test issueDeleteIssueReaction
        //instance.issueDeleteIssueReaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteLabel', function() {
      it('should call issueDeleteLabel successfully', function(done) {
        //uncomment below and update the code to test issueDeleteLabel
        //instance.issueDeleteLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteMilestone', function() {
      it('should call issueDeleteMilestone successfully', function(done) {
        //uncomment below and update the code to test issueDeleteMilestone
        //instance.issueDeleteMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteStopWatch', function() {
      it('should call issueDeleteStopWatch successfully', function(done) {
        //uncomment below and update the code to test issueDeleteStopWatch
        //instance.issueDeleteStopWatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteSubscription', function() {
      it('should call issueDeleteSubscription successfully', function(done) {
        //uncomment below and update the code to test issueDeleteSubscription
        //instance.issueDeleteSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueDeleteTime', function() {
      it('should call issueDeleteTime successfully', function(done) {
        //uncomment below and update the code to test issueDeleteTime
        //instance.issueDeleteTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditComment', function() {
      it('should call issueEditComment successfully', function(done) {
        //uncomment below and update the code to test issueEditComment
        //instance.issueEditComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditCommentDeprecated', function() {
      it('should call issueEditCommentDeprecated successfully', function(done) {
        //uncomment below and update the code to test issueEditCommentDeprecated
        //instance.issueEditCommentDeprecated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditIssue', function() {
      it('should call issueEditIssue successfully', function(done) {
        //uncomment below and update the code to test issueEditIssue
        //instance.issueEditIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditIssueAttachment', function() {
      it('should call issueEditIssueAttachment successfully', function(done) {
        //uncomment below and update the code to test issueEditIssueAttachment
        //instance.issueEditIssueAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditIssueCommentAttachment', function() {
      it('should call issueEditIssueCommentAttachment successfully', function(done) {
        //uncomment below and update the code to test issueEditIssueCommentAttachment
        //instance.issueEditIssueCommentAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditIssueDeadline', function() {
      it('should call issueEditIssueDeadline successfully', function(done) {
        //uncomment below and update the code to test issueEditIssueDeadline
        //instance.issueEditIssueDeadline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditLabel', function() {
      it('should call issueEditLabel successfully', function(done) {
        //uncomment below and update the code to test issueEditLabel
        //instance.issueEditLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueEditMilestone', function() {
      it('should call issueEditMilestone successfully', function(done) {
        //uncomment below and update the code to test issueEditMilestone
        //instance.issueEditMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetComment', function() {
      it('should call issueGetComment successfully', function(done) {
        //uncomment below and update the code to test issueGetComment
        //instance.issueGetComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetCommentReactions', function() {
      it('should call issueGetCommentReactions successfully', function(done) {
        //uncomment below and update the code to test issueGetCommentReactions
        //instance.issueGetCommentReactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetComments', function() {
      it('should call issueGetComments successfully', function(done) {
        //uncomment below and update the code to test issueGetComments
        //instance.issueGetComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetCommentsAndTimeline', function() {
      it('should call issueGetCommentsAndTimeline successfully', function(done) {
        //uncomment below and update the code to test issueGetCommentsAndTimeline
        //instance.issueGetCommentsAndTimeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetIssue', function() {
      it('should call issueGetIssue successfully', function(done) {
        //uncomment below and update the code to test issueGetIssue
        //instance.issueGetIssue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetIssueAttachment', function() {
      it('should call issueGetIssueAttachment successfully', function(done) {
        //uncomment below and update the code to test issueGetIssueAttachment
        //instance.issueGetIssueAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetIssueCommentAttachment', function() {
      it('should call issueGetIssueCommentAttachment successfully', function(done) {
        //uncomment below and update the code to test issueGetIssueCommentAttachment
        //instance.issueGetIssueCommentAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetIssueReactions', function() {
      it('should call issueGetIssueReactions successfully', function(done) {
        //uncomment below and update the code to test issueGetIssueReactions
        //instance.issueGetIssueReactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetLabel', function() {
      it('should call issueGetLabel successfully', function(done) {
        //uncomment below and update the code to test issueGetLabel
        //instance.issueGetLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetLabels', function() {
      it('should call issueGetLabels successfully', function(done) {
        //uncomment below and update the code to test issueGetLabels
        //instance.issueGetLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetMilestone', function() {
      it('should call issueGetMilestone successfully', function(done) {
        //uncomment below and update the code to test issueGetMilestone
        //instance.issueGetMilestone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetMilestonesList', function() {
      it('should call issueGetMilestonesList successfully', function(done) {
        //uncomment below and update the code to test issueGetMilestonesList
        //instance.issueGetMilestonesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueGetRepoComments', function() {
      it('should call issueGetRepoComments successfully', function(done) {
        //uncomment below and update the code to test issueGetRepoComments
        //instance.issueGetRepoComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueListBlocks', function() {
      it('should call issueListBlocks successfully', function(done) {
        //uncomment below and update the code to test issueListBlocks
        //instance.issueListBlocks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueListIssueAttachments', function() {
      it('should call issueListIssueAttachments successfully', function(done) {
        //uncomment below and update the code to test issueListIssueAttachments
        //instance.issueListIssueAttachments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueListIssueCommentAttachments', function() {
      it('should call issueListIssueCommentAttachments successfully', function(done) {
        //uncomment below and update the code to test issueListIssueCommentAttachments
        //instance.issueListIssueCommentAttachments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueListIssueDependencies', function() {
      it('should call issueListIssueDependencies successfully', function(done) {
        //uncomment below and update the code to test issueListIssueDependencies
        //instance.issueListIssueDependencies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueListIssues', function() {
      it('should call issueListIssues successfully', function(done) {
        //uncomment below and update the code to test issueListIssues
        //instance.issueListIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueListLabels', function() {
      it('should call issueListLabels successfully', function(done) {
        //uncomment below and update the code to test issueListLabels
        //instance.issueListLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuePostCommentReaction', function() {
      it('should call issuePostCommentReaction successfully', function(done) {
        //uncomment below and update the code to test issuePostCommentReaction
        //instance.issuePostCommentReaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issuePostIssueReaction', function() {
      it('should call issuePostIssueReaction successfully', function(done) {
        //uncomment below and update the code to test issuePostIssueReaction
        //instance.issuePostIssueReaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueRemoveIssueBlocking', function() {
      it('should call issueRemoveIssueBlocking successfully', function(done) {
        //uncomment below and update the code to test issueRemoveIssueBlocking
        //instance.issueRemoveIssueBlocking(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueRemoveIssueDependencies', function() {
      it('should call issueRemoveIssueDependencies successfully', function(done) {
        //uncomment below and update the code to test issueRemoveIssueDependencies
        //instance.issueRemoveIssueDependencies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueRemoveLabel', function() {
      it('should call issueRemoveLabel successfully', function(done) {
        //uncomment below and update the code to test issueRemoveLabel
        //instance.issueRemoveLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueReplaceLabels', function() {
      it('should call issueReplaceLabels successfully', function(done) {
        //uncomment below and update the code to test issueReplaceLabels
        //instance.issueReplaceLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueResetTime', function() {
      it('should call issueResetTime successfully', function(done) {
        //uncomment below and update the code to test issueResetTime
        //instance.issueResetTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueSearchIssues', function() {
      it('should call issueSearchIssues successfully', function(done) {
        //uncomment below and update the code to test issueSearchIssues
        //instance.issueSearchIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueStartStopWatch', function() {
      it('should call issueStartStopWatch successfully', function(done) {
        //uncomment below and update the code to test issueStartStopWatch
        //instance.issueStartStopWatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueStopStopWatch', function() {
      it('should call issueStopStopWatch successfully', function(done) {
        //uncomment below and update the code to test issueStopStopWatch
        //instance.issueStopStopWatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueSubscriptions', function() {
      it('should call issueSubscriptions successfully', function(done) {
        //uncomment below and update the code to test issueSubscriptions
        //instance.issueSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('issueTrackedTimes', function() {
      it('should call issueTrackedTimes successfully', function(done) {
        //uncomment below and update the code to test issueTrackedTimes
        //instance.issueTrackedTimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
