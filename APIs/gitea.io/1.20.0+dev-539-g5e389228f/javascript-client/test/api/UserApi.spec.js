/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiteaApi);
  }
}(this, function(expect, GiteaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiteaApi.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('createCurrentUserRepo_0', function() {
      it('should call createCurrentUserRepo_0 successfully', function(done) {
        //uncomment below and update the code to test createCurrentUserRepo_0
        //instance.createCurrentUserRepo_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserSettings', function() {
      it('should call getUserSettings successfully', function(done) {
        //uncomment below and update the code to test getUserSettings
        //instance.getUserSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVerificationToken', function() {
      it('should call getVerificationToken successfully', function(done) {
        //uncomment below and update the code to test getVerificationToken
        //instance.getVerificationToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserSettings', function() {
      it('should call updateUserSettings successfully', function(done) {
        //uncomment below and update the code to test updateUserSettings
        //instance.updateUserSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userAddEmail', function() {
      it('should call userAddEmail successfully', function(done) {
        //uncomment below and update the code to test userAddEmail
        //instance.userAddEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCheckFollowing', function() {
      it('should call userCheckFollowing successfully', function(done) {
        //uncomment below and update the code to test userCheckFollowing
        //instance.userCheckFollowing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreateHook', function() {
      it('should call userCreateHook successfully', function(done) {
        //uncomment below and update the code to test userCreateHook
        //instance.userCreateHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreateOAuth2Application', function() {
      it('should call userCreateOAuth2Application successfully', function(done) {
        //uncomment below and update the code to test userCreateOAuth2Application
        //instance.userCreateOAuth2Application(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreateToken', function() {
      it('should call userCreateToken successfully', function(done) {
        //uncomment below and update the code to test userCreateToken
        //instance.userCreateToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentCheckFollowing', function() {
      it('should call userCurrentCheckFollowing successfully', function(done) {
        //uncomment below and update the code to test userCurrentCheckFollowing
        //instance.userCurrentCheckFollowing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentCheckStarring', function() {
      it('should call userCurrentCheckStarring successfully', function(done) {
        //uncomment below and update the code to test userCurrentCheckStarring
        //instance.userCurrentCheckStarring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentDeleteFollow', function() {
      it('should call userCurrentDeleteFollow successfully', function(done) {
        //uncomment below and update the code to test userCurrentDeleteFollow
        //instance.userCurrentDeleteFollow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentDeleteGPGKey', function() {
      it('should call userCurrentDeleteGPGKey successfully', function(done) {
        //uncomment below and update the code to test userCurrentDeleteGPGKey
        //instance.userCurrentDeleteGPGKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentDeleteKey', function() {
      it('should call userCurrentDeleteKey successfully', function(done) {
        //uncomment below and update the code to test userCurrentDeleteKey
        //instance.userCurrentDeleteKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentDeleteStar', function() {
      it('should call userCurrentDeleteStar successfully', function(done) {
        //uncomment below and update the code to test userCurrentDeleteStar
        //instance.userCurrentDeleteStar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentGetGPGKey', function() {
      it('should call userCurrentGetGPGKey successfully', function(done) {
        //uncomment below and update the code to test userCurrentGetGPGKey
        //instance.userCurrentGetGPGKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentGetKey', function() {
      it('should call userCurrentGetKey successfully', function(done) {
        //uncomment below and update the code to test userCurrentGetKey
        //instance.userCurrentGetKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListFollowers', function() {
      it('should call userCurrentListFollowers successfully', function(done) {
        //uncomment below and update the code to test userCurrentListFollowers
        //instance.userCurrentListFollowers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListFollowing', function() {
      it('should call userCurrentListFollowing successfully', function(done) {
        //uncomment below and update the code to test userCurrentListFollowing
        //instance.userCurrentListFollowing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListGPGKeys', function() {
      it('should call userCurrentListGPGKeys successfully', function(done) {
        //uncomment below and update the code to test userCurrentListGPGKeys
        //instance.userCurrentListGPGKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListKeys', function() {
      it('should call userCurrentListKeys successfully', function(done) {
        //uncomment below and update the code to test userCurrentListKeys
        //instance.userCurrentListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListRepos', function() {
      it('should call userCurrentListRepos successfully', function(done) {
        //uncomment below and update the code to test userCurrentListRepos
        //instance.userCurrentListRepos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListStarred', function() {
      it('should call userCurrentListStarred successfully', function(done) {
        //uncomment below and update the code to test userCurrentListStarred
        //instance.userCurrentListStarred(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentListSubscriptions', function() {
      it('should call userCurrentListSubscriptions successfully', function(done) {
        //uncomment below and update the code to test userCurrentListSubscriptions
        //instance.userCurrentListSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentPostGPGKey', function() {
      it('should call userCurrentPostGPGKey successfully', function(done) {
        //uncomment below and update the code to test userCurrentPostGPGKey
        //instance.userCurrentPostGPGKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentPostKey', function() {
      it('should call userCurrentPostKey successfully', function(done) {
        //uncomment below and update the code to test userCurrentPostKey
        //instance.userCurrentPostKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentPutFollow', function() {
      it('should call userCurrentPutFollow successfully', function(done) {
        //uncomment below and update the code to test userCurrentPutFollow
        //instance.userCurrentPutFollow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentPutStar', function() {
      it('should call userCurrentPutStar successfully', function(done) {
        //uncomment below and update the code to test userCurrentPutStar
        //instance.userCurrentPutStar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentTrackedTimes', function() {
      it('should call userCurrentTrackedTimes successfully', function(done) {
        //uncomment below and update the code to test userCurrentTrackedTimes
        //instance.userCurrentTrackedTimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteAccessToken', function() {
      it('should call userDeleteAccessToken successfully', function(done) {
        //uncomment below and update the code to test userDeleteAccessToken
        //instance.userDeleteAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteEmail', function() {
      it('should call userDeleteEmail successfully', function(done) {
        //uncomment below and update the code to test userDeleteEmail
        //instance.userDeleteEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteHook', function() {
      it('should call userDeleteHook successfully', function(done) {
        //uncomment below and update the code to test userDeleteHook
        //instance.userDeleteHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteOAuth2Application', function() {
      it('should call userDeleteOAuth2Application successfully', function(done) {
        //uncomment below and update the code to test userDeleteOAuth2Application
        //instance.userDeleteOAuth2Application(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userEditHook', function() {
      it('should call userEditHook successfully', function(done) {
        //uncomment below and update the code to test userEditHook
        //instance.userEditHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGet', function() {
      it('should call userGet successfully', function(done) {
        //uncomment below and update the code to test userGet
        //instance.userGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetCurrent', function() {
      it('should call userGetCurrent successfully', function(done) {
        //uncomment below and update the code to test userGetCurrent
        //instance.userGetCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetHeatmapData', function() {
      it('should call userGetHeatmapData successfully', function(done) {
        //uncomment below and update the code to test userGetHeatmapData
        //instance.userGetHeatmapData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetHook', function() {
      it('should call userGetHook successfully', function(done) {
        //uncomment below and update the code to test userGetHook
        //instance.userGetHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetOAuth2Application', function() {
      it('should call userGetOAuth2Application successfully', function(done) {
        //uncomment below and update the code to test userGetOAuth2Application
        //instance.userGetOAuth2Application(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetOauth2Application', function() {
      it('should call userGetOauth2Application successfully', function(done) {
        //uncomment below and update the code to test userGetOauth2Application
        //instance.userGetOauth2Application(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetStopWatches', function() {
      it('should call userGetStopWatches successfully', function(done) {
        //uncomment below and update the code to test userGetStopWatches
        //instance.userGetStopWatches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGetTokens', function() {
      it('should call userGetTokens successfully', function(done) {
        //uncomment below and update the code to test userGetTokens
        //instance.userGetTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListActivityFeeds', function() {
      it('should call userListActivityFeeds successfully', function(done) {
        //uncomment below and update the code to test userListActivityFeeds
        //instance.userListActivityFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListEmails', function() {
      it('should call userListEmails successfully', function(done) {
        //uncomment below and update the code to test userListEmails
        //instance.userListEmails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListFollowers', function() {
      it('should call userListFollowers successfully', function(done) {
        //uncomment below and update the code to test userListFollowers
        //instance.userListFollowers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListFollowing', function() {
      it('should call userListFollowing successfully', function(done) {
        //uncomment below and update the code to test userListFollowing
        //instance.userListFollowing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListGPGKeys', function() {
      it('should call userListGPGKeys successfully', function(done) {
        //uncomment below and update the code to test userListGPGKeys
        //instance.userListGPGKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListHooks', function() {
      it('should call userListHooks successfully', function(done) {
        //uncomment below and update the code to test userListHooks
        //instance.userListHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListKeys', function() {
      it('should call userListKeys successfully', function(done) {
        //uncomment below and update the code to test userListKeys
        //instance.userListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListRepos', function() {
      it('should call userListRepos successfully', function(done) {
        //uncomment below and update the code to test userListRepos
        //instance.userListRepos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListStarred', function() {
      it('should call userListStarred successfully', function(done) {
        //uncomment below and update the code to test userListStarred
        //instance.userListStarred(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListSubscriptions', function() {
      it('should call userListSubscriptions successfully', function(done) {
        //uncomment below and update the code to test userListSubscriptions
        //instance.userListSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListTeams', function() {
      it('should call userListTeams successfully', function(done) {
        //uncomment below and update the code to test userListTeams
        //instance.userListTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSearch', function() {
      it('should call userSearch successfully', function(done) {
        //uncomment below and update the code to test userSearch
        //instance.userSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUpdateOAuth2Application', function() {
      it('should call userUpdateOAuth2Application successfully', function(done) {
        //uncomment below and update the code to test userUpdateOAuth2Application
        //instance.userUpdateOAuth2Application(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userVerifyGPGKey', function() {
      it('should call userVerifyGPGKey successfully', function(done) {
        //uncomment below and update the code to test userVerifyGPGKey
        //instance.userVerifyGPGKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
