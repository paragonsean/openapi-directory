/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiteaApi);
  }
}(this, function(expect, GiteaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiteaApi.RepositoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RepositoryApi', function() {
    describe('acceptRepoTransfer', function() {
      it('should call acceptRepoTransfer successfully', function(done) {
        //uncomment below and update the code to test acceptRepoTransfer
        //instance.acceptRepoTransfer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCurrentUserRepo', function() {
      it('should call createCurrentUserRepo successfully', function(done) {
        //uncomment below and update the code to test createCurrentUserRepo
        //instance.createCurrentUserRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFork', function() {
      it('should call createFork successfully', function(done) {
        //uncomment below and update the code to test createFork
        //instance.createFork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateRepo', function() {
      it('should call generateRepo successfully', function(done) {
        //uncomment below and update the code to test generateRepo
        //instance.generateRepo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnnotatedTag', function() {
      it('should call getAnnotatedTag successfully', function(done) {
        //uncomment below and update the code to test getAnnotatedTag
        //instance.getAnnotatedTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBlob', function() {
      it('should call getBlob successfully', function(done) {
        //uncomment below and update the code to test getBlob
        //instance.getBlob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTree', function() {
      it('should call getTree successfully', function(done) {
        //uncomment below and update the code to test getTree
        //instance.getTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listForks', function() {
      it('should call listForks successfully', function(done) {
        //uncomment below and update the code to test listForks
        //instance.listForks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectRepoTransfer', function() {
      it('should call rejectRepoTransfer successfully', function(done) {
        //uncomment below and update the code to test rejectRepoTransfer
        //instance.rejectRepoTransfer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoAddCollaborator', function() {
      it('should call repoAddCollaborator successfully', function(done) {
        //uncomment below and update the code to test repoAddCollaborator
        //instance.repoAddCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoAddPushMirror', function() {
      it('should call repoAddPushMirror successfully', function(done) {
        //uncomment below and update the code to test repoAddPushMirror
        //instance.repoAddPushMirror(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoAddTeam', function() {
      it('should call repoAddTeam successfully', function(done) {
        //uncomment below and update the code to test repoAddTeam
        //instance.repoAddTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoAddTopic', function() {
      it('should call repoAddTopic successfully', function(done) {
        //uncomment below and update the code to test repoAddTopic
        //instance.repoAddTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoApplyDiffPatch', function() {
      it('should call repoApplyDiffPatch successfully', function(done) {
        //uncomment below and update the code to test repoApplyDiffPatch
        //instance.repoApplyDiffPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCancelScheduledAutoMerge', function() {
      it('should call repoCancelScheduledAutoMerge successfully', function(done) {
        //uncomment below and update the code to test repoCancelScheduledAutoMerge
        //instance.repoCancelScheduledAutoMerge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCheckCollaborator', function() {
      it('should call repoCheckCollaborator successfully', function(done) {
        //uncomment below and update the code to test repoCheckCollaborator
        //instance.repoCheckCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCheckTeam', function() {
      it('should call repoCheckTeam successfully', function(done) {
        //uncomment below and update the code to test repoCheckTeam
        //instance.repoCheckTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateBranch', function() {
      it('should call repoCreateBranch successfully', function(done) {
        //uncomment below and update the code to test repoCreateBranch
        //instance.repoCreateBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateBranchProtection', function() {
      it('should call repoCreateBranchProtection successfully', function(done) {
        //uncomment below and update the code to test repoCreateBranchProtection
        //instance.repoCreateBranchProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateFile', function() {
      it('should call repoCreateFile successfully', function(done) {
        //uncomment below and update the code to test repoCreateFile
        //instance.repoCreateFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateHook', function() {
      it('should call repoCreateHook successfully', function(done) {
        //uncomment below and update the code to test repoCreateHook
        //instance.repoCreateHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateKey', function() {
      it('should call repoCreateKey successfully', function(done) {
        //uncomment below and update the code to test repoCreateKey
        //instance.repoCreateKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreatePullRequest', function() {
      it('should call repoCreatePullRequest successfully', function(done) {
        //uncomment below and update the code to test repoCreatePullRequest
        //instance.repoCreatePullRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreatePullReview', function() {
      it('should call repoCreatePullReview successfully', function(done) {
        //uncomment below and update the code to test repoCreatePullReview
        //instance.repoCreatePullReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreatePullReviewRequests', function() {
      it('should call repoCreatePullReviewRequests successfully', function(done) {
        //uncomment below and update the code to test repoCreatePullReviewRequests
        //instance.repoCreatePullReviewRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateRelease', function() {
      it('should call repoCreateRelease successfully', function(done) {
        //uncomment below and update the code to test repoCreateRelease
        //instance.repoCreateRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateReleaseAttachment', function() {
      it('should call repoCreateReleaseAttachment successfully', function(done) {
        //uncomment below and update the code to test repoCreateReleaseAttachment
        //instance.repoCreateReleaseAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateStatus', function() {
      it('should call repoCreateStatus successfully', function(done) {
        //uncomment below and update the code to test repoCreateStatus
        //instance.repoCreateStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateTag', function() {
      it('should call repoCreateTag successfully', function(done) {
        //uncomment below and update the code to test repoCreateTag
        //instance.repoCreateTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoCreateWikiPage', function() {
      it('should call repoCreateWikiPage successfully', function(done) {
        //uncomment below and update the code to test repoCreateWikiPage
        //instance.repoCreateWikiPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDelete', function() {
      it('should call repoDelete successfully', function(done) {
        //uncomment below and update the code to test repoDelete
        //instance.repoDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteBranch', function() {
      it('should call repoDeleteBranch successfully', function(done) {
        //uncomment below and update the code to test repoDeleteBranch
        //instance.repoDeleteBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteBranchProtection', function() {
      it('should call repoDeleteBranchProtection successfully', function(done) {
        //uncomment below and update the code to test repoDeleteBranchProtection
        //instance.repoDeleteBranchProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteCollaborator', function() {
      it('should call repoDeleteCollaborator successfully', function(done) {
        //uncomment below and update the code to test repoDeleteCollaborator
        //instance.repoDeleteCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteFile', function() {
      it('should call repoDeleteFile successfully', function(done) {
        //uncomment below and update the code to test repoDeleteFile
        //instance.repoDeleteFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteGitHook', function() {
      it('should call repoDeleteGitHook successfully', function(done) {
        //uncomment below and update the code to test repoDeleteGitHook
        //instance.repoDeleteGitHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteHook', function() {
      it('should call repoDeleteHook successfully', function(done) {
        //uncomment below and update the code to test repoDeleteHook
        //instance.repoDeleteHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteKey', function() {
      it('should call repoDeleteKey successfully', function(done) {
        //uncomment below and update the code to test repoDeleteKey
        //instance.repoDeleteKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeletePullReview', function() {
      it('should call repoDeletePullReview successfully', function(done) {
        //uncomment below and update the code to test repoDeletePullReview
        //instance.repoDeletePullReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeletePullReviewRequests', function() {
      it('should call repoDeletePullReviewRequests successfully', function(done) {
        //uncomment below and update the code to test repoDeletePullReviewRequests
        //instance.repoDeletePullReviewRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeletePushMirror', function() {
      it('should call repoDeletePushMirror successfully', function(done) {
        //uncomment below and update the code to test repoDeletePushMirror
        //instance.repoDeletePushMirror(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteRelease', function() {
      it('should call repoDeleteRelease successfully', function(done) {
        //uncomment below and update the code to test repoDeleteRelease
        //instance.repoDeleteRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteReleaseAttachment', function() {
      it('should call repoDeleteReleaseAttachment successfully', function(done) {
        //uncomment below and update the code to test repoDeleteReleaseAttachment
        //instance.repoDeleteReleaseAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteReleaseByTag', function() {
      it('should call repoDeleteReleaseByTag successfully', function(done) {
        //uncomment below and update the code to test repoDeleteReleaseByTag
        //instance.repoDeleteReleaseByTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteTag', function() {
      it('should call repoDeleteTag successfully', function(done) {
        //uncomment below and update the code to test repoDeleteTag
        //instance.repoDeleteTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteTeam', function() {
      it('should call repoDeleteTeam successfully', function(done) {
        //uncomment below and update the code to test repoDeleteTeam
        //instance.repoDeleteTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteTopic', function() {
      it('should call repoDeleteTopic successfully', function(done) {
        //uncomment below and update the code to test repoDeleteTopic
        //instance.repoDeleteTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDeleteWikiPage', function() {
      it('should call repoDeleteWikiPage successfully', function(done) {
        //uncomment below and update the code to test repoDeleteWikiPage
        //instance.repoDeleteWikiPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDismissPullReview', function() {
      it('should call repoDismissPullReview successfully', function(done) {
        //uncomment below and update the code to test repoDismissPullReview
        //instance.repoDismissPullReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDownloadCommitDiffOrPatch', function() {
      it('should call repoDownloadCommitDiffOrPatch successfully', function(done) {
        //uncomment below and update the code to test repoDownloadCommitDiffOrPatch
        //instance.repoDownloadCommitDiffOrPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoDownloadPullDiffOrPatch', function() {
      it('should call repoDownloadPullDiffOrPatch successfully', function(done) {
        //uncomment below and update the code to test repoDownloadPullDiffOrPatch
        //instance.repoDownloadPullDiffOrPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEdit', function() {
      it('should call repoEdit successfully', function(done) {
        //uncomment below and update the code to test repoEdit
        //instance.repoEdit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditBranchProtection', function() {
      it('should call repoEditBranchProtection successfully', function(done) {
        //uncomment below and update the code to test repoEditBranchProtection
        //instance.repoEditBranchProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditGitHook', function() {
      it('should call repoEditGitHook successfully', function(done) {
        //uncomment below and update the code to test repoEditGitHook
        //instance.repoEditGitHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditHook', function() {
      it('should call repoEditHook successfully', function(done) {
        //uncomment below and update the code to test repoEditHook
        //instance.repoEditHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditPullRequest', function() {
      it('should call repoEditPullRequest successfully', function(done) {
        //uncomment below and update the code to test repoEditPullRequest
        //instance.repoEditPullRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditRelease', function() {
      it('should call repoEditRelease successfully', function(done) {
        //uncomment below and update the code to test repoEditRelease
        //instance.repoEditRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditReleaseAttachment', function() {
      it('should call repoEditReleaseAttachment successfully', function(done) {
        //uncomment below and update the code to test repoEditReleaseAttachment
        //instance.repoEditReleaseAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoEditWikiPage', function() {
      it('should call repoEditWikiPage successfully', function(done) {
        //uncomment below and update the code to test repoEditWikiPage
        //instance.repoEditWikiPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGet', function() {
      it('should call repoGet successfully', function(done) {
        //uncomment below and update the code to test repoGet
        //instance.repoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetAllCommits', function() {
      it('should call repoGetAllCommits successfully', function(done) {
        //uncomment below and update the code to test repoGetAllCommits
        //instance.repoGetAllCommits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetArchive', function() {
      it('should call repoGetArchive successfully', function(done) {
        //uncomment below and update the code to test repoGetArchive
        //instance.repoGetArchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetAssignees', function() {
      it('should call repoGetAssignees successfully', function(done) {
        //uncomment below and update the code to test repoGetAssignees
        //instance.repoGetAssignees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetBranch', function() {
      it('should call repoGetBranch successfully', function(done) {
        //uncomment below and update the code to test repoGetBranch
        //instance.repoGetBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetBranchProtection', function() {
      it('should call repoGetBranchProtection successfully', function(done) {
        //uncomment below and update the code to test repoGetBranchProtection
        //instance.repoGetBranchProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetByID', function() {
      it('should call repoGetByID successfully', function(done) {
        //uncomment below and update the code to test repoGetByID
        //instance.repoGetByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetCombinedStatusByRef', function() {
      it('should call repoGetCombinedStatusByRef successfully', function(done) {
        //uncomment below and update the code to test repoGetCombinedStatusByRef
        //instance.repoGetCombinedStatusByRef(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetContents', function() {
      it('should call repoGetContents successfully', function(done) {
        //uncomment below and update the code to test repoGetContents
        //instance.repoGetContents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetContentsList', function() {
      it('should call repoGetContentsList successfully', function(done) {
        //uncomment below and update the code to test repoGetContentsList
        //instance.repoGetContentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetEditorConfig', function() {
      it('should call repoGetEditorConfig successfully', function(done) {
        //uncomment below and update the code to test repoGetEditorConfig
        //instance.repoGetEditorConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetGitHook', function() {
      it('should call repoGetGitHook successfully', function(done) {
        //uncomment below and update the code to test repoGetGitHook
        //instance.repoGetGitHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetHook', function() {
      it('should call repoGetHook successfully', function(done) {
        //uncomment below and update the code to test repoGetHook
        //instance.repoGetHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetIssueConfig', function() {
      it('should call repoGetIssueConfig successfully', function(done) {
        //uncomment below and update the code to test repoGetIssueConfig
        //instance.repoGetIssueConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetIssueTemplates', function() {
      it('should call repoGetIssueTemplates successfully', function(done) {
        //uncomment below and update the code to test repoGetIssueTemplates
        //instance.repoGetIssueTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetKey', function() {
      it('should call repoGetKey successfully', function(done) {
        //uncomment below and update the code to test repoGetKey
        //instance.repoGetKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetLanguages', function() {
      it('should call repoGetLanguages successfully', function(done) {
        //uncomment below and update the code to test repoGetLanguages
        //instance.repoGetLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetLatestRelease', function() {
      it('should call repoGetLatestRelease successfully', function(done) {
        //uncomment below and update the code to test repoGetLatestRelease
        //instance.repoGetLatestRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetNote', function() {
      it('should call repoGetNote successfully', function(done) {
        //uncomment below and update the code to test repoGetNote
        //instance.repoGetNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetPullRequest', function() {
      it('should call repoGetPullRequest successfully', function(done) {
        //uncomment below and update the code to test repoGetPullRequest
        //instance.repoGetPullRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetPullRequestCommits', function() {
      it('should call repoGetPullRequestCommits successfully', function(done) {
        //uncomment below and update the code to test repoGetPullRequestCommits
        //instance.repoGetPullRequestCommits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetPullRequestFiles', function() {
      it('should call repoGetPullRequestFiles successfully', function(done) {
        //uncomment below and update the code to test repoGetPullRequestFiles
        //instance.repoGetPullRequestFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetPullReview', function() {
      it('should call repoGetPullReview successfully', function(done) {
        //uncomment below and update the code to test repoGetPullReview
        //instance.repoGetPullReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetPullReviewComments', function() {
      it('should call repoGetPullReviewComments successfully', function(done) {
        //uncomment below and update the code to test repoGetPullReviewComments
        //instance.repoGetPullReviewComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetPushMirrorByRemoteName', function() {
      it('should call repoGetPushMirrorByRemoteName successfully', function(done) {
        //uncomment below and update the code to test repoGetPushMirrorByRemoteName
        //instance.repoGetPushMirrorByRemoteName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetRawFile', function() {
      it('should call repoGetRawFile successfully', function(done) {
        //uncomment below and update the code to test repoGetRawFile
        //instance.repoGetRawFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetRawFileOrLFS', function() {
      it('should call repoGetRawFileOrLFS successfully', function(done) {
        //uncomment below and update the code to test repoGetRawFileOrLFS
        //instance.repoGetRawFileOrLFS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetRelease', function() {
      it('should call repoGetRelease successfully', function(done) {
        //uncomment below and update the code to test repoGetRelease
        //instance.repoGetRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetReleaseAttachment', function() {
      it('should call repoGetReleaseAttachment successfully', function(done) {
        //uncomment below and update the code to test repoGetReleaseAttachment
        //instance.repoGetReleaseAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetReleaseByTag', function() {
      it('should call repoGetReleaseByTag successfully', function(done) {
        //uncomment below and update the code to test repoGetReleaseByTag
        //instance.repoGetReleaseByTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetRepoPermissions', function() {
      it('should call repoGetRepoPermissions successfully', function(done) {
        //uncomment below and update the code to test repoGetRepoPermissions
        //instance.repoGetRepoPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetReviewers', function() {
      it('should call repoGetReviewers successfully', function(done) {
        //uncomment below and update the code to test repoGetReviewers
        //instance.repoGetReviewers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetSingleCommit', function() {
      it('should call repoGetSingleCommit successfully', function(done) {
        //uncomment below and update the code to test repoGetSingleCommit
        //instance.repoGetSingleCommit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetTag', function() {
      it('should call repoGetTag successfully', function(done) {
        //uncomment below and update the code to test repoGetTag
        //instance.repoGetTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetWikiPage', function() {
      it('should call repoGetWikiPage successfully', function(done) {
        //uncomment below and update the code to test repoGetWikiPage
        //instance.repoGetWikiPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetWikiPageRevisions', function() {
      it('should call repoGetWikiPageRevisions successfully', function(done) {
        //uncomment below and update the code to test repoGetWikiPageRevisions
        //instance.repoGetWikiPageRevisions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoGetWikiPages', function() {
      it('should call repoGetWikiPages successfully', function(done) {
        //uncomment below and update the code to test repoGetWikiPages
        //instance.repoGetWikiPages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListActivityFeeds', function() {
      it('should call repoListActivityFeeds successfully', function(done) {
        //uncomment below and update the code to test repoListActivityFeeds
        //instance.repoListActivityFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListAllGitRefs', function() {
      it('should call repoListAllGitRefs successfully', function(done) {
        //uncomment below and update the code to test repoListAllGitRefs
        //instance.repoListAllGitRefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListBranchProtection', function() {
      it('should call repoListBranchProtection successfully', function(done) {
        //uncomment below and update the code to test repoListBranchProtection
        //instance.repoListBranchProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListBranches', function() {
      it('should call repoListBranches successfully', function(done) {
        //uncomment below and update the code to test repoListBranches
        //instance.repoListBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListCollaborators', function() {
      it('should call repoListCollaborators successfully', function(done) {
        //uncomment below and update the code to test repoListCollaborators
        //instance.repoListCollaborators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListGitHooks', function() {
      it('should call repoListGitHooks successfully', function(done) {
        //uncomment below and update the code to test repoListGitHooks
        //instance.repoListGitHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListGitRefs', function() {
      it('should call repoListGitRefs successfully', function(done) {
        //uncomment below and update the code to test repoListGitRefs
        //instance.repoListGitRefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListHooks', function() {
      it('should call repoListHooks successfully', function(done) {
        //uncomment below and update the code to test repoListHooks
        //instance.repoListHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListKeys', function() {
      it('should call repoListKeys successfully', function(done) {
        //uncomment below and update the code to test repoListKeys
        //instance.repoListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListPullRequests', function() {
      it('should call repoListPullRequests successfully', function(done) {
        //uncomment below and update the code to test repoListPullRequests
        //instance.repoListPullRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListPullReviews', function() {
      it('should call repoListPullReviews successfully', function(done) {
        //uncomment below and update the code to test repoListPullReviews
        //instance.repoListPullReviews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListPushMirrors', function() {
      it('should call repoListPushMirrors successfully', function(done) {
        //uncomment below and update the code to test repoListPushMirrors
        //instance.repoListPushMirrors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListReleaseAttachments', function() {
      it('should call repoListReleaseAttachments successfully', function(done) {
        //uncomment below and update the code to test repoListReleaseAttachments
        //instance.repoListReleaseAttachments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListReleases', function() {
      it('should call repoListReleases successfully', function(done) {
        //uncomment below and update the code to test repoListReleases
        //instance.repoListReleases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListStargazers', function() {
      it('should call repoListStargazers successfully', function(done) {
        //uncomment below and update the code to test repoListStargazers
        //instance.repoListStargazers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListStatuses', function() {
      it('should call repoListStatuses successfully', function(done) {
        //uncomment below and update the code to test repoListStatuses
        //instance.repoListStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListStatusesByRef', function() {
      it('should call repoListStatusesByRef successfully', function(done) {
        //uncomment below and update the code to test repoListStatusesByRef
        //instance.repoListStatusesByRef(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListSubscribers', function() {
      it('should call repoListSubscribers successfully', function(done) {
        //uncomment below and update the code to test repoListSubscribers
        //instance.repoListSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListTags', function() {
      it('should call repoListTags successfully', function(done) {
        //uncomment below and update the code to test repoListTags
        //instance.repoListTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListTeams', function() {
      it('should call repoListTeams successfully', function(done) {
        //uncomment below and update the code to test repoListTeams
        //instance.repoListTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoListTopics', function() {
      it('should call repoListTopics successfully', function(done) {
        //uncomment below and update the code to test repoListTopics
        //instance.repoListTopics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoMergePullRequest', function() {
      it('should call repoMergePullRequest successfully', function(done) {
        //uncomment below and update the code to test repoMergePullRequest
        //instance.repoMergePullRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoMigrate', function() {
      it('should call repoMigrate successfully', function(done) {
        //uncomment below and update the code to test repoMigrate
        //instance.repoMigrate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoMirrorSync', function() {
      it('should call repoMirrorSync successfully', function(done) {
        //uncomment below and update the code to test repoMirrorSync
        //instance.repoMirrorSync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoPullRequestIsMerged', function() {
      it('should call repoPullRequestIsMerged successfully', function(done) {
        //uncomment below and update the code to test repoPullRequestIsMerged
        //instance.repoPullRequestIsMerged(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoPushMirrorSync', function() {
      it('should call repoPushMirrorSync successfully', function(done) {
        //uncomment below and update the code to test repoPushMirrorSync
        //instance.repoPushMirrorSync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoSearch', function() {
      it('should call repoSearch successfully', function(done) {
        //uncomment below and update the code to test repoSearch
        //instance.repoSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoSigningKey', function() {
      it('should call repoSigningKey successfully', function(done) {
        //uncomment below and update the code to test repoSigningKey
        //instance.repoSigningKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoSubmitPullReview', function() {
      it('should call repoSubmitPullReview successfully', function(done) {
        //uncomment below and update the code to test repoSubmitPullReview
        //instance.repoSubmitPullReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoTestHook', function() {
      it('should call repoTestHook successfully', function(done) {
        //uncomment below and update the code to test repoTestHook
        //instance.repoTestHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoTrackedTimes', function() {
      it('should call repoTrackedTimes successfully', function(done) {
        //uncomment below and update the code to test repoTrackedTimes
        //instance.repoTrackedTimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoTransfer', function() {
      it('should call repoTransfer successfully', function(done) {
        //uncomment below and update the code to test repoTransfer
        //instance.repoTransfer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoUnDismissPullReview', function() {
      it('should call repoUnDismissPullReview successfully', function(done) {
        //uncomment below and update the code to test repoUnDismissPullReview
        //instance.repoUnDismissPullReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoUpdateFile', function() {
      it('should call repoUpdateFile successfully', function(done) {
        //uncomment below and update the code to test repoUpdateFile
        //instance.repoUpdateFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoUpdatePullRequest', function() {
      it('should call repoUpdatePullRequest successfully', function(done) {
        //uncomment below and update the code to test repoUpdatePullRequest
        //instance.repoUpdatePullRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoUpdateTopics', function() {
      it('should call repoUpdateTopics successfully', function(done) {
        //uncomment below and update the code to test repoUpdateTopics
        //instance.repoUpdateTopics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repoValidateIssueConfig', function() {
      it('should call repoValidateIssueConfig successfully', function(done) {
        //uncomment below and update the code to test repoValidateIssueConfig
        //instance.repoValidateIssueConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('topicSearch', function() {
      it('should call topicSearch successfully', function(done) {
        //uncomment below and update the code to test topicSearch
        //instance.topicSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentCheckSubscription', function() {
      it('should call userCurrentCheckSubscription successfully', function(done) {
        //uncomment below and update the code to test userCurrentCheckSubscription
        //instance.userCurrentCheckSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentDeleteSubscription', function() {
      it('should call userCurrentDeleteSubscription successfully', function(done) {
        //uncomment below and update the code to test userCurrentDeleteSubscription
        //instance.userCurrentDeleteSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCurrentPutSubscription', function() {
      it('should call userCurrentPutSubscription successfully', function(done) {
        //uncomment below and update the code to test userCurrentPutSubscription
        //instance.userCurrentPutSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userTrackedTimes', function() {
      it('should call userTrackedTimes successfully', function(done) {
        //uncomment below and update the code to test userTrackedTimes
        //instance.userTrackedTimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
