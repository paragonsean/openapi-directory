/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiteaApi);
  }
}(this, function(expect, GiteaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiteaApi.PullReview();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PullReview', function() {
    it('should create an instance of PullReview', function() {
      // uncomment below and update the code to test PullReview
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be.a(GiteaApi.PullReview);
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property commentsCount (base name: "comments_count")', function() {
      // uncomment below and update the code to test the property commentsCount
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property commitId (base name: "commit_id")', function() {
      // uncomment below and update the code to test the property commitId
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property dismissed (base name: "dismissed")', function() {
      // uncomment below and update the code to test the property dismissed
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property htmlUrl (base name: "html_url")', function() {
      // uncomment below and update the code to test the property htmlUrl
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property official (base name: "official")', function() {
      // uncomment below and update the code to test the property official
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property pullRequestUrl (base name: "pull_request_url")', function() {
      // uncomment below and update the code to test the property pullRequestUrl
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property stale (base name: "stale")', function() {
      // uncomment below and update the code to test the property stale
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property submittedAt (base name: "submitted_at")', function() {
      // uncomment below and update the code to test the property submittedAt
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new GiteaApi.PullReview();
      //expect(instance).to.be();
    });

  });

}));
