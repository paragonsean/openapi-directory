/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPushMirror.h
 *
 * PushMirror represents information of a push mirror
 */

#ifndef OAIPushMirror_H
#define OAIPushMirror_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPushMirror : public OAIObject {
public:
    OAIPushMirror();
    OAIPushMirror(QString json);
    ~OAIPushMirror() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getLastError() const;
    void setLastError(const QString &last_error);
    bool is_last_error_Set() const;
    bool is_last_error_Valid() const;

    QString getLastUpdate() const;
    void setLastUpdate(const QString &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    QString getRemoteAddress() const;
    void setRemoteAddress(const QString &remote_address);
    bool is_remote_address_Set() const;
    bool is_remote_address_Valid() const;

    QString getRemoteName() const;
    void setRemoteName(const QString &remote_name);
    bool is_remote_name_Set() const;
    bool is_remote_name_Valid() const;

    QString getRepoName() const;
    void setRepoName(const QString &repo_name);
    bool is_repo_name_Set() const;
    bool is_repo_name_Valid() const;

    bool isSyncOnCommit() const;
    void setSyncOnCommit(const bool &sync_on_commit);
    bool is_sync_on_commit_Set() const;
    bool is_sync_on_commit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_last_error;
    bool m_last_error_isSet;
    bool m_last_error_isValid;

    QString m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    QString m_remote_address;
    bool m_remote_address_isSet;
    bool m_remote_address_isValid;

    QString m_remote_name;
    bool m_remote_name_isSet;
    bool m_remote_name_isValid;

    QString m_repo_name;
    bool m_repo_name_isSet;
    bool m_repo_name_isValid;

    bool m_sync_on_commit;
    bool m_sync_on_commit_isSet;
    bool m_sync_on_commit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPushMirror)

#endif // OAIPushMirror_H
