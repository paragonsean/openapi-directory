/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam.h
 *
 * Team represents a team in an organization
 */

#ifndef OAITeam_H
#define OAITeam_H

#include <QJsonObject>

#include "OAIOrganization.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrganization;

class OAITeam : public OAIObject {
public:
    OAITeam();
    OAITeam(QString json);
    ~OAITeam() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanCreateOrgRepo() const;
    void setCanCreateOrgRepo(const bool &can_create_org_repo);
    bool is_can_create_org_repo_Set() const;
    bool is_can_create_org_repo_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIncludesAllRepositories() const;
    void setIncludesAllRepositories(const bool &includes_all_repositories);
    bool is_includes_all_repositories_Set() const;
    bool is_includes_all_repositories_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOrganization getOrganization() const;
    void setOrganization(const OAIOrganization &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QString getPermission() const;
    void setPermission(const QString &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    QList<QString> getUnits() const;
    void setUnits(const QList<QString> &units);
    bool is_units_Set() const;
    bool is_units_Valid() const;

    QMap<QString, QString> getUnitsMap() const;
    void setUnitsMap(const QMap<QString, QString> &units_map);
    bool is_units_map_Set() const;
    bool is_units_map_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_create_org_repo;
    bool m_can_create_org_repo_isSet;
    bool m_can_create_org_repo_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_includes_all_repositories;
    bool m_includes_all_repositories_isSet;
    bool m_includes_all_repositories_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOrganization m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QString m_permission;
    bool m_permission_isSet;
    bool m_permission_isValid;

    QList<QString> m_units;
    bool m_units_isSet;
    bool m_units_isValid;

    QMap<QString, QString> m_units_map;
    bool m_units_map_isSet;
    bool m_units_map_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam)

#endif // OAITeam_H
