/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodeInfoServices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodeInfoServices::OAINodeInfoServices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodeInfoServices::OAINodeInfoServices() {
    this->initializeModel();
}

OAINodeInfoServices::~OAINodeInfoServices() {}

void OAINodeInfoServices::initializeModel() {

    m_inbound_isSet = false;
    m_inbound_isValid = false;

    m_outbound_isSet = false;
    m_outbound_isValid = false;
}

void OAINodeInfoServices::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodeInfoServices::fromJsonObject(QJsonObject json) {

    m_inbound_isValid = ::OpenAPI::fromJsonValue(m_inbound, json[QString("inbound")]);
    m_inbound_isSet = !json[QString("inbound")].isNull() && m_inbound_isValid;

    m_outbound_isValid = ::OpenAPI::fromJsonValue(m_outbound, json[QString("outbound")]);
    m_outbound_isSet = !json[QString("outbound")].isNull() && m_outbound_isValid;
}

QString OAINodeInfoServices::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodeInfoServices::asJsonObject() const {
    QJsonObject obj;
    if (m_inbound.size() > 0) {
        obj.insert(QString("inbound"), ::OpenAPI::toJsonValue(m_inbound));
    }
    if (m_outbound.size() > 0) {
        obj.insert(QString("outbound"), ::OpenAPI::toJsonValue(m_outbound));
    }
    return obj;
}

QList<QString> OAINodeInfoServices::getInbound() const {
    return m_inbound;
}
void OAINodeInfoServices::setInbound(const QList<QString> &inbound) {
    m_inbound = inbound;
    m_inbound_isSet = true;
}

bool OAINodeInfoServices::is_inbound_Set() const{
    return m_inbound_isSet;
}

bool OAINodeInfoServices::is_inbound_Valid() const{
    return m_inbound_isValid;
}

QList<QString> OAINodeInfoServices::getOutbound() const {
    return m_outbound;
}
void OAINodeInfoServices::setOutbound(const QList<QString> &outbound) {
    m_outbound = outbound;
    m_outbound_isSet = true;
}

bool OAINodeInfoServices::is_outbound_Set() const{
    return m_outbound_isSet;
}

bool OAINodeInfoServices::is_outbound_Valid() const{
    return m_outbound_isValid;
}

bool OAINodeInfoServices::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inbound.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodeInfoServices::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
