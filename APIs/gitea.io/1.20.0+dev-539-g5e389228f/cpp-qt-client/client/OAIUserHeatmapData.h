/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserHeatmapData.h
 *
 * UserHeatmapData represents the data needed to create a heatmap
 */

#ifndef OAIUserHeatmapData_H
#define OAIUserHeatmapData_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserHeatmapData : public OAIObject {
public:
    OAIUserHeatmapData();
    OAIUserHeatmapData(QString json);
    ~OAIUserHeatmapData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getContributions() const;
    void setContributions(const qint64 &contributions);
    bool is_contributions_Set() const;
    bool is_contributions_Valid() const;

    qint64 getTimestamp() const;
    void setTimestamp(const qint64 &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_contributions;
    bool m_contributions_isSet;
    bool m_contributions_isValid;

    qint64 m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserHeatmapData)

#endif // OAIUserHeatmapData_H
