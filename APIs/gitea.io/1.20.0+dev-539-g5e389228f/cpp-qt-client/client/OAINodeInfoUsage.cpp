/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodeInfoUsage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodeInfoUsage::OAINodeInfoUsage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodeInfoUsage::OAINodeInfoUsage() {
    this->initializeModel();
}

OAINodeInfoUsage::~OAINodeInfoUsage() {}

void OAINodeInfoUsage::initializeModel() {

    m_local_comments_isSet = false;
    m_local_comments_isValid = false;

    m_local_posts_isSet = false;
    m_local_posts_isValid = false;

    m_users_isSet = false;
    m_users_isValid = false;
}

void OAINodeInfoUsage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodeInfoUsage::fromJsonObject(QJsonObject json) {

    m_local_comments_isValid = ::OpenAPI::fromJsonValue(m_local_comments, json[QString("localComments")]);
    m_local_comments_isSet = !json[QString("localComments")].isNull() && m_local_comments_isValid;

    m_local_posts_isValid = ::OpenAPI::fromJsonValue(m_local_posts, json[QString("localPosts")]);
    m_local_posts_isSet = !json[QString("localPosts")].isNull() && m_local_posts_isValid;

    m_users_isValid = ::OpenAPI::fromJsonValue(m_users, json[QString("users")]);
    m_users_isSet = !json[QString("users")].isNull() && m_users_isValid;
}

QString OAINodeInfoUsage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodeInfoUsage::asJsonObject() const {
    QJsonObject obj;
    if (m_local_comments_isSet) {
        obj.insert(QString("localComments"), ::OpenAPI::toJsonValue(m_local_comments));
    }
    if (m_local_posts_isSet) {
        obj.insert(QString("localPosts"), ::OpenAPI::toJsonValue(m_local_posts));
    }
    if (m_users.isSet()) {
        obj.insert(QString("users"), ::OpenAPI::toJsonValue(m_users));
    }
    return obj;
}

qint64 OAINodeInfoUsage::getLocalComments() const {
    return m_local_comments;
}
void OAINodeInfoUsage::setLocalComments(const qint64 &local_comments) {
    m_local_comments = local_comments;
    m_local_comments_isSet = true;
}

bool OAINodeInfoUsage::is_local_comments_Set() const{
    return m_local_comments_isSet;
}

bool OAINodeInfoUsage::is_local_comments_Valid() const{
    return m_local_comments_isValid;
}

qint64 OAINodeInfoUsage::getLocalPosts() const {
    return m_local_posts;
}
void OAINodeInfoUsage::setLocalPosts(const qint64 &local_posts) {
    m_local_posts = local_posts;
    m_local_posts_isSet = true;
}

bool OAINodeInfoUsage::is_local_posts_Set() const{
    return m_local_posts_isSet;
}

bool OAINodeInfoUsage::is_local_posts_Valid() const{
    return m_local_posts_isValid;
}

OAINodeInfoUsageUsers OAINodeInfoUsage::getUsers() const {
    return m_users;
}
void OAINodeInfoUsage::setUsers(const OAINodeInfoUsageUsers &users) {
    m_users = users;
    m_users_isSet = true;
}

bool OAINodeInfoUsage::is_users_Set() const{
    return m_users_isSet;
}

bool OAINodeInfoUsage::is_users_Valid() const{
    return m_users_isValid;
}

bool OAINodeInfoUsage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_local_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_local_posts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_users.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodeInfoUsage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
