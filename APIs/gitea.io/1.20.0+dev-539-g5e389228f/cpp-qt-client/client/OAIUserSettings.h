/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserSettings.h
 *
 * UserSettings represents user settings
 */

#ifndef OAIUserSettings_H
#define OAIUserSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserSettings : public OAIObject {
public:
    OAIUserSettings();
    OAIUserSettings(QString json);
    ~OAIUserSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDiffViewStyle() const;
    void setDiffViewStyle(const QString &diff_view_style);
    bool is_diff_view_style_Set() const;
    bool is_diff_view_style_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    bool isHideActivity() const;
    void setHideActivity(const bool &hide_activity);
    bool is_hide_activity_Set() const;
    bool is_hide_activity_Valid() const;

    bool isHideEmail() const;
    void setHideEmail(const bool &hide_email);
    bool is_hide_email_Set() const;
    bool is_hide_email_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getTheme() const;
    void setTheme(const QString &theme);
    bool is_theme_Set() const;
    bool is_theme_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_diff_view_style;
    bool m_diff_view_style_isSet;
    bool m_diff_view_style_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    bool m_hide_activity;
    bool m_hide_activity_isSet;
    bool m_hide_activity_isValid;

    bool m_hide_email;
    bool m_hide_email_isSet;
    bool m_hide_email_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_theme;
    bool m_theme_isSet;
    bool m_theme_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserSettings)

#endif // OAIUserSettings_H
