/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimelineComment.h
 *
 * TimelineComment represents a timeline comment (comment of any type) on a commit or issue
 */

#ifndef OAITimelineComment_H
#define OAITimelineComment_H

#include <QJsonObject>

#include "OAIComment.h"
#include "OAIIssue.h"
#include "OAILabel.h"
#include "OAIMilestone.h"
#include "OAITeam.h"
#include "OAITrackedTime.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;
class OAITeam;
class OAIIssue;
class OAILabel;
class OAIMilestone;
class OAIComment;
class OAITrackedTime;

class OAITimelineComment : public OAIObject {
public:
    OAITimelineComment();
    OAITimelineComment(QString json);
    ~OAITimelineComment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUser getAssignee() const;
    void setAssignee(const OAIUser &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    OAITeam getAssigneeTeam() const;
    void setAssigneeTeam(const OAITeam &assignee_team);
    bool is_assignee_team_Set() const;
    bool is_assignee_team_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIIssue getDependentIssue() const;
    void setDependentIssue(const OAIIssue &dependent_issue);
    bool is_dependent_issue_Set() const;
    bool is_dependent_issue_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIssueUrl() const;
    void setIssueUrl(const QString &issue_url);
    bool is_issue_url_Set() const;
    bool is_issue_url_Valid() const;

    OAILabel getLabel() const;
    void setLabel(const OAILabel &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    OAIMilestone getMilestone() const;
    void setMilestone(const OAIMilestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    QString getNewRef() const;
    void setNewRef(const QString &new_ref);
    bool is_new_ref_Set() const;
    bool is_new_ref_Valid() const;

    QString getNewTitle() const;
    void setNewTitle(const QString &new_title);
    bool is_new_title_Set() const;
    bool is_new_title_Valid() const;

    OAIMilestone getOldMilestone() const;
    void setOldMilestone(const OAIMilestone &old_milestone);
    bool is_old_milestone_Set() const;
    bool is_old_milestone_Valid() const;

    qint64 getOldProjectId() const;
    void setOldProjectId(const qint64 &old_project_id);
    bool is_old_project_id_Set() const;
    bool is_old_project_id_Valid() const;

    QString getOldRef() const;
    void setOldRef(const QString &old_ref);
    bool is_old_ref_Set() const;
    bool is_old_ref_Valid() const;

    QString getOldTitle() const;
    void setOldTitle(const QString &old_title);
    bool is_old_title_Set() const;
    bool is_old_title_Valid() const;

    qint64 getProjectId() const;
    void setProjectId(const qint64 &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getPullRequestUrl() const;
    void setPullRequestUrl(const QString &pull_request_url);
    bool is_pull_request_url_Set() const;
    bool is_pull_request_url_Valid() const;

    QString getRefAction() const;
    void setRefAction(const QString &ref_action);
    bool is_ref_action_Set() const;
    bool is_ref_action_Valid() const;

    OAIComment getRefComment() const;
    void setRefComment(const OAIComment &ref_comment);
    bool is_ref_comment_Set() const;
    bool is_ref_comment_Valid() const;

    QString getRefCommitSha() const;
    void setRefCommitSha(const QString &ref_commit_sha);
    bool is_ref_commit_sha_Set() const;
    bool is_ref_commit_sha_Valid() const;

    OAIIssue getRefIssue() const;
    void setRefIssue(const OAIIssue &ref_issue);
    bool is_ref_issue_Set() const;
    bool is_ref_issue_Valid() const;

    bool isRemovedAssignee() const;
    void setRemovedAssignee(const bool &removed_assignee);
    bool is_removed_assignee_Set() const;
    bool is_removed_assignee_Valid() const;

    OAIUser getResolveDoer() const;
    void setResolveDoer(const OAIUser &resolve_doer);
    bool is_resolve_doer_Set() const;
    bool is_resolve_doer_Valid() const;

    qint64 getReviewId() const;
    void setReviewId(const qint64 &review_id);
    bool is_review_id_Set() const;
    bool is_review_id_Valid() const;

    OAITrackedTime getTrackedTime() const;
    void setTrackedTime(const OAITrackedTime &tracked_time);
    bool is_tracked_time_Set() const;
    bool is_tracked_time_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUser m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    OAITeam m_assignee_team;
    bool m_assignee_team_isSet;
    bool m_assignee_team_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIIssue m_dependent_issue;
    bool m_dependent_issue_isSet;
    bool m_dependent_issue_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_issue_url;
    bool m_issue_url_isSet;
    bool m_issue_url_isValid;

    OAILabel m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    OAIMilestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    QString m_new_ref;
    bool m_new_ref_isSet;
    bool m_new_ref_isValid;

    QString m_new_title;
    bool m_new_title_isSet;
    bool m_new_title_isValid;

    OAIMilestone m_old_milestone;
    bool m_old_milestone_isSet;
    bool m_old_milestone_isValid;

    qint64 m_old_project_id;
    bool m_old_project_id_isSet;
    bool m_old_project_id_isValid;

    QString m_old_ref;
    bool m_old_ref_isSet;
    bool m_old_ref_isValid;

    QString m_old_title;
    bool m_old_title_isSet;
    bool m_old_title_isValid;

    qint64 m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_pull_request_url;
    bool m_pull_request_url_isSet;
    bool m_pull_request_url_isValid;

    QString m_ref_action;
    bool m_ref_action_isSet;
    bool m_ref_action_isValid;

    OAIComment m_ref_comment;
    bool m_ref_comment_isSet;
    bool m_ref_comment_isValid;

    QString m_ref_commit_sha;
    bool m_ref_commit_sha_isSet;
    bool m_ref_commit_sha_isValid;

    OAIIssue m_ref_issue;
    bool m_ref_issue_isSet;
    bool m_ref_issue_isValid;

    bool m_removed_assignee;
    bool m_removed_assignee_isSet;
    bool m_removed_assignee_isValid;

    OAIUser m_resolve_doer;
    bool m_resolve_doer_isSet;
    bool m_resolve_doer_isValid;

    qint64 m_review_id;
    bool m_review_id_isSet;
    bool m_review_id_isValid;

    OAITrackedTime m_tracked_time;
    bool m_tracked_time_isSet;
    bool m_tracked_time_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimelineComment)

#endif // OAITimelineComment_H
