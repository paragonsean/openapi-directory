/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGitTreeResponse.h
 *
 * GitTreeResponse returns a git tree
 */

#ifndef OAIGitTreeResponse_H
#define OAIGitTreeResponse_H

#include <QJsonObject>

#include "OAIGitEntry.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGitEntry;

class OAIGitTreeResponse : public OAIObject {
public:
    OAIGitTreeResponse();
    OAIGitTreeResponse(QString json);
    ~OAIGitTreeResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getPage() const;
    void setPage(const qint64 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    qint64 getTotalCount() const;
    void setTotalCount(const qint64 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    QList<OAIGitEntry> getTree() const;
    void setTree(const QList<OAIGitEntry> &tree);
    bool is_tree_Set() const;
    bool is_tree_Valid() const;

    bool isTruncated() const;
    void setTruncated(const bool &truncated);
    bool is_truncated_Set() const;
    bool is_truncated_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    qint64 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;

    QList<OAIGitEntry> m_tree;
    bool m_tree_isSet;
    bool m_tree_isValid;

    bool m_truncated;
    bool m_truncated_isSet;
    bool m_truncated_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGitTreeResponse)

#endif // OAIGitTreeResponse_H
