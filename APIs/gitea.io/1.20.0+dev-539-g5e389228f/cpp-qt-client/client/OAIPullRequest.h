/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullRequest.h
 *
 * PullRequest represents a pull request
 */

#ifndef OAIPullRequest_H
#define OAIPullRequest_H

#include <QJsonObject>

#include "OAILabel.h"
#include "OAIMilestone.h"
#include "OAIPRBranchInfo.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;
class OAIPRBranchInfo;
class OAILabel;
class OAIMilestone;

class OAIPullRequest : public OAIObject {
public:
    OAIPullRequest();
    OAIPullRequest(QString json);
    ~OAIPullRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowMaintainerEdit() const;
    void setAllowMaintainerEdit(const bool &allow_maintainer_edit);
    bool is_allow_maintainer_edit_Set() const;
    bool is_allow_maintainer_edit_Valid() const;

    OAIUser getAssignee() const;
    void setAssignee(const OAIUser &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    QList<OAIUser> getAssignees() const;
    void setAssignees(const QList<OAIUser> &assignees);
    bool is_assignees_Set() const;
    bool is_assignees_Valid() const;

    OAIPRBranchInfo getBase() const;
    void setBase(const OAIPRBranchInfo &base);
    bool is_base_Set() const;
    bool is_base_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QDateTime getClosedAt() const;
    void setClosedAt(const QDateTime &closed_at);
    bool is_closed_at_Set() const;
    bool is_closed_at_Valid() const;

    qint64 getComments() const;
    void setComments(const qint64 &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDiffUrl() const;
    void setDiffUrl(const QString &diff_url);
    bool is_diff_url_Set() const;
    bool is_diff_url_Valid() const;

    QDateTime getDueDate() const;
    void setDueDate(const QDateTime &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    OAIPRBranchInfo getHead() const;
    void setHead(const OAIPRBranchInfo &head);
    bool is_head_Set() const;
    bool is_head_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsLocked() const;
    void setIsLocked(const bool &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    QList<OAILabel> getLabels() const;
    void setLabels(const QList<OAILabel> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getMergeBase() const;
    void setMergeBase(const QString &merge_base);
    bool is_merge_base_Set() const;
    bool is_merge_base_Valid() const;

    QString getMergeCommitSha() const;
    void setMergeCommitSha(const QString &merge_commit_sha);
    bool is_merge_commit_sha_Set() const;
    bool is_merge_commit_sha_Valid() const;

    bool isMergeable() const;
    void setMergeable(const bool &mergeable);
    bool is_mergeable_Set() const;
    bool is_mergeable_Valid() const;

    bool isMerged() const;
    void setMerged(const bool &merged);
    bool is_merged_Set() const;
    bool is_merged_Valid() const;

    QDateTime getMergedAt() const;
    void setMergedAt(const QDateTime &merged_at);
    bool is_merged_at_Set() const;
    bool is_merged_at_Valid() const;

    OAIUser getMergedBy() const;
    void setMergedBy(const OAIUser &merged_by);
    bool is_merged_by_Set() const;
    bool is_merged_by_Valid() const;

    OAIMilestone getMilestone() const;
    void setMilestone(const OAIMilestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    qint64 getNumber() const;
    void setNumber(const qint64 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getPatchUrl() const;
    void setPatchUrl(const QString &patch_url);
    bool is_patch_url_Set() const;
    bool is_patch_url_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_maintainer_edit;
    bool m_allow_maintainer_edit_isSet;
    bool m_allow_maintainer_edit_isValid;

    OAIUser m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    QList<OAIUser> m_assignees;
    bool m_assignees_isSet;
    bool m_assignees_isValid;

    OAIPRBranchInfo m_base;
    bool m_base_isSet;
    bool m_base_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QDateTime m_closed_at;
    bool m_closed_at_isSet;
    bool m_closed_at_isValid;

    qint64 m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_diff_url;
    bool m_diff_url_isSet;
    bool m_diff_url_isValid;

    QDateTime m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    OAIPRBranchInfo m_head;
    bool m_head_isSet;
    bool m_head_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    QList<OAILabel> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_merge_base;
    bool m_merge_base_isSet;
    bool m_merge_base_isValid;

    QString m_merge_commit_sha;
    bool m_merge_commit_sha_isSet;
    bool m_merge_commit_sha_isValid;

    bool m_mergeable;
    bool m_mergeable_isSet;
    bool m_mergeable_isValid;

    bool m_merged;
    bool m_merged_isSet;
    bool m_merged_isValid;

    QDateTime m_merged_at;
    bool m_merged_at_isSet;
    bool m_merged_at_isValid;

    OAIUser m_merged_by;
    bool m_merged_by_isSet;
    bool m_merged_by_isValid;

    OAIMilestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    qint64 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_patch_url;
    bool m_patch_url_isSet;
    bool m_patch_url_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullRequest)

#endif // OAIPullRequest_H
