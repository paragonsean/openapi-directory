/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEditOrgOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEditOrgOption::OAIEditOrgOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEditOrgOption::OAIEditOrgOption() {
    this->initializeModel();
}

OAIEditOrgOption::~OAIEditOrgOption() {}

void OAIEditOrgOption::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_repo_admin_change_team_access_isSet = false;
    m_repo_admin_change_team_access_isValid = false;

    m_visibility_isSet = false;
    m_visibility_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAIEditOrgOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEditOrgOption::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("full_name")]);
    m_full_name_isSet = !json[QString("full_name")].isNull() && m_full_name_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_repo_admin_change_team_access_isValid = ::OpenAPI::fromJsonValue(m_repo_admin_change_team_access, json[QString("repo_admin_change_team_access")]);
    m_repo_admin_change_team_access_isSet = !json[QString("repo_admin_change_team_access")].isNull() && m_repo_admin_change_team_access_isValid;

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("visibility")]);
    m_visibility_isSet = !json[QString("visibility")].isNull() && m_visibility_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAIEditOrgOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEditOrgOption::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("full_name"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_repo_admin_change_team_access_isSet) {
        obj.insert(QString("repo_admin_change_team_access"), ::OpenAPI::toJsonValue(m_repo_admin_change_team_access));
    }
    if (m_visibility_isSet) {
        obj.insert(QString("visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

QString OAIEditOrgOption::getDescription() const {
    return m_description;
}
void OAIEditOrgOption::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIEditOrgOption::is_description_Set() const{
    return m_description_isSet;
}

bool OAIEditOrgOption::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIEditOrgOption::getFullName() const {
    return m_full_name;
}
void OAIEditOrgOption::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIEditOrgOption::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIEditOrgOption::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIEditOrgOption::getLocation() const {
    return m_location;
}
void OAIEditOrgOption::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIEditOrgOption::is_location_Set() const{
    return m_location_isSet;
}

bool OAIEditOrgOption::is_location_Valid() const{
    return m_location_isValid;
}

bool OAIEditOrgOption::isRepoAdminChangeTeamAccess() const {
    return m_repo_admin_change_team_access;
}
void OAIEditOrgOption::setRepoAdminChangeTeamAccess(const bool &repo_admin_change_team_access) {
    m_repo_admin_change_team_access = repo_admin_change_team_access;
    m_repo_admin_change_team_access_isSet = true;
}

bool OAIEditOrgOption::is_repo_admin_change_team_access_Set() const{
    return m_repo_admin_change_team_access_isSet;
}

bool OAIEditOrgOption::is_repo_admin_change_team_access_Valid() const{
    return m_repo_admin_change_team_access_isValid;
}

QString OAIEditOrgOption::getVisibility() const {
    return m_visibility;
}
void OAIEditOrgOption::setVisibility(const QString &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIEditOrgOption::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIEditOrgOption::is_visibility_Valid() const{
    return m_visibility_isValid;
}

QString OAIEditOrgOption::getWebsite() const {
    return m_website;
}
void OAIEditOrgOption::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAIEditOrgOption::is_website_Set() const{
    return m_website_isSet;
}

bool OAIEditOrgOption::is_website_Valid() const{
    return m_website_isValid;
}

bool OAIEditOrgOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repo_admin_change_team_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visibility_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEditOrgOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
