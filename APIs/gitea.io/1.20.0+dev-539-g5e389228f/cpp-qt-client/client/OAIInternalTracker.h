/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInternalTracker.h
 *
 * InternalTracker represents settings for internal tracker
 */

#ifndef OAIInternalTracker_H
#define OAIInternalTracker_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInternalTracker : public OAIObject {
public:
    OAIInternalTracker();
    OAIInternalTracker(QString json);
    ~OAIInternalTracker() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowOnlyContributorsToTrackTime() const;
    void setAllowOnlyContributorsToTrackTime(const bool &allow_only_contributors_to_track_time);
    bool is_allow_only_contributors_to_track_time_Set() const;
    bool is_allow_only_contributors_to_track_time_Valid() const;

    bool isEnableIssueDependencies() const;
    void setEnableIssueDependencies(const bool &enable_issue_dependencies);
    bool is_enable_issue_dependencies_Set() const;
    bool is_enable_issue_dependencies_Valid() const;

    bool isEnableTimeTracker() const;
    void setEnableTimeTracker(const bool &enable_time_tracker);
    bool is_enable_time_tracker_Set() const;
    bool is_enable_time_tracker_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_only_contributors_to_track_time;
    bool m_allow_only_contributors_to_track_time_isSet;
    bool m_allow_only_contributors_to_track_time_isValid;

    bool m_enable_issue_dependencies;
    bool m_enable_issue_dependencies_isSet;
    bool m_enable_issue_dependencies_isValid;

    bool m_enable_time_tracker;
    bool m_enable_time_tracker_isSet;
    bool m_enable_time_tracker_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInternalTracker)

#endif // OAIInternalTracker_H
