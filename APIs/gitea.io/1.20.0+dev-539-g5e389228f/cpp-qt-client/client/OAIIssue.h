/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIssue.h
 *
 * Issue represents an issue in a repository
 */

#ifndef OAIIssue_H
#define OAIIssue_H

#include <QJsonObject>

#include "OAIAttachment.h"
#include "OAILabel.h"
#include "OAIMilestone.h"
#include "OAIPullRequestMeta.h"
#include "OAIRepositoryMeta.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachment;
class OAIUser;
class OAILabel;
class OAIMilestone;
class OAIPullRequestMeta;
class OAIRepositoryMeta;

class OAIIssue : public OAIObject {
public:
    OAIIssue();
    OAIIssue(QString json);
    ~OAIIssue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttachment> getAssets() const;
    void setAssets(const QList<OAIAttachment> &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    OAIUser getAssignee() const;
    void setAssignee(const OAIUser &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    QList<OAIUser> getAssignees() const;
    void setAssignees(const QList<OAIUser> &assignees);
    bool is_assignees_Set() const;
    bool is_assignees_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QDateTime getClosedAt() const;
    void setClosedAt(const QDateTime &closed_at);
    bool is_closed_at_Set() const;
    bool is_closed_at_Valid() const;

    qint64 getComments() const;
    void setComments(const qint64 &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getDueDate() const;
    void setDueDate(const QDateTime &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsLocked() const;
    void setIsLocked(const bool &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    QList<OAILabel> getLabels() const;
    void setLabels(const QList<OAILabel> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIMilestone getMilestone() const;
    void setMilestone(const OAIMilestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    qint64 getNumber() const;
    void setNumber(const qint64 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getOriginalAuthor() const;
    void setOriginalAuthor(const QString &original_author);
    bool is_original_author_Set() const;
    bool is_original_author_Valid() const;

    qint64 getOriginalAuthorId() const;
    void setOriginalAuthorId(const qint64 &original_author_id);
    bool is_original_author_id_Set() const;
    bool is_original_author_id_Valid() const;

    OAIPullRequestMeta getPullRequest() const;
    void setPullRequest(const OAIPullRequestMeta &pull_request);
    bool is_pull_request_Set() const;
    bool is_pull_request_Valid() const;

    QString getRef() const;
    void setRef(const QString &ref);
    bool is_ref_Set() const;
    bool is_ref_Valid() const;

    OAIRepositoryMeta getRepository() const;
    void setRepository(const OAIRepositoryMeta &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttachment> m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    OAIUser m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    QList<OAIUser> m_assignees;
    bool m_assignees_isSet;
    bool m_assignees_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QDateTime m_closed_at;
    bool m_closed_at_isSet;
    bool m_closed_at_isValid;

    qint64 m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    QList<OAILabel> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIMilestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    qint64 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_original_author;
    bool m_original_author_isSet;
    bool m_original_author_isValid;

    qint64 m_original_author_id;
    bool m_original_author_id_isSet;
    bool m_original_author_id_isValid;

    OAIPullRequestMeta m_pull_request;
    bool m_pull_request_isSet;
    bool m_pull_request_isValid;

    QString m_ref;
    bool m_ref_isSet;
    bool m_ref_isValid;

    OAIRepositoryMeta m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIssue)

#endif // OAIIssue_H
