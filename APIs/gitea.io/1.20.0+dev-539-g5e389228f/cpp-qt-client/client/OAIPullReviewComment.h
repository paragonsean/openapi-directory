/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullReviewComment.h
 *
 * PullReviewComment represents a comment on a pull request review
 */

#ifndef OAIPullReviewComment_H
#define OAIPullReviewComment_H

#include <QJsonObject>

#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;

class OAIPullReviewComment : public OAIObject {
public:
    OAIPullReviewComment();
    OAIPullReviewComment(QString json);
    ~OAIPullReviewComment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDiffHunk() const;
    void setDiffHunk(const QString &diff_hunk);
    bool is_diff_hunk_Set() const;
    bool is_diff_hunk_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOriginalCommitId() const;
    void setOriginalCommitId(const QString &original_commit_id);
    bool is_original_commit_id_Set() const;
    bool is_original_commit_id_Valid() const;

    qint32 getOriginalPosition() const;
    void setOriginalPosition(const qint32 &original_position);
    bool is_original_position_Set() const;
    bool is_original_position_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint32 getPosition() const;
    void setPosition(const qint32 &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    qint64 getPullRequestReviewId() const;
    void setPullRequestReviewId(const qint64 &pull_request_review_id);
    bool is_pull_request_review_id_Set() const;
    bool is_pull_request_review_id_Valid() const;

    QString getPullRequestUrl() const;
    void setPullRequestUrl(const QString &pull_request_url);
    bool is_pull_request_url_Set() const;
    bool is_pull_request_url_Valid() const;

    OAIUser getResolver() const;
    void setResolver(const OAIUser &resolver);
    bool is_resolver_Set() const;
    bool is_resolver_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_diff_hunk;
    bool m_diff_hunk_isSet;
    bool m_diff_hunk_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_original_commit_id;
    bool m_original_commit_id_isSet;
    bool m_original_commit_id_isValid;

    qint32 m_original_position;
    bool m_original_position_isSet;
    bool m_original_position_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint32 m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    qint64 m_pull_request_review_id;
    bool m_pull_request_review_id_isSet;
    bool m_pull_request_review_id_isValid;

    QString m_pull_request_url;
    bool m_pull_request_url_isSet;
    bool m_pull_request_url_isValid;

    OAIUser m_resolver;
    bool m_resolver_isSet;
    bool m_resolver_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullReviewComment)

#endif // OAIPullReviewComment_H
