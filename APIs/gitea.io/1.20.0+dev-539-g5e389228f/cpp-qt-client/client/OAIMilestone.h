/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMilestone.h
 *
 * Milestone milestone is a collection of issues on one repository
 */

#ifndef OAIMilestone_H
#define OAIMilestone_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMilestone : public OAIObject {
public:
    OAIMilestone();
    OAIMilestone(QString json);
    ~OAIMilestone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getClosedAt() const;
    void setClosedAt(const QDateTime &closed_at);
    bool is_closed_at_Set() const;
    bool is_closed_at_Valid() const;

    qint64 getClosedIssues() const;
    void setClosedIssues(const qint64 &closed_issues);
    bool is_closed_issues_Set() const;
    bool is_closed_issues_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getDueOn() const;
    void setDueOn(const QDateTime &due_on);
    bool is_due_on_Set() const;
    bool is_due_on_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint64 getOpenIssues() const;
    void setOpenIssues(const qint64 &open_issues);
    bool is_open_issues_Set() const;
    bool is_open_issues_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_closed_at;
    bool m_closed_at_isSet;
    bool m_closed_at_isValid;

    qint64 m_closed_issues;
    bool m_closed_issues_isSet;
    bool m_closed_issues_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_due_on;
    bool m_due_on_isSet;
    bool m_due_on_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint64 m_open_issues;
    bool m_open_issues_isSet;
    bool m_open_issues_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMilestone)

#endif // OAIMilestone_H
