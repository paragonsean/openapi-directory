/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICron.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICron::OAICron(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICron::OAICron() {
    this->initializeModel();
}

OAICron::~OAICron() {}

void OAICron::initializeModel() {

    m_exec_times_isSet = false;
    m_exec_times_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_next_isSet = false;
    m_next_isValid = false;

    m_prev_isSet = false;
    m_prev_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;
}

void OAICron::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICron::fromJsonObject(QJsonObject json) {

    m_exec_times_isValid = ::OpenAPI::fromJsonValue(m_exec_times, json[QString("exec_times")]);
    m_exec_times_isSet = !json[QString("exec_times")].isNull() && m_exec_times_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_next_isValid = ::OpenAPI::fromJsonValue(m_next, json[QString("next")]);
    m_next_isSet = !json[QString("next")].isNull() && m_next_isValid;

    m_prev_isValid = ::OpenAPI::fromJsonValue(m_prev, json[QString("prev")]);
    m_prev_isSet = !json[QString("prev")].isNull() && m_prev_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;
}

QString OAICron::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICron::asJsonObject() const {
    QJsonObject obj;
    if (m_exec_times_isSet) {
        obj.insert(QString("exec_times"), ::OpenAPI::toJsonValue(m_exec_times));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_next_isSet) {
        obj.insert(QString("next"), ::OpenAPI::toJsonValue(m_next));
    }
    if (m_prev_isSet) {
        obj.insert(QString("prev"), ::OpenAPI::toJsonValue(m_prev));
    }
    if (m_schedule_isSet) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    return obj;
}

qint64 OAICron::getExecTimes() const {
    return m_exec_times;
}
void OAICron::setExecTimes(const qint64 &exec_times) {
    m_exec_times = exec_times;
    m_exec_times_isSet = true;
}

bool OAICron::is_exec_times_Set() const{
    return m_exec_times_isSet;
}

bool OAICron::is_exec_times_Valid() const{
    return m_exec_times_isValid;
}

QString OAICron::getName() const {
    return m_name;
}
void OAICron::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICron::is_name_Set() const{
    return m_name_isSet;
}

bool OAICron::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAICron::getNext() const {
    return m_next;
}
void OAICron::setNext(const QDateTime &next) {
    m_next = next;
    m_next_isSet = true;
}

bool OAICron::is_next_Set() const{
    return m_next_isSet;
}

bool OAICron::is_next_Valid() const{
    return m_next_isValid;
}

QDateTime OAICron::getPrev() const {
    return m_prev;
}
void OAICron::setPrev(const QDateTime &prev) {
    m_prev = prev;
    m_prev_isSet = true;
}

bool OAICron::is_prev_Set() const{
    return m_prev_isSet;
}

bool OAICron::is_prev_Valid() const{
    return m_prev_isValid;
}

QString OAICron::getSchedule() const {
    return m_schedule;
}
void OAICron::setSchedule(const QString &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAICron::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAICron::is_schedule_Valid() const{
    return m_schedule_isValid;
}

bool OAICron::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exec_times_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prev_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICron::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
