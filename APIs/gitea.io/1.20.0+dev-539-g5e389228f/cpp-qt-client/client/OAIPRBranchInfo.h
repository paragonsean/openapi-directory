/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPRBranchInfo.h
 *
 * PRBranchInfo information about a branch
 */

#ifndef OAIPRBranchInfo_H
#define OAIPRBranchInfo_H

#include <QJsonObject>

#include "OAIRepository.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRepository;

class OAIPRBranchInfo : public OAIObject {
public:
    OAIPRBranchInfo();
    OAIPRBranchInfo(QString json);
    ~OAIPRBranchInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getRef() const;
    void setRef(const QString &ref);
    bool is_ref_Set() const;
    bool is_ref_Valid() const;

    OAIRepository getRepo() const;
    void setRepo(const OAIRepository &repo);
    bool is_repo_Set() const;
    bool is_repo_Valid() const;

    qint64 getRepoId() const;
    void setRepoId(const qint64 &repo_id);
    bool is_repo_id_Set() const;
    bool is_repo_id_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_ref;
    bool m_ref_isSet;
    bool m_ref_isValid;

    OAIRepository m_repo;
    bool m_repo_isSet;
    bool m_repo_isValid;

    qint64 m_repo_id;
    bool m_repo_id_isSet;
    bool m_repo_id_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPRBranchInfo)

#endif // OAIPRBranchInfo_H
