/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddCollaboratorOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddCollaboratorOption::OAIAddCollaboratorOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddCollaboratorOption::OAIAddCollaboratorOption() {
    this->initializeModel();
}

OAIAddCollaboratorOption::~OAIAddCollaboratorOption() {}

void OAIAddCollaboratorOption::initializeModel() {

    m_permission_isSet = false;
    m_permission_isValid = false;
}

void OAIAddCollaboratorOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddCollaboratorOption::fromJsonObject(QJsonObject json) {

    m_permission_isValid = ::OpenAPI::fromJsonValue(m_permission, json[QString("permission")]);
    m_permission_isSet = !json[QString("permission")].isNull() && m_permission_isValid;
}

QString OAIAddCollaboratorOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddCollaboratorOption::asJsonObject() const {
    QJsonObject obj;
    if (m_permission_isSet) {
        obj.insert(QString("permission"), ::OpenAPI::toJsonValue(m_permission));
    }
    return obj;
}

QString OAIAddCollaboratorOption::getPermission() const {
    return m_permission;
}
void OAIAddCollaboratorOption::setPermission(const QString &permission) {
    m_permission = permission;
    m_permission_isSet = true;
}

bool OAIAddCollaboratorOption::is_permission_Set() const{
    return m_permission_isSet;
}

bool OAIAddCollaboratorOption::is_permission_Valid() const{
    return m_permission_isValid;
}

bool OAIAddCollaboratorOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_permission_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddCollaboratorOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
