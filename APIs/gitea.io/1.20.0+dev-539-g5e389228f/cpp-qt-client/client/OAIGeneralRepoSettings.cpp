/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeneralRepoSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeneralRepoSettings::OAIGeneralRepoSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeneralRepoSettings::OAIGeneralRepoSettings() {
    this->initializeModel();
}

OAIGeneralRepoSettings::~OAIGeneralRepoSettings() {}

void OAIGeneralRepoSettings::initializeModel() {

    m_http_git_disabled_isSet = false;
    m_http_git_disabled_isValid = false;

    m_lfs_disabled_isSet = false;
    m_lfs_disabled_isValid = false;

    m_migrations_disabled_isSet = false;
    m_migrations_disabled_isValid = false;

    m_mirrors_disabled_isSet = false;
    m_mirrors_disabled_isValid = false;

    m_stars_disabled_isSet = false;
    m_stars_disabled_isValid = false;

    m_time_tracking_disabled_isSet = false;
    m_time_tracking_disabled_isValid = false;
}

void OAIGeneralRepoSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeneralRepoSettings::fromJsonObject(QJsonObject json) {

    m_http_git_disabled_isValid = ::OpenAPI::fromJsonValue(m_http_git_disabled, json[QString("http_git_disabled")]);
    m_http_git_disabled_isSet = !json[QString("http_git_disabled")].isNull() && m_http_git_disabled_isValid;

    m_lfs_disabled_isValid = ::OpenAPI::fromJsonValue(m_lfs_disabled, json[QString("lfs_disabled")]);
    m_lfs_disabled_isSet = !json[QString("lfs_disabled")].isNull() && m_lfs_disabled_isValid;

    m_migrations_disabled_isValid = ::OpenAPI::fromJsonValue(m_migrations_disabled, json[QString("migrations_disabled")]);
    m_migrations_disabled_isSet = !json[QString("migrations_disabled")].isNull() && m_migrations_disabled_isValid;

    m_mirrors_disabled_isValid = ::OpenAPI::fromJsonValue(m_mirrors_disabled, json[QString("mirrors_disabled")]);
    m_mirrors_disabled_isSet = !json[QString("mirrors_disabled")].isNull() && m_mirrors_disabled_isValid;

    m_stars_disabled_isValid = ::OpenAPI::fromJsonValue(m_stars_disabled, json[QString("stars_disabled")]);
    m_stars_disabled_isSet = !json[QString("stars_disabled")].isNull() && m_stars_disabled_isValid;

    m_time_tracking_disabled_isValid = ::OpenAPI::fromJsonValue(m_time_tracking_disabled, json[QString("time_tracking_disabled")]);
    m_time_tracking_disabled_isSet = !json[QString("time_tracking_disabled")].isNull() && m_time_tracking_disabled_isValid;
}

QString OAIGeneralRepoSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeneralRepoSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_http_git_disabled_isSet) {
        obj.insert(QString("http_git_disabled"), ::OpenAPI::toJsonValue(m_http_git_disabled));
    }
    if (m_lfs_disabled_isSet) {
        obj.insert(QString("lfs_disabled"), ::OpenAPI::toJsonValue(m_lfs_disabled));
    }
    if (m_migrations_disabled_isSet) {
        obj.insert(QString("migrations_disabled"), ::OpenAPI::toJsonValue(m_migrations_disabled));
    }
    if (m_mirrors_disabled_isSet) {
        obj.insert(QString("mirrors_disabled"), ::OpenAPI::toJsonValue(m_mirrors_disabled));
    }
    if (m_stars_disabled_isSet) {
        obj.insert(QString("stars_disabled"), ::OpenAPI::toJsonValue(m_stars_disabled));
    }
    if (m_time_tracking_disabled_isSet) {
        obj.insert(QString("time_tracking_disabled"), ::OpenAPI::toJsonValue(m_time_tracking_disabled));
    }
    return obj;
}

bool OAIGeneralRepoSettings::isHttpGitDisabled() const {
    return m_http_git_disabled;
}
void OAIGeneralRepoSettings::setHttpGitDisabled(const bool &http_git_disabled) {
    m_http_git_disabled = http_git_disabled;
    m_http_git_disabled_isSet = true;
}

bool OAIGeneralRepoSettings::is_http_git_disabled_Set() const{
    return m_http_git_disabled_isSet;
}

bool OAIGeneralRepoSettings::is_http_git_disabled_Valid() const{
    return m_http_git_disabled_isValid;
}

bool OAIGeneralRepoSettings::isLfsDisabled() const {
    return m_lfs_disabled;
}
void OAIGeneralRepoSettings::setLfsDisabled(const bool &lfs_disabled) {
    m_lfs_disabled = lfs_disabled;
    m_lfs_disabled_isSet = true;
}

bool OAIGeneralRepoSettings::is_lfs_disabled_Set() const{
    return m_lfs_disabled_isSet;
}

bool OAIGeneralRepoSettings::is_lfs_disabled_Valid() const{
    return m_lfs_disabled_isValid;
}

bool OAIGeneralRepoSettings::isMigrationsDisabled() const {
    return m_migrations_disabled;
}
void OAIGeneralRepoSettings::setMigrationsDisabled(const bool &migrations_disabled) {
    m_migrations_disabled = migrations_disabled;
    m_migrations_disabled_isSet = true;
}

bool OAIGeneralRepoSettings::is_migrations_disabled_Set() const{
    return m_migrations_disabled_isSet;
}

bool OAIGeneralRepoSettings::is_migrations_disabled_Valid() const{
    return m_migrations_disabled_isValid;
}

bool OAIGeneralRepoSettings::isMirrorsDisabled() const {
    return m_mirrors_disabled;
}
void OAIGeneralRepoSettings::setMirrorsDisabled(const bool &mirrors_disabled) {
    m_mirrors_disabled = mirrors_disabled;
    m_mirrors_disabled_isSet = true;
}

bool OAIGeneralRepoSettings::is_mirrors_disabled_Set() const{
    return m_mirrors_disabled_isSet;
}

bool OAIGeneralRepoSettings::is_mirrors_disabled_Valid() const{
    return m_mirrors_disabled_isValid;
}

bool OAIGeneralRepoSettings::isStarsDisabled() const {
    return m_stars_disabled;
}
void OAIGeneralRepoSettings::setStarsDisabled(const bool &stars_disabled) {
    m_stars_disabled = stars_disabled;
    m_stars_disabled_isSet = true;
}

bool OAIGeneralRepoSettings::is_stars_disabled_Set() const{
    return m_stars_disabled_isSet;
}

bool OAIGeneralRepoSettings::is_stars_disabled_Valid() const{
    return m_stars_disabled_isValid;
}

bool OAIGeneralRepoSettings::isTimeTrackingDisabled() const {
    return m_time_tracking_disabled;
}
void OAIGeneralRepoSettings::setTimeTrackingDisabled(const bool &time_tracking_disabled) {
    m_time_tracking_disabled = time_tracking_disabled;
    m_time_tracking_disabled_isSet = true;
}

bool OAIGeneralRepoSettings::is_time_tracking_disabled_Set() const{
    return m_time_tracking_disabled_isSet;
}

bool OAIGeneralRepoSettings::is_time_tracking_disabled_Valid() const{
    return m_time_tracking_disabled_isValid;
}

bool OAIGeneralRepoSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_http_git_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lfs_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_migrations_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mirrors_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stars_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_tracking_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeneralRepoSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
