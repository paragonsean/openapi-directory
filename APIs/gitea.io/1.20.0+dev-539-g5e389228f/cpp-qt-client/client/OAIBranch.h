/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBranch.h
 *
 * Branch represents a repository branch
 */

#ifndef OAIBranch_H
#define OAIBranch_H

#include <QJsonObject>

#include "OAIPayloadCommit.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPayloadCommit;

class OAIBranch : public OAIObject {
public:
    OAIBranch();
    OAIBranch(QString json);
    ~OAIBranch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPayloadCommit getCommit() const;
    void setCommit(const OAIPayloadCommit &commit);
    bool is_commit_Set() const;
    bool is_commit_Valid() const;

    QString getEffectiveBranchProtectionName() const;
    void setEffectiveBranchProtectionName(const QString &effective_branch_protection_name);
    bool is_effective_branch_protection_name_Set() const;
    bool is_effective_branch_protection_name_Valid() const;

    bool isEnableStatusCheck() const;
    void setEnableStatusCheck(const bool &enable_status_check);
    bool is_enable_status_check_Set() const;
    bool is_enable_status_check_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isRProtected() const;
    void setRProtected(const bool &r_protected);
    bool is_r_protected_Set() const;
    bool is_r_protected_Valid() const;

    qint64 getRequiredApprovals() const;
    void setRequiredApprovals(const qint64 &required_approvals);
    bool is_required_approvals_Set() const;
    bool is_required_approvals_Valid() const;

    QList<QString> getStatusCheckContexts() const;
    void setStatusCheckContexts(const QList<QString> &status_check_contexts);
    bool is_status_check_contexts_Set() const;
    bool is_status_check_contexts_Valid() const;

    bool isUserCanMerge() const;
    void setUserCanMerge(const bool &user_can_merge);
    bool is_user_can_merge_Set() const;
    bool is_user_can_merge_Valid() const;

    bool isUserCanPush() const;
    void setUserCanPush(const bool &user_can_push);
    bool is_user_can_push_Set() const;
    bool is_user_can_push_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPayloadCommit m_commit;
    bool m_commit_isSet;
    bool m_commit_isValid;

    QString m_effective_branch_protection_name;
    bool m_effective_branch_protection_name_isSet;
    bool m_effective_branch_protection_name_isValid;

    bool m_enable_status_check;
    bool m_enable_status_check_isSet;
    bool m_enable_status_check_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_r_protected;
    bool m_r_protected_isSet;
    bool m_r_protected_isValid;

    qint64 m_required_approvals;
    bool m_required_approvals_isSet;
    bool m_required_approvals_isValid;

    QList<QString> m_status_check_contexts;
    bool m_status_check_contexts_isSet;
    bool m_status_check_contexts_isValid;

    bool m_user_can_merge;
    bool m_user_can_merge_isSet;
    bool m_user_can_merge_isValid;

    bool m_user_can_push;
    bool m_user_can_push_isSet;
    bool m_user_can_push_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBranch)

#endif // OAIBranch_H
