/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPullRequestMeta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPullRequestMeta::OAIPullRequestMeta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPullRequestMeta::OAIPullRequestMeta() {
    this->initializeModel();
}

OAIPullRequestMeta::~OAIPullRequestMeta() {}

void OAIPullRequestMeta::initializeModel() {

    m_merged_isSet = false;
    m_merged_isValid = false;

    m_merged_at_isSet = false;
    m_merged_at_isValid = false;
}

void OAIPullRequestMeta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPullRequestMeta::fromJsonObject(QJsonObject json) {

    m_merged_isValid = ::OpenAPI::fromJsonValue(m_merged, json[QString("merged")]);
    m_merged_isSet = !json[QString("merged")].isNull() && m_merged_isValid;

    m_merged_at_isValid = ::OpenAPI::fromJsonValue(m_merged_at, json[QString("merged_at")]);
    m_merged_at_isSet = !json[QString("merged_at")].isNull() && m_merged_at_isValid;
}

QString OAIPullRequestMeta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPullRequestMeta::asJsonObject() const {
    QJsonObject obj;
    if (m_merged_isSet) {
        obj.insert(QString("merged"), ::OpenAPI::toJsonValue(m_merged));
    }
    if (m_merged_at_isSet) {
        obj.insert(QString("merged_at"), ::OpenAPI::toJsonValue(m_merged_at));
    }
    return obj;
}

bool OAIPullRequestMeta::isMerged() const {
    return m_merged;
}
void OAIPullRequestMeta::setMerged(const bool &merged) {
    m_merged = merged;
    m_merged_isSet = true;
}

bool OAIPullRequestMeta::is_merged_Set() const{
    return m_merged_isSet;
}

bool OAIPullRequestMeta::is_merged_Valid() const{
    return m_merged_isValid;
}

QDateTime OAIPullRequestMeta::getMergedAt() const {
    return m_merged_at;
}
void OAIPullRequestMeta::setMergedAt(const QDateTime &merged_at) {
    m_merged_at = merged_at;
    m_merged_at_isSet = true;
}

bool OAIPullRequestMeta::is_merged_at_Set() const{
    return m_merged_at_isSet;
}

bool OAIPullRequestMeta::is_merged_at_Valid() const{
    return m_merged_at_isValid;
}

bool OAIPullRequestMeta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_merged_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merged_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPullRequestMeta::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
