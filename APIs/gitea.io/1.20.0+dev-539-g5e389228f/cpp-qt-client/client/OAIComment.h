/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComment.h
 *
 * Comment represents a comment on a commit or issue
 */

#ifndef OAIComment_H
#define OAIComment_H

#include <QJsonObject>

#include "OAIAttachment.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachment;
class OAIUser;

class OAIComment : public OAIObject {
public:
    OAIComment();
    OAIComment(QString json);
    ~OAIComment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttachment> getAssets() const;
    void setAssets(const QList<OAIAttachment> &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIssueUrl() const;
    void setIssueUrl(const QString &issue_url);
    bool is_issue_url_Set() const;
    bool is_issue_url_Valid() const;

    QString getOriginalAuthor() const;
    void setOriginalAuthor(const QString &original_author);
    bool is_original_author_Set() const;
    bool is_original_author_Valid() const;

    qint64 getOriginalAuthorId() const;
    void setOriginalAuthorId(const qint64 &original_author_id);
    bool is_original_author_id_Set() const;
    bool is_original_author_id_Valid() const;

    QString getPullRequestUrl() const;
    void setPullRequestUrl(const QString &pull_request_url);
    bool is_pull_request_url_Set() const;
    bool is_pull_request_url_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttachment> m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_issue_url;
    bool m_issue_url_isSet;
    bool m_issue_url_isValid;

    QString m_original_author;
    bool m_original_author_isSet;
    bool m_original_author_isValid;

    qint64 m_original_author_id;
    bool m_original_author_id_isSet;
    bool m_original_author_id_isValid;

    QString m_pull_request_url;
    bool m_pull_request_url_isSet;
    bool m_pull_request_url_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComment)

#endif // OAIComment_H
