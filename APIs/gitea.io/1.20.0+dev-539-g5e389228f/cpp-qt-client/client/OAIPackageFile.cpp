/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPackageFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPackageFile::OAIPackageFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPackageFile::OAIPackageFile() {
    this->initializeModel();
}

OAIPackageFile::~OAIPackageFile() {}

void OAIPackageFile::initializeModel() {

    m_size_isSet = false;
    m_size_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_md5_isSet = false;
    m_md5_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sha1_isSet = false;
    m_sha1_isValid = false;

    m_sha256_isSet = false;
    m_sha256_isValid = false;

    m_sha512_isSet = false;
    m_sha512_isValid = false;
}

void OAIPackageFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPackageFile::fromJsonObject(QJsonObject json) {

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("Size")]);
    m_size_isSet = !json[QString("Size")].isNull() && m_size_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_md5_isValid = ::OpenAPI::fromJsonValue(m_md5, json[QString("md5")]);
    m_md5_isSet = !json[QString("md5")].isNull() && m_md5_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sha1_isValid = ::OpenAPI::fromJsonValue(m_sha1, json[QString("sha1")]);
    m_sha1_isSet = !json[QString("sha1")].isNull() && m_sha1_isValid;

    m_sha256_isValid = ::OpenAPI::fromJsonValue(m_sha256, json[QString("sha256")]);
    m_sha256_isSet = !json[QString("sha256")].isNull() && m_sha256_isValid;

    m_sha512_isValid = ::OpenAPI::fromJsonValue(m_sha512, json[QString("sha512")]);
    m_sha512_isSet = !json[QString("sha512")].isNull() && m_sha512_isValid;
}

QString OAIPackageFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPackageFile::asJsonObject() const {
    QJsonObject obj;
    if (m_size_isSet) {
        obj.insert(QString("Size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_md5_isSet) {
        obj.insert(QString("md5"), ::OpenAPI::toJsonValue(m_md5));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sha1_isSet) {
        obj.insert(QString("sha1"), ::OpenAPI::toJsonValue(m_sha1));
    }
    if (m_sha256_isSet) {
        obj.insert(QString("sha256"), ::OpenAPI::toJsonValue(m_sha256));
    }
    if (m_sha512_isSet) {
        obj.insert(QString("sha512"), ::OpenAPI::toJsonValue(m_sha512));
    }
    return obj;
}

qint64 OAIPackageFile::getSize() const {
    return m_size;
}
void OAIPackageFile::setSize(const qint64 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIPackageFile::is_size_Set() const{
    return m_size_isSet;
}

bool OAIPackageFile::is_size_Valid() const{
    return m_size_isValid;
}

qint64 OAIPackageFile::getId() const {
    return m_id;
}
void OAIPackageFile::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPackageFile::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPackageFile::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPackageFile::getMd5() const {
    return m_md5;
}
void OAIPackageFile::setMd5(const QString &md5) {
    m_md5 = md5;
    m_md5_isSet = true;
}

bool OAIPackageFile::is_md5_Set() const{
    return m_md5_isSet;
}

bool OAIPackageFile::is_md5_Valid() const{
    return m_md5_isValid;
}

QString OAIPackageFile::getName() const {
    return m_name;
}
void OAIPackageFile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPackageFile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPackageFile::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPackageFile::getSha1() const {
    return m_sha1;
}
void OAIPackageFile::setSha1(const QString &sha1) {
    m_sha1 = sha1;
    m_sha1_isSet = true;
}

bool OAIPackageFile::is_sha1_Set() const{
    return m_sha1_isSet;
}

bool OAIPackageFile::is_sha1_Valid() const{
    return m_sha1_isValid;
}

QString OAIPackageFile::getSha256() const {
    return m_sha256;
}
void OAIPackageFile::setSha256(const QString &sha256) {
    m_sha256 = sha256;
    m_sha256_isSet = true;
}

bool OAIPackageFile::is_sha256_Set() const{
    return m_sha256_isSet;
}

bool OAIPackageFile::is_sha256_Valid() const{
    return m_sha256_isValid;
}

QString OAIPackageFile::getSha512() const {
    return m_sha512;
}
void OAIPackageFile::setSha512(const QString &sha512) {
    m_sha512 = sha512;
    m_sha512_isSet = true;
}

bool OAIPackageFile::is_sha512_Set() const{
    return m_sha512_isSet;
}

bool OAIPackageFile::is_sha512_Valid() const{
    return m_sha512_isValid;
}

bool OAIPackageFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha256_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha512_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPackageFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
