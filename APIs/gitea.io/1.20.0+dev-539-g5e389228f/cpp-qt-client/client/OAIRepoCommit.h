/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepoCommit.h
 *
 * 
 */

#ifndef OAIRepoCommit_H
#define OAIRepoCommit_H

#include <QJsonObject>

#include "OAICommitMeta.h"
#include "OAICommitUser.h"
#include "OAIPayloadCommitVerification.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommitUser;
class OAICommitMeta;
class OAIPayloadCommitVerification;

class OAIRepoCommit : public OAIObject {
public:
    OAIRepoCommit();
    OAIRepoCommit(QString json);
    ~OAIRepoCommit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommitUser getAuthor() const;
    void setAuthor(const OAICommitUser &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAICommitUser getCommitter() const;
    void setCommitter(const OAICommitUser &committer);
    bool is_committer_Set() const;
    bool is_committer_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAICommitMeta getTree() const;
    void setTree(const OAICommitMeta &tree);
    bool is_tree_Set() const;
    bool is_tree_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIPayloadCommitVerification getVerification() const;
    void setVerification(const OAIPayloadCommitVerification &verification);
    bool is_verification_Set() const;
    bool is_verification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommitUser m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAICommitUser m_committer;
    bool m_committer_isSet;
    bool m_committer_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAICommitMeta m_tree;
    bool m_tree_isSet;
    bool m_tree_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIPayloadCommitVerification m_verification;
    bool m_verification_isSet;
    bool m_verification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepoCommit)

#endif // OAIRepoCommit_H
