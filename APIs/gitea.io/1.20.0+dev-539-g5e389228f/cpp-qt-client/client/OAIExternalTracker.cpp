/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalTracker.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalTracker::OAIExternalTracker(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalTracker::OAIExternalTracker() {
    this->initializeModel();
}

OAIExternalTracker::~OAIExternalTracker() {}

void OAIExternalTracker::initializeModel() {

    m_external_tracker_format_isSet = false;
    m_external_tracker_format_isValid = false;

    m_external_tracker_regexp_pattern_isSet = false;
    m_external_tracker_regexp_pattern_isValid = false;

    m_external_tracker_style_isSet = false;
    m_external_tracker_style_isValid = false;

    m_external_tracker_url_isSet = false;
    m_external_tracker_url_isValid = false;
}

void OAIExternalTracker::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalTracker::fromJsonObject(QJsonObject json) {

    m_external_tracker_format_isValid = ::OpenAPI::fromJsonValue(m_external_tracker_format, json[QString("external_tracker_format")]);
    m_external_tracker_format_isSet = !json[QString("external_tracker_format")].isNull() && m_external_tracker_format_isValid;

    m_external_tracker_regexp_pattern_isValid = ::OpenAPI::fromJsonValue(m_external_tracker_regexp_pattern, json[QString("external_tracker_regexp_pattern")]);
    m_external_tracker_regexp_pattern_isSet = !json[QString("external_tracker_regexp_pattern")].isNull() && m_external_tracker_regexp_pattern_isValid;

    m_external_tracker_style_isValid = ::OpenAPI::fromJsonValue(m_external_tracker_style, json[QString("external_tracker_style")]);
    m_external_tracker_style_isSet = !json[QString("external_tracker_style")].isNull() && m_external_tracker_style_isValid;

    m_external_tracker_url_isValid = ::OpenAPI::fromJsonValue(m_external_tracker_url, json[QString("external_tracker_url")]);
    m_external_tracker_url_isSet = !json[QString("external_tracker_url")].isNull() && m_external_tracker_url_isValid;
}

QString OAIExternalTracker::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalTracker::asJsonObject() const {
    QJsonObject obj;
    if (m_external_tracker_format_isSet) {
        obj.insert(QString("external_tracker_format"), ::OpenAPI::toJsonValue(m_external_tracker_format));
    }
    if (m_external_tracker_regexp_pattern_isSet) {
        obj.insert(QString("external_tracker_regexp_pattern"), ::OpenAPI::toJsonValue(m_external_tracker_regexp_pattern));
    }
    if (m_external_tracker_style_isSet) {
        obj.insert(QString("external_tracker_style"), ::OpenAPI::toJsonValue(m_external_tracker_style));
    }
    if (m_external_tracker_url_isSet) {
        obj.insert(QString("external_tracker_url"), ::OpenAPI::toJsonValue(m_external_tracker_url));
    }
    return obj;
}

QString OAIExternalTracker::getExternalTrackerFormat() const {
    return m_external_tracker_format;
}
void OAIExternalTracker::setExternalTrackerFormat(const QString &external_tracker_format) {
    m_external_tracker_format = external_tracker_format;
    m_external_tracker_format_isSet = true;
}

bool OAIExternalTracker::is_external_tracker_format_Set() const{
    return m_external_tracker_format_isSet;
}

bool OAIExternalTracker::is_external_tracker_format_Valid() const{
    return m_external_tracker_format_isValid;
}

QString OAIExternalTracker::getExternalTrackerRegexpPattern() const {
    return m_external_tracker_regexp_pattern;
}
void OAIExternalTracker::setExternalTrackerRegexpPattern(const QString &external_tracker_regexp_pattern) {
    m_external_tracker_regexp_pattern = external_tracker_regexp_pattern;
    m_external_tracker_regexp_pattern_isSet = true;
}

bool OAIExternalTracker::is_external_tracker_regexp_pattern_Set() const{
    return m_external_tracker_regexp_pattern_isSet;
}

bool OAIExternalTracker::is_external_tracker_regexp_pattern_Valid() const{
    return m_external_tracker_regexp_pattern_isValid;
}

QString OAIExternalTracker::getExternalTrackerStyle() const {
    return m_external_tracker_style;
}
void OAIExternalTracker::setExternalTrackerStyle(const QString &external_tracker_style) {
    m_external_tracker_style = external_tracker_style;
    m_external_tracker_style_isSet = true;
}

bool OAIExternalTracker::is_external_tracker_style_Set() const{
    return m_external_tracker_style_isSet;
}

bool OAIExternalTracker::is_external_tracker_style_Valid() const{
    return m_external_tracker_style_isValid;
}

QString OAIExternalTracker::getExternalTrackerUrl() const {
    return m_external_tracker_url;
}
void OAIExternalTracker::setExternalTrackerUrl(const QString &external_tracker_url) {
    m_external_tracker_url = external_tracker_url;
    m_external_tracker_url_isSet = true;
}

bool OAIExternalTracker::is_external_tracker_url_Set() const{
    return m_external_tracker_url_isSet;
}

bool OAIExternalTracker::is_external_tracker_url_Valid() const{
    return m_external_tracker_url_isValid;
}

bool OAIExternalTracker::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_external_tracker_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_tracker_regexp_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_tracker_style_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_tracker_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalTracker::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
