/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWikiCommit.h
 *
 * WikiCommit page commit/revision
 */

#ifndef OAIWikiCommit_H
#define OAIWikiCommit_H

#include <QJsonObject>

#include "OAICommitUser.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommitUser;

class OAIWikiCommit : public OAIObject {
public:
    OAIWikiCommit();
    OAIWikiCommit(QString json);
    ~OAIWikiCommit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommitUser getAuthor() const;
    void setAuthor(const OAICommitUser &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAICommitUser getCommiter() const;
    void setCommiter(const OAICommitUser &commiter);
    bool is_commiter_Set() const;
    bool is_commiter_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommitUser m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAICommitUser m_commiter;
    bool m_commiter_isSet;
    bool m_commiter_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWikiCommit)

#endif // OAIWikiCommit_H
