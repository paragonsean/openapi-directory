/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullReview.h
 *
 * PullReview represents a pull request review
 */

#ifndef OAIPullReview_H
#define OAIPullReview_H

#include <QJsonObject>

#include "OAITeam.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITeam;
class OAIUser;

class OAIPullReview : public OAIObject {
public:
    OAIPullReview();
    OAIPullReview(QString json);
    ~OAIPullReview() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    qint64 getCommentsCount() const;
    void setCommentsCount(const qint64 &comments_count);
    bool is_comments_count_Set() const;
    bool is_comments_count_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    bool isDismissed() const;
    void setDismissed(const bool &dismissed);
    bool is_dismissed_Set() const;
    bool is_dismissed_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isOfficial() const;
    void setOfficial(const bool &official);
    bool is_official_Set() const;
    bool is_official_Valid() const;

    QString getPullRequestUrl() const;
    void setPullRequestUrl(const QString &pull_request_url);
    bool is_pull_request_url_Set() const;
    bool is_pull_request_url_Valid() const;

    bool isStale() const;
    void setStale(const bool &stale);
    bool is_stale_Set() const;
    bool is_stale_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getSubmittedAt() const;
    void setSubmittedAt(const QDateTime &submitted_at);
    bool is_submitted_at_Set() const;
    bool is_submitted_at_Valid() const;

    OAITeam getTeam() const;
    void setTeam(const OAITeam &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    qint64 m_comments_count;
    bool m_comments_count_isSet;
    bool m_comments_count_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    bool m_dismissed;
    bool m_dismissed_isSet;
    bool m_dismissed_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_official;
    bool m_official_isSet;
    bool m_official_isValid;

    QString m_pull_request_url;
    bool m_pull_request_url_isSet;
    bool m_pull_request_url_isValid;

    bool m_stale;
    bool m_stale_isSet;
    bool m_stale_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_submitted_at;
    bool m_submitted_at_isSet;
    bool m_submitted_at_isValid;

    OAITeam m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullReview)

#endif // OAIPullReview_H
