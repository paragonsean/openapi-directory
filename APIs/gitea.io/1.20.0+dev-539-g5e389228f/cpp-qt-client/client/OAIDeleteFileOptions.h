/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteFileOptions.h
 *
 * DeleteFileOptions options for deleting files (used for other File structs below) Note: &#x60;author&#x60; and &#x60;committer&#x60; are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)
 */

#ifndef OAIDeleteFileOptions_H
#define OAIDeleteFileOptions_H

#include <QJsonObject>

#include "OAICommitDateOptions.h"
#include "OAIIdentity.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentity;
class OAICommitDateOptions;

class OAIDeleteFileOptions : public OAIObject {
public:
    OAIDeleteFileOptions();
    OAIDeleteFileOptions(QString json);
    ~OAIDeleteFileOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIdentity getAuthor() const;
    void setAuthor(const OAIIdentity &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    OAIIdentity getCommitter() const;
    void setCommitter(const OAIIdentity &committer);
    bool is_committer_Set() const;
    bool is_committer_Valid() const;

    OAICommitDateOptions getDates() const;
    void setDates(const OAICommitDateOptions &dates);
    bool is_dates_Set() const;
    bool is_dates_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getNewBranch() const;
    void setNewBranch(const QString &new_branch);
    bool is_new_branch_Set() const;
    bool is_new_branch_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    bool isSignoff() const;
    void setSignoff(const bool &signoff);
    bool is_signoff_Set() const;
    bool is_signoff_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIdentity m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    OAIIdentity m_committer;
    bool m_committer_isSet;
    bool m_committer_isValid;

    OAICommitDateOptions m_dates;
    bool m_dates_isSet;
    bool m_dates_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_new_branch;
    bool m_new_branch_isSet;
    bool m_new_branch_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    bool m_signoff;
    bool m_signoff_isSet;
    bool m_signoff_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteFileOptions)

#endif // OAIDeleteFileOptions_H
