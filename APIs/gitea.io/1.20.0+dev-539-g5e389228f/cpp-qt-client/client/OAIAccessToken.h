/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessToken.h
 *
 * 
 */

#ifndef OAIAccessToken_H
#define OAIAccessToken_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessToken : public OAIObject {
public:
    OAIAccessToken();
    OAIAccessToken(QString json);
    ~OAIAccessToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getSha1() const;
    void setSha1(const QString &sha1);
    bool is_sha1_Set() const;
    bool is_sha1_Valid() const;

    QString getTokenLastEight() const;
    void setTokenLastEight(const QString &token_last_eight);
    bool is_token_last_eight_Set() const;
    bool is_token_last_eight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_sha1;
    bool m_sha1_isSet;
    bool m_sha1_isValid;

    QString m_token_last_eight;
    bool m_token_last_eight_isSet;
    bool m_token_last_eight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessToken)

#endif // OAIAccessToken_H
