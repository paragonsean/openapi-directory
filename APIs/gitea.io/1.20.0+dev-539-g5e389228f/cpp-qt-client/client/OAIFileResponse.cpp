/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileResponse::OAIFileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileResponse::OAIFileResponse() {
    this->initializeModel();
}

OAIFileResponse::~OAIFileResponse() {}

void OAIFileResponse::initializeModel() {

    m_commit_isSet = false;
    m_commit_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_verification_isSet = false;
    m_verification_isValid = false;
}

void OAIFileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileResponse::fromJsonObject(QJsonObject json) {

    m_commit_isValid = ::OpenAPI::fromJsonValue(m_commit, json[QString("commit")]);
    m_commit_isSet = !json[QString("commit")].isNull() && m_commit_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_verification_isValid = ::OpenAPI::fromJsonValue(m_verification, json[QString("verification")]);
    m_verification_isSet = !json[QString("verification")].isNull() && m_verification_isValid;
}

QString OAIFileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_commit.isSet()) {
        obj.insert(QString("commit"), ::OpenAPI::toJsonValue(m_commit));
    }
    if (m_content.isSet()) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_verification.isSet()) {
        obj.insert(QString("verification"), ::OpenAPI::toJsonValue(m_verification));
    }
    return obj;
}

OAIFileCommitResponse OAIFileResponse::getCommit() const {
    return m_commit;
}
void OAIFileResponse::setCommit(const OAIFileCommitResponse &commit) {
    m_commit = commit;
    m_commit_isSet = true;
}

bool OAIFileResponse::is_commit_Set() const{
    return m_commit_isSet;
}

bool OAIFileResponse::is_commit_Valid() const{
    return m_commit_isValid;
}

OAIContentsResponse OAIFileResponse::getContent() const {
    return m_content;
}
void OAIFileResponse::setContent(const OAIContentsResponse &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIFileResponse::is_content_Set() const{
    return m_content_isSet;
}

bool OAIFileResponse::is_content_Valid() const{
    return m_content_isValid;
}

OAIPayloadCommitVerification OAIFileResponse::getVerification() const {
    return m_verification;
}
void OAIFileResponse::setVerification(const OAIPayloadCommitVerification &verification) {
    m_verification = verification;
    m_verification_isSet = true;
}

bool OAIFileResponse::is_verification_Set() const{
    return m_verification_isSet;
}

bool OAIFileResponse::is_verification_Valid() const{
    return m_verification_isValid;
}

bool OAIFileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
