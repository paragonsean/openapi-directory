/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeneralAttachmentSettings.h
 *
 * GeneralAttachmentSettings contains global Attachment settings exposed by API
 */

#ifndef OAIGeneralAttachmentSettings_H
#define OAIGeneralAttachmentSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGeneralAttachmentSettings : public OAIObject {
public:
    OAIGeneralAttachmentSettings();
    OAIGeneralAttachmentSettings(QString json);
    ~OAIGeneralAttachmentSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllowedTypes() const;
    void setAllowedTypes(const QString &allowed_types);
    bool is_allowed_types_Set() const;
    bool is_allowed_types_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint64 getMaxFiles() const;
    void setMaxFiles(const qint64 &max_files);
    bool is_max_files_Set() const;
    bool is_max_files_Valid() const;

    qint64 getMaxSize() const;
    void setMaxSize(const qint64 &max_size);
    bool is_max_size_Set() const;
    bool is_max_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allowed_types;
    bool m_allowed_types_isSet;
    bool m_allowed_types_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint64 m_max_files;
    bool m_max_files_isSet;
    bool m_max_files_isValid;

    qint64 m_max_size;
    bool m_max_size_isSet;
    bool m_max_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeneralAttachmentSettings)

#endif // OAIGeneralAttachmentSettings_H
