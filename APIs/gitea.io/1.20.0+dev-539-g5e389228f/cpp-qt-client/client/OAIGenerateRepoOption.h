/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGenerateRepoOption.h
 *
 * GenerateRepoOption options when creating repository using a template
 */

#ifndef OAIGenerateRepoOption_H
#define OAIGenerateRepoOption_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGenerateRepoOption : public OAIObject {
public:
    OAIGenerateRepoOption();
    OAIGenerateRepoOption(QString json);
    ~OAIGenerateRepoOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAvatar() const;
    void setAvatar(const bool &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QString getDefaultBranch() const;
    void setDefaultBranch(const QString &default_branch);
    bool is_default_branch_Set() const;
    bool is_default_branch_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isGitContent() const;
    void setGitContent(const bool &git_content);
    bool is_git_content_Set() const;
    bool is_git_content_Valid() const;

    bool isGitHooks() const;
    void setGitHooks(const bool &git_hooks);
    bool is_git_hooks_Set() const;
    bool is_git_hooks_Valid() const;

    bool isLabels() const;
    void setLabels(const bool &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isRPrivate() const;
    void setRPrivate(const bool &r_private);
    bool is_r_private_Set() const;
    bool is_r_private_Valid() const;

    bool isTopics() const;
    void setTopics(const bool &topics);
    bool is_topics_Set() const;
    bool is_topics_Valid() const;

    bool isWebhooks() const;
    void setWebhooks(const bool &webhooks);
    bool is_webhooks_Set() const;
    bool is_webhooks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QString m_default_branch;
    bool m_default_branch_isSet;
    bool m_default_branch_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_git_content;
    bool m_git_content_isSet;
    bool m_git_content_isValid;

    bool m_git_hooks;
    bool m_git_hooks_isSet;
    bool m_git_hooks_isValid;

    bool m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_r_private;
    bool m_r_private_isSet;
    bool m_r_private_isValid;

    bool m_topics;
    bool m_topics_isSet;
    bool m_topics_isValid;

    bool m_webhooks;
    bool m_webhooks_isSet;
    bool m_webhooks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGenerateRepoOption)

#endif // OAIGenerateRepoOption_H
