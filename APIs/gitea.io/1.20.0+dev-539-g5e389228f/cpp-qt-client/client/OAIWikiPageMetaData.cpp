/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWikiPageMetaData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWikiPageMetaData::OAIWikiPageMetaData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWikiPageMetaData::OAIWikiPageMetaData() {
    this->initializeModel();
}

OAIWikiPageMetaData::~OAIWikiPageMetaData() {}

void OAIWikiPageMetaData::initializeModel() {

    m_html_url_isSet = false;
    m_html_url_isValid = false;

    m_last_commit_isSet = false;
    m_last_commit_isValid = false;

    m_sub_url_isSet = false;
    m_sub_url_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIWikiPageMetaData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWikiPageMetaData::fromJsonObject(QJsonObject json) {

    m_html_url_isValid = ::OpenAPI::fromJsonValue(m_html_url, json[QString("html_url")]);
    m_html_url_isSet = !json[QString("html_url")].isNull() && m_html_url_isValid;

    m_last_commit_isValid = ::OpenAPI::fromJsonValue(m_last_commit, json[QString("last_commit")]);
    m_last_commit_isSet = !json[QString("last_commit")].isNull() && m_last_commit_isValid;

    m_sub_url_isValid = ::OpenAPI::fromJsonValue(m_sub_url, json[QString("sub_url")]);
    m_sub_url_isSet = !json[QString("sub_url")].isNull() && m_sub_url_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIWikiPageMetaData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWikiPageMetaData::asJsonObject() const {
    QJsonObject obj;
    if (m_html_url_isSet) {
        obj.insert(QString("html_url"), ::OpenAPI::toJsonValue(m_html_url));
    }
    if (m_last_commit.isSet()) {
        obj.insert(QString("last_commit"), ::OpenAPI::toJsonValue(m_last_commit));
    }
    if (m_sub_url_isSet) {
        obj.insert(QString("sub_url"), ::OpenAPI::toJsonValue(m_sub_url));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIWikiPageMetaData::getHtmlUrl() const {
    return m_html_url;
}
void OAIWikiPageMetaData::setHtmlUrl(const QString &html_url) {
    m_html_url = html_url;
    m_html_url_isSet = true;
}

bool OAIWikiPageMetaData::is_html_url_Set() const{
    return m_html_url_isSet;
}

bool OAIWikiPageMetaData::is_html_url_Valid() const{
    return m_html_url_isValid;
}

OAIWikiCommit OAIWikiPageMetaData::getLastCommit() const {
    return m_last_commit;
}
void OAIWikiPageMetaData::setLastCommit(const OAIWikiCommit &last_commit) {
    m_last_commit = last_commit;
    m_last_commit_isSet = true;
}

bool OAIWikiPageMetaData::is_last_commit_Set() const{
    return m_last_commit_isSet;
}

bool OAIWikiPageMetaData::is_last_commit_Valid() const{
    return m_last_commit_isValid;
}

QString OAIWikiPageMetaData::getSubUrl() const {
    return m_sub_url;
}
void OAIWikiPageMetaData::setSubUrl(const QString &sub_url) {
    m_sub_url = sub_url;
    m_sub_url_isSet = true;
}

bool OAIWikiPageMetaData::is_sub_url_Set() const{
    return m_sub_url_isSet;
}

bool OAIWikiPageMetaData::is_sub_url_Valid() const{
    return m_sub_url_isValid;
}

QString OAIWikiPageMetaData::getTitle() const {
    return m_title;
}
void OAIWikiPageMetaData::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIWikiPageMetaData::is_title_Set() const{
    return m_title_isSet;
}

bool OAIWikiPageMetaData::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIWikiPageMetaData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_html_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_commit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWikiPageMetaData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
