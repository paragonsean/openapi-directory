/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationThread.h
 *
 * NotificationThread expose Notification on API
 */

#ifndef OAINotificationThread_H
#define OAINotificationThread_H

#include <QJsonObject>

#include "OAINotificationSubject.h"
#include "OAIRepository.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRepository;
class OAINotificationSubject;

class OAINotificationThread : public OAIObject {
public:
    OAINotificationThread();
    OAINotificationThread(QString json);
    ~OAINotificationThread() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isPinned() const;
    void setPinned(const bool &pinned);
    bool is_pinned_Set() const;
    bool is_pinned_Valid() const;

    OAIRepository getRepository() const;
    void setRepository(const OAIRepository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    OAINotificationSubject getSubject() const;
    void setSubject(const OAINotificationSubject &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    bool isUnread() const;
    void setUnread(const bool &unread);
    bool is_unread_Set() const;
    bool is_unread_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_pinned;
    bool m_pinned_isSet;
    bool m_pinned_isValid;

    OAIRepository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    OAINotificationSubject m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    bool m_unread;
    bool m_unread_isSet;
    bool m_unread_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationThread)

#endif // OAINotificationThread_H
