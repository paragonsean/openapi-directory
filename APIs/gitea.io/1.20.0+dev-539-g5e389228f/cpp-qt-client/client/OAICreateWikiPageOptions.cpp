/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateWikiPageOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateWikiPageOptions::OAICreateWikiPageOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateWikiPageOptions::OAICreateWikiPageOptions() {
    this->initializeModel();
}

OAICreateWikiPageOptions::~OAICreateWikiPageOptions() {}

void OAICreateWikiPageOptions::initializeModel() {

    m_content_base64_isSet = false;
    m_content_base64_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICreateWikiPageOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateWikiPageOptions::fromJsonObject(QJsonObject json) {

    m_content_base64_isValid = ::OpenAPI::fromJsonValue(m_content_base64, json[QString("content_base64")]);
    m_content_base64_isSet = !json[QString("content_base64")].isNull() && m_content_base64_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAICreateWikiPageOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateWikiPageOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_content_base64_isSet) {
        obj.insert(QString("content_base64"), ::OpenAPI::toJsonValue(m_content_base64));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAICreateWikiPageOptions::getContentBase64() const {
    return m_content_base64;
}
void OAICreateWikiPageOptions::setContentBase64(const QString &content_base64) {
    m_content_base64 = content_base64;
    m_content_base64_isSet = true;
}

bool OAICreateWikiPageOptions::is_content_base64_Set() const{
    return m_content_base64_isSet;
}

bool OAICreateWikiPageOptions::is_content_base64_Valid() const{
    return m_content_base64_isValid;
}

QString OAICreateWikiPageOptions::getMessage() const {
    return m_message;
}
void OAICreateWikiPageOptions::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAICreateWikiPageOptions::is_message_Set() const{
    return m_message_isSet;
}

bool OAICreateWikiPageOptions::is_message_Valid() const{
    return m_message_isValid;
}

QString OAICreateWikiPageOptions::getTitle() const {
    return m_title;
}
void OAICreateWikiPageOptions::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICreateWikiPageOptions::is_title_Set() const{
    return m_title_isSet;
}

bool OAICreateWikiPageOptions::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICreateWikiPageOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_base64_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateWikiPageOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
