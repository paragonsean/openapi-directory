/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrackedTime.h
 *
 * TrackedTime worked time for an issue / pr
 */

#ifndef OAITrackedTime_H
#define OAITrackedTime_H

#include <QJsonObject>

#include "OAIIssue.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIssue;

class OAITrackedTime : public OAIObject {
public:
    OAITrackedTime();
    OAITrackedTime(QString json);
    ~OAITrackedTime() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIIssue getIssue() const;
    void setIssue(const OAIIssue &issue);
    bool is_issue_Set() const;
    bool is_issue_Valid() const;

    qint64 getIssueId() const;
    void setIssueId(const qint64 &issue_id);
    bool is_issue_id_Set() const;
    bool is_issue_id_Valid() const;

    qint64 getTime() const;
    void setTime(const qint64 &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIIssue m_issue;
    bool m_issue_isSet;
    bool m_issue_isValid;

    qint64 m_issue_id;
    bool m_issue_id_isSet;
    bool m_issue_id_isValid;

    qint64 m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrackedTime)

#endif // OAITrackedTime_H
