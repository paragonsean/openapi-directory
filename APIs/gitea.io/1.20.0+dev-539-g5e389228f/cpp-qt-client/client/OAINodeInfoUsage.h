/**
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+dev-539-g5e389228f
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeInfoUsage.h
 *
 * NodeInfoUsage contains usage statistics for this server
 */

#ifndef OAINodeInfoUsage_H
#define OAINodeInfoUsage_H

#include <QJsonObject>

#include "OAINodeInfoUsageUsers.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINodeInfoUsageUsers;

class OAINodeInfoUsage : public OAIObject {
public:
    OAINodeInfoUsage();
    OAINodeInfoUsage(QString json);
    ~OAINodeInfoUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getLocalComments() const;
    void setLocalComments(const qint64 &local_comments);
    bool is_local_comments_Set() const;
    bool is_local_comments_Valid() const;

    qint64 getLocalPosts() const;
    void setLocalPosts(const qint64 &local_posts);
    bool is_local_posts_Set() const;
    bool is_local_posts_Valid() const;

    OAINodeInfoUsageUsers getUsers() const;
    void setUsers(const OAINodeInfoUsageUsers &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_local_comments;
    bool m_local_comments_isSet;
    bool m_local_comments_isValid;

    qint64 m_local_posts;
    bool m_local_posts_isSet;
    bool m_local_posts_isValid;

    OAINodeInfoUsageUsers m_users;
    bool m_users_isSet;
    bool m_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeInfoUsage)

#endif // OAINodeInfoUsage_H
