# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.trending_images_tile import TrendingImagesTile
from openapi_server import util


class TrendingImagesCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tiles: List[TrendingImagesTile]=None, title: str=None):
        """TrendingImagesCategory - a model defined in OpenAPI

        :param tiles: The tiles of this TrendingImagesCategory.
        :param title: The title of this TrendingImagesCategory.
        """
        self.openapi_types = {
            'tiles': List[TrendingImagesTile],
            'title': str
        }

        self.attribute_map = {
            'tiles': 'tiles',
            'title': 'title'
        }

        self._tiles = tiles
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrendingImagesCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrendingImagesCategory of this TrendingImagesCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tiles(self):
        """Gets the tiles of this TrendingImagesCategory.

        A list of images that are trending in the category. Each tile contains an image and a URL that returns more images of the subject. For example, if the category is Popular People Searches, the image is of a popular person and the URL would return more images of that person.

        :return: The tiles of this TrendingImagesCategory.
        :rtype: List[TrendingImagesTile]
        """
        return self._tiles

    @tiles.setter
    def tiles(self, tiles):
        """Sets the tiles of this TrendingImagesCategory.

        A list of images that are trending in the category. Each tile contains an image and a URL that returns more images of the subject. For example, if the category is Popular People Searches, the image is of a popular person and the URL would return more images of that person.

        :param tiles: The tiles of this TrendingImagesCategory.
        :type tiles: List[TrendingImagesTile]
        """
        if tiles is None:
            raise ValueError("Invalid value for `tiles`, must not be `None`")

        self._tiles = tiles

    @property
    def title(self):
        """Gets the title of this TrendingImagesCategory.

        The name of the image category. For example, Popular People Searches.

        :return: The title of this TrendingImagesCategory.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this TrendingImagesCategory.

        The name of the image category. For example, Popular People Searches.

        :param title: The title of this TrendingImagesCategory.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title
