# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregate_offer import AggregateOffer
from openapi_server import util


class ImagesImageMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregate_offer: AggregateOffer=None, recipe_sources_count: int=None, shopping_sources_count: int=None):
        """ImagesImageMetadata - a model defined in OpenAPI

        :param aggregate_offer: The aggregate_offer of this ImagesImageMetadata.
        :param recipe_sources_count: The recipe_sources_count of this ImagesImageMetadata.
        :param shopping_sources_count: The shopping_sources_count of this ImagesImageMetadata.
        """
        self.openapi_types = {
            'aggregate_offer': AggregateOffer,
            'recipe_sources_count': int,
            'shopping_sources_count': int
        }

        self.attribute_map = {
            'aggregate_offer': 'aggregateOffer',
            'recipe_sources_count': 'recipeSourcesCount',
            'shopping_sources_count': 'shoppingSourcesCount'
        }

        self._aggregate_offer = aggregate_offer
        self._recipe_sources_count = recipe_sources_count
        self._shopping_sources_count = shopping_sources_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImagesImageMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImagesImageMetadata of this ImagesImageMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregate_offer(self):
        """Gets the aggregate_offer of this ImagesImageMetadata.


        :return: The aggregate_offer of this ImagesImageMetadata.
        :rtype: AggregateOffer
        """
        return self._aggregate_offer

    @aggregate_offer.setter
    def aggregate_offer(self, aggregate_offer):
        """Sets the aggregate_offer of this ImagesImageMetadata.


        :param aggregate_offer: The aggregate_offer of this ImagesImageMetadata.
        :type aggregate_offer: AggregateOffer
        """

        self._aggregate_offer = aggregate_offer

    @property
    def recipe_sources_count(self):
        """Gets the recipe_sources_count of this ImagesImageMetadata.

        The number of websites that offer recipes of the food seen in the image.

        :return: The recipe_sources_count of this ImagesImageMetadata.
        :rtype: int
        """
        return self._recipe_sources_count

    @recipe_sources_count.setter
    def recipe_sources_count(self, recipe_sources_count):
        """Sets the recipe_sources_count of this ImagesImageMetadata.

        The number of websites that offer recipes of the food seen in the image.

        :param recipe_sources_count: The recipe_sources_count of this ImagesImageMetadata.
        :type recipe_sources_count: int
        """

        self._recipe_sources_count = recipe_sources_count

    @property
    def shopping_sources_count(self):
        """Gets the shopping_sources_count of this ImagesImageMetadata.

        The number of websites that offer goods of the products seen in the image.

        :return: The shopping_sources_count of this ImagesImageMetadata.
        :rtype: int
        """
        return self._shopping_sources_count

    @shopping_sources_count.setter
    def shopping_sources_count(self, shopping_sources_count):
        """Sets the shopping_sources_count of this ImagesImageMetadata.

        The number of websites that offer goods of the products seen in the image.

        :param shopping_sources_count: The shopping_sources_count of this ImagesImageMetadata.
        :type shopping_sources_count: int
        """

        self._shopping_sources_count = shopping_sources_count
