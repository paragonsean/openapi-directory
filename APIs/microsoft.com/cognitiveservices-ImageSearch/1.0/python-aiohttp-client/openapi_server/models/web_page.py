# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_work import CreativeWork
from openapi_server.models.image_object import ImageObject
from openapi_server.models.thing import Thing
from openapi_server import util


class WebPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_published: str=None, provider: List[Thing]=None, text: str=None, thumbnail_url: str=None, alternate_name: str=None, bing_id: str=None, description: str=None, image: ImageObject=None, name: str=None, url: str=None, read_link: str=None, web_search_url: str=None, id: str=None, type: str=None):
        """WebPage - a model defined in OpenAPI

        :param date_published: The date_published of this WebPage.
        :param provider: The provider of this WebPage.
        :param text: The text of this WebPage.
        :param thumbnail_url: The thumbnail_url of this WebPage.
        :param alternate_name: The alternate_name of this WebPage.
        :param bing_id: The bing_id of this WebPage.
        :param description: The description of this WebPage.
        :param image: The image of this WebPage.
        :param name: The name of this WebPage.
        :param url: The url of this WebPage.
        :param read_link: The read_link of this WebPage.
        :param web_search_url: The web_search_url of this WebPage.
        :param id: The id of this WebPage.
        :param type: The type of this WebPage.
        """
        self.openapi_types = {
            'date_published': str,
            'provider': List[Thing],
            'text': str,
            'thumbnail_url': str,
            'alternate_name': str,
            'bing_id': str,
            'description': str,
            'image': ImageObject,
            'name': str,
            'url': str,
            'read_link': str,
            'web_search_url': str,
            'id': str,
            'type': str
        }

        self.attribute_map = {
            'date_published': 'datePublished',
            'provider': 'provider',
            'text': 'text',
            'thumbnail_url': 'thumbnailUrl',
            'alternate_name': 'alternateName',
            'bing_id': 'bingId',
            'description': 'description',
            'image': 'image',
            'name': 'name',
            'url': 'url',
            'read_link': 'readLink',
            'web_search_url': 'webSearchUrl',
            'id': 'id',
            'type': '_type'
        }

        self._date_published = date_published
        self._provider = provider
        self._text = text
        self._thumbnail_url = thumbnail_url
        self._alternate_name = alternate_name
        self._bing_id = bing_id
        self._description = description
        self._image = image
        self._name = name
        self._url = url
        self._read_link = read_link
        self._web_search_url = web_search_url
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebPage of this WebPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_published(self):
        """Gets the date_published of this WebPage.

        The date on which the CreativeWork was published.

        :return: The date_published of this WebPage.
        :rtype: str
        """
        return self._date_published

    @date_published.setter
    def date_published(self, date_published):
        """Sets the date_published of this WebPage.

        The date on which the CreativeWork was published.

        :param date_published: The date_published of this WebPage.
        :type date_published: str
        """

        self._date_published = date_published

    @property
    def provider(self):
        """Gets the provider of this WebPage.

        The source of the creative work.

        :return: The provider of this WebPage.
        :rtype: List[Thing]
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this WebPage.

        The source of the creative work.

        :param provider: The provider of this WebPage.
        :type provider: List[Thing]
        """

        self._provider = provider

    @property
    def text(self):
        """Gets the text of this WebPage.

        Text content of this creative work

        :return: The text of this WebPage.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this WebPage.

        Text content of this creative work

        :param text: The text of this WebPage.
        :type text: str
        """

        self._text = text

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this WebPage.

        The URL to a thumbnail of the item.

        :return: The thumbnail_url of this WebPage.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this WebPage.

        The URL to a thumbnail of the item.

        :param thumbnail_url: The thumbnail_url of this WebPage.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url

    @property
    def alternate_name(self):
        """Gets the alternate_name of this WebPage.

        An alias for the item

        :return: The alternate_name of this WebPage.
        :rtype: str
        """
        return self._alternate_name

    @alternate_name.setter
    def alternate_name(self, alternate_name):
        """Sets the alternate_name of this WebPage.

        An alias for the item

        :param alternate_name: The alternate_name of this WebPage.
        :type alternate_name: str
        """

        self._alternate_name = alternate_name

    @property
    def bing_id(self):
        """Gets the bing_id of this WebPage.

        An ID that uniquely identifies this item.

        :return: The bing_id of this WebPage.
        :rtype: str
        """
        return self._bing_id

    @bing_id.setter
    def bing_id(self, bing_id):
        """Sets the bing_id of this WebPage.

        An ID that uniquely identifies this item.

        :param bing_id: The bing_id of this WebPage.
        :type bing_id: str
        """

        self._bing_id = bing_id

    @property
    def description(self):
        """Gets the description of this WebPage.

        A short description of the item.

        :return: The description of this WebPage.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this WebPage.

        A short description of the item.

        :param description: The description of this WebPage.
        :type description: str
        """

        self._description = description

    @property
    def image(self):
        """Gets the image of this WebPage.


        :return: The image of this WebPage.
        :rtype: ImageObject
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this WebPage.


        :param image: The image of this WebPage.
        :type image: ImageObject
        """

        self._image = image

    @property
    def name(self):
        """Gets the name of this WebPage.

        The name of the thing represented by this object.

        :return: The name of this WebPage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WebPage.

        The name of the thing represented by this object.

        :param name: The name of this WebPage.
        :type name: str
        """

        self._name = name

    @property
    def url(self):
        """Gets the url of this WebPage.

        The URL to get more information about the thing represented by this object.

        :return: The url of this WebPage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WebPage.

        The URL to get more information about the thing represented by this object.

        :param url: The url of this WebPage.
        :type url: str
        """

        self._url = url

    @property
    def read_link(self):
        """Gets the read_link of this WebPage.

        The URL that returns this resource.

        :return: The read_link of this WebPage.
        :rtype: str
        """
        return self._read_link

    @read_link.setter
    def read_link(self, read_link):
        """Sets the read_link of this WebPage.

        The URL that returns this resource.

        :param read_link: The read_link of this WebPage.
        :type read_link: str
        """

        self._read_link = read_link

    @property
    def web_search_url(self):
        """Gets the web_search_url of this WebPage.

        The URL To Bing's search result for this item.

        :return: The web_search_url of this WebPage.
        :rtype: str
        """
        return self._web_search_url

    @web_search_url.setter
    def web_search_url(self, web_search_url):
        """Sets the web_search_url of this WebPage.

        The URL To Bing's search result for this item.

        :param web_search_url: The web_search_url of this WebPage.
        :type web_search_url: str
        """

        self._web_search_url = web_search_url

    @property
    def id(self):
        """Gets the id of this WebPage.

        A String identifier.

        :return: The id of this WebPage.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WebPage.

        A String identifier.

        :param id: The id of this WebPage.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this WebPage.


        :return: The type of this WebPage.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WebPage.


        :param type: The type of this WebPage.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
