/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrendingImagesTile from './TrendingImagesTile';

/**
 * The TrendingImagesCategory model module.
 * @module model/TrendingImagesCategory
 * @version 1.0
 */
class TrendingImagesCategory {
    /**
     * Constructs a new <code>TrendingImagesCategory</code>.
     * Defines the category of trending images.
     * @alias module:model/TrendingImagesCategory
     * @param tiles {Array.<module:model/TrendingImagesTile>} A list of images that are trending in the category. Each tile contains an image and a URL that returns more images of the subject. For example, if the category is Popular People Searches, the image is of a popular person and the URL would return more images of that person.
     * @param title {String} The name of the image category. For example, Popular People Searches.
     */
    constructor(tiles, title) { 
        
        TrendingImagesCategory.initialize(this, tiles, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tiles, title) { 
        obj['tiles'] = tiles;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>TrendingImagesCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrendingImagesCategory} obj Optional instance to populate.
     * @return {module:model/TrendingImagesCategory} The populated <code>TrendingImagesCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrendingImagesCategory();

            if (data.hasOwnProperty('tiles')) {
                obj['tiles'] = ApiClient.convertToType(data['tiles'], [TrendingImagesTile]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrendingImagesCategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrendingImagesCategory</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TrendingImagesCategory.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['tiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tiles'])) {
                throw new Error("Expected the field `tiles` to be an array in the JSON data but got " + data['tiles']);
            }
            // validate the optional field `tiles` (array)
            for (const item of data['tiles']) {
                TrendingImagesTile.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

TrendingImagesCategory.RequiredProperties = ["tiles", "title"];

/**
 * A list of images that are trending in the category. Each tile contains an image and a URL that returns more images of the subject. For example, if the category is Popular People Searches, the image is of a popular person and the URL would return more images of that person.
 * @member {Array.<module:model/TrendingImagesTile>} tiles
 */
TrendingImagesCategory.prototype['tiles'] = undefined;

/**
 * The name of the image category. For example, Popular People Searches.
 * @member {String} title
 */
TrendingImagesCategory.prototype['title'] = undefined;






export default TrendingImagesCategory;

