/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageObject from './ImageObject';
import Thing from './Thing';
import WebPage from './WebPage';

/**
 * The CollectionPage model module.
 * @module model/CollectionPage
 * @version 1.0
 */
class CollectionPage {
    /**
     * Constructs a new <code>CollectionPage</code>.
     * Defines a link to a webpage that contains a collection.
     * @alias module:model/CollectionPage
     * @extends module:model/WebPage
     * @implements module:model/WebPage
     * @param type {String} 
     */
    constructor(type) { 
        WebPage.initialize(this, type);
        CollectionPage.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>CollectionPage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CollectionPage} obj Optional instance to populate.
     * @return {module:model/CollectionPage} The populated <code>CollectionPage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CollectionPage();
            WebPage.constructFromObject(data, obj);
            WebPage.constructFromObject(data, obj);

        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CollectionPage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CollectionPage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CollectionPage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

CollectionPage.RequiredProperties = ["_type"];


// Implement WebPage interface:
/**
 * The date on which the CreativeWork was published.
 * @member {String} datePublished
 */
WebPage.prototype['datePublished'] = undefined;
/**
 * The source of the creative work.
 * @member {Array.<module:model/Thing>} provider
 */
WebPage.prototype['provider'] = undefined;
/**
 * Text content of this creative work
 * @member {String} text
 */
WebPage.prototype['text'] = undefined;
/**
 * The URL to a thumbnail of the item.
 * @member {String} thumbnailUrl
 */
WebPage.prototype['thumbnailUrl'] = undefined;
/**
 * An alias for the item
 * @member {String} alternateName
 */
WebPage.prototype['alternateName'] = undefined;
/**
 * An ID that uniquely identifies this item.
 * @member {String} bingId
 */
WebPage.prototype['bingId'] = undefined;
/**
 * A short description of the item.
 * @member {String} description
 */
WebPage.prototype['description'] = undefined;
/**
 * @member {module:model/ImageObject} image
 */
WebPage.prototype['image'] = undefined;
/**
 * The name of the thing represented by this object.
 * @member {String} name
 */
WebPage.prototype['name'] = undefined;
/**
 * The URL to get more information about the thing represented by this object.
 * @member {String} url
 */
WebPage.prototype['url'] = undefined;
/**
 * The URL that returns this resource.
 * @member {String} readLink
 */
WebPage.prototype['readLink'] = undefined;
/**
 * The URL To Bing's search result for this item.
 * @member {String} webSearchUrl
 */
WebPage.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
WebPage.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
WebPage.prototype['_type'] = undefined;




export default CollectionPage;

