/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AggregateOffer from './model/AggregateOffer';
import AggregateRating from './model/AggregateRating';
import Answer from './model/Answer';
import CollectionPage from './model/CollectionPage';
import CreativeWork from './model/CreativeWork';
import Error from './model/Error';
import ErrorResponse from './model/ErrorResponse';
import Identifiable from './model/Identifiable';
import ImageGallery from './model/ImageGallery';
import ImageInsights from './model/ImageInsights';
import ImageInsightsImageCaption from './model/ImageInsightsImageCaption';
import ImageObject from './model/ImageObject';
import ImageTagsModule from './model/ImageTagsModule';
import Images from './model/Images';
import ImagesImageMetadata from './model/ImagesImageMetadata';
import ImagesModule from './model/ImagesModule';
import InsightsTag from './model/InsightsTag';
import Intangible from './model/Intangible';
import MediaObject from './model/MediaObject';
import NormalizedRectangle from './model/NormalizedRectangle';
import Offer from './model/Offer';
import Organization from './model/Organization';
import Person from './model/Person';
import PivotSuggestions from './model/PivotSuggestions';
import PropertiesItem from './model/PropertiesItem';
import Query from './model/Query';
import Rating from './model/Rating';
import Recipe from './model/Recipe';
import RecipesModule from './model/RecipesModule';
import RecognizedEntitiesModule from './model/RecognizedEntitiesModule';
import RecognizedEntity from './model/RecognizedEntity';
import RecognizedEntityGroup from './model/RecognizedEntityGroup';
import RecognizedEntityRegion from './model/RecognizedEntityRegion';
import RelatedCollectionsModule from './model/RelatedCollectionsModule';
import RelatedSearchesModule from './model/RelatedSearchesModule';
import Response from './model/Response';
import ResponseBase from './model/ResponseBase';
import SearchResultsAnswer from './model/SearchResultsAnswer';
import StructuredValue from './model/StructuredValue';
import Thing from './model/Thing';
import TrendingImages from './model/TrendingImages';
import TrendingImagesCategory from './model/TrendingImagesCategory';
import TrendingImagesTile from './model/TrendingImagesTile';
import WebPage from './model/WebPage';
import ImageDetailSearchApi from './api/ImageDetailSearchApi';
import ImageSearchApi from './api/ImageSearchApi';
import ImageTrendingSearchApi from './api/ImageTrendingSearchApi';


/**
* The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ImageSearchClient = require('index'); // See note below*.
* var xxxSvc = new ImageSearchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ImageSearchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ImageSearchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ImageSearchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AggregateOffer model constructor.
     * @property {module:model/AggregateOffer}
     */
    AggregateOffer,

    /**
     * The AggregateRating model constructor.
     * @property {module:model/AggregateRating}
     */
    AggregateRating,

    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer,

    /**
     * The CollectionPage model constructor.
     * @property {module:model/CollectionPage}
     */
    CollectionPage,

    /**
     * The CreativeWork model constructor.
     * @property {module:model/CreativeWork}
     */
    CreativeWork,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Identifiable model constructor.
     * @property {module:model/Identifiable}
     */
    Identifiable,

    /**
     * The ImageGallery model constructor.
     * @property {module:model/ImageGallery}
     */
    ImageGallery,

    /**
     * The ImageInsights model constructor.
     * @property {module:model/ImageInsights}
     */
    ImageInsights,

    /**
     * The ImageInsightsImageCaption model constructor.
     * @property {module:model/ImageInsightsImageCaption}
     */
    ImageInsightsImageCaption,

    /**
     * The ImageObject model constructor.
     * @property {module:model/ImageObject}
     */
    ImageObject,

    /**
     * The ImageTagsModule model constructor.
     * @property {module:model/ImageTagsModule}
     */
    ImageTagsModule,

    /**
     * The Images model constructor.
     * @property {module:model/Images}
     */
    Images,

    /**
     * The ImagesImageMetadata model constructor.
     * @property {module:model/ImagesImageMetadata}
     */
    ImagesImageMetadata,

    /**
     * The ImagesModule model constructor.
     * @property {module:model/ImagesModule}
     */
    ImagesModule,

    /**
     * The InsightsTag model constructor.
     * @property {module:model/InsightsTag}
     */
    InsightsTag,

    /**
     * The Intangible model constructor.
     * @property {module:model/Intangible}
     */
    Intangible,

    /**
     * The MediaObject model constructor.
     * @property {module:model/MediaObject}
     */
    MediaObject,

    /**
     * The NormalizedRectangle model constructor.
     * @property {module:model/NormalizedRectangle}
     */
    NormalizedRectangle,

    /**
     * The Offer model constructor.
     * @property {module:model/Offer}
     */
    Offer,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The Person model constructor.
     * @property {module:model/Person}
     */
    Person,

    /**
     * The PivotSuggestions model constructor.
     * @property {module:model/PivotSuggestions}
     */
    PivotSuggestions,

    /**
     * The PropertiesItem model constructor.
     * @property {module:model/PropertiesItem}
     */
    PropertiesItem,

    /**
     * The Query model constructor.
     * @property {module:model/Query}
     */
    Query,

    /**
     * The Rating model constructor.
     * @property {module:model/Rating}
     */
    Rating,

    /**
     * The Recipe model constructor.
     * @property {module:model/Recipe}
     */
    Recipe,

    /**
     * The RecipesModule model constructor.
     * @property {module:model/RecipesModule}
     */
    RecipesModule,

    /**
     * The RecognizedEntitiesModule model constructor.
     * @property {module:model/RecognizedEntitiesModule}
     */
    RecognizedEntitiesModule,

    /**
     * The RecognizedEntity model constructor.
     * @property {module:model/RecognizedEntity}
     */
    RecognizedEntity,

    /**
     * The RecognizedEntityGroup model constructor.
     * @property {module:model/RecognizedEntityGroup}
     */
    RecognizedEntityGroup,

    /**
     * The RecognizedEntityRegion model constructor.
     * @property {module:model/RecognizedEntityRegion}
     */
    RecognizedEntityRegion,

    /**
     * The RelatedCollectionsModule model constructor.
     * @property {module:model/RelatedCollectionsModule}
     */
    RelatedCollectionsModule,

    /**
     * The RelatedSearchesModule model constructor.
     * @property {module:model/RelatedSearchesModule}
     */
    RelatedSearchesModule,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The ResponseBase model constructor.
     * @property {module:model/ResponseBase}
     */
    ResponseBase,

    /**
     * The SearchResultsAnswer model constructor.
     * @property {module:model/SearchResultsAnswer}
     */
    SearchResultsAnswer,

    /**
     * The StructuredValue model constructor.
     * @property {module:model/StructuredValue}
     */
    StructuredValue,

    /**
     * The Thing model constructor.
     * @property {module:model/Thing}
     */
    Thing,

    /**
     * The TrendingImages model constructor.
     * @property {module:model/TrendingImages}
     */
    TrendingImages,

    /**
     * The TrendingImagesCategory model constructor.
     * @property {module:model/TrendingImagesCategory}
     */
    TrendingImagesCategory,

    /**
     * The TrendingImagesTile model constructor.
     * @property {module:model/TrendingImagesTile}
     */
    TrendingImagesTile,

    /**
     * The WebPage model constructor.
     * @property {module:model/WebPage}
     */
    WebPage,

    /**
    * The ImageDetailSearchApi service constructor.
    * @property {module:api/ImageDetailSearchApi}
    */
    ImageDetailSearchApi,

    /**
    * The ImageSearchApi service constructor.
    * @property {module:api/ImageSearchApi}
    */
    ImageSearchApi,

    /**
    * The ImageTrendingSearchApi service constructor.
    * @property {module:api/ImageTrendingSearchApi}
    */
    ImageTrendingSearchApi
};
