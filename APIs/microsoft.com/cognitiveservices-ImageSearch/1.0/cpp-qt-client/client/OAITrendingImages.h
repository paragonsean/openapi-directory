/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrendingImages.h
 *
 * The top-level object that the response includes when a trending images request succeeds.
 */

#ifndef OAITrendingImages_H
#define OAITrendingImages_H

#include <QJsonObject>

#include "OAIResponse.h"
#include "OAITrendingImagesCategory.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrendingImagesCategory;

class OAITrendingImages : public OAIObject {
public:
    OAITrendingImages();
    OAITrendingImages(QString json);
    ~OAITrendingImages() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITrendingImagesCategory> getCategories() const;
    void setCategories(const QList<OAITrendingImagesCategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getReadLink() const;
    void setReadLink(const QString &read_link);
    bool is_read_link_Set() const;
    bool is_read_link_Valid() const;

    QString getWebSearchUrl() const;
    void setWebSearchUrl(const QString &web_search_url);
    bool is_web_search_url_Set() const;
    bool is_web_search_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITrendingImagesCategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_read_link;
    bool m_read_link_isSet;
    bool m_read_link_isValid;

    QString m_web_search_url;
    bool m_web_search_url_isSet;
    bool m_web_search_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrendingImages)

#endif // OAITrendingImages_H
