/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageInsights.h
 *
 * The top-level object that the response includes when an image insights request succeeds. For information about requesting image insights, see the [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken) query parameter. The modules query parameter affects the fields that Bing includes in the response. If you set [modules](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#modulesrequested) to only Caption, then this object includes only the imageCaption field.
 */

#ifndef OAIImageInsights_H
#define OAIImageInsights_H

#include <QJsonObject>

#include "OAIAggregateOffer.h"
#include "OAIImageInsightsImageCaption.h"
#include "OAIImageTagsModule.h"
#include "OAIImagesModule.h"
#include "OAIQuery.h"
#include "OAIRecipesModule.h"
#include "OAIRecognizedEntitiesModule.h"
#include "OAIRelatedCollectionsModule.h"
#include "OAIRelatedSearchesModule.h"
#include "OAIResponse.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuery;
class OAIImageInsightsImageCaption;
class OAIImageTagsModule;
class OAIImagesModule;
class OAIRecipesModule;
class OAIRecognizedEntitiesModule;
class OAIRelatedCollectionsModule;
class OAIRelatedSearchesModule;
class OAIAggregateOffer;

class OAIImageInsights : public OAIObject {
public:
    OAIImageInsights();
    OAIImageInsights(QString json);
    ~OAIImageInsights() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQuery getBestRepresentativeQuery() const;
    void setBestRepresentativeQuery(const OAIQuery &best_representative_query);
    bool is_best_representative_query_Set() const;
    bool is_best_representative_query_Valid() const;

    OAIImageInsightsImageCaption getImageCaption() const;
    void setImageCaption(const OAIImageInsightsImageCaption &image_caption);
    bool is_image_caption_Set() const;
    bool is_image_caption_Valid() const;

    QString getImageInsightsToken() const;
    void setImageInsightsToken(const QString &image_insights_token);
    bool is_image_insights_token_Set() const;
    bool is_image_insights_token_Valid() const;

    OAIImageTagsModule getImageTags() const;
    void setImageTags(const OAIImageTagsModule &image_tags);
    bool is_image_tags_Set() const;
    bool is_image_tags_Valid() const;

    OAIImagesModule getPagesIncluding() const;
    void setPagesIncluding(const OAIImagesModule &pages_including);
    bool is_pages_including_Set() const;
    bool is_pages_including_Valid() const;

    OAIRecipesModule getRecipes() const;
    void setRecipes(const OAIRecipesModule &recipes);
    bool is_recipes_Set() const;
    bool is_recipes_Valid() const;

    OAIRecognizedEntitiesModule getRecognizedEntityGroups() const;
    void setRecognizedEntityGroups(const OAIRecognizedEntitiesModule &recognized_entity_groups);
    bool is_recognized_entity_groups_Set() const;
    bool is_recognized_entity_groups_Valid() const;

    OAIRelatedCollectionsModule getRelatedCollections() const;
    void setRelatedCollections(const OAIRelatedCollectionsModule &related_collections);
    bool is_related_collections_Set() const;
    bool is_related_collections_Valid() const;

    OAIRelatedSearchesModule getRelatedSearches() const;
    void setRelatedSearches(const OAIRelatedSearchesModule &related_searches);
    bool is_related_searches_Set() const;
    bool is_related_searches_Valid() const;

    OAIAggregateOffer getShoppingSources() const;
    void setShoppingSources(const OAIAggregateOffer &shopping_sources);
    bool is_shopping_sources_Set() const;
    bool is_shopping_sources_Valid() const;

    OAIImagesModule getVisuallySimilarImages() const;
    void setVisuallySimilarImages(const OAIImagesModule &visually_similar_images);
    bool is_visually_similar_images_Set() const;
    bool is_visually_similar_images_Valid() const;

    OAIImagesModule getVisuallySimilarProducts() const;
    void setVisuallySimilarProducts(const OAIImagesModule &visually_similar_products);
    bool is_visually_similar_products_Set() const;
    bool is_visually_similar_products_Valid() const;

    QString getReadLink() const;
    void setReadLink(const QString &read_link);
    bool is_read_link_Set() const;
    bool is_read_link_Valid() const;

    QString getWebSearchUrl() const;
    void setWebSearchUrl(const QString &web_search_url);
    bool is_web_search_url_Set() const;
    bool is_web_search_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQuery m_best_representative_query;
    bool m_best_representative_query_isSet;
    bool m_best_representative_query_isValid;

    OAIImageInsightsImageCaption m_image_caption;
    bool m_image_caption_isSet;
    bool m_image_caption_isValid;

    QString m_image_insights_token;
    bool m_image_insights_token_isSet;
    bool m_image_insights_token_isValid;

    OAIImageTagsModule m_image_tags;
    bool m_image_tags_isSet;
    bool m_image_tags_isValid;

    OAIImagesModule m_pages_including;
    bool m_pages_including_isSet;
    bool m_pages_including_isValid;

    OAIRecipesModule m_recipes;
    bool m_recipes_isSet;
    bool m_recipes_isValid;

    OAIRecognizedEntitiesModule m_recognized_entity_groups;
    bool m_recognized_entity_groups_isSet;
    bool m_recognized_entity_groups_isValid;

    OAIRelatedCollectionsModule m_related_collections;
    bool m_related_collections_isSet;
    bool m_related_collections_isValid;

    OAIRelatedSearchesModule m_related_searches;
    bool m_related_searches_isSet;
    bool m_related_searches_isValid;

    OAIAggregateOffer m_shopping_sources;
    bool m_shopping_sources_isSet;
    bool m_shopping_sources_isValid;

    OAIImagesModule m_visually_similar_images;
    bool m_visually_similar_images_isSet;
    bool m_visually_similar_images_isValid;

    OAIImagesModule m_visually_similar_products;
    bool m_visually_similar_products_isSet;
    bool m_visually_similar_products_isValid;

    QString m_read_link;
    bool m_read_link_isSet;
    bool m_read_link_isValid;

    QString m_web_search_url;
    bool m_web_search_url_isSet;
    bool m_web_search_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageInsights)

#endif // OAIImageInsights_H
