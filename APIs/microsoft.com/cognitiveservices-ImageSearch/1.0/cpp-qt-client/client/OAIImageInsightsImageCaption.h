/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageInsightsImageCaption.h
 *
 * Defines an image&#39;s caption.
 */

#ifndef OAIImageInsightsImageCaption_H
#define OAIImageInsightsImageCaption_H

#include <QJsonObject>

#include "OAIQuery.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuery;

class OAIImageInsightsImageCaption : public OAIObject {
public:
    OAIImageInsightsImageCaption();
    OAIImageInsightsImageCaption(QString json);
    ~OAIImageInsightsImageCaption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QString getDataSourceUrl() const;
    void setDataSourceUrl(const QString &data_source_url);
    bool is_data_source_url_Set() const;
    bool is_data_source_url_Valid() const;

    QList<OAIQuery> getRelatedSearches() const;
    void setRelatedSearches(const QList<OAIQuery> &related_searches);
    bool is_related_searches_Set() const;
    bool is_related_searches_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QString m_data_source_url;
    bool m_data_source_url_isSet;
    bool m_data_source_url_isValid;

    QList<OAIQuery> m_related_searches;
    bool m_related_searches_isSet;
    bool m_related_searches_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageInsightsImageCaption)

#endif // OAIImageInsightsImageCaption_H
