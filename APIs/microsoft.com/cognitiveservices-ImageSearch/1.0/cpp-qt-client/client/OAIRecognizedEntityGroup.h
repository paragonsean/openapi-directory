/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecognizedEntityGroup.h
 *
 * Defines a group of previously recognized entities.
 */

#ifndef OAIRecognizedEntityGroup_H
#define OAIRecognizedEntityGroup_H

#include <QJsonObject>

#include "OAIRecognizedEntityRegion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecognizedEntityRegion;

class OAIRecognizedEntityGroup : public OAIObject {
public:
    OAIRecognizedEntityGroup();
    OAIRecognizedEntityGroup(QString json);
    ~OAIRecognizedEntityGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIRecognizedEntityRegion> getRecognizedEntityRegions() const;
    void setRecognizedEntityRegions(const QList<OAIRecognizedEntityRegion> &recognized_entity_regions);
    bool is_recognized_entity_regions_Set() const;
    bool is_recognized_entity_regions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIRecognizedEntityRegion> m_recognized_entity_regions;
    bool m_recognized_entity_regions_isSet;
    bool m_recognized_entity_regions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecognizedEntityGroup)

#endif // OAIRecognizedEntityGroup_H
