/**
 * Image Search Client
 * The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelatedCollectionsModule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelatedCollectionsModule::OAIRelatedCollectionsModule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelatedCollectionsModule::OAIRelatedCollectionsModule() {
    this->initializeModel();
}

OAIRelatedCollectionsModule::~OAIRelatedCollectionsModule() {}

void OAIRelatedCollectionsModule::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIRelatedCollectionsModule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelatedCollectionsModule::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIRelatedCollectionsModule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelatedCollectionsModule::asJsonObject() const {
    QJsonObject obj;
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QList<OAIImageGallery> OAIRelatedCollectionsModule::getValue() const {
    return m_value;
}
void OAIRelatedCollectionsModule::setValue(const QList<OAIImageGallery> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIRelatedCollectionsModule::is_value_Set() const{
    return m_value_isSet;
}

bool OAIRelatedCollectionsModule::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIRelatedCollectionsModule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelatedCollectionsModule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
