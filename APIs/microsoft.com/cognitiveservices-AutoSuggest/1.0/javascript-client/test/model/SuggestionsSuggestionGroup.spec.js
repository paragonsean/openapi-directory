/**
 * AutoSuggest Client
 * Autosuggest supplies search terms derived from a root text sent to the service.  The terms Autosuggest supplies are related to the root text based on similarity and their frequency or ratings of usefulness in other searches. For examples that show how to use Autosuggest, see [Search using AutoSuggest](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-autosuggest-api-v7-reference).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AutoSuggestClient);
  }
}(this, function(expect, AutoSuggestClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AutoSuggestClient.SuggestionsSuggestionGroup();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SuggestionsSuggestionGroup', function() {
    it('should create an instance of SuggestionsSuggestionGroup', function() {
      // uncomment below and update the code to test SuggestionsSuggestionGroup
      //var instance = new AutoSuggestClient.SuggestionsSuggestionGroup();
      //expect(instance).to.be.a(AutoSuggestClient.SuggestionsSuggestionGroup);
    });

    it('should have the property type (base name: "_type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AutoSuggestClient.SuggestionsSuggestionGroup();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AutoSuggestClient.SuggestionsSuggestionGroup();
      //expect(instance).to.be();
    });

    it('should have the property searchSuggestions (base name: "searchSuggestions")', function() {
      // uncomment below and update the code to test the property searchSuggestions
      //var instance = new AutoSuggestClient.SuggestionsSuggestionGroup();
      //expect(instance).to.be();
    });

  });

}));
