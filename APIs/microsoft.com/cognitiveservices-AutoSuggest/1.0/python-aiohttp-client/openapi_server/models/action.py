# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_work import CreativeWork
from openapi_server.models.thing import Thing
from openapi_server import util


class Action(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, is_top_action: bool=None, result: List[Thing]=None, service_url: str=None, about: List[Thing]=None, comment_count: int=None, copyright_holder: Thing=None, copyright_year: int=None, creator: Thing=None, disclaimer: str=None, discussion_url: str=None, genre: List[str]=None, head_line: str=None, is_accessible_for_free: bool=None, is_family_friendly: bool=None, main_entity: Thing=None, mentions: List[Thing]=None, provider: List[Thing]=None, text: str=None, thumbnail_url: str=None, url: str=None, adaptive_card: str=None, immediate_action: List[Action]=None, potential_action: List[Action]=None, preferred_clickthrough_url: str=None, read_link: str=None, web_search_url: str=None, id: str=None, type: str=None):
        """Action - a model defined in OpenAPI

        :param display_name: The display_name of this Action.
        :param is_top_action: The is_top_action of this Action.
        :param result: The result of this Action.
        :param service_url: The service_url of this Action.
        :param about: The about of this Action.
        :param comment_count: The comment_count of this Action.
        :param copyright_holder: The copyright_holder of this Action.
        :param copyright_year: The copyright_year of this Action.
        :param creator: The creator of this Action.
        :param disclaimer: The disclaimer of this Action.
        :param discussion_url: The discussion_url of this Action.
        :param genre: The genre of this Action.
        :param head_line: The head_line of this Action.
        :param is_accessible_for_free: The is_accessible_for_free of this Action.
        :param is_family_friendly: The is_family_friendly of this Action.
        :param main_entity: The main_entity of this Action.
        :param mentions: The mentions of this Action.
        :param provider: The provider of this Action.
        :param text: The text of this Action.
        :param thumbnail_url: The thumbnail_url of this Action.
        :param url: The url of this Action.
        :param adaptive_card: The adaptive_card of this Action.
        :param immediate_action: The immediate_action of this Action.
        :param potential_action: The potential_action of this Action.
        :param preferred_clickthrough_url: The preferred_clickthrough_url of this Action.
        :param read_link: The read_link of this Action.
        :param web_search_url: The web_search_url of this Action.
        :param id: The id of this Action.
        :param type: The type of this Action.
        """
        self.openapi_types = {
            'display_name': str,
            'is_top_action': bool,
            'result': List[Thing],
            'service_url': str,
            'about': List[Thing],
            'comment_count': int,
            'copyright_holder': Thing,
            'copyright_year': int,
            'creator': Thing,
            'disclaimer': str,
            'discussion_url': str,
            'genre': List[str],
            'head_line': str,
            'is_accessible_for_free': bool,
            'is_family_friendly': bool,
            'main_entity': Thing,
            'mentions': List[Thing],
            'provider': List[Thing],
            'text': str,
            'thumbnail_url': str,
            'url': str,
            'adaptive_card': str,
            'immediate_action': List[Action],
            'potential_action': List[Action],
            'preferred_clickthrough_url': str,
            'read_link': str,
            'web_search_url': str,
            'id': str,
            'type': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'is_top_action': 'isTopAction',
            'result': 'result',
            'service_url': 'serviceUrl',
            'about': 'about',
            'comment_count': 'commentCount',
            'copyright_holder': 'copyrightHolder',
            'copyright_year': 'copyrightYear',
            'creator': 'creator',
            'disclaimer': 'disclaimer',
            'discussion_url': 'discussionUrl',
            'genre': 'genre',
            'head_line': 'headLine',
            'is_accessible_for_free': 'isAccessibleForFree',
            'is_family_friendly': 'isFamilyFriendly',
            'main_entity': 'mainEntity',
            'mentions': 'mentions',
            'provider': 'provider',
            'text': 'text',
            'thumbnail_url': 'thumbnailUrl',
            'url': 'url',
            'adaptive_card': 'adaptiveCard',
            'immediate_action': 'immediateAction',
            'potential_action': 'potentialAction',
            'preferred_clickthrough_url': 'preferredClickthroughUrl',
            'read_link': 'readLink',
            'web_search_url': 'webSearchUrl',
            'id': 'id',
            'type': '_type'
        }

        self._display_name = display_name
        self._is_top_action = is_top_action
        self._result = result
        self._service_url = service_url
        self._about = about
        self._comment_count = comment_count
        self._copyright_holder = copyright_holder
        self._copyright_year = copyright_year
        self._creator = creator
        self._disclaimer = disclaimer
        self._discussion_url = discussion_url
        self._genre = genre
        self._head_line = head_line
        self._is_accessible_for_free = is_accessible_for_free
        self._is_family_friendly = is_family_friendly
        self._main_entity = main_entity
        self._mentions = mentions
        self._provider = provider
        self._text = text
        self._thumbnail_url = thumbnail_url
        self._url = url
        self._adaptive_card = adaptive_card
        self._immediate_action = immediate_action
        self._potential_action = potential_action
        self._preferred_clickthrough_url = preferred_clickthrough_url
        self._read_link = read_link
        self._web_search_url = web_search_url
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Action':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Action of this Action.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this Action.


        :return: The display_name of this Action.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Action.


        :param display_name: The display_name of this Action.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def is_top_action(self):
        """Gets the is_top_action of this Action.


        :return: The is_top_action of this Action.
        :rtype: bool
        """
        return self._is_top_action

    @is_top_action.setter
    def is_top_action(self, is_top_action):
        """Sets the is_top_action of this Action.


        :param is_top_action: The is_top_action of this Action.
        :type is_top_action: bool
        """

        self._is_top_action = is_top_action

    @property
    def result(self):
        """Gets the result of this Action.


        :return: The result of this Action.
        :rtype: List[Thing]
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this Action.


        :param result: The result of this Action.
        :type result: List[Thing]
        """

        self._result = result

    @property
    def service_url(self):
        """Gets the service_url of this Action.


        :return: The service_url of this Action.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this Action.


        :param service_url: The service_url of this Action.
        :type service_url: str
        """

        self._service_url = service_url

    @property
    def about(self):
        """Gets the about of this Action.

        For internal use only.

        :return: The about of this Action.
        :rtype: List[Thing]
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this Action.

        For internal use only.

        :param about: The about of this Action.
        :type about: List[Thing]
        """

        self._about = about

    @property
    def comment_count(self):
        """Gets the comment_count of this Action.


        :return: The comment_count of this Action.
        :rtype: int
        """
        return self._comment_count

    @comment_count.setter
    def comment_count(self, comment_count):
        """Sets the comment_count of this Action.


        :param comment_count: The comment_count of this Action.
        :type comment_count: int
        """

        self._comment_count = comment_count

    @property
    def copyright_holder(self):
        """Gets the copyright_holder of this Action.


        :return: The copyright_holder of this Action.
        :rtype: Thing
        """
        return self._copyright_holder

    @copyright_holder.setter
    def copyright_holder(self, copyright_holder):
        """Sets the copyright_holder of this Action.


        :param copyright_holder: The copyright_holder of this Action.
        :type copyright_holder: Thing
        """

        self._copyright_holder = copyright_holder

    @property
    def copyright_year(self):
        """Gets the copyright_year of this Action.


        :return: The copyright_year of this Action.
        :rtype: int
        """
        return self._copyright_year

    @copyright_year.setter
    def copyright_year(self, copyright_year):
        """Sets the copyright_year of this Action.


        :param copyright_year: The copyright_year of this Action.
        :type copyright_year: int
        """

        self._copyright_year = copyright_year

    @property
    def creator(self):
        """Gets the creator of this Action.


        :return: The creator of this Action.
        :rtype: Thing
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this Action.


        :param creator: The creator of this Action.
        :type creator: Thing
        """

        self._creator = creator

    @property
    def disclaimer(self):
        """Gets the disclaimer of this Action.


        :return: The disclaimer of this Action.
        :rtype: str
        """
        return self._disclaimer

    @disclaimer.setter
    def disclaimer(self, disclaimer):
        """Sets the disclaimer of this Action.


        :param disclaimer: The disclaimer of this Action.
        :type disclaimer: str
        """

        self._disclaimer = disclaimer

    @property
    def discussion_url(self):
        """Gets the discussion_url of this Action.


        :return: The discussion_url of this Action.
        :rtype: str
        """
        return self._discussion_url

    @discussion_url.setter
    def discussion_url(self, discussion_url):
        """Sets the discussion_url of this Action.


        :param discussion_url: The discussion_url of this Action.
        :type discussion_url: str
        """

        self._discussion_url = discussion_url

    @property
    def genre(self):
        """Gets the genre of this Action.


        :return: The genre of this Action.
        :rtype: List[str]
        """
        return self._genre

    @genre.setter
    def genre(self, genre):
        """Sets the genre of this Action.


        :param genre: The genre of this Action.
        :type genre: List[str]
        """

        self._genre = genre

    @property
    def head_line(self):
        """Gets the head_line of this Action.


        :return: The head_line of this Action.
        :rtype: str
        """
        return self._head_line

    @head_line.setter
    def head_line(self, head_line):
        """Sets the head_line of this Action.


        :param head_line: The head_line of this Action.
        :type head_line: str
        """

        self._head_line = head_line

    @property
    def is_accessible_for_free(self):
        """Gets the is_accessible_for_free of this Action.


        :return: The is_accessible_for_free of this Action.
        :rtype: bool
        """
        return self._is_accessible_for_free

    @is_accessible_for_free.setter
    def is_accessible_for_free(self, is_accessible_for_free):
        """Sets the is_accessible_for_free of this Action.


        :param is_accessible_for_free: The is_accessible_for_free of this Action.
        :type is_accessible_for_free: bool
        """

        self._is_accessible_for_free = is_accessible_for_free

    @property
    def is_family_friendly(self):
        """Gets the is_family_friendly of this Action.


        :return: The is_family_friendly of this Action.
        :rtype: bool
        """
        return self._is_family_friendly

    @is_family_friendly.setter
    def is_family_friendly(self, is_family_friendly):
        """Sets the is_family_friendly of this Action.


        :param is_family_friendly: The is_family_friendly of this Action.
        :type is_family_friendly: bool
        """

        self._is_family_friendly = is_family_friendly

    @property
    def main_entity(self):
        """Gets the main_entity of this Action.


        :return: The main_entity of this Action.
        :rtype: Thing
        """
        return self._main_entity

    @main_entity.setter
    def main_entity(self, main_entity):
        """Sets the main_entity of this Action.


        :param main_entity: The main_entity of this Action.
        :type main_entity: Thing
        """

        self._main_entity = main_entity

    @property
    def mentions(self):
        """Gets the mentions of this Action.

        For internal use only.

        :return: The mentions of this Action.
        :rtype: List[Thing]
        """
        return self._mentions

    @mentions.setter
    def mentions(self, mentions):
        """Sets the mentions of this Action.

        For internal use only.

        :param mentions: The mentions of this Action.
        :type mentions: List[Thing]
        """

        self._mentions = mentions

    @property
    def provider(self):
        """Gets the provider of this Action.

        The source of the creative work.

        :return: The provider of this Action.
        :rtype: List[Thing]
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this Action.

        The source of the creative work.

        :param provider: The provider of this Action.
        :type provider: List[Thing]
        """

        self._provider = provider

    @property
    def text(self):
        """Gets the text of this Action.

        Text content of this creative work

        :return: The text of this Action.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Action.

        Text content of this creative work

        :param text: The text of this Action.
        :type text: str
        """

        self._text = text

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this Action.

        The URL to a thumbnail of the item.

        :return: The thumbnail_url of this Action.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this Action.

        The URL to a thumbnail of the item.

        :param thumbnail_url: The thumbnail_url of this Action.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url

    @property
    def url(self):
        """Gets the url of this Action.

        The URL to get more information about the thing represented by this object.

        :return: The url of this Action.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Action.

        The URL to get more information about the thing represented by this object.

        :param url: The url of this Action.
        :type url: str
        """

        self._url = url

    @property
    def adaptive_card(self):
        """Gets the adaptive_card of this Action.


        :return: The adaptive_card of this Action.
        :rtype: str
        """
        return self._adaptive_card

    @adaptive_card.setter
    def adaptive_card(self, adaptive_card):
        """Sets the adaptive_card of this Action.


        :param adaptive_card: The adaptive_card of this Action.
        :type adaptive_card: str
        """

        self._adaptive_card = adaptive_card

    @property
    def immediate_action(self):
        """Gets the immediate_action of this Action.


        :return: The immediate_action of this Action.
        :rtype: List[Action]
        """
        return self._immediate_action

    @immediate_action.setter
    def immediate_action(self, immediate_action):
        """Sets the immediate_action of this Action.


        :param immediate_action: The immediate_action of this Action.
        :type immediate_action: List[Action]
        """

        self._immediate_action = immediate_action

    @property
    def potential_action(self):
        """Gets the potential_action of this Action.


        :return: The potential_action of this Action.
        :rtype: List[Action]
        """
        return self._potential_action

    @potential_action.setter
    def potential_action(self, potential_action):
        """Sets the potential_action of this Action.


        :param potential_action: The potential_action of this Action.
        :type potential_action: List[Action]
        """

        self._potential_action = potential_action

    @property
    def preferred_clickthrough_url(self):
        """Gets the preferred_clickthrough_url of this Action.


        :return: The preferred_clickthrough_url of this Action.
        :rtype: str
        """
        return self._preferred_clickthrough_url

    @preferred_clickthrough_url.setter
    def preferred_clickthrough_url(self, preferred_clickthrough_url):
        """Sets the preferred_clickthrough_url of this Action.


        :param preferred_clickthrough_url: The preferred_clickthrough_url of this Action.
        :type preferred_clickthrough_url: str
        """

        self._preferred_clickthrough_url = preferred_clickthrough_url

    @property
    def read_link(self):
        """Gets the read_link of this Action.

        The URL that returns this resource.

        :return: The read_link of this Action.
        :rtype: str
        """
        return self._read_link

    @read_link.setter
    def read_link(self, read_link):
        """Sets the read_link of this Action.

        The URL that returns this resource.

        :param read_link: The read_link of this Action.
        :type read_link: str
        """

        self._read_link = read_link

    @property
    def web_search_url(self):
        """Gets the web_search_url of this Action.

        The URL To Bing's search result for this item.

        :return: The web_search_url of this Action.
        :rtype: str
        """
        return self._web_search_url

    @web_search_url.setter
    def web_search_url(self, web_search_url):
        """Sets the web_search_url of this Action.

        The URL To Bing's search result for this item.

        :param web_search_url: The web_search_url of this Action.
        :type web_search_url: str
        """

        self._web_search_url = web_search_url

    @property
    def id(self):
        """Gets the id of this Action.

        A String identifier.

        :return: The id of this Action.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Action.

        A String identifier.

        :param id: The id of this Action.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this Action.


        :return: The type of this Action.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Action.


        :param type: The type of this Action.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
