/**
 * AutoSuggest Client
 * Autosuggest supplies search terms derived from a root text sent to the service.  The terms Autosuggest supplies are related to the root text based on similarity and their frequency or ratings of usefulness in other searches. For examples that show how to use Autosuggest, see [Search using AutoSuggest](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-autosuggest-api-v7-reference).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreativeWork.h
 *
 * The most generic kind of creative work, including books, movies, photographs, software programs, etc.
 */

#ifndef OAICreativeWork_H
#define OAICreativeWork_H

#include <QJsonObject>

#include "OAIAction.h"
#include "OAIThing.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIThing;
class OAIAction;

class OAICreativeWork : public OAIObject {
public:
    OAICreativeWork();
    OAICreativeWork(QString json);
    ~OAICreativeWork() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIThing> getAbout() const;
    void setAbout(const QList<OAIThing> &about);
    bool is_about_Set() const;
    bool is_about_Valid() const;

    qint32 getCommentCount() const;
    void setCommentCount(const qint32 &comment_count);
    bool is_comment_count_Set() const;
    bool is_comment_count_Valid() const;

    OAIThing getCopyrightHolder() const;
    void setCopyrightHolder(const OAIThing &copyright_holder);
    bool is_copyright_holder_Set() const;
    bool is_copyright_holder_Valid() const;

    qint32 getCopyrightYear() const;
    void setCopyrightYear(const qint32 &copyright_year);
    bool is_copyright_year_Set() const;
    bool is_copyright_year_Valid() const;

    OAIThing getCreator() const;
    void setCreator(const OAIThing &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    QString getDisclaimer() const;
    void setDisclaimer(const QString &disclaimer);
    bool is_disclaimer_Set() const;
    bool is_disclaimer_Valid() const;

    QString getDiscussionUrl() const;
    void setDiscussionUrl(const QString &discussion_url);
    bool is_discussion_url_Set() const;
    bool is_discussion_url_Valid() const;

    QList<QString> getGenre() const;
    void setGenre(const QList<QString> &genre);
    bool is_genre_Set() const;
    bool is_genre_Valid() const;

    QString getHeadLine() const;
    void setHeadLine(const QString &head_line);
    bool is_head_line_Set() const;
    bool is_head_line_Valid() const;

    bool isIsAccessibleForFree() const;
    void setIsAccessibleForFree(const bool &is_accessible_for_free);
    bool is_is_accessible_for_free_Set() const;
    bool is_is_accessible_for_free_Valid() const;

    bool isIsFamilyFriendly() const;
    void setIsFamilyFriendly(const bool &is_family_friendly);
    bool is_is_family_friendly_Set() const;
    bool is_is_family_friendly_Valid() const;

    OAIThing getMainEntity() const;
    void setMainEntity(const OAIThing &main_entity);
    bool is_main_entity_Set() const;
    bool is_main_entity_Valid() const;

    QList<OAIThing> getMentions() const;
    void setMentions(const QList<OAIThing> &mentions);
    bool is_mentions_Set() const;
    bool is_mentions_Valid() const;

    QList<OAIThing> getProvider() const;
    void setProvider(const QList<OAIThing> &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getThumbnailUrl() const;
    void setThumbnailUrl(const QString &thumbnail_url);
    bool is_thumbnail_url_Set() const;
    bool is_thumbnail_url_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getAdaptiveCard() const;
    void setAdaptiveCard(const QString &adaptive_card);
    bool is_adaptive_card_Set() const;
    bool is_adaptive_card_Valid() const;

    QList<OAIAction> getImmediateAction() const;
    void setImmediateAction(const QList<OAIAction> &immediate_action);
    bool is_immediate_action_Set() const;
    bool is_immediate_action_Valid() const;

    QList<OAIAction> getPotentialAction() const;
    void setPotentialAction(const QList<OAIAction> &potential_action);
    bool is_potential_action_Set() const;
    bool is_potential_action_Valid() const;

    QString getPreferredClickthroughUrl() const;
    void setPreferredClickthroughUrl(const QString &preferred_clickthrough_url);
    bool is_preferred_clickthrough_url_Set() const;
    bool is_preferred_clickthrough_url_Valid() const;

    QString getReadLink() const;
    void setReadLink(const QString &read_link);
    bool is_read_link_Set() const;
    bool is_read_link_Valid() const;

    QString getWebSearchUrl() const;
    void setWebSearchUrl(const QString &web_search_url);
    bool is_web_search_url_Set() const;
    bool is_web_search_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIThing> m_about;
    bool m_about_isSet;
    bool m_about_isValid;

    qint32 m_comment_count;
    bool m_comment_count_isSet;
    bool m_comment_count_isValid;

    OAIThing m_copyright_holder;
    bool m_copyright_holder_isSet;
    bool m_copyright_holder_isValid;

    qint32 m_copyright_year;
    bool m_copyright_year_isSet;
    bool m_copyright_year_isValid;

    OAIThing m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    QString m_disclaimer;
    bool m_disclaimer_isSet;
    bool m_disclaimer_isValid;

    QString m_discussion_url;
    bool m_discussion_url_isSet;
    bool m_discussion_url_isValid;

    QList<QString> m_genre;
    bool m_genre_isSet;
    bool m_genre_isValid;

    QString m_head_line;
    bool m_head_line_isSet;
    bool m_head_line_isValid;

    bool m_is_accessible_for_free;
    bool m_is_accessible_for_free_isSet;
    bool m_is_accessible_for_free_isValid;

    bool m_is_family_friendly;
    bool m_is_family_friendly_isSet;
    bool m_is_family_friendly_isValid;

    OAIThing m_main_entity;
    bool m_main_entity_isSet;
    bool m_main_entity_isValid;

    QList<OAIThing> m_mentions;
    bool m_mentions_isSet;
    bool m_mentions_isValid;

    QList<OAIThing> m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_thumbnail_url;
    bool m_thumbnail_url_isSet;
    bool m_thumbnail_url_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_adaptive_card;
    bool m_adaptive_card_isSet;
    bool m_adaptive_card_isValid;

    QList<OAIAction> m_immediate_action;
    bool m_immediate_action_isSet;
    bool m_immediate_action_isValid;

    QList<OAIAction> m_potential_action;
    bool m_potential_action_isSet;
    bool m_potential_action_isValid;

    QString m_preferred_clickthrough_url;
    bool m_preferred_clickthrough_url_isSet;
    bool m_preferred_clickthrough_url_isValid;

    QString m_read_link;
    bool m_read_link_isSet;
    bool m_read_link_isValid;

    QString m_web_search_url;
    bool m_web_search_url_isSet;
    bool m_web_search_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreativeWork)

#endif // OAICreativeWork_H
