/**
 * Visual Search Client
 * Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview).  **NOTE:** To comply with the new EU Copyright Directive in France, the Bing Visual Search API must omit some content from certain EU News sources for French users. The removed content may include thumbnail images and videos, video previews, and snippets which accompany search results from these sources. As a consequence, the Bing APIs may serve fewer results with thumbnail images and videos, video previews, and snippets to French users.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregateRating.h
 *
 * Defines the metrics that indicate how well an item was rated by others.
 */

#ifndef OAIAggregateRating_H
#define OAIAggregateRating_H

#include <QJsonObject>

#include "OAIRating.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAggregateRating : public OAIObject {
public:
    OAIAggregateRating();
    OAIAggregateRating(QString json);
    ~OAIAggregateRating() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getReviewCount() const;
    void setReviewCount(const qint32 &review_count);
    bool is_review_count_Set() const;
    bool is_review_count_Valid() const;

    float getBestRating() const;
    void setBestRating(const float &best_rating);
    bool is_best_rating_Set() const;
    bool is_best_rating_Valid() const;

    float getRatingValue() const;
    void setRatingValue(const float &rating_value);
    bool is_rating_value_Set() const;
    bool is_rating_value_Valid() const;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_review_count;
    bool m_review_count_isSet;
    bool m_review_count_isValid;

    float m_best_rating;
    bool m_best_rating_isSet;
    bool m_best_rating_isValid;

    float m_rating_value;
    bool m_rating_value_isSet;
    bool m_rating_value_isValid;

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregateRating)

#endif // OAIAggregateRating_H
