/**
 * Visual Search Client
 * Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview).  **NOTE:** To comply with the new EU Copyright Directive in France, the Bing Visual Search API must omit some content from certain EU News sources for French users. The removed content may include thumbnail images and videos, video previews, and snippets which accompany search results from these sources. As a consequence, the Bing APIs may serve fewer results with thumbnail images and videos, video previews, and snippets to French users.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImagesImageMetadata.h
 *
 * Defines a count of the number of websites where you can shop or perform other actions related to the image.
 */

#ifndef OAIImagesImageMetadata_H
#define OAIImagesImageMetadata_H

#include <QJsonObject>

#include "OAIAggregateOffer.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAggregateOffer;

class OAIImagesImageMetadata : public OAIObject {
public:
    OAIImagesImageMetadata();
    OAIImagesImageMetadata(QString json);
    ~OAIImagesImageMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAggregateOffer getAggregateOffer() const;
    void setAggregateOffer(const OAIAggregateOffer &aggregate_offer);
    bool is_aggregate_offer_Set() const;
    bool is_aggregate_offer_Valid() const;

    qint32 getRecipeSourcesCount() const;
    void setRecipeSourcesCount(const qint32 &recipe_sources_count);
    bool is_recipe_sources_count_Set() const;
    bool is_recipe_sources_count_Valid() const;

    qint32 getShoppingSourcesCount() const;
    void setShoppingSourcesCount(const qint32 &shopping_sources_count);
    bool is_shopping_sources_count_Set() const;
    bool is_shopping_sources_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAggregateOffer m_aggregate_offer;
    bool m_aggregate_offer_isSet;
    bool m_aggregate_offer_isValid;

    qint32 m_recipe_sources_count;
    bool m_recipe_sources_count_isSet;
    bool m_recipe_sources_count_isValid;

    qint32 m_shopping_sources_count;
    bool m_shopping_sources_count_isSet;
    bool m_shopping_sources_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImagesImageMetadata)

#endif // OAIImagesImageMetadata_H
