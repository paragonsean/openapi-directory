/**
 * Visual Search Client
 * Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview).  **NOTE:** To comply with the new EU Copyright Directive in France, the Bing Visual Search API must omit some content from certain EU News sources for French users. The removed content may include thumbnail images and videos, video previews, and snippets which accompany search results from these sources. As a consequence, the Bing APIs may serve fewer results with thumbnail images and videos, video previews, and snippets to French users.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaObject.h
 *
 * Defines a media object.
 */

#ifndef OAIMediaObject_H
#define OAIMediaObject_H

#include <QJsonObject>

#include "OAICreativeWork.h"
#include "OAIImageObject.h"
#include "OAIThing.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIThing;
class OAIImageObject;

class OAIMediaObject : public OAIObject {
public:
    OAIMediaObject();
    OAIMediaObject(QString json);
    ~OAIMediaObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentSize() const;
    void setContentSize(const QString &content_size);
    bool is_content_size_Set() const;
    bool is_content_size_Valid() const;

    QString getContentUrl() const;
    void setContentUrl(const QString &content_url);
    bool is_content_url_Set() const;
    bool is_content_url_Valid() const;

    QString getEncodingFormat() const;
    void setEncodingFormat(const QString &encoding_format);
    bool is_encoding_format_Set() const;
    bool is_encoding_format_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getHostPageDisplayUrl() const;
    void setHostPageDisplayUrl(const QString &host_page_display_url);
    bool is_host_page_display_url_Set() const;
    bool is_host_page_display_url_Valid() const;

    QString getHostPageUrl() const;
    void setHostPageUrl(const QString &host_page_url);
    bool is_host_page_url_Set() const;
    bool is_host_page_url_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    QString getDatePublished() const;
    void setDatePublished(const QString &date_published);
    bool is_date_published_Set() const;
    bool is_date_published_Valid() const;

    QList<OAIThing> getProvider() const;
    void setProvider(const QList<OAIThing> &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getThumbnailUrl() const;
    void setThumbnailUrl(const QString &thumbnail_url);
    bool is_thumbnail_url_Set() const;
    bool is_thumbnail_url_Valid() const;

    QString getAlternateName() const;
    void setAlternateName(const QString &alternate_name);
    bool is_alternate_name_Set() const;
    bool is_alternate_name_Valid() const;

    QString getBingId() const;
    void setBingId(const QString &bing_id);
    bool is_bing_id_Set() const;
    bool is_bing_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIImageObject getImage() const;
    void setImage(const OAIImageObject &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getReadLink() const;
    void setReadLink(const QString &read_link);
    bool is_read_link_Set() const;
    bool is_read_link_Valid() const;

    QString getWebSearchUrl() const;
    void setWebSearchUrl(const QString &web_search_url);
    bool is_web_search_url_Set() const;
    bool is_web_search_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_size;
    bool m_content_size_isSet;
    bool m_content_size_isValid;

    QString m_content_url;
    bool m_content_url_isSet;
    bool m_content_url_isValid;

    QString m_encoding_format;
    bool m_encoding_format_isSet;
    bool m_encoding_format_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_host_page_display_url;
    bool m_host_page_display_url_isSet;
    bool m_host_page_display_url_isValid;

    QString m_host_page_url;
    bool m_host_page_url_isSet;
    bool m_host_page_url_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    QString m_date_published;
    bool m_date_published_isSet;
    bool m_date_published_isValid;

    QList<OAIThing> m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_thumbnail_url;
    bool m_thumbnail_url_isSet;
    bool m_thumbnail_url_isValid;

    QString m_alternate_name;
    bool m_alternate_name_isSet;
    bool m_alternate_name_isValid;

    QString m_bing_id;
    bool m_bing_id_isSet;
    bool m_bing_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIImageObject m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_read_link;
    bool m_read_link_isSet;
    bool m_read_link_isValid;

    QString m_web_search_url;
    bool m_web_search_url_isSet;
    bool m_web_search_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaObject)

#endif // OAIMediaObject_H
