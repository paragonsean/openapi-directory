/**
 * Visual Search Client
 * Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview).  **NOTE:** To comply with the new EU Copyright Directive in France, the Bing Visual Search API must omit some content from certain EU News sources for French users. The removed content may include thumbnail images and videos, video previews, and snippets which accompany search results from these sources. As a consequence, the Bing APIs may serve fewer results with thumbnail images and videos, video previews, and snippets to French users.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageAction from './ImageAction';
import ImageObject from './ImageObject';
import ImageTagRegion from './ImageTagRegion';
import Thing from './Thing';

/**
 * The ImageTag model module.
 * @module model/ImageTag
 * @version 1.0
 */
class ImageTag {
    /**
     * Constructs a new <code>ImageTag</code>.
     * A visual search tag.
     * @alias module:model/ImageTag
     * @extends module:model/Thing
     * @implements module:model/Thing
     */
    constructor() { 
        Thing.initialize(this);
        ImageTag.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageTag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageTag} obj Optional instance to populate.
     * @return {module:model/ImageTag} The populated <code>ImageTag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageTag();
            Thing.constructFromObject(data, obj);
            Thing.constructFromObject(data, obj);

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [ImageAction]);
            }
            if (data.hasOwnProperty('boundingBox')) {
                obj['boundingBox'] = ImageTagRegion.constructFromObject(data['boundingBox']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageTag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageTag</code>.
     */
    static validateJSON(data) {
        if (data['actions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actions'])) {
                throw new Error("Expected the field `actions` to be an array in the JSON data but got " + data['actions']);
            }
            // validate the optional field `actions` (array)
            for (const item of data['actions']) {
                ImageAction.validateJSON(item);
            };
        }
        // validate the optional field `boundingBox`
        if (data['boundingBox']) { // data not null
          ImageTagRegion.validateJSON(data['boundingBox']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * Actions within this tag. The order of the items denotes the default ranking order of these actions, with the first action being the most likely user intent.
 * @member {Array.<module:model/ImageAction>} actions
 */
ImageTag.prototype['actions'] = undefined;

/**
 * @member {module:model/ImageTagRegion} boundingBox
 */
ImageTag.prototype['boundingBox'] = undefined;

/**
 * Display name for this tag. For the default tag, the display name is empty.
 * @member {String} displayName
 */
ImageTag.prototype['displayName'] = undefined;


// Implement Thing interface:
/**
 * The URL that returns this resource. To use the URL, append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header.
 * @member {String} readLink
 */
Thing.prototype['readLink'] = undefined;
/**
 * The URL to Bing's search result for this item.
 * @member {String} webSearchUrl
 */
Thing.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
Thing.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
Thing.prototype['_type'] = undefined;




export default ImageTag;

