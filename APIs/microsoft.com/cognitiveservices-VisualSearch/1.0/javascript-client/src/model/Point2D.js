/**
 * Visual Search Client
 * Visual Search API lets you discover insights about an image such as visually similar images, shopping sources, and related searches. The API can also perform text recognition, identify entities (people, places, things), return other topical content for the user to explore, and more. For more information, see [Visual Search Overview](https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview).  **NOTE:** To comply with the new EU Copyright Directive in France, the Bing Visual Search API must omit some content from certain EU News sources for French users. The removed content may include thumbnail images and videos, video previews, and snippets which accompany search results from these sources. As a consequence, the Bing APIs may serve fewer results with thumbnail images and videos, video previews, and snippets to French users.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageObject from './ImageObject';
import StructuredValue from './StructuredValue';

/**
 * The Point2D model module.
 * @module model/Point2D
 * @version 1.0
 */
class Point2D {
    /**
     * Constructs a new <code>Point2D</code>.
     * Defines a 2D point with X and Y coordinates.
     * @alias module:model/Point2D
     * @extends module:model/StructuredValue
     * @implements module:model/StructuredValue
     */
    constructor() { 
        StructuredValue.initialize(this);
        Point2D.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['x'] = x;
        obj['y'] = y;
    }

    /**
     * Constructs a <code>Point2D</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Point2D} obj Optional instance to populate.
     * @return {module:model/Point2D} The populated <code>Point2D</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Point2D();
            StructuredValue.constructFromObject(data, obj);
            StructuredValue.constructFromObject(data, obj);

            if (data.hasOwnProperty('x')) {
                obj['x'] = ApiClient.convertToType(data['x'], 'Number');
            }
            if (data.hasOwnProperty('y')) {
                obj['y'] = ApiClient.convertToType(data['y'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Point2D</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Point2D</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Point2D.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Point2D.RequiredProperties = ["x", "y"];

/**
 * The x-coordinate of the point.
 * @member {Number} x
 */
Point2D.prototype['x'] = undefined;

/**
 * The y-coordinate of the point.
 * @member {Number} y
 */
Point2D.prototype['y'] = undefined;


// Implement StructuredValue interface:
/**
 * An alias for the item.
 * @member {String} alternateName
 */
StructuredValue.prototype['alternateName'] = undefined;
/**
 * An ID that uniquely identifies this item.
 * @member {String} bingId
 */
StructuredValue.prototype['bingId'] = undefined;
/**
 * A short description of the item.
 * @member {String} description
 */
StructuredValue.prototype['description'] = undefined;
/**
 * @member {module:model/ImageObject} image
 */
StructuredValue.prototype['image'] = undefined;
/**
 * The name of the thing represented by this object.
 * @member {String} name
 */
StructuredValue.prototype['name'] = undefined;
/**
 * The URL to get more information about the thing represented by this object.
 * @member {String} url
 */
StructuredValue.prototype['url'] = undefined;
/**
 * The URL that returns this resource. To use the URL, append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header.
 * @member {String} readLink
 */
StructuredValue.prototype['readLink'] = undefined;
/**
 * The URL to Bing's search result for this item.
 * @member {String} webSearchUrl
 */
StructuredValue.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
StructuredValue.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
StructuredValue.prototype['_type'] = undefined;




export default Point2D;

