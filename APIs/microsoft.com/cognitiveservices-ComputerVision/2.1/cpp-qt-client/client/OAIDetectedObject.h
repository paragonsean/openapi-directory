/**
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetectedObject.h
 *
 * An object detected in an image.
 */

#ifndef OAIDetectedObject_H
#define OAIDetectedObject_H

#include <QJsonObject>

#include "OAIBoundingRect.h"
#include "OAIObjectHierarchy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectHierarchy;
class OAIBoundingRect;

class OAIDetectedObject : public OAIObject {
public:
    OAIDetectedObject();
    OAIDetectedObject(QString json);
    ~OAIDetectedObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getConfidence() const;
    void setConfidence(const double &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    OAIObjectHierarchy getParent() const;
    void setParent(const OAIObjectHierarchy &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    OAIBoundingRect getRectangle() const;
    void setRectangle(const OAIBoundingRect &rectangle);
    bool is_rectangle_Set() const;
    bool is_rectangle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    OAIObjectHierarchy m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    OAIBoundingRect m_rectangle;
    bool m_rectangle_isSet;
    bool m_rectangle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetectedObject)

#endif // OAIDetectedObject_H
