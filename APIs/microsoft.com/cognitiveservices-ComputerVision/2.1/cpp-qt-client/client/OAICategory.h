/**
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategory.h
 *
 * An object describing identified category.
 */

#ifndef OAICategory_H
#define OAICategory_H

#include <QJsonObject>

#include "OAICategoryDetail.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryDetail;

class OAICategory : public OAIObject {
public:
    OAICategory();
    OAICategory(QString json);
    ~OAICategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICategoryDetail getDetail() const;
    void setDetail(const OAICategoryDetail &detail);
    bool is_detail_Set() const;
    bool is_detail_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICategoryDetail m_detail;
    bool m_detail_isSet;
    bool m_detail_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategory)

#endif // OAICategory_H
