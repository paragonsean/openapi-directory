/**
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFaceDescription.h
 *
 * An object describing a face identified in the image.
 */

#ifndef OAIFaceDescription_H
#define OAIFaceDescription_H

#include <QJsonObject>

#include "OAIFaceRectangle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFaceRectangle;

class OAIFaceDescription : public OAIObject {
public:
    OAIFaceDescription();
    OAIFaceDescription(QString json);
    ~OAIFaceDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAge() const;
    void setAge(const qint32 &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    OAIFaceRectangle getFaceRectangle() const;
    void setFaceRectangle(const OAIFaceRectangle &face_rectangle);
    bool is_face_rectangle_Set() const;
    bool is_face_rectangle_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    OAIFaceRectangle m_face_rectangle;
    bool m_face_rectangle_isSet;
    bool m_face_rectangle_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFaceDescription)

#endif // OAIFaceDescription_H
