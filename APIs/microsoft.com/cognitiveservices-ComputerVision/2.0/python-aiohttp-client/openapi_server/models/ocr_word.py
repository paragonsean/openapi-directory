# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OcrWord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounding_box: str=None, text: str=None):
        """OcrWord - a model defined in OpenAPI

        :param bounding_box: The bounding_box of this OcrWord.
        :param text: The text of this OcrWord.
        """
        self.openapi_types = {
            'bounding_box': str,
            'text': str
        }

        self.attribute_map = {
            'bounding_box': 'boundingBox',
            'text': 'text'
        }

        self._bounding_box = bounding_box
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OcrWord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OcrWord of this OcrWord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_box(self):
        """Gets the bounding_box of this OcrWord.

        Bounding box of a recognized word. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input image, after it has been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.

        :return: The bounding_box of this OcrWord.
        :rtype: str
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box):
        """Sets the bounding_box of this OcrWord.

        Bounding box of a recognized word. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input image, after it has been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.

        :param bounding_box: The bounding_box of this OcrWord.
        :type bounding_box: str
        """

        self._bounding_box = bounding_box

    @property
    def text(self):
        """Gets the text of this OcrWord.

        String value of a recognized word.

        :return: The text of this OcrWord.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this OcrWord.

        String value of a recognized word.

        :param text: The text of this OcrWord.
        :type text: str
        """

        self._text = text
