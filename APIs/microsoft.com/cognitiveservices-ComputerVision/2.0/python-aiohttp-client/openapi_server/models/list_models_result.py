# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_description import ModelDescription
from openapi_server import util


class ListModelsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, models: List[ModelDescription]=None):
        """ListModelsResult - a model defined in OpenAPI

        :param models: The models of this ListModelsResult.
        """
        self.openapi_types = {
            'models': List[ModelDescription]
        }

        self.attribute_map = {
            'models': 'models'
        }

        self._models = models

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListModelsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListModelsResult of this ListModelsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def models(self):
        """Gets the models of this ListModelsResult.

        An array of supported models.

        :return: The models of this ListModelsResult.
        :rtype: List[ModelDescription]
        """
        return self._models

    @models.setter
    def models(self, models):
        """Sets the models of this ListModelsResult.

        An array of supported models.

        :param models: The models of this ListModelsResult.
        :type models: List[ModelDescription]
        """

        self._models = models
