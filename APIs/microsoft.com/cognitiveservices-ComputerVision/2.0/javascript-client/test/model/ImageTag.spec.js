/**
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ComputerVisionClient);
  }
}(this, function(expect, ComputerVisionClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ComputerVisionClient.ImageTag();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ImageTag', function() {
    it('should create an instance of ImageTag', function() {
      // uncomment below and update the code to test ImageTag
      //var instance = new ComputerVisionClient.ImageTag();
      //expect(instance).to.be.a(ComputerVisionClient.ImageTag);
    });

    it('should have the property confidence (base name: "confidence")', function() {
      // uncomment below and update the code to test the property confidence
      //var instance = new ComputerVisionClient.ImageTag();
      //expect(instance).to.be();
    });

    it('should have the property hint (base name: "hint")', function() {
      // uncomment below and update the code to test the property hint
      //var instance = new ComputerVisionClient.ImageTag();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ComputerVisionClient.ImageTag();
      //expect(instance).to.be();
    });

  });

}));
