/**
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBoundingRect.h
 *
 * A bounding box for an area inside an image.
 */

#ifndef OAIBoundingRect_H
#define OAIBoundingRect_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBoundingRect : public OAIObject {
public:
    OAIBoundingRect();
    OAIBoundingRect(QString json);
    ~OAIBoundingRect() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getH() const;
    void setH(const qint32 &h);
    bool is_h_Set() const;
    bool is_h_Valid() const;

    qint32 getW() const;
    void setW(const qint32 &w);
    bool is_w_Set() const;
    bool is_w_Valid() const;

    qint32 getX() const;
    void setX(const qint32 &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    qint32 getY() const;
    void setY(const qint32 &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_h;
    bool m_h_isSet;
    bool m_h_isValid;

    qint32 m_w;
    bool m_w_isSet;
    bool m_w_isValid;

    qint32 m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    qint32 m_y;
    bool m_y_isSet;
    bool m_y_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBoundingRect)

#endif // OAIBoundingRect_H
