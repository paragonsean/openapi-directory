# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response import Response
from openapi_server.models.video_object import VideoObject
from openapi_server.models.videos_module import VideosModule
from openapi_server import util


class VideoDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, related_videos: VideosModule=None, video_result: VideoObject=None, web_search_url: str=None, id: str=None, type: str=None):
        """VideoDetails - a model defined in OpenAPI

        :param related_videos: The related_videos of this VideoDetails.
        :param video_result: The video_result of this VideoDetails.
        :param web_search_url: The web_search_url of this VideoDetails.
        :param id: The id of this VideoDetails.
        :param type: The type of this VideoDetails.
        """
        self.openapi_types = {
            'related_videos': VideosModule,
            'video_result': VideoObject,
            'web_search_url': str,
            'id': str,
            'type': str
        }

        self.attribute_map = {
            'related_videos': 'relatedVideos',
            'video_result': 'videoResult',
            'web_search_url': 'webSearchUrl',
            'id': 'id',
            'type': '_type'
        }

        self._related_videos = related_videos
        self._video_result = video_result
        self._web_search_url = web_search_url
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoDetails of this VideoDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def related_videos(self):
        """Gets the related_videos of this VideoDetails.


        :return: The related_videos of this VideoDetails.
        :rtype: VideosModule
        """
        return self._related_videos

    @related_videos.setter
    def related_videos(self, related_videos):
        """Sets the related_videos of this VideoDetails.


        :param related_videos: The related_videos of this VideoDetails.
        :type related_videos: VideosModule
        """

        self._related_videos = related_videos

    @property
    def video_result(self):
        """Gets the video_result of this VideoDetails.


        :return: The video_result of this VideoDetails.
        :rtype: VideoObject
        """
        return self._video_result

    @video_result.setter
    def video_result(self, video_result):
        """Sets the video_result of this VideoDetails.


        :param video_result: The video_result of this VideoDetails.
        :type video_result: VideoObject
        """

        self._video_result = video_result

    @property
    def web_search_url(self):
        """Gets the web_search_url of this VideoDetails.

        The URL To Bing's search result for this item.

        :return: The web_search_url of this VideoDetails.
        :rtype: str
        """
        return self._web_search_url

    @web_search_url.setter
    def web_search_url(self, web_search_url):
        """Sets the web_search_url of this VideoDetails.

        The URL To Bing's search result for this item.

        :param web_search_url: The web_search_url of this VideoDetails.
        :type web_search_url: str
        """

        self._web_search_url = web_search_url

    @property
    def id(self):
        """Gets the id of this VideoDetails.

        A String identifier.

        :return: The id of this VideoDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VideoDetails.

        A String identifier.

        :param id: The id of this VideoDetails.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this VideoDetails.


        :return: The type of this VideoDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VideoDetails.


        :param type: The type of this VideoDetails.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
