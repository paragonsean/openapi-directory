/*
 * Custom Vision Prediction Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomVisionError;
import java.io.File;
import org.openapitools.client.model.ImagePrediction;
import org.openapitools.client.model.ImageUrl;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImagePredictionApiApi
 */
@Disabled
public class ImagePredictionApiApiTest {

    private final ImagePredictionApiApi api = new ImagePredictionApiApi();

    /**
     * Classify an image and saves the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classifyImageTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        File imageData = null;
        String application = null;
        ImagePrediction response = api.classifyImage(projectId, publishedName, imageData, application);
        // TODO: test validations
    }

    /**
     * Classify an image url and saves the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classifyImageUrlTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        ImageUrl imageUrl = null;
        String application = null;
        ImagePrediction response = api.classifyImageUrl(projectId, publishedName, imageUrl, application);
        // TODO: test validations
    }

    /**
     * Classify an image url without saving the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classifyImageUrlWithNoStoreTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        ImageUrl imageUrl = null;
        String application = null;
        ImagePrediction response = api.classifyImageUrlWithNoStore(projectId, publishedName, imageUrl, application);
        // TODO: test validations
    }

    /**
     * Classify an image without saving the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classifyImageWithNoStoreTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        File imageData = null;
        String application = null;
        ImagePrediction response = api.classifyImageWithNoStore(projectId, publishedName, imageData, application);
        // TODO: test validations
    }

    /**
     * Detect objects in an image and saves the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detectImageTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        File imageData = null;
        String application = null;
        ImagePrediction response = api.detectImage(projectId, publishedName, imageData, application);
        // TODO: test validations
    }

    /**
     * Detect objects in an image url and saves the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detectImageUrlTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        ImageUrl imageUrl = null;
        String application = null;
        ImagePrediction response = api.detectImageUrl(projectId, publishedName, imageUrl, application);
        // TODO: test validations
    }

    /**
     * Detect objects in an image url without saving the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detectImageUrlWithNoStoreTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        ImageUrl imageUrl = null;
        String application = null;
        ImagePrediction response = api.detectImageUrlWithNoStore(projectId, publishedName, imageUrl, application);
        // TODO: test validations
    }

    /**
     * Detect objects in an image without saving the result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detectImageWithNoStoreTest() throws ApiException {
        UUID projectId = null;
        String publishedName = null;
        File imageData = null;
        String application = null;
        ImagePrediction response = api.detectImageWithNoStore(projectId, publishedName, imageData, application);
        // TODO: test validations
    }

}
