# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageTagPredictionModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, probability: float=None, tag: str=None, tag_id: str=None):
        """ImageTagPredictionModel - a model defined in OpenAPI

        :param probability: The probability of this ImageTagPredictionModel.
        :param tag: The tag of this ImageTagPredictionModel.
        :param tag_id: The tag_id of this ImageTagPredictionModel.
        """
        self.openapi_types = {
            'probability': float,
            'tag': str,
            'tag_id': str
        }

        self.attribute_map = {
            'probability': 'Probability',
            'tag': 'Tag',
            'tag_id': 'TagId'
        }

        self._probability = probability
        self._tag = tag
        self._tag_id = tag_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageTagPredictionModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageTagPredictionModel of this ImageTagPredictionModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def probability(self):
        """Gets the probability of this ImageTagPredictionModel.


        :return: The probability of this ImageTagPredictionModel.
        :rtype: float
        """
        return self._probability

    @probability.setter
    def probability(self, probability):
        """Sets the probability of this ImageTagPredictionModel.


        :param probability: The probability of this ImageTagPredictionModel.
        :type probability: float
        """

        self._probability = probability

    @property
    def tag(self):
        """Gets the tag of this ImageTagPredictionModel.


        :return: The tag of this ImageTagPredictionModel.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ImageTagPredictionModel.


        :param tag: The tag of this ImageTagPredictionModel.
        :type tag: str
        """

        self._tag = tag

    @property
    def tag_id(self):
        """Gets the tag_id of this ImageTagPredictionModel.


        :return: The tag_id of this ImageTagPredictionModel.
        :rtype: str
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id):
        """Sets the tag_id of this ImageTagPredictionModel.


        :param tag_id: The tag_id of this ImageTagPredictionModel.
        :type tag_id: str
        """

        self._tag_id = tag_id
