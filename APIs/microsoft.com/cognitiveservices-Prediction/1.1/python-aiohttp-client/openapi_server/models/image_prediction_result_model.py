# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_tag_prediction_model import ImageTagPredictionModel
from openapi_server import util


class ImagePredictionResultModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, id: str=None, iteration: str=None, predictions: List[ImageTagPredictionModel]=None, project: str=None):
        """ImagePredictionResultModel - a model defined in OpenAPI

        :param created: The created of this ImagePredictionResultModel.
        :param id: The id of this ImagePredictionResultModel.
        :param iteration: The iteration of this ImagePredictionResultModel.
        :param predictions: The predictions of this ImagePredictionResultModel.
        :param project: The project of this ImagePredictionResultModel.
        """
        self.openapi_types = {
            'created': datetime,
            'id': str,
            'iteration': str,
            'predictions': List[ImageTagPredictionModel],
            'project': str
        }

        self.attribute_map = {
            'created': 'Created',
            'id': 'Id',
            'iteration': 'Iteration',
            'predictions': 'Predictions',
            'project': 'Project'
        }

        self._created = created
        self._id = id
        self._iteration = iteration
        self._predictions = predictions
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImagePredictionResultModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImagePredictionResultModel of this ImagePredictionResultModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this ImagePredictionResultModel.


        :return: The created of this ImagePredictionResultModel.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ImagePredictionResultModel.


        :param created: The created of this ImagePredictionResultModel.
        :type created: datetime
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this ImagePredictionResultModel.


        :return: The id of this ImagePredictionResultModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ImagePredictionResultModel.


        :param id: The id of this ImagePredictionResultModel.
        :type id: str
        """

        self._id = id

    @property
    def iteration(self):
        """Gets the iteration of this ImagePredictionResultModel.


        :return: The iteration of this ImagePredictionResultModel.
        :rtype: str
        """
        return self._iteration

    @iteration.setter
    def iteration(self, iteration):
        """Sets the iteration of this ImagePredictionResultModel.


        :param iteration: The iteration of this ImagePredictionResultModel.
        :type iteration: str
        """

        self._iteration = iteration

    @property
    def predictions(self):
        """Gets the predictions of this ImagePredictionResultModel.


        :return: The predictions of this ImagePredictionResultModel.
        :rtype: List[ImageTagPredictionModel]
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions):
        """Sets the predictions of this ImagePredictionResultModel.


        :param predictions: The predictions of this ImagePredictionResultModel.
        :type predictions: List[ImageTagPredictionModel]
        """

        self._predictions = predictions

    @property
    def project(self):
        """Gets the project of this ImagePredictionResultModel.


        :return: The project of this ImagePredictionResultModel.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ImagePredictionResultModel.


        :param project: The project of this ImagePredictionResultModel.
        :type project: str
        """

        self._project = project
