/*
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ComputerVisionError;
import org.openapitools.client.model.ImageUrl;
import org.openapitools.client.model.ReadOperationResult;
import org.openapitools.client.model.TextOperationResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read File interface, the response contains a field called &#39;Operation-Location&#39;. The &#39;Operation-Location&#39; field contains the URL that you must use for your &#39;GetReadOperationResult&#39; operation to access OCR results.â€‹
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchReadFileTest() throws ApiException {
        ImageUrl imageUrl = null;
        api.batchReadFile(imageUrl);
        // TODO: test validations
    }

    /**
     * This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from &#39;Operation-Location&#39; field returned from Batch Read File interface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReadOperationResultTest() throws ApiException {
        String operationId = null;
        ReadOperationResult response = api.getReadOperationResult(operationId);
        // TODO: test validations
    }

    /**
     * This interface is used for getting text operation result. The URL to this interface should be retrieved from &#39;Operation-Location&#39; field returned from Recognize Text interface.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextOperationResultTest() throws ApiException {
        String operationId = null;
        TextOperationResult response = api.getTextOperationResult(operationId);
        // TODO: test validations
    }

    /**
     * Recognize Text operation. When you use the Recognize Text interface, the response contains a field called &#39;Operation-Location&#39;. The &#39;Operation-Location&#39; field contains the URL that you must use for your Get Recognize Text Operation Result operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recognizeTextTest() throws ApiException {
        String mode = null;
        ImageUrl imageUrl = null;
        api.recognizeText(mode, imageUrl);
        // TODO: test validations
    }

}
