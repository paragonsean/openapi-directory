/**
 * Computer Vision Client
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITextRecognitionResult.h
 *
 * An object representing a recognized text region
 */

#ifndef OAITextRecognitionResult_H
#define OAITextRecognitionResult_H

#include <QJsonObject>

#include "OAILine.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILine;

class OAITextRecognitionResult : public OAIObject {
public:
    OAITextRecognitionResult();
    OAITextRecognitionResult(QString json);
    ~OAITextRecognitionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getClockwiseOrientation() const;
    void setClockwiseOrientation(const double &clockwise_orientation);
    bool is_clockwise_orientation_Set() const;
    bool is_clockwise_orientation_Valid() const;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QList<OAILine> getLines() const;
    void setLines(const QList<OAILine> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_clockwise_orientation;
    bool m_clockwise_orientation_isSet;
    bool m_clockwise_orientation_isValid;

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QList<OAILine> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITextRecognitionResult)

#endif // OAITextRecognitionResult_H
