# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identifiable import Identifiable
from openapi_server import util


class RankingRankingItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer_type: str='WebPages', html_index: int=None, result_index: int=None, screenshot_index: int=None, textual_index: int=None, value: Identifiable=None):
        """RankingRankingItem - a model defined in OpenAPI

        :param answer_type: The answer_type of this RankingRankingItem.
        :param html_index: The html_index of this RankingRankingItem.
        :param result_index: The result_index of this RankingRankingItem.
        :param screenshot_index: The screenshot_index of this RankingRankingItem.
        :param textual_index: The textual_index of this RankingRankingItem.
        :param value: The value of this RankingRankingItem.
        """
        self.openapi_types = {
            'answer_type': str,
            'html_index': int,
            'result_index': int,
            'screenshot_index': int,
            'textual_index': int,
            'value': Identifiable
        }

        self.attribute_map = {
            'answer_type': 'answerType',
            'html_index': 'htmlIndex',
            'result_index': 'resultIndex',
            'screenshot_index': 'screenshotIndex',
            'textual_index': 'textualIndex',
            'value': 'value'
        }

        self._answer_type = answer_type
        self._html_index = html_index
        self._result_index = result_index
        self._screenshot_index = screenshot_index
        self._textual_index = textual_index
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RankingRankingItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RankingRankingItem of this RankingRankingItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer_type(self):
        """Gets the answer_type of this RankingRankingItem.

        The answer that contains the item to display. Use the type to find the answer in the SearchResponse object. The type is the name of a SearchResponse field.

        :return: The answer_type of this RankingRankingItem.
        :rtype: str
        """
        return self._answer_type

    @answer_type.setter
    def answer_type(self, answer_type):
        """Sets the answer_type of this RankingRankingItem.

        The answer that contains the item to display. Use the type to find the answer in the SearchResponse object. The type is the name of a SearchResponse field.

        :param answer_type: The answer_type of this RankingRankingItem.
        :type answer_type: str
        """
        allowed_values = ["WebPages", "Images", "SpellSuggestions", "News", "RelatedSearches", "Videos", "Computation", "TimeZone"]  # noqa: E501
        if answer_type not in allowed_values:
            raise ValueError(
                "Invalid value for `answer_type` ({0}), must be one of {1}"
                .format(answer_type, allowed_values)
            )

        self._answer_type = answer_type

    @property
    def html_index(self):
        """Gets the html_index of this RankingRankingItem.


        :return: The html_index of this RankingRankingItem.
        :rtype: int
        """
        return self._html_index

    @html_index.setter
    def html_index(self, html_index):
        """Sets the html_index of this RankingRankingItem.


        :param html_index: The html_index of this RankingRankingItem.
        :type html_index: int
        """

        self._html_index = html_index

    @property
    def result_index(self):
        """Gets the result_index of this RankingRankingItem.

        A zero-based index of the item in the answer.If the item does not include this field, display all items in the answer. For example, display all news articles in the News answer.

        :return: The result_index of this RankingRankingItem.
        :rtype: int
        """
        return self._result_index

    @result_index.setter
    def result_index(self, result_index):
        """Sets the result_index of this RankingRankingItem.

        A zero-based index of the item in the answer.If the item does not include this field, display all items in the answer. For example, display all news articles in the News answer.

        :param result_index: The result_index of this RankingRankingItem.
        :type result_index: int
        """

        self._result_index = result_index

    @property
    def screenshot_index(self):
        """Gets the screenshot_index of this RankingRankingItem.


        :return: The screenshot_index of this RankingRankingItem.
        :rtype: int
        """
        return self._screenshot_index

    @screenshot_index.setter
    def screenshot_index(self, screenshot_index):
        """Sets the screenshot_index of this RankingRankingItem.


        :param screenshot_index: The screenshot_index of this RankingRankingItem.
        :type screenshot_index: int
        """

        self._screenshot_index = screenshot_index

    @property
    def textual_index(self):
        """Gets the textual_index of this RankingRankingItem.


        :return: The textual_index of this RankingRankingItem.
        :rtype: int
        """
        return self._textual_index

    @textual_index.setter
    def textual_index(self, textual_index):
        """Sets the textual_index of this RankingRankingItem.


        :param textual_index: The textual_index of this RankingRankingItem.
        :type textual_index: int
        """

        self._textual_index = textual_index

    @property
    def value(self):
        """Gets the value of this RankingRankingItem.


        :return: The value of this RankingRankingItem.
        :rtype: Identifiable
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this RankingRankingItem.


        :param value: The value of this RankingRankingItem.
        :type value: Identifiable
        """

        self._value = value
