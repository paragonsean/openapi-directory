# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.computation import Computation
from openapi_server.models.images import Images
from openapi_server.models.news import News
from openapi_server.models.query_context import QueryContext
from openapi_server.models.ranking_ranking_response import RankingRankingResponse
from openapi_server.models.related_searches_related_search_answer import RelatedSearchesRelatedSearchAnswer
from openapi_server.models.response import Response
from openapi_server.models.spell_suggestions import SpellSuggestions
from openapi_server.models.time_zone import TimeZone
from openapi_server.models.videos import Videos
from openapi_server.models.web_web_answer import WebWebAnswer
from openapi_server import util


class SearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computation: Computation=None, images: Images=None, news: News=None, query_context: QueryContext=None, ranking_response: RankingRankingResponse=None, related_searches: RelatedSearchesRelatedSearchAnswer=None, spell_suggestions: SpellSuggestions=None, time_zone: TimeZone=None, videos: Videos=None, web_pages: WebWebAnswer=None, web_search_url: str=None, id: str=None, type: str=None):
        """SearchResponse - a model defined in OpenAPI

        :param computation: The computation of this SearchResponse.
        :param images: The images of this SearchResponse.
        :param news: The news of this SearchResponse.
        :param query_context: The query_context of this SearchResponse.
        :param ranking_response: The ranking_response of this SearchResponse.
        :param related_searches: The related_searches of this SearchResponse.
        :param spell_suggestions: The spell_suggestions of this SearchResponse.
        :param time_zone: The time_zone of this SearchResponse.
        :param videos: The videos of this SearchResponse.
        :param web_pages: The web_pages of this SearchResponse.
        :param web_search_url: The web_search_url of this SearchResponse.
        :param id: The id of this SearchResponse.
        :param type: The type of this SearchResponse.
        """
        self.openapi_types = {
            'computation': Computation,
            'images': Images,
            'news': News,
            'query_context': QueryContext,
            'ranking_response': RankingRankingResponse,
            'related_searches': RelatedSearchesRelatedSearchAnswer,
            'spell_suggestions': SpellSuggestions,
            'time_zone': TimeZone,
            'videos': Videos,
            'web_pages': WebWebAnswer,
            'web_search_url': str,
            'id': str,
            'type': str
        }

        self.attribute_map = {
            'computation': 'computation',
            'images': 'images',
            'news': 'news',
            'query_context': 'queryContext',
            'ranking_response': 'rankingResponse',
            'related_searches': 'relatedSearches',
            'spell_suggestions': 'spellSuggestions',
            'time_zone': 'timeZone',
            'videos': 'videos',
            'web_pages': 'webPages',
            'web_search_url': 'webSearchUrl',
            'id': 'id',
            'type': '_type'
        }

        self._computation = computation
        self._images = images
        self._news = news
        self._query_context = query_context
        self._ranking_response = ranking_response
        self._related_searches = related_searches
        self._spell_suggestions = spell_suggestions
        self._time_zone = time_zone
        self._videos = videos
        self._web_pages = web_pages
        self._web_search_url = web_search_url
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchResponse of this SearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computation(self):
        """Gets the computation of this SearchResponse.


        :return: The computation of this SearchResponse.
        :rtype: Computation
        """
        return self._computation

    @computation.setter
    def computation(self, computation):
        """Sets the computation of this SearchResponse.


        :param computation: The computation of this SearchResponse.
        :type computation: Computation
        """

        self._computation = computation

    @property
    def images(self):
        """Gets the images of this SearchResponse.


        :return: The images of this SearchResponse.
        :rtype: Images
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this SearchResponse.


        :param images: The images of this SearchResponse.
        :type images: Images
        """

        self._images = images

    @property
    def news(self):
        """Gets the news of this SearchResponse.


        :return: The news of this SearchResponse.
        :rtype: News
        """
        return self._news

    @news.setter
    def news(self, news):
        """Sets the news of this SearchResponse.


        :param news: The news of this SearchResponse.
        :type news: News
        """

        self._news = news

    @property
    def query_context(self):
        """Gets the query_context of this SearchResponse.


        :return: The query_context of this SearchResponse.
        :rtype: QueryContext
        """
        return self._query_context

    @query_context.setter
    def query_context(self, query_context):
        """Sets the query_context of this SearchResponse.


        :param query_context: The query_context of this SearchResponse.
        :type query_context: QueryContext
        """

        self._query_context = query_context

    @property
    def ranking_response(self):
        """Gets the ranking_response of this SearchResponse.


        :return: The ranking_response of this SearchResponse.
        :rtype: RankingRankingResponse
        """
        return self._ranking_response

    @ranking_response.setter
    def ranking_response(self, ranking_response):
        """Sets the ranking_response of this SearchResponse.


        :param ranking_response: The ranking_response of this SearchResponse.
        :type ranking_response: RankingRankingResponse
        """

        self._ranking_response = ranking_response

    @property
    def related_searches(self):
        """Gets the related_searches of this SearchResponse.


        :return: The related_searches of this SearchResponse.
        :rtype: RelatedSearchesRelatedSearchAnswer
        """
        return self._related_searches

    @related_searches.setter
    def related_searches(self, related_searches):
        """Sets the related_searches of this SearchResponse.


        :param related_searches: The related_searches of this SearchResponse.
        :type related_searches: RelatedSearchesRelatedSearchAnswer
        """

        self._related_searches = related_searches

    @property
    def spell_suggestions(self):
        """Gets the spell_suggestions of this SearchResponse.


        :return: The spell_suggestions of this SearchResponse.
        :rtype: SpellSuggestions
        """
        return self._spell_suggestions

    @spell_suggestions.setter
    def spell_suggestions(self, spell_suggestions):
        """Sets the spell_suggestions of this SearchResponse.


        :param spell_suggestions: The spell_suggestions of this SearchResponse.
        :type spell_suggestions: SpellSuggestions
        """

        self._spell_suggestions = spell_suggestions

    @property
    def time_zone(self):
        """Gets the time_zone of this SearchResponse.


        :return: The time_zone of this SearchResponse.
        :rtype: TimeZone
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this SearchResponse.


        :param time_zone: The time_zone of this SearchResponse.
        :type time_zone: TimeZone
        """

        self._time_zone = time_zone

    @property
    def videos(self):
        """Gets the videos of this SearchResponse.


        :return: The videos of this SearchResponse.
        :rtype: Videos
        """
        return self._videos

    @videos.setter
    def videos(self, videos):
        """Sets the videos of this SearchResponse.


        :param videos: The videos of this SearchResponse.
        :type videos: Videos
        """

        self._videos = videos

    @property
    def web_pages(self):
        """Gets the web_pages of this SearchResponse.


        :return: The web_pages of this SearchResponse.
        :rtype: WebWebAnswer
        """
        return self._web_pages

    @web_pages.setter
    def web_pages(self, web_pages):
        """Sets the web_pages of this SearchResponse.


        :param web_pages: The web_pages of this SearchResponse.
        :type web_pages: WebWebAnswer
        """

        self._web_pages = web_pages

    @property
    def web_search_url(self):
        """Gets the web_search_url of this SearchResponse.

        The URL To Bing's search result for this item.

        :return: The web_search_url of this SearchResponse.
        :rtype: str
        """
        return self._web_search_url

    @web_search_url.setter
    def web_search_url(self, web_search_url):
        """Sets the web_search_url of this SearchResponse.

        The URL To Bing's search result for this item.

        :param web_search_url: The web_search_url of this SearchResponse.
        :type web_search_url: str
        """

        self._web_search_url = web_search_url

    @property
    def id(self):
        """Gets the id of this SearchResponse.

        A String identifier.

        :return: The id of this SearchResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SearchResponse.

        A String identifier.

        :param id: The id of this SearchResponse.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this SearchResponse.


        :return: The type of this SearchResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SearchResponse.


        :param type: The type of this SearchResponse.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
