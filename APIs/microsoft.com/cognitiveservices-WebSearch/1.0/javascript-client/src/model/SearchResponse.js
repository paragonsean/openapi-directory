/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Computation from './Computation';
import Images from './Images';
import News from './News';
import QueryContext from './QueryContext';
import RankingRankingResponse from './RankingRankingResponse';
import RelatedSearchesRelatedSearchAnswer from './RelatedSearchesRelatedSearchAnswer';
import Response from './Response';
import SpellSuggestions from './SpellSuggestions';
import TimeZone from './TimeZone';
import Videos from './Videos';
import WebWebAnswer from './WebWebAnswer';

/**
 * The SearchResponse model module.
 * @module model/SearchResponse
 * @version 1.0
 */
class SearchResponse {
    /**
     * Constructs a new <code>SearchResponse</code>.
     * Defines the top-level object that the response includes when the request succeeds.
     * @alias module:model/SearchResponse
     * @extends module:model/Response
     * @implements module:model/Response
     * @param type {String} 
     */
    constructor(type) { 
        Response.initialize(this, type);
        SearchResponse.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>SearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResponse} obj Optional instance to populate.
     * @return {module:model/SearchResponse} The populated <code>SearchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResponse();
            Response.constructFromObject(data, obj);
            Response.constructFromObject(data, obj);

            if (data.hasOwnProperty('computation')) {
                obj['computation'] = Computation.constructFromObject(data['computation']);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = Images.constructFromObject(data['images']);
            }
            if (data.hasOwnProperty('news')) {
                obj['news'] = News.constructFromObject(data['news']);
            }
            if (data.hasOwnProperty('queryContext')) {
                obj['queryContext'] = QueryContext.constructFromObject(data['queryContext']);
            }
            if (data.hasOwnProperty('rankingResponse')) {
                obj['rankingResponse'] = RankingRankingResponse.constructFromObject(data['rankingResponse']);
            }
            if (data.hasOwnProperty('relatedSearches')) {
                obj['relatedSearches'] = RelatedSearchesRelatedSearchAnswer.constructFromObject(data['relatedSearches']);
            }
            if (data.hasOwnProperty('spellSuggestions')) {
                obj['spellSuggestions'] = SpellSuggestions.constructFromObject(data['spellSuggestions']);
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = TimeZone.constructFromObject(data['timeZone']);
            }
            if (data.hasOwnProperty('videos')) {
                obj['videos'] = Videos.constructFromObject(data['videos']);
            }
            if (data.hasOwnProperty('webPages')) {
                obj['webPages'] = WebWebAnswer.constructFromObject(data['webPages']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `computation`
        if (data['computation']) { // data not null
          Computation.validateJSON(data['computation']);
        }
        // validate the optional field `images`
        if (data['images']) { // data not null
          Images.validateJSON(data['images']);
        }
        // validate the optional field `news`
        if (data['news']) { // data not null
          News.validateJSON(data['news']);
        }
        // validate the optional field `queryContext`
        if (data['queryContext']) { // data not null
          QueryContext.validateJSON(data['queryContext']);
        }
        // validate the optional field `rankingResponse`
        if (data['rankingResponse']) { // data not null
          RankingRankingResponse.validateJSON(data['rankingResponse']);
        }
        // validate the optional field `relatedSearches`
        if (data['relatedSearches']) { // data not null
          RelatedSearchesRelatedSearchAnswer.validateJSON(data['relatedSearches']);
        }
        // validate the optional field `spellSuggestions`
        if (data['spellSuggestions']) { // data not null
          SpellSuggestions.validateJSON(data['spellSuggestions']);
        }
        // validate the optional field `timeZone`
        if (data['timeZone']) { // data not null
          TimeZone.validateJSON(data['timeZone']);
        }
        // validate the optional field `videos`
        if (data['videos']) { // data not null
          Videos.validateJSON(data['videos']);
        }
        // validate the optional field `webPages`
        if (data['webPages']) { // data not null
          WebWebAnswer.validateJSON(data['webPages']);
        }

        return true;
    }


}

SearchResponse.RequiredProperties = ["_type"];

/**
 * @member {module:model/Computation} computation
 */
SearchResponse.prototype['computation'] = undefined;

/**
 * @member {module:model/Images} images
 */
SearchResponse.prototype['images'] = undefined;

/**
 * @member {module:model/News} news
 */
SearchResponse.prototype['news'] = undefined;

/**
 * @member {module:model/QueryContext} queryContext
 */
SearchResponse.prototype['queryContext'] = undefined;

/**
 * @member {module:model/RankingRankingResponse} rankingResponse
 */
SearchResponse.prototype['rankingResponse'] = undefined;

/**
 * @member {module:model/RelatedSearchesRelatedSearchAnswer} relatedSearches
 */
SearchResponse.prototype['relatedSearches'] = undefined;

/**
 * @member {module:model/SpellSuggestions} spellSuggestions
 */
SearchResponse.prototype['spellSuggestions'] = undefined;

/**
 * @member {module:model/TimeZone} timeZone
 */
SearchResponse.prototype['timeZone'] = undefined;

/**
 * @member {module:model/Videos} videos
 */
SearchResponse.prototype['videos'] = undefined;

/**
 * @member {module:model/WebWebAnswer} webPages
 */
SearchResponse.prototype['webPages'] = undefined;


// Implement Response interface:
/**
 * A String identifier.
 * @member {String} id
 */
Response.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
Response.prototype['_type'] = undefined;




export default SearchResponse;

