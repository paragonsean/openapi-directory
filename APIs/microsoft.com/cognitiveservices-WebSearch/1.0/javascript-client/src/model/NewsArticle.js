/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Article from './Article';
import ImageObject from './ImageObject';
import Thing from './Thing';

/**
 * The NewsArticle model module.
 * @module model/NewsArticle
 * @version 1.0
 */
class NewsArticle {
    /**
     * Constructs a new <code>NewsArticle</code>.
     * Defines a news article.
     * @alias module:model/NewsArticle
     * @extends module:model/Article
     * @implements module:model/Article
     * @param type {String} 
     */
    constructor(type) { 
        Article.initialize(this, type);
        NewsArticle.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>NewsArticle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewsArticle} obj Optional instance to populate.
     * @return {module:model/NewsArticle} The populated <code>NewsArticle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewsArticle();
            Article.constructFromObject(data, obj);
            Article.constructFromObject(data, obj);

        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NewsArticle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NewsArticle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NewsArticle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

NewsArticle.RequiredProperties = ["_type"];


// Implement Article interface:
/**
 * The source of the creative work.
 * @member {Array.<module:model/Thing>} provider
 */
Article.prototype['provider'] = undefined;
/**
 * @member {String} text
 */
Article.prototype['text'] = undefined;
/**
 * The URL to a thumbnail of the item.
 * @member {String} thumbnailUrl
 */
Article.prototype['thumbnailUrl'] = undefined;
/**
 * An ID that uniquely identifies this item.
 * @member {String} bingId
 */
Article.prototype['bingId'] = undefined;
/**
 * A short description of the item.
 * @member {String} description
 */
Article.prototype['description'] = undefined;
/**
 * @member {module:model/ImageObject} image
 */
Article.prototype['image'] = undefined;
/**
 * The name of the thing represented by this object.
 * @member {String} name
 */
Article.prototype['name'] = undefined;
/**
 * The URL to get more information about the thing represented by this object.
 * @member {String} url
 */
Article.prototype['url'] = undefined;
/**
 * The URL To Bing's search result for this item.
 * @member {String} webSearchUrl
 */
Article.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
Article.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
Article.prototype['_type'] = undefined;




export default NewsArticle;

