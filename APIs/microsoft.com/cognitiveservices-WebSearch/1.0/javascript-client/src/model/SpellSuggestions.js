/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Query from './Query';
import QueryContext from './QueryContext';
import SearchResultsAnswer from './SearchResultsAnswer';

/**
 * The SpellSuggestions model module.
 * @module model/SpellSuggestions
 * @version 1.0
 */
class SpellSuggestions {
    /**
     * Constructs a new <code>SpellSuggestions</code>.
     * Defines a suggested query string that likely represents the user&#39;s intent. The search results include this response if Bing determines that the user may have intended to search for something different. For example, if the user searches for alon brown, Bing may determine that the user likely intended to search for Alton Brown instead (based on past searches by others of Alon Brown).
     * @alias module:model/SpellSuggestions
     * @extends module:model/SearchResultsAnswer
     * @implements module:model/SearchResultsAnswer
     * @param type {String} 
     */
    constructor(type) { 
        SearchResultsAnswer.initialize(this, type);
        SpellSuggestions.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['value'] = value;
    }

    /**
     * Constructs a <code>SpellSuggestions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpellSuggestions} obj Optional instance to populate.
     * @return {module:model/SpellSuggestions} The populated <code>SpellSuggestions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpellSuggestions();
            SearchResultsAnswer.constructFromObject(data, obj);
            SearchResultsAnswer.constructFromObject(data, obj);

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [Query]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpellSuggestions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpellSuggestions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SpellSuggestions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['value']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['value'])) {
                throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
            }
            // validate the optional field `value` (array)
            for (const item of data['value']) {
                Query.validateJSON(item);
            };
        }

        return true;
    }


}

SpellSuggestions.RequiredProperties = ["value", "_type"];

/**
 * A list of suggested query strings that may represent the user's intention. The list contains only one Query object.
 * @member {Array.<module:model/Query>} value
 */
SpellSuggestions.prototype['value'] = undefined;


// Implement SearchResultsAnswer interface:
/**
 * @member {Array.<module:model/Query>} followUpQueries
 */
SearchResultsAnswer.prototype['followUpQueries'] = undefined;
/**
 * The URL To Bing's search result for this item.
 * @member {String} webSearchUrl
 */
SearchResultsAnswer.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
SearchResultsAnswer.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
SearchResultsAnswer.prototype['_type'] = undefined;




export default SpellSuggestions;

