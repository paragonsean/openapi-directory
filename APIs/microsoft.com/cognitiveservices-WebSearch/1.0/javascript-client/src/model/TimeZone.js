/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Query from './Query';
import QueryContext from './QueryContext';
import SearchResultsAnswer from './SearchResultsAnswer';
import TimeZoneTimeZoneInformation from './TimeZoneTimeZoneInformation';

/**
 * The TimeZone model module.
 * @module model/TimeZone
 * @version 1.0
 */
class TimeZone {
    /**
     * Constructs a new <code>TimeZone</code>.
     * Defines the data and time of one or more geographic locations.
     * @alias module:model/TimeZone
     * @extends module:model/SearchResultsAnswer
     * @implements module:model/SearchResultsAnswer
     * @param type {String} 
     */
    constructor(type) { 
        SearchResultsAnswer.initialize(this, type);
        TimeZone.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['primaryCityTime'] = primaryCityTime;
    }

    /**
     * Constructs a <code>TimeZone</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeZone} obj Optional instance to populate.
     * @return {module:model/TimeZone} The populated <code>TimeZone</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeZone();
            SearchResultsAnswer.constructFromObject(data, obj);
            SearchResultsAnswer.constructFromObject(data, obj);

            if (data.hasOwnProperty('otherCityTimes')) {
                obj['otherCityTimes'] = ApiClient.convertToType(data['otherCityTimes'], [TimeZoneTimeZoneInformation]);
            }
            if (data.hasOwnProperty('primaryCityTime')) {
                obj['primaryCityTime'] = TimeZoneTimeZoneInformation.constructFromObject(data['primaryCityTime']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeZone</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeZone</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeZone.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['otherCityTimes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['otherCityTimes'])) {
                throw new Error("Expected the field `otherCityTimes` to be an array in the JSON data but got " + data['otherCityTimes']);
            }
            // validate the optional field `otherCityTimes` (array)
            for (const item of data['otherCityTimes']) {
                TimeZoneTimeZoneInformation.validateJSON(item);
            };
        }
        // validate the optional field `primaryCityTime`
        if (data['primaryCityTime']) { // data not null
          TimeZoneTimeZoneInformation.validateJSON(data['primaryCityTime']);
        }

        return true;
    }


}

TimeZone.RequiredProperties = ["primaryCityTime", "_type"];

/**
 * A list of dates and times of nearby time zones.
 * @member {Array.<module:model/TimeZoneTimeZoneInformation>} otherCityTimes
 */
TimeZone.prototype['otherCityTimes'] = undefined;

/**
 * @member {module:model/TimeZoneTimeZoneInformation} primaryCityTime
 */
TimeZone.prototype['primaryCityTime'] = undefined;


// Implement SearchResultsAnswer interface:
/**
 * @member {Array.<module:model/Query>} followUpQueries
 */
SearchResultsAnswer.prototype['followUpQueries'] = undefined;
/**
 * The URL To Bing's search result for this item.
 * @member {String} webSearchUrl
 */
SearchResultsAnswer.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
SearchResultsAnswer.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
SearchResultsAnswer.prototype['_type'] = undefined;




export default TimeZone;

