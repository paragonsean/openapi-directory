/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebPage from './WebPage';

/**
 * The WebWebGrouping model module.
 * @module model/WebWebGrouping
 * @version 1.0
 */
class WebWebGrouping {
    /**
     * Constructs a new <code>WebWebGrouping</code>.
     * @alias module:model/WebWebGrouping
     * @param type {String} 
     * @param webPages {Array.<module:model/WebPage>} 
     */
    constructor(type, webPages) { 
        
        WebWebGrouping.initialize(this, type, webPages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, webPages) { 
        obj['_type'] = type;
        obj['webPages'] = webPages;
    }

    /**
     * Constructs a <code>WebWebGrouping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebWebGrouping} obj Optional instance to populate.
     * @return {module:model/WebWebGrouping} The populated <code>WebWebGrouping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebWebGrouping();

            if (data.hasOwnProperty('_type')) {
                obj['_type'] = ApiClient.convertToType(data['_type'], 'String');
            }
            if (data.hasOwnProperty('webPages')) {
                obj['webPages'] = ApiClient.convertToType(data['webPages'], [WebPage]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebWebGrouping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebWebGrouping</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebWebGrouping.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_type'] && !(typeof data['_type'] === 'string' || data['_type'] instanceof String)) {
            throw new Error("Expected the field `_type` to be a primitive type in the JSON string but got " + data['_type']);
        }
        if (data['webPages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['webPages'])) {
                throw new Error("Expected the field `webPages` to be an array in the JSON data but got " + data['webPages']);
            }
            // validate the optional field `webPages` (array)
            for (const item of data['webPages']) {
                WebPage.validateJSON(item);
            };
        }

        return true;
    }


}

WebWebGrouping.RequiredProperties = ["_type", "webPages"];

/**
 * @member {String} _type
 */
WebWebGrouping.prototype['_type'] = undefined;

/**
 * @member {Array.<module:model/WebPage>} webPages
 */
WebWebGrouping.prototype['webPages'] = undefined;






export default WebWebGrouping;

