/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryContext.h
 *
 * Defines the query context that Bing used for the request.
 */

#ifndef OAIQueryContext_H
#define OAIQueryContext_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQueryContext : public OAIObject {
public:
    OAIQueryContext();
    OAIQueryContext(QString json);
    ~OAIQueryContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdultIntent() const;
    void setAdultIntent(const bool &adult_intent);
    bool is_adult_intent_Set() const;
    bool is_adult_intent_Valid() const;

    QString getAlterationOverrideQuery() const;
    void setAlterationOverrideQuery(const QString &alteration_override_query);
    bool is_alteration_override_query_Set() const;
    bool is_alteration_override_query_Valid() const;

    QString getAlteredQuery() const;
    void setAlteredQuery(const QString &altered_query);
    bool is_altered_query_Set() const;
    bool is_altered_query_Valid() const;

    bool isAskUserForLocation() const;
    void setAskUserForLocation(const bool &ask_user_for_location);
    bool is_ask_user_for_location_Set() const;
    bool is_ask_user_for_location_Valid() const;

    bool isIsTransactional() const;
    void setIsTransactional(const bool &is_transactional);
    bool is_is_transactional_Set() const;
    bool is_is_transactional_Valid() const;

    QString getOriginalQuery() const;
    void setOriginalQuery(const QString &original_query);
    bool is_original_query_Set() const;
    bool is_original_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_adult_intent;
    bool m_adult_intent_isSet;
    bool m_adult_intent_isValid;

    QString m_alteration_override_query;
    bool m_alteration_override_query_isSet;
    bool m_alteration_override_query_isValid;

    QString m_altered_query;
    bool m_altered_query_isSet;
    bool m_altered_query_isValid;

    bool m_ask_user_for_location;
    bool m_ask_user_for_location_isSet;
    bool m_ask_user_for_location_isValid;

    bool m_is_transactional;
    bool m_is_transactional_isSet;
    bool m_is_transactional_isValid;

    QString m_original_query;
    bool m_original_query_isSet;
    bool m_original_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryContext)

#endif // OAIQueryContext_H
