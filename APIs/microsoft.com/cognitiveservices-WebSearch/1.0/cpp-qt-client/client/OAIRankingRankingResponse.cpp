/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRankingRankingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRankingRankingResponse::OAIRankingRankingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRankingRankingResponse::OAIRankingRankingResponse() {
    this->initializeModel();
}

OAIRankingRankingResponse::~OAIRankingRankingResponse() {}

void OAIRankingRankingResponse::initializeModel() {

    m_mainline_isSet = false;
    m_mainline_isValid = false;

    m_pole_isSet = false;
    m_pole_isValid = false;

    m_sidebar_isSet = false;
    m_sidebar_isValid = false;
}

void OAIRankingRankingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRankingRankingResponse::fromJsonObject(QJsonObject json) {

    m_mainline_isValid = ::OpenAPI::fromJsonValue(m_mainline, json[QString("mainline")]);
    m_mainline_isSet = !json[QString("mainline")].isNull() && m_mainline_isValid;

    m_pole_isValid = ::OpenAPI::fromJsonValue(m_pole, json[QString("pole")]);
    m_pole_isSet = !json[QString("pole")].isNull() && m_pole_isValid;

    m_sidebar_isValid = ::OpenAPI::fromJsonValue(m_sidebar, json[QString("sidebar")]);
    m_sidebar_isSet = !json[QString("sidebar")].isNull() && m_sidebar_isValid;
}

QString OAIRankingRankingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRankingRankingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_mainline.isSet()) {
        obj.insert(QString("mainline"), ::OpenAPI::toJsonValue(m_mainline));
    }
    if (m_pole.isSet()) {
        obj.insert(QString("pole"), ::OpenAPI::toJsonValue(m_pole));
    }
    if (m_sidebar.isSet()) {
        obj.insert(QString("sidebar"), ::OpenAPI::toJsonValue(m_sidebar));
    }
    return obj;
}

OAIRankingRankingGroup OAIRankingRankingResponse::getMainline() const {
    return m_mainline;
}
void OAIRankingRankingResponse::setMainline(const OAIRankingRankingGroup &mainline) {
    m_mainline = mainline;
    m_mainline_isSet = true;
}

bool OAIRankingRankingResponse::is_mainline_Set() const{
    return m_mainline_isSet;
}

bool OAIRankingRankingResponse::is_mainline_Valid() const{
    return m_mainline_isValid;
}

OAIRankingRankingGroup OAIRankingRankingResponse::getPole() const {
    return m_pole;
}
void OAIRankingRankingResponse::setPole(const OAIRankingRankingGroup &pole) {
    m_pole = pole;
    m_pole_isSet = true;
}

bool OAIRankingRankingResponse::is_pole_Set() const{
    return m_pole_isSet;
}

bool OAIRankingRankingResponse::is_pole_Valid() const{
    return m_pole_isValid;
}

OAIRankingRankingGroup OAIRankingRankingResponse::getSidebar() const {
    return m_sidebar;
}
void OAIRankingRankingResponse::setSidebar(const OAIRankingRankingGroup &sidebar) {
    m_sidebar = sidebar;
    m_sidebar_isSet = true;
}

bool OAIRankingRankingResponse::is_sidebar_Set() const{
    return m_sidebar_isSet;
}

bool OAIRankingRankingResponse::is_sidebar_Valid() const{
    return m_sidebar_isValid;
}

bool OAIRankingRankingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mainline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pole.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sidebar.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRankingRankingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
