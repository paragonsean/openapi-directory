/**
 * Web Search Client
 * The Web Search API lets you send a search query to Bing and get back search results that include links to webpages, images, and more.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINews.h
 *
 * Defines a news answer.
 */

#ifndef OAINews_H
#define OAINews_H

#include <QJsonObject>

#include "OAINewsArticle.h"
#include "OAIQuery.h"
#include "OAIQueryContext.h"
#include "OAISearchResultsAnswer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINewsArticle;
class OAIQueryContext;
class OAIQuery;

class OAINews : public OAIObject {
public:
    OAINews();
    OAINews(QString json);
    ~OAINews() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<OAINewsArticle> getValue() const;
    void setValue(const QList<OAINewsArticle> &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    bool isIsFamilyFriendly() const;
    void setIsFamilyFriendly(const bool &is_family_friendly);
    bool is_is_family_friendly_Set() const;
    bool is_is_family_friendly_Valid() const;

    OAIQueryContext getQueryContext() const;
    void setQueryContext(const OAIQueryContext &query_context);
    bool is_query_context_Set() const;
    bool is_query_context_Valid() const;

    qint64 getTotalEstimatedMatches() const;
    void setTotalEstimatedMatches(const qint64 &total_estimated_matches);
    bool is_total_estimated_matches_Set() const;
    bool is_total_estimated_matches_Valid() const;

    QList<OAIQuery> getFollowUpQueries() const;
    void setFollowUpQueries(const QList<OAIQuery> &follow_up_queries);
    bool is_follow_up_queries_Set() const;
    bool is_follow_up_queries_Valid() const;

    QString getWebSearchUrl() const;
    void setWebSearchUrl(const QString &web_search_url);
    bool is_web_search_url_Set() const;
    bool is_web_search_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<OAINewsArticle> m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    bool m_is_family_friendly;
    bool m_is_family_friendly_isSet;
    bool m_is_family_friendly_isValid;

    OAIQueryContext m_query_context;
    bool m_query_context_isSet;
    bool m_query_context_isValid;

    qint64 m_total_estimated_matches;
    bool m_total_estimated_matches_isSet;
    bool m_total_estimated_matches_isValid;

    QList<OAIQuery> m_follow_up_queries;
    bool m_follow_up_queries_isSet;
    bool m_follow_up_queries_isValid;

    QString m_web_search_url;
    bool m_web_search_url_isSet;
    bool m_web_search_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINews)

#endif // OAINews_H
