/**
 * News Search Client
 * The News Search API lets you send a search query to Bing and get back a list of news that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Answer from './model/Answer';
import Article from './model/Article';
import CreativeWork from './model/CreativeWork';
import Error from './model/Error';
import ErrorResponse from './model/ErrorResponse';
import Identifiable from './model/Identifiable';
import ImageObject from './model/ImageObject';
import MediaObject from './model/MediaObject';
import News from './model/News';
import NewsArticle from './model/NewsArticle';
import NewsTopic from './model/NewsTopic';
import Organization from './model/Organization';
import Query from './model/Query';
import Response from './model/Response';
import ResponseBase from './model/ResponseBase';
import SearchResultsAnswer from './model/SearchResultsAnswer';
import Thing from './model/Thing';
import TrendingTopics from './model/TrendingTopics';
import VideoObject from './model/VideoObject';
import NewsCategoryApi from './api/NewsCategoryApi';
import NewsSearchApi from './api/NewsSearchApi';
import NewsTrendingTopicsApi from './api/NewsTrendingTopicsApi';


/**
* The News Search API lets you send a search query to Bing and get back a list of news that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NewsSearchClient = require('index'); // See note below*.
* var xxxSvc = new NewsSearchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NewsSearchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NewsSearchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NewsSearchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer,

    /**
     * The Article model constructor.
     * @property {module:model/Article}
     */
    Article,

    /**
     * The CreativeWork model constructor.
     * @property {module:model/CreativeWork}
     */
    CreativeWork,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Identifiable model constructor.
     * @property {module:model/Identifiable}
     */
    Identifiable,

    /**
     * The ImageObject model constructor.
     * @property {module:model/ImageObject}
     */
    ImageObject,

    /**
     * The MediaObject model constructor.
     * @property {module:model/MediaObject}
     */
    MediaObject,

    /**
     * The News model constructor.
     * @property {module:model/News}
     */
    News,

    /**
     * The NewsArticle model constructor.
     * @property {module:model/NewsArticle}
     */
    NewsArticle,

    /**
     * The NewsTopic model constructor.
     * @property {module:model/NewsTopic}
     */
    NewsTopic,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The Query model constructor.
     * @property {module:model/Query}
     */
    Query,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The ResponseBase model constructor.
     * @property {module:model/ResponseBase}
     */
    ResponseBase,

    /**
     * The SearchResultsAnswer model constructor.
     * @property {module:model/SearchResultsAnswer}
     */
    SearchResultsAnswer,

    /**
     * The Thing model constructor.
     * @property {module:model/Thing}
     */
    Thing,

    /**
     * The TrendingTopics model constructor.
     * @property {module:model/TrendingTopics}
     */
    TrendingTopics,

    /**
     * The VideoObject model constructor.
     * @property {module:model/VideoObject}
     */
    VideoObject,

    /**
    * The NewsCategoryApi service constructor.
    * @property {module:api/NewsCategoryApi}
    */
    NewsCategoryApi,

    /**
    * The NewsSearchApi service constructor.
    * @property {module:api/NewsSearchApi}
    */
    NewsSearchApi,

    /**
    * The NewsTrendingTopicsApi service constructor.
    * @property {module:api/NewsTrendingTopicsApi}
    */
    NewsTrendingTopicsApi
};
