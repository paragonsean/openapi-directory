/**
 * News Search Client
 * The News Search API lets you send a search query to Bing and get back a list of news that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Article from './Article';
import ImageObject from './ImageObject';
import NewsArticle from './NewsArticle';
import Thing from './Thing';
import VideoObject from './VideoObject';

/**
 * The NewsArticle model module.
 * @module model/NewsArticle
 * @version 1.0
 */
class NewsArticle {
    /**
     * Constructs a new <code>NewsArticle</code>.
     * Defines a news article.
     * @alias module:model/NewsArticle
     * @extends module:model/Article
     * @implements module:model/Article
     * @param type {String} 
     */
    constructor(type) { 
        Article.initialize(this, type);
        NewsArticle.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>NewsArticle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewsArticle} obj Optional instance to populate.
     * @return {module:model/NewsArticle} The populated <code>NewsArticle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewsArticle();
            Article.constructFromObject(data, obj);
            Article.constructFromObject(data, obj);

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('clusteredArticles')) {
                obj['clusteredArticles'] = ApiClient.convertToType(data['clusteredArticles'], [NewsArticle]);
            }
            if (data.hasOwnProperty('headline')) {
                obj['headline'] = ApiClient.convertToType(data['headline'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NewsArticle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NewsArticle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NewsArticle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        if (data['clusteredArticles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clusteredArticles'])) {
                throw new Error("Expected the field `clusteredArticles` to be an array in the JSON data but got " + data['clusteredArticles']);
            }
            // validate the optional field `clusteredArticles` (array)
            for (const item of data['clusteredArticles']) {
                NewsArticle.validateJSON(item);
            };
        }

        return true;
    }


}

NewsArticle.RequiredProperties = ["_type"];

/**
 * The news category that the article belongs to. For example, Sports. If the news category cannot be determined, the article does not include this field.
 * @member {String} category
 */
NewsArticle.prototype['category'] = undefined;

/**
 * A list of related news articles.
 * @member {Array.<module:model/NewsArticle>} clusteredArticles
 */
NewsArticle.prototype['clusteredArticles'] = undefined;

/**
 * A Boolean value that indicates whether the news article is a headline. If true, the article is a headline. The article includes this field only for news categories requests that do not specify the category query parameter.
 * @member {Boolean} headline
 */
NewsArticle.prototype['headline'] = undefined;


// Implement Article interface:
/**
 * The date on which the CreativeWork was published.
 * @member {String} datePublished
 */
Article.prototype['datePublished'] = undefined;
/**
 * The source of the creative work.
 * @member {Array.<module:model/Thing>} provider
 */
Article.prototype['provider'] = undefined;
/**
 * The URL to a thumbnail of the item.
 * @member {String} thumbnailUrl
 */
Article.prototype['thumbnailUrl'] = undefined;
/**
 * @member {module:model/VideoObject} video
 */
Article.prototype['video'] = undefined;
/**
 * An alias for the item
 * @member {String} alternateName
 */
Article.prototype['alternateName'] = undefined;
/**
 * An ID that uniquely identifies this item.
 * @member {String} bingId
 */
Article.prototype['bingId'] = undefined;
/**
 * A short description of the item.
 * @member {String} description
 */
Article.prototype['description'] = undefined;
/**
 * @member {module:model/ImageObject} image
 */
Article.prototype['image'] = undefined;
/**
 * The name of the thing represented by this object.
 * @member {String} name
 */
Article.prototype['name'] = undefined;
/**
 * The URL to get more information about the thing represented by this object.
 * @member {String} url
 */
Article.prototype['url'] = undefined;
/**
 * The URL To Bing's search result for this item.
 * @member {String} webSearchUrl
 */
Article.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
Article.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
Article.prototype['_type'] = undefined;




export default NewsArticle;

