/**
 * Local Search Client
 * The Local Search client lets you send a search query to Bing and get back search results that include local businesses such as restaurants, hotels, retail stores, or other local businesses. The query can specify the name of the local business or it can ask for a list (for example, restaurants near me).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntitiesEntityPresentationInfo.h
 *
 * Defines additional information about an entity such as type hints.
 */

#ifndef OAIEntitiesEntityPresentationInfo_H
#define OAIEntitiesEntityPresentationInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntitiesEntityPresentationInfo : public OAIObject {
public:
    OAIEntitiesEntityPresentationInfo();
    OAIEntitiesEntityPresentationInfo(QString json);
    ~OAIEntitiesEntityPresentationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    QString getEntityScenario() const;
    void setEntityScenario(const QString &entity_scenario);
    bool is_entity_scenario_Set() const;
    bool is_entity_scenario_Valid() const;

    QList<QString> getEntitySubTypeHints() const;
    void setEntitySubTypeHints(const QList<QString> &entity_sub_type_hints);
    bool is_entity_sub_type_hints_Set() const;
    bool is_entity_sub_type_hints_Valid() const;

    QString getEntityTypeDisplayHint() const;
    void setEntityTypeDisplayHint(const QString &entity_type_display_hint);
    bool is_entity_type_display_hint_Set() const;
    bool is_entity_type_display_hint_Valid() const;

    QList<QString> getEntityTypeHints() const;
    void setEntityTypeHints(const QList<QString> &entity_type_hints);
    bool is_entity_type_hints_Set() const;
    bool is_entity_type_hints_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;

    QString m_entity_scenario;
    bool m_entity_scenario_isSet;
    bool m_entity_scenario_isValid;

    QList<QString> m_entity_sub_type_hints;
    bool m_entity_sub_type_hints_isSet;
    bool m_entity_sub_type_hints_isValid;

    QString m_entity_type_display_hint;
    bool m_entity_type_display_hint_isSet;
    bool m_entity_type_display_hint_isValid;

    QList<QString> m_entity_type_hints;
    bool m_entity_type_hints_isSet;
    bool m_entity_type_hints_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntitiesEntityPresentationInfo)

#endif // OAIEntitiesEntityPresentationInfo_H
