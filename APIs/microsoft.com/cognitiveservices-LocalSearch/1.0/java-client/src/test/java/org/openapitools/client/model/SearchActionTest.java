/*
 * Local Search Client
 * The Local Search client lets you send a search query to Bing and get back search results that include local businesses such as restaurants, hotels, retail stores, or other local businesses. The query can specify the name of the local business or it can ask for a list (for example, restaurants near me).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Action;
import org.openapitools.client.model.Answer;
import org.openapitools.client.model.EntitiesEntityPresentationInfo;
import org.openapitools.client.model.Place;
import org.openapitools.client.model.Thing;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SearchAction
 */
public class SearchActionTest {
    private final SearchAction model = new SearchAction();

    /**
     * Model tests for SearchAction
     */
    @Test
    public void testSearchAction() {
        // TODO: test SearchAction
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'isTopAction'
     */
    @Test
    public void isTopActionTest() {
        // TODO: test isTopAction
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'result'
     */
    @Test
    public void resultTest() {
        // TODO: test result
    }

    /**
     * Test the property 'serviceUrl'
     */
    @Test
    public void serviceUrlTest() {
        // TODO: test serviceUrl
    }

    /**
     * Test the property 'about'
     */
    @Test
    public void aboutTest() {
        // TODO: test about
    }

    /**
     * Test the property 'commentCount'
     */
    @Test
    public void commentCountTest() {
        // TODO: test commentCount
    }

    /**
     * Test the property 'copyrightHolder'
     */
    @Test
    public void copyrightHolderTest() {
        // TODO: test copyrightHolder
    }

    /**
     * Test the property 'copyrightYear'
     */
    @Test
    public void copyrightYearTest() {
        // TODO: test copyrightYear
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'disclaimer'
     */
    @Test
    public void disclaimerTest() {
        // TODO: test disclaimer
    }

    /**
     * Test the property 'discussionUrl'
     */
    @Test
    public void discussionUrlTest() {
        // TODO: test discussionUrl
    }

    /**
     * Test the property 'genre'
     */
    @Test
    public void genreTest() {
        // TODO: test genre
    }

    /**
     * Test the property 'headLine'
     */
    @Test
    public void headLineTest() {
        // TODO: test headLine
    }

    /**
     * Test the property 'isAccessibleForFree'
     */
    @Test
    public void isAccessibleForFreeTest() {
        // TODO: test isAccessibleForFree
    }

    /**
     * Test the property 'isFamilyFriendly'
     */
    @Test
    public void isFamilyFriendlyTest() {
        // TODO: test isFamilyFriendly
    }

    /**
     * Test the property 'mainEntity'
     */
    @Test
    public void mainEntityTest() {
        // TODO: test mainEntity
    }

    /**
     * Test the property 'mentions'
     */
    @Test
    public void mentionsTest() {
        // TODO: test mentions
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'thumbnailUrl'
     */
    @Test
    public void thumbnailUrlTest() {
        // TODO: test thumbnailUrl
    }

    /**
     * Test the property 'entityPresentationInfo'
     */
    @Test
    public void entityPresentationInfoTest() {
        // TODO: test entityPresentationInfo
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'adaptiveCard'
     */
    @Test
    public void adaptiveCardTest() {
        // TODO: test adaptiveCard
    }

    /**
     * Test the property 'immediateAction'
     */
    @Test
    public void immediateActionTest() {
        // TODO: test immediateAction
    }

    /**
     * Test the property 'potentialAction'
     */
    @Test
    public void potentialActionTest() {
        // TODO: test potentialAction
    }

    /**
     * Test the property 'preferredClickthroughUrl'
     */
    @Test
    public void preferredClickthroughUrlTest() {
        // TODO: test preferredClickthroughUrl
    }

    /**
     * Test the property 'readLink'
     */
    @Test
    public void readLinkTest() {
        // TODO: test readLink
    }

    /**
     * Test the property 'webSearchUrl'
     */
    @Test
    public void webSearchUrlTest() {
        // TODO: test webSearchUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
