/**
 * Local Search Client
 * The Local Search client lets you send a search query to Bing and get back search results that include local businesses such as restaurants, hotels, retail stores, or other local businesses. The query can specify the name of the local business or it can ask for a list (for example, restaurants near me).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LocalSearchClient);
  }
}(this, function(expect, LocalSearchClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LocalSearchClient.Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Response', function() {
    it('should create an instance of Response', function() {
      // uncomment below and update the code to test Response
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be.a(LocalSearchClient.Response);
    });

    it('should have the property adaptiveCard (base name: "adaptiveCard")', function() {
      // uncomment below and update the code to test the property adaptiveCard
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be();
    });

    it('should have the property immediateAction (base name: "immediateAction")', function() {
      // uncomment below and update the code to test the property immediateAction
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be();
    });

    it('should have the property potentialAction (base name: "potentialAction")', function() {
      // uncomment below and update the code to test the property potentialAction
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be();
    });

    it('should have the property preferredClickthroughUrl (base name: "preferredClickthroughUrl")', function() {
      // uncomment below and update the code to test the property preferredClickthroughUrl
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be();
    });

    it('should have the property readLink (base name: "readLink")', function() {
      // uncomment below and update the code to test the property readLink
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be();
    });

    it('should have the property webSearchUrl (base name: "webSearchUrl")', function() {
      // uncomment below and update the code to test the property webSearchUrl
      //var instance = new LocalSearchClient.Response();
      //expect(instance).to.be();
    });

  });

}));
