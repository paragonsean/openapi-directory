/**
 * Local Search Client
 * The Local Search client lets you send a search query to Bing and get back search results that include local businesses such as restaurants, hotels, retail stores, or other local businesses. The query can specify the name of the local business or it can ask for a list (for example, restaurants near me).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import Answer from './Answer';
import QueryContext from './QueryContext';

/**
 * The SearchResultsAnswer model module.
 * @module model/SearchResultsAnswer
 * @version 1.0
 */
class SearchResultsAnswer {
    /**
     * Constructs a new <code>SearchResultsAnswer</code>.
     * Defines a search result answer.
     * @alias module:model/SearchResultsAnswer
     * @extends module:model/Answer
     * @implements module:model/Answer
     * @param type {String} 
     */
    constructor(type) { 
        Answer.initialize(this, type);
        SearchResultsAnswer.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>SearchResultsAnswer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResultsAnswer} obj Optional instance to populate.
     * @return {module:model/SearchResultsAnswer} The populated <code>SearchResultsAnswer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResultsAnswer();
            Answer.constructFromObject(data, obj);
            Answer.constructFromObject(data, obj);

            if (data.hasOwnProperty('isFamilyFriendly')) {
                obj['isFamilyFriendly'] = ApiClient.convertToType(data['isFamilyFriendly'], 'Boolean');
            }
            if (data.hasOwnProperty('queryContext')) {
                obj['queryContext'] = QueryContext.constructFromObject(data['queryContext']);
            }
            if (data.hasOwnProperty('totalEstimatedMatches')) {
                obj['totalEstimatedMatches'] = ApiClient.convertToType(data['totalEstimatedMatches'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResultsAnswer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResultsAnswer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchResultsAnswer.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `queryContext`
        if (data['queryContext']) { // data not null
          QueryContext.validateJSON(data['queryContext']);
        }

        return true;
    }


}

SearchResultsAnswer.RequiredProperties = ["_type"];

/**
 * @member {Boolean} isFamilyFriendly
 */
SearchResultsAnswer.prototype['isFamilyFriendly'] = undefined;

/**
 * @member {module:model/QueryContext} queryContext
 */
SearchResultsAnswer.prototype['queryContext'] = undefined;

/**
 * The estimated number of webpages that are relevant to the query. Use this number along with the count and offset query parameters to page the results.
 * @member {Number} totalEstimatedMatches
 */
SearchResultsAnswer.prototype['totalEstimatedMatches'] = undefined;


// Implement Answer interface:
/**
 * @member {String} adaptiveCard
 */
Answer.prototype['adaptiveCard'] = undefined;
/**
 * @member {Array.<module:model/Action>} immediateAction
 */
Answer.prototype['immediateAction'] = undefined;
/**
 * @member {Array.<module:model/Action>} potentialAction
 */
Answer.prototype['potentialAction'] = undefined;
/**
 * @member {String} preferredClickthroughUrl
 */
Answer.prototype['preferredClickthroughUrl'] = undefined;
/**
 * The URL that returns this resource.
 * @member {String} readLink
 */
Answer.prototype['readLink'] = undefined;
/**
 * The URL to Bing's search result for this item.
 * @member {String} webSearchUrl
 */
Answer.prototype['webSearchUrl'] = undefined;
/**
 * A String identifier.
 * @member {String} id
 */
Answer.prototype['id'] = undefined;
/**
 * @member {String} _type
 */
Answer.prototype['_type'] = undefined;




export default SearchResultsAnswer;

