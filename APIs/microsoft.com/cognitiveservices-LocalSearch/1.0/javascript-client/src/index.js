/**
 * Local Search Client
 * The Local Search client lets you send a search query to Bing and get back search results that include local businesses such as restaurants, hotels, retail stores, or other local businesses. The query can specify the name of the local business or it can ask for a list (for example, restaurants near me).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import Answer from './model/Answer';
import CreativeWork from './model/CreativeWork';
import EntitiesEntityPresentationInfo from './model/EntitiesEntityPresentationInfo';
import Error from './model/Error';
import ErrorResponse from './model/ErrorResponse';
import GeoCoordinates from './model/GeoCoordinates';
import Identifiable from './model/Identifiable';
import Intangible from './model/Intangible';
import Place from './model/Place';
import Places from './model/Places';
import PostalAddress from './model/PostalAddress';
import QueryContext from './model/QueryContext';
import Response from './model/Response';
import ResponseBase from './model/ResponseBase';
import SearchAction from './model/SearchAction';
import SearchResponse from './model/SearchResponse';
import SearchResultsAnswer from './model/SearchResultsAnswer';
import StructuredValue from './model/StructuredValue';
import Thing from './model/Thing';
import LocalSearchApi from './api/LocalSearchApi';


/**
* The Local Search client lets you send a search query to Bing and get back search results that include local businesses such as restaurants, hotels, retail stores, or other local businesses. The query can specify the name of the local business or it can ask for a list (for example, restaurants near me)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LocalSearchClient = require('index'); // See note below*.
* var xxxSvc = new LocalSearchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LocalSearchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LocalSearchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LocalSearchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer,

    /**
     * The CreativeWork model constructor.
     * @property {module:model/CreativeWork}
     */
    CreativeWork,

    /**
     * The EntitiesEntityPresentationInfo model constructor.
     * @property {module:model/EntitiesEntityPresentationInfo}
     */
    EntitiesEntityPresentationInfo,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The GeoCoordinates model constructor.
     * @property {module:model/GeoCoordinates}
     */
    GeoCoordinates,

    /**
     * The Identifiable model constructor.
     * @property {module:model/Identifiable}
     */
    Identifiable,

    /**
     * The Intangible model constructor.
     * @property {module:model/Intangible}
     */
    Intangible,

    /**
     * The Place model constructor.
     * @property {module:model/Place}
     */
    Place,

    /**
     * The Places model constructor.
     * @property {module:model/Places}
     */
    Places,

    /**
     * The PostalAddress model constructor.
     * @property {module:model/PostalAddress}
     */
    PostalAddress,

    /**
     * The QueryContext model constructor.
     * @property {module:model/QueryContext}
     */
    QueryContext,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The ResponseBase model constructor.
     * @property {module:model/ResponseBase}
     */
    ResponseBase,

    /**
     * The SearchAction model constructor.
     * @property {module:model/SearchAction}
     */
    SearchAction,

    /**
     * The SearchResponse model constructor.
     * @property {module:model/SearchResponse}
     */
    SearchResponse,

    /**
     * The SearchResultsAnswer model constructor.
     * @property {module:model/SearchResultsAnswer}
     */
    SearchResultsAnswer,

    /**
     * The StructuredValue model constructor.
     * @property {module:model/StructuredValue}
     */
    StructuredValue,

    /**
     * The Thing model constructor.
     * @property {module:model/Thing}
     */
    Thing,

    /**
    * The LocalSearchApi service constructor.
    * @property {module:api/LocalSearchApi}
    */
    LocalSearchApi
};
