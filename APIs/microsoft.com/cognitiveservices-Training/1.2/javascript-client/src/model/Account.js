/**
 * TrainingApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountQuota from './AccountQuota';
import ApiKeys from './ApiKeys';

/**
 * The Account model module.
 * @module model/Account
 * @version 1.2
 */
class Account {
    /**
     * Constructs a new <code>Account</code>.
     * Represents a user account
     * @alias module:model/Account
     */
    constructor() { 
        
        Account.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Account</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Account} obj Optional instance to populate.
     * @return {module:model/Account} The populated <code>Account</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Account();

            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('Keys')) {
                obj['Keys'] = ApiKeys.constructFromObject(data['Keys']);
            }
            if (data.hasOwnProperty('Quotas')) {
                obj['Quotas'] = AccountQuota.constructFromObject(data['Quotas']);
            }
            if (data.hasOwnProperty('UserName')) {
                obj['UserName'] = ApiClient.convertToType(data['UserName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Account</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Account</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // validate the optional field `Keys`
        if (data['Keys']) { // data not null
          ApiKeys.validateJSON(data['Keys']);
        }
        // validate the optional field `Quotas`
        if (data['Quotas']) { // data not null
          AccountQuota.validateJSON(data['Quotas']);
        }
        // ensure the json data is a string
        if (data['UserName'] && !(typeof data['UserName'] === 'string' || data['UserName'] instanceof String)) {
            throw new Error("Expected the field `UserName` to be a primitive type in the JSON string but got " + data['UserName']);
        }

        return true;
    }


}



/**
 * Gets the email associated with this account
 * @member {String} Email
 */
Account.prototype['Email'] = undefined;

/**
 * @member {module:model/ApiKeys} Keys
 */
Account.prototype['Keys'] = undefined;

/**
 * @member {module:model/AccountQuota} Quotas
 */
Account.prototype['Quotas'] = undefined;

/**
 * Gets the name of the account owner
 * @member {String} UserName
 */
Account.prototype['UserName'] = undefined;






export default Account;

