/**
 * TrainingApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PredictionQueryTag from './PredictionQueryTag';

/**
 * The PredictionQueryToken model module.
 * @module model/PredictionQueryToken
 * @version 1.2
 */
class PredictionQueryToken {
    /**
     * Constructs a new <code>PredictionQueryToken</code>.
     * @alias module:model/PredictionQueryToken
     */
    constructor() { 
        
        PredictionQueryToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PredictionQueryToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictionQueryToken} obj Optional instance to populate.
     * @return {module:model/PredictionQueryToken} The populated <code>PredictionQueryToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredictionQueryToken();

            if (data.hasOwnProperty('Application')) {
                obj['Application'] = ApiClient.convertToType(data['Application'], 'String');
            }
            if (data.hasOwnProperty('Continuation')) {
                obj['Continuation'] = ApiClient.convertToType(data['Continuation'], 'String');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('IterationId')) {
                obj['IterationId'] = ApiClient.convertToType(data['IterationId'], 'String');
            }
            if (data.hasOwnProperty('MaxCount')) {
                obj['MaxCount'] = ApiClient.convertToType(data['MaxCount'], 'Number');
            }
            if (data.hasOwnProperty('OrderBy')) {
                obj['OrderBy'] = ApiClient.convertToType(data['OrderBy'], 'String');
            }
            if (data.hasOwnProperty('Session')) {
                obj['Session'] = ApiClient.convertToType(data['Session'], 'String');
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [PredictionQueryTag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredictionQueryToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredictionQueryToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Application'] && !(typeof data['Application'] === 'string' || data['Application'] instanceof String)) {
            throw new Error("Expected the field `Application` to be a primitive type in the JSON string but got " + data['Application']);
        }
        // ensure the json data is a string
        if (data['Continuation'] && !(typeof data['Continuation'] === 'string' || data['Continuation'] instanceof String)) {
            throw new Error("Expected the field `Continuation` to be a primitive type in the JSON string but got " + data['Continuation']);
        }
        // ensure the json data is a string
        if (data['IterationId'] && !(typeof data['IterationId'] === 'string' || data['IterationId'] instanceof String)) {
            throw new Error("Expected the field `IterationId` to be a primitive type in the JSON string but got " + data['IterationId']);
        }
        // ensure the json data is a string
        if (data['OrderBy'] && !(typeof data['OrderBy'] === 'string' || data['OrderBy'] instanceof String)) {
            throw new Error("Expected the field `OrderBy` to be a primitive type in the JSON string but got " + data['OrderBy']);
        }
        // ensure the json data is a string
        if (data['Session'] && !(typeof data['Session'] === 'string' || data['Session'] instanceof String)) {
            throw new Error("Expected the field `Session` to be a primitive type in the JSON string but got " + data['Session']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                PredictionQueryTag.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} Application
 */
PredictionQueryToken.prototype['Application'] = undefined;

/**
 * @member {String} Continuation
 */
PredictionQueryToken.prototype['Continuation'] = undefined;

/**
 * @member {Date} EndTime
 */
PredictionQueryToken.prototype['EndTime'] = undefined;

/**
 * @member {String} IterationId
 */
PredictionQueryToken.prototype['IterationId'] = undefined;

/**
 * @member {Number} MaxCount
 */
PredictionQueryToken.prototype['MaxCount'] = undefined;

/**
 * @member {module:model/PredictionQueryToken.OrderByEnum} OrderBy
 */
PredictionQueryToken.prototype['OrderBy'] = undefined;

/**
 * @member {String} Session
 */
PredictionQueryToken.prototype['Session'] = undefined;

/**
 * @member {Date} StartTime
 */
PredictionQueryToken.prototype['StartTime'] = undefined;

/**
 * @member {Array.<module:model/PredictionQueryTag>} Tags
 */
PredictionQueryToken.prototype['Tags'] = undefined;





/**
 * Allowed values for the <code>OrderBy</code> property.
 * @enum {String}
 * @readonly
 */
PredictionQueryToken['OrderByEnum'] = {

    /**
     * value: "Newest"
     * @const
     */
    "Newest": "Newest",

    /**
     * value: "Oldest"
     * @const
     */
    "Oldest": "Oldest",

    /**
     * value: "Suggested"
     * @const
     */
    "Suggested": "Suggested"
};



export default PredictionQueryToken;

