/**
 * TrainingApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TagPerformance from './TagPerformance';

/**
 * The IterationPerformance model module.
 * @module model/IterationPerformance
 * @version 1.2
 */
class IterationPerformance {
    /**
     * Constructs a new <code>IterationPerformance</code>.
     * Represents the detailed performance data for a trained iteration
     * @alias module:model/IterationPerformance
     */
    constructor() { 
        
        IterationPerformance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IterationPerformance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IterationPerformance} obj Optional instance to populate.
     * @return {module:model/IterationPerformance} The populated <code>IterationPerformance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IterationPerformance();

            if (data.hasOwnProperty('PerTagPerformance')) {
                obj['PerTagPerformance'] = ApiClient.convertToType(data['PerTagPerformance'], [TagPerformance]);
            }
            if (data.hasOwnProperty('Precision')) {
                obj['Precision'] = ApiClient.convertToType(data['Precision'], 'Number');
            }
            if (data.hasOwnProperty('PrecisionStdDeviation')) {
                obj['PrecisionStdDeviation'] = ApiClient.convertToType(data['PrecisionStdDeviation'], 'Number');
            }
            if (data.hasOwnProperty('Recall')) {
                obj['Recall'] = ApiClient.convertToType(data['Recall'], 'Number');
            }
            if (data.hasOwnProperty('RecallStdDeviation')) {
                obj['RecallStdDeviation'] = ApiClient.convertToType(data['RecallStdDeviation'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IterationPerformance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IterationPerformance</code>.
     */
    static validateJSON(data) {
        if (data['PerTagPerformance']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['PerTagPerformance'])) {
                throw new Error("Expected the field `PerTagPerformance` to be an array in the JSON data but got " + data['PerTagPerformance']);
            }
            // validate the optional field `PerTagPerformance` (array)
            for (const item of data['PerTagPerformance']) {
                TagPerformance.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Gets the per-tag performance details for this iteration
 * @member {Array.<module:model/TagPerformance>} PerTagPerformance
 */
IterationPerformance.prototype['PerTagPerformance'] = undefined;

/**
 * Gets the precision
 * @member {Number} Precision
 */
IterationPerformance.prototype['Precision'] = undefined;

/**
 * Gets the standard deviation for the precision
 * @member {Number} PrecisionStdDeviation
 */
IterationPerformance.prototype['PrecisionStdDeviation'] = undefined;

/**
 * Gets the recall
 * @member {Number} Recall
 */
IterationPerformance.prototype['Recall'] = undefined;

/**
 * Gets the standard deviation for the recall
 * @member {Number} RecallStdDeviation
 */
IterationPerformance.prototype['RecallStdDeviation'] = undefined;






export default IterationPerformance;

