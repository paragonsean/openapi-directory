/**
 * TrainingApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Quota from './Quota';

/**
 * The PerProjectQuota model module.
 * @module model/PerProjectQuota
 * @version 1.2
 */
class PerProjectQuota {
    /**
     * Constructs a new <code>PerProjectQuota</code>.
     * Represents a set of quotas for a given project
     * @alias module:model/PerProjectQuota
     */
    constructor() { 
        
        PerProjectQuota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerProjectQuota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerProjectQuota} obj Optional instance to populate.
     * @return {module:model/PerProjectQuota} The populated <code>PerProjectQuota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerProjectQuota();

            if (data.hasOwnProperty('Images')) {
                obj['Images'] = Quota.constructFromObject(data['Images']);
            }
            if (data.hasOwnProperty('Iterations')) {
                obj['Iterations'] = Quota.constructFromObject(data['Iterations']);
            }
            if (data.hasOwnProperty('ProjectId')) {
                obj['ProjectId'] = ApiClient.convertToType(data['ProjectId'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = Quota.constructFromObject(data['Tags']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerProjectQuota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerProjectQuota</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Images`
        if (data['Images']) { // data not null
          Quota.validateJSON(data['Images']);
        }
        // validate the optional field `Iterations`
        if (data['Iterations']) { // data not null
          Quota.validateJSON(data['Iterations']);
        }
        // ensure the json data is a string
        if (data['ProjectId'] && !(typeof data['ProjectId'] === 'string' || data['ProjectId'] instanceof String)) {
            throw new Error("Expected the field `ProjectId` to be a primitive type in the JSON string but got " + data['ProjectId']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Quota.validateJSON(data['Tags']);
        }

        return true;
    }


}



/**
 * @member {module:model/Quota} Images
 */
PerProjectQuota.prototype['Images'] = undefined;

/**
 * @member {module:model/Quota} Iterations
 */
PerProjectQuota.prototype['Iterations'] = undefined;

/**
 * Gets the project id of the project this quota applies to
 * @member {String} ProjectId
 */
PerProjectQuota.prototype['ProjectId'] = undefined;

/**
 * @member {module:model/Quota} Tags
 */
PerProjectQuota.prototype['Tags'] = undefined;






export default PerProjectQuota;

