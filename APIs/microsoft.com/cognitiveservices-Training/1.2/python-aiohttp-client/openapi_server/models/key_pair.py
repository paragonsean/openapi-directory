# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyPair(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_key: str=None, secondary_key: str=None):
        """KeyPair - a model defined in OpenAPI

        :param primary_key: The primary_key of this KeyPair.
        :param secondary_key: The secondary_key of this KeyPair.
        """
        self.openapi_types = {
            'primary_key': str,
            'secondary_key': str
        }

        self.attribute_map = {
            'primary_key': 'PrimaryKey',
            'secondary_key': 'SecondaryKey'
        }

        self._primary_key = primary_key
        self._secondary_key = secondary_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyPair':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyPair of this KeyPair.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_key(self):
        """Gets the primary_key of this KeyPair.


        :return: The primary_key of this KeyPair.
        :rtype: str
        """
        return self._primary_key

    @primary_key.setter
    def primary_key(self, primary_key):
        """Sets the primary_key of this KeyPair.


        :param primary_key: The primary_key of this KeyPair.
        :type primary_key: str
        """

        self._primary_key = primary_key

    @property
    def secondary_key(self):
        """Gets the secondary_key of this KeyPair.


        :return: The secondary_key of this KeyPair.
        :rtype: str
        """
        return self._secondary_key

    @secondary_key.setter
    def secondary_key(self, secondary_key):
        """Sets the secondary_key of this KeyPair.


        :param secondary_key: The secondary_key of this KeyPair.
        :type secondary_key: str
        """

        self._secondary_key = secondary_key
