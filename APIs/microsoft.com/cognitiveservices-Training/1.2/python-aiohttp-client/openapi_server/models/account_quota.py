# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.per_project_quota import PerProjectQuota
from openapi_server.models.quota import Quota
from openapi_server import util


class AccountQuota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, per_project: List[PerProjectQuota]=None, predictions: Quota=None, projects: Quota=None, tier: str=None):
        """AccountQuota - a model defined in OpenAPI

        :param per_project: The per_project of this AccountQuota.
        :param predictions: The predictions of this AccountQuota.
        :param projects: The projects of this AccountQuota.
        :param tier: The tier of this AccountQuota.
        """
        self.openapi_types = {
            'per_project': List[PerProjectQuota],
            'predictions': Quota,
            'projects': Quota,
            'tier': str
        }

        self.attribute_map = {
            'per_project': 'PerProject',
            'predictions': 'Predictions',
            'projects': 'Projects',
            'tier': 'Tier'
        }

        self._per_project = per_project
        self._predictions = predictions
        self._projects = projects
        self._tier = tier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountQuota of this AccountQuota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def per_project(self):
        """Gets the per_project of this AccountQuota.

        Gets a list of quotas that apply per-project for each project

        :return: The per_project of this AccountQuota.
        :rtype: List[PerProjectQuota]
        """
        return self._per_project

    @per_project.setter
    def per_project(self, per_project):
        """Sets the per_project of this AccountQuota.

        Gets a list of quotas that apply per-project for each project

        :param per_project: The per_project of this AccountQuota.
        :type per_project: List[PerProjectQuota]
        """

        self._per_project = per_project

    @property
    def predictions(self):
        """Gets the predictions of this AccountQuota.


        :return: The predictions of this AccountQuota.
        :rtype: Quota
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions):
        """Sets the predictions of this AccountQuota.


        :param predictions: The predictions of this AccountQuota.
        :type predictions: Quota
        """

        self._predictions = predictions

    @property
    def projects(self):
        """Gets the projects of this AccountQuota.


        :return: The projects of this AccountQuota.
        :rtype: Quota
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this AccountQuota.


        :param projects: The projects of this AccountQuota.
        :type projects: Quota
        """

        self._projects = projects

    @property
    def tier(self):
        """Gets the tier of this AccountQuota.

        Gets the tier of user

        :return: The tier of this AccountQuota.
        :rtype: str
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this AccountQuota.

        Gets the tier of user

        :param tier: The tier of this AccountQuota.
        :type tier: str
        """

        self._tier = tier
