# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quota import Quota
from openapi_server import util


class PerProjectQuota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, images: Quota=None, iterations: Quota=None, project_id: str=None, tags: Quota=None):
        """PerProjectQuota - a model defined in OpenAPI

        :param images: The images of this PerProjectQuota.
        :param iterations: The iterations of this PerProjectQuota.
        :param project_id: The project_id of this PerProjectQuota.
        :param tags: The tags of this PerProjectQuota.
        """
        self.openapi_types = {
            'images': Quota,
            'iterations': Quota,
            'project_id': str,
            'tags': Quota
        }

        self.attribute_map = {
            'images': 'Images',
            'iterations': 'Iterations',
            'project_id': 'ProjectId',
            'tags': 'Tags'
        }

        self._images = images
        self._iterations = iterations
        self._project_id = project_id
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerProjectQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerProjectQuota of this PerProjectQuota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def images(self):
        """Gets the images of this PerProjectQuota.


        :return: The images of this PerProjectQuota.
        :rtype: Quota
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this PerProjectQuota.


        :param images: The images of this PerProjectQuota.
        :type images: Quota
        """

        self._images = images

    @property
    def iterations(self):
        """Gets the iterations of this PerProjectQuota.


        :return: The iterations of this PerProjectQuota.
        :rtype: Quota
        """
        return self._iterations

    @iterations.setter
    def iterations(self, iterations):
        """Sets the iterations of this PerProjectQuota.


        :param iterations: The iterations of this PerProjectQuota.
        :type iterations: Quota
        """

        self._iterations = iterations

    @property
    def project_id(self):
        """Gets the project_id of this PerProjectQuota.

        Gets the project id of the project this quota applies to

        :return: The project_id of this PerProjectQuota.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this PerProjectQuota.

        Gets the project id of the project this quota applies to

        :param project_id: The project_id of this PerProjectQuota.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def tags(self):
        """Gets the tags of this PerProjectQuota.


        :return: The tags of this PerProjectQuota.
        :rtype: Quota
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PerProjectQuota.


        :param tags: The tags of this PerProjectQuota.
        :type tags: Quota
        """

        self._tags = tags
