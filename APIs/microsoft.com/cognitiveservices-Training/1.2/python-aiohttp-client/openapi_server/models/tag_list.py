# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
from openapi_server import util


class TagList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tags: List[Tag]=None, total_tagged_images: int=None, total_untagged_images: int=None):
        """TagList - a model defined in OpenAPI

        :param tags: The tags of this TagList.
        :param total_tagged_images: The total_tagged_images of this TagList.
        :param total_untagged_images: The total_untagged_images of this TagList.
        """
        self.openapi_types = {
            'tags': List[Tag],
            'total_tagged_images': int,
            'total_untagged_images': int
        }

        self.attribute_map = {
            'tags': 'Tags',
            'total_tagged_images': 'TotalTaggedImages',
            'total_untagged_images': 'TotalUntaggedImages'
        }

        self._tags = tags
        self._total_tagged_images = total_tagged_images
        self._total_untagged_images = total_untagged_images

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagList of this TagList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tags(self):
        """Gets the tags of this TagList.


        :return: The tags of this TagList.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this TagList.


        :param tags: The tags of this TagList.
        :type tags: List[Tag]
        """

        self._tags = tags

    @property
    def total_tagged_images(self):
        """Gets the total_tagged_images of this TagList.


        :return: The total_tagged_images of this TagList.
        :rtype: int
        """
        return self._total_tagged_images

    @total_tagged_images.setter
    def total_tagged_images(self, total_tagged_images):
        """Sets the total_tagged_images of this TagList.


        :param total_tagged_images: The total_tagged_images of this TagList.
        :type total_tagged_images: int
        """

        self._total_tagged_images = total_tagged_images

    @property
    def total_untagged_images(self):
        """Gets the total_untagged_images of this TagList.


        :return: The total_untagged_images of this TagList.
        :rtype: int
        """
        return self._total_untagged_images

    @total_untagged_images.setter
    def total_untagged_images(self, total_untagged_images):
        """Sets the total_untagged_images of this TagList.


        :param total_untagged_images: The total_untagged_images of this TagList.
        :type total_untagged_images: int
        """

        self._total_untagged_images = total_untagged_images
