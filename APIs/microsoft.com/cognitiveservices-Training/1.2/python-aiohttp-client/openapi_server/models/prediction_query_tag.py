# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PredictionQueryTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, max_threshold: float=None, min_threshold: float=None):
        """PredictionQueryTag - a model defined in OpenAPI

        :param id: The id of this PredictionQueryTag.
        :param max_threshold: The max_threshold of this PredictionQueryTag.
        :param min_threshold: The min_threshold of this PredictionQueryTag.
        """
        self.openapi_types = {
            'id': str,
            'max_threshold': float,
            'min_threshold': float
        }

        self.attribute_map = {
            'id': 'Id',
            'max_threshold': 'MaxThreshold',
            'min_threshold': 'MinThreshold'
        }

        self._id = id
        self._max_threshold = max_threshold
        self._min_threshold = min_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PredictionQueryTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PredictionQueryTag of this PredictionQueryTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PredictionQueryTag.


        :return: The id of this PredictionQueryTag.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PredictionQueryTag.


        :param id: The id of this PredictionQueryTag.
        :type id: str
        """

        self._id = id

    @property
    def max_threshold(self):
        """Gets the max_threshold of this PredictionQueryTag.


        :return: The max_threshold of this PredictionQueryTag.
        :rtype: float
        """
        return self._max_threshold

    @max_threshold.setter
    def max_threshold(self, max_threshold):
        """Sets the max_threshold of this PredictionQueryTag.


        :param max_threshold: The max_threshold of this PredictionQueryTag.
        :type max_threshold: float
        """

        self._max_threshold = max_threshold

    @property
    def min_threshold(self):
        """Gets the min_threshold of this PredictionQueryTag.


        :return: The min_threshold of this PredictionQueryTag.
        :rtype: float
        """
        return self._min_threshold

    @min_threshold.setter
    def min_threshold(self, min_threshold):
        """Sets the min_threshold of this PredictionQueryTag.


        :param min_threshold: The min_threshold of this PredictionQueryTag.
        :type min_threshold: float
        """

        self._min_threshold = min_threshold
