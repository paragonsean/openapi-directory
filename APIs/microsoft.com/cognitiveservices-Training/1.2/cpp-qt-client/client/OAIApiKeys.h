/**
 * TrainingApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiKeys.h
 *
 * 
 */

#ifndef OAIApiKeys_H
#define OAIApiKeys_H

#include <QJsonObject>

#include "OAIKeyPair.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyPair;

class OAIApiKeys : public OAIObject {
public:
    OAIApiKeys();
    OAIApiKeys(QString json);
    ~OAIApiKeys() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIKeyPair getPredictionKeys() const;
    void setPredictionKeys(const OAIKeyPair &prediction_keys);
    bool is_prediction_keys_Set() const;
    bool is_prediction_keys_Valid() const;

    OAIKeyPair getTrainingKeys() const;
    void setTrainingKeys(const OAIKeyPair &training_keys);
    bool is_training_keys_Set() const;
    bool is_training_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIKeyPair m_prediction_keys;
    bool m_prediction_keys_isSet;
    bool m_prediction_keys_isValid;

    OAIKeyPair m_training_keys;
    bool m_training_keys_isSet;
    bool m_training_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiKeys)

#endif // OAIApiKeys_H
