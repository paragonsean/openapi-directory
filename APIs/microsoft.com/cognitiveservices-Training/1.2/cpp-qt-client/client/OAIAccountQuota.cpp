/**
 * TrainingApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountQuota.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountQuota::OAIAccountQuota(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountQuota::OAIAccountQuota() {
    this->initializeModel();
}

OAIAccountQuota::~OAIAccountQuota() {}

void OAIAccountQuota::initializeModel() {

    m_per_project_isSet = false;
    m_per_project_isValid = false;

    m_predictions_isSet = false;
    m_predictions_isValid = false;

    m_projects_isSet = false;
    m_projects_isValid = false;

    m_tier_isSet = false;
    m_tier_isValid = false;
}

void OAIAccountQuota::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountQuota::fromJsonObject(QJsonObject json) {

    m_per_project_isValid = ::OpenAPI::fromJsonValue(m_per_project, json[QString("PerProject")]);
    m_per_project_isSet = !json[QString("PerProject")].isNull() && m_per_project_isValid;

    m_predictions_isValid = ::OpenAPI::fromJsonValue(m_predictions, json[QString("Predictions")]);
    m_predictions_isSet = !json[QString("Predictions")].isNull() && m_predictions_isValid;

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("Projects")]);
    m_projects_isSet = !json[QString("Projects")].isNull() && m_projects_isValid;

    m_tier_isValid = ::OpenAPI::fromJsonValue(m_tier, json[QString("Tier")]);
    m_tier_isSet = !json[QString("Tier")].isNull() && m_tier_isValid;
}

QString OAIAccountQuota::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountQuota::asJsonObject() const {
    QJsonObject obj;
    if (m_per_project.size() > 0) {
        obj.insert(QString("PerProject"), ::OpenAPI::toJsonValue(m_per_project));
    }
    if (m_predictions.isSet()) {
        obj.insert(QString("Predictions"), ::OpenAPI::toJsonValue(m_predictions));
    }
    if (m_projects.isSet()) {
        obj.insert(QString("Projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    if (m_tier_isSet) {
        obj.insert(QString("Tier"), ::OpenAPI::toJsonValue(m_tier));
    }
    return obj;
}

QList<OAIPerProjectQuota> OAIAccountQuota::getPerProject() const {
    return m_per_project;
}
void OAIAccountQuota::setPerProject(const QList<OAIPerProjectQuota> &per_project) {
    m_per_project = per_project;
    m_per_project_isSet = true;
}

bool OAIAccountQuota::is_per_project_Set() const{
    return m_per_project_isSet;
}

bool OAIAccountQuota::is_per_project_Valid() const{
    return m_per_project_isValid;
}

OAIQuota OAIAccountQuota::getPredictions() const {
    return m_predictions;
}
void OAIAccountQuota::setPredictions(const OAIQuota &predictions) {
    m_predictions = predictions;
    m_predictions_isSet = true;
}

bool OAIAccountQuota::is_predictions_Set() const{
    return m_predictions_isSet;
}

bool OAIAccountQuota::is_predictions_Valid() const{
    return m_predictions_isValid;
}

OAIQuota OAIAccountQuota::getProjects() const {
    return m_projects;
}
void OAIAccountQuota::setProjects(const OAIQuota &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIAccountQuota::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIAccountQuota::is_projects_Valid() const{
    return m_projects_isValid;
}

QString OAIAccountQuota::getTier() const {
    return m_tier;
}
void OAIAccountQuota::setTier(const QString &tier) {
    m_tier = tier;
    m_tier_isSet = true;
}

bool OAIAccountQuota::is_tier_Set() const{
    return m_tier_isSet;
}

bool OAIAccountQuota::is_tier_Valid() const{
    return m_tier_isValid;
}

bool OAIAccountQuota::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_per_project.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_predictions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountQuota::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
