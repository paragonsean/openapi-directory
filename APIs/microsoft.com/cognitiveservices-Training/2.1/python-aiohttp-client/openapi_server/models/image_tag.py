# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, tag_id: str=None, tag_name: str=None):
        """ImageTag - a model defined in OpenAPI

        :param created: The created of this ImageTag.
        :param tag_id: The tag_id of this ImageTag.
        :param tag_name: The tag_name of this ImageTag.
        """
        self.openapi_types = {
            'created': datetime,
            'tag_id': str,
            'tag_name': str
        }

        self.attribute_map = {
            'created': 'created',
            'tag_id': 'tagId',
            'tag_name': 'tagName'
        }

        self._created = created
        self._tag_id = tag_id
        self._tag_name = tag_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageTag of this ImageTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this ImageTag.


        :return: The created of this ImageTag.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ImageTag.


        :param created: The created of this ImageTag.
        :type created: datetime
        """

        self._created = created

    @property
    def tag_id(self):
        """Gets the tag_id of this ImageTag.


        :return: The tag_id of this ImageTag.
        :rtype: str
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id):
        """Sets the tag_id of this ImageTag.


        :param tag_id: The tag_id of this ImageTag.
        :type tag_id: str
        """

        self._tag_id = tag_id

    @property
    def tag_name(self):
        """Gets the tag_name of this ImageTag.


        :return: The tag_name of this ImageTag.
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """Sets the tag_name of this ImageTag.


        :param tag_name: The tag_name of this ImageTag.
        :type tag_name: str
        """

        self._tag_name = tag_name
