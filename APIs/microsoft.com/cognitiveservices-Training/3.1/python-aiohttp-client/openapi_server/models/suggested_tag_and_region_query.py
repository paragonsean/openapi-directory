# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stored_suggested_tag_and_region import StoredSuggestedTagAndRegion
from openapi_server.models.suggested_tag_and_region_query_token import SuggestedTagAndRegionQueryToken
from openapi_server import util


class SuggestedTagAndRegionQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results: List[StoredSuggestedTagAndRegion]=None, token: SuggestedTagAndRegionQueryToken=None):
        """SuggestedTagAndRegionQuery - a model defined in OpenAPI

        :param results: The results of this SuggestedTagAndRegionQuery.
        :param token: The token of this SuggestedTagAndRegionQuery.
        """
        self.openapi_types = {
            'results': List[StoredSuggestedTagAndRegion],
            'token': SuggestedTagAndRegionQueryToken
        }

        self.attribute_map = {
            'results': 'results',
            'token': 'token'
        }

        self._results = results
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestedTagAndRegionQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuggestedTagAndRegionQuery of this SuggestedTagAndRegionQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results(self):
        """Gets the results of this SuggestedTagAndRegionQuery.

        Result of a suggested tags and regions request of the untagged image.

        :return: The results of this SuggestedTagAndRegionQuery.
        :rtype: List[StoredSuggestedTagAndRegion]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this SuggestedTagAndRegionQuery.

        Result of a suggested tags and regions request of the untagged image.

        :param results: The results of this SuggestedTagAndRegionQuery.
        :type results: List[StoredSuggestedTagAndRegion]
        """

        self._results = results

    @property
    def token(self):
        """Gets the token of this SuggestedTagAndRegionQuery.


        :return: The token of this SuggestedTagAndRegionQuery.
        :rtype: SuggestedTagAndRegionQueryToken
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this SuggestedTagAndRegionQuery.


        :param token: The token of this SuggestedTagAndRegionQuery.
        :type token: SuggestedTagAndRegionQueryToken
        """

        self._token = token
