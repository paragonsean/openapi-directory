# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.prediction import Prediction
from openapi_server import util


class StoredSuggestedTagAndRegion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, domain: str=None, height: int=None, id: str=None, iteration: str=None, original_image_uri: str=None, prediction_uncertainty: float=None, predictions: List[Prediction]=None, project: str=None, resized_image_uri: str=None, thumbnail_uri: str=None, width: int=None):
        """StoredSuggestedTagAndRegion - a model defined in OpenAPI

        :param created: The created of this StoredSuggestedTagAndRegion.
        :param domain: The domain of this StoredSuggestedTagAndRegion.
        :param height: The height of this StoredSuggestedTagAndRegion.
        :param id: The id of this StoredSuggestedTagAndRegion.
        :param iteration: The iteration of this StoredSuggestedTagAndRegion.
        :param original_image_uri: The original_image_uri of this StoredSuggestedTagAndRegion.
        :param prediction_uncertainty: The prediction_uncertainty of this StoredSuggestedTagAndRegion.
        :param predictions: The predictions of this StoredSuggestedTagAndRegion.
        :param project: The project of this StoredSuggestedTagAndRegion.
        :param resized_image_uri: The resized_image_uri of this StoredSuggestedTagAndRegion.
        :param thumbnail_uri: The thumbnail_uri of this StoredSuggestedTagAndRegion.
        :param width: The width of this StoredSuggestedTagAndRegion.
        """
        self.openapi_types = {
            'created': datetime,
            'domain': str,
            'height': int,
            'id': str,
            'iteration': str,
            'original_image_uri': str,
            'prediction_uncertainty': float,
            'predictions': List[Prediction],
            'project': str,
            'resized_image_uri': str,
            'thumbnail_uri': str,
            'width': int
        }

        self.attribute_map = {
            'created': 'created',
            'domain': 'domain',
            'height': 'height',
            'id': 'id',
            'iteration': 'iteration',
            'original_image_uri': 'originalImageUri',
            'prediction_uncertainty': 'predictionUncertainty',
            'predictions': 'predictions',
            'project': 'project',
            'resized_image_uri': 'resizedImageUri',
            'thumbnail_uri': 'thumbnailUri',
            'width': 'width'
        }

        self._created = created
        self._domain = domain
        self._height = height
        self._id = id
        self._iteration = iteration
        self._original_image_uri = original_image_uri
        self._prediction_uncertainty = prediction_uncertainty
        self._predictions = predictions
        self._project = project
        self._resized_image_uri = resized_image_uri
        self._thumbnail_uri = thumbnail_uri
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoredSuggestedTagAndRegion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoredSuggestedTagAndRegion of this StoredSuggestedTagAndRegion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this StoredSuggestedTagAndRegion.

        Date this prediction was created.

        :return: The created of this StoredSuggestedTagAndRegion.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this StoredSuggestedTagAndRegion.

        Date this prediction was created.

        :param created: The created of this StoredSuggestedTagAndRegion.
        :type created: datetime
        """

        self._created = created

    @property
    def domain(self):
        """Gets the domain of this StoredSuggestedTagAndRegion.

        Domain used for the prediction.

        :return: The domain of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this StoredSuggestedTagAndRegion.

        Domain used for the prediction.

        :param domain: The domain of this StoredSuggestedTagAndRegion.
        :type domain: str
        """

        self._domain = domain

    @property
    def height(self):
        """Gets the height of this StoredSuggestedTagAndRegion.

        Height of the resized image.

        :return: The height of this StoredSuggestedTagAndRegion.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this StoredSuggestedTagAndRegion.

        Height of the resized image.

        :param height: The height of this StoredSuggestedTagAndRegion.
        :type height: int
        """

        self._height = height

    @property
    def id(self):
        """Gets the id of this StoredSuggestedTagAndRegion.

        Prediction Id.

        :return: The id of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StoredSuggestedTagAndRegion.

        Prediction Id.

        :param id: The id of this StoredSuggestedTagAndRegion.
        :type id: str
        """

        self._id = id

    @property
    def iteration(self):
        """Gets the iteration of this StoredSuggestedTagAndRegion.

        Iteration Id.

        :return: The iteration of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._iteration

    @iteration.setter
    def iteration(self, iteration):
        """Sets the iteration of this StoredSuggestedTagAndRegion.

        Iteration Id.

        :param iteration: The iteration of this StoredSuggestedTagAndRegion.
        :type iteration: str
        """

        self._iteration = iteration

    @property
    def original_image_uri(self):
        """Gets the original_image_uri of this StoredSuggestedTagAndRegion.

        The URI to the original prediction image.

        :return: The original_image_uri of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._original_image_uri

    @original_image_uri.setter
    def original_image_uri(self, original_image_uri):
        """Sets the original_image_uri of this StoredSuggestedTagAndRegion.

        The URI to the original prediction image.

        :param original_image_uri: The original_image_uri of this StoredSuggestedTagAndRegion.
        :type original_image_uri: str
        """

        self._original_image_uri = original_image_uri

    @property
    def prediction_uncertainty(self):
        """Gets the prediction_uncertainty of this StoredSuggestedTagAndRegion.

        Uncertainty (entropy) of suggested tags or regions per image.

        :return: The prediction_uncertainty of this StoredSuggestedTagAndRegion.
        :rtype: float
        """
        return self._prediction_uncertainty

    @prediction_uncertainty.setter
    def prediction_uncertainty(self, prediction_uncertainty):
        """Sets the prediction_uncertainty of this StoredSuggestedTagAndRegion.

        Uncertainty (entropy) of suggested tags or regions per image.

        :param prediction_uncertainty: The prediction_uncertainty of this StoredSuggestedTagAndRegion.
        :type prediction_uncertainty: float
        """

        self._prediction_uncertainty = prediction_uncertainty

    @property
    def predictions(self):
        """Gets the predictions of this StoredSuggestedTagAndRegion.

        List of predictions.

        :return: The predictions of this StoredSuggestedTagAndRegion.
        :rtype: List[Prediction]
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions):
        """Sets the predictions of this StoredSuggestedTagAndRegion.

        List of predictions.

        :param predictions: The predictions of this StoredSuggestedTagAndRegion.
        :type predictions: List[Prediction]
        """

        self._predictions = predictions

    @property
    def project(self):
        """Gets the project of this StoredSuggestedTagAndRegion.

        Project Id.

        :return: The project of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this StoredSuggestedTagAndRegion.

        Project Id.

        :param project: The project of this StoredSuggestedTagAndRegion.
        :type project: str
        """

        self._project = project

    @property
    def resized_image_uri(self):
        """Gets the resized_image_uri of this StoredSuggestedTagAndRegion.

        The URI to the (resized) prediction image.

        :return: The resized_image_uri of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._resized_image_uri

    @resized_image_uri.setter
    def resized_image_uri(self, resized_image_uri):
        """Sets the resized_image_uri of this StoredSuggestedTagAndRegion.

        The URI to the (resized) prediction image.

        :param resized_image_uri: The resized_image_uri of this StoredSuggestedTagAndRegion.
        :type resized_image_uri: str
        """

        self._resized_image_uri = resized_image_uri

    @property
    def thumbnail_uri(self):
        """Gets the thumbnail_uri of this StoredSuggestedTagAndRegion.

        The URI to the thumbnail of the original prediction image.

        :return: The thumbnail_uri of this StoredSuggestedTagAndRegion.
        :rtype: str
        """
        return self._thumbnail_uri

    @thumbnail_uri.setter
    def thumbnail_uri(self, thumbnail_uri):
        """Sets the thumbnail_uri of this StoredSuggestedTagAndRegion.

        The URI to the thumbnail of the original prediction image.

        :param thumbnail_uri: The thumbnail_uri of this StoredSuggestedTagAndRegion.
        :type thumbnail_uri: str
        """

        self._thumbnail_uri = thumbnail_uri

    @property
    def width(self):
        """Gets the width of this StoredSuggestedTagAndRegion.

        Width of the resized image.

        :return: The width of this StoredSuggestedTagAndRegion.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this StoredSuggestedTagAndRegion.

        Width of the resized image.

        :param width: The width of this StoredSuggestedTagAndRegion.
        :type width: int
        """

        self._width = width
