# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.region import Region
from openapi_server import util


class ImageFileCreateEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: str=None, name: str=None, regions: List[Region]=None, tag_ids: List[str]=None):
        """ImageFileCreateEntry - a model defined in OpenAPI

        :param contents: The contents of this ImageFileCreateEntry.
        :param name: The name of this ImageFileCreateEntry.
        :param regions: The regions of this ImageFileCreateEntry.
        :param tag_ids: The tag_ids of this ImageFileCreateEntry.
        """
        self.openapi_types = {
            'contents': str,
            'name': str,
            'regions': List[Region],
            'tag_ids': List[str]
        }

        self.attribute_map = {
            'contents': 'contents',
            'name': 'name',
            'regions': 'regions',
            'tag_ids': 'tagIds'
        }

        self._contents = contents
        self._name = name
        self._regions = regions
        self._tag_ids = tag_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageFileCreateEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageFileCreateEntry of this ImageFileCreateEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this ImageFileCreateEntry.


        :return: The contents of this ImageFileCreateEntry.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this ImageFileCreateEntry.


        :param contents: The contents of this ImageFileCreateEntry.
        :type contents: str
        """

        self._contents = contents

    @property
    def name(self):
        """Gets the name of this ImageFileCreateEntry.


        :return: The name of this ImageFileCreateEntry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImageFileCreateEntry.


        :param name: The name of this ImageFileCreateEntry.
        :type name: str
        """

        self._name = name

    @property
    def regions(self):
        """Gets the regions of this ImageFileCreateEntry.


        :return: The regions of this ImageFileCreateEntry.
        :rtype: List[Region]
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this ImageFileCreateEntry.


        :param regions: The regions of this ImageFileCreateEntry.
        :type regions: List[Region]
        """

        self._regions = regions

    @property
    def tag_ids(self):
        """Gets the tag_ids of this ImageFileCreateEntry.


        :return: The tag_ids of this ImageFileCreateEntry.
        :rtype: List[str]
        """
        return self._tag_ids

    @tag_ids.setter
    def tag_ids(self, tag_ids):
        """Sets the tag_ids of this ImageFileCreateEntry.


        :param tag_ids: The tag_ids of this ImageFileCreateEntry.
        :type tag_ids: List[str]
        """

        self._tag_ids = tag_ids
