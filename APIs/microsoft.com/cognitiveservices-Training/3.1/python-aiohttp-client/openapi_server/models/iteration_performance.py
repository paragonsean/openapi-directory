# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_performance import TagPerformance
from openapi_server import util


class IterationPerformance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_precision: float=None, per_tag_performance: List[TagPerformance]=None, precision: float=None, precision_std_deviation: float=None, recall: float=None, recall_std_deviation: float=None):
        """IterationPerformance - a model defined in OpenAPI

        :param average_precision: The average_precision of this IterationPerformance.
        :param per_tag_performance: The per_tag_performance of this IterationPerformance.
        :param precision: The precision of this IterationPerformance.
        :param precision_std_deviation: The precision_std_deviation of this IterationPerformance.
        :param recall: The recall of this IterationPerformance.
        :param recall_std_deviation: The recall_std_deviation of this IterationPerformance.
        """
        self.openapi_types = {
            'average_precision': float,
            'per_tag_performance': List[TagPerformance],
            'precision': float,
            'precision_std_deviation': float,
            'recall': float,
            'recall_std_deviation': float
        }

        self.attribute_map = {
            'average_precision': 'averagePrecision',
            'per_tag_performance': 'perTagPerformance',
            'precision': 'precision',
            'precision_std_deviation': 'precisionStdDeviation',
            'recall': 'recall',
            'recall_std_deviation': 'recallStdDeviation'
        }

        self._average_precision = average_precision
        self._per_tag_performance = per_tag_performance
        self._precision = precision
        self._precision_std_deviation = precision_std_deviation
        self._recall = recall
        self._recall_std_deviation = recall_std_deviation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IterationPerformance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IterationPerformance of this IterationPerformance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_precision(self):
        """Gets the average_precision of this IterationPerformance.

        Gets the average precision when applicable.

        :return: The average_precision of this IterationPerformance.
        :rtype: float
        """
        return self._average_precision

    @average_precision.setter
    def average_precision(self, average_precision):
        """Sets the average_precision of this IterationPerformance.

        Gets the average precision when applicable.

        :param average_precision: The average_precision of this IterationPerformance.
        :type average_precision: float
        """

        self._average_precision = average_precision

    @property
    def per_tag_performance(self):
        """Gets the per_tag_performance of this IterationPerformance.

        Gets the per-tag performance details for this iteration.

        :return: The per_tag_performance of this IterationPerformance.
        :rtype: List[TagPerformance]
        """
        return self._per_tag_performance

    @per_tag_performance.setter
    def per_tag_performance(self, per_tag_performance):
        """Sets the per_tag_performance of this IterationPerformance.

        Gets the per-tag performance details for this iteration.

        :param per_tag_performance: The per_tag_performance of this IterationPerformance.
        :type per_tag_performance: List[TagPerformance]
        """

        self._per_tag_performance = per_tag_performance

    @property
    def precision(self):
        """Gets the precision of this IterationPerformance.

        Gets the precision.

        :return: The precision of this IterationPerformance.
        :rtype: float
        """
        return self._precision

    @precision.setter
    def precision(self, precision):
        """Sets the precision of this IterationPerformance.

        Gets the precision.

        :param precision: The precision of this IterationPerformance.
        :type precision: float
        """

        self._precision = precision

    @property
    def precision_std_deviation(self):
        """Gets the precision_std_deviation of this IterationPerformance.

        Gets the standard deviation for the precision.

        :return: The precision_std_deviation of this IterationPerformance.
        :rtype: float
        """
        return self._precision_std_deviation

    @precision_std_deviation.setter
    def precision_std_deviation(self, precision_std_deviation):
        """Sets the precision_std_deviation of this IterationPerformance.

        Gets the standard deviation for the precision.

        :param precision_std_deviation: The precision_std_deviation of this IterationPerformance.
        :type precision_std_deviation: float
        """

        self._precision_std_deviation = precision_std_deviation

    @property
    def recall(self):
        """Gets the recall of this IterationPerformance.

        Gets the recall.

        :return: The recall of this IterationPerformance.
        :rtype: float
        """
        return self._recall

    @recall.setter
    def recall(self, recall):
        """Sets the recall of this IterationPerformance.

        Gets the recall.

        :param recall: The recall of this IterationPerformance.
        :type recall: float
        """

        self._recall = recall

    @property
    def recall_std_deviation(self):
        """Gets the recall_std_deviation of this IterationPerformance.

        Gets the standard deviation for the recall.

        :return: The recall_std_deviation of this IterationPerformance.
        :rtype: float
        """
        return self._recall_std_deviation

    @recall_std_deviation.setter
    def recall_std_deviation(self, recall_std_deviation):
        """Sets the recall_std_deviation of this IterationPerformance.

        Gets the standard deviation for the recall.

        :param recall_std_deviation: The recall_std_deviation of this IterationPerformance.
        :type recall_std_deviation: float
        """

        self._recall_std_deviation = recall_std_deviation
