/**
 * Custom Vision Training Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageRegionCreateResult model module.
 * @module model/ImageRegionCreateResult
 * @version 3.1
 */
class ImageRegionCreateResult {
    /**
     * Constructs a new <code>ImageRegionCreateResult</code>.
     * @alias module:model/ImageRegionCreateResult
     * @param height {Number} Height.
     * @param left {Number} Coordinate of the left boundary.
     * @param tagId {String} Id of the tag associated with this region.
     * @param top {Number} Coordinate of the top boundary.
     * @param width {Number} Width.
     */
    constructor(height, left, tagId, top, width) { 
        
        ImageRegionCreateResult.initialize(this, height, left, tagId, top, width);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, height, left, tagId, top, width) { 
        obj['height'] = height;
        obj['left'] = left;
        obj['tagId'] = tagId;
        obj['top'] = top;
        obj['width'] = width;
    }

    /**
     * Constructs a <code>ImageRegionCreateResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageRegionCreateResult} obj Optional instance to populate.
     * @return {module:model/ImageRegionCreateResult} The populated <code>ImageRegionCreateResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageRegionCreateResult();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('imageId')) {
                obj['imageId'] = ApiClient.convertToType(data['imageId'], 'String');
            }
            if (data.hasOwnProperty('left')) {
                obj['left'] = ApiClient.convertToType(data['left'], 'Number');
            }
            if (data.hasOwnProperty('regionId')) {
                obj['regionId'] = ApiClient.convertToType(data['regionId'], 'String');
            }
            if (data.hasOwnProperty('tagId')) {
                obj['tagId'] = ApiClient.convertToType(data['tagId'], 'String');
            }
            if (data.hasOwnProperty('tagName')) {
                obj['tagName'] = ApiClient.convertToType(data['tagName'], 'String');
            }
            if (data.hasOwnProperty('top')) {
                obj['top'] = ApiClient.convertToType(data['top'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageRegionCreateResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageRegionCreateResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageRegionCreateResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['imageId'] && !(typeof data['imageId'] === 'string' || data['imageId'] instanceof String)) {
            throw new Error("Expected the field `imageId` to be a primitive type in the JSON string but got " + data['imageId']);
        }
        // ensure the json data is a string
        if (data['regionId'] && !(typeof data['regionId'] === 'string' || data['regionId'] instanceof String)) {
            throw new Error("Expected the field `regionId` to be a primitive type in the JSON string but got " + data['regionId']);
        }
        // ensure the json data is a string
        if (data['tagId'] && !(typeof data['tagId'] === 'string' || data['tagId'] instanceof String)) {
            throw new Error("Expected the field `tagId` to be a primitive type in the JSON string but got " + data['tagId']);
        }
        // ensure the json data is a string
        if (data['tagName'] && !(typeof data['tagName'] === 'string' || data['tagName'] instanceof String)) {
            throw new Error("Expected the field `tagName` to be a primitive type in the JSON string but got " + data['tagName']);
        }

        return true;
    }


}

ImageRegionCreateResult.RequiredProperties = ["height", "left", "tagId", "top", "width"];

/**
 * @member {Date} created
 */
ImageRegionCreateResult.prototype['created'] = undefined;

/**
 * Height.
 * @member {Number} height
 */
ImageRegionCreateResult.prototype['height'] = undefined;

/**
 * @member {String} imageId
 */
ImageRegionCreateResult.prototype['imageId'] = undefined;

/**
 * Coordinate of the left boundary.
 * @member {Number} left
 */
ImageRegionCreateResult.prototype['left'] = undefined;

/**
 * @member {String} regionId
 */
ImageRegionCreateResult.prototype['regionId'] = undefined;

/**
 * Id of the tag associated with this region.
 * @member {String} tagId
 */
ImageRegionCreateResult.prototype['tagId'] = undefined;

/**
 * @member {String} tagName
 */
ImageRegionCreateResult.prototype['tagName'] = undefined;

/**
 * Coordinate of the top boundary.
 * @member {Number} top
 */
ImageRegionCreateResult.prototype['top'] = undefined;

/**
 * Width.
 * @member {Number} width
 */
ImageRegionCreateResult.prototype['width'] = undefined;






export default ImageRegionCreateResult;

