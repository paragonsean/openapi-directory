/*
 * Custom Vision Training Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomVisionError;
import org.openapitools.client.model.Tag;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagsApiApi
 */
@Disabled
public class TagsApiApiTest {

    private final TagsApiApi api = new TagsApiApi();

    /**
     * Create a tag for the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTagTest() throws ApiException {
        UUID projectId = null;
        String name = null;
        String description = null;
        String type = null;
        Tag response = api.createTag(projectId, name, description, type);
        // TODO: test validations
    }

    /**
     * Delete a tag from the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTagTest() throws ApiException {
        UUID projectId = null;
        UUID tagId = null;
        api.deleteTag(projectId, tagId);
        // TODO: test validations
    }

    /**
     * Get information about a specific tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagTest() throws ApiException {
        UUID projectId = null;
        UUID tagId = null;
        UUID iterationId = null;
        Tag response = api.getTag(projectId, tagId, iterationId);
        // TODO: test validations
    }

    /**
     * Get the tags for a given project and iteration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTagsTest() throws ApiException {
        UUID projectId = null;
        UUID iterationId = null;
        List<Tag> response = api.getTags(projectId, iterationId);
        // TODO: test validations
    }

    /**
     * Update a tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTagTest() throws ApiException {
        UUID projectId = null;
        UUID tagId = null;
        Tag tag = null;
        Tag response = api.updateTag(projectId, tagId, tag);
        // TODO: test validations
    }

}
