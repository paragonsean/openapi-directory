# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrainingParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, selected_tags: List[str]=None):
        """TrainingParameters - a model defined in OpenAPI

        :param selected_tags: The selected_tags of this TrainingParameters.
        """
        self.openapi_types = {
            'selected_tags': List[str]
        }

        self.attribute_map = {
            'selected_tags': 'selectedTags'
        }

        self._selected_tags = selected_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrainingParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrainingParameters of this TrainingParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def selected_tags(self):
        """Gets the selected_tags of this TrainingParameters.

        List of tags selected for this training session, other tags in the project will be ignored.

        :return: The selected_tags of this TrainingParameters.
        :rtype: List[str]
        """
        return self._selected_tags

    @selected_tags.setter
    def selected_tags(self, selected_tags):
        """Sets the selected_tags of this TrainingParameters.

        List of tags selected for this training session, other tags in the project will be ignored.

        :param selected_tags: The selected_tags of this TrainingParameters.
        :type selected_tags: List[str]
        """

        self._selected_tags = selected_tags
