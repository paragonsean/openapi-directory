/**
 * Custom Vision Training Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomVisionError from '../model/CustomVisionError';
import ImageRegionProposal from '../model/ImageRegionProposal';

/**
* ImageRegionProposalApi service.
* @module api/ImageRegionProposalApiApi
* @version 3.2
*/
export default class ImageRegionProposalApiApi {

    /**
    * Constructs a new ImageRegionProposalApiApi. 
    * @alias module:api/ImageRegionProposalApiApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getImageRegionProposals operation.
     * @callback module:api/ImageRegionProposalApiApi~getImageRegionProposalsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageRegionProposal} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get region proposals for an image. Returns empty array if no proposals are found.
     * This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.
     * @param {String} projectId The project id.
     * @param {String} imageId The image id.
     * @param {module:api/ImageRegionProposalApiApi~getImageRegionProposalsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageRegionProposal}
     */
    getImageRegionProposals(projectId, imageId, callback) {
      let postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling getImageRegionProposals");
      }
      // verify the required parameter 'imageId' is set
      if (imageId === undefined || imageId === null) {
        throw new Error("Missing the required parameter 'imageId' when calling getImageRegionProposals");
      }

      let pathParams = {
        'projectId': projectId,
        'imageId': imageId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ImageRegionProposal;
      return this.apiClient.callApi(
        '/projects/{projectId}/images/{imageId}/regionproposals', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
