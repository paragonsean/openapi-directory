/*
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Some info about the team
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:32:27.682448-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TeamDetail {
  public static final String SERIALIZED_NAME_ADMINS_URL = "_adminsUrl";
  @SerializedName(SERIALIZED_NAME_ADMINS_URL)
  private String adminsUrl;

  public static final String SERIALIZED_NAME_MEMBERS_URL = "_membersUrl";
  @SerializedName(SERIALIZED_NAME_MEMBERS_URL)
  private String membersUrl;

  public static final String SERIALIZED_NAME_POLICIES_URL = "_policiesUrl";
  @SerializedName(SERIALIZED_NAME_POLICIES_URL)
  private String policiesUrl;

  public static final String SERIALIZED_NAME_SELF_URL = "_selfUrl";
  @SerializedName(SERIALIZED_NAME_SELF_URL)
  private String selfUrl;

  public static final String SERIALIZED_NAME_IS_DEFAULT_TEAM = "isDefaultTeam";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT_TEAM)
  private Boolean isDefaultTeam;

  public static final String SERIALIZED_NAME_MEMBER_COUNT = "memberCount";
  @SerializedName(SERIALIZED_NAME_MEMBER_COUNT)
  private BigDecimal memberCount;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private BigDecimal version;

  public TeamDetail() {
  }

  public TeamDetail adminsUrl(String adminsUrl) {
    this.adminsUrl = adminsUrl;
    return this;
  }

  /**
   * Get adminsUrl
   * @return adminsUrl
   */
  @javax.annotation.Nullable
  public String getAdminsUrl() {
    return adminsUrl;
  }

  public void setAdminsUrl(String adminsUrl) {
    this.adminsUrl = adminsUrl;
  }


  public TeamDetail membersUrl(String membersUrl) {
    this.membersUrl = membersUrl;
    return this;
  }

  /**
   * Get membersUrl
   * @return membersUrl
   */
  @javax.annotation.Nullable
  public String getMembersUrl() {
    return membersUrl;
  }

  public void setMembersUrl(String membersUrl) {
    this.membersUrl = membersUrl;
  }


  public TeamDetail policiesUrl(String policiesUrl) {
    this.policiesUrl = policiesUrl;
    return this;
  }

  /**
   * Get policiesUrl
   * @return policiesUrl
   */
  @javax.annotation.Nullable
  public String getPoliciesUrl() {
    return policiesUrl;
  }

  public void setPoliciesUrl(String policiesUrl) {
    this.policiesUrl = policiesUrl;
  }


  public TeamDetail selfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
    return this;
  }

  /**
   * Get selfUrl
   * @return selfUrl
   */
  @javax.annotation.Nullable
  public String getSelfUrl() {
    return selfUrl;
  }

  public void setSelfUrl(String selfUrl) {
    this.selfUrl = selfUrl;
  }


  public TeamDetail isDefaultTeam(Boolean isDefaultTeam) {
    this.isDefaultTeam = isDefaultTeam;
    return this;
  }

  /**
   * Get isDefaultTeam
   * @return isDefaultTeam
   */
  @javax.annotation.Nullable
  public Boolean getIsDefaultTeam() {
    return isDefaultTeam;
  }

  public void setIsDefaultTeam(Boolean isDefaultTeam) {
    this.isDefaultTeam = isDefaultTeam;
  }


  public TeamDetail memberCount(BigDecimal memberCount) {
    this.memberCount = memberCount;
    return this;
  }

  /**
   * Get memberCount
   * @return memberCount
   */
  @javax.annotation.Nullable
  public BigDecimal getMemberCount() {
    return memberCount;
  }

  public void setMemberCount(BigDecimal memberCount) {
    this.memberCount = memberCount;
  }


  public TeamDetail name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TeamDetail slug(String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * Get slug
   * @return slug
   */
  @javax.annotation.Nullable
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }


  public TeamDetail version(BigDecimal version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public BigDecimal getVersion() {
    return version;
  }

  public void setVersion(BigDecimal version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamDetail teamDetail = (TeamDetail) o;
    return Objects.equals(this.adminsUrl, teamDetail.adminsUrl) &&
        Objects.equals(this.membersUrl, teamDetail.membersUrl) &&
        Objects.equals(this.policiesUrl, teamDetail.policiesUrl) &&
        Objects.equals(this.selfUrl, teamDetail.selfUrl) &&
        Objects.equals(this.isDefaultTeam, teamDetail.isDefaultTeam) &&
        Objects.equals(this.memberCount, teamDetail.memberCount) &&
        Objects.equals(this.name, teamDetail.name) &&
        Objects.equals(this.slug, teamDetail.slug) &&
        Objects.equals(this.version, teamDetail.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminsUrl, membersUrl, policiesUrl, selfUrl, isDefaultTeam, memberCount, name, slug, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamDetail {\n");
    sb.append("    adminsUrl: ").append(toIndentedString(adminsUrl)).append("\n");
    sb.append("    membersUrl: ").append(toIndentedString(membersUrl)).append("\n");
    sb.append("    policiesUrl: ").append(toIndentedString(policiesUrl)).append("\n");
    sb.append("    selfUrl: ").append(toIndentedString(selfUrl)).append("\n");
    sb.append("    isDefaultTeam: ").append(toIndentedString(isDefaultTeam)).append("\n");
    sb.append("    memberCount: ").append(toIndentedString(memberCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_adminsUrl");
    openapiFields.add("_membersUrl");
    openapiFields.add("_policiesUrl");
    openapiFields.add("_selfUrl");
    openapiFields.add("isDefaultTeam");
    openapiFields.add("memberCount");
    openapiFields.add("name");
    openapiFields.add("slug");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TeamDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamDetail is not found in the empty JSON string", TeamDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("_adminsUrl") != null && !jsonObj.get("_adminsUrl").isJsonNull()) && !jsonObj.get("_adminsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_adminsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_adminsUrl").toString()));
      }
      if ((jsonObj.get("_membersUrl") != null && !jsonObj.get("_membersUrl").isJsonNull()) && !jsonObj.get("_membersUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_membersUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_membersUrl").toString()));
      }
      if ((jsonObj.get("_policiesUrl") != null && !jsonObj.get("_policiesUrl").isJsonNull()) && !jsonObj.get("_policiesUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_policiesUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_policiesUrl").toString()));
      }
      if ((jsonObj.get("_selfUrl") != null && !jsonObj.get("_selfUrl").isJsonNull()) && !jsonObj.get("_selfUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_selfUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_selfUrl").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("slug") != null && !jsonObj.get("slug").isJsonNull()) && !jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamDetail>() {
           @Override
           public void write(JsonWriter out, TeamDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TeamDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TeamDetail
   * @throws IOException if the JSON string is invalid with respect to TeamDetail
   */
  public static TeamDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamDetail.class);
  }

  /**
   * Convert an instance of TeamDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

