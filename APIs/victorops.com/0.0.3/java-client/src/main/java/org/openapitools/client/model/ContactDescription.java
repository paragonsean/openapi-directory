/*
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ContactDescription
 */
@JsonAdapter(ContactDescription.Adapter.class)
public enum ContactDescription {
  
  EMAIL_ADDRESS("Email Address"),
  
  PHONE_NUMBER("Phone Number");

  private String value;

  ContactDescription(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ContactDescription fromValue(String value) {
    for (ContactDescription b : ContactDescription.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ContactDescription> {
    @Override
    public void write(final JsonWriter jsonWriter, final ContactDescription enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ContactDescription read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ContactDescription.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ContactDescription.fromValue(value);
  }
}

