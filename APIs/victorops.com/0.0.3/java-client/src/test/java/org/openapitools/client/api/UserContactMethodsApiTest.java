/*
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiPublicV1UserUserContactMethodsGet200Response;
import org.openapitools.client.model.ContactDevice;
import org.openapitools.client.model.ContactDeviceAdd;
import org.openapitools.client.model.ContactEmailAdd;
import org.openapitools.client.model.ContactPhoneAdd;
import org.openapitools.client.model.UserContact;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserContactMethodsApi
 */
@Disabled
public class UserContactMethodsApiTest {

    private final UserContactMethodsApi api = new UserContactMethodsApi();

    /**
     * Delete a contact device for a user
     *
     * Delete a contact device for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsDevicesContactIdDeleteTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        ContactDevice response = api.apiPublicV1UserUserContactMethodsDevicesContactIdDelete(xVOApiId, xVOApiKey, user, contactId);
        // TODO: test validations
    }

    /**
     * Get the indicated contact device for a user
     *
     * Get the indicated contact device for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsDevicesContactIdGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        List<ContactDevice> response = api.apiPublicV1UserUserContactMethodsDevicesContactIdGet(xVOApiId, xVOApiKey, user, contactId);
        // TODO: test validations
    }

    /**
     * Update a contact device for a user
     *
     * Update a contact device for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsDevicesContactIdPutTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        ContactDeviceAdd body = null;
        ContactDevice response = api.apiPublicV1UserUserContactMethodsDevicesContactIdPut(xVOApiId, xVOApiKey, user, contactId, body);
        // TODO: test validations
    }

    /**
     * Get a list of all contact devices for a user
     *
     * Get the contact methods for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsDevicesGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        List<ContactDevice> response = api.apiPublicV1UserUserContactMethodsDevicesGet(xVOApiId, xVOApiKey, user);
        // TODO: test validations
    }

    /**
     * Delete a contact email for a user
     *
     * Delete the indicated contact email for the user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsEmailsContactIdDeleteTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        UserContact response = api.apiPublicV1UserUserContactMethodsEmailsContactIdDelete(xVOApiId, xVOApiKey, user, contactId);
        // TODO: test validations
    }

    /**
     * Get the indicated contact email for a user
     *
     * Get the indicated contact email for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsEmailsContactIdGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        List<UserContact> response = api.apiPublicV1UserUserContactMethodsEmailsContactIdGet(xVOApiId, xVOApiKey, user, contactId);
        // TODO: test validations
    }

    /**
     * Get a list of all contact emails for a user
     *
     * Get the contact emails for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsEmailsGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        List<UserContact> response = api.apiPublicV1UserUserContactMethodsEmailsGet(xVOApiId, xVOApiKey, user);
        // TODO: test validations
    }

    /**
     * Create a contact emails for a user
     *
     * Create a contact email for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsEmailsPostTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        ContactEmailAdd body = null;
        UserContact response = api.apiPublicV1UserUserContactMethodsEmailsPost(xVOApiId, xVOApiKey, user, body);
        // TODO: test validations
    }

    /**
     * Get a list of all contact methods for a user
     *
     * Get the contact methods for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        ApiPublicV1UserUserContactMethodsGet200Response response = api.apiPublicV1UserUserContactMethodsGet(xVOApiId, xVOApiKey, user);
        // TODO: test validations
    }

    /**
     * Delete a contact phone for a user
     *
     * Delete the indicated contact phone for the user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsPhonesContactIdDeleteTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        UserContact response = api.apiPublicV1UserUserContactMethodsPhonesContactIdDelete(xVOApiId, xVOApiKey, user, contactId);
        // TODO: test validations
    }

    /**
     * Get the indicated contact phone for a user
     *
     * Get the indicated contact phone for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsPhonesContactIdGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        String contactId = null;
        List<UserContact> response = api.apiPublicV1UserUserContactMethodsPhonesContactIdGet(xVOApiId, xVOApiKey, user, contactId);
        // TODO: test validations
    }

    /**
     * Get a list of all contact phones for a user
     *
     * Get the contact phones for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsPhonesGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        List<UserContact> response = api.apiPublicV1UserUserContactMethodsPhonesGet(xVOApiId, xVOApiKey, user);
        // TODO: test validations
    }

    /**
     * Create a contact phones for a user
     *
     * Create a contact phone for a user  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1UserUserContactMethodsPhonesPostTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        String user = null;
        ContactPhoneAdd body = null;
        UserContact response = api.apiPublicV1UserUserContactMethodsPhonesPost(xVOApiId, xVOApiKey, user, body);
        // TODO: test validations
    }

}
