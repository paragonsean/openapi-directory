/*
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.AckUser;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IncidentInfo
 */
public class IncidentInfoTest {
    private final IncidentInfo model = new IncidentInfo();

    /**
     * Model tests for IncidentInfo
     */
    @Test
    public void testIncidentInfo() {
        // TODO: test IncidentInfo
    }

    /**
     * Test the property 'ackTime'
     */
    @Test
    public void ackTimeTest() {
        // TODO: test ackTime
    }

    /**
     * Test the property 'ackUser'
     */
    @Test
    public void ackUserTest() {
        // TODO: test ackUser
    }

    /**
     * Test the property 'ackUserId'
     */
    @Test
    public void ackUserIdTest() {
        // TODO: test ackUserId
    }

    /**
     * Test the property 'alertCount'
     */
    @Test
    public void alertCountTest() {
        // TODO: test alertCount
    }

    /**
     * Test the property 'currentPhase'
     */
    @Test
    public void currentPhaseTest() {
        // TODO: test currentPhase
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'entityDispName'
     */
    @Test
    public void entityDispNameTest() {
        // TODO: test entityDispName
    }

    /**
     * Test the property 'entityId'
     */
    @Test
    public void entityIdTest() {
        // TODO: test entityId
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'incidentNumber'
     */
    @Test
    public void incidentNumberTest() {
        // TODO: test incidentNumber
    }

    /**
     * Test the property 'lastAlertID'
     */
    @Test
    public void lastAlertIDTest() {
        // TODO: test lastAlertID
    }

    /**
     * Test the property 'lastAlertTime'
     */
    @Test
    public void lastAlertTimeTest() {
        // TODO: test lastAlertTime
    }

    /**
     * Test the property 'service'
     */
    @Test
    public void serviceTest() {
        // TODO: test service
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'teams'
     */
    @Test
    public void teamsTest() {
        // TODO: test teams
    }

}
