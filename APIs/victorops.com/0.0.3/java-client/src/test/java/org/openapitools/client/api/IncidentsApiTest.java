/*
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AckOrResolveByUserRequest;
import org.openapitools.client.model.AckOrResolveRequest;
import org.openapitools.client.model.AckOrResolveResponse;
import org.openapitools.client.model.ActiveIncidentList;
import org.openapitools.client.model.CreateIncidentRequest;
import org.openapitools.client.model.CreatedIncident;
import org.openapitools.client.model.RerouteCollection;
import org.openapitools.client.model.RerouteStatusResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IncidentsApi
 */
@Disabled
public class IncidentsApiTest {

    private final IncidentsApi api = new IncidentsApi();

    /**
     * Acknowledge an incident or list of incidents
     *
     * The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsAckPatchTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        AckOrResolveRequest body = null;
        AckOrResolveResponse response = api.apiPublicV1IncidentsAckPatch(xVOApiId, xVOApiKey, body);
        // TODO: test validations
    }

    /**
     * Acknowledge all incidents for which a user was paged.
     *
     * The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsByUserAckPatchTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        AckOrResolveByUserRequest body = null;
        AckOrResolveResponse response = api.apiPublicV1IncidentsByUserAckPatch(xVOApiId, xVOApiKey, body);
        // TODO: test validations
    }

    /**
     * Resolve all incidents for which a user was paged.
     *
     * The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsByUserResolvePatchTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        AckOrResolveByUserRequest body = null;
        AckOrResolveResponse response = api.apiPublicV1IncidentsByUserResolvePatch(xVOApiId, xVOApiKey, body);
        // TODO: test validations
    }

    /**
     * Get current incident information
     *
     * Get a list of the currently open, acknowledged and recently resolved incidents.  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsGetTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        ActiveIncidentList response = api.apiPublicV1IncidentsGet(xVOApiId, xVOApiKey);
        // TODO: test validations
    }

    /**
     * Create a new incident
     *
     * Create a new incident.  This call replicates the function of our &lt;a href&#x3D;\&quot;https://help.victorops.com/knowledge-base/manual-incident-creation/\&quot;&gt;manual incident creation process&lt;/a&gt;. Monitoring tools and custom integrations should be configured using our &lt;a href&#x3D;\&quot;https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/\&quot;&gt;REST Endpoint&lt;/a&gt;.  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsPostTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        CreateIncidentRequest body = null;
        CreatedIncident response = api.apiPublicV1IncidentsPost(xVOApiId, xVOApiKey, body);
        // TODO: test validations
    }

    /**
     * Reroute one or more incidents to one or more new routable destinations.
     *
     * Reroute one or more incidents to one or more users and/or escalation policies  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsReroutePostTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        RerouteCollection body = null;
        RerouteStatusResponse response = api.apiPublicV1IncidentsReroutePost(xVOApiId, xVOApiKey, body);
        // TODO: test validations
    }

    /**
     * Resolve an incident or list of incidents
     *
     * The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.  This API may be called a maximum of 60 times per minute. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPublicV1IncidentsResolvePatchTest() throws ApiException {
        String xVOApiId = null;
        String xVOApiKey = null;
        AckOrResolveRequest body = null;
        AckOrResolveResponse response = api.apiPublicV1IncidentsResolvePatch(xVOApiId, xVOApiKey, body);
        // TODO: test validations
    }

}
