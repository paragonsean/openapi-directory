/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MaintenanceModeTarget from './MaintenanceModeTarget';

/**
 * The ActiveMaintenanceMode model module.
 * @module model/ActiveMaintenanceMode
 * @version 0.0.3
 */
class ActiveMaintenanceMode {
    /**
     * Constructs a new <code>ActiveMaintenanceMode</code>.
     * @alias module:model/ActiveMaintenanceMode
     */
    constructor() { 
        
        ActiveMaintenanceMode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActiveMaintenanceMode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActiveMaintenanceMode} obj Optional instance to populate.
     * @return {module:model/ActiveMaintenanceMode} The populated <code>ActiveMaintenanceMode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActiveMaintenanceMode();

            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('isGlobal')) {
                obj['isGlobal'] = ApiClient.convertToType(data['isGlobal'], 'Boolean');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Number');
            }
            if (data.hasOwnProperty('startedBy')) {
                obj['startedBy'] = ApiClient.convertToType(data['startedBy'], 'String');
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], [MaintenanceModeTarget]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActiveMaintenanceMode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActiveMaintenanceMode</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }
        // ensure the json data is a string
        if (data['startedBy'] && !(typeof data['startedBy'] === 'string' || data['startedBy'] instanceof String)) {
            throw new Error("Expected the field `startedBy` to be a primitive type in the JSON string but got " + data['startedBy']);
        }
        if (data['targets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targets'])) {
                throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
            }
            // validate the optional field `targets` (array)
            for (const item of data['targets']) {
                MaintenanceModeTarget.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * external friendly unique id for maintenance mode
 * @member {String} instanceId
 */
ActiveMaintenanceMode.prototype['instanceId'] = undefined;

/**
 * whether this instance is a global maintenance mode or for specific routing keys
 * @member {Boolean} isGlobal
 */
ActiveMaintenanceMode.prototype['isGlobal'] = undefined;

/**
 * millis from epoch marking the start time
 * @member {Number} startedAt
 */
ActiveMaintenanceMode.prototype['startedAt'] = undefined;

/**
 * username of the user that started maintenance mode
 * @member {String} startedBy
 */
ActiveMaintenanceMode.prototype['startedBy'] = undefined;

/**
 * @member {Array.<module:model/MaintenanceModeTarget>} targets
 */
ActiveMaintenanceMode.prototype['targets'] = undefined;






export default ActiveMaintenanceMode;

