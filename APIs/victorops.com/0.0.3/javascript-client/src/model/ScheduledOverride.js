/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Assignment from './Assignment';
import ScheduledUser from './ScheduledUser';

/**
 * The ScheduledOverride model module.
 * @module model/ScheduledOverride
 * @version 0.0.3
 */
class ScheduledOverride {
    /**
     * Constructs a new <code>ScheduledOverride</code>.
     * @alias module:model/ScheduledOverride
     */
    constructor() { 
        
        ScheduledOverride.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScheduledOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduledOverride} obj Optional instance to populate.
     * @return {module:model/ScheduledOverride} The populated <code>ScheduledOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduledOverride();

            if (data.hasOwnProperty('assignments')) {
                obj['assignments'] = ApiClient.convertToType(data['assignments'], [Assignment]);
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'String');
            }
            if (data.hasOwnProperty('publicId')) {
                obj['publicId'] = ApiClient.convertToType(data['publicId'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ScheduledUser.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduledOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduledOverride</code>.
     */
    static validateJSON(data) {
        if (data['assignments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assignments'])) {
                throw new Error("Expected the field `assignments` to be an array in the JSON data but got " + data['assignments']);
            }
            // validate the optional field `assignments` (array)
            for (const item of data['assignments']) {
                Assignment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['end'] && !(typeof data['end'] === 'string' || data['end'] instanceof String)) {
            throw new Error("Expected the field `end` to be a primitive type in the JSON string but got " + data['end']);
        }
        // ensure the json data is a string
        if (data['publicId'] && !(typeof data['publicId'] === 'string' || data['publicId'] instanceof String)) {
            throw new Error("Expected the field `publicId` to be a primitive type in the JSON string but got " + data['publicId']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          ScheduledUser.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Assignment>} assignments
 */
ScheduledOverride.prototype['assignments'] = undefined;

/**
 * The override end time (ISO 8601)
 * @member {String} end
 */
ScheduledOverride.prototype['end'] = undefined;

/**
 * @member {String} publicId
 */
ScheduledOverride.prototype['publicId'] = undefined;

/**
 * The override start time (ISO 8601).
 * @member {String} start
 */
ScheduledOverride.prototype['start'] = undefined;

/**
 * @member {String} timezone
 */
ScheduledOverride.prototype['timezone'] = undefined;

/**
 * @member {module:model/ScheduledUser} user
 */
ScheduledOverride.prototype['user'] = undefined;






export default ScheduledOverride;

