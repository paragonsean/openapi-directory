/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';

/**
 * The OnCallRoll model module.
 * @module model/OnCallRoll
 * @version 0.0.3
 */
class OnCallRoll {
    /**
     * Constructs a new <code>OnCallRoll</code>.
     * @alias module:model/OnCallRoll
     * @param end {String} The on-call period end time (ISO 8601)
     * @param isRoll {Boolean} 
     * @param start {String} The on-call period start time (ISO 8601)
     */
    constructor(end, isRoll, start) { 
        
        OnCallRoll.initialize(this, end, isRoll, start);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, end, isRoll, start) { 
        obj['end'] = end;
        obj['isRoll'] = isRoll;
        obj['start'] = start;
    }

    /**
     * Constructs a <code>OnCallRoll</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnCallRoll} obj Optional instance to populate.
     * @return {module:model/OnCallRoll} The populated <code>OnCallRoll</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnCallRoll();

            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'String');
            }
            if (data.hasOwnProperty('isRoll')) {
                obj['isRoll'] = ApiClient.convertToType(data['isRoll'], 'Boolean');
            }
            if (data.hasOwnProperty('onCallUser')) {
                obj['onCallUser'] = User.constructFromObject(data['onCallUser']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnCallRoll</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnCallRoll</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OnCallRoll.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['end'] && !(typeof data['end'] === 'string' || data['end'] instanceof String)) {
            throw new Error("Expected the field `end` to be a primitive type in the JSON string but got " + data['end']);
        }
        // validate the optional field `onCallUser`
        if (data['onCallUser']) { // data not null
          User.validateJSON(data['onCallUser']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }

        return true;
    }


}

OnCallRoll.RequiredProperties = ["end", "isRoll", "start"];

/**
 * The on-call period end time (ISO 8601)
 * @member {String} end
 */
OnCallRoll.prototype['end'] = undefined;

/**
 * @member {Boolean} isRoll
 */
OnCallRoll.prototype['isRoll'] = undefined;

/**
 * @member {module:model/User} onCallUser
 */
OnCallRoll.prototype['onCallUser'] = undefined;

/**
 * The on-call period start time (ISO 8601)
 * @member {String} start
 */
OnCallRoll.prototype['start'] = undefined;






export default OnCallRoll;

