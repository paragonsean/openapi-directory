/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TeamScheduleRollResource from './TeamScheduleRollResource';

/**
 * The TeamScheduleResource model module.
 * @module model/TeamScheduleResource
 * @version 0.0.3
 */
class TeamScheduleResource {
    /**
     * Constructs a new <code>TeamScheduleResource</code>.
     * @alias module:model/TeamScheduleResource
     * @param policyType {String} 
     * @param rolls {Array.<module:model/TeamScheduleRollResource>} 
     */
    constructor(policyType, rolls) { 
        
        TeamScheduleResource.initialize(this, policyType, rolls);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, policyType, rolls) { 
        obj['policyType'] = policyType;
        obj['rolls'] = rolls;
    }

    /**
     * Constructs a <code>TeamScheduleResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamScheduleResource} obj Optional instance to populate.
     * @return {module:model/TeamScheduleResource} The populated <code>TeamScheduleResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamScheduleResource();

            if (data.hasOwnProperty('oncall')) {
                obj['oncall'] = ApiClient.convertToType(data['oncall'], 'String');
            }
            if (data.hasOwnProperty('overrideoncall')) {
                obj['overrideoncall'] = ApiClient.convertToType(data['overrideoncall'], 'String');
            }
            if (data.hasOwnProperty('policyType')) {
                obj['policyType'] = ApiClient.convertToType(data['policyType'], 'String');
            }
            if (data.hasOwnProperty('rolls')) {
                obj['rolls'] = ApiClient.convertToType(data['rolls'], [TeamScheduleRollResource]);
            }
            if (data.hasOwnProperty('rotationName')) {
                obj['rotationName'] = ApiClient.convertToType(data['rotationName'], 'String');
            }
            if (data.hasOwnProperty('shiftName')) {
                obj['shiftName'] = ApiClient.convertToType(data['shiftName'], 'String');
            }
            if (data.hasOwnProperty('shiftRoll')) {
                obj['shiftRoll'] = ApiClient.convertToType(data['shiftRoll'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamScheduleResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamScheduleResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TeamScheduleResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['oncall'] && !(typeof data['oncall'] === 'string' || data['oncall'] instanceof String)) {
            throw new Error("Expected the field `oncall` to be a primitive type in the JSON string but got " + data['oncall']);
        }
        // ensure the json data is a string
        if (data['overrideoncall'] && !(typeof data['overrideoncall'] === 'string' || data['overrideoncall'] instanceof String)) {
            throw new Error("Expected the field `overrideoncall` to be a primitive type in the JSON string but got " + data['overrideoncall']);
        }
        // ensure the json data is a string
        if (data['policyType'] && !(typeof data['policyType'] === 'string' || data['policyType'] instanceof String)) {
            throw new Error("Expected the field `policyType` to be a primitive type in the JSON string but got " + data['policyType']);
        }
        if (data['rolls']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rolls'])) {
                throw new Error("Expected the field `rolls` to be an array in the JSON data but got " + data['rolls']);
            }
            // validate the optional field `rolls` (array)
            for (const item of data['rolls']) {
                TeamScheduleRollResource.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['rotationName'] && !(typeof data['rotationName'] === 'string' || data['rotationName'] instanceof String)) {
            throw new Error("Expected the field `rotationName` to be a primitive type in the JSON string but got " + data['rotationName']);
        }
        // ensure the json data is a string
        if (data['shiftName'] && !(typeof data['shiftName'] === 'string' || data['shiftName'] instanceof String)) {
            throw new Error("Expected the field `shiftName` to be a primitive type in the JSON string but got " + data['shiftName']);
        }

        return true;
    }


}

TeamScheduleResource.RequiredProperties = ["policyType", "rolls"];

/**
 * The user scheduled on call (if any)
 * @member {String} oncall
 */
TeamScheduleResource.prototype['oncall'] = undefined;

/**
 * The user overriding the scheduled on call user (if any)
 * @member {String} overrideoncall
 */
TeamScheduleResource.prototype['overrideoncall'] = undefined;

/**
 * @member {String} policyType
 */
TeamScheduleResource.prototype['policyType'] = undefined;

/**
 * @member {Array.<module:model/TeamScheduleRollResource>} rolls
 */
TeamScheduleResource.prototype['rolls'] = undefined;

/**
 * @member {String} rotationName
 */
TeamScheduleResource.prototype['rotationName'] = undefined;

/**
 * @member {String} shiftName
 */
TeamScheduleResource.prototype['shiftName'] = undefined;

/**
 * @member {Number} shiftRoll
 */
TeamScheduleResource.prototype['shiftRoll'] = undefined;






export default TeamScheduleResource;

