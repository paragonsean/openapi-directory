/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OnCallInterval from './OnCallInterval';
import OnCallIntervalDuration from './OnCallIntervalDuration';

/**
 * The UserLog model module.
 * @module model/UserLog
 * @version 0.0.3
 */
class UserLog {
    /**
     * Constructs a new <code>UserLog</code>.
     * @alias module:model/UserLog
     */
    constructor() { 
        
        UserLog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserLog} obj Optional instance to populate.
     * @return {module:model/UserLog} The populated <code>UserLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserLog();

            if (data.hasOwnProperty('adjustedTotal')) {
                obj['adjustedTotal'] = OnCallIntervalDuration.constructFromObject(data['adjustedTotal']);
            }
            if (data.hasOwnProperty('log')) {
                obj['log'] = ApiClient.convertToType(data['log'], [OnCallInterval]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = OnCallIntervalDuration.constructFromObject(data['total']);
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserLog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserLog</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adjustedTotal`
        if (data['adjustedTotal']) { // data not null
          OnCallIntervalDuration.validateJSON(data['adjustedTotal']);
        }
        if (data['log']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['log'])) {
                throw new Error("Expected the field `log` to be an array in the JSON data but got " + data['log']);
            }
            // validate the optional field `log` (array)
            for (const item of data['log']) {
                OnCallInterval.validateJSON(item);
            };
        }
        // validate the optional field `total`
        if (data['total']) { // data not null
          OnCallIntervalDuration.validateJSON(data['total']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * @member {module:model/OnCallIntervalDuration} adjustedTotal
 */
UserLog.prototype['adjustedTotal'] = undefined;

/**
 * @member {Array.<module:model/OnCallInterval>} log
 */
UserLog.prototype['log'] = undefined;

/**
 * @member {module:model/OnCallIntervalDuration} total
 */
UserLog.prototype['total'] = undefined;

/**
 * @member {String} userId
 */
UserLog.prototype['userId'] = undefined;






export default UserLog;

