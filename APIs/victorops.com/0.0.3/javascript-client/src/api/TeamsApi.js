/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddTeamMemberPayload from '../model/AddTeamMemberPayload';
import AddTeamPayload from '../model/AddTeamPayload';
import EscalationPolicyList from '../model/EscalationPolicyList';
import ListTeamMembersResponse from '../model/ListTeamMembersResponse';
import RemoveTeamMemberPayload from '../model/RemoveTeamMemberPayload';
import TeamAdminsResponse from '../model/TeamAdminsResponse';
import TeamDetail from '../model/TeamDetail';

/**
* Teams service.
* @module api/TeamsApi
* @version 0.0.3
*/
export default class TeamsApi {

    /**
    * Constructs a new TeamsApi. 
    * @alias module:api/TeamsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPublicV1TeamGet operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TeamDetail>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List teams
     * Get a list of teams for your organization.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/TeamsApi~apiPublicV1TeamGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TeamDetail>}
     */
    apiPublicV1TeamGet(xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [TeamDetail];
      return this.apiClient.callApi(
        '/api-public/v1/team', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamPost operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TeamDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a team
     * Add a team to your organization.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/AddTeamPayload} body The team information
     * @param {module:api/TeamsApi~apiPublicV1TeamPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TeamDetail}
     */
    apiPublicV1TeamPost(xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1TeamPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TeamDetail;
      return this.apiClient.callApi(
        '/api-public/v1/team', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamAdminsGet operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamAdminsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TeamAdminsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of team admins for a team
     * Get the team admins for the specified team.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamAdminsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TeamAdminsResponse}
     */
    apiPublicV1TeamTeamAdminsGet(xVOApiId, xVOApiKey, team, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamAdminsGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamAdminsGet");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamAdminsGet");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TeamAdminsResponse;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/admins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamDelete operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a team
     * Remove a team from your organization.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to be deleted
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPublicV1TeamTeamDelete(xVOApiId, xVOApiKey, team, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamDelete");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamDelete");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamDelete");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamGet operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TeamDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve information for a team
     * Get the information for the specified team.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to fetch
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TeamDetail}
     */
    apiPublicV1TeamTeamGet(xVOApiId, xVOApiKey, team, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamGet");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamGet");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TeamDetail;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamMembersGet operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamMembersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTeamMembersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of members for a team
     * Get the members for the specified team.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to fetch
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamMembersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTeamMembersResponse}
     */
    apiPublicV1TeamTeamMembersGet(xVOApiId, xVOApiKey, team, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamMembersGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamMembersGet");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamMembersGet");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTeamMembersResponse;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/members', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamMembersPost operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamMembersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTeamMembersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a team member
     * Add a team member to your team.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to fetch
     * @param {module:model/AddTeamMemberPayload} body 
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamMembersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTeamMembersResponse}
     */
    apiPublicV1TeamTeamMembersPost(xVOApiId, xVOApiKey, team, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamMembersPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamMembersPost");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamMembersPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1TeamTeamMembersPost");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTeamMembersResponse;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/members', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamMembersUserDelete operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamMembersUserDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a team member
     * Remove a team from your organization.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to be deleted
     * @param {String} user The team member username
     * @param {module:model/RemoveTeamMemberPayload} body The user information
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamMembersUserDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPublicV1TeamTeamMembersUserDelete(xVOApiId, xVOApiKey, team, user, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamMembersUserDelete");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamMembersUserDelete");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamMembersUserDelete");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV1TeamTeamMembersUserDelete");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1TeamTeamMembersUserDelete");
      }

      let pathParams = {
        'team': team,
        'user': user
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/members/{user}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamPoliciesGet_0 operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamPoliciesGet_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/EscalationPolicyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of escalation policies for a team
     * Get the escalation policies for the specified team.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to fetch
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamPoliciesGet_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EscalationPolicyList}
     */
    apiPublicV1TeamTeamPoliciesGet_0(xVOApiId, xVOApiKey, team, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamPoliciesGet_0");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamPoliciesGet_0");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamPoliciesGet_0");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EscalationPolicyList;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamPut operation.
     * @callback module:api/TeamsApi~apiPublicV1TeamTeamPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TeamDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a team
     * Update the designated team  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team to be updated
     * @param {module:model/AddTeamPayload} body The team information
     * @param {module:api/TeamsApi~apiPublicV1TeamTeamPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TeamDetail}
     */
    apiPublicV1TeamTeamPut(xVOApiId, xVOApiKey, team, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamPut");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamPut");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1TeamTeamPut");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TeamDetail;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
