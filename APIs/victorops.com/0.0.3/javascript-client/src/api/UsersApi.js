/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddUserPayload from '../model/AddUserPayload';
import DeleteUserPayload from '../model/DeleteUserPayload';
import ListUserResponse from '../model/ListUserResponse';
import UserTeamsResponse from '../model/UserTeamsResponse';
import V1User from '../model/V1User';

/**
* Users service.
* @module api/UsersApi
* @version 0.0.3
*/
export default class UsersApi {

    /**
    * Constructs a new UsersApi. 
    * @alias module:api/UsersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPublicV1UserGet operation.
     * @callback module:api/UsersApi~apiPublicV1UserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List users
     * Get a list of users for your organization  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/UsersApi~apiPublicV1UserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUserResponse}
     */
    apiPublicV1UserGet(xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListUserResponse;
      return this.apiClient.callApi(
        '/api-public/v1/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserPost operation.
     * @callback module:api/UsersApi~apiPublicV1UserPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a user
     * Add a user to your organization  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/AddUserPayload} body 
     * @param {module:api/UsersApi~apiPublicV1UserPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1User}
     */
    apiPublicV1UserPost(xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1UserPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = V1User;
      return this.apiClient.callApi(
        '/api-public/v1/user', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserUserDelete operation.
     * @callback module:api/UsersApi~apiPublicV1UserUserDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a user
     * Remove a user from your organization. If no replacement is specified, an empty JSON payload (\"{}\") is still required.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} user The VictorOps user to be deleted
     * @param {module:model/DeleteUserPayload} body 
     * @param {module:api/UsersApi~apiPublicV1UserUserDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPublicV1UserUserDelete(xVOApiId, xVOApiKey, user, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserUserDelete");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserUserDelete");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV1UserUserDelete");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1UserUserDelete");
      }

      let pathParams = {
        'user': user
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api-public/v1/user/{user}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserUserGet operation.
     * @callback module:api/UsersApi~apiPublicV1UserUserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve information for a user
     * Get the information for the specified user  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} user The VictorOps user to fetch
     * @param {module:api/UsersApi~apiPublicV1UserUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1User}
     */
    apiPublicV1UserUserGet(xVOApiId, xVOApiKey, user, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserUserGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserUserGet");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV1UserUserGet");
      }

      let pathParams = {
        'user': user
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = V1User;
      return this.apiClient.callApi(
        '/api-public/v1/user/{user}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserUserPut operation.
     * @callback module:api/UsersApi~apiPublicV1UserUserPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a user
     * Update the designated user  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} user The VictorOps user to be updated
     * @param {module:model/AddUserPayload} body 
     * @param {module:api/UsersApi~apiPublicV1UserUserPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1User}
     */
    apiPublicV1UserUserPut(xVOApiId, xVOApiKey, user, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserUserPut");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserUserPut");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV1UserUserPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1UserUserPut");
      }

      let pathParams = {
        'user': user
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = V1User;
      return this.apiClient.callApi(
        '/api-public/v1/user/{user}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserUserTeamsGet operation.
     * @callback module:api/UsersApi~apiPublicV1UserUserTeamsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserTeamsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the user's team membership
     * This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} user The VictorOps user
     * @param {module:api/UsersApi~apiPublicV1UserUserTeamsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserTeamsResponse}
     */
    apiPublicV1UserUserTeamsGet(xVOApiId, xVOApiKey, user, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserUserTeamsGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserUserTeamsGet");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV1UserUserTeamsGet");
      }

      let pathParams = {
        'user': user
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserTeamsResponse;
      return this.apiClient.callApi(
        '/api-public/v1/user/{user}/teams', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
