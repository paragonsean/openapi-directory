/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiPublicV1OncallCurrentGet200Response from '../model/ApiPublicV1OncallCurrentGet200Response';
import OnCallAndOverrides from '../model/OnCallAndOverrides';
import TakeRequest from '../model/TakeRequest';
import TakeResult from '../model/TakeResult';
import TeamSchedule from '../model/TeamSchedule';
import UserSchedule from '../model/UserSchedule';

/**
* OnCall service.
* @module api/OnCallApi
* @version 0.0.3
*/
export default class OnCallApi {

    /**
    * Constructs a new OnCallApi. 
    * @alias module:api/OnCallApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPublicV1OncallCurrentGet operation.
     * @callback module:api/OnCallApi~apiPublicV1OncallCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1OncallCurrentGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an organization's on-call users
     * Get all on-call users/teams for your organization.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/OnCallApi~apiPublicV1OncallCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1OncallCurrentGet200Response}
     */
    apiPublicV1OncallCurrentGet(xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OncallCurrentGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OncallCurrentGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1OncallCurrentGet200Response;
      return this.apiClient.callApi(
        '/api-public/v1/oncall/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1PoliciesPolicyOncallUserPatch operation.
     * @callback module:api/OnCallApi~apiPublicV1PoliciesPolicyOncallUserPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TakeResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an on-call override (take on-call)
     * Replaces a currently on-call user in the escalation policy with another.  In many cases, the policy slug will match the slug of the team that contains it.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} policy The VictorOps policy 'slug'
     * @param {module:model/TakeRequest} body The take on-call payload
     * @param {module:api/OnCallApi~apiPublicV1PoliciesPolicyOncallUserPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TakeResult}
     */
    apiPublicV1PoliciesPolicyOncallUserPatch(xVOApiId, xVOApiKey, policy, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1PoliciesPolicyOncallUserPatch");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1PoliciesPolicyOncallUserPatch");
      }
      // verify the required parameter 'policy' is set
      if (policy === undefined || policy === null) {
        throw new Error("Missing the required parameter 'policy' when calling apiPublicV1PoliciesPolicyOncallUserPatch");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1PoliciesPolicyOncallUserPatch");
      }

      let pathParams = {
        'policy': policy
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TakeResult;
      return this.apiClient.callApi(
        '/api-public/v1/policies/{policy}/oncall/user', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamOncallScheduleGet operation.
     * @callback module:api/OnCallApi~apiPublicV1TeamTeamOncallScheduleGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnCallAndOverrides} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a team's on-call schedule
     * __NOTE: This call is deprecated. Please use `GET /api-public/v2/team/{team}/oncall/schedule`.__  Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team 'slug'
     * @param {Object} opts Optional parameters
     * @param {Number} [daysForward = 14.0)] Days to include in returned schedule (30 max)
     * @param {Number} [daysSkip = 0.0)] Days to skip before computing schedule to return (90 max)
     * @param {Number} [step = 0.0)] Step of escalation policy (3 max)
     * @param {module:api/OnCallApi~apiPublicV1TeamTeamOncallScheduleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnCallAndOverrides}
     */
    apiPublicV1TeamTeamOncallScheduleGet(xVOApiId, xVOApiKey, team, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamOncallScheduleGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamOncallScheduleGet");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamOncallScheduleGet");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
        'daysForward': opts['daysForward'],
        'daysSkip': opts['daysSkip'],
        'step': opts['step']
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OnCallAndOverrides;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/oncall/schedule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1TeamTeamOncallUserPatch operation.
     * @callback module:api/OnCallApi~apiPublicV1TeamTeamOncallUserPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TakeResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an on-call override (take on-call)
     * __NOTE: This API call is deprecated. Please use `PATCH /api-public/v2/policies/{policy}/oncall/user`__  Replaces a currently on-call user on the team with another.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team 'slug'
     * @param {module:model/TakeRequest} body The take on-call payload
     * @param {module:api/OnCallApi~apiPublicV1TeamTeamOncallUserPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TakeResult}
     */
    apiPublicV1TeamTeamOncallUserPatch(xVOApiId, xVOApiKey, team, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1TeamTeamOncallUserPatch");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1TeamTeamOncallUserPatch");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV1TeamTeamOncallUserPatch");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1TeamTeamOncallUserPatch");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TakeResult;
      return this.apiClient.callApi(
        '/api-public/v1/team/{team}/oncall/user', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserUserOncallScheduleGet operation.
     * @callback module:api/OnCallApi~apiPublicV1UserUserOncallScheduleGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OnCallAndOverrides>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a user's on-call schedule
     * __NOTE: This call is deprecated. Please use `GET /api-public/v2/user/{user}/oncall/schedule`.__  Get the on-call schedule for a user for all teams, including on-call overrides.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} user The VictorOps user ID
     * @param {Object} opts Optional parameters
     * @param {Number} [daysForward = 14.0)] Days to include in returned schedule (30 max)
     * @param {Number} [daysSkip = 0.0)] Days to skip before computing schedule to return (90 max)
     * @param {Number} [step = 0.0)] Step of escalation policy (3 max)
     * @param {module:api/OnCallApi~apiPublicV1UserUserOncallScheduleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OnCallAndOverrides>}
     */
    apiPublicV1UserUserOncallScheduleGet(xVOApiId, xVOApiKey, user, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1UserUserOncallScheduleGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1UserUserOncallScheduleGet");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV1UserUserOncallScheduleGet");
      }

      let pathParams = {
        'user': user
      };
      let queryParams = {
        'daysForward': opts['daysForward'],
        'daysSkip': opts['daysSkip'],
        'step': opts['step']
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [OnCallAndOverrides];
      return this.apiClient.callApi(
        '/api-public/v1/user/{user}/oncall/schedule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV2TeamTeamOncallScheduleGet operation.
     * @callback module:api/OnCallApi~apiPublicV2TeamTeamOncallScheduleGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TeamSchedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a team's on-call schedule
     * Get the on-call schedule for a team, including on-call overrides.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} team The VictorOps team 'slug'
     * @param {Object} opts Optional parameters
     * @param {Number} [daysForward = 14.0)] Days to include in returned schedule (30 max)
     * @param {Number} [daysSkip = 0.0)] Days to skip before computing schedule to return (90 max)
     * @param {Number} [step = 0.0)] Step of escalation policy (3 max)
     * @param {module:api/OnCallApi~apiPublicV2TeamTeamOncallScheduleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TeamSchedule}
     */
    apiPublicV2TeamTeamOncallScheduleGet(xVOApiId, xVOApiKey, team, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV2TeamTeamOncallScheduleGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV2TeamTeamOncallScheduleGet");
      }
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling apiPublicV2TeamTeamOncallScheduleGet");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
        'daysForward': opts['daysForward'],
        'daysSkip': opts['daysSkip'],
        'step': opts['step']
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TeamSchedule;
      return this.apiClient.callApi(
        '/api-public/v2/team/{team}/oncall/schedule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV2UserUserOncallScheduleGet operation.
     * @callback module:api/OnCallApi~apiPublicV2UserUserOncallScheduleGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserSchedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a user's on-call schedule
     * Get the on-call schedule for a user for all teams the user is on, including on-call overrides.  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} user The VictorOps user ID
     * @param {Object} opts Optional parameters
     * @param {Number} [daysForward = 14.0)] Days to include in returned schedule (30 max)
     * @param {Number} [daysSkip = 0.0)] Days to skip before computing schedule to return (90 max)
     * @param {Number} [step = 0.0)] Step of escalation policy (3 max)
     * @param {module:api/OnCallApi~apiPublicV2UserUserOncallScheduleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserSchedule}
     */
    apiPublicV2UserUserOncallScheduleGet(xVOApiId, xVOApiKey, user, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV2UserUserOncallScheduleGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV2UserUserOncallScheduleGet");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling apiPublicV2UserUserOncallScheduleGet");
      }

      let pathParams = {
        'user': user
      };
      let queryParams = {
        'daysForward': opts['daysForward'],
        'daysSkip': opts['daysSkip'],
        'step': opts['step']
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserSchedule;
      return this.apiClient.callApi(
        '/api-public/v2/user/{user}/oncall/schedule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
