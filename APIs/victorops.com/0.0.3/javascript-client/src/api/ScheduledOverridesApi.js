/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiPublicV1OverridesGet200Response from '../model/ApiPublicV1OverridesGet200Response';
import ApiPublicV1OverridesPost200Response from '../model/ApiPublicV1OverridesPost200Response';
import ApiPublicV1OverridesPublicIdGet200Response from '../model/ApiPublicV1OverridesPublicIdGet200Response';
import Assignment from '../model/Assignment';
import ScheduledOverridePayload from '../model/ScheduledOverridePayload';
import UpdateAssignment from '../model/UpdateAssignment';

/**
* ScheduledOverrides service.
* @module api/ScheduledOverridesApi
* @version 0.0.3
*/
export default class ScheduledOverridesApi {

    /**
    * Constructs a new ScheduledOverridesApi. 
    * @alias module:api/ScheduledOverridesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPublicV1OverridesGet operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1OverridesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the scheduled overrides
     * List all the scheduled overrides on the organization  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1OverridesGet200Response}
     */
    apiPublicV1OverridesGet(xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1OverridesGet200Response;
      return this.apiClient.callApi(
        '/api-public/v1/overrides', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPost operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1OverridesPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new scheduled override
     * Creates a new scheduled override. Start and end dates are in ISO8601 format. E.g. `2018-09-28'T'05:00:00Z`  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/ScheduledOverridePayload} body 
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1OverridesPost200Response}
     */
    apiPublicV1OverridesPost(xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1OverridesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1OverridesPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/overrides', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPublicIdAssignmentsGet operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Assignment>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified scheduled override
     * Get the specified scheduled override assignments  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} publicId The publicId of the scheduled override
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Assignment>}
     */
    apiPublicV1OverridesPublicIdAssignmentsGet(xVOApiId, xVOApiKey, publicId, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPublicIdAssignmentsGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPublicIdAssignmentsGet");
      }
      // verify the required parameter 'publicId' is set
      if (publicId === undefined || publicId === null) {
        throw new Error("Missing the required parameter 'publicId' when calling apiPublicV1OverridesPublicIdAssignmentsGet");
      }

      let pathParams = {
        'publicId': publicId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Assignment];
      return this.apiClient.callApi(
        '/api-public/v1/overrides/{publicId}/assignments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPublicIdAssignmentsPolicySlugDelete operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsPolicySlugDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Assignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the scheduled override assignment
     * Delete the scheduled override assignment  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} publicId The publicId of the scheduled override
     * @param {String} policySlug The policySlug of the assignment
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsPolicySlugDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Assignment}
     */
    apiPublicV1OverridesPublicIdAssignmentsPolicySlugDelete(xVOApiId, xVOApiKey, publicId, policySlug, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugDelete");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugDelete");
      }
      // verify the required parameter 'publicId' is set
      if (publicId === undefined || publicId === null) {
        throw new Error("Missing the required parameter 'publicId' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugDelete");
      }
      // verify the required parameter 'policySlug' is set
      if (policySlug === undefined || policySlug === null) {
        throw new Error("Missing the required parameter 'policySlug' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugDelete");
      }

      let pathParams = {
        'publicId': publicId,
        'policySlug': policySlug
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Assignment;
      return this.apiClient.callApi(
        '/api-public/v1/overrides/{publicId}/assignments/{policySlug}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPublicIdAssignmentsPolicySlugGet operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsPolicySlugGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Assignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified scheduled override assignment
     * Get the specified scheduled override assignments  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} publicId The publicId of the scheduled override
     * @param {String} policySlug The policySlug of the assignment
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsPolicySlugGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Assignment}
     */
    apiPublicV1OverridesPublicIdAssignmentsPolicySlugGet(xVOApiId, xVOApiKey, publicId, policySlug, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugGet");
      }
      // verify the required parameter 'publicId' is set
      if (publicId === undefined || publicId === null) {
        throw new Error("Missing the required parameter 'publicId' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugGet");
      }
      // verify the required parameter 'policySlug' is set
      if (policySlug === undefined || policySlug === null) {
        throw new Error("Missing the required parameter 'policySlug' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugGet");
      }

      let pathParams = {
        'publicId': publicId,
        'policySlug': policySlug
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Assignment;
      return this.apiClient.callApi(
        '/api-public/v1/overrides/{publicId}/assignments/{policySlug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsPolicySlugPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Assignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the scheduled override assignment
     * Update the scheduled override assignment  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} publicId The publicId of the scheduled override
     * @param {String} policySlug The policySlug of the assignment
     * @param {module:model/UpdateAssignment} body The policy and username we are assigning
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdAssignmentsPolicySlugPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Assignment}
     */
    apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut(xVOApiId, xVOApiKey, publicId, policySlug, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut");
      }
      // verify the required parameter 'publicId' is set
      if (publicId === undefined || publicId === null) {
        throw new Error("Missing the required parameter 'publicId' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut");
      }
      // verify the required parameter 'policySlug' is set
      if (policySlug === undefined || policySlug === null) {
        throw new Error("Missing the required parameter 'policySlug' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1OverridesPublicIdAssignmentsPolicySlugPut");
      }

      let pathParams = {
        'publicId': publicId,
        'policySlug': policySlug
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Assignment;
      return this.apiClient.callApi(
        '/api-public/v1/overrides/{publicId}/assignments/{policySlug}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPublicIdDelete operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a scheduled override
     * Deletes a scheduled override  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} publicId The publicId of the scheduled override
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPublicV1OverridesPublicIdDelete(xVOApiId, xVOApiKey, publicId, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPublicIdDelete");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPublicIdDelete");
      }
      // verify the required parameter 'publicId' is set
      if (publicId === undefined || publicId === null) {
        throw new Error("Missing the required parameter 'publicId' when calling apiPublicV1OverridesPublicIdDelete");
      }

      let pathParams = {
        'publicId': publicId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api-public/v1/overrides/{publicId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1OverridesPublicIdGet operation.
     * @callback module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1OverridesPublicIdGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified scheduled override
     * Get the specified scheduled override  This API may be called a maximum of 60 times per minute. 
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} publicId The publicId of the scheduled override
     * @param {module:api/ScheduledOverridesApi~apiPublicV1OverridesPublicIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1OverridesPublicIdGet200Response}
     */
    apiPublicV1OverridesPublicIdGet(xVOApiId, xVOApiKey, publicId, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1OverridesPublicIdGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1OverridesPublicIdGet");
      }
      // verify the required parameter 'publicId' is set
      if (publicId === undefined || publicId === null) {
        throw new Error("Missing the required parameter 'publicId' when calling apiPublicV1OverridesPublicIdGet");
      }

      let pathParams = {
        'publicId': publicId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1OverridesPublicIdGet200Response;
      return this.apiClient.callApi(
        '/api-public/v1/overrides/{publicId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
