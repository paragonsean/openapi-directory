/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiPublicV1MaintenancemodeStartPostRequest from '../model/ApiPublicV1MaintenancemodeStartPostRequest';
import MaintenanceModeState from '../model/MaintenanceModeState';

/**
* MaintenanceMode service.
* @module api/MaintenanceModeApi
* @version 0.0.3
*/
export default class MaintenanceModeApi {

    /**
    * Constructs a new MaintenanceModeApi. 
    * @alias module:api/MaintenanceModeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPublicV1MaintenancemodeGet operation.
     * @callback module:api/MaintenanceModeApi~apiPublicV1MaintenancemodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MaintenanceModeState} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an organization's current maintenance mode state
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/MaintenanceModeApi~apiPublicV1MaintenancemodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MaintenanceModeState}
     */
    apiPublicV1MaintenancemodeGet(xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1MaintenancemodeGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1MaintenancemodeGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MaintenanceModeState;
      return this.apiClient.callApi(
        '/api-public/v1/maintenancemode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1MaintenancemodeMaintenancemodeidEndPut operation.
     * @callback module:api/MaintenanceModeApi~apiPublicV1MaintenancemodeMaintenancemodeidEndPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MaintenanceModeState} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * End maintenance mode for routing keys
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {String} maintenancemodeid The id of the maintenance mode found in the active maintenance mode object
     * @param {module:api/MaintenanceModeApi~apiPublicV1MaintenancemodeMaintenancemodeidEndPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MaintenanceModeState}
     */
    apiPublicV1MaintenancemodeMaintenancemodeidEndPut(xVOApiId, xVOApiKey, maintenancemodeid, callback) {
      let postBody = null;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1MaintenancemodeMaintenancemodeidEndPut");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1MaintenancemodeMaintenancemodeidEndPut");
      }
      // verify the required parameter 'maintenancemodeid' is set
      if (maintenancemodeid === undefined || maintenancemodeid === null) {
        throw new Error("Missing the required parameter 'maintenancemodeid' when calling apiPublicV1MaintenancemodeMaintenancemodeidEndPut");
      }

      let pathParams = {
        'maintenancemodeid': maintenancemodeid
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MaintenanceModeState;
      return this.apiClient.callApi(
        '/api-public/v1/maintenancemode/{maintenancemodeid}/end', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1MaintenancemodeStartPost operation.
     * @callback module:api/MaintenanceModeApi~apiPublicV1MaintenancemodeStartPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MaintenanceModeState} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start maintenance mode for routing keys
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/ApiPublicV1MaintenancemodeStartPostRequest} body the definition of the maintenance mode you want to start
     * @param {module:api/MaintenanceModeApi~apiPublicV1MaintenancemodeStartPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MaintenanceModeState}
     */
    apiPublicV1MaintenancemodeStartPost(xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1MaintenancemodeStartPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1MaintenancemodeStartPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1MaintenancemodeStartPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MaintenanceModeState;
      return this.apiClient.callApi(
        '/api-public/v1/maintenancemode/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
