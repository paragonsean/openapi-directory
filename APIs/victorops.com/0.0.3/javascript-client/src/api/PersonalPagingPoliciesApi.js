/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddGroupPayload from '../model/AddGroupPayload';
import AddStepPayload from '../model/AddStepPayload';
import ApiPublicV1ProfileUsernamePoliciesGet200Response from '../model/ApiPublicV1ProfileUsernamePoliciesGet200Response';
import ApiPublicV1ProfileUsernamePoliciesPost200Response from '../model/ApiPublicV1ProfileUsernamePoliciesPost200Response';
import ApiPublicV1ProfileUsernamePoliciesStepPost200Response from '../model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response';

/**
* PersonalPagingPolicies service.
* @module api/PersonalPagingPoliciesApi
* @version 0.0.3
*/
export default class PersonalPagingPoliciesApi {

    /**
    * Constructs a new PersonalPagingPoliciesApi. 
    * @alias module:api/PersonalPagingPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesGet operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the user's paging policy
     * Get all the paging policy steps for the user on the org associated with the API key  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesGet200Response}
     */
    apiPublicV1ProfileUsernamePoliciesGet(username, xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesGet");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesGet");
      }

      let pathParams = {
        'username': username
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesGet200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesPost operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a paging policy step
     * Create a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/AddGroupPayload} body 
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesPost(username, xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesPost");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1ProfileUsernamePoliciesPost");
      }

      let pathParams = {
        'username': username
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesStepGet operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a paging policy step
     * Get a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {Number} step Paging policy step
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesStepGet(username, step, xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesStepGet");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiPublicV1ProfileUsernamePoliciesStepGet");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesStepGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesStepGet");
      }

      let pathParams = {
        'username': username,
        'step': step
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies/{step}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesStepPost operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a rule for a paging policy step
     * Create a rule for a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {Number} step Paging policy step
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/AddStepPayload} body 
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesStepPost(username, step, xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesStepPost");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiPublicV1ProfileUsernamePoliciesStepPost");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesStepPost");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesStepPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1ProfileUsernamePoliciesStepPost");
      }

      let pathParams = {
        'username': username,
        'step': step
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesStepPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies/{step}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesStepPut operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a paging policy step
     * Update a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {Number} step Paging policy step
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/AddGroupPayload} body 
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesStepPut(username, step, xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesStepPut");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiPublicV1ProfileUsernamePoliciesStepPut");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesStepPut");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesStepPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1ProfileUsernamePoliciesStepPut");
      }

      let pathParams = {
        'username': username,
        'step': step
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies/{step}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesStepRuleDelete operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepRuleDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a rule from a paging policy step
     * Delete a rule from a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {Number} step Paging policy step
     * @param {Number} rule Rule for a paging policy step
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepRuleDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesStepRuleDelete(username, step, rule, xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesStepRuleDelete");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiPublicV1ProfileUsernamePoliciesStepRuleDelete");
      }
      // verify the required parameter 'rule' is set
      if (rule === undefined || rule === null) {
        throw new Error("Missing the required parameter 'rule' when calling apiPublicV1ProfileUsernamePoliciesStepRuleDelete");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesStepRuleDelete");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesStepRuleDelete");
      }

      let pathParams = {
        'username': username,
        'step': step,
        'rule': rule
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesStepPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies/{step}/{rule}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesStepRuleGet operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepRuleGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a rule from a paging policy step
     * Get a rule from a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {Number} step Paging policy step
     * @param {Number} rule Rule for a paging policy step
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepRuleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesStepRuleGet(username, step, rule, xVOApiId, xVOApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesStepRuleGet");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiPublicV1ProfileUsernamePoliciesStepRuleGet");
      }
      // verify the required parameter 'rule' is set
      if (rule === undefined || rule === null) {
        throw new Error("Missing the required parameter 'rule' when calling apiPublicV1ProfileUsernamePoliciesStepRuleGet");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesStepRuleGet");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesStepRuleGet");
      }

      let pathParams = {
        'username': username,
        'step': step,
        'rule': rule
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesStepPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies/{step}/{rule}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPublicV1ProfileUsernamePoliciesStepRulePut operation.
     * @callback module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepRulePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a rule for a paging policy step
     * Update a rule for a paging policy step  This API may be called a maximum of 60 times per minute. 
     * @param {String} username Your username
     * @param {Number} step Paging policy step
     * @param {Number} rule Rule for a paging policy step
     * @param {String} xVOApiId Your API ID
     * @param {String} xVOApiKey Your API Key
     * @param {module:model/AddStepPayload} body 
     * @param {module:api/PersonalPagingPoliciesApi~apiPublicV1ProfileUsernamePoliciesStepRulePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiPublicV1ProfileUsernamePoliciesStepPost200Response}
     */
    apiPublicV1ProfileUsernamePoliciesStepRulePut(username, step, rule, xVOApiId, xVOApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling apiPublicV1ProfileUsernamePoliciesStepRulePut");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiPublicV1ProfileUsernamePoliciesStepRulePut");
      }
      // verify the required parameter 'rule' is set
      if (rule === undefined || rule === null) {
        throw new Error("Missing the required parameter 'rule' when calling apiPublicV1ProfileUsernamePoliciesStepRulePut");
      }
      // verify the required parameter 'xVOApiId' is set
      if (xVOApiId === undefined || xVOApiId === null) {
        throw new Error("Missing the required parameter 'xVOApiId' when calling apiPublicV1ProfileUsernamePoliciesStepRulePut");
      }
      // verify the required parameter 'xVOApiKey' is set
      if (xVOApiKey === undefined || xVOApiKey === null) {
        throw new Error("Missing the required parameter 'xVOApiKey' when calling apiPublicV1ProfileUsernamePoliciesStepRulePut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiPublicV1ProfileUsernamePoliciesStepRulePut");
      }

      let pathParams = {
        'username': username,
        'step': step,
        'rule': rule
      };
      let queryParams = {
      };
      let headerParams = {
        'X-VO-Api-Id': xVOApiId,
        'X-VO-Api-Key': xVOApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiPublicV1ProfileUsernamePoliciesStepPost200Response;
      return this.apiClient.callApi(
        '/api-public/v1/profile/{username}/policies/{step}/{rule}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
