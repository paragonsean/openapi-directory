/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VictorOps);
  }
}(this, function(expect, VictorOps) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VictorOps.OnCallApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OnCallApi', function() {
    describe('apiPublicV1OncallCurrentGet', function() {
      it('should call apiPublicV1OncallCurrentGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1OncallCurrentGet
        //instance.apiPublicV1OncallCurrentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV1PoliciesPolicyOncallUserPatch', function() {
      it('should call apiPublicV1PoliciesPolicyOncallUserPatch successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1PoliciesPolicyOncallUserPatch
        //instance.apiPublicV1PoliciesPolicyOncallUserPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV1TeamTeamOncallScheduleGet', function() {
      it('should call apiPublicV1TeamTeamOncallScheduleGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1TeamTeamOncallScheduleGet
        //instance.apiPublicV1TeamTeamOncallScheduleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV1TeamTeamOncallUserPatch', function() {
      it('should call apiPublicV1TeamTeamOncallUserPatch successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1TeamTeamOncallUserPatch
        //instance.apiPublicV1TeamTeamOncallUserPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV1UserUserOncallScheduleGet', function() {
      it('should call apiPublicV1UserUserOncallScheduleGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1UserUserOncallScheduleGet
        //instance.apiPublicV1UserUserOncallScheduleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV2TeamTeamOncallScheduleGet', function() {
      it('should call apiPublicV2TeamTeamOncallScheduleGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV2TeamTeamOncallScheduleGet
        //instance.apiPublicV2TeamTeamOncallScheduleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV2UserUserOncallScheduleGet', function() {
      it('should call apiPublicV2UserUserOncallScheduleGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV2UserUserOncallScheduleGet
        //instance.apiPublicV2UserUserOncallScheduleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
