/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAckUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAckUser::OAIAckUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAckUser::OAIAckUser() {
    this->initializeModel();
}

OAIAckUser::~OAIAckUser() {}

void OAIAckUser::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_isSet = false;
    m_first_isValid = false;

    m_last_isSet = false;
    m_last_isValid = false;
}

void OAIAckUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAckUser::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_isValid = ::OpenAPI::fromJsonValue(m_first, json[QString("first")]);
    m_first_isSet = !json[QString("first")].isNull() && m_first_isValid;

    m_last_isValid = ::OpenAPI::fromJsonValue(m_last, json[QString("last")]);
    m_last_isSet = !json[QString("last")].isNull() && m_last_isValid;
}

QString OAIAckUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAckUser::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_isSet) {
        obj.insert(QString("first"), ::OpenAPI::toJsonValue(m_first));
    }
    if (m_last_isSet) {
        obj.insert(QString("last"), ::OpenAPI::toJsonValue(m_last));
    }
    return obj;
}

QString OAIAckUser::getEmail() const {
    return m_email;
}
void OAIAckUser::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAckUser::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAckUser::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAckUser::getFirst() const {
    return m_first;
}
void OAIAckUser::setFirst(const QString &first) {
    m_first = first;
    m_first_isSet = true;
}

bool OAIAckUser::is_first_Set() const{
    return m_first_isSet;
}

bool OAIAckUser::is_first_Valid() const{
    return m_first_isValid;
}

QString OAIAckUser::getLast() const {
    return m_last;
}
void OAIAckUser::setLast(const QString &last) {
    m_last = last;
    m_last_isSet = true;
}

bool OAIAckUser::is_last_Set() const{
    return m_last_isSet;
}

bool OAIAckUser::is_last_Valid() const{
    return m_last_isValid;
}

bool OAIAckUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAckUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
