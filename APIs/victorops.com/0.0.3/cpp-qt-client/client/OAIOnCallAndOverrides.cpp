/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOnCallAndOverrides.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOnCallAndOverrides::OAIOnCallAndOverrides(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOnCallAndOverrides::OAIOnCallAndOverrides() {
    this->initializeModel();
}

OAIOnCallAndOverrides::~OAIOnCallAndOverrides() {}

void OAIOnCallAndOverrides::initializeModel() {

    m_overrides_isSet = false;
    m_overrides_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_team_isSet = false;
    m_team_isValid = false;
}

void OAIOnCallAndOverrides::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOnCallAndOverrides::fromJsonObject(QJsonObject json) {

    m_overrides_isValid = ::OpenAPI::fromJsonValue(m_overrides, json[QString("overrides")]);
    m_overrides_isSet = !json[QString("overrides")].isNull() && m_overrides_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_team_isValid = ::OpenAPI::fromJsonValue(m_team, json[QString("team")]);
    m_team_isSet = !json[QString("team")].isNull() && m_team_isValid;
}

QString OAIOnCallAndOverrides::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOnCallAndOverrides::asJsonObject() const {
    QJsonObject obj;
    if (m_overrides.size() > 0) {
        obj.insert(QString("overrides"), ::OpenAPI::toJsonValue(m_overrides));
    }
    if (m_schedule.size() > 0) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_team_isSet) {
        obj.insert(QString("team"), ::OpenAPI::toJsonValue(m_team));
    }
    return obj;
}

QList<OAITeamScheduleOverlayResource> OAIOnCallAndOverrides::getOverrides() const {
    return m_overrides;
}
void OAIOnCallAndOverrides::setOverrides(const QList<OAITeamScheduleOverlayResource> &overrides) {
    m_overrides = overrides;
    m_overrides_isSet = true;
}

bool OAIOnCallAndOverrides::is_overrides_Set() const{
    return m_overrides_isSet;
}

bool OAIOnCallAndOverrides::is_overrides_Valid() const{
    return m_overrides_isValid;
}

QList<OAITeamScheduleResource> OAIOnCallAndOverrides::getSchedule() const {
    return m_schedule;
}
void OAIOnCallAndOverrides::setSchedule(const QList<OAITeamScheduleResource> &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIOnCallAndOverrides::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIOnCallAndOverrides::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QString OAIOnCallAndOverrides::getTeam() const {
    return m_team;
}
void OAIOnCallAndOverrides::setTeam(const QString &team) {
    m_team = team;
    m_team_isSet = true;
}

bool OAIOnCallAndOverrides::is_team_Set() const{
    return m_team_isSet;
}

bool OAIOnCallAndOverrides::is_team_Valid() const{
    return m_team_isValid;
}

bool OAIOnCallAndOverrides::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_overrides.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOnCallAndOverrides::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
