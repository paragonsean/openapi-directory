/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_public_v1_policies_types_contacts_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_public_v1_policies_types_contacts_get_200_response::OAI_api_public_v1_policies_types_contacts_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_public_v1_policies_types_contacts_get_200_response::OAI_api_public_v1_policies_types_contacts_get_200_response() {
    this->initializeModel();
}

OAI_api_public_v1_policies_types_contacts_get_200_response::~OAI_api_public_v1_policies_types_contacts_get_200_response() {}

void OAI_api_public_v1_policies_types_contacts_get_200_response::initializeModel() {

    m__self_url_isSet = false;
    m__self_url_isValid = false;

    m_contact_types_isSet = false;
    m_contact_types_isValid = false;
}

void OAI_api_public_v1_policies_types_contacts_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_public_v1_policies_types_contacts_get_200_response::fromJsonObject(QJsonObject json) {

    m__self_url_isValid = ::OpenAPI::fromJsonValue(m__self_url, json[QString("_selfUrl")]);
    m__self_url_isSet = !json[QString("_selfUrl")].isNull() && m__self_url_isValid;

    m_contact_types_isValid = ::OpenAPI::fromJsonValue(m_contact_types, json[QString("contactTypes")]);
    m_contact_types_isSet = !json[QString("contactTypes")].isNull() && m_contact_types_isValid;
}

QString OAI_api_public_v1_policies_types_contacts_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_public_v1_policies_types_contacts_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m__self_url_isSet) {
        obj.insert(QString("_selfUrl"), ::OpenAPI::toJsonValue(m__self_url));
    }
    if (m_contact_types.size() > 0) {
        obj.insert(QString("contactTypes"), ::OpenAPI::toJsonValue(m_contact_types));
    }
    return obj;
}

QString OAI_api_public_v1_policies_types_contacts_get_200_response::getSelfUrl() const {
    return m__self_url;
}
void OAI_api_public_v1_policies_types_contacts_get_200_response::setSelfUrl(const QString &_self_url) {
    m__self_url = _self_url;
    m__self_url_isSet = true;
}

bool OAI_api_public_v1_policies_types_contacts_get_200_response::is__self_url_Set() const{
    return m__self_url_isSet;
}

bool OAI_api_public_v1_policies_types_contacts_get_200_response::is__self_url_Valid() const{
    return m__self_url_isValid;
}

QList<OAIContactObject> OAI_api_public_v1_policies_types_contacts_get_200_response::getContactTypes() const {
    return m_contact_types;
}
void OAI_api_public_v1_policies_types_contacts_get_200_response::setContactTypes(const QList<OAIContactObject> &contact_types) {
    m_contact_types = contact_types;
    m_contact_types_isSet = true;
}

bool OAI_api_public_v1_policies_types_contacts_get_200_response::is_contact_types_Set() const{
    return m_contact_types_isSet;
}

bool OAI_api_public_v1_policies_types_contacts_get_200_response::is_contact_types_Valid() const{
    return m_contact_types_isValid;
}

bool OAI_api_public_v1_policies_types_contacts_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__self_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_public_v1_policies_types_contacts_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
