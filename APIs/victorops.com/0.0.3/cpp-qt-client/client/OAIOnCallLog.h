/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOnCallLog.h
 *
 * 
 */

#ifndef OAIOnCallLog_H
#define OAIOnCallLog_H

#include <QJsonObject>

#include "OAIUserLog.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserLog;

class OAIOnCallLog : public OAIObject {
public:
    OAIOnCallLog();
    OAIOnCallLog(QString json);
    ~OAIOnCallLog() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEnd() const;
    void setEnd(const QDateTime &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QDateTime getStart() const;
    void setStart(const QDateTime &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getTeamSlug() const;
    void setTeamSlug(const QString &team_slug);
    bool is_team_slug_Set() const;
    bool is_team_slug_Valid() const;

    QList<OAIUserLog> getUserLogs() const;
    void setUserLogs(const QList<OAIUserLog> &user_logs);
    bool is_user_logs_Set() const;
    bool is_user_logs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QDateTime m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_team_slug;
    bool m_team_slug_isSet;
    bool m_team_slug_isValid;

    QList<OAIUserLog> m_user_logs;
    bool m_user_logs_isSet;
    bool m_user_logs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOnCallLog)

#endif // OAIOnCallLog_H
