/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOnCallRoll.h
 *
 * 
 */

#ifndef OAIOnCallRoll_H
#define OAIOnCallRoll_H

#include <QJsonObject>

#include "OAIUser.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;

class OAIOnCallRoll : public OAIObject {
public:
    OAIOnCallRoll();
    OAIOnCallRoll(QString json);
    ~OAIOnCallRoll() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnd() const;
    void setEnd(const QString &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    bool isIsRoll() const;
    void setIsRoll(const bool &is_roll);
    bool is_is_roll_Set() const;
    bool is_is_roll_Valid() const;

    OAIUser getOnCallUser() const;
    void setOnCallUser(const OAIUser &on_call_user);
    bool is_on_call_user_Set() const;
    bool is_on_call_user_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    bool m_is_roll;
    bool m_is_roll_isSet;
    bool m_is_roll_isValid;

    OAIUser m_on_call_user;
    bool m_on_call_user_isSet;
    bool m_on_call_user_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOnCallRoll)

#endif // OAIOnCallRoll_H
