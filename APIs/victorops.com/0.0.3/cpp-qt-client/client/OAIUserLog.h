/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserLog.h
 *
 * 
 */

#ifndef OAIUserLog_H
#define OAIUserLog_H

#include <QJsonObject>

#include "OAIOnCallInterval.h"
#include "OAIOnCallInterval_duration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOnCallInterval_duration;
class OAIOnCallInterval;

class OAIUserLog : public OAIObject {
public:
    OAIUserLog();
    OAIUserLog(QString json);
    ~OAIUserLog() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOnCallInterval_duration getAdjustedTotal() const;
    void setAdjustedTotal(const OAIOnCallInterval_duration &adjusted_total);
    bool is_adjusted_total_Set() const;
    bool is_adjusted_total_Valid() const;

    QList<OAIOnCallInterval> getLog() const;
    void setLog(const QList<OAIOnCallInterval> &log);
    bool is_log_Set() const;
    bool is_log_Valid() const;

    OAIOnCallInterval_duration getTotal() const;
    void setTotal(const OAIOnCallInterval_duration &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOnCallInterval_duration m_adjusted_total;
    bool m_adjusted_total_isSet;
    bool m_adjusted_total_isValid;

    QList<OAIOnCallInterval> m_log;
    bool m_log_isSet;
    bool m_log_isValid;

    OAIOnCallInterval_duration m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserLog)

#endif // OAIUserLog_H
