/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActiveIncidentInfo.h
 *
 * Incidents contain the following fields (all should be considered optional)
 */

#ifndef OAIActiveIncidentInfo_H
#define OAIActiveIncidentInfo_H

#include <QJsonObject>

#include "OAIEscalationPolicyInfo.h"
#include "OAIIncidentTransition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEscalationPolicyInfo;
class OAIIncidentTransition;

class OAIActiveIncidentInfo : public OAIObject {
public:
    OAIActiveIncidentInfo();
    OAIActiveIncidentInfo(QString json);
    ~OAIActiveIncidentInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAlertCount() const;
    void setAlertCount(const double &alert_count);
    bool is_alert_count_Set() const;
    bool is_alert_count_Valid() const;

    QString getCurrentPhase() const;
    void setCurrentPhase(const QString &current_phase);
    bool is_current_phase_Set() const;
    bool is_current_phase_Valid() const;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QString getIncidentNumber() const;
    void setIncidentNumber(const QString &incident_number);
    bool is_incident_number_Set() const;
    bool is_incident_number_Valid() const;

    QString getLastAlertId() const;
    void setLastAlertId(const QString &last_alert_id);
    bool is_last_alert_id_Set() const;
    bool is_last_alert_id_Valid() const;

    QString getLastAlertTime() const;
    void setLastAlertTime(const QString &last_alert_time);
    bool is_last_alert_time_Set() const;
    bool is_last_alert_time_Valid() const;

    QList<OAIEscalationPolicyInfo> getPagedPolicies() const;
    void setPagedPolicies(const QList<OAIEscalationPolicyInfo> &paged_policies);
    bool is_paged_policies_Set() const;
    bool is_paged_policies_Valid() const;

    QList<QString> getPagedTeams() const;
    void setPagedTeams(const QList<QString> &paged_teams);
    bool is_paged_teams_Set() const;
    bool is_paged_teams_Valid() const;

    QList<QString> getPagedUsers() const;
    void setPagedUsers(const QList<QString> &paged_users);
    bool is_paged_users_Set() const;
    bool is_paged_users_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QList<OAIIncidentTransition> getTransitions() const;
    void setTransitions(const QList<OAIIncidentTransition> &transitions);
    bool is_transitions_Set() const;
    bool is_transitions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_alert_count;
    bool m_alert_count_isSet;
    bool m_alert_count_isValid;

    QString m_current_phase;
    bool m_current_phase_isSet;
    bool m_current_phase_isValid;

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QString m_incident_number;
    bool m_incident_number_isSet;
    bool m_incident_number_isValid;

    QString m_last_alert_id;
    bool m_last_alert_id_isSet;
    bool m_last_alert_id_isValid;

    QString m_last_alert_time;
    bool m_last_alert_time_isSet;
    bool m_last_alert_time_isValid;

    QList<OAIEscalationPolicyInfo> m_paged_policies;
    bool m_paged_policies_isSet;
    bool m_paged_policies_isValid;

    QList<QString> m_paged_teams;
    bool m_paged_teams_isSet;
    bool m_paged_teams_isValid;

    QList<QString> m_paged_users;
    bool m_paged_users_isSet;
    bool m_paged_users_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QList<OAIIncidentTransition> m_transitions;
    bool m_transitions_isSet;
    bool m_transitions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActiveIncidentInfo)

#endif // OAIActiveIncidentInfo_H
