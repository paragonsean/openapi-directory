/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScheduledOverride.h
 *
 * 
 */

#ifndef OAIScheduledOverride_H
#define OAIScheduledOverride_H

#include <QJsonObject>

#include "OAIAssignment.h"
#include "OAIScheduledUser.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignment;
class OAIScheduledUser;

class OAIScheduledOverride : public OAIObject {
public:
    OAIScheduledOverride();
    OAIScheduledOverride(QString json);
    ~OAIScheduledOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAssignment> getAssignments() const;
    void setAssignments(const QList<OAIAssignment> &assignments);
    bool is_assignments_Set() const;
    bool is_assignments_Valid() const;

    QString getEnd() const;
    void setEnd(const QString &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QString getPublicId() const;
    void setPublicId(const QString &public_id);
    bool is_public_id_Set() const;
    bool is_public_id_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    OAIScheduledUser getUser() const;
    void setUser(const OAIScheduledUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAssignment> m_assignments;
    bool m_assignments_isSet;
    bool m_assignments_isValid;

    QString m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QString m_public_id;
    bool m_public_id_isSet;
    bool m_public_id_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    OAIScheduledUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScheduledOverride)

#endif // OAIScheduledOverride_H
