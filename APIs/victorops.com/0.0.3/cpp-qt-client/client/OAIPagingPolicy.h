/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPagingPolicy.h
 *
 * Paging policy fields
 */

#ifndef OAIPagingPolicy_H
#define OAIPagingPolicy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPagingPolicy : public OAIObject {
public:
    OAIPagingPolicy();
    OAIPagingPolicy(QString json);
    ~OAIPagingPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContactType() const;
    void setContactType(const QString &contact_type);
    bool is_contact_type_Set() const;
    bool is_contact_type_Valid() const;

    QString getExtId() const;
    void setExtId(const QString &ext_id);
    bool is_ext_id_Set() const;
    bool is_ext_id_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contact_type;
    bool m_contact_type_isSet;
    bool m_contact_type_isValid;

    QString m_ext_id;
    bool m_ext_id_isSet;
    bool m_ext_id_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPagingPolicy)

#endif // OAIPagingPolicy_H
