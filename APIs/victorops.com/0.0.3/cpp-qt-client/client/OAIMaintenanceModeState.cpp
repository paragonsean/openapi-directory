/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaintenanceModeState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaintenanceModeState::OAIMaintenanceModeState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaintenanceModeState::OAIMaintenanceModeState() {
    this->initializeModel();
}

OAIMaintenanceModeState::~OAIMaintenanceModeState() {}

void OAIMaintenanceModeState::initializeModel() {

    m_active_instances_isSet = false;
    m_active_instances_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;
}

void OAIMaintenanceModeState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaintenanceModeState::fromJsonObject(QJsonObject json) {

    m_active_instances_isValid = ::OpenAPI::fromJsonValue(m_active_instances, json[QString("activeInstances")]);
    m_active_instances_isSet = !json[QString("activeInstances")].isNull() && m_active_instances_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;
}

QString OAIMaintenanceModeState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaintenanceModeState::asJsonObject() const {
    QJsonObject obj;
    if (m_active_instances.size() > 0) {
        obj.insert(QString("activeInstances"), ::OpenAPI::toJsonValue(m_active_instances));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    return obj;
}

QList<OAIActiveMaintenanceMode> OAIMaintenanceModeState::getActiveInstances() const {
    return m_active_instances;
}
void OAIMaintenanceModeState::setActiveInstances(const QList<OAIActiveMaintenanceMode> &active_instances) {
    m_active_instances = active_instances;
    m_active_instances_isSet = true;
}

bool OAIMaintenanceModeState::is_active_instances_Set() const{
    return m_active_instances_isSet;
}

bool OAIMaintenanceModeState::is_active_instances_Valid() const{
    return m_active_instances_isValid;
}

QString OAIMaintenanceModeState::getCompanyId() const {
    return m_company_id;
}
void OAIMaintenanceModeState::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAIMaintenanceModeState::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAIMaintenanceModeState::is_company_id_Valid() const{
    return m_company_id_isValid;
}

bool OAIMaintenanceModeState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_instances.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaintenanceModeState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
