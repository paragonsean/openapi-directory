/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReroute.h
 *
 * 
 */

#ifndef OAIReroute_H
#define OAIReroute_H

#include <QJsonObject>

#include "OAIIncidentTarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIncidentTarget;

class OAIReroute : public OAIObject {
public:
    OAIReroute();
    OAIReroute(QString json);
    ~OAIReroute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIncidentNumber() const;
    void setIncidentNumber(const QString &incident_number);
    bool is_incident_number_Set() const;
    bool is_incident_number_Valid() const;

    QList<OAIIncidentTarget> getTargets() const;
    void setTargets(const QList<OAIIncidentTarget> &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_incident_number;
    bool m_incident_number_isSet;
    bool m_incident_number_isValid;

    QList<OAIIncidentTarget> m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReroute)

#endif // OAIReroute_H
