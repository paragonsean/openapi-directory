/**
 * VictorOps
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContactDeviceAdd.h
 *
 * The contact device
 */

#ifndef OAIContactDeviceAdd_H
#define OAIContactDeviceAdd_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContactDeviceAdd : public OAIObject {
public:
    OAIContactDeviceAdd();
    OAIContactDeviceAdd(QString json);
    ~OAIContactDeviceAdd() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChatEscalationSound() const;
    void setChatEscalationSound(const QString &chat_escalation_sound);
    bool is_chat_escalation_sound_Set() const;
    bool is_chat_escalation_sound_Valid() const;

    QString getDeviceLabel() const;
    void setDeviceLabel(const QString &device_label);
    bool is_device_label_Set() const;
    bool is_device_label_Valid() const;

    QString getEscalationNotificationSound() const;
    void setEscalationNotificationSound(const QString &escalation_notification_sound);
    bool is_escalation_notification_sound_Set() const;
    bool is_escalation_notification_sound_Valid() const;

    QString getResolvedNotificationSound() const;
    void setResolvedNotificationSound(const QString &resolved_notification_sound);
    bool is_resolved_notification_sound_Set() const;
    bool is_resolved_notification_sound_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_chat_escalation_sound;
    bool m_chat_escalation_sound_isSet;
    bool m_chat_escalation_sound_isValid;

    QString m_device_label;
    bool m_device_label_isSet;
    bool m_device_label_isValid;

    QString m_escalation_notification_sound;
    bool m_escalation_notification_sound_isSet;
    bool m_escalation_notification_sound_isValid;

    QString m_resolved_notification_sound;
    bool m_resolved_notification_sound_isSet;
    bool m_resolved_notification_sound_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContactDeviceAdd)

#endif // OAIContactDeviceAdd_H
