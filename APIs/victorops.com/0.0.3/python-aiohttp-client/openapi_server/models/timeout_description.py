# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeoutDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    IF_STILL_UNACKED_AFTER_1_MINUTE = 'If still unacked after 1 minute'
    IF_STILL_UNACKED_AFTER_5_MINUTE = 'If still unacked after 5 minute'
    IF_STILL_UNACKED_AFTER_10_MINUTE = 'If still unacked after 10 minute'
    IF_STILL_UNACKED_AFTER_15_MINUTE = 'If still unacked after 15 minute'
    IF_STILL_UNACKED_AFTER_20_MINUTE = 'If still unacked after 20 minute'
    IF_STILL_UNACKED_AFTER_25_MINUTE = 'If still unacked after 25 minute'
    IF_STILL_UNACKED_AFTER_30_MINUTE = 'If still unacked after 30 minute'
    IF_STILL_UNACKED_AFTER_45_MINUTE = 'If still unacked after 45 minute'
    IF_STILL_UNACKED_AFTER_60_MINUTE = 'If still unacked after 60 minute'

    def __init__(self):
        """TimeoutDescription - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeoutDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeoutDescription of this TimeoutDescription.
        """
        return util.deserialize_model(dikt, cls)
