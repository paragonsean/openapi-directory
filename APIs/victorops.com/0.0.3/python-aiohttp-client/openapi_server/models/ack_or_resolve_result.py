# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AckOrResolveResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cmd_accepted: bool=None, entity_id: str=None, incident_number: str=None, message: str=None):
        """AckOrResolveResult - a model defined in OpenAPI

        :param cmd_accepted: The cmd_accepted of this AckOrResolveResult.
        :param entity_id: The entity_id of this AckOrResolveResult.
        :param incident_number: The incident_number of this AckOrResolveResult.
        :param message: The message of this AckOrResolveResult.
        """
        self.openapi_types = {
            'cmd_accepted': bool,
            'entity_id': str,
            'incident_number': str,
            'message': str
        }

        self.attribute_map = {
            'cmd_accepted': 'cmdAccepted',
            'entity_id': 'entityId',
            'incident_number': 'incidentNumber',
            'message': 'message'
        }

        self._cmd_accepted = cmd_accepted
        self._entity_id = entity_id
        self._incident_number = incident_number
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AckOrResolveResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AckOrResolveResult of this AckOrResolveResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cmd_accepted(self):
        """Gets the cmd_accepted of this AckOrResolveResult.


        :return: The cmd_accepted of this AckOrResolveResult.
        :rtype: bool
        """
        return self._cmd_accepted

    @cmd_accepted.setter
    def cmd_accepted(self, cmd_accepted):
        """Sets the cmd_accepted of this AckOrResolveResult.


        :param cmd_accepted: The cmd_accepted of this AckOrResolveResult.
        :type cmd_accepted: bool
        """

        self._cmd_accepted = cmd_accepted

    @property
    def entity_id(self):
        """Gets the entity_id of this AckOrResolveResult.


        :return: The entity_id of this AckOrResolveResult.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this AckOrResolveResult.


        :param entity_id: The entity_id of this AckOrResolveResult.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def incident_number(self):
        """Gets the incident_number of this AckOrResolveResult.


        :return: The incident_number of this AckOrResolveResult.
        :rtype: str
        """
        return self._incident_number

    @incident_number.setter
    def incident_number(self, incident_number):
        """Sets the incident_number of this AckOrResolveResult.


        :param incident_number: The incident_number of this AckOrResolveResult.
        :type incident_number: str
        """

        self._incident_number = incident_number

    @property
    def message(self):
        """Gets the message of this AckOrResolveResult.


        :return: The message of this AckOrResolveResult.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AckOrResolveResult.


        :param message: The message of this AckOrResolveResult.
        :type message: str
        """

        self._message = message
