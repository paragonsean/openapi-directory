# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoutingKeyTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, team_url: str=None, policy_name: str=None, policy_slug: str=None):
        """RoutingKeyTarget - a model defined in OpenAPI

        :param team_url: The team_url of this RoutingKeyTarget.
        :param policy_name: The policy_name of this RoutingKeyTarget.
        :param policy_slug: The policy_slug of this RoutingKeyTarget.
        """
        self.openapi_types = {
            'team_url': str,
            'policy_name': str,
            'policy_slug': str
        }

        self.attribute_map = {
            'team_url': '_teamUrl',
            'policy_name': 'policyName',
            'policy_slug': 'policySlug'
        }

        self._team_url = team_url
        self._policy_name = policy_name
        self._policy_slug = policy_slug

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingKeyTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingKeyTarget of this RoutingKeyTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def team_url(self):
        """Gets the team_url of this RoutingKeyTarget.


        :return: The team_url of this RoutingKeyTarget.
        :rtype: str
        """
        return self._team_url

    @team_url.setter
    def team_url(self, team_url):
        """Sets the team_url of this RoutingKeyTarget.


        :param team_url: The team_url of this RoutingKeyTarget.
        :type team_url: str
        """

        self._team_url = team_url

    @property
    def policy_name(self):
        """Gets the policy_name of this RoutingKeyTarget.


        :return: The policy_name of this RoutingKeyTarget.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this RoutingKeyTarget.


        :param policy_name: The policy_name of this RoutingKeyTarget.
        :type policy_name: str
        """

        self._policy_name = policy_name

    @property
    def policy_slug(self):
        """Gets the policy_slug of this RoutingKeyTarget.


        :return: The policy_slug of this RoutingKeyTarget.
        :rtype: str
        """
        return self._policy_slug

    @policy_slug.setter
    def policy_slug(self, policy_slug):
        """Sets the policy_slug of this RoutingKeyTarget.


        :param policy_slug: The policy_slug of this RoutingKeyTarget.
        :type policy_slug: str
        """

        self._policy_slug = policy_slug
