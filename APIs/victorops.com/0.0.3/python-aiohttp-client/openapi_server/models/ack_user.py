# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AckUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, first: str=None, last: str=None):
        """AckUser - a model defined in OpenAPI

        :param email: The email of this AckUser.
        :param first: The first of this AckUser.
        :param last: The last of this AckUser.
        """
        self.openapi_types = {
            'email': str,
            'first': str,
            'last': str
        }

        self.attribute_map = {
            'email': 'email',
            'first': 'first',
            'last': 'last'
        }

        self._email = email
        self._first = first
        self._last = last

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AckUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AckUser of this AckUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this AckUser.


        :return: The email of this AckUser.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AckUser.


        :param email: The email of this AckUser.
        :type email: str
        """

        self._email = email

    @property
    def first(self):
        """Gets the first of this AckUser.


        :return: The first of this AckUser.
        :rtype: str
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this AckUser.


        :param first: The first of this AckUser.
        :type first: str
        """

        self._first = first

    @property
    def last(self):
        """Gets the last of this AckUser.


        :return: The last of this AckUser.
        :rtype: str
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this AckUser.


        :param last: The last of this AckUser.
        :type last: str
        """

        self._last = last
