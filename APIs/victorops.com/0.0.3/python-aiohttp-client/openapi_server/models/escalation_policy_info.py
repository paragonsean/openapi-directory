# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.escalation_policy import EscalationPolicy
from openapi_server.models.team import Team
from openapi_server import util


class EscalationPolicyInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy: EscalationPolicy=None, team: Team=None):
        """EscalationPolicyInfo - a model defined in OpenAPI

        :param policy: The policy of this EscalationPolicyInfo.
        :param team: The team of this EscalationPolicyInfo.
        """
        self.openapi_types = {
            'policy': EscalationPolicy,
            'team': Team
        }

        self.attribute_map = {
            'policy': 'policy',
            'team': 'team'
        }

        self._policy = policy
        self._team = team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EscalationPolicyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EscalationPolicyInfo of this EscalationPolicyInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy(self):
        """Gets the policy of this EscalationPolicyInfo.


        :return: The policy of this EscalationPolicyInfo.
        :rtype: EscalationPolicy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this EscalationPolicyInfo.


        :param policy: The policy of this EscalationPolicyInfo.
        :type policy: EscalationPolicy
        """
        if policy is None:
            raise ValueError("Invalid value for `policy`, must not be `None`")

        self._policy = policy

    @property
    def team(self):
        """Gets the team of this EscalationPolicyInfo.


        :return: The team of this EscalationPolicyInfo.
        :rtype: Team
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this EscalationPolicyInfo.


        :param team: The team of this EscalationPolicyInfo.
        :type team: Team
        """

        self._team = team
