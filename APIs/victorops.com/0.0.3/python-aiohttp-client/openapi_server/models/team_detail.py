# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admins_url: str=None, members_url: str=None, policies_url: str=None, self_url: str=None, is_default_team: bool=None, member_count: float=None, name: str=None, slug: str=None, version: float=None):
        """TeamDetail - a model defined in OpenAPI

        :param admins_url: The admins_url of this TeamDetail.
        :param members_url: The members_url of this TeamDetail.
        :param policies_url: The policies_url of this TeamDetail.
        :param self_url: The self_url of this TeamDetail.
        :param is_default_team: The is_default_team of this TeamDetail.
        :param member_count: The member_count of this TeamDetail.
        :param name: The name of this TeamDetail.
        :param slug: The slug of this TeamDetail.
        :param version: The version of this TeamDetail.
        """
        self.openapi_types = {
            'admins_url': str,
            'members_url': str,
            'policies_url': str,
            'self_url': str,
            'is_default_team': bool,
            'member_count': float,
            'name': str,
            'slug': str,
            'version': float
        }

        self.attribute_map = {
            'admins_url': '_adminsUrl',
            'members_url': '_membersUrl',
            'policies_url': '_policiesUrl',
            'self_url': '_selfUrl',
            'is_default_team': 'isDefaultTeam',
            'member_count': 'memberCount',
            'name': 'name',
            'slug': 'slug',
            'version': 'version'
        }

        self._admins_url = admins_url
        self._members_url = members_url
        self._policies_url = policies_url
        self._self_url = self_url
        self._is_default_team = is_default_team
        self._member_count = member_count
        self._name = name
        self._slug = slug
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamDetail of this TeamDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admins_url(self):
        """Gets the admins_url of this TeamDetail.


        :return: The admins_url of this TeamDetail.
        :rtype: str
        """
        return self._admins_url

    @admins_url.setter
    def admins_url(self, admins_url):
        """Sets the admins_url of this TeamDetail.


        :param admins_url: The admins_url of this TeamDetail.
        :type admins_url: str
        """

        self._admins_url = admins_url

    @property
    def members_url(self):
        """Gets the members_url of this TeamDetail.


        :return: The members_url of this TeamDetail.
        :rtype: str
        """
        return self._members_url

    @members_url.setter
    def members_url(self, members_url):
        """Sets the members_url of this TeamDetail.


        :param members_url: The members_url of this TeamDetail.
        :type members_url: str
        """

        self._members_url = members_url

    @property
    def policies_url(self):
        """Gets the policies_url of this TeamDetail.


        :return: The policies_url of this TeamDetail.
        :rtype: str
        """
        return self._policies_url

    @policies_url.setter
    def policies_url(self, policies_url):
        """Sets the policies_url of this TeamDetail.


        :param policies_url: The policies_url of this TeamDetail.
        :type policies_url: str
        """

        self._policies_url = policies_url

    @property
    def self_url(self):
        """Gets the self_url of this TeamDetail.


        :return: The self_url of this TeamDetail.
        :rtype: str
        """
        return self._self_url

    @self_url.setter
    def self_url(self, self_url):
        """Sets the self_url of this TeamDetail.


        :param self_url: The self_url of this TeamDetail.
        :type self_url: str
        """

        self._self_url = self_url

    @property
    def is_default_team(self):
        """Gets the is_default_team of this TeamDetail.


        :return: The is_default_team of this TeamDetail.
        :rtype: bool
        """
        return self._is_default_team

    @is_default_team.setter
    def is_default_team(self, is_default_team):
        """Sets the is_default_team of this TeamDetail.


        :param is_default_team: The is_default_team of this TeamDetail.
        :type is_default_team: bool
        """

        self._is_default_team = is_default_team

    @property
    def member_count(self):
        """Gets the member_count of this TeamDetail.


        :return: The member_count of this TeamDetail.
        :rtype: float
        """
        return self._member_count

    @member_count.setter
    def member_count(self, member_count):
        """Sets the member_count of this TeamDetail.


        :param member_count: The member_count of this TeamDetail.
        :type member_count: float
        """

        self._member_count = member_count

    @property
    def name(self):
        """Gets the name of this TeamDetail.


        :return: The name of this TeamDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamDetail.


        :param name: The name of this TeamDetail.
        :type name: str
        """

        self._name = name

    @property
    def slug(self):
        """Gets the slug of this TeamDetail.


        :return: The slug of this TeamDetail.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this TeamDetail.


        :param slug: The slug of this TeamDetail.
        :type slug: str
        """

        self._slug = slug

    @property
    def version(self):
        """Gets the version of this TeamDetail.


        :return: The version of this TeamDetail.
        :rtype: float
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this TeamDetail.


        :param version: The version of this TeamDetail.
        :type version: float
        """

        self._version = version
