# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.paging_policy import PagingPolicy
from openapi_server import util


class Policies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policies: List[PagingPolicy]=None, user_id: int=None, username: str=None):
        """Policies - a model defined in OpenAPI

        :param policies: The policies of this Policies.
        :param user_id: The user_id of this Policies.
        :param username: The username of this Policies.
        """
        self.openapi_types = {
            'policies': List[PagingPolicy],
            'user_id': int,
            'username': str
        }

        self.attribute_map = {
            'policies': 'policies',
            'user_id': 'userId',
            'username': 'username'
        }

        self._policies = policies
        self._user_id = user_id
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Policies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Policies of this Policies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policies(self):
        """Gets the policies of this Policies.


        :return: The policies of this Policies.
        :rtype: List[PagingPolicy]
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this Policies.


        :param policies: The policies of this Policies.
        :type policies: List[PagingPolicy]
        """

        self._policies = policies

    @property
    def user_id(self):
        """Gets the user_id of this Policies.


        :return: The user_id of this Policies.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Policies.


        :param user_id: The user_id of this Policies.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def username(self):
        """Gets the username of this Policies.


        :return: The username of this Policies.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Policies.


        :param username: The username of this Policies.
        :type username: str
        """

        self._username = username
