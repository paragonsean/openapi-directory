# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.active_incident_info import ActiveIncidentInfo
from openapi_server import util


class ActiveIncidentList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, incidents: List[ActiveIncidentInfo]=None):
        """ActiveIncidentList - a model defined in OpenAPI

        :param incidents: The incidents of this ActiveIncidentList.
        """
        self.openapi_types = {
            'incidents': List[ActiveIncidentInfo]
        }

        self.attribute_map = {
            'incidents': 'incidents'
        }

        self._incidents = incidents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActiveIncidentList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActiveIncidentList of this ActiveIncidentList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def incidents(self):
        """Gets the incidents of this ActiveIncidentList.

        The incident data

        :return: The incidents of this ActiveIncidentList.
        :rtype: List[ActiveIncidentInfo]
        """
        return self._incidents

    @incidents.setter
    def incidents(self, incidents):
        """Sets the incidents of this ActiveIncidentList.

        The incident data

        :param incidents: The incidents of this ActiveIncidentList.
        :type incidents: List[ActiveIncidentInfo]
        """

        self._incidents = incidents
