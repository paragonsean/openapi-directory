# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_schedule import PolicySchedule
from openapi_server.models.team import Team
from openapi_server import util


class TeamSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedules: List[PolicySchedule]=None, team: Team=None):
        """TeamSchedule - a model defined in OpenAPI

        :param schedules: The schedules of this TeamSchedule.
        :param team: The team of this TeamSchedule.
        """
        self.openapi_types = {
            'schedules': List[PolicySchedule],
            'team': Team
        }

        self.attribute_map = {
            'schedules': 'schedules',
            'team': 'team'
        }

        self._schedules = schedules
        self._team = team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamSchedule of this TeamSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedules(self):
        """Gets the schedules of this TeamSchedule.


        :return: The schedules of this TeamSchedule.
        :rtype: List[PolicySchedule]
        """
        return self._schedules

    @schedules.setter
    def schedules(self, schedules):
        """Sets the schedules of this TeamSchedule.


        :param schedules: The schedules of this TeamSchedule.
        :type schedules: List[PolicySchedule]
        """

        self._schedules = schedules

    @property
    def team(self):
        """Gets the team of this TeamSchedule.


        :return: The team of this TeamSchedule.
        :rtype: Team
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this TeamSchedule.


        :param team: The team of this TeamSchedule.
        :type team: Team
        """

        self._team = team
