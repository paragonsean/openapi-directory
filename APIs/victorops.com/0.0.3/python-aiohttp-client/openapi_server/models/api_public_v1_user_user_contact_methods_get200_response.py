# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_device import ContactDevice
from openapi_server.models.user_contact import UserContact
from openapi_server import util


class ApiPublicV1UserUserContactMethodsGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices: List[ContactDevice]=None, emails: List[UserContact]=None, phones: List[UserContact]=None):
        """ApiPublicV1UserUserContactMethodsGet200Response - a model defined in OpenAPI

        :param devices: The devices of this ApiPublicV1UserUserContactMethodsGet200Response.
        :param emails: The emails of this ApiPublicV1UserUserContactMethodsGet200Response.
        :param phones: The phones of this ApiPublicV1UserUserContactMethodsGet200Response.
        """
        self.openapi_types = {
            'devices': List[ContactDevice],
            'emails': List[UserContact],
            'phones': List[UserContact]
        }

        self.attribute_map = {
            'devices': 'devices',
            'emails': 'emails',
            'phones': 'phones'
        }

        self._devices = devices
        self._emails = emails
        self._phones = phones

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiPublicV1UserUserContactMethodsGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_public_v1_user__user__contact_methods_get_200_response of this ApiPublicV1UserUserContactMethodsGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self):
        """Gets the devices of this ApiPublicV1UserUserContactMethodsGet200Response.


        :return: The devices of this ApiPublicV1UserUserContactMethodsGet200Response.
        :rtype: List[ContactDevice]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this ApiPublicV1UserUserContactMethodsGet200Response.


        :param devices: The devices of this ApiPublicV1UserUserContactMethodsGet200Response.
        :type devices: List[ContactDevice]
        """

        self._devices = devices

    @property
    def emails(self):
        """Gets the emails of this ApiPublicV1UserUserContactMethodsGet200Response.


        :return: The emails of this ApiPublicV1UserUserContactMethodsGet200Response.
        :rtype: List[UserContact]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this ApiPublicV1UserUserContactMethodsGet200Response.


        :param emails: The emails of this ApiPublicV1UserUserContactMethodsGet200Response.
        :type emails: List[UserContact]
        """

        self._emails = emails

    @property
    def phones(self):
        """Gets the phones of this ApiPublicV1UserUserContactMethodsGet200Response.


        :return: The phones of this ApiPublicV1UserUserContactMethodsGet200Response.
        :rtype: List[UserContact]
        """
        return self._phones

    @phones.setter
    def phones(self, phones):
        """Sets the phones of this ApiPublicV1UserUserContactMethodsGet200Response.


        :param phones: The phones of this ApiPublicV1UserUserContactMethodsGet200Response.
        :type phones: List[UserContact]
        """

        self._phones = phones
