# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PagingPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_type: str=None, ext_id: str=None, order: int=None, timeout: int=None):
        """PagingPolicy - a model defined in OpenAPI

        :param contact_type: The contact_type of this PagingPolicy.
        :param ext_id: The ext_id of this PagingPolicy.
        :param order: The order of this PagingPolicy.
        :param timeout: The timeout of this PagingPolicy.
        """
        self.openapi_types = {
            'contact_type': str,
            'ext_id': str,
            'order': int,
            'timeout': int
        }

        self.attribute_map = {
            'contact_type': 'contactType',
            'ext_id': 'extId',
            'order': 'order',
            'timeout': 'timeout'
        }

        self._contact_type = contact_type
        self._ext_id = ext_id
        self._order = order
        self._timeout = timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PagingPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PagingPolicy of this PagingPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_type(self):
        """Gets the contact_type of this PagingPolicy.


        :return: The contact_type of this PagingPolicy.
        :rtype: str
        """
        return self._contact_type

    @contact_type.setter
    def contact_type(self, contact_type):
        """Sets the contact_type of this PagingPolicy.


        :param contact_type: The contact_type of this PagingPolicy.
        :type contact_type: str
        """

        self._contact_type = contact_type

    @property
    def ext_id(self):
        """Gets the ext_id of this PagingPolicy.


        :return: The ext_id of this PagingPolicy.
        :rtype: str
        """
        return self._ext_id

    @ext_id.setter
    def ext_id(self, ext_id):
        """Sets the ext_id of this PagingPolicy.


        :param ext_id: The ext_id of this PagingPolicy.
        :type ext_id: str
        """

        self._ext_id = ext_id

    @property
    def order(self):
        """Gets the order of this PagingPolicy.


        :return: The order of this PagingPolicy.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this PagingPolicy.


        :param order: The order of this PagingPolicy.
        :type order: int
        """

        self._order = order

    @property
    def timeout(self):
        """Gets the timeout of this PagingPolicy.


        :return: The timeout of this PagingPolicy.
        :rtype: int
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this PagingPolicy.


        :param timeout: The timeout of this PagingPolicy.
        :type timeout: int
        """

        self._timeout = timeout
