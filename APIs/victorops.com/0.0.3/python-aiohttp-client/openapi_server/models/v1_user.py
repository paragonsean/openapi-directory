# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V1User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, self_url: str=None, created_at: str=None, email: str=None, first_name: str=None, last_name: str=None, password_last_updated: str=None, username: str=None, verified: bool=None):
        """V1User - a model defined in OpenAPI

        :param self_url: The self_url of this V1User.
        :param created_at: The created_at of this V1User.
        :param email: The email of this V1User.
        :param first_name: The first_name of this V1User.
        :param last_name: The last_name of this V1User.
        :param password_last_updated: The password_last_updated of this V1User.
        :param username: The username of this V1User.
        :param verified: The verified of this V1User.
        """
        self.openapi_types = {
            'self_url': str,
            'created_at': str,
            'email': str,
            'first_name': str,
            'last_name': str,
            'password_last_updated': str,
            'username': str,
            'verified': bool
        }

        self.attribute_map = {
            'self_url': '_selfUrl',
            'created_at': 'createdAt',
            'email': 'email',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'password_last_updated': 'passwordLastUpdated',
            'username': 'username',
            'verified': 'verified'
        }

        self._self_url = self_url
        self._created_at = created_at
        self._email = email
        self._first_name = first_name
        self._last_name = last_name
        self._password_last_updated = password_last_updated
        self._username = username
        self._verified = verified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1User of this V1User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def self_url(self):
        """Gets the self_url of this V1User.


        :return: The self_url of this V1User.
        :rtype: str
        """
        return self._self_url

    @self_url.setter
    def self_url(self, self_url):
        """Sets the self_url of this V1User.


        :param self_url: The self_url of this V1User.
        :type self_url: str
        """

        self._self_url = self_url

    @property
    def created_at(self):
        """Gets the created_at of this V1User.


        :return: The created_at of this V1User.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this V1User.


        :param created_at: The created_at of this V1User.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def email(self):
        """Gets the email of this V1User.


        :return: The email of this V1User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this V1User.


        :param email: The email of this V1User.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this V1User.


        :return: The first_name of this V1User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this V1User.


        :param first_name: The first_name of this V1User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this V1User.


        :return: The last_name of this V1User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this V1User.


        :param last_name: The last_name of this V1User.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def password_last_updated(self):
        """Gets the password_last_updated of this V1User.


        :return: The password_last_updated of this V1User.
        :rtype: str
        """
        return self._password_last_updated

    @password_last_updated.setter
    def password_last_updated(self, password_last_updated):
        """Sets the password_last_updated of this V1User.


        :param password_last_updated: The password_last_updated of this V1User.
        :type password_last_updated: str
        """

        self._password_last_updated = password_last_updated

    @property
    def username(self):
        """Gets the username of this V1User.


        :return: The username of this V1User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this V1User.


        :param username: The username of this V1User.
        :type username: str
        """

        self._username = username

    @property
    def verified(self):
        """Gets the verified of this V1User.

        Whether or not this user has set their password (will always be false)

        :return: The verified of this V1User.
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this V1User.

        Whether or not this user has set their password (will always be false)

        :param verified: The verified of this V1User.
        :type verified: bool
        """

        self._verified = verified
