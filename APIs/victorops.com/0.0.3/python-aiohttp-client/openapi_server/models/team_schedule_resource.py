# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team_schedule_roll_resource import TeamScheduleRollResource
from openapi_server import util


class TeamScheduleResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oncall: str=None, overrideoncall: str=None, policy_type: str=None, rolls: List[TeamScheduleRollResource]=None, rotation_name: str=None, shift_name: str=None, shift_roll: float=None):
        """TeamScheduleResource - a model defined in OpenAPI

        :param oncall: The oncall of this TeamScheduleResource.
        :param overrideoncall: The overrideoncall of this TeamScheduleResource.
        :param policy_type: The policy_type of this TeamScheduleResource.
        :param rolls: The rolls of this TeamScheduleResource.
        :param rotation_name: The rotation_name of this TeamScheduleResource.
        :param shift_name: The shift_name of this TeamScheduleResource.
        :param shift_roll: The shift_roll of this TeamScheduleResource.
        """
        self.openapi_types = {
            'oncall': str,
            'overrideoncall': str,
            'policy_type': str,
            'rolls': List[TeamScheduleRollResource],
            'rotation_name': str,
            'shift_name': str,
            'shift_roll': float
        }

        self.attribute_map = {
            'oncall': 'oncall',
            'overrideoncall': 'overrideoncall',
            'policy_type': 'policyType',
            'rolls': 'rolls',
            'rotation_name': 'rotationName',
            'shift_name': 'shiftName',
            'shift_roll': 'shiftRoll'
        }

        self._oncall = oncall
        self._overrideoncall = overrideoncall
        self._policy_type = policy_type
        self._rolls = rolls
        self._rotation_name = rotation_name
        self._shift_name = shift_name
        self._shift_roll = shift_roll

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamScheduleResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamScheduleResource of this TeamScheduleResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oncall(self):
        """Gets the oncall of this TeamScheduleResource.

        The user scheduled on call (if any)

        :return: The oncall of this TeamScheduleResource.
        :rtype: str
        """
        return self._oncall

    @oncall.setter
    def oncall(self, oncall):
        """Sets the oncall of this TeamScheduleResource.

        The user scheduled on call (if any)

        :param oncall: The oncall of this TeamScheduleResource.
        :type oncall: str
        """

        self._oncall = oncall

    @property
    def overrideoncall(self):
        """Gets the overrideoncall of this TeamScheduleResource.

        The user overriding the scheduled on call user (if any)

        :return: The overrideoncall of this TeamScheduleResource.
        :rtype: str
        """
        return self._overrideoncall

    @overrideoncall.setter
    def overrideoncall(self, overrideoncall):
        """Sets the overrideoncall of this TeamScheduleResource.

        The user overriding the scheduled on call user (if any)

        :param overrideoncall: The overrideoncall of this TeamScheduleResource.
        :type overrideoncall: str
        """

        self._overrideoncall = overrideoncall

    @property
    def policy_type(self):
        """Gets the policy_type of this TeamScheduleResource.


        :return: The policy_type of this TeamScheduleResource.
        :rtype: str
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this TeamScheduleResource.


        :param policy_type: The policy_type of this TeamScheduleResource.
        :type policy_type: str
        """
        if policy_type is None:
            raise ValueError("Invalid value for `policy_type`, must not be `None`")

        self._policy_type = policy_type

    @property
    def rolls(self):
        """Gets the rolls of this TeamScheduleResource.


        :return: The rolls of this TeamScheduleResource.
        :rtype: List[TeamScheduleRollResource]
        """
        return self._rolls

    @rolls.setter
    def rolls(self, rolls):
        """Sets the rolls of this TeamScheduleResource.


        :param rolls: The rolls of this TeamScheduleResource.
        :type rolls: List[TeamScheduleRollResource]
        """
        if rolls is None:
            raise ValueError("Invalid value for `rolls`, must not be `None`")

        self._rolls = rolls

    @property
    def rotation_name(self):
        """Gets the rotation_name of this TeamScheduleResource.


        :return: The rotation_name of this TeamScheduleResource.
        :rtype: str
        """
        return self._rotation_name

    @rotation_name.setter
    def rotation_name(self, rotation_name):
        """Sets the rotation_name of this TeamScheduleResource.


        :param rotation_name: The rotation_name of this TeamScheduleResource.
        :type rotation_name: str
        """

        self._rotation_name = rotation_name

    @property
    def shift_name(self):
        """Gets the shift_name of this TeamScheduleResource.


        :return: The shift_name of this TeamScheduleResource.
        :rtype: str
        """
        return self._shift_name

    @shift_name.setter
    def shift_name(self, shift_name):
        """Sets the shift_name of this TeamScheduleResource.


        :param shift_name: The shift_name of this TeamScheduleResource.
        :type shift_name: str
        """

        self._shift_name = shift_name

    @property
    def shift_roll(self):
        """Gets the shift_roll of this TeamScheduleResource.


        :return: The shift_roll of this TeamScheduleResource.
        :rtype: float
        """
        return self._shift_roll

    @shift_roll.setter
    def shift_roll(self, shift_roll):
        """Sets the shift_roll of this TeamScheduleResource.


        :param shift_roll: The shift_roll of this TeamScheduleResource.
        :type shift_roll: float
        """

        self._shift_roll = shift_roll
