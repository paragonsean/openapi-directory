# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.active_maintenance_mode import ActiveMaintenanceMode
from openapi_server import util


class MaintenanceModeState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_instances: List[ActiveMaintenanceMode]=None, company_id: str=None):
        """MaintenanceModeState - a model defined in OpenAPI

        :param active_instances: The active_instances of this MaintenanceModeState.
        :param company_id: The company_id of this MaintenanceModeState.
        """
        self.openapi_types = {
            'active_instances': List[ActiveMaintenanceMode],
            'company_id': str
        }

        self.attribute_map = {
            'active_instances': 'activeInstances',
            'company_id': 'companyId'
        }

        self._active_instances = active_instances
        self._company_id = company_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceModeState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceModeState of this MaintenanceModeState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_instances(self):
        """Gets the active_instances of this MaintenanceModeState.


        :return: The active_instances of this MaintenanceModeState.
        :rtype: List[ActiveMaintenanceMode]
        """
        return self._active_instances

    @active_instances.setter
    def active_instances(self, active_instances):
        """Sets the active_instances of this MaintenanceModeState.


        :param active_instances: The active_instances of this MaintenanceModeState.
        :type active_instances: List[ActiveMaintenanceMode]
        """

        self._active_instances = active_instances

    @property
    def company_id(self):
        """Gets the company_id of this MaintenanceModeState.


        :return: The company_id of this MaintenanceModeState.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this MaintenanceModeState.


        :param company_id: The company_id of this MaintenanceModeState.
        :type company_id: str
        """

        self._company_id = company_id
