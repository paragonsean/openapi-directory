# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team_schedule_overlay_resource import TeamScheduleOverlayResource
from openapi_server.models.team_schedule_resource import TeamScheduleResource
from openapi_server import util


class OnCallAndOverrides(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, overrides: List[TeamScheduleOverlayResource]=None, schedule: List[TeamScheduleResource]=None, team: str=None):
        """OnCallAndOverrides - a model defined in OpenAPI

        :param overrides: The overrides of this OnCallAndOverrides.
        :param schedule: The schedule of this OnCallAndOverrides.
        :param team: The team of this OnCallAndOverrides.
        """
        self.openapi_types = {
            'overrides': List[TeamScheduleOverlayResource],
            'schedule': List[TeamScheduleResource],
            'team': str
        }

        self.attribute_map = {
            'overrides': 'overrides',
            'schedule': 'schedule',
            'team': 'team'
        }

        self._overrides = overrides
        self._schedule = schedule
        self._team = team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnCallAndOverrides':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnCallAndOverrides of this OnCallAndOverrides.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def overrides(self):
        """Gets the overrides of this OnCallAndOverrides.


        :return: The overrides of this OnCallAndOverrides.
        :rtype: List[TeamScheduleOverlayResource]
        """
        return self._overrides

    @overrides.setter
    def overrides(self, overrides):
        """Sets the overrides of this OnCallAndOverrides.


        :param overrides: The overrides of this OnCallAndOverrides.
        :type overrides: List[TeamScheduleOverlayResource]
        """

        self._overrides = overrides

    @property
    def schedule(self):
        """Gets the schedule of this OnCallAndOverrides.


        :return: The schedule of this OnCallAndOverrides.
        :rtype: List[TeamScheduleResource]
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this OnCallAndOverrides.


        :param schedule: The schedule of this OnCallAndOverrides.
        :type schedule: List[TeamScheduleResource]
        """

        self._schedule = schedule

    @property
    def team(self):
        """Gets the team of this OnCallAndOverrides.


        :return: The team of this OnCallAndOverrides.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this OnCallAndOverrides.


        :param team: The team of this OnCallAndOverrides.
        :type team: str
        """

        self._team = team
