# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user import User
from openapi_server import util


class OnCallOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end: str=None, orig_on_call_user: User=None, override_on_call_user: User=None, start: str=None):
        """OnCallOverride - a model defined in OpenAPI

        :param end: The end of this OnCallOverride.
        :param orig_on_call_user: The orig_on_call_user of this OnCallOverride.
        :param override_on_call_user: The override_on_call_user of this OnCallOverride.
        :param start: The start of this OnCallOverride.
        """
        self.openapi_types = {
            'end': str,
            'orig_on_call_user': User,
            'override_on_call_user': User,
            'start': str
        }

        self.attribute_map = {
            'end': 'end',
            'orig_on_call_user': 'origOnCallUser',
            'override_on_call_user': 'overrideOnCallUser',
            'start': 'start'
        }

        self._end = end
        self._orig_on_call_user = orig_on_call_user
        self._override_on_call_user = override_on_call_user
        self._start = start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnCallOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnCallOverride of this OnCallOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end(self):
        """Gets the end of this OnCallOverride.

        The override end time (ISO 8601)

        :return: The end of this OnCallOverride.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this OnCallOverride.

        The override end time (ISO 8601)

        :param end: The end of this OnCallOverride.
        :type end: str
        """

        self._end = end

    @property
    def orig_on_call_user(self):
        """Gets the orig_on_call_user of this OnCallOverride.


        :return: The orig_on_call_user of this OnCallOverride.
        :rtype: User
        """
        return self._orig_on_call_user

    @orig_on_call_user.setter
    def orig_on_call_user(self, orig_on_call_user):
        """Sets the orig_on_call_user of this OnCallOverride.


        :param orig_on_call_user: The orig_on_call_user of this OnCallOverride.
        :type orig_on_call_user: User
        """

        self._orig_on_call_user = orig_on_call_user

    @property
    def override_on_call_user(self):
        """Gets the override_on_call_user of this OnCallOverride.


        :return: The override_on_call_user of this OnCallOverride.
        :rtype: User
        """
        return self._override_on_call_user

    @override_on_call_user.setter
    def override_on_call_user(self, override_on_call_user):
        """Sets the override_on_call_user of this OnCallOverride.


        :param override_on_call_user: The override_on_call_user of this OnCallOverride.
        :type override_on_call_user: User
        """

        self._override_on_call_user = override_on_call_user

    @property
    def start(self):
        """Gets the start of this OnCallOverride.

        The override start time (ISO 8601)

        :return: The start of this OnCallOverride.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this OnCallOverride.

        The override start time (ISO 8601)

        :param start: The start of this OnCallOverride.
        :type start: str
        """

        self._start = start
