# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assignment import Assignment
from openapi_server.models.scheduled_user import ScheduledUser
from openapi_server import util


class ScheduledOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignments: List[Assignment]=None, end: str=None, public_id: str=None, start: str=None, timezone: str=None, user: ScheduledUser=None):
        """ScheduledOverride - a model defined in OpenAPI

        :param assignments: The assignments of this ScheduledOverride.
        :param end: The end of this ScheduledOverride.
        :param public_id: The public_id of this ScheduledOverride.
        :param start: The start of this ScheduledOverride.
        :param timezone: The timezone of this ScheduledOverride.
        :param user: The user of this ScheduledOverride.
        """
        self.openapi_types = {
            'assignments': List[Assignment],
            'end': str,
            'public_id': str,
            'start': str,
            'timezone': str,
            'user': ScheduledUser
        }

        self.attribute_map = {
            'assignments': 'assignments',
            'end': 'end',
            'public_id': 'publicId',
            'start': 'start',
            'timezone': 'timezone',
            'user': 'user'
        }

        self._assignments = assignments
        self._end = end
        self._public_id = public_id
        self._start = start
        self._timezone = timezone
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduledOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduledOverride of this ScheduledOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignments(self):
        """Gets the assignments of this ScheduledOverride.


        :return: The assignments of this ScheduledOverride.
        :rtype: List[Assignment]
        """
        return self._assignments

    @assignments.setter
    def assignments(self, assignments):
        """Sets the assignments of this ScheduledOverride.


        :param assignments: The assignments of this ScheduledOverride.
        :type assignments: List[Assignment]
        """

        self._assignments = assignments

    @property
    def end(self):
        """Gets the end of this ScheduledOverride.

        The override end time (ISO 8601)

        :return: The end of this ScheduledOverride.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this ScheduledOverride.

        The override end time (ISO 8601)

        :param end: The end of this ScheduledOverride.
        :type end: str
        """

        self._end = end

    @property
    def public_id(self):
        """Gets the public_id of this ScheduledOverride.


        :return: The public_id of this ScheduledOverride.
        :rtype: str
        """
        return self._public_id

    @public_id.setter
    def public_id(self, public_id):
        """Sets the public_id of this ScheduledOverride.


        :param public_id: The public_id of this ScheduledOverride.
        :type public_id: str
        """

        self._public_id = public_id

    @property
    def start(self):
        """Gets the start of this ScheduledOverride.

        The override start time (ISO 8601).

        :return: The start of this ScheduledOverride.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this ScheduledOverride.

        The override start time (ISO 8601).

        :param start: The start of this ScheduledOverride.
        :type start: str
        """

        self._start = start

    @property
    def timezone(self):
        """Gets the timezone of this ScheduledOverride.


        :return: The timezone of this ScheduledOverride.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this ScheduledOverride.


        :param timezone: The timezone of this ScheduledOverride.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def user(self):
        """Gets the user of this ScheduledOverride.


        :return: The user of this ScheduledOverride.
        :rtype: ScheduledUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ScheduledOverride.


        :param user: The user of this ScheduledOverride.
        :type user: ScheduledUser
        """

        self._user = user
