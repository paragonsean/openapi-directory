# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.on_call_users_resource_on_call_user import OnCallUsersResourceOnCallUser
from openapi_server import util


class OnCallUsersResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_call_user: OnCallUsersResourceOnCallUser=None):
        """OnCallUsersResource - a model defined in OpenAPI

        :param on_call_user: The on_call_user of this OnCallUsersResource.
        """
        self.openapi_types = {
            'on_call_user': OnCallUsersResourceOnCallUser
        }

        self.attribute_map = {
            'on_call_user': 'onCallUser'
        }

        self._on_call_user = on_call_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnCallUsersResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnCallUsersResource of this OnCallUsersResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_call_user(self):
        """Gets the on_call_user of this OnCallUsersResource.


        :return: The on_call_user of this OnCallUsersResource.
        :rtype: OnCallUsersResourceOnCallUser
        """
        return self._on_call_user

    @on_call_user.setter
    def on_call_user(self, on_call_user):
        """Sets the on_call_user of this OnCallUsersResource.


        :param on_call_user: The on_call_user of this OnCallUsersResource.
        :type on_call_user: OnCallUsersResourceOnCallUser
        """

        self._on_call_user = on_call_user
