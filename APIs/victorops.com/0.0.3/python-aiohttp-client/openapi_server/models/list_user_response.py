# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v1_user import V1User
from openapi_server import util


class ListUserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, self_url: str=None, users: List[V1User]=None):
        """ListUserResponse - a model defined in OpenAPI

        :param self_url: The self_url of this ListUserResponse.
        :param users: The users of this ListUserResponse.
        """
        self.openapi_types = {
            'self_url': str,
            'users': List[V1User]
        }

        self.attribute_map = {
            'self_url': '_selfUrl',
            'users': 'users'
        }

        self._self_url = self_url
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListUserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListUserResponse of this ListUserResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def self_url(self):
        """Gets the self_url of this ListUserResponse.


        :return: The self_url of this ListUserResponse.
        :rtype: str
        """
        return self._self_url

    @self_url.setter
    def self_url(self, self_url):
        """Sets the self_url of this ListUserResponse.


        :param self_url: The self_url of this ListUserResponse.
        :type self_url: str
        """

        self._self_url = self_url

    @property
    def users(self):
        """Gets the users of this ListUserResponse.


        :return: The users of this ListUserResponse.
        :rtype: List[V1User]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this ListUserResponse.


        :param users: The users of this ListUserResponse.
        :type users: List[V1User]
        """

        self._users = users
