# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactDeviceAdd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chat_escalation_sound: str=None, device_label: str=None, escalation_notification_sound: str=None, resolved_notification_sound: str=None):
        """ContactDeviceAdd - a model defined in OpenAPI

        :param chat_escalation_sound: The chat_escalation_sound of this ContactDeviceAdd.
        :param device_label: The device_label of this ContactDeviceAdd.
        :param escalation_notification_sound: The escalation_notification_sound of this ContactDeviceAdd.
        :param resolved_notification_sound: The resolved_notification_sound of this ContactDeviceAdd.
        """
        self.openapi_types = {
            'chat_escalation_sound': str,
            'device_label': str,
            'escalation_notification_sound': str,
            'resolved_notification_sound': str
        }

        self.attribute_map = {
            'chat_escalation_sound': 'chat_escalation_sound',
            'device_label': 'device_label',
            'escalation_notification_sound': 'escalation_notification_sound',
            'resolved_notification_sound': 'resolved_notification_sound'
        }

        self._chat_escalation_sound = chat_escalation_sound
        self._device_label = device_label
        self._escalation_notification_sound = escalation_notification_sound
        self._resolved_notification_sound = resolved_notification_sound

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactDeviceAdd':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactDeviceAdd of this ContactDeviceAdd.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chat_escalation_sound(self):
        """Gets the chat_escalation_sound of this ContactDeviceAdd.


        :return: The chat_escalation_sound of this ContactDeviceAdd.
        :rtype: str
        """
        return self._chat_escalation_sound

    @chat_escalation_sound.setter
    def chat_escalation_sound(self, chat_escalation_sound):
        """Sets the chat_escalation_sound of this ContactDeviceAdd.


        :param chat_escalation_sound: The chat_escalation_sound of this ContactDeviceAdd.
        :type chat_escalation_sound: str
        """

        self._chat_escalation_sound = chat_escalation_sound

    @property
    def device_label(self):
        """Gets the device_label of this ContactDeviceAdd.


        :return: The device_label of this ContactDeviceAdd.
        :rtype: str
        """
        return self._device_label

    @device_label.setter
    def device_label(self, device_label):
        """Sets the device_label of this ContactDeviceAdd.


        :param device_label: The device_label of this ContactDeviceAdd.
        :type device_label: str
        """

        self._device_label = device_label

    @property
    def escalation_notification_sound(self):
        """Gets the escalation_notification_sound of this ContactDeviceAdd.


        :return: The escalation_notification_sound of this ContactDeviceAdd.
        :rtype: str
        """
        return self._escalation_notification_sound

    @escalation_notification_sound.setter
    def escalation_notification_sound(self, escalation_notification_sound):
        """Sets the escalation_notification_sound of this ContactDeviceAdd.


        :param escalation_notification_sound: The escalation_notification_sound of this ContactDeviceAdd.
        :type escalation_notification_sound: str
        """

        self._escalation_notification_sound = escalation_notification_sound

    @property
    def resolved_notification_sound(self):
        """Gets the resolved_notification_sound of this ContactDeviceAdd.


        :return: The resolved_notification_sound of this ContactDeviceAdd.
        :rtype: str
        """
        return self._resolved_notification_sound

    @resolved_notification_sound.setter
    def resolved_notification_sound(self, resolved_notification_sound):
        """Sets the resolved_notification_sound of this ContactDeviceAdd.


        :param resolved_notification_sound: The resolved_notification_sound of this ContactDeviceAdd.
        :type resolved_notification_sound: str
        """

        self._resolved_notification_sound = resolved_notification_sound
