/*
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NADeviceListResponse;
import org.openapitools.client.model.NAThermStateResponse;
import org.openapitools.client.model.NAUserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeprecatedApi
 */
@Disabled
public class DeprecatedApiTest {

    private final DeprecatedApi api = new DeprecatedApi();

    /**
     * The method devicelist returns the list of devices owned by the user, and their modules. A device is identified by its _id (which is its mac address) and each device may have one, several or no modules, also identified by an _id. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicelistTest() throws ApiException {
        String appType = null;
        String deviceId = null;
        Boolean getFavorites = null;
        NADeviceListResponse response = api.devicelist(appType, deviceId, getFavorites);
        // TODO: test validations
    }

    /**
     * The method getthermstate returns the last Thermostat measurements, its current weekly schedule, and, if present, its current manual temperature setpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getthermstateTest() throws ApiException {
        String deviceId = null;
        String moduleId = null;
        NAThermStateResponse response = api.getthermstate(deviceId, moduleId);
        // TODO: test validations
    }

    /**
     * The method getuser returns information about a user such as prefered language, prefered units, and list of devices. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getuserTest() throws ApiException {
        NAUserResponse response = api.getuser();
        // TODO: test validations
    }

}
