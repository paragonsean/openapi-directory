/*
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NAMeasureResponse;
import org.openapitools.client.model.NAStationDataResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StationApi
 */
@Disabled
public class StationApiTest {

    private final StationApi api = new StationApi();

    /**
     * The method getmeasure returns the measurements of a device or a module. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getmeasureTest() throws ApiException {
        String deviceId = null;
        String scale = null;
        List<String> type = null;
        String moduleId = null;
        Integer dateBegin = null;
        String dateEnd = null;
        Integer limit = null;
        Boolean optimize = null;
        Boolean realTime = null;
        NAMeasureResponse response = api.getmeasure(deviceId, scale, type, moduleId, dateBegin, dateEnd, limit, optimize, realTime);
        // TODO: test validations
    }

    /**
     * The method getstationsdata Returns data from a user&#39;s Weather Stations (measures and device specific data).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getstationsdataTest() throws ApiException {
        String deviceId = null;
        Boolean getFavorites = null;
        NAStationDataResponse response = api.getstationsdata(deviceId, getFavorites);
        // TODO: test validations
    }

}
