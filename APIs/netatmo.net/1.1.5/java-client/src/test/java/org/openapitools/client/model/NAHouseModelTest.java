/*
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.NADate;
import org.openapitools.client.model.NAHouseModelCa;
import org.openapitools.client.model.NALinkStation;
import org.openapitools.client.model.NAPidAlgo;
import org.openapitools.client.model.NASimpleAlgo;
import org.openapitools.client.model.NAStation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NAHouseModel
 */
public class NAHouseModelTest {
    private final NAHouseModel model = new NAHouseModel();

    /**
     * Model tests for NAHouseModel
     */
    @Test
    public void testNAHouseModel() {
        // TODO: test NAHouseModel
    }

    /**
     * Test the property 'algoType'
     */
    @Test
    public void algoTypeTest() {
        // TODO: test algoType
    }

    /**
     * Test the property 'ca'
     */
    @Test
    public void caTest() {
        // TODO: test ca
    }

    /**
     * Test the property 'extTemps'
     */
    @Test
    public void extTempsTest() {
        // TODO: test extTemps
    }

    /**
     * Test the property 'firstAnticipateAvail'
     */
    @Test
    public void firstAnticipateAvailTest() {
        // TODO: test firstAnticipateAvail
    }

    /**
     * Test the property 'firstPidAvail'
     */
    @Test
    public void firstPidAvailTest() {
        // TODO: test firstPidAvail
    }

    /**
     * Test the property 'gefs'
     */
    @Test
    public void gefsTest() {
        // TODO: test gefs
    }

    /**
     * Test the property 'inUse'
     */
    @Test
    public void inUseTest() {
        // TODO: test inUse
    }

    /**
     * Test the property 'lastComputeTry'
     */
    @Test
    public void lastComputeTryTest() {
        // TODO: test lastComputeTry
    }

    /**
     * Test the property 'linkStation'
     */
    @Test
    public void linkStationTest() {
        // TODO: test linkStation
    }

    /**
     * Test the property 'pidAlgo'
     */
    @Test
    public void pidAlgoTest() {
        // TODO: test pidAlgo
    }

    /**
     * Test the property 'preferedAlgoType'
     */
    @Test
    public void preferedAlgoTypeTest() {
        // TODO: test preferedAlgoType
    }

    /**
     * Test the property 'simpleAlgo'
     */
    @Test
    public void simpleAlgoTest() {
        // TODO: test simpleAlgo
    }

    /**
     * Test the property 'station'
     */
    @Test
    public void stationTest() {
        // TODO: test station
    }

    /**
     * Test the property 'stationFirsttimeAnticipate'
     */
    @Test
    public void stationFirsttimeAnticipateTest() {
        // TODO: test stationFirsttimeAnticipate
    }

    /**
     * Test the property 'time'
     */
    @Test
    public void timeTest() {
        // TODO: test time
    }

    /**
     * Test the property 'timeAlgoChanged'
     */
    @Test
    public void timeAlgoChangedTest() {
        // TODO: test timeAlgoChanged
    }

    /**
     * Test the property 'timePidComputed'
     */
    @Test
    public void timePidComputedTest() {
        // TODO: test timePidComputed
    }

}
