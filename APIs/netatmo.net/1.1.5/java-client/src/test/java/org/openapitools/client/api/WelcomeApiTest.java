/*
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NAWelcomeEventResponse;
import org.openapitools.client.model.NAWelcomeHomeDataResponse;
import org.openapitools.client.model.NAWelcomePersonsAwayResponse;
import org.openapitools.client.model.NAWelcomePersonsHomeResponse;
import org.openapitools.client.model.NAWelcomeWebhookResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WelcomeApi
 */
@Disabled
public class WelcomeApiTest {

    private final WelcomeApi api = new WelcomeApi();

    /**
     * Links a callback url to a user. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addwebhookTest() throws ApiException {
        String url = null;
        String appType = null;
        NAWelcomeWebhookResponse response = api.addwebhook(url, appType);
        // TODO: test validations
    }

    /**
     * Dissociates a webhook from a user. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dropwebhookTest() throws ApiException {
        String appType = null;
        NAWelcomeWebhookResponse response = api.dropwebhook(appType);
        // TODO: test validations
    }

    /**
     * Returns the snapshot associated to an event. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getcamerapictureTest() throws ApiException {
        String imageId = null;
        String key = null;
        byte[] response = api.getcamerapicture(imageId, key);
        // TODO: test validations
    }

    /**
     * Returns the snapshot associated to an event. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void geteventsuntilTest() throws ApiException {
        String homeId = null;
        String eventId = null;
        NAWelcomeEventResponse response = api.geteventsuntil(homeId, eventId);
        // TODO: test validations
    }

    /**
     * Returns information about users homes and cameras. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gethomedataTest() throws ApiException {
        String homeId = null;
        Integer size = null;
        NAWelcomeHomeDataResponse response = api.gethomedata(homeId, size);
        // TODO: test validations
    }

    /**
     * Returns most recent events. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getlasteventofTest() throws ApiException {
        String homeId = null;
        String personId = null;
        Integer offset = null;
        NAWelcomeEventResponse response = api.getlasteventof(homeId, personId, offset);
        // TODO: test validations
    }

    /**
     * Returns previous events. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getnexteventsTest() throws ApiException {
        String homeId = null;
        String eventId = null;
        Integer size = null;
        NAWelcomeEventResponse response = api.getnextevents(homeId, eventId, size);
        // TODO: test validations
    }

    /**
     * Sets a person as &#39;Away&#39; or the Home as &#39;Empty&#39;. The event will be added to the userâ€™s timeline. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setpersonsawayTest() throws ApiException {
        String homeId = null;
        String personId = null;
        NAWelcomePersonsAwayResponse response = api.setpersonsaway(homeId, personId);
        // TODO: test validations
    }

    /**
     * Sets a person as &#39;At home&#39;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setpersonshomeTest() throws ApiException {
        String homeId = null;
        String personIds = null;
        NAWelcomePersonsHomeResponse response = api.setpersonshome(homeId, personIds);
        // TODO: test validations
    }

}
