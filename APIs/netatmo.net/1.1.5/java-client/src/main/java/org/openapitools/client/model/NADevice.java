/*
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.NADashboardData;
import org.openapitools.client.model.NADate;
import org.openapitools.client.model.NAHeatingSystem;
import org.openapitools.client.model.NAHouseModel;
import org.openapitools.client.model.NAObject;
import org.openapitools.client.model.NAPlace;
import org.openapitools.client.model.NAThermProgram;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NADevice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:19:42.898640-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NADevice {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BEHAVIOR = "behavior";
  @SerializedName(SERIALIZED_NAME_BEHAVIOR)
  private Integer behavior;

  public static final String SERIALIZED_NAME_CIPHER_ID = "cipher_id";
  @SerializedName(SERIALIZED_NAME_CIPHER_ID)
  private String cipherId;

  public static final String SERIALIZED_NAME_DASHBOARD_DATA = "dashboard_data";
  @SerializedName(SERIALIZED_NAME_DASHBOARD_DATA)
  private NADashboardData dashboardData;

  public static final String SERIALIZED_NAME_DATA_TYPE = "data_type";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE)
  private List<String> dataType = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATE_SETUP = "date_setup";
  @SerializedName(SERIALIZED_NAME_DATE_SETUP)
  private NADate dateSetup;

  public static final String SERIALIZED_NAME_FIRMWARE = "firmware";
  @SerializedName(SERIALIZED_NAME_FIRMWARE)
  private Integer firmware;

  public static final String SERIALIZED_NAME_FIRST_PID_AVAIL = "first_pid_avail";
  @SerializedName(SERIALIZED_NAME_FIRST_PID_AVAIL)
  private Boolean firstPidAvail;

  public static final String SERIALIZED_NAME_HEATING_SYSTEM = "heating_system";
  @SerializedName(SERIALIZED_NAME_HEATING_SYSTEM)
  private NAHeatingSystem heatingSystem;

  public static final String SERIALIZED_NAME_HOUSE_MODEL = "house_model";
  @SerializedName(SERIALIZED_NAME_HOUSE_MODEL)
  private NAHouseModel houseModel;

  public static final String SERIALIZED_NAME_HW_VERSION = "hw_version";
  @SerializedName(SERIALIZED_NAME_HW_VERSION)
  private Integer hwVersion;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private String ip;

  public static final String SERIALIZED_NAME_LAST_FW_UPDATE = "last_fw_update";
  @SerializedName(SERIALIZED_NAME_LAST_FW_UPDATE)
  private Integer lastFwUpdate;

  public static final String SERIALIZED_NAME_LAST_RADIO_STORE = "last_radio_store";
  @SerializedName(SERIALIZED_NAME_LAST_RADIO_STORE)
  private Integer lastRadioStore;

  public static final String SERIALIZED_NAME_LAST_STATUS_STORE = "last_status_store";
  @SerializedName(SERIALIZED_NAME_LAST_STATUS_STORE)
  private Integer lastStatusStore;

  public static final String SERIALIZED_NAME_LAST_UPGRADE = "last_upgrade";
  @SerializedName(SERIALIZED_NAME_LAST_UPGRADE)
  private Integer lastUpgrade;

  public static final String SERIALIZED_NAME_MODULE_NAME = "module_name";
  @SerializedName(SERIALIZED_NAME_MODULE_NAME)
  private String moduleName;

  public static final String SERIALIZED_NAME_MODULES = "modules";
  @SerializedName(SERIALIZED_NAME_MODULES)
  private List<String> modules = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEW_FEATURE_AVAIL = "new_feature_avail";
  @SerializedName(SERIALIZED_NAME_NEW_FEATURE_AVAIL)
  private Boolean newFeatureAvail;

  public static final String SERIALIZED_NAME_PLACE = "place";
  @SerializedName(SERIALIZED_NAME_PLACE)
  private NAPlace place;

  public static final String SERIALIZED_NAME_PUBLIC_EXT_DATA = "public_ext_data";
  @SerializedName(SERIALIZED_NAME_PUBLIC_EXT_DATA)
  private Boolean publicExtData;

  public static final String SERIALIZED_NAME_SETPOINT = "setpoint";
  @SerializedName(SERIALIZED_NAME_SETPOINT)
  private Object setpoint;

  public static final String SERIALIZED_NAME_SETPOINT_DEFAULT_DURATION = "setpoint_default_duration";
  @SerializedName(SERIALIZED_NAME_SETPOINT_DEFAULT_DURATION)
  private Integer setpointDefaultDuration;

  public static final String SERIALIZED_NAME_SETPOINT_ORDER = "setpoint_order";
  @SerializedName(SERIALIZED_NAME_SETPOINT_ORDER)
  private Map<String, List<NAObject>> setpointOrder = new HashMap<>();

  public static final String SERIALIZED_NAME_STATION_NAME = "station_name";
  @SerializedName(SERIALIZED_NAME_STATION_NAME)
  private String stationName;

  public static final String SERIALIZED_NAME_THERM_PROGRAM = "therm_program";
  @SerializedName(SERIALIZED_NAME_THERM_PROGRAM)
  private Map<String, NAThermProgram> thermProgram = new HashMap<>();

  public static final String SERIALIZED_NAME_THERM_PROGRAM_BACKUP = "therm_program_backup";
  @SerializedName(SERIALIZED_NAME_THERM_PROGRAM_BACKUP)
  private Map<String, List<NAThermProgram>> thermProgramBackup = new HashMap<>();

  public static final String SERIALIZED_NAME_THERM_PROGRAM_ORDER = "therm_program_order";
  @SerializedName(SERIALIZED_NAME_THERM_PROGRAM_ORDER)
  private Map<String, List<NAObject>> thermProgramOrder = new HashMap<>();

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UDP_CONN = "udp_conn";
  @SerializedName(SERIALIZED_NAME_UDP_CONN)
  private Boolean udpConn;

  public static final String SERIALIZED_NAME_USER_OWNER = "user_owner";
  @SerializedName(SERIALIZED_NAME_USER_OWNER)
  private List<String> userOwner = new ArrayList<>();

  public static final String SERIALIZED_NAME_WIFI_STATUS = "wifi_status";
  @SerializedName(SERIALIZED_NAME_WIFI_STATUS)
  private Integer wifiStatus;

  public NADevice() {
  }

  public NADevice id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public NADevice behavior(Integer behavior) {
    this.behavior = behavior;
    return this;
  }

  /**
   * Get behavior
   * @return behavior
   */
  @javax.annotation.Nullable
  public Integer getBehavior() {
    return behavior;
  }

  public void setBehavior(Integer behavior) {
    this.behavior = behavior;
  }


  public NADevice cipherId(String cipherId) {
    this.cipherId = cipherId;
    return this;
  }

  /**
   * Get cipherId
   * @return cipherId
   */
  @javax.annotation.Nullable
  public String getCipherId() {
    return cipherId;
  }

  public void setCipherId(String cipherId) {
    this.cipherId = cipherId;
  }


  public NADevice dashboardData(NADashboardData dashboardData) {
    this.dashboardData = dashboardData;
    return this;
  }

  /**
   * Get dashboardData
   * @return dashboardData
   */
  @javax.annotation.Nullable
  public NADashboardData getDashboardData() {
    return dashboardData;
  }

  public void setDashboardData(NADashboardData dashboardData) {
    this.dashboardData = dashboardData;
  }


  public NADevice dataType(List<String> dataType) {
    this.dataType = dataType;
    return this;
  }

  public NADevice addDataTypeItem(String dataTypeItem) {
    if (this.dataType == null) {
      this.dataType = new ArrayList<>();
    }
    this.dataType.add(dataTypeItem);
    return this;
  }

  /**
   * Get dataType
   * @return dataType
   */
  @javax.annotation.Nullable
  public List<String> getDataType() {
    return dataType;
  }

  public void setDataType(List<String> dataType) {
    this.dataType = dataType;
  }


  public NADevice dateSetup(NADate dateSetup) {
    this.dateSetup = dateSetup;
    return this;
  }

  /**
   * Get dateSetup
   * @return dateSetup
   */
  @javax.annotation.Nullable
  public NADate getDateSetup() {
    return dateSetup;
  }

  public void setDateSetup(NADate dateSetup) {
    this.dateSetup = dateSetup;
  }


  public NADevice firmware(Integer firmware) {
    this.firmware = firmware;
    return this;
  }

  /**
   * Get firmware
   * @return firmware
   */
  @javax.annotation.Nullable
  public Integer getFirmware() {
    return firmware;
  }

  public void setFirmware(Integer firmware) {
    this.firmware = firmware;
  }


  public NADevice firstPidAvail(Boolean firstPidAvail) {
    this.firstPidAvail = firstPidAvail;
    return this;
  }

  /**
   * Get firstPidAvail
   * @return firstPidAvail
   */
  @javax.annotation.Nullable
  public Boolean getFirstPidAvail() {
    return firstPidAvail;
  }

  public void setFirstPidAvail(Boolean firstPidAvail) {
    this.firstPidAvail = firstPidAvail;
  }


  public NADevice heatingSystem(NAHeatingSystem heatingSystem) {
    this.heatingSystem = heatingSystem;
    return this;
  }

  /**
   * Get heatingSystem
   * @return heatingSystem
   */
  @javax.annotation.Nullable
  public NAHeatingSystem getHeatingSystem() {
    return heatingSystem;
  }

  public void setHeatingSystem(NAHeatingSystem heatingSystem) {
    this.heatingSystem = heatingSystem;
  }


  public NADevice houseModel(NAHouseModel houseModel) {
    this.houseModel = houseModel;
    return this;
  }

  /**
   * Get houseModel
   * @return houseModel
   */
  @javax.annotation.Nullable
  public NAHouseModel getHouseModel() {
    return houseModel;
  }

  public void setHouseModel(NAHouseModel houseModel) {
    this.houseModel = houseModel;
  }


  public NADevice hwVersion(Integer hwVersion) {
    this.hwVersion = hwVersion;
    return this;
  }

  /**
   * Get hwVersion
   * @return hwVersion
   */
  @javax.annotation.Nullable
  public Integer getHwVersion() {
    return hwVersion;
  }

  public void setHwVersion(Integer hwVersion) {
    this.hwVersion = hwVersion;
  }


  public NADevice ip(String ip) {
    this.ip = ip;
    return this;
  }

  /**
   * Get ip
   * @return ip
   */
  @javax.annotation.Nullable
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }


  public NADevice lastFwUpdate(Integer lastFwUpdate) {
    this.lastFwUpdate = lastFwUpdate;
    return this;
  }

  /**
   * Get lastFwUpdate
   * @return lastFwUpdate
   */
  @javax.annotation.Nullable
  public Integer getLastFwUpdate() {
    return lastFwUpdate;
  }

  public void setLastFwUpdate(Integer lastFwUpdate) {
    this.lastFwUpdate = lastFwUpdate;
  }


  public NADevice lastRadioStore(Integer lastRadioStore) {
    this.lastRadioStore = lastRadioStore;
    return this;
  }

  /**
   * Get lastRadioStore
   * @return lastRadioStore
   */
  @javax.annotation.Nullable
  public Integer getLastRadioStore() {
    return lastRadioStore;
  }

  public void setLastRadioStore(Integer lastRadioStore) {
    this.lastRadioStore = lastRadioStore;
  }


  public NADevice lastStatusStore(Integer lastStatusStore) {
    this.lastStatusStore = lastStatusStore;
    return this;
  }

  /**
   * Get lastStatusStore
   * @return lastStatusStore
   */
  @javax.annotation.Nullable
  public Integer getLastStatusStore() {
    return lastStatusStore;
  }

  public void setLastStatusStore(Integer lastStatusStore) {
    this.lastStatusStore = lastStatusStore;
  }


  public NADevice lastUpgrade(Integer lastUpgrade) {
    this.lastUpgrade = lastUpgrade;
    return this;
  }

  /**
   * Get lastUpgrade
   * @return lastUpgrade
   */
  @javax.annotation.Nullable
  public Integer getLastUpgrade() {
    return lastUpgrade;
  }

  public void setLastUpgrade(Integer lastUpgrade) {
    this.lastUpgrade = lastUpgrade;
  }


  public NADevice moduleName(String moduleName) {
    this.moduleName = moduleName;
    return this;
  }

  /**
   * Get moduleName
   * @return moduleName
   */
  @javax.annotation.Nullable
  public String getModuleName() {
    return moduleName;
  }

  public void setModuleName(String moduleName) {
    this.moduleName = moduleName;
  }


  public NADevice modules(List<String> modules) {
    this.modules = modules;
    return this;
  }

  public NADevice addModulesItem(String modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<>();
    }
    this.modules.add(modulesItem);
    return this;
  }

  /**
   * It lists which modules are linked with this device
   * @return modules
   */
  @javax.annotation.Nullable
  public List<String> getModules() {
    return modules;
  }

  public void setModules(List<String> modules) {
    this.modules = modules;
  }


  public NADevice newFeatureAvail(Boolean newFeatureAvail) {
    this.newFeatureAvail = newFeatureAvail;
    return this;
  }

  /**
   * Get newFeatureAvail
   * @return newFeatureAvail
   */
  @javax.annotation.Nullable
  public Boolean getNewFeatureAvail() {
    return newFeatureAvail;
  }

  public void setNewFeatureAvail(Boolean newFeatureAvail) {
    this.newFeatureAvail = newFeatureAvail;
  }


  public NADevice place(NAPlace place) {
    this.place = place;
    return this;
  }

  /**
   * Get place
   * @return place
   */
  @javax.annotation.Nullable
  public NAPlace getPlace() {
    return place;
  }

  public void setPlace(NAPlace place) {
    this.place = place;
  }


  public NADevice publicExtData(Boolean publicExtData) {
    this.publicExtData = publicExtData;
    return this;
  }

  /**
   * Get publicExtData
   * @return publicExtData
   */
  @javax.annotation.Nullable
  public Boolean getPublicExtData() {
    return publicExtData;
  }

  public void setPublicExtData(Boolean publicExtData) {
    this.publicExtData = publicExtData;
  }


  public NADevice setpoint(Object setpoint) {
    this.setpoint = setpoint;
    return this;
  }

  /**
   * Get setpoint
   * @return setpoint
   */
  @javax.annotation.Nullable
  public Object getSetpoint() {
    return setpoint;
  }

  public void setSetpoint(Object setpoint) {
    this.setpoint = setpoint;
  }


  public NADevice setpointDefaultDuration(Integer setpointDefaultDuration) {
    this.setpointDefaultDuration = setpointDefaultDuration;
    return this;
  }

  /**
   * Get setpointDefaultDuration
   * @return setpointDefaultDuration
   */
  @javax.annotation.Nullable
  public Integer getSetpointDefaultDuration() {
    return setpointDefaultDuration;
  }

  public void setSetpointDefaultDuration(Integer setpointDefaultDuration) {
    this.setpointDefaultDuration = setpointDefaultDuration;
  }


  public NADevice setpointOrder(Map<String, List<NAObject>> setpointOrder) {
    this.setpointOrder = setpointOrder;
    return this;
  }

  public NADevice putSetpointOrderItem(String key, List<NAObject> setpointOrderItem) {
    if (this.setpointOrder == null) {
      this.setpointOrder = new HashMap<>();
    }
    this.setpointOrder.put(key, setpointOrderItem);
    return this;
  }

  /**
   * Get setpointOrder
   * @return setpointOrder
   */
  @javax.annotation.Nullable
  public Map<String, List<NAObject>> getSetpointOrder() {
    return setpointOrder;
  }

  public void setSetpointOrder(Map<String, List<NAObject>> setpointOrder) {
    this.setpointOrder = setpointOrder;
  }


  public NADevice stationName(String stationName) {
    this.stationName = stationName;
    return this;
  }

  /**
   * Get stationName
   * @return stationName
   */
  @javax.annotation.Nullable
  public String getStationName() {
    return stationName;
  }

  public void setStationName(String stationName) {
    this.stationName = stationName;
  }


  public NADevice thermProgram(Map<String, NAThermProgram> thermProgram) {
    this.thermProgram = thermProgram;
    return this;
  }

  public NADevice putThermProgramItem(String key, NAThermProgram thermProgramItem) {
    if (this.thermProgram == null) {
      this.thermProgram = new HashMap<>();
    }
    this.thermProgram.put(key, thermProgramItem);
    return this;
  }

  /**
   * Get thermProgram
   * @return thermProgram
   */
  @javax.annotation.Nullable
  public Map<String, NAThermProgram> getThermProgram() {
    return thermProgram;
  }

  public void setThermProgram(Map<String, NAThermProgram> thermProgram) {
    this.thermProgram = thermProgram;
  }


  public NADevice thermProgramBackup(Map<String, List<NAThermProgram>> thermProgramBackup) {
    this.thermProgramBackup = thermProgramBackup;
    return this;
  }

  public NADevice putThermProgramBackupItem(String key, List<NAThermProgram> thermProgramBackupItem) {
    if (this.thermProgramBackup == null) {
      this.thermProgramBackup = new HashMap<>();
    }
    this.thermProgramBackup.put(key, thermProgramBackupItem);
    return this;
  }

  /**
   * Get thermProgramBackup
   * @return thermProgramBackup
   */
  @javax.annotation.Nullable
  public Map<String, List<NAThermProgram>> getThermProgramBackup() {
    return thermProgramBackup;
  }

  public void setThermProgramBackup(Map<String, List<NAThermProgram>> thermProgramBackup) {
    this.thermProgramBackup = thermProgramBackup;
  }


  public NADevice thermProgramOrder(Map<String, List<NAObject>> thermProgramOrder) {
    this.thermProgramOrder = thermProgramOrder;
    return this;
  }

  public NADevice putThermProgramOrderItem(String key, List<NAObject> thermProgramOrderItem) {
    if (this.thermProgramOrder == null) {
      this.thermProgramOrder = new HashMap<>();
    }
    this.thermProgramOrder.put(key, thermProgramOrderItem);
    return this;
  }

  /**
   * Get thermProgramOrder
   * @return thermProgramOrder
   */
  @javax.annotation.Nullable
  public Map<String, List<NAObject>> getThermProgramOrder() {
    return thermProgramOrder;
  }

  public void setThermProgramOrder(Map<String, List<NAObject>> thermProgramOrder) {
    this.thermProgramOrder = thermProgramOrder;
  }


  public NADevice type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Included in every device or module. It defines the type of the device/module. Its values are among : NAMain : for the base station NAModule1 : for the outdoor module NAModule4 : for the additionnal indoor module NAModule3 : for the rain gauge module NAPlug : for the thermostat relay/plug NATherm1 : for the thermostat module 
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public NADevice udpConn(Boolean udpConn) {
    this.udpConn = udpConn;
    return this;
  }

  /**
   * Get udpConn
   * @return udpConn
   */
  @javax.annotation.Nullable
  public Boolean getUdpConn() {
    return udpConn;
  }

  public void setUdpConn(Boolean udpConn) {
    this.udpConn = udpConn;
  }


  public NADevice userOwner(List<String> userOwner) {
    this.userOwner = userOwner;
    return this;
  }

  public NADevice addUserOwnerItem(String userOwnerItem) {
    if (this.userOwner == null) {
      this.userOwner = new ArrayList<>();
    }
    this.userOwner.add(userOwnerItem);
    return this;
  }

  /**
   * Get userOwner
   * @return userOwner
   */
  @javax.annotation.Nullable
  public List<String> getUserOwner() {
    return userOwner;
  }

  public void setUserOwner(List<String> userOwner) {
    this.userOwner = userOwner;
  }


  public NADevice wifiStatus(Integer wifiStatus) {
    this.wifiStatus = wifiStatus;
    return this;
  }

  /**
   * It contains the current wifi status. The different thresholds to take into account are RSSI_THRESHOLD_0 &#x3D; 86 bad signal RSSI_THRESHOLD_1 &#x3D; 71 middle quality signal RSSI_THRESHOLD_2 &#x3D; 56 good signal 
   * @return wifiStatus
   */
  @javax.annotation.Nullable
  public Integer getWifiStatus() {
    return wifiStatus;
  }

  public void setWifiStatus(Integer wifiStatus) {
    this.wifiStatus = wifiStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NADevice naDevice = (NADevice) o;
    return Objects.equals(this.id, naDevice.id) &&
        Objects.equals(this.behavior, naDevice.behavior) &&
        Objects.equals(this.cipherId, naDevice.cipherId) &&
        Objects.equals(this.dashboardData, naDevice.dashboardData) &&
        Objects.equals(this.dataType, naDevice.dataType) &&
        Objects.equals(this.dateSetup, naDevice.dateSetup) &&
        Objects.equals(this.firmware, naDevice.firmware) &&
        Objects.equals(this.firstPidAvail, naDevice.firstPidAvail) &&
        Objects.equals(this.heatingSystem, naDevice.heatingSystem) &&
        Objects.equals(this.houseModel, naDevice.houseModel) &&
        Objects.equals(this.hwVersion, naDevice.hwVersion) &&
        Objects.equals(this.ip, naDevice.ip) &&
        Objects.equals(this.lastFwUpdate, naDevice.lastFwUpdate) &&
        Objects.equals(this.lastRadioStore, naDevice.lastRadioStore) &&
        Objects.equals(this.lastStatusStore, naDevice.lastStatusStore) &&
        Objects.equals(this.lastUpgrade, naDevice.lastUpgrade) &&
        Objects.equals(this.moduleName, naDevice.moduleName) &&
        Objects.equals(this.modules, naDevice.modules) &&
        Objects.equals(this.newFeatureAvail, naDevice.newFeatureAvail) &&
        Objects.equals(this.place, naDevice.place) &&
        Objects.equals(this.publicExtData, naDevice.publicExtData) &&
        Objects.equals(this.setpoint, naDevice.setpoint) &&
        Objects.equals(this.setpointDefaultDuration, naDevice.setpointDefaultDuration) &&
        Objects.equals(this.setpointOrder, naDevice.setpointOrder) &&
        Objects.equals(this.stationName, naDevice.stationName) &&
        Objects.equals(this.thermProgram, naDevice.thermProgram) &&
        Objects.equals(this.thermProgramBackup, naDevice.thermProgramBackup) &&
        Objects.equals(this.thermProgramOrder, naDevice.thermProgramOrder) &&
        Objects.equals(this.type, naDevice.type) &&
        Objects.equals(this.udpConn, naDevice.udpConn) &&
        Objects.equals(this.userOwner, naDevice.userOwner) &&
        Objects.equals(this.wifiStatus, naDevice.wifiStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, behavior, cipherId, dashboardData, dataType, dateSetup, firmware, firstPidAvail, heatingSystem, houseModel, hwVersion, ip, lastFwUpdate, lastRadioStore, lastStatusStore, lastUpgrade, moduleName, modules, newFeatureAvail, place, publicExtData, setpoint, setpointDefaultDuration, setpointOrder, stationName, thermProgram, thermProgramBackup, thermProgramOrder, type, udpConn, userOwner, wifiStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NADevice {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    behavior: ").append(toIndentedString(behavior)).append("\n");
    sb.append("    cipherId: ").append(toIndentedString(cipherId)).append("\n");
    sb.append("    dashboardData: ").append(toIndentedString(dashboardData)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    dateSetup: ").append(toIndentedString(dateSetup)).append("\n");
    sb.append("    firmware: ").append(toIndentedString(firmware)).append("\n");
    sb.append("    firstPidAvail: ").append(toIndentedString(firstPidAvail)).append("\n");
    sb.append("    heatingSystem: ").append(toIndentedString(heatingSystem)).append("\n");
    sb.append("    houseModel: ").append(toIndentedString(houseModel)).append("\n");
    sb.append("    hwVersion: ").append(toIndentedString(hwVersion)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    lastFwUpdate: ").append(toIndentedString(lastFwUpdate)).append("\n");
    sb.append("    lastRadioStore: ").append(toIndentedString(lastRadioStore)).append("\n");
    sb.append("    lastStatusStore: ").append(toIndentedString(lastStatusStore)).append("\n");
    sb.append("    lastUpgrade: ").append(toIndentedString(lastUpgrade)).append("\n");
    sb.append("    moduleName: ").append(toIndentedString(moduleName)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    newFeatureAvail: ").append(toIndentedString(newFeatureAvail)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    publicExtData: ").append(toIndentedString(publicExtData)).append("\n");
    sb.append("    setpoint: ").append(toIndentedString(setpoint)).append("\n");
    sb.append("    setpointDefaultDuration: ").append(toIndentedString(setpointDefaultDuration)).append("\n");
    sb.append("    setpointOrder: ").append(toIndentedString(setpointOrder)).append("\n");
    sb.append("    stationName: ").append(toIndentedString(stationName)).append("\n");
    sb.append("    thermProgram: ").append(toIndentedString(thermProgram)).append("\n");
    sb.append("    thermProgramBackup: ").append(toIndentedString(thermProgramBackup)).append("\n");
    sb.append("    thermProgramOrder: ").append(toIndentedString(thermProgramOrder)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    udpConn: ").append(toIndentedString(udpConn)).append("\n");
    sb.append("    userOwner: ").append(toIndentedString(userOwner)).append("\n");
    sb.append("    wifiStatus: ").append(toIndentedString(wifiStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("behavior");
    openapiFields.add("cipher_id");
    openapiFields.add("dashboard_data");
    openapiFields.add("data_type");
    openapiFields.add("date_setup");
    openapiFields.add("firmware");
    openapiFields.add("first_pid_avail");
    openapiFields.add("heating_system");
    openapiFields.add("house_model");
    openapiFields.add("hw_version");
    openapiFields.add("ip");
    openapiFields.add("last_fw_update");
    openapiFields.add("last_radio_store");
    openapiFields.add("last_status_store");
    openapiFields.add("last_upgrade");
    openapiFields.add("module_name");
    openapiFields.add("modules");
    openapiFields.add("new_feature_avail");
    openapiFields.add("place");
    openapiFields.add("public_ext_data");
    openapiFields.add("setpoint");
    openapiFields.add("setpoint_default_duration");
    openapiFields.add("setpoint_order");
    openapiFields.add("station_name");
    openapiFields.add("therm_program");
    openapiFields.add("therm_program_backup");
    openapiFields.add("therm_program_order");
    openapiFields.add("type");
    openapiFields.add("udp_conn");
    openapiFields.add("user_owner");
    openapiFields.add("wifi_status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NADevice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NADevice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NADevice is not found in the empty JSON string", NADevice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NADevice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NADevice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("_id") != null && !jsonObj.get("_id").isJsonNull()) && !jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if ((jsonObj.get("cipher_id") != null && !jsonObj.get("cipher_id").isJsonNull()) && !jsonObj.get("cipher_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cipher_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cipher_id").toString()));
      }
      // validate the optional field `dashboard_data`
      if (jsonObj.get("dashboard_data") != null && !jsonObj.get("dashboard_data").isJsonNull()) {
        NADashboardData.validateJsonElement(jsonObj.get("dashboard_data"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("data_type") != null && !jsonObj.get("data_type").isJsonNull() && !jsonObj.get("data_type").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `data_type` to be an array in the JSON string but got `%s`", jsonObj.get("data_type").toString()));
      }
      // validate the optional field `date_setup`
      if (jsonObj.get("date_setup") != null && !jsonObj.get("date_setup").isJsonNull()) {
        NADate.validateJsonElement(jsonObj.get("date_setup"));
      }
      // validate the optional field `heating_system`
      if (jsonObj.get("heating_system") != null && !jsonObj.get("heating_system").isJsonNull()) {
        NAHeatingSystem.validateJsonElement(jsonObj.get("heating_system"));
      }
      // validate the optional field `house_model`
      if (jsonObj.get("house_model") != null && !jsonObj.get("house_model").isJsonNull()) {
        NAHouseModel.validateJsonElement(jsonObj.get("house_model"));
      }
      if ((jsonObj.get("ip") != null && !jsonObj.get("ip").isJsonNull()) && !jsonObj.get("ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip").toString()));
      }
      if ((jsonObj.get("module_name") != null && !jsonObj.get("module_name").isJsonNull()) && !jsonObj.get("module_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `module_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("module_name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("modules") != null && !jsonObj.get("modules").isJsonNull() && !jsonObj.get("modules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `modules` to be an array in the JSON string but got `%s`", jsonObj.get("modules").toString()));
      }
      // validate the optional field `place`
      if (jsonObj.get("place") != null && !jsonObj.get("place").isJsonNull()) {
        NAPlace.validateJsonElement(jsonObj.get("place"));
      }
      if ((jsonObj.get("station_name") != null && !jsonObj.get("station_name").isJsonNull()) && !jsonObj.get("station_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `station_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("station_name").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("user_owner") != null && !jsonObj.get("user_owner").isJsonNull() && !jsonObj.get("user_owner").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_owner` to be an array in the JSON string but got `%s`", jsonObj.get("user_owner").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NADevice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NADevice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NADevice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NADevice.class));

       return (TypeAdapter<T>) new TypeAdapter<NADevice>() {
           @Override
           public void write(JsonWriter out, NADevice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NADevice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NADevice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NADevice
   * @throws IOException if the JSON string is invalid with respect to NADevice
   */
  public static NADevice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NADevice.class);
  }

  /**
   * Convert an instance of NADevice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

