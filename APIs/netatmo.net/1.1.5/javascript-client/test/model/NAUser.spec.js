/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Netatmo);
  }
}(this, function(expect, Netatmo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Netatmo.NAUser();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NAUser', function() {
    it('should create an instance of NAUser', function() {
      // uncomment below and update the code to test NAUser
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be.a(Netatmo.NAUser);
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property administrative (base name: "administrative")', function() {
      // uncomment below and update the code to test the property administrative
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property dateCreation (base name: "date_creation")', function() {
      // uncomment below and update the code to test the property dateCreation
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property devices (base name: "devices")', function() {
      // uncomment below and update the code to test the property devices
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property friendDevices (base name: "friend_devices")', function() {
      // uncomment below and update the code to test the property friendDevices
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property mail (base name: "mail")', function() {
      // uncomment below and update the code to test the property mail
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property timelineNotRead (base name: "timeline_not_read")', function() {
      // uncomment below and update the code to test the property timelineNotRead
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

    it('should have the property timelineSize (base name: "timeline_size")', function() {
      // uncomment below and update the code to test the property timelineSize
      //var instance = new Netatmo.NAUser();
      //expect(instance).to.be();
    });

  });

}));
