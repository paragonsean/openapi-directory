/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Netatmo);
  }
}(this, function(expect, Netatmo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Netatmo.NADashboardData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NADashboardData', function() {
    it('should create an instance of NADashboardData', function() {
      // uncomment below and update the code to test NADashboardData
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be.a(Netatmo.NADashboardData);
    });

    it('should have the property absolutePressure (base name: "AbsolutePressure")', function() {
      // uncomment below and update the code to test the property absolutePressure
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property boilerOff (base name: "BoilerOff")', function() {
      // uncomment below and update the code to test the property boilerOff
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property boilerOn (base name: "BoilerOn")', function() {
      // uncomment below and update the code to test the property boilerOn
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property cO2 (base name: "CO2")', function() {
      // uncomment below and update the code to test the property cO2
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property gustAngle (base name: "GustAngle")', function() {
      // uncomment below and update the code to test the property gustAngle
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property gustStrength (base name: "GustStrength")', function() {
      // uncomment below and update the code to test the property gustStrength
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property humidity (base name: "Humidity")', function() {
      // uncomment below and update the code to test the property humidity
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property noise (base name: "Noise")', function() {
      // uncomment below and update the code to test the property noise
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property pressure (base name: "Pressure")', function() {
      // uncomment below and update the code to test the property pressure
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property rain (base name: "Rain")', function() {
      // uncomment below and update the code to test the property rain
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property temperature (base name: "Temperature")', function() {
      // uncomment below and update the code to test the property temperature
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property windAngle (base name: "WindAngle")', function() {
      // uncomment below and update the code to test the property windAngle
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property windStrength (base name: "WindStrength")', function() {
      // uncomment below and update the code to test the property windStrength
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property dateMaxTemp (base name: "date_max_temp")', function() {
      // uncomment below and update the code to test the property dateMaxTemp
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property dateMaxWindStr (base name: "date_max_wind_str")', function() {
      // uncomment below and update the code to test the property dateMaxWindStr
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property dateMinTemp (base name: "date_min_temp")', function() {
      // uncomment below and update the code to test the property dateMinTemp
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property deviceId (base name: "device_id")', function() {
      // uncomment below and update the code to test the property deviceId
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property healthIdx (base name: "health_idx")', function() {
      // uncomment below and update the code to test the property healthIdx
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property maxTemp (base name: "max_temp")', function() {
      // uncomment below and update the code to test the property maxTemp
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property maxWindStr (base name: "max_wind_str")', function() {
      // uncomment below and update the code to test the property maxWindStr
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property minTemp (base name: "min_temp")', function() {
      // uncomment below and update the code to test the property minTemp
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property pressureTrend (base name: "pressure_trend")', function() {
      // uncomment below and update the code to test the property pressureTrend
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property sumRain1 (base name: "sum_rain_1")', function() {
      // uncomment below and update the code to test the property sumRain1
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property sumRain24 (base name: "sum_rain_24")', function() {
      // uncomment below and update the code to test the property sumRain24
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property tempTrend (base name: "temp_trend")', function() {
      // uncomment below and update the code to test the property tempTrend
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

    it('should have the property timeUtc (base name: "time_utc")', function() {
      // uncomment below and update the code to test the property timeUtc
      //var instance = new Netatmo.NADashboardData();
      //expect(instance).to.be();
    });

  });

}));
