/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Netatmo);
  }
}(this, function(expect, Netatmo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Netatmo.WelcomeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WelcomeApi', function() {
    describe('addwebhook', function() {
      it('should call addwebhook successfully', function(done) {
        //uncomment below and update the code to test addwebhook
        //instance.addwebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dropwebhook', function() {
      it('should call dropwebhook successfully', function(done) {
        //uncomment below and update the code to test dropwebhook
        //instance.dropwebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getcamerapicture', function() {
      it('should call getcamerapicture successfully', function(done) {
        //uncomment below and update the code to test getcamerapicture
        //instance.getcamerapicture(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('geteventsuntil', function() {
      it('should call geteventsuntil successfully', function(done) {
        //uncomment below and update the code to test geteventsuntil
        //instance.geteventsuntil(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gethomedata', function() {
      it('should call gethomedata successfully', function(done) {
        //uncomment below and update the code to test gethomedata
        //instance.gethomedata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getlasteventof', function() {
      it('should call getlasteventof successfully', function(done) {
        //uncomment below and update the code to test getlasteventof
        //instance.getlasteventof(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getnextevents', function() {
      it('should call getnextevents successfully', function(done) {
        //uncomment below and update the code to test getnextevents
        //instance.getnextevents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setpersonsaway', function() {
      it('should call setpersonsaway successfully', function(done) {
        //uncomment below and update the code to test setpersonsaway
        //instance.setpersonsaway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setpersonshome', function() {
      it('should call setpersonshome successfully', function(done) {
        //uncomment below and update the code to test setpersonshome
        //instance.setpersonshome(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
