# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NAWelcomePlace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, timezone: str=None):
        """NAWelcomePlace - a model defined in OpenAPI

        :param city: The city of this NAWelcomePlace.
        :param country: The country of this NAWelcomePlace.
        :param timezone: The timezone of this NAWelcomePlace.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'timezone': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'timezone': 'timezone'
        }

        self._city = city
        self._country = country
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAWelcomePlace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAWelcomePlace of this NAWelcomePlace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this NAWelcomePlace.

        City of the home.

        :return: The city of this NAWelcomePlace.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this NAWelcomePlace.

        City of the home.

        :param city: The city of this NAWelcomePlace.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this NAWelcomePlace.

        Country of the home.

        :return: The country of this NAWelcomePlace.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this NAWelcomePlace.

        Country of the home.

        :param country: The country of this NAWelcomePlace.
        :type country: str
        """

        self._country = country

    @property
    def timezone(self):
        """Gets the timezone of this NAWelcomePlace.

        Timezone of the home.

        :return: The timezone of this NAWelcomePlace.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this NAWelcomePlace.

        Timezone of the home.

        :param timezone: The timezone of this NAWelcomePlace.
        :type timezone: str
        """

        self._timezone = timezone
