# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.na_welcome_camera import NAWelcomeCamera
from openapi_server.models.na_welcome_event import NAWelcomeEvent
from openapi_server.models.na_welcome_module import NAWelcomeModule
from openapi_server.models.na_welcome_person import NAWelcomePerson
from openapi_server.models.na_welcome_place import NAWelcomePlace
from openapi_server import util


class NAWelcomeHome(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cameras: List[NAWelcomeCamera]=None, events: List[NAWelcomeEvent]=None, id: str=None, modules: List[NAWelcomeModule]=None, name: str=None, persons: List[NAWelcomePerson]=None, place: NAWelcomePlace=None):
        """NAWelcomeHome - a model defined in OpenAPI

        :param cameras: The cameras of this NAWelcomeHome.
        :param events: The events of this NAWelcomeHome.
        :param id: The id of this NAWelcomeHome.
        :param modules: The modules of this NAWelcomeHome.
        :param name: The name of this NAWelcomeHome.
        :param persons: The persons of this NAWelcomeHome.
        :param place: The place of this NAWelcomeHome.
        """
        self.openapi_types = {
            'cameras': List[NAWelcomeCamera],
            'events': List[NAWelcomeEvent],
            'id': str,
            'modules': List[NAWelcomeModule],
            'name': str,
            'persons': List[NAWelcomePerson],
            'place': NAWelcomePlace
        }

        self.attribute_map = {
            'cameras': 'cameras',
            'events': 'events',
            'id': 'id',
            'modules': 'modules',
            'name': 'name',
            'persons': 'persons',
            'place': 'place'
        }

        self._cameras = cameras
        self._events = events
        self._id = id
        self._modules = modules
        self._name = name
        self._persons = persons
        self._place = place

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAWelcomeHome':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAWelcomeHome of this NAWelcomeHome.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cameras(self):
        """Gets the cameras of this NAWelcomeHome.


        :return: The cameras of this NAWelcomeHome.
        :rtype: List[NAWelcomeCamera]
        """
        return self._cameras

    @cameras.setter
    def cameras(self, cameras):
        """Sets the cameras of this NAWelcomeHome.


        :param cameras: The cameras of this NAWelcomeHome.
        :type cameras: List[NAWelcomeCamera]
        """

        self._cameras = cameras

    @property
    def events(self):
        """Gets the events of this NAWelcomeHome.


        :return: The events of this NAWelcomeHome.
        :rtype: List[NAWelcomeEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this NAWelcomeHome.


        :param events: The events of this NAWelcomeHome.
        :type events: List[NAWelcomeEvent]
        """

        self._events = events

    @property
    def id(self):
        """Gets the id of this NAWelcomeHome.

        Id of the home.

        :return: The id of this NAWelcomeHome.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NAWelcomeHome.

        Id of the home.

        :param id: The id of this NAWelcomeHome.
        :type id: str
        """

        self._id = id

    @property
    def modules(self):
        """Gets the modules of this NAWelcomeHome.


        :return: The modules of this NAWelcomeHome.
        :rtype: List[NAWelcomeModule]
        """
        return self._modules

    @modules.setter
    def modules(self, modules):
        """Sets the modules of this NAWelcomeHome.


        :param modules: The modules of this NAWelcomeHome.
        :type modules: List[NAWelcomeModule]
        """

        self._modules = modules

    @property
    def name(self):
        """Gets the name of this NAWelcomeHome.

        Name of the home

        :return: The name of this NAWelcomeHome.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NAWelcomeHome.

        Name of the home

        :param name: The name of this NAWelcomeHome.
        :type name: str
        """

        self._name = name

    @property
    def persons(self):
        """Gets the persons of this NAWelcomeHome.


        :return: The persons of this NAWelcomeHome.
        :rtype: List[NAWelcomePerson]
        """
        return self._persons

    @persons.setter
    def persons(self, persons):
        """Sets the persons of this NAWelcomeHome.


        :param persons: The persons of this NAWelcomeHome.
        :type persons: List[NAWelcomePerson]
        """

        self._persons = persons

    @property
    def place(self):
        """Gets the place of this NAWelcomeHome.


        :return: The place of this NAWelcomeHome.
        :rtype: NAWelcomePlace
        """
        return self._place

    @place.setter
    def place(self, place):
        """Sets the place of this NAWelcomeHome.


        :param place: The place of this NAWelcomeHome.
        :type place: NAWelcomePlace
        """

        self._place = place
