# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NALinkStation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, temperature: float=None, ext: str=None, mac: str=None):
        """NALinkStation - a model defined in OpenAPI

        :param temperature: The temperature of this NALinkStation.
        :param ext: The ext of this NALinkStation.
        :param mac: The mac of this NALinkStation.
        """
        self.openapi_types = {
            'temperature': float,
            'ext': str,
            'mac': str
        }

        self.attribute_map = {
            'temperature': 'Temperature',
            'ext': 'ext',
            'mac': 'mac'
        }

        self._temperature = temperature
        self._ext = ext
        self._mac = mac

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NALinkStation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NALinkStation of this NALinkStation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def temperature(self):
        """Gets the temperature of this NALinkStation.


        :return: The temperature of this NALinkStation.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature):
        """Sets the temperature of this NALinkStation.


        :param temperature: The temperature of this NALinkStation.
        :type temperature: float
        """

        self._temperature = temperature

    @property
    def ext(self):
        """Gets the ext of this NALinkStation.


        :return: The ext of this NALinkStation.
        :rtype: str
        """
        return self._ext

    @ext.setter
    def ext(self, ext):
        """Sets the ext of this NALinkStation.


        :param ext: The ext of this NALinkStation.
        :type ext: str
        """

        self._ext = ext

    @property
    def mac(self):
        """Gets the mac of this NALinkStation.


        :return: The mac of this NALinkStation.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this NALinkStation.


        :param mac: The mac of this NALinkStation.
        :type mac: str
        """

        self._mac = mac
