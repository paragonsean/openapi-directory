# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NADate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sec: int=None, usec: int=None):
        """NADate - a model defined in OpenAPI

        :param sec: The sec of this NADate.
        :param usec: The usec of this NADate.
        """
        self.openapi_types = {
            'sec': int,
            'usec': int
        }

        self.attribute_map = {
            'sec': 'sec',
            'usec': 'usec'
        }

        self._sec = sec
        self._usec = usec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NADate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NADate of this NADate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sec(self):
        """Gets the sec of this NADate.


        :return: The sec of this NADate.
        :rtype: int
        """
        return self._sec

    @sec.setter
    def sec(self, sec):
        """Sets the sec of this NADate.


        :param sec: The sec of this NADate.
        :type sec: int
        """

        self._sec = sec

    @property
    def usec(self):
        """Gets the usec of this NADate.


        :return: The usec of this NADate.
        :rtype: int
        """
        return self._usec

    @usec.setter
    def usec(self, usec):
        """Sets the usec of this NADate.


        :param usec: The usec of this NADate.
        :type usec: int
        """

        self._usec = usec
