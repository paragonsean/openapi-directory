# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NAThermMeasure(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, setpoint_temp: float=None, temperature: float=None, time: int=None):
        """NAThermMeasure - a model defined in OpenAPI

        :param setpoint_temp: The setpoint_temp of this NAThermMeasure.
        :param temperature: The temperature of this NAThermMeasure.
        :param time: The time of this NAThermMeasure.
        """
        self.openapi_types = {
            'setpoint_temp': float,
            'temperature': float,
            'time': int
        }

        self.attribute_map = {
            'setpoint_temp': 'setpoint_temp',
            'temperature': 'temperature',
            'time': 'time'
        }

        self._setpoint_temp = setpoint_temp
        self._temperature = temperature
        self._time = time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAThermMeasure':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAThermMeasure of this NAThermMeasure.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def setpoint_temp(self):
        """Gets the setpoint_temp of this NAThermMeasure.


        :return: The setpoint_temp of this NAThermMeasure.
        :rtype: float
        """
        return self._setpoint_temp

    @setpoint_temp.setter
    def setpoint_temp(self, setpoint_temp):
        """Sets the setpoint_temp of this NAThermMeasure.


        :param setpoint_temp: The setpoint_temp of this NAThermMeasure.
        :type setpoint_temp: float
        """

        self._setpoint_temp = setpoint_temp

    @property
    def temperature(self):
        """Gets the temperature of this NAThermMeasure.


        :return: The temperature of this NAThermMeasure.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature):
        """Sets the temperature of this NAThermMeasure.


        :param temperature: The temperature of this NAThermMeasure.
        :type temperature: float
        """

        self._temperature = temperature

    @property
    def time(self):
        """Gets the time of this NAThermMeasure.


        :return: The time of this NAThermMeasure.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this NAThermMeasure.


        :param time: The time of this NAThermMeasure.
        :type time: int
        """

        self._time = time
