# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NAMeasureBodyElem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, beg_time: int=None, step_time: int=None, value: List[List[float]]=None):
        """NAMeasureBodyElem - a model defined in OpenAPI

        :param beg_time: The beg_time of this NAMeasureBodyElem.
        :param step_time: The step_time of this NAMeasureBodyElem.
        :param value: The value of this NAMeasureBodyElem.
        """
        self.openapi_types = {
            'beg_time': int,
            'step_time': int,
            'value': List[List[float]]
        }

        self.attribute_map = {
            'beg_time': 'beg_time',
            'step_time': 'step_time',
            'value': 'value'
        }

        self._beg_time = beg_time
        self._step_time = step_time
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAMeasureBodyElem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAMeasureBodyElem of this NAMeasureBodyElem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def beg_time(self):
        """Gets the beg_time of this NAMeasureBodyElem.


        :return: The beg_time of this NAMeasureBodyElem.
        :rtype: int
        """
        return self._beg_time

    @beg_time.setter
    def beg_time(self, beg_time):
        """Sets the beg_time of this NAMeasureBodyElem.


        :param beg_time: The beg_time of this NAMeasureBodyElem.
        :type beg_time: int
        """

        self._beg_time = beg_time

    @property
    def step_time(self):
        """Gets the step_time of this NAMeasureBodyElem.


        :return: The step_time of this NAMeasureBodyElem.
        :rtype: int
        """
        return self._step_time

    @step_time.setter
    def step_time(self, step_time):
        """Sets the step_time of this NAMeasureBodyElem.


        :param step_time: The step_time of this NAMeasureBodyElem.
        :type step_time: int
        """

        self._step_time = step_time

    @property
    def value(self):
        """Gets the value of this NAMeasureBodyElem.


        :return: The value of this NAMeasureBodyElem.
        :rtype: List[List[float]]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this NAMeasureBodyElem.


        :param value: The value of this NAMeasureBodyElem.
        :type value: List[List[float]]
        """

        self._value = value
