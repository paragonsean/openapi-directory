# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NAYearMonth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, m: int=None, y: int=None):
        """NAYearMonth - a model defined in OpenAPI

        :param m: The m of this NAYearMonth.
        :param y: The y of this NAYearMonth.
        """
        self.openapi_types = {
            'm': int,
            'y': int
        }

        self.attribute_map = {
            'm': 'm',
            'y': 'y'
        }

        self._m = m
        self._y = y

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAYearMonth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAYearMonth of this NAYearMonth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def m(self):
        """Gets the m of this NAYearMonth.


        :return: The m of this NAYearMonth.
        :rtype: int
        """
        return self._m

    @m.setter
    def m(self, m):
        """Sets the m of this NAYearMonth.


        :param m: The m of this NAYearMonth.
        :type m: int
        """

        self._m = m

    @property
    def y(self):
        """Gets the y of this NAYearMonth.


        :return: The y of this NAYearMonth.
        :rtype: int
        """
        return self._y

    @y.setter
    def y(self, y):
        """Sets the y of this NAYearMonth.


        :param y: The y of this NAYearMonth.
        :type y: int
        """

        self._y = y
