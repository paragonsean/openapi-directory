# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NAHeatingSystem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, heating_energy: str=None, heating_system_window_seen: bool=None):
        """NAHeatingSystem - a model defined in OpenAPI

        :param heating_energy: The heating_energy of this NAHeatingSystem.
        :param heating_system_window_seen: The heating_system_window_seen of this NAHeatingSystem.
        """
        self.openapi_types = {
            'heating_energy': str,
            'heating_system_window_seen': bool
        }

        self.attribute_map = {
            'heating_energy': 'heating_energy',
            'heating_system_window_seen': 'heating_system_window_seen'
        }

        self._heating_energy = heating_energy
        self._heating_system_window_seen = heating_system_window_seen

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAHeatingSystem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAHeatingSystem of this NAHeatingSystem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def heating_energy(self):
        """Gets the heating_energy of this NAHeatingSystem.


        :return: The heating_energy of this NAHeatingSystem.
        :rtype: str
        """
        return self._heating_energy

    @heating_energy.setter
    def heating_energy(self, heating_energy):
        """Sets the heating_energy of this NAHeatingSystem.


        :param heating_energy: The heating_energy of this NAHeatingSystem.
        :type heating_energy: str
        """

        self._heating_energy = heating_energy

    @property
    def heating_system_window_seen(self):
        """Gets the heating_system_window_seen of this NAHeatingSystem.


        :return: The heating_system_window_seen of this NAHeatingSystem.
        :rtype: bool
        """
        return self._heating_system_window_seen

    @heating_system_window_seen.setter
    def heating_system_window_seen(self, heating_system_window_seen):
        """Sets the heating_system_window_seen of this NAHeatingSystem.


        :param heating_system_window_seen: The heating_system_window_seen of this NAHeatingSystem.
        :type heating_system_window_seen: bool
        """

        self._heating_system_window_seen = heating_system_window_seen
