# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NAPidAlgo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gain: int=None, period: int=None, td: int=None, ti: int=None):
        """NAPidAlgo - a model defined in OpenAPI

        :param gain: The gain of this NAPidAlgo.
        :param period: The period of this NAPidAlgo.
        :param td: The td of this NAPidAlgo.
        :param ti: The ti of this NAPidAlgo.
        """
        self.openapi_types = {
            'gain': int,
            'period': int,
            'td': int,
            'ti': int
        }

        self.attribute_map = {
            'gain': 'gain',
            'period': 'period',
            'td': 'td',
            'ti': 'ti'
        }

        self._gain = gain
        self._period = period
        self._td = td
        self._ti = ti

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NAPidAlgo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NAPidAlgo of this NAPidAlgo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gain(self):
        """Gets the gain of this NAPidAlgo.


        :return: The gain of this NAPidAlgo.
        :rtype: int
        """
        return self._gain

    @gain.setter
    def gain(self, gain):
        """Sets the gain of this NAPidAlgo.


        :param gain: The gain of this NAPidAlgo.
        :type gain: int
        """

        self._gain = gain

    @property
    def period(self):
        """Gets the period of this NAPidAlgo.


        :return: The period of this NAPidAlgo.
        :rtype: int
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this NAPidAlgo.


        :param period: The period of this NAPidAlgo.
        :type period: int
        """

        self._period = period

    @property
    def td(self):
        """Gets the td of this NAPidAlgo.


        :return: The td of this NAPidAlgo.
        :rtype: int
        """
        return self._td

    @td.setter
    def td(self, td):
        """Sets the td of this NAPidAlgo.


        :param td: The td of this NAPidAlgo.
        :type td: int
        """

        self._td = td

    @property
    def ti(self):
        """Gets the ti of this NAPidAlgo.


        :return: The ti of this NAPidAlgo.
        :rtype: int
        """
        return self._ti

    @ti.setter
    def ti(self, ti):
        """Sets the ti of this NAPidAlgo.


        :param ti: The ti of this NAPidAlgo.
        :type ti: int
        """

        self._ti = ti
