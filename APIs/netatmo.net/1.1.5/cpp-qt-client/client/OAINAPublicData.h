/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINAPublicData.h
 *
 * 
 */

#ifndef OAINAPublicData_H
#define OAINAPublicData_H

#include <QJsonObject>

#include "OAINAMeasure.h"
#include "OAINAPlace.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINAMeasure;
class OAINAPlace;

class OAINAPublicData : public OAIObject {
public:
    OAINAPublicData();
    OAINAPublicData(QString json);
    ~OAINAPublicData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    qint32 getMark() const;
    void setMark(const qint32 &mark);
    bool is_mark_Set() const;
    bool is_mark_Valid() const;

    QMap<QString, OAINAMeasure> getMeasures() const;
    void setMeasures(const QMap<QString, OAINAMeasure> &measures);
    bool is_measures_Set() const;
    bool is_measures_Valid() const;

    QMap<QString, QString> getModuleTypes() const;
    void setModuleTypes(const QMap<QString, QString> &module_types);
    bool is_module_types_Set() const;
    bool is_module_types_Valid() const;

    QList<QString> getModules() const;
    void setModules(const QList<QString> &modules);
    bool is_modules_Set() const;
    bool is_modules_Valid() const;

    OAINAPlace getPlace() const;
    void setPlace(const OAINAPlace &place);
    bool is_place_Set() const;
    bool is_place_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    qint32 m_mark;
    bool m_mark_isSet;
    bool m_mark_isValid;

    QMap<QString, OAINAMeasure> m_measures;
    bool m_measures_isSet;
    bool m_measures_isValid;

    QMap<QString, QString> m_module_types;
    bool m_module_types_isSet;
    bool m_module_types_isValid;

    QList<QString> m_modules;
    bool m_modules_isSet;
    bool m_modules_isValid;

    OAINAPlace m_place;
    bool m_place_isSet;
    bool m_place_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINAPublicData)

#endif // OAINAPublicData_H
