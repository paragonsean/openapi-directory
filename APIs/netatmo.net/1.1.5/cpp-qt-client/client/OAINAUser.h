/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINAUser.h
 *
 * 
 */

#ifndef OAINAUser_H
#define OAINAUser_H

#include <QJsonObject>

#include "OAINADate.h"
#include "OAINAUserAdministrative.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINAUserAdministrative;
class OAINADate;

class OAINAUser : public OAIObject {
public:
    OAINAUser();
    OAINAUser(QString json);
    ~OAINAUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    OAINAUserAdministrative getAdministrative() const;
    void setAdministrative(const OAINAUserAdministrative &administrative);
    bool is_administrative_Set() const;
    bool is_administrative_Valid() const;

    OAINADate getDateCreation() const;
    void setDateCreation(const OAINADate &date_creation);
    bool is_date_creation_Set() const;
    bool is_date_creation_Valid() const;

    QList<QString> getDevices() const;
    void setDevices(const QList<QString> &devices);
    bool is_devices_Set() const;
    bool is_devices_Valid() const;

    QList<QString> getFriendDevices() const;
    void setFriendDevices(const QList<QString> &friend_devices);
    bool is_friend_devices_Set() const;
    bool is_friend_devices_Valid() const;

    QString getMail() const;
    void setMail(const QString &mail);
    bool is_mail_Set() const;
    bool is_mail_Valid() const;

    qint32 getTimelineNotRead() const;
    void setTimelineNotRead(const qint32 &timeline_not_read);
    bool is_timeline_not_read_Set() const;
    bool is_timeline_not_read_Valid() const;

    qint32 getTimelineSize() const;
    void setTimelineSize(const qint32 &timeline_size);
    bool is_timeline_size_Set() const;
    bool is_timeline_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    OAINAUserAdministrative m_administrative;
    bool m_administrative_isSet;
    bool m_administrative_isValid;

    OAINADate m_date_creation;
    bool m_date_creation_isSet;
    bool m_date_creation_isValid;

    QList<QString> m_devices;
    bool m_devices_isSet;
    bool m_devices_isValid;

    QList<QString> m_friend_devices;
    bool m_friend_devices_isSet;
    bool m_friend_devices_isValid;

    QString m_mail;
    bool m_mail_isSet;
    bool m_mail_isValid;

    qint32 m_timeline_not_read;
    bool m_timeline_not_read_isSet;
    bool m_timeline_not_read_isValid;

    qint32 m_timeline_size;
    bool m_timeline_size_isSet;
    bool m_timeline_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINAUser)

#endif // OAINAUser_H
