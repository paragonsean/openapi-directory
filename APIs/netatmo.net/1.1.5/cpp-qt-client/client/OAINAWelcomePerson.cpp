/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINAWelcomePerson.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINAWelcomePerson::OAINAWelcomePerson(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINAWelcomePerson::OAINAWelcomePerson() {
    this->initializeModel();
}

OAINAWelcomePerson::~OAINAWelcomePerson() {}

void OAINAWelcomePerson::initializeModel() {

    m_face_isSet = false;
    m_face_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_seen_isSet = false;
    m_last_seen_isValid = false;

    m_out_of_sight_isSet = false;
    m_out_of_sight_isValid = false;

    m_pseudo_isSet = false;
    m_pseudo_isValid = false;
}

void OAINAWelcomePerson::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINAWelcomePerson::fromJsonObject(QJsonObject json) {

    m_face_isValid = ::OpenAPI::fromJsonValue(m_face, json[QString("face")]);
    m_face_isSet = !json[QString("face")].isNull() && m_face_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_seen_isValid = ::OpenAPI::fromJsonValue(m_last_seen, json[QString("last_seen")]);
    m_last_seen_isSet = !json[QString("last_seen")].isNull() && m_last_seen_isValid;

    m_out_of_sight_isValid = ::OpenAPI::fromJsonValue(m_out_of_sight, json[QString("out_of_sight")]);
    m_out_of_sight_isSet = !json[QString("out_of_sight")].isNull() && m_out_of_sight_isValid;

    m_pseudo_isValid = ::OpenAPI::fromJsonValue(m_pseudo, json[QString("pseudo")]);
    m_pseudo_isSet = !json[QString("pseudo")].isNull() && m_pseudo_isValid;
}

QString OAINAWelcomePerson::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINAWelcomePerson::asJsonObject() const {
    QJsonObject obj;
    if (m_face.isSet()) {
        obj.insert(QString("face"), ::OpenAPI::toJsonValue(m_face));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_seen_isSet) {
        obj.insert(QString("last_seen"), ::OpenAPI::toJsonValue(m_last_seen));
    }
    if (m_out_of_sight_isSet) {
        obj.insert(QString("out_of_sight"), ::OpenAPI::toJsonValue(m_out_of_sight));
    }
    if (m_pseudo_isSet) {
        obj.insert(QString("pseudo"), ::OpenAPI::toJsonValue(m_pseudo));
    }
    return obj;
}

OAINAWelcomeFace OAINAWelcomePerson::getFace() const {
    return m_face;
}
void OAINAWelcomePerson::setFace(const OAINAWelcomeFace &face) {
    m_face = face;
    m_face_isSet = true;
}

bool OAINAWelcomePerson::is_face_Set() const{
    return m_face_isSet;
}

bool OAINAWelcomePerson::is_face_Valid() const{
    return m_face_isValid;
}

QString OAINAWelcomePerson::getId() const {
    return m_id;
}
void OAINAWelcomePerson::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAINAWelcomePerson::is_id_Set() const{
    return m_id_isSet;
}

bool OAINAWelcomePerson::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAINAWelcomePerson::getLastSeen() const {
    return m_last_seen;
}
void OAINAWelcomePerson::setLastSeen(const qint32 &last_seen) {
    m_last_seen = last_seen;
    m_last_seen_isSet = true;
}

bool OAINAWelcomePerson::is_last_seen_Set() const{
    return m_last_seen_isSet;
}

bool OAINAWelcomePerson::is_last_seen_Valid() const{
    return m_last_seen_isValid;
}

bool OAINAWelcomePerson::isOutOfSight() const {
    return m_out_of_sight;
}
void OAINAWelcomePerson::setOutOfSight(const bool &out_of_sight) {
    m_out_of_sight = out_of_sight;
    m_out_of_sight_isSet = true;
}

bool OAINAWelcomePerson::is_out_of_sight_Set() const{
    return m_out_of_sight_isSet;
}

bool OAINAWelcomePerson::is_out_of_sight_Valid() const{
    return m_out_of_sight_isValid;
}

QString OAINAWelcomePerson::getPseudo() const {
    return m_pseudo;
}
void OAINAWelcomePerson::setPseudo(const QString &pseudo) {
    m_pseudo = pseudo;
    m_pseudo_isSet = true;
}

bool OAINAWelcomePerson::is_pseudo_Set() const{
    return m_pseudo_isSet;
}

bool OAINAWelcomePerson::is_pseudo_Valid() const{
    return m_pseudo_isValid;
}

bool OAINAWelcomePerson::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_face.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_out_of_sight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pseudo_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINAWelcomePerson::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
