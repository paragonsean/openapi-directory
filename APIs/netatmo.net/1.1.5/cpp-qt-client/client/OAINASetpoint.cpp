/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINASetpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINASetpoint::OAINASetpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINASetpoint::OAINASetpoint() {
    this->initializeModel();
}

OAINASetpoint::~OAINASetpoint() {}

void OAINASetpoint::initializeModel() {

    m_setpoint_endtime_isSet = false;
    m_setpoint_endtime_isValid = false;

    m_setpoint_mode_isSet = false;
    m_setpoint_mode_isValid = false;

    m_setpoint_temp_isSet = false;
    m_setpoint_temp_isValid = false;
}

void OAINASetpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINASetpoint::fromJsonObject(QJsonObject json) {

    m_setpoint_endtime_isValid = ::OpenAPI::fromJsonValue(m_setpoint_endtime, json[QString("setpoint_endtime")]);
    m_setpoint_endtime_isSet = !json[QString("setpoint_endtime")].isNull() && m_setpoint_endtime_isValid;

    m_setpoint_mode_isValid = ::OpenAPI::fromJsonValue(m_setpoint_mode, json[QString("setpoint_mode")]);
    m_setpoint_mode_isSet = !json[QString("setpoint_mode")].isNull() && m_setpoint_mode_isValid;

    m_setpoint_temp_isValid = ::OpenAPI::fromJsonValue(m_setpoint_temp, json[QString("setpoint_temp")]);
    m_setpoint_temp_isSet = !json[QString("setpoint_temp")].isNull() && m_setpoint_temp_isValid;
}

QString OAINASetpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINASetpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_setpoint_endtime_isSet) {
        obj.insert(QString("setpoint_endtime"), ::OpenAPI::toJsonValue(m_setpoint_endtime));
    }
    if (m_setpoint_mode_isSet) {
        obj.insert(QString("setpoint_mode"), ::OpenAPI::toJsonValue(m_setpoint_mode));
    }
    if (m_setpoint_temp_isSet) {
        obj.insert(QString("setpoint_temp"), ::OpenAPI::toJsonValue(m_setpoint_temp));
    }
    return obj;
}

qint32 OAINASetpoint::getSetpointEndtime() const {
    return m_setpoint_endtime;
}
void OAINASetpoint::setSetpointEndtime(const qint32 &setpoint_endtime) {
    m_setpoint_endtime = setpoint_endtime;
    m_setpoint_endtime_isSet = true;
}

bool OAINASetpoint::is_setpoint_endtime_Set() const{
    return m_setpoint_endtime_isSet;
}

bool OAINASetpoint::is_setpoint_endtime_Valid() const{
    return m_setpoint_endtime_isValid;
}

QString OAINASetpoint::getSetpointMode() const {
    return m_setpoint_mode;
}
void OAINASetpoint::setSetpointMode(const QString &setpoint_mode) {
    m_setpoint_mode = setpoint_mode;
    m_setpoint_mode_isSet = true;
}

bool OAINASetpoint::is_setpoint_mode_Set() const{
    return m_setpoint_mode_isSet;
}

bool OAINASetpoint::is_setpoint_mode_Valid() const{
    return m_setpoint_mode_isValid;
}

float OAINASetpoint::getSetpointTemp() const {
    return m_setpoint_temp;
}
void OAINASetpoint::setSetpointTemp(const float &setpoint_temp) {
    m_setpoint_temp = setpoint_temp;
    m_setpoint_temp_isSet = true;
}

bool OAINASetpoint::is_setpoint_temp_Set() const{
    return m_setpoint_temp_isSet;
}

bool OAINASetpoint::is_setpoint_temp_Valid() const{
    return m_setpoint_temp_isValid;
}

bool OAINASetpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_setpoint_endtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_setpoint_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_setpoint_temp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINASetpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
