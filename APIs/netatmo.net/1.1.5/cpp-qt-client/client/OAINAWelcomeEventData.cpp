/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINAWelcomeEventData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINAWelcomeEventData::OAINAWelcomeEventData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINAWelcomeEventData::OAINAWelcomeEventData() {
    this->initializeModel();
}

OAINAWelcomeEventData::~OAINAWelcomeEventData() {}

void OAINAWelcomeEventData::initializeModel() {

    m_events_list_isSet = false;
    m_events_list_isValid = false;
}

void OAINAWelcomeEventData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINAWelcomeEventData::fromJsonObject(QJsonObject json) {

    m_events_list_isValid = ::OpenAPI::fromJsonValue(m_events_list, json[QString("events_list")]);
    m_events_list_isSet = !json[QString("events_list")].isNull() && m_events_list_isValid;
}

QString OAINAWelcomeEventData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINAWelcomeEventData::asJsonObject() const {
    QJsonObject obj;
    if (m_events_list.size() > 0) {
        obj.insert(QString("events_list"), ::OpenAPI::toJsonValue(m_events_list));
    }
    return obj;
}

QList<OAINAWelcomeEvent> OAINAWelcomeEventData::getEventsList() const {
    return m_events_list;
}
void OAINAWelcomeEventData::setEventsList(const QList<OAINAWelcomeEvent> &events_list) {
    m_events_list = events_list;
    m_events_list_isSet = true;
}

bool OAINAWelcomeEventData::is_events_list_Set() const{
    return m_events_list_isSet;
}

bool OAINAWelcomeEventData::is_events_list_Valid() const{
    return m_events_list_isValid;
}

bool OAINAWelcomeEventData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_events_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINAWelcomeEventData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
