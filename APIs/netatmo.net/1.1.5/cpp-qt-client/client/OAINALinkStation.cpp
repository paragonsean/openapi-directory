/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINALinkStation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINALinkStation::OAINALinkStation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINALinkStation::OAINALinkStation() {
    this->initializeModel();
}

OAINALinkStation::~OAINALinkStation() {}

void OAINALinkStation::initializeModel() {

    m_temperature_isSet = false;
    m_temperature_isValid = false;

    m_ext_isSet = false;
    m_ext_isValid = false;

    m_mac_isSet = false;
    m_mac_isValid = false;
}

void OAINALinkStation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINALinkStation::fromJsonObject(QJsonObject json) {

    m_temperature_isValid = ::OpenAPI::fromJsonValue(m_temperature, json[QString("Temperature")]);
    m_temperature_isSet = !json[QString("Temperature")].isNull() && m_temperature_isValid;

    m_ext_isValid = ::OpenAPI::fromJsonValue(m_ext, json[QString("ext")]);
    m_ext_isSet = !json[QString("ext")].isNull() && m_ext_isValid;

    m_mac_isValid = ::OpenAPI::fromJsonValue(m_mac, json[QString("mac")]);
    m_mac_isSet = !json[QString("mac")].isNull() && m_mac_isValid;
}

QString OAINALinkStation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINALinkStation::asJsonObject() const {
    QJsonObject obj;
    if (m_temperature_isSet) {
        obj.insert(QString("Temperature"), ::OpenAPI::toJsonValue(m_temperature));
    }
    if (m_ext_isSet) {
        obj.insert(QString("ext"), ::OpenAPI::toJsonValue(m_ext));
    }
    if (m_mac_isSet) {
        obj.insert(QString("mac"), ::OpenAPI::toJsonValue(m_mac));
    }
    return obj;
}

float OAINALinkStation::getTemperature() const {
    return m_temperature;
}
void OAINALinkStation::setTemperature(const float &temperature) {
    m_temperature = temperature;
    m_temperature_isSet = true;
}

bool OAINALinkStation::is_temperature_Set() const{
    return m_temperature_isSet;
}

bool OAINALinkStation::is_temperature_Valid() const{
    return m_temperature_isValid;
}

QString OAINALinkStation::getExt() const {
    return m_ext;
}
void OAINALinkStation::setExt(const QString &ext) {
    m_ext = ext;
    m_ext_isSet = true;
}

bool OAINALinkStation::is_ext_Set() const{
    return m_ext_isSet;
}

bool OAINALinkStation::is_ext_Valid() const{
    return m_ext_isValid;
}

QString OAINALinkStation::getMac() const {
    return m_mac;
}
void OAINALinkStation::setMac(const QString &mac) {
    m_mac = mac;
    m_mac_isSet = true;
}

bool OAINALinkStation::is_mac_Set() const{
    return m_mac_isSet;
}

bool OAINALinkStation::is_mac_Valid() const{
    return m_mac_isValid;
}

bool OAINALinkStation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_temperature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ext_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mac_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINALinkStation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
