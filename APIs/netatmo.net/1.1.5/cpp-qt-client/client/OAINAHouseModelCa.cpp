/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINAHouseModelCa.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINAHouseModelCa::OAINAHouseModelCa(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINAHouseModelCa::OAINAHouseModelCa() {
    this->initializeModel();
}

OAINAHouseModelCa::~OAINAHouseModelCa() {}

void OAINAHouseModelCa::initializeModel() {

    m_so_isSet = false;
    m_so_isValid = false;

    m_te_isSet = false;
    m_te_isValid = false;

    m_ti_isSet = false;
    m_ti_isValid = false;
}

void OAINAHouseModelCa::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINAHouseModelCa::fromJsonObject(QJsonObject json) {

    m_so_isValid = ::OpenAPI::fromJsonValue(m_so, json[QString("so")]);
    m_so_isSet = !json[QString("so")].isNull() && m_so_isValid;

    m_te_isValid = ::OpenAPI::fromJsonValue(m_te, json[QString("te")]);
    m_te_isSet = !json[QString("te")].isNull() && m_te_isValid;

    m_ti_isValid = ::OpenAPI::fromJsonValue(m_ti, json[QString("ti")]);
    m_ti_isSet = !json[QString("ti")].isNull() && m_ti_isValid;
}

QString OAINAHouseModelCa::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINAHouseModelCa::asJsonObject() const {
    QJsonObject obj;
    if (m_so_isSet) {
        obj.insert(QString("so"), ::OpenAPI::toJsonValue(m_so));
    }
    if (m_te_isSet) {
        obj.insert(QString("te"), ::OpenAPI::toJsonValue(m_te));
    }
    if (m_ti_isSet) {
        obj.insert(QString("ti"), ::OpenAPI::toJsonValue(m_ti));
    }
    return obj;
}

QString OAINAHouseModelCa::getSo() const {
    return m_so;
}
void OAINAHouseModelCa::setSo(const QString &so) {
    m_so = so;
    m_so_isSet = true;
}

bool OAINAHouseModelCa::is_so_Set() const{
    return m_so_isSet;
}

bool OAINAHouseModelCa::is_so_Valid() const{
    return m_so_isValid;
}

double OAINAHouseModelCa::getTe() const {
    return m_te;
}
void OAINAHouseModelCa::setTe(const double &te) {
    m_te = te;
    m_te_isSet = true;
}

bool OAINAHouseModelCa::is_te_Set() const{
    return m_te_isSet;
}

bool OAINAHouseModelCa::is_te_Valid() const{
    return m_te_isValid;
}

qint32 OAINAHouseModelCa::getTi() const {
    return m_ti;
}
void OAINAHouseModelCa::setTi(const qint32 &ti) {
    m_ti = ti;
    m_ti_isSet = true;
}

bool OAINAHouseModelCa::is_ti_Set() const{
    return m_ti_isSet;
}

bool OAINAHouseModelCa::is_ti_Valid() const{
    return m_ti_isValid;
}

bool OAINAHouseModelCa::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_so_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_te_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ti_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINAHouseModelCa::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
