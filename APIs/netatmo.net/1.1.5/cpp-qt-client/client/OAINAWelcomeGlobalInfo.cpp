/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINAWelcomeGlobalInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINAWelcomeGlobalInfo::OAINAWelcomeGlobalInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINAWelcomeGlobalInfo::OAINAWelcomeGlobalInfo() {
    this->initializeModel();
}

OAINAWelcomeGlobalInfo::~OAINAWelcomeGlobalInfo() {}

void OAINAWelcomeGlobalInfo::initializeModel() {

    m_show_tags_isSet = false;
    m_show_tags_isValid = false;
}

void OAINAWelcomeGlobalInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINAWelcomeGlobalInfo::fromJsonObject(QJsonObject json) {

    m_show_tags_isValid = ::OpenAPI::fromJsonValue(m_show_tags, json[QString("show_tags")]);
    m_show_tags_isSet = !json[QString("show_tags")].isNull() && m_show_tags_isValid;
}

QString OAINAWelcomeGlobalInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINAWelcomeGlobalInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_show_tags_isSet) {
        obj.insert(QString("show_tags"), ::OpenAPI::toJsonValue(m_show_tags));
    }
    return obj;
}

bool OAINAWelcomeGlobalInfo::isShowTags() const {
    return m_show_tags;
}
void OAINAWelcomeGlobalInfo::setShowTags(const bool &show_tags) {
    m_show_tags = show_tags;
    m_show_tags_isSet = true;
}

bool OAINAWelcomeGlobalInfo::is_show_tags_Set() const{
    return m_show_tags_isSet;
}

bool OAINAWelcomeGlobalInfo::is_show_tags_Valid() const{
    return m_show_tags_isValid;
}

bool OAINAWelcomeGlobalInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_show_tags_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINAWelcomeGlobalInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
