/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINAWelcomeHomeData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINAWelcomeHomeData::OAINAWelcomeHomeData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINAWelcomeHomeData::OAINAWelcomeHomeData() {
    this->initializeModel();
}

OAINAWelcomeHomeData::~OAINAWelcomeHomeData() {}

void OAINAWelcomeHomeData::initializeModel() {

    m_global_info_isSet = false;
    m_global_info_isValid = false;

    m_homes_isSet = false;
    m_homes_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAINAWelcomeHomeData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINAWelcomeHomeData::fromJsonObject(QJsonObject json) {

    m_global_info_isValid = ::OpenAPI::fromJsonValue(m_global_info, json[QString("global_info")]);
    m_global_info_isSet = !json[QString("global_info")].isNull() && m_global_info_isValid;

    m_homes_isValid = ::OpenAPI::fromJsonValue(m_homes, json[QString("homes")]);
    m_homes_isSet = !json[QString("homes")].isNull() && m_homes_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAINAWelcomeHomeData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINAWelcomeHomeData::asJsonObject() const {
    QJsonObject obj;
    if (m_global_info.isSet()) {
        obj.insert(QString("global_info"), ::OpenAPI::toJsonValue(m_global_info));
    }
    if (m_homes.size() > 0) {
        obj.insert(QString("homes"), ::OpenAPI::toJsonValue(m_homes));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

OAINAWelcomeGlobalInfo OAINAWelcomeHomeData::getGlobalInfo() const {
    return m_global_info;
}
void OAINAWelcomeHomeData::setGlobalInfo(const OAINAWelcomeGlobalInfo &global_info) {
    m_global_info = global_info;
    m_global_info_isSet = true;
}

bool OAINAWelcomeHomeData::is_global_info_Set() const{
    return m_global_info_isSet;
}

bool OAINAWelcomeHomeData::is_global_info_Valid() const{
    return m_global_info_isValid;
}

QList<OAINAWelcomeHome> OAINAWelcomeHomeData::getHomes() const {
    return m_homes;
}
void OAINAWelcomeHomeData::setHomes(const QList<OAINAWelcomeHome> &homes) {
    m_homes = homes;
    m_homes_isSet = true;
}

bool OAINAWelcomeHomeData::is_homes_Set() const{
    return m_homes_isSet;
}

bool OAINAWelcomeHomeData::is_homes_Valid() const{
    return m_homes_isValid;
}

OAINAWelcomeUser OAINAWelcomeHomeData::getUser() const {
    return m_user;
}
void OAINAWelcomeHomeData::setUser(const OAINAWelcomeUser &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAINAWelcomeHomeData::is_user_Set() const{
    return m_user_isSet;
}

bool OAINAWelcomeHomeData::is_user_Valid() const{
    return m_user_isValid;
}

bool OAINAWelcomeHomeData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_global_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_homes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINAWelcomeHomeData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
