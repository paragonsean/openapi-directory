/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINAHealthyHomeCoach.h
 *
 * 
 */

#ifndef OAINAHealthyHomeCoach_H
#define OAINAHealthyHomeCoach_H

#include <QJsonObject>

#include "OAINADashboardData.h"
#include "OAINAPlace.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINADashboardData;
class OAINAPlace;

class OAINAHealthyHomeCoach : public OAIObject {
public:
    OAINAHealthyHomeCoach();
    OAINAHealthyHomeCoach(QString json);
    ~OAINAHealthyHomeCoach() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    QString getCipherId() const;
    void setCipherId(const QString &cipher_id);
    bool is_cipher_id_Set() const;
    bool is_cipher_id_Valid() const;

    bool isCo2Calibrating() const;
    void setCo2Calibrating(const bool &co2_calibrating);
    bool is_co2_calibrating_Set() const;
    bool is_co2_calibrating_Valid() const;

    OAINADashboardData getDashboardData() const;
    void setDashboardData(const OAINADashboardData &dashboard_data);
    bool is_dashboard_data_Set() const;
    bool is_dashboard_data_Valid() const;

    QList<QString> getDataType() const;
    void setDataType(const QList<QString> &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    qint32 getDateSetup() const;
    void setDateSetup(const qint32 &date_setup);
    bool is_date_setup_Set() const;
    bool is_date_setup_Valid() const;

    qint32 getFirmware() const;
    void setFirmware(const qint32 &firmware);
    bool is_firmware_Set() const;
    bool is_firmware_Valid() const;

    qint32 getLastSetup() const;
    void setLastSetup(const qint32 &last_setup);
    bool is_last_setup_Set() const;
    bool is_last_setup_Valid() const;

    qint32 getLastStatusStore() const;
    void setLastStatusStore(const qint32 &last_status_store);
    bool is_last_status_store_Set() const;
    bool is_last_status_store_Valid() const;

    qint32 getLastUpgrade() const;
    void setLastUpgrade(const qint32 &last_upgrade);
    bool is_last_upgrade_Set() const;
    bool is_last_upgrade_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINAPlace getPlace() const;
    void setPlace(const OAINAPlace &place);
    bool is_place_Set() const;
    bool is_place_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getWifiStatus() const;
    void setWifiStatus(const qint32 &wifi_status);
    bool is_wifi_status_Set() const;
    bool is_wifi_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    QString m_cipher_id;
    bool m_cipher_id_isSet;
    bool m_cipher_id_isValid;

    bool m_co2_calibrating;
    bool m_co2_calibrating_isSet;
    bool m_co2_calibrating_isValid;

    OAINADashboardData m_dashboard_data;
    bool m_dashboard_data_isSet;
    bool m_dashboard_data_isValid;

    QList<QString> m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    qint32 m_date_setup;
    bool m_date_setup_isSet;
    bool m_date_setup_isValid;

    qint32 m_firmware;
    bool m_firmware_isSet;
    bool m_firmware_isValid;

    qint32 m_last_setup;
    bool m_last_setup_isSet;
    bool m_last_setup_isValid;

    qint32 m_last_status_store;
    bool m_last_status_store_isSet;
    bool m_last_status_store_isValid;

    qint32 m_last_upgrade;
    bool m_last_upgrade_isSet;
    bool m_last_upgrade_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINAPlace m_place;
    bool m_place_isSet;
    bool m_place_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_wifi_status;
    bool m_wifi_status_isSet;
    bool m_wifi_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINAHealthyHomeCoach)

#endif // OAINAHealthyHomeCoach_H
