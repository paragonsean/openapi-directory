/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINAWelcomeCamera.h
 *
 * 
 */

#ifndef OAINAWelcomeCamera_H
#define OAINAWelcomeCamera_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINAWelcomeCamera : public OAIObject {
public:
    OAINAWelcomeCamera();
    OAINAWelcomeCamera(QString json);
    ~OAINAWelcomeCamera() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlimStatus() const;
    void setAlimStatus(const QString &alim_status);
    bool is_alim_status_Set() const;
    bool is_alim_status_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsLocal() const;
    void setIsLocal(const bool &is_local);
    bool is_is_local_Set() const;
    bool is_is_local_Valid() const;

    QString getLightModeStatus() const;
    void setLightModeStatus(const QString &light_mode_status);
    bool is_light_mode_status_Set() const;
    bool is_light_mode_status_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSdStatus() const;
    void setSdStatus(const QString &sd_status);
    bool is_sd_status_Set() const;
    bool is_sd_status_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVpnUrl() const;
    void setVpnUrl(const QString &vpn_url);
    bool is_vpn_url_Set() const;
    bool is_vpn_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alim_status;
    bool m_alim_status_isSet;
    bool m_alim_status_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_local;
    bool m_is_local_isSet;
    bool m_is_local_isValid;

    QString m_light_mode_status;
    bool m_light_mode_status_isSet;
    bool m_light_mode_status_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_sd_status;
    bool m_sd_status_isSet;
    bool m_sd_status_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_vpn_url;
    bool m_vpn_url_isSet;
    bool m_vpn_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINAWelcomeCamera)

#endif // OAINAWelcomeCamera_H
