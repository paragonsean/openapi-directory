/**
 * Netatmo
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: contact-api@netatmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINAStationModule.h
 *
 * 
 */

#ifndef OAINAStationModule_H
#define OAINAStationModule_H

#include <QJsonObject>

#include "OAINADashboardData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINADashboardData;

class OAINAStationModule : public OAIObject {
public:
    OAINAStationModule();
    OAINAStationModule(QString json);
    ~OAINAStationModule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    qint32 getBatteryPercent() const;
    void setBatteryPercent(const qint32 &battery_percent);
    bool is_battery_percent_Set() const;
    bool is_battery_percent_Valid() const;

    qint32 getBatteryVp() const;
    void setBatteryVp(const qint32 &battery_vp);
    bool is_battery_vp_Set() const;
    bool is_battery_vp_Valid() const;

    OAINADashboardData getDashboardData() const;
    void setDashboardData(const OAINADashboardData &dashboard_data);
    bool is_dashboard_data_Set() const;
    bool is_dashboard_data_Valid() const;

    QList<QString> getDataType() const;
    void setDataType(const QList<QString> &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    qint32 getFirmware() const;
    void setFirmware(const qint32 &firmware);
    bool is_firmware_Set() const;
    bool is_firmware_Valid() const;

    qint32 getLastMessage() const;
    void setLastMessage(const qint32 &last_message);
    bool is_last_message_Set() const;
    bool is_last_message_Valid() const;

    qint32 getLastSeen() const;
    void setLastSeen(const qint32 &last_seen);
    bool is_last_seen_Set() const;
    bool is_last_seen_Valid() const;

    qint32 getLastSetup() const;
    void setLastSetup(const qint32 &last_setup);
    bool is_last_setup_Set() const;
    bool is_last_setup_Valid() const;

    QString getModuleName() const;
    void setModuleName(const QString &module_name);
    bool is_module_name_Set() const;
    bool is_module_name_Valid() const;

    bool isReachable() const;
    void setReachable(const bool &reachable);
    bool is_reachable_Set() const;
    bool is_reachable_Valid() const;

    qint32 getRfStatus() const;
    void setRfStatus(const qint32 &rf_status);
    bool is_rf_status_Set() const;
    bool is_rf_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    qint32 m_battery_percent;
    bool m_battery_percent_isSet;
    bool m_battery_percent_isValid;

    qint32 m_battery_vp;
    bool m_battery_vp_isSet;
    bool m_battery_vp_isValid;

    OAINADashboardData m_dashboard_data;
    bool m_dashboard_data_isSet;
    bool m_dashboard_data_isValid;

    QList<QString> m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    qint32 m_firmware;
    bool m_firmware_isSet;
    bool m_firmware_isValid;

    qint32 m_last_message;
    bool m_last_message_isSet;
    bool m_last_message_isValid;

    qint32 m_last_seen;
    bool m_last_seen_isSet;
    bool m_last_seen_isValid;

    qint32 m_last_setup;
    bool m_last_setup_isSet;
    bool m_last_setup_isValid;

    QString m_module_name;
    bool m_module_name_isSet;
    bool m_module_name_isValid;

    bool m_reachable;
    bool m_reachable_isSet;
    bool m_reachable_isValid;

    qint32 m_rf_status;
    bool m_rf_status_isSet;
    bool m_rf_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINAStationModule)

#endif // OAINAStationModule_H
