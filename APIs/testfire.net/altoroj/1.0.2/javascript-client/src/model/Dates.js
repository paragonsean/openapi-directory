/**
 * AltoroJ REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Dates model module.
 * @module model/Dates
 * @version 1.0.2
 */
class Dates {
    /**
     * Constructs a new <code>Dates</code>.
     * @alias module:model/Dates
     * @param endDate {Date} 
     * @param startDate {Date} 
     */
    constructor(endDate, startDate) { 
        
        Dates.initialize(this, endDate, startDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endDate, startDate) { 
        obj['endDate'] = endDate;
        obj['startDate'] = startDate;
    }

    /**
     * Constructs a <code>Dates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Dates} obj Optional instance to populate.
     * @return {module:model/Dates} The populated <code>Dates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Dates();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Dates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Dates</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Dates.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Dates.RequiredProperties = ["endDate", "startDate"];

/**
 * @member {Date} endDate
 */
Dates.prototype['endDate'] = undefined;

/**
 * @member {Date} startDate
 */
Dates.prototype['startDate'] = undefined;






export default Dates;

