/**
 * AltoroJ REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Feedback from '../model/Feedback';

/**
* Class4Feedback service.
* @module api/Class4FeedbackApi
* @version 1.0.2
*/
export default class Class4FeedbackApi {

    /**
    * Constructs a new Class4FeedbackApi. 
    * @alias module:api/Class4FeedbackApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFeedback operation.
     * @callback module:api/Class4FeedbackApi~getFeedbackCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve feedback
     * @param {String} authorization Authorization token (provided upon successful login)
     * @param {String} feedbackId 
     * @param {module:api/Class4FeedbackApi~getFeedbackCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getFeedback(authorization, feedbackId, callback) {
      let postBody = null;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getFeedback");
      }
      // verify the required parameter 'feedbackId' is set
      if (feedbackId === undefined || feedbackId === null) {
        throw new Error("Missing the required parameter 'feedbackId' when calling getFeedback");
      }

      let pathParams = {
        'feedbackId': feedbackId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/feedback/{feedbackId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sendFeedback operation.
     * @callback module:api/Class4FeedbackApi~sendFeedbackCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit feedback for the bank
     * @param {module:model/Feedback} body Feedback details including name, email the subject and complete message
     * @param {module:api/Class4FeedbackApi~sendFeedbackCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sendFeedback(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling sendFeedback");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/feedback/submit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
