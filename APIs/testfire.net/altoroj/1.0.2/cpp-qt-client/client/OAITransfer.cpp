/**
 * AltoroJ REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransfer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransfer::OAITransfer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransfer::OAITransfer() {
    this->initializeModel();
}

OAITransfer::~OAITransfer() {}

void OAITransfer::initializeModel() {

    m_from_account_isSet = false;
    m_from_account_isValid = false;

    m_to_account_isSet = false;
    m_to_account_isValid = false;

    m_transfer_amount_isSet = false;
    m_transfer_amount_isValid = false;
}

void OAITransfer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransfer::fromJsonObject(QJsonObject json) {

    m_from_account_isValid = ::OpenAPI::fromJsonValue(m_from_account, json[QString("fromAccount")]);
    m_from_account_isSet = !json[QString("fromAccount")].isNull() && m_from_account_isValid;

    m_to_account_isValid = ::OpenAPI::fromJsonValue(m_to_account, json[QString("toAccount")]);
    m_to_account_isSet = !json[QString("toAccount")].isNull() && m_to_account_isValid;

    m_transfer_amount_isValid = ::OpenAPI::fromJsonValue(m_transfer_amount, json[QString("transferAmount")]);
    m_transfer_amount_isSet = !json[QString("transferAmount")].isNull() && m_transfer_amount_isValid;
}

QString OAITransfer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransfer::asJsonObject() const {
    QJsonObject obj;
    if (m_from_account_isSet) {
        obj.insert(QString("fromAccount"), ::OpenAPI::toJsonValue(m_from_account));
    }
    if (m_to_account_isSet) {
        obj.insert(QString("toAccount"), ::OpenAPI::toJsonValue(m_to_account));
    }
    if (m_transfer_amount_isSet) {
        obj.insert(QString("transferAmount"), ::OpenAPI::toJsonValue(m_transfer_amount));
    }
    return obj;
}

QString OAITransfer::getFromAccount() const {
    return m_from_account;
}
void OAITransfer::setFromAccount(const QString &from_account) {
    m_from_account = from_account;
    m_from_account_isSet = true;
}

bool OAITransfer::is_from_account_Set() const{
    return m_from_account_isSet;
}

bool OAITransfer::is_from_account_Valid() const{
    return m_from_account_isValid;
}

QString OAITransfer::getToAccount() const {
    return m_to_account;
}
void OAITransfer::setToAccount(const QString &to_account) {
    m_to_account = to_account;
    m_to_account_isSet = true;
}

bool OAITransfer::is_to_account_Set() const{
    return m_to_account_isSet;
}

bool OAITransfer::is_to_account_Valid() const{
    return m_to_account_isValid;
}

QString OAITransfer::getTransferAmount() const {
    return m_transfer_amount;
}
void OAITransfer::setTransferAmount(const QString &transfer_amount) {
    m_transfer_amount = transfer_amount;
    m_transfer_amount_isSet = true;
}

bool OAITransfer::is_transfer_amount_Set() const{
    return m_transfer_amount_isSet;
}

bool OAITransfer::is_transfer_amount_Valid() const{
    return m_transfer_amount_isValid;
}

bool OAITransfer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransfer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_account_isValid && m_to_account_isValid && m_transfer_amount_isValid && true;
}

} // namespace OpenAPI
