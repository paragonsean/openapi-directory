/**
 * AltoroJ REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewUser::OAINewUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewUser::OAINewUser() {
    this->initializeModel();
}

OAINewUser::~OAINewUser() {}

void OAINewUser::initializeModel() {

    m_firstname_isSet = false;
    m_firstname_isValid = false;

    m_lastname_isSet = false;
    m_lastname_isValid = false;

    m_password1_isSet = false;
    m_password1_isValid = false;

    m_password2_isSet = false;
    m_password2_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAINewUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewUser::fromJsonObject(QJsonObject json) {

    m_firstname_isValid = ::OpenAPI::fromJsonValue(m_firstname, json[QString("firstname")]);
    m_firstname_isSet = !json[QString("firstname")].isNull() && m_firstname_isValid;

    m_lastname_isValid = ::OpenAPI::fromJsonValue(m_lastname, json[QString("lastname")]);
    m_lastname_isSet = !json[QString("lastname")].isNull() && m_lastname_isValid;

    m_password1_isValid = ::OpenAPI::fromJsonValue(m_password1, json[QString("password1")]);
    m_password1_isSet = !json[QString("password1")].isNull() && m_password1_isValid;

    m_password2_isValid = ::OpenAPI::fromJsonValue(m_password2, json[QString("password2")]);
    m_password2_isSet = !json[QString("password2")].isNull() && m_password2_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAINewUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewUser::asJsonObject() const {
    QJsonObject obj;
    if (m_firstname_isSet) {
        obj.insert(QString("firstname"), ::OpenAPI::toJsonValue(m_firstname));
    }
    if (m_lastname_isSet) {
        obj.insert(QString("lastname"), ::OpenAPI::toJsonValue(m_lastname));
    }
    if (m_password1_isSet) {
        obj.insert(QString("password1"), ::OpenAPI::toJsonValue(m_password1));
    }
    if (m_password2_isSet) {
        obj.insert(QString("password2"), ::OpenAPI::toJsonValue(m_password2));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAINewUser::getFirstname() const {
    return m_firstname;
}
void OAINewUser::setFirstname(const QString &firstname) {
    m_firstname = firstname;
    m_firstname_isSet = true;
}

bool OAINewUser::is_firstname_Set() const{
    return m_firstname_isSet;
}

bool OAINewUser::is_firstname_Valid() const{
    return m_firstname_isValid;
}

QString OAINewUser::getLastname() const {
    return m_lastname;
}
void OAINewUser::setLastname(const QString &lastname) {
    m_lastname = lastname;
    m_lastname_isSet = true;
}

bool OAINewUser::is_lastname_Set() const{
    return m_lastname_isSet;
}

bool OAINewUser::is_lastname_Valid() const{
    return m_lastname_isValid;
}

QString OAINewUser::getPassword1() const {
    return m_password1;
}
void OAINewUser::setPassword1(const QString &password1) {
    m_password1 = password1;
    m_password1_isSet = true;
}

bool OAINewUser::is_password1_Set() const{
    return m_password1_isSet;
}

bool OAINewUser::is_password1_Valid() const{
    return m_password1_isValid;
}

QString OAINewUser::getPassword2() const {
    return m_password2;
}
void OAINewUser::setPassword2(const QString &password2) {
    m_password2 = password2;
    m_password2_isSet = true;
}

bool OAINewUser::is_password2_Set() const{
    return m_password2_isSet;
}

bool OAINewUser::is_password2_Valid() const{
    return m_password2_isValid;
}

QString OAINewUser::getUsername() const {
    return m_username;
}
void OAINewUser::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAINewUser::is_username_Set() const{
    return m_username_isSet;
}

bool OAINewUser::is_username_Valid() const{
    return m_username_isValid;
}

bool OAINewUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_firstname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lastname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_firstname_isValid && m_lastname_isValid && m_password1_isValid && m_password2_isValid && m_username_isValid && true;
}

} // namespace OpenAPI
