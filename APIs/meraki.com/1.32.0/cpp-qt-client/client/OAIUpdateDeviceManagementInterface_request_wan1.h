/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDeviceManagementInterface_request_wan1.h
 *
 * WAN 1 settings
 */

#ifndef OAIUpdateDeviceManagementInterface_request_wan1_H
#define OAIUpdateDeviceManagementInterface_request_wan1_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateDeviceManagementInterface_request_wan1 : public OAIObject {
public:
    OAIUpdateDeviceManagementInterface_request_wan1();
    OAIUpdateDeviceManagementInterface_request_wan1(QString json);
    ~OAIUpdateDeviceManagementInterface_request_wan1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getStaticDns() const;
    void setStaticDns(const QList<QString> &static_dns);
    bool is_static_dns_Set() const;
    bool is_static_dns_Valid() const;

    QString getStaticGatewayIp() const;
    void setStaticGatewayIp(const QString &static_gateway_ip);
    bool is_static_gateway_ip_Set() const;
    bool is_static_gateway_ip_Valid() const;

    QString getStaticIp() const;
    void setStaticIp(const QString &static_ip);
    bool is_static_ip_Set() const;
    bool is_static_ip_Valid() const;

    QString getStaticSubnetMask() const;
    void setStaticSubnetMask(const QString &static_subnet_mask);
    bool is_static_subnet_mask_Set() const;
    bool is_static_subnet_mask_Valid() const;

    bool isUsingStaticIp() const;
    void setUsingStaticIp(const bool &using_static_ip);
    bool is_using_static_ip_Set() const;
    bool is_using_static_ip_Valid() const;

    qint32 getVlan() const;
    void setVlan(const qint32 &vlan);
    bool is_vlan_Set() const;
    bool is_vlan_Valid() const;

    QString getWanEnabled() const;
    void setWanEnabled(const QString &wan_enabled);
    bool is_wan_enabled_Set() const;
    bool is_wan_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_static_dns;
    bool m_static_dns_isSet;
    bool m_static_dns_isValid;

    QString m_static_gateway_ip;
    bool m_static_gateway_ip_isSet;
    bool m_static_gateway_ip_isValid;

    QString m_static_ip;
    bool m_static_ip_isSet;
    bool m_static_ip_isValid;

    QString m_static_subnet_mask;
    bool m_static_subnet_mask_isSet;
    bool m_static_subnet_mask_isValid;

    bool m_using_static_ip;
    bool m_using_static_ip_isSet;
    bool m_using_static_ip_isValid;

    qint32 m_vlan;
    bool m_vlan_isSet;
    bool m_vlan_isValid;

    QString m_wan_enabled;
    bool m_wan_enabled_isSet;
    bool m_wan_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDeviceManagementInterface_request_wan1)

#endif // OAIUpdateDeviceManagementInterface_request_wan1_H
