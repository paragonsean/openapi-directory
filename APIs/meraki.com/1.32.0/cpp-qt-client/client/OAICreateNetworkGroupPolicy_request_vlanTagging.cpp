/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateNetworkGroupPolicy_request_vlanTagging.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateNetworkGroupPolicy_request_vlanTagging::OAICreateNetworkGroupPolicy_request_vlanTagging(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateNetworkGroupPolicy_request_vlanTagging::OAICreateNetworkGroupPolicy_request_vlanTagging() {
    this->initializeModel();
}

OAICreateNetworkGroupPolicy_request_vlanTagging::~OAICreateNetworkGroupPolicy_request_vlanTagging() {}

void OAICreateNetworkGroupPolicy_request_vlanTagging::initializeModel() {

    m_settings_isSet = false;
    m_settings_isValid = false;

    m_vlan_id_isSet = false;
    m_vlan_id_isValid = false;
}

void OAICreateNetworkGroupPolicy_request_vlanTagging::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateNetworkGroupPolicy_request_vlanTagging::fromJsonObject(QJsonObject json) {

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;

    m_vlan_id_isValid = ::OpenAPI::fromJsonValue(m_vlan_id, json[QString("vlanId")]);
    m_vlan_id_isSet = !json[QString("vlanId")].isNull() && m_vlan_id_isValid;
}

QString OAICreateNetworkGroupPolicy_request_vlanTagging::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateNetworkGroupPolicy_request_vlanTagging::asJsonObject() const {
    QJsonObject obj;
    if (m_settings_isSet) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    if (m_vlan_id_isSet) {
        obj.insert(QString("vlanId"), ::OpenAPI::toJsonValue(m_vlan_id));
    }
    return obj;
}

QString OAICreateNetworkGroupPolicy_request_vlanTagging::getSettings() const {
    return m_settings;
}
void OAICreateNetworkGroupPolicy_request_vlanTagging::setSettings(const QString &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_vlanTagging::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAICreateNetworkGroupPolicy_request_vlanTagging::is_settings_Valid() const{
    return m_settings_isValid;
}

QString OAICreateNetworkGroupPolicy_request_vlanTagging::getVlanId() const {
    return m_vlan_id;
}
void OAICreateNetworkGroupPolicy_request_vlanTagging::setVlanId(const QString &vlan_id) {
    m_vlan_id = vlan_id;
    m_vlan_id_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_vlanTagging::is_vlan_id_Set() const{
    return m_vlan_id_isSet;
}

bool OAICreateNetworkGroupPolicy_request_vlanTagging::is_vlan_id_Valid() const{
    return m_vlan_id_isValid;
}

bool OAICreateNetworkGroupPolicy_request_vlanTagging::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_settings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vlan_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateNetworkGroupPolicy_request_vlanTagging::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
