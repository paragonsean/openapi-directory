/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner.h
 *
 * 
 */

#ifndef OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner_H
#define OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner_H

#include <QJsonObject>

#include "OAIGetOrganizationCellularGatewayUplinkStatuses_200_response_inner_uplinks_inner_signalStat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetOrganizationCellularGatewayUplinkStatuses_200_response_inner_uplinks_inner_signalStat;

class OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner : public OAIObject {
public:
    OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner();
    OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner(QString json);
    ~OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApn() const;
    void setApn(const QString &apn);
    bool is_apn_Set() const;
    bool is_apn_Valid() const;

    QString getConnectionType() const;
    void setConnectionType(const QString &connection_type);
    bool is_connection_type_Set() const;
    bool is_connection_type_Valid() const;

    QString getDns1() const;
    void setDns1(const QString &dns1);
    bool is_dns1_Set() const;
    bool is_dns1_Valid() const;

    QString getDns2() const;
    void setDns2(const QString &dns2);
    bool is_dns2_Set() const;
    bool is_dns2_Valid() const;

    QString getGateway() const;
    void setGateway(const QString &gateway);
    bool is_gateway_Set() const;
    bool is_gateway_Valid() const;

    QString getIccid() const;
    void setIccid(const QString &iccid);
    bool is_iccid_Set() const;
    bool is_iccid_Valid() const;

    QString getInterface() const;
    void setInterface(const QString &interface);
    bool is_interface_Set() const;
    bool is_interface_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getIpAssignedBy() const;
    void setIpAssignedBy(const QString &ip_assigned_by);
    bool is_ip_assigned_by_Set() const;
    bool is_ip_assigned_by_Valid() const;

    QString getPrimaryDns() const;
    void setPrimaryDns(const QString &primary_dns);
    bool is_primary_dns_Set() const;
    bool is_primary_dns_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getPublicIp() const;
    void setPublicIp(const QString &public_ip);
    bool is_public_ip_Set() const;
    bool is_public_ip_Valid() const;

    QString getSecondaryDns() const;
    void setSecondaryDns(const QString &secondary_dns);
    bool is_secondary_dns_Set() const;
    bool is_secondary_dns_Valid() const;

    OAIGetOrganizationCellularGatewayUplinkStatuses_200_response_inner_uplinks_inner_signalStat getSignalStat() const;
    void setSignalStat(const OAIGetOrganizationCellularGatewayUplinkStatuses_200_response_inner_uplinks_inner_signalStat &signal_stat);
    bool is_signal_stat_Set() const;
    bool is_signal_stat_Valid() const;

    QString getSignalType() const;
    void setSignalType(const QString &signal_type);
    bool is_signal_type_Set() const;
    bool is_signal_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_apn;
    bool m_apn_isSet;
    bool m_apn_isValid;

    QString m_connection_type;
    bool m_connection_type_isSet;
    bool m_connection_type_isValid;

    QString m_dns1;
    bool m_dns1_isSet;
    bool m_dns1_isValid;

    QString m_dns2;
    bool m_dns2_isSet;
    bool m_dns2_isValid;

    QString m_gateway;
    bool m_gateway_isSet;
    bool m_gateway_isValid;

    QString m_iccid;
    bool m_iccid_isSet;
    bool m_iccid_isValid;

    QString m_interface;
    bool m_interface_isSet;
    bool m_interface_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_ip_assigned_by;
    bool m_ip_assigned_by_isSet;
    bool m_ip_assigned_by_isValid;

    QString m_primary_dns;
    bool m_primary_dns_isSet;
    bool m_primary_dns_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_public_ip;
    bool m_public_ip_isSet;
    bool m_public_ip_isValid;

    QString m_secondary_dns;
    bool m_secondary_dns_isSet;
    bool m_secondary_dns_isValid;

    OAIGetOrganizationCellularGatewayUplinkStatuses_200_response_inner_uplinks_inner_signalStat m_signal_stat;
    bool m_signal_stat_isSet;
    bool m_signal_stat_isValid;

    QString m_signal_type;
    bool m_signal_type_isSet;
    bool m_signal_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner)

#endif // OAIGetOrganizationUplinksStatuses_200_response_inner_uplinks_inner_H
