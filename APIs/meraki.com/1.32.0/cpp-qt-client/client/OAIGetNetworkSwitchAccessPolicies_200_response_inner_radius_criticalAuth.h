/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth.h
 *
 * Critical auth settings for when authentication is rejected by the RADIUS server
 */

#ifndef OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth_H
#define OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth : public OAIObject {
public:
    OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth();
    OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth(QString json);
    ~OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDataVlanId() const;
    void setDataVlanId(const qint32 &data_vlan_id);
    bool is_data_vlan_id_Set() const;
    bool is_data_vlan_id_Valid() const;

    bool isSuspendPortBounce() const;
    void setSuspendPortBounce(const bool &suspend_port_bounce);
    bool is_suspend_port_bounce_Set() const;
    bool is_suspend_port_bounce_Valid() const;

    qint32 getVoiceVlanId() const;
    void setVoiceVlanId(const qint32 &voice_vlan_id);
    bool is_voice_vlan_id_Set() const;
    bool is_voice_vlan_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_data_vlan_id;
    bool m_data_vlan_id_isSet;
    bool m_data_vlan_id_isValid;

    bool m_suspend_port_bounce;
    bool m_suspend_port_bounce_isSet;
    bool m_suspend_port_bounce_isValid;

    qint32 m_voice_vlan_id;
    bool m_voice_vlan_id_isSet;
    bool m_voice_vlan_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth)

#endif // OAIGetNetworkSwitchAccessPolicies_200_response_inner_radius_criticalAuth_H
