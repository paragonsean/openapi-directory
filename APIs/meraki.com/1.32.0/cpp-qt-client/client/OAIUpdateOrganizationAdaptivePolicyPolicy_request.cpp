/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOrganizationAdaptivePolicyPolicy_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOrganizationAdaptivePolicyPolicy_request::OAIUpdateOrganizationAdaptivePolicyPolicy_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOrganizationAdaptivePolicyPolicy_request::OAIUpdateOrganizationAdaptivePolicyPolicy_request() {
    this->initializeModel();
}

OAIUpdateOrganizationAdaptivePolicyPolicy_request::~OAIUpdateOrganizationAdaptivePolicyPolicy_request() {}

void OAIUpdateOrganizationAdaptivePolicyPolicy_request::initializeModel() {

    m_acls_isSet = false;
    m_acls_isValid = false;

    m_destination_group_isSet = false;
    m_destination_group_isValid = false;

    m_last_entry_rule_isSet = false;
    m_last_entry_rule_isValid = false;

    m_source_group_isSet = false;
    m_source_group_isValid = false;
}

void OAIUpdateOrganizationAdaptivePolicyPolicy_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOrganizationAdaptivePolicyPolicy_request::fromJsonObject(QJsonObject json) {

    m_acls_isValid = ::OpenAPI::fromJsonValue(m_acls, json[QString("acls")]);
    m_acls_isSet = !json[QString("acls")].isNull() && m_acls_isValid;

    m_destination_group_isValid = ::OpenAPI::fromJsonValue(m_destination_group, json[QString("destinationGroup")]);
    m_destination_group_isSet = !json[QString("destinationGroup")].isNull() && m_destination_group_isValid;

    m_last_entry_rule_isValid = ::OpenAPI::fromJsonValue(m_last_entry_rule, json[QString("lastEntryRule")]);
    m_last_entry_rule_isSet = !json[QString("lastEntryRule")].isNull() && m_last_entry_rule_isValid;

    m_source_group_isValid = ::OpenAPI::fromJsonValue(m_source_group, json[QString("sourceGroup")]);
    m_source_group_isSet = !json[QString("sourceGroup")].isNull() && m_source_group_isValid;
}

QString OAIUpdateOrganizationAdaptivePolicyPolicy_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOrganizationAdaptivePolicyPolicy_request::asJsonObject() const {
    QJsonObject obj;
    if (m_acls.size() > 0) {
        obj.insert(QString("acls"), ::OpenAPI::toJsonValue(m_acls));
    }
    if (m_destination_group.isSet()) {
        obj.insert(QString("destinationGroup"), ::OpenAPI::toJsonValue(m_destination_group));
    }
    if (m_last_entry_rule_isSet) {
        obj.insert(QString("lastEntryRule"), ::OpenAPI::toJsonValue(m_last_entry_rule));
    }
    if (m_source_group.isSet()) {
        obj.insert(QString("sourceGroup"), ::OpenAPI::toJsonValue(m_source_group));
    }
    return obj;
}

QList<OAICreateOrganizationAdaptivePolicyPolicy_request_acls_inner> OAIUpdateOrganizationAdaptivePolicyPolicy_request::getAcls() const {
    return m_acls;
}
void OAIUpdateOrganizationAdaptivePolicyPolicy_request::setAcls(const QList<OAICreateOrganizationAdaptivePolicyPolicy_request_acls_inner> &acls) {
    m_acls = acls;
    m_acls_isSet = true;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_acls_Set() const{
    return m_acls_isSet;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_acls_Valid() const{
    return m_acls_isValid;
}

OAICreateOrganizationAdaptivePolicyPolicy_request_destinationGroup OAIUpdateOrganizationAdaptivePolicyPolicy_request::getDestinationGroup() const {
    return m_destination_group;
}
void OAIUpdateOrganizationAdaptivePolicyPolicy_request::setDestinationGroup(const OAICreateOrganizationAdaptivePolicyPolicy_request_destinationGroup &destination_group) {
    m_destination_group = destination_group;
    m_destination_group_isSet = true;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_destination_group_Set() const{
    return m_destination_group_isSet;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_destination_group_Valid() const{
    return m_destination_group_isValid;
}

QString OAIUpdateOrganizationAdaptivePolicyPolicy_request::getLastEntryRule() const {
    return m_last_entry_rule;
}
void OAIUpdateOrganizationAdaptivePolicyPolicy_request::setLastEntryRule(const QString &last_entry_rule) {
    m_last_entry_rule = last_entry_rule;
    m_last_entry_rule_isSet = true;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_last_entry_rule_Set() const{
    return m_last_entry_rule_isSet;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_last_entry_rule_Valid() const{
    return m_last_entry_rule_isValid;
}

OAICreateOrganizationAdaptivePolicyPolicy_request_sourceGroup OAIUpdateOrganizationAdaptivePolicyPolicy_request::getSourceGroup() const {
    return m_source_group;
}
void OAIUpdateOrganizationAdaptivePolicyPolicy_request::setSourceGroup(const OAICreateOrganizationAdaptivePolicyPolicy_request_sourceGroup &source_group) {
    m_source_group = source_group;
    m_source_group_isSet = true;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_source_group_Set() const{
    return m_source_group_isSet;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::is_source_group_Valid() const{
    return m_source_group_isValid;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acls.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_entry_rule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_group.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOrganizationAdaptivePolicyPolicy_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
