/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSettings_200_response.h
 *
 * 
 */

#ifndef OAIGetNetworkSettings_200_response_H
#define OAIGetNetworkSettings_200_response_H

#include <QJsonObject>

#include "OAIGetNetworkSettings_200_response_clientPrivacy.h"
#include "OAIGetNetworkSettings_200_response_fips.h"
#include "OAIGetNetworkSettings_200_response_localStatusPage.h"
#include "OAIGetNetworkSettings_200_response_namedVlans.h"
#include "OAIGetNetworkSettings_200_response_securePort.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNetworkSettings_200_response_clientPrivacy;
class OAIGetNetworkSettings_200_response_fips;
class OAIGetNetworkSettings_200_response_localStatusPage;
class OAIGetNetworkSettings_200_response_namedVlans;
class OAIGetNetworkSettings_200_response_securePort;

class OAIGetNetworkSettings_200_response : public OAIObject {
public:
    OAIGetNetworkSettings_200_response();
    OAIGetNetworkSettings_200_response(QString json);
    ~OAIGetNetworkSettings_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetNetworkSettings_200_response_clientPrivacy getClientPrivacy() const;
    void setClientPrivacy(const OAIGetNetworkSettings_200_response_clientPrivacy &client_privacy);
    bool is_client_privacy_Set() const;
    bool is_client_privacy_Valid() const;

    OAIGetNetworkSettings_200_response_fips getFips() const;
    void setFips(const OAIGetNetworkSettings_200_response_fips &fips);
    bool is_fips_Set() const;
    bool is_fips_Valid() const;

    OAIGetNetworkSettings_200_response_localStatusPage getLocalStatusPage() const;
    void setLocalStatusPage(const OAIGetNetworkSettings_200_response_localStatusPage &local_status_page);
    bool is_local_status_page_Set() const;
    bool is_local_status_page_Valid() const;

    bool isLocalStatusPageEnabled() const;
    void setLocalStatusPageEnabled(const bool &local_status_page_enabled);
    bool is_local_status_page_enabled_Set() const;
    bool is_local_status_page_enabled_Valid() const;

    OAIGetNetworkSettings_200_response_namedVlans getNamedVlans() const;
    void setNamedVlans(const OAIGetNetworkSettings_200_response_namedVlans &named_vlans);
    bool is_named_vlans_Set() const;
    bool is_named_vlans_Valid() const;

    bool isRemoteStatusPageEnabled() const;
    void setRemoteStatusPageEnabled(const bool &remote_status_page_enabled);
    bool is_remote_status_page_enabled_Set() const;
    bool is_remote_status_page_enabled_Valid() const;

    OAIGetNetworkSettings_200_response_securePort getSecurePort() const;
    void setSecurePort(const OAIGetNetworkSettings_200_response_securePort &secure_port);
    bool is_secure_port_Set() const;
    bool is_secure_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetNetworkSettings_200_response_clientPrivacy m_client_privacy;
    bool m_client_privacy_isSet;
    bool m_client_privacy_isValid;

    OAIGetNetworkSettings_200_response_fips m_fips;
    bool m_fips_isSet;
    bool m_fips_isValid;

    OAIGetNetworkSettings_200_response_localStatusPage m_local_status_page;
    bool m_local_status_page_isSet;
    bool m_local_status_page_isValid;

    bool m_local_status_page_enabled;
    bool m_local_status_page_enabled_isSet;
    bool m_local_status_page_enabled_isValid;

    OAIGetNetworkSettings_200_response_namedVlans m_named_vlans;
    bool m_named_vlans_isSet;
    bool m_named_vlans_isValid;

    bool m_remote_status_page_enabled;
    bool m_remote_status_page_enabled_isSet;
    bool m_remote_status_page_enabled_isValid;

    OAIGetNetworkSettings_200_response_securePort m_secure_port;
    bool m_secure_port_isSet;
    bool m_secure_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSettings_200_response)

#endif // OAIGetNetworkSettings_200_response_H
