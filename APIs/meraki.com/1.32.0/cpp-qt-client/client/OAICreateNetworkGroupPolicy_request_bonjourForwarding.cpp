/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateNetworkGroupPolicy_request_bonjourForwarding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateNetworkGroupPolicy_request_bonjourForwarding::OAICreateNetworkGroupPolicy_request_bonjourForwarding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateNetworkGroupPolicy_request_bonjourForwarding::OAICreateNetworkGroupPolicy_request_bonjourForwarding() {
    this->initializeModel();
}

OAICreateNetworkGroupPolicy_request_bonjourForwarding::~OAICreateNetworkGroupPolicy_request_bonjourForwarding() {}

void OAICreateNetworkGroupPolicy_request_bonjourForwarding::initializeModel() {

    m_rules_isSet = false;
    m_rules_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAICreateNetworkGroupPolicy_request_bonjourForwarding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateNetworkGroupPolicy_request_bonjourForwarding::fromJsonObject(QJsonObject json) {

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("rules")]);
    m_rules_isSet = !json[QString("rules")].isNull() && m_rules_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;
}

QString OAICreateNetworkGroupPolicy_request_bonjourForwarding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateNetworkGroupPolicy_request_bonjourForwarding::asJsonObject() const {
    QJsonObject obj;
    if (m_rules.size() > 0) {
        obj.insert(QString("rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    if (m_settings_isSet) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    return obj;
}

QList<OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner> OAICreateNetworkGroupPolicy_request_bonjourForwarding::getRules() const {
    return m_rules;
}
void OAICreateNetworkGroupPolicy_request_bonjourForwarding::setRules(const QList<OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner> &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding::is_rules_Valid() const{
    return m_rules_isValid;
}

QString OAICreateNetworkGroupPolicy_request_bonjourForwarding::getSettings() const {
    return m_settings;
}
void OAICreateNetworkGroupPolicy_request_bonjourForwarding::setSettings(const QString &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
