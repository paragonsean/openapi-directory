/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMoveOrganizationLicensingCotermLicenses_request.h
 *
 * 
 */

#ifndef OAIMoveOrganizationLicensingCotermLicenses_request_H
#define OAIMoveOrganizationLicensingCotermLicenses_request_H

#include <QJsonObject>

#include "OAIMoveOrganizationLicensingCotermLicenses_request_destination.h"
#include "OAIMoveOrganizationLicensingCotermLicenses_request_licenses_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoveOrganizationLicensingCotermLicenses_request_destination;
class OAIMoveOrganizationLicensingCotermLicenses_request_licenses_inner;

class OAIMoveOrganizationLicensingCotermLicenses_request : public OAIObject {
public:
    OAIMoveOrganizationLicensingCotermLicenses_request();
    OAIMoveOrganizationLicensingCotermLicenses_request(QString json);
    ~OAIMoveOrganizationLicensingCotermLicenses_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoveOrganizationLicensingCotermLicenses_request_destination getDestination() const;
    void setDestination(const OAIMoveOrganizationLicensingCotermLicenses_request_destination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    QList<OAIMoveOrganizationLicensingCotermLicenses_request_licenses_inner> getLicenses() const;
    void setLicenses(const QList<OAIMoveOrganizationLicensingCotermLicenses_request_licenses_inner> &licenses);
    bool is_licenses_Set() const;
    bool is_licenses_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoveOrganizationLicensingCotermLicenses_request_destination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    QList<OAIMoveOrganizationLicensingCotermLicenses_request_licenses_inner> m_licenses;
    bool m_licenses_isSet;
    bool m_licenses_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMoveOrganizationLicensingCotermLicenses_request)

#endif // OAIMoveOrganizationLicensingCotermLicenses_request_H
