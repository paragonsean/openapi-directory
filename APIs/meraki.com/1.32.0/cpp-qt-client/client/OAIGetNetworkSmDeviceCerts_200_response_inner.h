/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSmDeviceCerts_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetNetworkSmDeviceCerts_200_response_inner_H
#define OAIGetNetworkSmDeviceCerts_200_response_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkSmDeviceCerts_200_response_inner : public OAIObject {
public:
    OAIGetNetworkSmDeviceCerts_200_response_inner();
    OAIGetNetworkSmDeviceCerts_200_response_inner(QString json);
    ~OAIGetNetworkSmDeviceCerts_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertPem() const;
    void setCertPem(const QString &cert_pem);
    bool is_cert_pem_Set() const;
    bool is_cert_pem_Valid() const;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotValidAfter() const;
    void setNotValidAfter(const QString &not_valid_after);
    bool is_not_valid_after_Set() const;
    bool is_not_valid_after_Valid() const;

    QString getNotValidBefore() const;
    void setNotValidBefore(const QString &not_valid_before);
    bool is_not_valid_before_Set() const;
    bool is_not_valid_before_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cert_pem;
    bool m_cert_pem_isSet;
    bool m_cert_pem_isValid;

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_not_valid_after;
    bool m_not_valid_after_isSet;
    bool m_not_valid_after_isValid;

    QString m_not_valid_before;
    bool m_not_valid_before_isSet;
    bool m_not_valid_before_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSmDeviceCerts_200_response_inner)

#endif // OAIGetNetworkSmDeviceCerts_200_response_inner_H
