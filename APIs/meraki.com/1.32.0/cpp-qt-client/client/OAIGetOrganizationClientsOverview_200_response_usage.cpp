/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationClientsOverview_200_response_usage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationClientsOverview_200_response_usage::OAIGetOrganizationClientsOverview_200_response_usage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationClientsOverview_200_response_usage::OAIGetOrganizationClientsOverview_200_response_usage() {
    this->initializeModel();
}

OAIGetOrganizationClientsOverview_200_response_usage::~OAIGetOrganizationClientsOverview_200_response_usage() {}

void OAIGetOrganizationClientsOverview_200_response_usage::initializeModel() {

    m_average_isSet = false;
    m_average_isValid = false;

    m_overall_isSet = false;
    m_overall_isValid = false;
}

void OAIGetOrganizationClientsOverview_200_response_usage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationClientsOverview_200_response_usage::fromJsonObject(QJsonObject json) {

    m_average_isValid = ::OpenAPI::fromJsonValue(m_average, json[QString("average")]);
    m_average_isSet = !json[QString("average")].isNull() && m_average_isValid;

    m_overall_isValid = ::OpenAPI::fromJsonValue(m_overall, json[QString("overall")]);
    m_overall_isSet = !json[QString("overall")].isNull() && m_overall_isValid;
}

QString OAIGetOrganizationClientsOverview_200_response_usage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationClientsOverview_200_response_usage::asJsonObject() const {
    QJsonObject obj;
    if (m_average_isSet) {
        obj.insert(QString("average"), ::OpenAPI::toJsonValue(m_average));
    }
    if (m_overall.isSet()) {
        obj.insert(QString("overall"), ::OpenAPI::toJsonValue(m_overall));
    }
    return obj;
}

float OAIGetOrganizationClientsOverview_200_response_usage::getAverage() const {
    return m_average;
}
void OAIGetOrganizationClientsOverview_200_response_usage::setAverage(const float &average) {
    m_average = average;
    m_average_isSet = true;
}

bool OAIGetOrganizationClientsOverview_200_response_usage::is_average_Set() const{
    return m_average_isSet;
}

bool OAIGetOrganizationClientsOverview_200_response_usage::is_average_Valid() const{
    return m_average_isValid;
}

OAIGetOrganizationClientsOverview_200_response_usage_overall OAIGetOrganizationClientsOverview_200_response_usage::getOverall() const {
    return m_overall;
}
void OAIGetOrganizationClientsOverview_200_response_usage::setOverall(const OAIGetOrganizationClientsOverview_200_response_usage_overall &overall) {
    m_overall = overall;
    m_overall_isSet = true;
}

bool OAIGetOrganizationClientsOverview_200_response_usage::is_overall_Set() const{
    return m_overall_isSet;
}

bool OAIGetOrganizationClientsOverview_200_response_usage::is_overall_Valid() const{
    return m_overall_isValid;
}

bool OAIGetOrganizationClientsOverview_200_response_usage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overall.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationClientsOverview_200_response_usage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
