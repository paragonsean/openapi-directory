/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkSwitchSettings_request.h
 *
 * 
 */

#ifndef OAIUpdateNetworkSwitchSettings_request_H
#define OAIUpdateNetworkSwitchSettings_request_H

#include <QJsonObject>

#include "OAIUpdateNetworkSwitchSettings_request_powerExceptions_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkSwitchSettings_request_powerExceptions_inner;

class OAIUpdateNetworkSwitchSettings_request : public OAIObject {
public:
    OAIUpdateNetworkSwitchSettings_request();
    OAIUpdateNetworkSwitchSettings_request(QString json);
    ~OAIUpdateNetworkSwitchSettings_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUpdateNetworkSwitchSettings_request_powerExceptions_inner> getPowerExceptions() const;
    void setPowerExceptions(const QList<OAIUpdateNetworkSwitchSettings_request_powerExceptions_inner> &power_exceptions);
    bool is_power_exceptions_Set() const;
    bool is_power_exceptions_Valid() const;

    bool isUseCombinedPower() const;
    void setUseCombinedPower(const bool &use_combined_power);
    bool is_use_combined_power_Set() const;
    bool is_use_combined_power_Valid() const;

    qint32 getVlan() const;
    void setVlan(const qint32 &vlan);
    bool is_vlan_Set() const;
    bool is_vlan_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUpdateNetworkSwitchSettings_request_powerExceptions_inner> m_power_exceptions;
    bool m_power_exceptions_isSet;
    bool m_power_exceptions_isValid;

    bool m_use_combined_power;
    bool m_use_combined_power_isSet;
    bool m_use_combined_power_isValid;

    qint32 m_vlan;
    bool m_vlan_isSet;
    bool m_vlan_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkSwitchSettings_request)

#endif // OAIUpdateNetworkSwitchSettings_request_H
