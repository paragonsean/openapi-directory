/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner() {
    this->initializeModel();
}

OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::~OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner() {}

void OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::initializeModel() {

    m_format_isSet = false;
    m_format_isValid = false;

    m_methods_isSet = false;
    m_methods_isValid = false;

    m_realm_isSet = false;
    m_realm_isValid = false;
}

void OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::fromJsonObject(QJsonObject json) {

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_methods_isValid = ::OpenAPI::fromJsonValue(m_methods, json[QString("methods")]);
    m_methods_isSet = !json[QString("methods")].isNull() && m_methods_isValid;

    m_realm_isValid = ::OpenAPI::fromJsonValue(m_realm, json[QString("realm")]);
    m_realm_isSet = !json[QString("realm")].isNull() && m_realm_isValid;
}

QString OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_format_isSet) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_methods.size() > 0) {
        obj.insert(QString("methods"), ::OpenAPI::toJsonValue(m_methods));
    }
    if (m_realm_isSet) {
        obj.insert(QString("realm"), ::OpenAPI::toJsonValue(m_realm));
    }
    return obj;
}

QString OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::getFormat() const {
    return m_format;
}
void OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::is_format_Set() const{
    return m_format_isSet;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::is_format_Valid() const{
    return m_format_isValid;
}

QList<OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner_methods_inner> OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::getMethods() const {
    return m_methods;
}
void OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::setMethods(const QList<OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner_methods_inner> &methods) {
    m_methods = methods;
    m_methods_isSet = true;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::is_methods_Set() const{
    return m_methods_isSet;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::is_methods_Valid() const{
    return m_methods_isValid;
}

QString OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::getRealm() const {
    return m_realm;
}
void OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::setRealm(const QString &realm) {
    m_realm = realm;
    m_realm_isSet = true;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::is_realm_Set() const{
    return m_realm_isSet;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::is_realm_Valid() const{
    return m_realm_isValid;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_realm_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
