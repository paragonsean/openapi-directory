/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket.h
 *
 * Last packet the server received.
 */

#ifndef OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_H
#define OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_H

#include <QJsonObject>

#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_destination.h"
#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ethernet.h"
#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_fields.h"
#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip.h"
#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_source.h"
#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_udp.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_destination;
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ethernet;
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_fields;
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip;
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_source;
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_udp;

class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket : public OAIObject {
public:
    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket();
    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket(QString json);
    ~OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_destination getDestination() const;
    void setDestination(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_destination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ethernet getEthernet() const;
    void setEthernet(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ethernet &ethernet);
    bool is_ethernet_Set() const;
    bool is_ethernet_Valid() const;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_fields getFields() const;
    void setFields(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_fields &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip getIp() const;
    void setIp(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_source getSource() const;
    void setSource(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_udp getUdp() const;
    void setUdp(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_udp &udp);
    bool is_udp_Set() const;
    bool is_udp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_destination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ethernet m_ethernet;
    bool m_ethernet_isSet;
    bool m_ethernet_isValid;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_fields m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_udp m_udp;
    bool m_udp_isSet;
    bool m_udp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket)

#endif // OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_H
