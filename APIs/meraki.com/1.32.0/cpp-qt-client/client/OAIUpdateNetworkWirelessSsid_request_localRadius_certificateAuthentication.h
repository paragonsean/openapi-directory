/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication.h
 *
 * The current setting for certificate verification.
 */

#ifndef OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_H
#define OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_H

#include <QJsonObject>

#include "OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_clientRootCaCertificate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_clientRootCaCertificate;

class OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication : public OAIObject {
public:
    OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication();
    OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication(QString json);
    ~OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_clientRootCaCertificate getClientRootCaCertificate() const;
    void setClientRootCaCertificate(const OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_clientRootCaCertificate &client_root_ca_certificate);
    bool is_client_root_ca_certificate_Set() const;
    bool is_client_root_ca_certificate_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getOcspResponderUrl() const;
    void setOcspResponderUrl(const QString &ocsp_responder_url);
    bool is_ocsp_responder_url_Set() const;
    bool is_ocsp_responder_url_Valid() const;

    bool isUseLdap() const;
    void setUseLdap(const bool &use_ldap);
    bool is_use_ldap_Set() const;
    bool is_use_ldap_Valid() const;

    bool isUseOcsp() const;
    void setUseOcsp(const bool &use_ocsp);
    bool is_use_ocsp_Set() const;
    bool is_use_ocsp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_clientRootCaCertificate m_client_root_ca_certificate;
    bool m_client_root_ca_certificate_isSet;
    bool m_client_root_ca_certificate_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_ocsp_responder_url;
    bool m_ocsp_responder_url_isSet;
    bool m_ocsp_responder_url_isValid;

    bool m_use_ldap;
    bool m_use_ldap_isSet;
    bool m_use_ldap_isValid;

    bool m_use_ocsp;
    bool m_use_ocsp_isSet;
    bool m_use_ocsp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication)

#endif // OAIUpdateNetworkWirelessSsid_request_localRadius_certificateAuthentication_H
