/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDeviceCellularSims_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDeviceCellularSims_request::OAIUpdateDeviceCellularSims_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDeviceCellularSims_request::OAIUpdateDeviceCellularSims_request() {
    this->initializeModel();
}

OAIUpdateDeviceCellularSims_request::~OAIUpdateDeviceCellularSims_request() {}

void OAIUpdateDeviceCellularSims_request::initializeModel() {

    m_sim_failover_isSet = false;
    m_sim_failover_isValid = false;

    m_sims_isSet = false;
    m_sims_isValid = false;
}

void OAIUpdateDeviceCellularSims_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDeviceCellularSims_request::fromJsonObject(QJsonObject json) {

    m_sim_failover_isValid = ::OpenAPI::fromJsonValue(m_sim_failover, json[QString("simFailover")]);
    m_sim_failover_isSet = !json[QString("simFailover")].isNull() && m_sim_failover_isValid;

    m_sims_isValid = ::OpenAPI::fromJsonValue(m_sims, json[QString("sims")]);
    m_sims_isSet = !json[QString("sims")].isNull() && m_sims_isValid;
}

QString OAIUpdateDeviceCellularSims_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDeviceCellularSims_request::asJsonObject() const {
    QJsonObject obj;
    if (m_sim_failover.isSet()) {
        obj.insert(QString("simFailover"), ::OpenAPI::toJsonValue(m_sim_failover));
    }
    if (m_sims.size() > 0) {
        obj.insert(QString("sims"), ::OpenAPI::toJsonValue(m_sims));
    }
    return obj;
}

OAIUpdateDeviceCellularSims_request_simFailover OAIUpdateDeviceCellularSims_request::getSimFailover() const {
    return m_sim_failover;
}
void OAIUpdateDeviceCellularSims_request::setSimFailover(const OAIUpdateDeviceCellularSims_request_simFailover &sim_failover) {
    m_sim_failover = sim_failover;
    m_sim_failover_isSet = true;
}

bool OAIUpdateDeviceCellularSims_request::is_sim_failover_Set() const{
    return m_sim_failover_isSet;
}

bool OAIUpdateDeviceCellularSims_request::is_sim_failover_Valid() const{
    return m_sim_failover_isValid;
}

QList<OAIUpdateDeviceCellularSims_request_sims_inner> OAIUpdateDeviceCellularSims_request::getSims() const {
    return m_sims;
}
void OAIUpdateDeviceCellularSims_request::setSims(const QList<OAIUpdateDeviceCellularSims_request_sims_inner> &sims) {
    m_sims = sims;
    m_sims_isSet = true;
}

bool OAIUpdateDeviceCellularSims_request::is_sims_Set() const{
    return m_sims_isSet;
}

bool OAIUpdateDeviceCellularSims_request::is_sims_Valid() const{
    return m_sims_isValid;
}

bool OAIUpdateDeviceCellularSims_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sim_failover.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sims.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDeviceCellularSims_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
