/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkFirmwareUpgrades_200_response_products_appliance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::OAIGetNetworkFirmwareUpgrades_200_response_products_appliance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::OAIGetNetworkFirmwareUpgrades_200_response_products_appliance() {
    this->initializeModel();
}

OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::~OAIGetNetworkFirmwareUpgrades_200_response_products_appliance() {}

void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::initializeModel() {

    m_available_versions_isSet = false;
    m_available_versions_isValid = false;

    m_current_version_isSet = false;
    m_current_version_isValid = false;

    m_last_upgrade_isSet = false;
    m_last_upgrade_isValid = false;

    m_next_upgrade_isSet = false;
    m_next_upgrade_isValid = false;

    m_participate_in_next_beta_release_isSet = false;
    m_participate_in_next_beta_release_isValid = false;
}

void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::fromJsonObject(QJsonObject json) {

    m_available_versions_isValid = ::OpenAPI::fromJsonValue(m_available_versions, json[QString("availableVersions")]);
    m_available_versions_isSet = !json[QString("availableVersions")].isNull() && m_available_versions_isValid;

    m_current_version_isValid = ::OpenAPI::fromJsonValue(m_current_version, json[QString("currentVersion")]);
    m_current_version_isSet = !json[QString("currentVersion")].isNull() && m_current_version_isValid;

    m_last_upgrade_isValid = ::OpenAPI::fromJsonValue(m_last_upgrade, json[QString("lastUpgrade")]);
    m_last_upgrade_isSet = !json[QString("lastUpgrade")].isNull() && m_last_upgrade_isValid;

    m_next_upgrade_isValid = ::OpenAPI::fromJsonValue(m_next_upgrade, json[QString("nextUpgrade")]);
    m_next_upgrade_isSet = !json[QString("nextUpgrade")].isNull() && m_next_upgrade_isValid;

    m_participate_in_next_beta_release_isValid = ::OpenAPI::fromJsonValue(m_participate_in_next_beta_release, json[QString("participateInNextBetaRelease")]);
    m_participate_in_next_beta_release_isSet = !json[QString("participateInNextBetaRelease")].isNull() && m_participate_in_next_beta_release_isValid;
}

QString OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::asJsonObject() const {
    QJsonObject obj;
    if (m_available_versions.size() > 0) {
        obj.insert(QString("availableVersions"), ::OpenAPI::toJsonValue(m_available_versions));
    }
    if (m_current_version.isSet()) {
        obj.insert(QString("currentVersion"), ::OpenAPI::toJsonValue(m_current_version));
    }
    if (m_last_upgrade.isSet()) {
        obj.insert(QString("lastUpgrade"), ::OpenAPI::toJsonValue(m_last_upgrade));
    }
    if (m_next_upgrade.isSet()) {
        obj.insert(QString("nextUpgrade"), ::OpenAPI::toJsonValue(m_next_upgrade));
    }
    if (m_participate_in_next_beta_release_isSet) {
        obj.insert(QString("participateInNextBetaRelease"), ::OpenAPI::toJsonValue(m_participate_in_next_beta_release));
    }
    return obj;
}

QList<OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner> OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::getAvailableVersions() const {
    return m_available_versions;
}
void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::setAvailableVersions(const QList<OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner> &available_versions) {
    m_available_versions = available_versions;
    m_available_versions_isSet = true;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_available_versions_Set() const{
    return m_available_versions_isSet;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_available_versions_Valid() const{
    return m_available_versions_isValid;
}

OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::getCurrentVersion() const {
    return m_current_version;
}
void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::setCurrentVersion(const OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion &current_version) {
    m_current_version = current_version;
    m_current_version_isSet = true;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_current_version_Set() const{
    return m_current_version_isSet;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_current_version_Valid() const{
    return m_current_version_isValid;
}

OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::getLastUpgrade() const {
    return m_last_upgrade;
}
void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::setLastUpgrade(const OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade &last_upgrade) {
    m_last_upgrade = last_upgrade;
    m_last_upgrade_isSet = true;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_last_upgrade_Set() const{
    return m_last_upgrade_isSet;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_last_upgrade_Valid() const{
    return m_last_upgrade_isValid;
}

OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::getNextUpgrade() const {
    return m_next_upgrade;
}
void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::setNextUpgrade(const OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade &next_upgrade) {
    m_next_upgrade = next_upgrade;
    m_next_upgrade_isSet = true;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_next_upgrade_Set() const{
    return m_next_upgrade_isSet;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_next_upgrade_Valid() const{
    return m_next_upgrade_isValid;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::isParticipateInNextBetaRelease() const {
    return m_participate_in_next_beta_release;
}
void OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::setParticipateInNextBetaRelease(const bool &participate_in_next_beta_release) {
    m_participate_in_next_beta_release = participate_in_next_beta_release;
    m_participate_in_next_beta_release_isSet = true;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_participate_in_next_beta_release_Set() const{
    return m_participate_in_next_beta_release_isSet;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::is_participate_in_next_beta_release_Valid() const{
    return m_participate_in_next_beta_release_isValid;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_versions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_upgrade.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_upgrade.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_participate_in_next_beta_release_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkFirmwareUpgrades_200_response_products_appliance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
