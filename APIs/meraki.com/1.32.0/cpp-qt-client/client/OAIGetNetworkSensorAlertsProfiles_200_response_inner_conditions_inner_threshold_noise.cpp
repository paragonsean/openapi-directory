/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise() {
    this->initializeModel();
}

OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::~OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise() {}

void OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::initializeModel() {

    m_ambient_isSet = false;
    m_ambient_isValid = false;
}

void OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::fromJsonObject(QJsonObject json) {

    m_ambient_isValid = ::OpenAPI::fromJsonValue(m_ambient, json[QString("ambient")]);
    m_ambient_isSet = !json[QString("ambient")].isNull() && m_ambient_isValid;
}

QString OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::asJsonObject() const {
    QJsonObject obj;
    if (m_ambient.isSet()) {
        obj.insert(QString("ambient"), ::OpenAPI::toJsonValue(m_ambient));
    }
    return obj;
}

OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise_ambient OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::getAmbient() const {
    return m_ambient;
}
void OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::setAmbient(const OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise_ambient &ambient) {
    m_ambient = ambient;
    m_ambient_isSet = true;
}

bool OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::is_ambient_Set() const{
    return m_ambient_isSet;
}

bool OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::is_ambient_Valid() const{
    return m_ambient_isValid;
}

bool OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ambient.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ambient_isValid && true;
}

} // namespace OpenAPI
