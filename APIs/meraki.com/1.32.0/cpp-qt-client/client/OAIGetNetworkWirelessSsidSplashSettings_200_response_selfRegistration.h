/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration.h
 *
 * Self-registration for splash with Meraki authentication.
 */

#ifndef OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration_H
#define OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration : public OAIObject {
public:
    OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration();
    OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration(QString json);
    ~OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationType() const;
    void setAuthorizationType(const QString &authorization_type);
    bool is_authorization_type_Set() const;
    bool is_authorization_type_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_type;
    bool m_authorization_type_isSet;
    bool m_authorization_type_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration)

#endif // OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration_H
