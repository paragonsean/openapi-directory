/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner.h
 *
 * 
 */

#ifndef OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner_H
#define OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner : public OAIObject {
public:
    OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner();
    OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner(QString json);
    ~OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlternateManagementIp() const;
    void setAlternateManagementIp(const QString &alternate_management_ip);
    bool is_alternate_management_ip_Set() const;
    bool is_alternate_management_ip_Valid() const;

    QString getDns1() const;
    void setDns1(const QString &dns1);
    bool is_dns1_Set() const;
    bool is_dns1_Valid() const;

    QString getDns2() const;
    void setDns2(const QString &dns2);
    bool is_dns2_Set() const;
    bool is_dns2_Valid() const;

    QString getGateway() const;
    void setGateway(const QString &gateway);
    bool is_gateway_Set() const;
    bool is_gateway_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    QString getSubnetMask() const;
    void setSubnetMask(const QString &subnet_mask);
    bool is_subnet_mask_Set() const;
    bool is_subnet_mask_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alternate_management_ip;
    bool m_alternate_management_ip_isSet;
    bool m_alternate_management_ip_isValid;

    QString m_dns1;
    bool m_dns1_isSet;
    bool m_dns1_isValid;

    QString m_dns2;
    bool m_dns2_isSet;
    bool m_dns2_isValid;

    QString m_gateway;
    bool m_gateway_isSet;
    bool m_gateway_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    QString m_subnet_mask;
    bool m_subnet_mask_isSet;
    bool m_subnet_mask_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner)

#endif // OAIUpdateNetworkWirelessAlternateManagementInterface_request_accessPoints_inner_H
