/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkWirelessSsidSplashSettings_200_response.h
 *
 * 
 */

#ifndef OAIGetNetworkWirelessSsidSplashSettings_200_response_H
#define OAIGetNetworkWirelessSsidSplashSettings_200_response_H

#include <QJsonObject>

#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_billing.h"
#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_guestSponsorship.h"
#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration.h"
#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment.h"
#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_splashImage.h"
#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_splashLogo.h"
#include "OAIGetNetworkWirelessSsidSplashSettings_200_response_splashPrepaidFront.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNetworkWirelessSsidSplashSettings_200_response_billing;
class OAIGetNetworkWirelessSsidSplashSettings_200_response_guestSponsorship;
class OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration;
class OAIGetNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment;
class OAIGetNetworkWirelessSsidSplashSettings_200_response_splashImage;
class OAIGetNetworkWirelessSsidSplashSettings_200_response_splashLogo;
class OAIGetNetworkWirelessSsidSplashSettings_200_response_splashPrepaidFront;

class OAIGetNetworkWirelessSsidSplashSettings_200_response : public OAIObject {
public:
    OAIGetNetworkWirelessSsidSplashSettings_200_response();
    OAIGetNetworkWirelessSsidSplashSettings_200_response(QString json);
    ~OAIGetNetworkWirelessSsidSplashSettings_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowSimultaneousLogins() const;
    void setAllowSimultaneousLogins(const bool &allow_simultaneous_logins);
    bool is_allow_simultaneous_logins_Set() const;
    bool is_allow_simultaneous_logins_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_billing getBilling() const;
    void setBilling(const OAIGetNetworkWirelessSsidSplashSettings_200_response_billing &billing);
    bool is_billing_Set() const;
    bool is_billing_Valid() const;

    bool isBlockAllTrafficBeforeSignOn() const;
    void setBlockAllTrafficBeforeSignOn(const bool &block_all_traffic_before_sign_on);
    bool is_block_all_traffic_before_sign_on_Set() const;
    bool is_block_all_traffic_before_sign_on_Valid() const;

    QString getControllerDisconnectionBehavior() const;
    void setControllerDisconnectionBehavior(const QString &controller_disconnection_behavior);
    bool is_controller_disconnection_behavior_Set() const;
    bool is_controller_disconnection_behavior_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_guestSponsorship getGuestSponsorship() const;
    void setGuestSponsorship(const OAIGetNetworkWirelessSsidSplashSettings_200_response_guestSponsorship &guest_sponsorship);
    bool is_guest_sponsorship_Set() const;
    bool is_guest_sponsorship_Valid() const;

    QString getRedirectUrl() const;
    void setRedirectUrl(const QString &redirect_url);
    bool is_redirect_url_Set() const;
    bool is_redirect_url_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration getSelfRegistration() const;
    void setSelfRegistration(const OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration &self_registration);
    bool is_self_registration_Set() const;
    bool is_self_registration_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment getSentryEnrollment() const;
    void setSentryEnrollment(const OAIGetNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment &sentry_enrollment);
    bool is_sentry_enrollment_Set() const;
    bool is_sentry_enrollment_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_splashImage getSplashImage() const;
    void setSplashImage(const OAIGetNetworkWirelessSsidSplashSettings_200_response_splashImage &splash_image);
    bool is_splash_image_Set() const;
    bool is_splash_image_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_splashLogo getSplashLogo() const;
    void setSplashLogo(const OAIGetNetworkWirelessSsidSplashSettings_200_response_splashLogo &splash_logo);
    bool is_splash_logo_Set() const;
    bool is_splash_logo_Valid() const;

    QString getSplashPage() const;
    void setSplashPage(const QString &splash_page);
    bool is_splash_page_Set() const;
    bool is_splash_page_Valid() const;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_splashPrepaidFront getSplashPrepaidFront() const;
    void setSplashPrepaidFront(const OAIGetNetworkWirelessSsidSplashSettings_200_response_splashPrepaidFront &splash_prepaid_front);
    bool is_splash_prepaid_front_Set() const;
    bool is_splash_prepaid_front_Valid() const;

    qint32 getSplashTimeout() const;
    void setSplashTimeout(const qint32 &splash_timeout);
    bool is_splash_timeout_Set() const;
    bool is_splash_timeout_Valid() const;

    QString getSplashUrl() const;
    void setSplashUrl(const QString &splash_url);
    bool is_splash_url_Set() const;
    bool is_splash_url_Valid() const;

    qint32 getSsidNumber() const;
    void setSsidNumber(const qint32 &ssid_number);
    bool is_ssid_number_Set() const;
    bool is_ssid_number_Valid() const;

    bool isUseRedirectUrl() const;
    void setUseRedirectUrl(const bool &use_redirect_url);
    bool is_use_redirect_url_Set() const;
    bool is_use_redirect_url_Valid() const;

    bool isUseSplashUrl() const;
    void setUseSplashUrl(const bool &use_splash_url);
    bool is_use_splash_url_Set() const;
    bool is_use_splash_url_Valid() const;

    QString getWelcomeMessage() const;
    void setWelcomeMessage(const QString &welcome_message);
    bool is_welcome_message_Set() const;
    bool is_welcome_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_simultaneous_logins;
    bool m_allow_simultaneous_logins_isSet;
    bool m_allow_simultaneous_logins_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_billing m_billing;
    bool m_billing_isSet;
    bool m_billing_isValid;

    bool m_block_all_traffic_before_sign_on;
    bool m_block_all_traffic_before_sign_on_isSet;
    bool m_block_all_traffic_before_sign_on_isValid;

    QString m_controller_disconnection_behavior;
    bool m_controller_disconnection_behavior_isSet;
    bool m_controller_disconnection_behavior_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_guestSponsorship m_guest_sponsorship;
    bool m_guest_sponsorship_isSet;
    bool m_guest_sponsorship_isValid;

    QString m_redirect_url;
    bool m_redirect_url_isSet;
    bool m_redirect_url_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_selfRegistration m_self_registration;
    bool m_self_registration_isSet;
    bool m_self_registration_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment m_sentry_enrollment;
    bool m_sentry_enrollment_isSet;
    bool m_sentry_enrollment_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_splashImage m_splash_image;
    bool m_splash_image_isSet;
    bool m_splash_image_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_splashLogo m_splash_logo;
    bool m_splash_logo_isSet;
    bool m_splash_logo_isValid;

    QString m_splash_page;
    bool m_splash_page_isSet;
    bool m_splash_page_isValid;

    OAIGetNetworkWirelessSsidSplashSettings_200_response_splashPrepaidFront m_splash_prepaid_front;
    bool m_splash_prepaid_front_isSet;
    bool m_splash_prepaid_front_isValid;

    qint32 m_splash_timeout;
    bool m_splash_timeout_isSet;
    bool m_splash_timeout_isValid;

    QString m_splash_url;
    bool m_splash_url_isSet;
    bool m_splash_url_isValid;

    qint32 m_ssid_number;
    bool m_ssid_number_isSet;
    bool m_ssid_number_isValid;

    bool m_use_redirect_url;
    bool m_use_redirect_url_isSet;
    bool m_use_redirect_url_isValid;

    bool m_use_splash_url;
    bool m_use_splash_url_isSet;
    bool m_use_splash_url_isValid;

    QString m_welcome_message;
    bool m_welcome_message_isSet;
    bool m_welcome_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkWirelessSsidSplashSettings_200_response)

#endif // OAIGetNetworkWirelessSsidSplashSettings_200_response_H
