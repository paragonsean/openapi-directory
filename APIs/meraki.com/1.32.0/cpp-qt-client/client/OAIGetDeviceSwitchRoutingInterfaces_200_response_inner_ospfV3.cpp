/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3() {
    this->initializeModel();
}

OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::~OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3() {}

void OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::initializeModel() {

    m_area_isSet = false;
    m_area_isValid = false;

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_is_passive_enabled_isSet = false;
    m_is_passive_enabled_isValid = false;
}

void OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::fromJsonObject(QJsonObject json) {

    m_area_isValid = ::OpenAPI::fromJsonValue(m_area, json[QString("area")]);
    m_area_isSet = !json[QString("area")].isNull() && m_area_isValid;

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_is_passive_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_passive_enabled, json[QString("isPassiveEnabled")]);
    m_is_passive_enabled_isSet = !json[QString("isPassiveEnabled")].isNull() && m_is_passive_enabled_isValid;
}

QString OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::asJsonObject() const {
    QJsonObject obj;
    if (m_area_isSet) {
        obj.insert(QString("area"), ::OpenAPI::toJsonValue(m_area));
    }
    if (m_cost_isSet) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_is_passive_enabled_isSet) {
        obj.insert(QString("isPassiveEnabled"), ::OpenAPI::toJsonValue(m_is_passive_enabled));
    }
    return obj;
}

QString OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::getArea() const {
    return m_area;
}
void OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::setArea(const QString &area) {
    m_area = area;
    m_area_isSet = true;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::is_area_Set() const{
    return m_area_isSet;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::is_area_Valid() const{
    return m_area_isValid;
}

qint32 OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::getCost() const {
    return m_cost;
}
void OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::setCost(const qint32 &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::is_cost_Valid() const{
    return m_cost_isValid;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::isIsPassiveEnabled() const {
    return m_is_passive_enabled;
}
void OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::setIsPassiveEnabled(const bool &is_passive_enabled) {
    m_is_passive_enabled = is_passive_enabled;
    m_is_passive_enabled_isSet = true;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::is_is_passive_enabled_Set() const{
    return m_is_passive_enabled_isSet;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::is_is_passive_enabled_Valid() const{
    return m_is_passive_enabled_isValid;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_passive_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
