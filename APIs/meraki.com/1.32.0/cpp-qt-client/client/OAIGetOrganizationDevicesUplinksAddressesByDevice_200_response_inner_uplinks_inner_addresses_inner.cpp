/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner() {
    this->initializeModel();
}

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::~OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner() {}

void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_assignment_mode_isSet = false;
    m_assignment_mode_isValid = false;

    m_gateway_isSet = false;
    m_gateway_isValid = false;

    m_protocol_isSet = false;
    m_protocol_isValid = false;

    m_r_public_isSet = false;
    m_r_public_isValid = false;
}

void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_assignment_mode_isValid = ::OpenAPI::fromJsonValue(m_assignment_mode, json[QString("assignmentMode")]);
    m_assignment_mode_isSet = !json[QString("assignmentMode")].isNull() && m_assignment_mode_isValid;

    m_gateway_isValid = ::OpenAPI::fromJsonValue(m_gateway, json[QString("gateway")]);
    m_gateway_isSet = !json[QString("gateway")].isNull() && m_gateway_isValid;

    m_protocol_isValid = ::OpenAPI::fromJsonValue(m_protocol, json[QString("protocol")]);
    m_protocol_isSet = !json[QString("protocol")].isNull() && m_protocol_isValid;

    m_r_public_isValid = ::OpenAPI::fromJsonValue(m_r_public, json[QString("public")]);
    m_r_public_isSet = !json[QString("public")].isNull() && m_r_public_isValid;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_assignment_mode_isSet) {
        obj.insert(QString("assignmentMode"), ::OpenAPI::toJsonValue(m_assignment_mode));
    }
    if (m_gateway_isSet) {
        obj.insert(QString("gateway"), ::OpenAPI::toJsonValue(m_gateway));
    }
    if (m_protocol_isSet) {
        obj.insert(QString("protocol"), ::OpenAPI::toJsonValue(m_protocol));
    }
    if (m_r_public.isSet()) {
        obj.insert(QString("public"), ::OpenAPI::toJsonValue(m_r_public));
    }
    return obj;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::getAddress() const {
    return m_address;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_address_Set() const{
    return m_address_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::getAssignmentMode() const {
    return m_assignment_mode;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::setAssignmentMode(const QString &assignment_mode) {
    m_assignment_mode = assignment_mode;
    m_assignment_mode_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_assignment_mode_Set() const{
    return m_assignment_mode_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_assignment_mode_Valid() const{
    return m_assignment_mode_isValid;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::getGateway() const {
    return m_gateway;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::setGateway(const QString &gateway) {
    m_gateway = gateway;
    m_gateway_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_gateway_Set() const{
    return m_gateway_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_gateway_Valid() const{
    return m_gateway_isValid;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::getProtocol() const {
    return m_protocol;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::setProtocol(const QString &protocol) {
    m_protocol = protocol;
    m_protocol_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_protocol_Set() const{
    return m_protocol_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_protocol_Valid() const{
    return m_protocol_isValid;
}

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner_public OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::getRPublic() const {
    return m_r_public;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::setRPublic(const OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner_public &r_public) {
    m_r_public = r_public;
    m_r_public_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_r_public_Set() const{
    return m_r_public_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::is_r_public_Valid() const{
    return m_r_public_isValid;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gateway_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protocol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_public.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
