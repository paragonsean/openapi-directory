/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner() {
    this->initializeModel();
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::~OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner() {}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::initializeModel() {

    m_config_params_isSet = false;
    m_config_params_isValid = false;

    m_device_id_isSet = false;
    m_device_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_udi_isSet = false;
    m_udi_isValid = false;
}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::fromJsonObject(QJsonObject json) {

    m_config_params_isValid = ::OpenAPI::fromJsonValue(m_config_params, json[QString("configParams")]);
    m_config_params_isSet = !json[QString("configParams")].isNull() && m_config_params_isValid;

    m_device_id_isValid = ::OpenAPI::fromJsonValue(m_device_id, json[QString("deviceId")]);
    m_device_id_isSet = !json[QString("deviceId")].isNull() && m_device_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_udi_isValid = ::OpenAPI::fromJsonValue(m_udi, json[QString("udi")]);
    m_udi_isSet = !json[QString("udi")].isNull() && m_udi_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_config_params.isSet()) {
        obj.insert(QString("configParams"), ::OpenAPI::toJsonValue(m_config_params));
    }
    if (m_device_id_isSet) {
        obj.insert(QString("deviceId"), ::OpenAPI::toJsonValue(m_device_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_udi_isSet) {
        obj.insert(QString("udi"), ::OpenAPI::toJsonValue(m_udi));
    }
    return obj;
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::getConfigParams() const {
    return m_config_params;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::setConfigParams(const OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams &config_params) {
    m_config_params = config_params;
    m_config_params_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_config_params_Set() const{
    return m_config_params_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_config_params_Valid() const{
    return m_config_params_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::getDeviceId() const {
    return m_device_id;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::setDeviceId(const QString &device_id) {
    m_device_id = device_id;
    m_device_id_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_device_id_Set() const{
    return m_device_id_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_device_id_Valid() const{
    return m_device_id_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::getMessage() const {
    return m_message;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_message_Set() const{
    return m_message_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_message_Valid() const{
    return m_message_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::getStatus() const {
    return m_status;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::getUdi() const {
    return m_udi;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::setUdi(const QString &udi) {
    m_udi = udi;
    m_udi_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_udi_Set() const{
    return m_udi_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::is_udi_Valid() const{
    return m_udi_isValid;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_params.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_udi_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
