/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones() {
    this->initializeModel();
}

OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::~OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones() {}

void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::initializeModel() {

    m_canceled_at_isSet = false;
    m_canceled_at_isValid = false;

    m_completed_at_isSet = false;
    m_completed_at_isValid = false;

    m_scheduled_for_isSet = false;
    m_scheduled_for_isValid = false;

    m_started_at_isSet = false;
    m_started_at_isValid = false;
}

void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::fromJsonObject(QJsonObject json) {

    m_canceled_at_isValid = ::OpenAPI::fromJsonValue(m_canceled_at, json[QString("canceledAt")]);
    m_canceled_at_isSet = !json[QString("canceledAt")].isNull() && m_canceled_at_isValid;

    m_completed_at_isValid = ::OpenAPI::fromJsonValue(m_completed_at, json[QString("completedAt")]);
    m_completed_at_isSet = !json[QString("completedAt")].isNull() && m_completed_at_isValid;

    m_scheduled_for_isValid = ::OpenAPI::fromJsonValue(m_scheduled_for, json[QString("scheduledFor")]);
    m_scheduled_for_isSet = !json[QString("scheduledFor")].isNull() && m_scheduled_for_isValid;

    m_started_at_isValid = ::OpenAPI::fromJsonValue(m_started_at, json[QString("startedAt")]);
    m_started_at_isSet = !json[QString("startedAt")].isNull() && m_started_at_isValid;
}

QString OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::asJsonObject() const {
    QJsonObject obj;
    if (m_canceled_at_isSet) {
        obj.insert(QString("canceledAt"), ::OpenAPI::toJsonValue(m_canceled_at));
    }
    if (m_completed_at_isSet) {
        obj.insert(QString("completedAt"), ::OpenAPI::toJsonValue(m_completed_at));
    }
    if (m_scheduled_for_isSet) {
        obj.insert(QString("scheduledFor"), ::OpenAPI::toJsonValue(m_scheduled_for));
    }
    if (m_started_at_isSet) {
        obj.insert(QString("startedAt"), ::OpenAPI::toJsonValue(m_started_at));
    }
    return obj;
}

QDateTime OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::getCanceledAt() const {
    return m_canceled_at;
}
void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::setCanceledAt(const QDateTime &canceled_at) {
    m_canceled_at = canceled_at;
    m_canceled_at_isSet = true;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_canceled_at_Set() const{
    return m_canceled_at_isSet;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_canceled_at_Valid() const{
    return m_canceled_at_isValid;
}

QDateTime OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::getCompletedAt() const {
    return m_completed_at;
}
void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::setCompletedAt(const QDateTime &completed_at) {
    m_completed_at = completed_at;
    m_completed_at_isSet = true;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_completed_at_Set() const{
    return m_completed_at_isSet;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_completed_at_Valid() const{
    return m_completed_at_isValid;
}

QDateTime OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::getScheduledFor() const {
    return m_scheduled_for;
}
void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::setScheduledFor(const QDateTime &scheduled_for) {
    m_scheduled_for = scheduled_for;
    m_scheduled_for_isSet = true;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_scheduled_for_Set() const{
    return m_scheduled_for_isSet;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_scheduled_for_Valid() const{
    return m_scheduled_for_isValid;
}

QDateTime OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::getStartedAt() const {
    return m_started_at;
}
void OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::setStartedAt(const QDateTime &started_at) {
    m_started_at = started_at;
    m_started_at_isSet = true;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_started_at_Set() const{
    return m_started_at_isSet;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::is_started_at_Valid() const{
    return m_started_at_isValid;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_canceled_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_for_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_started_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
