/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSmDeviceSecurityCenters_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetNetworkSmDeviceSecurityCenters_200_response_inner_H
#define OAIGetNetworkSmDeviceSecurityCenters_200_response_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkSmDeviceSecurityCenters_200_response_inner : public OAIObject {
public:
    OAIGetNetworkSmDeviceSecurityCenters_200_response_inner();
    OAIGetNetworkSmDeviceSecurityCenters_200_response_inner(QString json);
    ~OAIGetNetworkSmDeviceSecurityCenters_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAntiVirusName() const;
    void setAntiVirusName(const QString &anti_virus_name);
    bool is_anti_virus_name_Set() const;
    bool is_anti_virus_name_Valid() const;

    QString getFireWallName() const;
    void setFireWallName(const QString &fire_wall_name);
    bool is_fire_wall_name_Set() const;
    bool is_fire_wall_name_Valid() const;

    bool isHasAntiVirus() const;
    void setHasAntiVirus(const bool &has_anti_virus);
    bool is_has_anti_virus_Set() const;
    bool is_has_anti_virus_Valid() const;

    bool isHasFireWallInstalled() const;
    void setHasFireWallInstalled(const bool &has_fire_wall_installed);
    bool is_has_fire_wall_installed_Set() const;
    bool is_has_fire_wall_installed_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsAutoLoginDisabled() const;
    void setIsAutoLoginDisabled(const bool &is_auto_login_disabled);
    bool is_is_auto_login_disabled_Set() const;
    bool is_is_auto_login_disabled_Valid() const;

    bool isIsDiskEncrypted() const;
    void setIsDiskEncrypted(const bool &is_disk_encrypted);
    bool is_is_disk_encrypted_Set() const;
    bool is_is_disk_encrypted_Valid() const;

    bool isIsFireWallEnabled() const;
    void setIsFireWallEnabled(const bool &is_fire_wall_enabled);
    bool is_is_fire_wall_enabled_Set() const;
    bool is_is_fire_wall_enabled_Valid() const;

    bool isIsRooted() const;
    void setIsRooted(const bool &is_rooted);
    bool is_is_rooted_Set() const;
    bool is_is_rooted_Valid() const;

    QString getRunningProcs() const;
    void setRunningProcs(const QString &running_procs);
    bool is_running_procs_Set() const;
    bool is_running_procs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anti_virus_name;
    bool m_anti_virus_name_isSet;
    bool m_anti_virus_name_isValid;

    QString m_fire_wall_name;
    bool m_fire_wall_name_isSet;
    bool m_fire_wall_name_isValid;

    bool m_has_anti_virus;
    bool m_has_anti_virus_isSet;
    bool m_has_anti_virus_isValid;

    bool m_has_fire_wall_installed;
    bool m_has_fire_wall_installed_isSet;
    bool m_has_fire_wall_installed_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_auto_login_disabled;
    bool m_is_auto_login_disabled_isSet;
    bool m_is_auto_login_disabled_isValid;

    bool m_is_disk_encrypted;
    bool m_is_disk_encrypted_isSet;
    bool m_is_disk_encrypted_isValid;

    bool m_is_fire_wall_enabled;
    bool m_is_fire_wall_enabled_isSet;
    bool m_is_fire_wall_enabled_isValid;

    bool m_is_rooted;
    bool m_is_rooted_isSet;
    bool m_is_rooted_isValid;

    QString m_running_procs;
    bool m_running_procs_isSet;
    bool m_running_procs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSmDeviceSecurityCenters_200_response_inner)

#endif // OAIGetNetworkSmDeviceSecurityCenters_200_response_inner_H
