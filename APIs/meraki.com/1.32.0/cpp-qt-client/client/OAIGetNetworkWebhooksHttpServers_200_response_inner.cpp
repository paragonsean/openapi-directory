/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkWebhooksHttpServers_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkWebhooksHttpServers_200_response_inner::OAIGetNetworkWebhooksHttpServers_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkWebhooksHttpServers_200_response_inner::OAIGetNetworkWebhooksHttpServers_200_response_inner() {
    this->initializeModel();
}

OAIGetNetworkWebhooksHttpServers_200_response_inner::~OAIGetNetworkWebhooksHttpServers_200_response_inner() {}

void OAIGetNetworkWebhooksHttpServers_200_response_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_id_isSet = false;
    m_network_id_isValid = false;

    m_payload_template_isSet = false;
    m_payload_template_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIGetNetworkWebhooksHttpServers_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkWebhooksHttpServers_200_response_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_network_id_isValid = ::OpenAPI::fromJsonValue(m_network_id, json[QString("networkId")]);
    m_network_id_isSet = !json[QString("networkId")].isNull() && m_network_id_isValid;

    m_payload_template_isValid = ::OpenAPI::fromJsonValue(m_payload_template, json[QString("payloadTemplate")]);
    m_payload_template_isSet = !json[QString("payloadTemplate")].isNull() && m_payload_template_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIGetNetworkWebhooksHttpServers_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkWebhooksHttpServers_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network_id_isSet) {
        obj.insert(QString("networkId"), ::OpenAPI::toJsonValue(m_network_id));
    }
    if (m_payload_template.isSet()) {
        obj.insert(QString("payloadTemplate"), ::OpenAPI::toJsonValue(m_payload_template));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QByteArray OAIGetNetworkWebhooksHttpServers_200_response_inner::getId() const {
    return m_id;
}
void OAIGetNetworkWebhooksHttpServers_200_response_inner::setId(const QByteArray &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGetNetworkWebhooksHttpServers_200_response_inner::getName() const {
    return m_name;
}
void OAIGetNetworkWebhooksHttpServers_200_response_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGetNetworkWebhooksHttpServers_200_response_inner::getNetworkId() const {
    return m_network_id;
}
void OAIGetNetworkWebhooksHttpServers_200_response_inner::setNetworkId(const QString &network_id) {
    m_network_id = network_id;
    m_network_id_isSet = true;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_network_id_Set() const{
    return m_network_id_isSet;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_network_id_Valid() const{
    return m_network_id_isValid;
}

OAIGetNetworkWebhooksHttpServers_200_response_inner_payloadTemplate OAIGetNetworkWebhooksHttpServers_200_response_inner::getPayloadTemplate() const {
    return m_payload_template;
}
void OAIGetNetworkWebhooksHttpServers_200_response_inner::setPayloadTemplate(const OAIGetNetworkWebhooksHttpServers_200_response_inner_payloadTemplate &payload_template) {
    m_payload_template = payload_template;
    m_payload_template_isSet = true;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_payload_template_Set() const{
    return m_payload_template_isSet;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_payload_template_Valid() const{
    return m_payload_template_isValid;
}

QString OAIGetNetworkWebhooksHttpServers_200_response_inner::getUrl() const {
    return m_url;
}
void OAIGetNetworkWebhooksHttpServers_200_response_inner::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_url_Set() const{
    return m_url_isSet;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payload_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkWebhooksHttpServers_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
