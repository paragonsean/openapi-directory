/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationSamlIdps_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationSamlIdps_200_response_inner::OAIGetOrganizationSamlIdps_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationSamlIdps_200_response_inner::OAIGetOrganizationSamlIdps_200_response_inner() {
    this->initializeModel();
}

OAIGetOrganizationSamlIdps_200_response_inner::~OAIGetOrganizationSamlIdps_200_response_inner() {}

void OAIGetOrganizationSamlIdps_200_response_inner::initializeModel() {

    m_consumer_url_isSet = false;
    m_consumer_url_isValid = false;

    m_idp_id_isSet = false;
    m_idp_id_isValid = false;

    m_slo_logout_url_isSet = false;
    m_slo_logout_url_isValid = false;

    m_x509cert_sha1_fingerprint_isSet = false;
    m_x509cert_sha1_fingerprint_isValid = false;
}

void OAIGetOrganizationSamlIdps_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationSamlIdps_200_response_inner::fromJsonObject(QJsonObject json) {

    m_consumer_url_isValid = ::OpenAPI::fromJsonValue(m_consumer_url, json[QString("consumerUrl")]);
    m_consumer_url_isSet = !json[QString("consumerUrl")].isNull() && m_consumer_url_isValid;

    m_idp_id_isValid = ::OpenAPI::fromJsonValue(m_idp_id, json[QString("idpId")]);
    m_idp_id_isSet = !json[QString("idpId")].isNull() && m_idp_id_isValid;

    m_slo_logout_url_isValid = ::OpenAPI::fromJsonValue(m_slo_logout_url, json[QString("sloLogoutUrl")]);
    m_slo_logout_url_isSet = !json[QString("sloLogoutUrl")].isNull() && m_slo_logout_url_isValid;

    m_x509cert_sha1_fingerprint_isValid = ::OpenAPI::fromJsonValue(m_x509cert_sha1_fingerprint, json[QString("x509certSha1Fingerprint")]);
    m_x509cert_sha1_fingerprint_isSet = !json[QString("x509certSha1Fingerprint")].isNull() && m_x509cert_sha1_fingerprint_isValid;
}

QString OAIGetOrganizationSamlIdps_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationSamlIdps_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_consumer_url_isSet) {
        obj.insert(QString("consumerUrl"), ::OpenAPI::toJsonValue(m_consumer_url));
    }
    if (m_idp_id_isSet) {
        obj.insert(QString("idpId"), ::OpenAPI::toJsonValue(m_idp_id));
    }
    if (m_slo_logout_url_isSet) {
        obj.insert(QString("sloLogoutUrl"), ::OpenAPI::toJsonValue(m_slo_logout_url));
    }
    if (m_x509cert_sha1_fingerprint_isSet) {
        obj.insert(QString("x509certSha1Fingerprint"), ::OpenAPI::toJsonValue(m_x509cert_sha1_fingerprint));
    }
    return obj;
}

QString OAIGetOrganizationSamlIdps_200_response_inner::getConsumerUrl() const {
    return m_consumer_url;
}
void OAIGetOrganizationSamlIdps_200_response_inner::setConsumerUrl(const QString &consumer_url) {
    m_consumer_url = consumer_url;
    m_consumer_url_isSet = true;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_consumer_url_Set() const{
    return m_consumer_url_isSet;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_consumer_url_Valid() const{
    return m_consumer_url_isValid;
}

QString OAIGetOrganizationSamlIdps_200_response_inner::getIdpId() const {
    return m_idp_id;
}
void OAIGetOrganizationSamlIdps_200_response_inner::setIdpId(const QString &idp_id) {
    m_idp_id = idp_id;
    m_idp_id_isSet = true;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_idp_id_Set() const{
    return m_idp_id_isSet;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_idp_id_Valid() const{
    return m_idp_id_isValid;
}

QString OAIGetOrganizationSamlIdps_200_response_inner::getSloLogoutUrl() const {
    return m_slo_logout_url;
}
void OAIGetOrganizationSamlIdps_200_response_inner::setSloLogoutUrl(const QString &slo_logout_url) {
    m_slo_logout_url = slo_logout_url;
    m_slo_logout_url_isSet = true;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_slo_logout_url_Set() const{
    return m_slo_logout_url_isSet;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_slo_logout_url_Valid() const{
    return m_slo_logout_url_isValid;
}

QString OAIGetOrganizationSamlIdps_200_response_inner::getX509certSha1Fingerprint() const {
    return m_x509cert_sha1_fingerprint;
}
void OAIGetOrganizationSamlIdps_200_response_inner::setX509certSha1Fingerprint(const QString &x509cert_sha1_fingerprint) {
    m_x509cert_sha1_fingerprint = x509cert_sha1_fingerprint;
    m_x509cert_sha1_fingerprint_isSet = true;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_x509cert_sha1_fingerprint_Set() const{
    return m_x509cert_sha1_fingerprint_isSet;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::is_x509cert_sha1_fingerprint_Valid() const{
    return m_x509cert_sha1_fingerprint_isValid;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_consumer_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_idp_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slo_logout_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_x509cert_sha1_fingerprint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationSamlIdps_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
