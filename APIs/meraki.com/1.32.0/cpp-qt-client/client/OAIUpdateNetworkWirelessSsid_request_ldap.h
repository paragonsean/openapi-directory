/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkWirelessSsid_request_ldap.h
 *
 * The current setting for LDAP. Only valid if splashPage is &#39;Password-protected with LDAP&#39;.
 */

#ifndef OAIUpdateNetworkWirelessSsid_request_ldap_H
#define OAIUpdateNetworkWirelessSsid_request_ldap_H

#include <QJsonObject>

#include "OAIUpdateNetworkWirelessSsid_request_ldap_credentials.h"
#include "OAIUpdateNetworkWirelessSsid_request_ldap_serverCaCertificate.h"
#include "OAIUpdateNetworkWirelessSsid_request_ldap_servers_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkWirelessSsid_request_ldap_credentials;
class OAIUpdateNetworkWirelessSsid_request_ldap_serverCaCertificate;
class OAIUpdateNetworkWirelessSsid_request_ldap_servers_inner;

class OAIUpdateNetworkWirelessSsid_request_ldap : public OAIObject {
public:
    OAIUpdateNetworkWirelessSsid_request_ldap();
    OAIUpdateNetworkWirelessSsid_request_ldap(QString json);
    ~OAIUpdateNetworkWirelessSsid_request_ldap() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseDistinguishedName() const;
    void setBaseDistinguishedName(const QString &base_distinguished_name);
    bool is_base_distinguished_name_Set() const;
    bool is_base_distinguished_name_Valid() const;

    OAIUpdateNetworkWirelessSsid_request_ldap_credentials getCredentials() const;
    void setCredentials(const OAIUpdateNetworkWirelessSsid_request_ldap_credentials &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    OAIUpdateNetworkWirelessSsid_request_ldap_serverCaCertificate getServerCaCertificate() const;
    void setServerCaCertificate(const OAIUpdateNetworkWirelessSsid_request_ldap_serverCaCertificate &server_ca_certificate);
    bool is_server_ca_certificate_Set() const;
    bool is_server_ca_certificate_Valid() const;

    QList<OAIUpdateNetworkWirelessSsid_request_ldap_servers_inner> getServers() const;
    void setServers(const QList<OAIUpdateNetworkWirelessSsid_request_ldap_servers_inner> &servers);
    bool is_servers_Set() const;
    bool is_servers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_distinguished_name;
    bool m_base_distinguished_name_isSet;
    bool m_base_distinguished_name_isValid;

    OAIUpdateNetworkWirelessSsid_request_ldap_credentials m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    OAIUpdateNetworkWirelessSsid_request_ldap_serverCaCertificate m_server_ca_certificate;
    bool m_server_ca_certificate_isSet;
    bool m_server_ca_certificate_isValid;

    QList<OAIUpdateNetworkWirelessSsid_request_ldap_servers_inner> m_servers;
    bool m_servers_isSet;
    bool m_servers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkWirelessSsid_request_ldap)

#endif // OAIUpdateNetworkWirelessSsid_request_ldap_H
