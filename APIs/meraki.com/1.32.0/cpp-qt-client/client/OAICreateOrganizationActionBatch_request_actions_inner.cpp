/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationActionBatch_request_actions_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationActionBatch_request_actions_inner::OAICreateOrganizationActionBatch_request_actions_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationActionBatch_request_actions_inner::OAICreateOrganizationActionBatch_request_actions_inner() {
    this->initializeModel();
}

OAICreateOrganizationActionBatch_request_actions_inner::~OAICreateOrganizationActionBatch_request_actions_inner() {}

void OAICreateOrganizationActionBatch_request_actions_inner::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_resource_isSet = false;
    m_resource_isValid = false;
}

void OAICreateOrganizationActionBatch_request_actions_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationActionBatch_request_actions_inner::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_resource_isValid = ::OpenAPI::fromJsonValue(m_resource, json[QString("resource")]);
    m_resource_isSet = !json[QString("resource")].isNull() && m_resource_isValid;
}

QString OAICreateOrganizationActionBatch_request_actions_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationActionBatch_request_actions_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_resource_isSet) {
        obj.insert(QString("resource"), ::OpenAPI::toJsonValue(m_resource));
    }
    return obj;
}

OAIObject OAICreateOrganizationActionBatch_request_actions_inner::getBody() const {
    return m_body;
}
void OAICreateOrganizationActionBatch_request_actions_inner::setBody(const OAIObject &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::is_body_Set() const{
    return m_body_isSet;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::is_body_Valid() const{
    return m_body_isValid;
}

QString OAICreateOrganizationActionBatch_request_actions_inner::getOperation() const {
    return m_operation;
}
void OAICreateOrganizationActionBatch_request_actions_inner::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAICreateOrganizationActionBatch_request_actions_inner::getResource() const {
    return m_resource;
}
void OAICreateOrganizationActionBatch_request_actions_inner::setResource(const QString &resource) {
    m_resource = resource;
    m_resource_isSet = true;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::is_resource_Set() const{
    return m_resource_isSet;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::is_resource_Valid() const{
    return m_resource_isValid;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationActionBatch_request_actions_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_operation_isValid && m_resource_isValid && true;
}

} // namespace OpenAPI
