/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkFirmwareUpgrades_200_response_products_appliance.h
 *
 * The network device to be updated
 */

#ifndef OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_H
#define OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_H

#include <QJsonObject>

#include "OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner.h"
#include "OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion.h"
#include "OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade.h"
#include "OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner;
class OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion;
class OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade;
class OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade;

class OAIGetNetworkFirmwareUpgrades_200_response_products_appliance : public OAIObject {
public:
    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance();
    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance(QString json);
    ~OAIGetNetworkFirmwareUpgrades_200_response_products_appliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner> getAvailableVersions() const;
    void setAvailableVersions(const QList<OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner> &available_versions);
    bool is_available_versions_Set() const;
    bool is_available_versions_Valid() const;

    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion getCurrentVersion() const;
    void setCurrentVersion(const OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion &current_version);
    bool is_current_version_Set() const;
    bool is_current_version_Valid() const;

    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade getLastUpgrade() const;
    void setLastUpgrade(const OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade &last_upgrade);
    bool is_last_upgrade_Set() const;
    bool is_last_upgrade_Valid() const;

    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade getNextUpgrade() const;
    void setNextUpgrade(const OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade &next_upgrade);
    bool is_next_upgrade_Set() const;
    bool is_next_upgrade_Valid() const;

    bool isParticipateInNextBetaRelease() const;
    void setParticipateInNextBetaRelease(const bool &participate_in_next_beta_release);
    bool is_participate_in_next_beta_release_Set() const;
    bool is_participate_in_next_beta_release_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_availableVersions_inner> m_available_versions;
    bool m_available_versions_isSet;
    bool m_available_versions_isValid;

    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion m_current_version;
    bool m_current_version_isSet;
    bool m_current_version_isValid;

    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_lastUpgrade m_last_upgrade;
    bool m_last_upgrade_isSet;
    bool m_last_upgrade_isValid;

    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_nextUpgrade m_next_upgrade;
    bool m_next_upgrade_isSet;
    bool m_next_upgrade_isValid;

    bool m_participate_in_next_beta_release;
    bool m_participate_in_next_beta_release_isSet;
    bool m_participate_in_next_beta_release_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkFirmwareUpgrades_200_response_products_appliance)

#endif // OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_H
