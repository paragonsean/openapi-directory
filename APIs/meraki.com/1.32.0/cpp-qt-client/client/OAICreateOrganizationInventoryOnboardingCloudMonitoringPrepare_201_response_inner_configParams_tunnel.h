/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel.h
 *
 * Configuration options used to connect to the device
 */

#ifndef OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_H
#define OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_H

#include <QJsonObject>

#include "OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_rootCertificate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_rootCertificate;

class OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel : public OAIObject {
public:
    OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel();
    OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel(QString json);
    ~OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPort() const;
    void setPort(const QString &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_rootCertificate getRootCertificate() const;
    void setRootCertificate(const OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_rootCertificate &root_certificate);
    bool is_root_certificate_Set() const;
    bool is_root_certificate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_rootCertificate m_root_certificate;
    bool m_root_certificate_isSet;
    bool m_root_certificate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel)

#endif // OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_H
