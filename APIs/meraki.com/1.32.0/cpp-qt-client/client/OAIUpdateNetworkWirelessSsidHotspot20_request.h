/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkWirelessSsidHotspot20_request.h
 *
 * 
 */

#ifndef OAIUpdateNetworkWirelessSsidHotspot20_request_H
#define OAIUpdateNetworkWirelessSsidHotspot20_request_H

#include <QJsonObject>

#include "OAIUpdateNetworkWirelessSsidHotspot20_request_mccMncs_inner.h"
#include "OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner.h"
#include "OAIUpdateNetworkWirelessSsidHotspot20_request_operator.h"
#include "OAIUpdateNetworkWirelessSsidHotspot20_request_venue.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkWirelessSsidHotspot20_request_mccMncs_inner;
class OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner;
class OAIUpdateNetworkWirelessSsidHotspot20_request_operator;
class OAIUpdateNetworkWirelessSsidHotspot20_request_venue;

class OAIUpdateNetworkWirelessSsidHotspot20_request : public OAIObject {
public:
    OAIUpdateNetworkWirelessSsidHotspot20_request();
    OAIUpdateNetworkWirelessSsidHotspot20_request(QString json);
    ~OAIUpdateNetworkWirelessSsidHotspot20_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDomains() const;
    void setDomains(const QList<QString> &domains);
    bool is_domains_Set() const;
    bool is_domains_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList<OAIUpdateNetworkWirelessSsidHotspot20_request_mccMncs_inner> getMccMncs() const;
    void setMccMncs(const QList<OAIUpdateNetworkWirelessSsidHotspot20_request_mccMncs_inner> &mcc_mncs);
    bool is_mcc_mncs_Set() const;
    bool is_mcc_mncs_Valid() const;

    QList<OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner> getNaiRealms() const;
    void setNaiRealms(const QList<OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner> &nai_realms);
    bool is_nai_realms_Set() const;
    bool is_nai_realms_Valid() const;

    QString getNetworkAccessType() const;
    void setNetworkAccessType(const QString &network_access_type);
    bool is_network_access_type_Set() const;
    bool is_network_access_type_Valid() const;

    OAIUpdateNetworkWirelessSsidHotspot20_request_operator getROperator() const;
    void setROperator(const OAIUpdateNetworkWirelessSsidHotspot20_request_operator &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QList<QString> getRoamConsortOis() const;
    void setRoamConsortOis(const QList<QString> &roam_consort_ois);
    bool is_roam_consort_ois_Set() const;
    bool is_roam_consort_ois_Valid() const;

    OAIUpdateNetworkWirelessSsidHotspot20_request_venue getVenue() const;
    void setVenue(const OAIUpdateNetworkWirelessSsidHotspot20_request_venue &venue);
    bool is_venue_Set() const;
    bool is_venue_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_domains;
    bool m_domains_isSet;
    bool m_domains_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList<OAIUpdateNetworkWirelessSsidHotspot20_request_mccMncs_inner> m_mcc_mncs;
    bool m_mcc_mncs_isSet;
    bool m_mcc_mncs_isValid;

    QList<OAIUpdateNetworkWirelessSsidHotspot20_request_naiRealms_inner> m_nai_realms;
    bool m_nai_realms_isSet;
    bool m_nai_realms_isValid;

    QString m_network_access_type;
    bool m_network_access_type_isSet;
    bool m_network_access_type_isValid;

    OAIUpdateNetworkWirelessSsidHotspot20_request_operator m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QList<QString> m_roam_consort_ois;
    bool m_roam_consort_ois_isSet;
    bool m_roam_consort_ois_isValid;

    OAIUpdateNetworkWirelessSsidHotspot20_request_venue m_venue;
    bool m_venue_isSet;
    bool m_venue_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkWirelessSsidHotspot20_request)

#endif // OAIUpdateNetworkWirelessSsidHotspot20_request_H
