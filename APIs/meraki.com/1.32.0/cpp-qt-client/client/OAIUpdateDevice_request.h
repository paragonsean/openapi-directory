/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDevice_request.h
 *
 * 
 */

#ifndef OAIUpdateDevice_request_H
#define OAIUpdateDevice_request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateDevice_request : public OAIObject {
public:
    OAIUpdateDevice_request();
    OAIUpdateDevice_request(QString json);
    ~OAIUpdateDevice_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getFloorPlanId() const;
    void setFloorPlanId(const QString &floor_plan_id);
    bool is_floor_plan_id_Set() const;
    bool is_floor_plan_id_Valid() const;

    float getLat() const;
    void setLat(const float &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    float getLng() const;
    void setLng(const float &lng);
    bool is_lng_Set() const;
    bool is_lng_Valid() const;

    bool isMoveMapMarker() const;
    void setMoveMapMarker(const bool &move_map_marker);
    bool is_move_map_marker_Set() const;
    bool is_move_map_marker_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getSwitchProfileId() const;
    void setSwitchProfileId(const QString &switch_profile_id);
    bool is_switch_profile_id_Set() const;
    bool is_switch_profile_id_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_floor_plan_id;
    bool m_floor_plan_id_isSet;
    bool m_floor_plan_id_isValid;

    float m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    float m_lng;
    bool m_lng_isSet;
    bool m_lng_isValid;

    bool m_move_map_marker;
    bool m_move_map_marker_isSet;
    bool m_move_map_marker_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_switch_profile_id;
    bool m_switch_profile_id_isSet;
    bool m_switch_profile_id_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDevice_request)

#endif // OAIUpdateDevice_request_H
