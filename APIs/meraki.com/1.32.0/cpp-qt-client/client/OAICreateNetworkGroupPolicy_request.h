/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateNetworkGroupPolicy_request.h
 *
 * 
 */

#ifndef OAICreateNetworkGroupPolicy_request_H
#define OAICreateNetworkGroupPolicy_request_H

#include <QJsonObject>

#include "OAICreateNetworkGroupPolicy_request_bandwidth.h"
#include "OAICreateNetworkGroupPolicy_request_bonjourForwarding.h"
#include "OAICreateNetworkGroupPolicy_request_contentFiltering.h"
#include "OAICreateNetworkGroupPolicy_request_firewallAndTrafficShaping.h"
#include "OAICreateNetworkGroupPolicy_request_scheduling.h"
#include "OAICreateNetworkGroupPolicy_request_vlanTagging.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateNetworkGroupPolicy_request_bandwidth;
class OAICreateNetworkGroupPolicy_request_bonjourForwarding;
class OAICreateNetworkGroupPolicy_request_contentFiltering;
class OAICreateNetworkGroupPolicy_request_firewallAndTrafficShaping;
class OAICreateNetworkGroupPolicy_request_scheduling;
class OAICreateNetworkGroupPolicy_request_vlanTagging;

class OAICreateNetworkGroupPolicy_request : public OAIObject {
public:
    OAICreateNetworkGroupPolicy_request();
    OAICreateNetworkGroupPolicy_request(QString json);
    ~OAICreateNetworkGroupPolicy_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateNetworkGroupPolicy_request_bandwidth getBandwidth() const;
    void setBandwidth(const OAICreateNetworkGroupPolicy_request_bandwidth &bandwidth);
    bool is_bandwidth_Set() const;
    bool is_bandwidth_Valid() const;

    OAICreateNetworkGroupPolicy_request_bonjourForwarding getBonjourForwarding() const;
    void setBonjourForwarding(const OAICreateNetworkGroupPolicy_request_bonjourForwarding &bonjour_forwarding);
    bool is_bonjour_forwarding_Set() const;
    bool is_bonjour_forwarding_Valid() const;

    OAICreateNetworkGroupPolicy_request_contentFiltering getContentFiltering() const;
    void setContentFiltering(const OAICreateNetworkGroupPolicy_request_contentFiltering &content_filtering);
    bool is_content_filtering_Set() const;
    bool is_content_filtering_Valid() const;

    OAICreateNetworkGroupPolicy_request_firewallAndTrafficShaping getFirewallAndTrafficShaping() const;
    void setFirewallAndTrafficShaping(const OAICreateNetworkGroupPolicy_request_firewallAndTrafficShaping &firewall_and_traffic_shaping);
    bool is_firewall_and_traffic_shaping_Set() const;
    bool is_firewall_and_traffic_shaping_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICreateNetworkGroupPolicy_request_scheduling getScheduling() const;
    void setScheduling(const OAICreateNetworkGroupPolicy_request_scheduling &scheduling);
    bool is_scheduling_Set() const;
    bool is_scheduling_Valid() const;

    QString getSplashAuthSettings() const;
    void setSplashAuthSettings(const QString &splash_auth_settings);
    bool is_splash_auth_settings_Set() const;
    bool is_splash_auth_settings_Valid() const;

    OAICreateNetworkGroupPolicy_request_vlanTagging getVlanTagging() const;
    void setVlanTagging(const OAICreateNetworkGroupPolicy_request_vlanTagging &vlan_tagging);
    bool is_vlan_tagging_Set() const;
    bool is_vlan_tagging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateNetworkGroupPolicy_request_bandwidth m_bandwidth;
    bool m_bandwidth_isSet;
    bool m_bandwidth_isValid;

    OAICreateNetworkGroupPolicy_request_bonjourForwarding m_bonjour_forwarding;
    bool m_bonjour_forwarding_isSet;
    bool m_bonjour_forwarding_isValid;

    OAICreateNetworkGroupPolicy_request_contentFiltering m_content_filtering;
    bool m_content_filtering_isSet;
    bool m_content_filtering_isValid;

    OAICreateNetworkGroupPolicy_request_firewallAndTrafficShaping m_firewall_and_traffic_shaping;
    bool m_firewall_and_traffic_shaping_isSet;
    bool m_firewall_and_traffic_shaping_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICreateNetworkGroupPolicy_request_scheduling m_scheduling;
    bool m_scheduling_isSet;
    bool m_scheduling_isValid;

    QString m_splash_auth_settings;
    bool m_splash_auth_settings_isSet;
    bool m_splash_auth_settings_isValid;

    OAICreateNetworkGroupPolicy_request_vlanTagging m_vlan_tagging;
    bool m_vlan_tagging_isSet;
    bool m_vlan_tagging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateNetworkGroupPolicy_request)

#endif // OAICreateNetworkGroupPolicy_request_H
