/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkWirelessFailedConnections_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetNetworkWirelessFailedConnections_200_response_inner_H
#define OAIGetNetworkWirelessFailedConnections_200_response_inner_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkWirelessFailedConnections_200_response_inner : public OAIObject {
public:
    OAIGetNetworkWirelessFailedConnections_200_response_inner();
    OAIGetNetworkWirelessFailedConnections_200_response_inner(QString json);
    ~OAIGetNetworkWirelessFailedConnections_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientMac() const;
    void setClientMac(const QString &client_mac);
    bool is_client_mac_Set() const;
    bool is_client_mac_Valid() const;

    QString getFailureStep() const;
    void setFailureStep(const QString &failure_step);
    bool is_failure_step_Set() const;
    bool is_failure_step_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    qint32 getSsidNumber() const;
    void setSsidNumber(const qint32 &ssid_number);
    bool is_ssid_number_Set() const;
    bool is_ssid_number_Valid() const;

    QDateTime getTs() const;
    void setTs(const QDateTime &ts);
    bool is_ts_Set() const;
    bool is_ts_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getVlan() const;
    void setVlan(const qint32 &vlan);
    bool is_vlan_Set() const;
    bool is_vlan_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_mac;
    bool m_client_mac_isSet;
    bool m_client_mac_isValid;

    QString m_failure_step;
    bool m_failure_step_isSet;
    bool m_failure_step_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    qint32 m_ssid_number;
    bool m_ssid_number_isSet;
    bool m_ssid_number_isValid;

    QDateTime m_ts;
    bool m_ts_isSet;
    bool m_ts_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_vlan;
    bool m_vlan_isSet;
    bool m_vlan_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkWirelessFailedConnections_200_response_inner)

#endif // OAIGetNetworkWirelessFailedConnections_200_response_inner_H
