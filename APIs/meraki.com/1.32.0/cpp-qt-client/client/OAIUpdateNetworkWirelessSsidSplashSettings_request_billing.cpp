/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkWirelessSsidSplashSettings_request_billing.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::OAIUpdateNetworkWirelessSsidSplashSettings_request_billing(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::OAIUpdateNetworkWirelessSsidSplashSettings_request_billing() {
    this->initializeModel();
}

OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::~OAIUpdateNetworkWirelessSsidSplashSettings_request_billing() {}

void OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::initializeModel() {

    m_free_access_isSet = false;
    m_free_access_isValid = false;

    m_prepaid_access_fast_login_enabled_isSet = false;
    m_prepaid_access_fast_login_enabled_isValid = false;

    m_reply_to_email_address_isSet = false;
    m_reply_to_email_address_isValid = false;
}

void OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::fromJsonObject(QJsonObject json) {

    m_free_access_isValid = ::OpenAPI::fromJsonValue(m_free_access, json[QString("freeAccess")]);
    m_free_access_isSet = !json[QString("freeAccess")].isNull() && m_free_access_isValid;

    m_prepaid_access_fast_login_enabled_isValid = ::OpenAPI::fromJsonValue(m_prepaid_access_fast_login_enabled, json[QString("prepaidAccessFastLoginEnabled")]);
    m_prepaid_access_fast_login_enabled_isSet = !json[QString("prepaidAccessFastLoginEnabled")].isNull() && m_prepaid_access_fast_login_enabled_isValid;

    m_reply_to_email_address_isValid = ::OpenAPI::fromJsonValue(m_reply_to_email_address, json[QString("replyToEmailAddress")]);
    m_reply_to_email_address_isSet = !json[QString("replyToEmailAddress")].isNull() && m_reply_to_email_address_isValid;
}

QString OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::asJsonObject() const {
    QJsonObject obj;
    if (m_free_access.isSet()) {
        obj.insert(QString("freeAccess"), ::OpenAPI::toJsonValue(m_free_access));
    }
    if (m_prepaid_access_fast_login_enabled_isSet) {
        obj.insert(QString("prepaidAccessFastLoginEnabled"), ::OpenAPI::toJsonValue(m_prepaid_access_fast_login_enabled));
    }
    if (m_reply_to_email_address_isSet) {
        obj.insert(QString("replyToEmailAddress"), ::OpenAPI::toJsonValue(m_reply_to_email_address));
    }
    return obj;
}

OAIUpdateNetworkWirelessSsidSplashSettings_request_billing_freeAccess OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::getFreeAccess() const {
    return m_free_access;
}
void OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::setFreeAccess(const OAIUpdateNetworkWirelessSsidSplashSettings_request_billing_freeAccess &free_access) {
    m_free_access = free_access;
    m_free_access_isSet = true;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::is_free_access_Set() const{
    return m_free_access_isSet;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::is_free_access_Valid() const{
    return m_free_access_isValid;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::isPrepaidAccessFastLoginEnabled() const {
    return m_prepaid_access_fast_login_enabled;
}
void OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::setPrepaidAccessFastLoginEnabled(const bool &prepaid_access_fast_login_enabled) {
    m_prepaid_access_fast_login_enabled = prepaid_access_fast_login_enabled;
    m_prepaid_access_fast_login_enabled_isSet = true;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::is_prepaid_access_fast_login_enabled_Set() const{
    return m_prepaid_access_fast_login_enabled_isSet;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::is_prepaid_access_fast_login_enabled_Valid() const{
    return m_prepaid_access_fast_login_enabled_isValid;
}

QString OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::getReplyToEmailAddress() const {
    return m_reply_to_email_address;
}
void OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::setReplyToEmailAddress(const QString &reply_to_email_address) {
    m_reply_to_email_address = reply_to_email_address;
    m_reply_to_email_address_isSet = true;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::is_reply_to_email_address_Set() const{
    return m_reply_to_email_address_isSet;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::is_reply_to_email_address_Valid() const{
    return m_reply_to_email_address_isValid;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_free_access.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prepaid_access_fast_login_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkWirelessSsidSplashSettings_request_billing::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
