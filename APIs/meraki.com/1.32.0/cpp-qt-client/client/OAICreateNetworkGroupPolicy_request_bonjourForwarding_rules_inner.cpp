/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner() {
    this->initializeModel();
}

OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::~OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner() {}

void OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;

    m_vlan_id_isSet = false;
    m_vlan_id_isValid = false;
}

void OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("services")]);
    m_services_isSet = !json[QString("services")].isNull() && m_services_isValid;

    m_vlan_id_isValid = ::OpenAPI::fromJsonValue(m_vlan_id, json[QString("vlanId")]);
    m_vlan_id_isSet = !json[QString("vlanId")].isNull() && m_vlan_id_isValid;
}

QString OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("services"), ::OpenAPI::toJsonValue(m_services));
    }
    if (m_vlan_id_isSet) {
        obj.insert(QString("vlanId"), ::OpenAPI::toJsonValue(m_vlan_id));
    }
    return obj;
}

QString OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::getDescription() const {
    return m_description;
}
void OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::is_description_Valid() const{
    return m_description_isValid;
}

QList<QString> OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::getServices() const {
    return m_services;
}
void OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::setServices(const QList<QString> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::is_services_Set() const{
    return m_services_isSet;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::is_services_Valid() const{
    return m_services_isValid;
}

QString OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::getVlanId() const {
    return m_vlan_id;
}
void OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::setVlanId(const QString &vlan_id) {
    m_vlan_id = vlan_id;
    m_vlan_id_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::is_vlan_id_Set() const{
    return m_vlan_id_isSet;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::is_vlan_id_Valid() const{
    return m_vlan_id_isValid;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vlan_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateNetworkGroupPolicy_request_bonjourForwarding_rules_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_services_isValid && m_vlan_id_isValid && true;
}

} // namespace OpenAPI
