/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAdministeredIdentitiesMe_200_response_authentication.h
 *
 * Authentication info
 */

#ifndef OAIGetAdministeredIdentitiesMe_200_response_authentication_H
#define OAIGetAdministeredIdentitiesMe_200_response_authentication_H

#include <QJsonObject>

#include "OAIGetAdministeredIdentitiesMe_200_response_authentication_api.h"
#include "OAIGetAdministeredIdentitiesMe_200_response_authentication_saml.h"
#include "OAIGetAdministeredIdentitiesMe_200_response_authentication_twoFactor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetAdministeredIdentitiesMe_200_response_authentication_api;
class OAIGetAdministeredIdentitiesMe_200_response_authentication_saml;
class OAIGetAdministeredIdentitiesMe_200_response_authentication_twoFactor;

class OAIGetAdministeredIdentitiesMe_200_response_authentication : public OAIObject {
public:
    OAIGetAdministeredIdentitiesMe_200_response_authentication();
    OAIGetAdministeredIdentitiesMe_200_response_authentication(QString json);
    ~OAIGetAdministeredIdentitiesMe_200_response_authentication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetAdministeredIdentitiesMe_200_response_authentication_api getApi() const;
    void setApi(const OAIGetAdministeredIdentitiesMe_200_response_authentication_api &api);
    bool is_api_Set() const;
    bool is_api_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    OAIGetAdministeredIdentitiesMe_200_response_authentication_saml getSaml() const;
    void setSaml(const OAIGetAdministeredIdentitiesMe_200_response_authentication_saml &saml);
    bool is_saml_Set() const;
    bool is_saml_Valid() const;

    OAIGetAdministeredIdentitiesMe_200_response_authentication_twoFactor getTwoFactor() const;
    void setTwoFactor(const OAIGetAdministeredIdentitiesMe_200_response_authentication_twoFactor &two_factor);
    bool is_two_factor_Set() const;
    bool is_two_factor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetAdministeredIdentitiesMe_200_response_authentication_api m_api;
    bool m_api_isSet;
    bool m_api_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    OAIGetAdministeredIdentitiesMe_200_response_authentication_saml m_saml;
    bool m_saml_isSet;
    bool m_saml_isValid;

    OAIGetAdministeredIdentitiesMe_200_response_authentication_twoFactor m_two_factor;
    bool m_two_factor_isSet;
    bool m_two_factor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAdministeredIdentitiesMe_200_response_authentication)

#endif // OAIGetAdministeredIdentitiesMe_200_response_authentication_H
