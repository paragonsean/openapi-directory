/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkApplianceWarmSpare_request.h
 *
 * 
 */

#ifndef OAIUpdateNetworkApplianceWarmSpare_request_H
#define OAIUpdateNetworkApplianceWarmSpare_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateNetworkApplianceWarmSpare_request : public OAIObject {
public:
    OAIUpdateNetworkApplianceWarmSpare_request();
    OAIUpdateNetworkApplianceWarmSpare_request(QString json);
    ~OAIUpdateNetworkApplianceWarmSpare_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getSpareSerial() const;
    void setSpareSerial(const QString &spare_serial);
    bool is_spare_serial_Set() const;
    bool is_spare_serial_Valid() const;

    QString getUplinkMode() const;
    void setUplinkMode(const QString &uplink_mode);
    bool is_uplink_mode_Set() const;
    bool is_uplink_mode_Valid() const;

    QString getVirtualIp1() const;
    void setVirtualIp1(const QString &virtual_ip1);
    bool is_virtual_ip1_Set() const;
    bool is_virtual_ip1_Valid() const;

    QString getVirtualIp2() const;
    void setVirtualIp2(const QString &virtual_ip2);
    bool is_virtual_ip2_Set() const;
    bool is_virtual_ip2_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_spare_serial;
    bool m_spare_serial_isSet;
    bool m_spare_serial_isValid;

    QString m_uplink_mode;
    bool m_uplink_mode_isSet;
    bool m_uplink_mode_isValid;

    QString m_virtual_ip1;
    bool m_virtual_ip1_isSet;
    bool m_virtual_ip1_isValid;

    QString m_virtual_ip2;
    bool m_virtual_ip2_isSet;
    bool m_virtual_ip2_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkApplianceWarmSpare_request)

#endif // OAIUpdateNetworkApplianceWarmSpare_request_H
