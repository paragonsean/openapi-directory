/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkCameraWirelessProfile_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkCameraWirelessProfile_request::OAIUpdateNetworkCameraWirelessProfile_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkCameraWirelessProfile_request::OAIUpdateNetworkCameraWirelessProfile_request() {
    this->initializeModel();
}

OAIUpdateNetworkCameraWirelessProfile_request::~OAIUpdateNetworkCameraWirelessProfile_request() {}

void OAIUpdateNetworkCameraWirelessProfile_request::initializeModel() {

    m_identity_isSet = false;
    m_identity_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_ssid_isSet = false;
    m_ssid_isValid = false;
}

void OAIUpdateNetworkCameraWirelessProfile_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkCameraWirelessProfile_request::fromJsonObject(QJsonObject json) {

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("identity")]);
    m_identity_isSet = !json[QString("identity")].isNull() && m_identity_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_ssid_isValid = ::OpenAPI::fromJsonValue(m_ssid, json[QString("ssid")]);
    m_ssid_isSet = !json[QString("ssid")].isNull() && m_ssid_isValid;
}

QString OAIUpdateNetworkCameraWirelessProfile_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkCameraWirelessProfile_request::asJsonObject() const {
    QJsonObject obj;
    if (m_identity.isSet()) {
        obj.insert(QString("identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_ssid.isSet()) {
        obj.insert(QString("ssid"), ::OpenAPI::toJsonValue(m_ssid));
    }
    return obj;
}

OAICreateNetworkCameraWirelessProfile_request_identity OAIUpdateNetworkCameraWirelessProfile_request::getIdentity() const {
    return m_identity;
}
void OAIUpdateNetworkCameraWirelessProfile_request::setIdentity(const OAICreateNetworkCameraWirelessProfile_request_identity &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::is_identity_Valid() const{
    return m_identity_isValid;
}

QString OAIUpdateNetworkCameraWirelessProfile_request::getName() const {
    return m_name;
}
void OAIUpdateNetworkCameraWirelessProfile_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::is_name_Valid() const{
    return m_name_isValid;
}

OAICreateNetworkCameraWirelessProfile_request_ssid OAIUpdateNetworkCameraWirelessProfile_request::getSsid() const {
    return m_ssid;
}
void OAIUpdateNetworkCameraWirelessProfile_request::setSsid(const OAICreateNetworkCameraWirelessProfile_request_ssid &ssid) {
    m_ssid = ssid;
    m_ssid_isSet = true;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::is_ssid_Set() const{
    return m_ssid_isSet;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::is_ssid_Valid() const{
    return m_ssid_isValid;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssid.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkCameraWirelessProfile_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
