/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature.h
 *
 * Temperature threshold. One of &#39;celsius&#39;, &#39;fahrenheit&#39;, or &#39;quality&#39; must be provided.
 */

#ifndef OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature_H
#define OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature : public OAIObject {
public:
    OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature();
    OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature(QString json);
    ~OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getCelsius() const;
    void setCelsius(const float &celsius);
    bool is_celsius_Set() const;
    bool is_celsius_Valid() const;

    float getFahrenheit() const;
    void setFahrenheit(const float &fahrenheit);
    bool is_fahrenheit_Set() const;
    bool is_fahrenheit_Valid() const;

    QString getQuality() const;
    void setQuality(const QString &quality);
    bool is_quality_Set() const;
    bool is_quality_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_celsius;
    bool m_celsius_isSet;
    bool m_celsius_isValid;

    float m_fahrenheit;
    bool m_fahrenheit_isSet;
    bool m_fahrenheit_isValid;

    QString m_quality;
    bool m_quality_isSet;
    bool m_quality_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature)

#endif // OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_temperature_H
