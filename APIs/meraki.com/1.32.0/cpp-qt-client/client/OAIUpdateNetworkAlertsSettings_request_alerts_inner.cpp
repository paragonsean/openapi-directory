/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkAlertsSettings_request_alerts_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkAlertsSettings_request_alerts_inner::OAIUpdateNetworkAlertsSettings_request_alerts_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkAlertsSettings_request_alerts_inner::OAIUpdateNetworkAlertsSettings_request_alerts_inner() {
    this->initializeModel();
}

OAIUpdateNetworkAlertsSettings_request_alerts_inner::~OAIUpdateNetworkAlertsSettings_request_alerts_inner() {}

void OAIUpdateNetworkAlertsSettings_request_alerts_inner::initializeModel() {

    m_alert_destinations_isSet = false;
    m_alert_destinations_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_filters_isSet = false;
    m_filters_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIUpdateNetworkAlertsSettings_request_alerts_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkAlertsSettings_request_alerts_inner::fromJsonObject(QJsonObject json) {

    m_alert_destinations_isValid = ::OpenAPI::fromJsonValue(m_alert_destinations, json[QString("alertDestinations")]);
    m_alert_destinations_isSet = !json[QString("alertDestinations")].isNull() && m_alert_destinations_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_filters_isValid = ::OpenAPI::fromJsonValue(m_filters, json[QString("filters")]);
    m_filters_isSet = !json[QString("filters")].isNull() && m_filters_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIUpdateNetworkAlertsSettings_request_alerts_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkAlertsSettings_request_alerts_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_alert_destinations.isSet()) {
        obj.insert(QString("alertDestinations"), ::OpenAPI::toJsonValue(m_alert_destinations));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_filters_isSet) {
        obj.insert(QString("filters"), ::OpenAPI::toJsonValue(m_filters));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIUpdateNetworkAlertsSettings_request_alerts_inner_alertDestinations OAIUpdateNetworkAlertsSettings_request_alerts_inner::getAlertDestinations() const {
    return m_alert_destinations;
}
void OAIUpdateNetworkAlertsSettings_request_alerts_inner::setAlertDestinations(const OAIUpdateNetworkAlertsSettings_request_alerts_inner_alertDestinations &alert_destinations) {
    m_alert_destinations = alert_destinations;
    m_alert_destinations_isSet = true;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_alert_destinations_Set() const{
    return m_alert_destinations_isSet;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_alert_destinations_Valid() const{
    return m_alert_destinations_isValid;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::isEnabled() const {
    return m_enabled;
}
void OAIUpdateNetworkAlertsSettings_request_alerts_inner::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAIObject OAIUpdateNetworkAlertsSettings_request_alerts_inner::getFilters() const {
    return m_filters;
}
void OAIUpdateNetworkAlertsSettings_request_alerts_inner::setFilters(const OAIObject &filters) {
    m_filters = filters;
    m_filters_isSet = true;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_filters_Set() const{
    return m_filters_isSet;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_filters_Valid() const{
    return m_filters_isValid;
}

QString OAIUpdateNetworkAlertsSettings_request_alerts_inner::getType() const {
    return m_type;
}
void OAIUpdateNetworkAlertsSettings_request_alerts_inner::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alert_destinations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkAlertsSettings_request_alerts_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
