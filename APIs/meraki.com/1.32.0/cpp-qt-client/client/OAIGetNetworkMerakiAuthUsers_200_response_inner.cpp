/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkMerakiAuthUsers_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkMerakiAuthUsers_200_response_inner::OAIGetNetworkMerakiAuthUsers_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkMerakiAuthUsers_200_response_inner::OAIGetNetworkMerakiAuthUsers_200_response_inner() {
    this->initializeModel();
}

OAIGetNetworkMerakiAuthUsers_200_response_inner::~OAIGetNetworkMerakiAuthUsers_200_response_inner() {}

void OAIGetNetworkMerakiAuthUsers_200_response_inner::initializeModel() {

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_authorizations_isSet = false;
    m_authorizations_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_admin_isSet = false;
    m_is_admin_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGetNetworkMerakiAuthUsers_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkMerakiAuthUsers_200_response_inner::fromJsonObject(QJsonObject json) {

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("accountType")]);
    m_account_type_isSet = !json[QString("accountType")].isNull() && m_account_type_isValid;

    m_authorizations_isValid = ::OpenAPI::fromJsonValue(m_authorizations, json[QString("authorizations")]);
    m_authorizations_isSet = !json[QString("authorizations")].isNull() && m_authorizations_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_admin_isValid = ::OpenAPI::fromJsonValue(m_is_admin, json[QString("isAdmin")]);
    m_is_admin_isSet = !json[QString("isAdmin")].isNull() && m_is_admin_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGetNetworkMerakiAuthUsers_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkMerakiAuthUsers_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_account_type_isSet) {
        obj.insert(QString("accountType"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_authorizations.size() > 0) {
        obj.insert(QString("authorizations"), ::OpenAPI::toJsonValue(m_authorizations));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_admin_isSet) {
        obj.insert(QString("isAdmin"), ::OpenAPI::toJsonValue(m_is_admin));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGetNetworkMerakiAuthUsers_200_response_inner::getAccountType() const {
    return m_account_type;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setAccountType(const QString &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_account_type_Valid() const{
    return m_account_type_isValid;
}

QList<OAIGetNetworkMerakiAuthUsers_200_response_inner_authorizations_inner> OAIGetNetworkMerakiAuthUsers_200_response_inner::getAuthorizations() const {
    return m_authorizations;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setAuthorizations(const QList<OAIGetNetworkMerakiAuthUsers_200_response_inner_authorizations_inner> &authorizations) {
    m_authorizations = authorizations;
    m_authorizations_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_authorizations_Set() const{
    return m_authorizations_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_authorizations_Valid() const{
    return m_authorizations_isValid;
}

QDateTime OAIGetNetworkMerakiAuthUsers_200_response_inner::getCreatedAt() const {
    return m_created_at;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGetNetworkMerakiAuthUsers_200_response_inner::getEmail() const {
    return m_email;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_email_Set() const{
    return m_email_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIGetNetworkMerakiAuthUsers_200_response_inner::getId() const {
    return m_id;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::isIsAdmin() const {
    return m_is_admin;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setIsAdmin(const bool &is_admin) {
    m_is_admin = is_admin;
    m_is_admin_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_is_admin_Set() const{
    return m_is_admin_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_is_admin_Valid() const{
    return m_is_admin_isValid;
}

QString OAIGetNetworkMerakiAuthUsers_200_response_inner::getName() const {
    return m_name;
}
void OAIGetNetworkMerakiAuthUsers_200_response_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorizations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_admin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkMerakiAuthUsers_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
