/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis() {
    this->initializeModel();
}

OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::~OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis() {}

void OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::initializeModel() {

    m_ipv4_isSet = false;
    m_ipv4_isValid = false;

    m_ipv6_isSet = false;
    m_ipv6_isValid = false;
}

void OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::fromJsonObject(QJsonObject json) {

    m_ipv4_isValid = ::OpenAPI::fromJsonValue(m_ipv4, json[QString("ipv4")]);
    m_ipv4_isSet = !json[QString("ipv4")].isNull() && m_ipv4_isValid;

    m_ipv6_isValid = ::OpenAPI::fromJsonValue(m_ipv6, json[QString("ipv6")]);
    m_ipv6_isSet = !json[QString("ipv6")].isNull() && m_ipv6_isValid;
}

QString OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::asJsonObject() const {
    QJsonObject obj;
    if (m_ipv4.isSet()) {
        obj.insert(QString("ipv4"), ::OpenAPI::toJsonValue(m_ipv4));
    }
    if (m_ipv6.isSet()) {
        obj.insert(QString("ipv6"), ::OpenAPI::toJsonValue(m_ipv6));
    }
    return obj;
}

OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis_ipv4 OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::getIpv4() const {
    return m_ipv4;
}
void OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::setIpv4(const OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis_ipv4 &ipv4) {
    m_ipv4 = ipv4;
    m_ipv4_isSet = true;
}

bool OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::is_ipv4_Set() const{
    return m_ipv4_isSet;
}

bool OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::is_ipv4_Valid() const{
    return m_ipv4_isValid;
}

OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis_ipv6 OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::getIpv6() const {
    return m_ipv6;
}
void OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::setIpv6(const OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis_ipv6 &ipv6) {
    m_ipv6 = ipv6;
    m_ipv6_isSet = true;
}

bool OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::is_ipv6_Set() const{
    return m_ipv6_isSet;
}

bool OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::is_ipv6_Valid() const{
    return m_ipv6_isValid;
}

bool OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ipv4.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ipv6.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
