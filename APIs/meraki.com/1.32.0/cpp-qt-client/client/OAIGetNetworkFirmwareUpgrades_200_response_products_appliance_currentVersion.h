/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion.h
 *
 * Details of the current version on the device
 */

#ifndef OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion_H
#define OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion : public OAIObject {
public:
    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion();
    OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion(QString json);
    ~OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFirmware() const;
    void setFirmware(const QString &firmware);
    bool is_firmware_Set() const;
    bool is_firmware_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getReleaseDate() const;
    void setReleaseDate(const QDateTime &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    QString getReleaseType() const;
    void setReleaseType(const QString &release_type);
    bool is_release_type_Set() const;
    bool is_release_type_Valid() const;

    QString getShortName() const;
    void setShortName(const QString &short_name);
    bool is_short_name_Set() const;
    bool is_short_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_firmware;
    bool m_firmware_isSet;
    bool m_firmware_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    QString m_release_type;
    bool m_release_type_isSet;
    bool m_release_type_isValid;

    QString m_short_name;
    bool m_short_name_isSet;
    bool m_short_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion)

#endif // OAIGetNetworkFirmwareUpgrades_200_response_products_appliance_currentVersion_H
