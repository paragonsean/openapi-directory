/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateNetworkGroupPolicy_request_contentFiltering.h
 *
 * The content filtering settings for your group policy
 */

#ifndef OAICreateNetworkGroupPolicy_request_contentFiltering_H
#define OAICreateNetworkGroupPolicy_request_contentFiltering_H

#include <QJsonObject>

#include "OAICreateNetworkGroupPolicy_request_contentFiltering_allowedUrlPatterns.h"
#include "OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlCategories.h"
#include "OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlPatterns.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateNetworkGroupPolicy_request_contentFiltering_allowedUrlPatterns;
class OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlCategories;
class OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlPatterns;

class OAICreateNetworkGroupPolicy_request_contentFiltering : public OAIObject {
public:
    OAICreateNetworkGroupPolicy_request_contentFiltering();
    OAICreateNetworkGroupPolicy_request_contentFiltering(QString json);
    ~OAICreateNetworkGroupPolicy_request_contentFiltering() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateNetworkGroupPolicy_request_contentFiltering_allowedUrlPatterns getAllowedUrlPatterns() const;
    void setAllowedUrlPatterns(const OAICreateNetworkGroupPolicy_request_contentFiltering_allowedUrlPatterns &allowed_url_patterns);
    bool is_allowed_url_patterns_Set() const;
    bool is_allowed_url_patterns_Valid() const;

    OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlCategories getBlockedUrlCategories() const;
    void setBlockedUrlCategories(const OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlCategories &blocked_url_categories);
    bool is_blocked_url_categories_Set() const;
    bool is_blocked_url_categories_Valid() const;

    OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlPatterns getBlockedUrlPatterns() const;
    void setBlockedUrlPatterns(const OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlPatterns &blocked_url_patterns);
    bool is_blocked_url_patterns_Set() const;
    bool is_blocked_url_patterns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateNetworkGroupPolicy_request_contentFiltering_allowedUrlPatterns m_allowed_url_patterns;
    bool m_allowed_url_patterns_isSet;
    bool m_allowed_url_patterns_isValid;

    OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlCategories m_blocked_url_categories;
    bool m_blocked_url_categories_isSet;
    bool m_blocked_url_categories_isValid;

    OAICreateNetworkGroupPolicy_request_contentFiltering_blockedUrlPatterns m_blocked_url_patterns;
    bool m_blocked_url_patterns_isSet;
    bool m_blocked_url_patterns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateNetworkGroupPolicy_request_contentFiltering)

#endif // OAICreateNetworkGroupPolicy_request_contentFiltering_H
