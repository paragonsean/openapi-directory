/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDeviceCellularSims_request_sims_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDeviceCellularSims_request_sims_inner::OAIUpdateDeviceCellularSims_request_sims_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDeviceCellularSims_request_sims_inner::OAIUpdateDeviceCellularSims_request_sims_inner() {
    this->initializeModel();
}

OAIUpdateDeviceCellularSims_request_sims_inner::~OAIUpdateDeviceCellularSims_request_sims_inner() {}

void OAIUpdateDeviceCellularSims_request_sims_inner::initializeModel() {

    m_apns_isSet = false;
    m_apns_isValid = false;

    m_is_primary_isSet = false;
    m_is_primary_isValid = false;

    m_slot_isSet = false;
    m_slot_isValid = false;
}

void OAIUpdateDeviceCellularSims_request_sims_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDeviceCellularSims_request_sims_inner::fromJsonObject(QJsonObject json) {

    m_apns_isValid = ::OpenAPI::fromJsonValue(m_apns, json[QString("apns")]);
    m_apns_isSet = !json[QString("apns")].isNull() && m_apns_isValid;

    m_is_primary_isValid = ::OpenAPI::fromJsonValue(m_is_primary, json[QString("isPrimary")]);
    m_is_primary_isSet = !json[QString("isPrimary")].isNull() && m_is_primary_isValid;

    m_slot_isValid = ::OpenAPI::fromJsonValue(m_slot, json[QString("slot")]);
    m_slot_isSet = !json[QString("slot")].isNull() && m_slot_isValid;
}

QString OAIUpdateDeviceCellularSims_request_sims_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDeviceCellularSims_request_sims_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_apns.size() > 0) {
        obj.insert(QString("apns"), ::OpenAPI::toJsonValue(m_apns));
    }
    if (m_is_primary_isSet) {
        obj.insert(QString("isPrimary"), ::OpenAPI::toJsonValue(m_is_primary));
    }
    if (m_slot_isSet) {
        obj.insert(QString("slot"), ::OpenAPI::toJsonValue(m_slot));
    }
    return obj;
}

QList<OAIUpdateDeviceCellularSims_request_sims_inner_apns_inner> OAIUpdateDeviceCellularSims_request_sims_inner::getApns() const {
    return m_apns;
}
void OAIUpdateDeviceCellularSims_request_sims_inner::setApns(const QList<OAIUpdateDeviceCellularSims_request_sims_inner_apns_inner> &apns) {
    m_apns = apns;
    m_apns_isSet = true;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::is_apns_Set() const{
    return m_apns_isSet;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::is_apns_Valid() const{
    return m_apns_isValid;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::isIsPrimary() const {
    return m_is_primary;
}
void OAIUpdateDeviceCellularSims_request_sims_inner::setIsPrimary(const bool &is_primary) {
    m_is_primary = is_primary;
    m_is_primary_isSet = true;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::is_is_primary_Set() const{
    return m_is_primary_isSet;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::is_is_primary_Valid() const{
    return m_is_primary_isValid;
}

QString OAIUpdateDeviceCellularSims_request_sims_inner::getSlot() const {
    return m_slot;
}
void OAIUpdateDeviceCellularSims_request_sims_inner::setSlot(const QString &slot) {
    m_slot = slot;
    m_slot_isSet = true;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::is_slot_Set() const{
    return m_slot_isSet;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::is_slot_Valid() const{
    return m_slot_isValid;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slot_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDeviceCellularSims_request_sims_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
