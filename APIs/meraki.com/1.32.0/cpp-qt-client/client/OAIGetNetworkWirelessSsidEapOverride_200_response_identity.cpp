/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkWirelessSsidEapOverride_200_response_identity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkWirelessSsidEapOverride_200_response_identity::OAIGetNetworkWirelessSsidEapOverride_200_response_identity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkWirelessSsidEapOverride_200_response_identity::OAIGetNetworkWirelessSsidEapOverride_200_response_identity() {
    this->initializeModel();
}

OAIGetNetworkWirelessSsidEapOverride_200_response_identity::~OAIGetNetworkWirelessSsidEapOverride_200_response_identity() {}

void OAIGetNetworkWirelessSsidEapOverride_200_response_identity::initializeModel() {

    m_retries_isSet = false;
    m_retries_isValid = false;

    m_timeout_isSet = false;
    m_timeout_isValid = false;
}

void OAIGetNetworkWirelessSsidEapOverride_200_response_identity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkWirelessSsidEapOverride_200_response_identity::fromJsonObject(QJsonObject json) {

    m_retries_isValid = ::OpenAPI::fromJsonValue(m_retries, json[QString("retries")]);
    m_retries_isSet = !json[QString("retries")].isNull() && m_retries_isValid;

    m_timeout_isValid = ::OpenAPI::fromJsonValue(m_timeout, json[QString("timeout")]);
    m_timeout_isSet = !json[QString("timeout")].isNull() && m_timeout_isValid;
}

QString OAIGetNetworkWirelessSsidEapOverride_200_response_identity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkWirelessSsidEapOverride_200_response_identity::asJsonObject() const {
    QJsonObject obj;
    if (m_retries_isSet) {
        obj.insert(QString("retries"), ::OpenAPI::toJsonValue(m_retries));
    }
    if (m_timeout_isSet) {
        obj.insert(QString("timeout"), ::OpenAPI::toJsonValue(m_timeout));
    }
    return obj;
}

qint32 OAIGetNetworkWirelessSsidEapOverride_200_response_identity::getRetries() const {
    return m_retries;
}
void OAIGetNetworkWirelessSsidEapOverride_200_response_identity::setRetries(const qint32 &retries) {
    m_retries = retries;
    m_retries_isSet = true;
}

bool OAIGetNetworkWirelessSsidEapOverride_200_response_identity::is_retries_Set() const{
    return m_retries_isSet;
}

bool OAIGetNetworkWirelessSsidEapOverride_200_response_identity::is_retries_Valid() const{
    return m_retries_isValid;
}

qint32 OAIGetNetworkWirelessSsidEapOverride_200_response_identity::getTimeout() const {
    return m_timeout;
}
void OAIGetNetworkWirelessSsidEapOverride_200_response_identity::setTimeout(const qint32 &timeout) {
    m_timeout = timeout;
    m_timeout_isSet = true;
}

bool OAIGetNetworkWirelessSsidEapOverride_200_response_identity::is_timeout_Set() const{
    return m_timeout_isSet;
}

bool OAIGetNetworkWirelessSsidEapOverride_200_response_identity::is_timeout_Valid() const{
    return m_timeout_isValid;
}

bool OAIGetNetworkWirelessSsidEapOverride_200_response_identity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retries_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timeout_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkWirelessSsidEapOverride_200_response_identity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
