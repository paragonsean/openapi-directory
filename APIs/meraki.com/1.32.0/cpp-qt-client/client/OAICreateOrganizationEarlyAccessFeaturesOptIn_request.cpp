/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationEarlyAccessFeaturesOptIn_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationEarlyAccessFeaturesOptIn_request::OAICreateOrganizationEarlyAccessFeaturesOptIn_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationEarlyAccessFeaturesOptIn_request::OAICreateOrganizationEarlyAccessFeaturesOptIn_request() {
    this->initializeModel();
}

OAICreateOrganizationEarlyAccessFeaturesOptIn_request::~OAICreateOrganizationEarlyAccessFeaturesOptIn_request() {}

void OAICreateOrganizationEarlyAccessFeaturesOptIn_request::initializeModel() {

    m_limit_scope_to_networks_isSet = false;
    m_limit_scope_to_networks_isValid = false;

    m_short_name_isSet = false;
    m_short_name_isValid = false;
}

void OAICreateOrganizationEarlyAccessFeaturesOptIn_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationEarlyAccessFeaturesOptIn_request::fromJsonObject(QJsonObject json) {

    m_limit_scope_to_networks_isValid = ::OpenAPI::fromJsonValue(m_limit_scope_to_networks, json[QString("limitScopeToNetworks")]);
    m_limit_scope_to_networks_isSet = !json[QString("limitScopeToNetworks")].isNull() && m_limit_scope_to_networks_isValid;

    m_short_name_isValid = ::OpenAPI::fromJsonValue(m_short_name, json[QString("shortName")]);
    m_short_name_isSet = !json[QString("shortName")].isNull() && m_short_name_isValid;
}

QString OAICreateOrganizationEarlyAccessFeaturesOptIn_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationEarlyAccessFeaturesOptIn_request::asJsonObject() const {
    QJsonObject obj;
    if (m_limit_scope_to_networks.size() > 0) {
        obj.insert(QString("limitScopeToNetworks"), ::OpenAPI::toJsonValue(m_limit_scope_to_networks));
    }
    if (m_short_name_isSet) {
        obj.insert(QString("shortName"), ::OpenAPI::toJsonValue(m_short_name));
    }
    return obj;
}

QList<QString> OAICreateOrganizationEarlyAccessFeaturesOptIn_request::getLimitScopeToNetworks() const {
    return m_limit_scope_to_networks;
}
void OAICreateOrganizationEarlyAccessFeaturesOptIn_request::setLimitScopeToNetworks(const QList<QString> &limit_scope_to_networks) {
    m_limit_scope_to_networks = limit_scope_to_networks;
    m_limit_scope_to_networks_isSet = true;
}

bool OAICreateOrganizationEarlyAccessFeaturesOptIn_request::is_limit_scope_to_networks_Set() const{
    return m_limit_scope_to_networks_isSet;
}

bool OAICreateOrganizationEarlyAccessFeaturesOptIn_request::is_limit_scope_to_networks_Valid() const{
    return m_limit_scope_to_networks_isValid;
}

QString OAICreateOrganizationEarlyAccessFeaturesOptIn_request::getShortName() const {
    return m_short_name;
}
void OAICreateOrganizationEarlyAccessFeaturesOptIn_request::setShortName(const QString &short_name) {
    m_short_name = short_name;
    m_short_name_isSet = true;
}

bool OAICreateOrganizationEarlyAccessFeaturesOptIn_request::is_short_name_Set() const{
    return m_short_name_isSet;
}

bool OAICreateOrganizationEarlyAccessFeaturesOptIn_request::is_short_name_Valid() const{
    return m_short_name_isValid;
}

bool OAICreateOrganizationEarlyAccessFeaturesOptIn_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_limit_scope_to_networks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationEarlyAccessFeaturesOptIn_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_short_name_isValid && true;
}

} // namespace OpenAPI
