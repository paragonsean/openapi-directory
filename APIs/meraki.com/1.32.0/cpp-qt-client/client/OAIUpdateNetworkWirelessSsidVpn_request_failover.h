/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkWirelessSsidVpn_request_failover.h
 *
 * Secondary VPN concentrator settings. This is only used when two VPN concentrators are configured on the SSID.
 */

#ifndef OAIUpdateNetworkWirelessSsidVpn_request_failover_H
#define OAIUpdateNetworkWirelessSsidVpn_request_failover_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateNetworkWirelessSsidVpn_request_failover : public OAIObject {
public:
    OAIUpdateNetworkWirelessSsidVpn_request_failover();
    OAIUpdateNetworkWirelessSsidVpn_request_failover(QString json);
    ~OAIUpdateNetworkWirelessSsidVpn_request_failover() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHeartbeatInterval() const;
    void setHeartbeatInterval(const qint32 &heartbeat_interval);
    bool is_heartbeat_interval_Set() const;
    bool is_heartbeat_interval_Valid() const;

    qint32 getIdleTimeout() const;
    void setIdleTimeout(const qint32 &idle_timeout);
    bool is_idle_timeout_Set() const;
    bool is_idle_timeout_Valid() const;

    QString getRequestIp() const;
    void setRequestIp(const QString &request_ip);
    bool is_request_ip_Set() const;
    bool is_request_ip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_heartbeat_interval;
    bool m_heartbeat_interval_isSet;
    bool m_heartbeat_interval_isValid;

    qint32 m_idle_timeout;
    bool m_idle_timeout_isSet;
    bool m_idle_timeout_isValid;

    QString m_request_ip;
    bool m_request_ip_isSet;
    bool m_request_ip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkWirelessSsidVpn_request_failover)

#endif // OAIUpdateNetworkWirelessSsidVpn_request_failover_H
