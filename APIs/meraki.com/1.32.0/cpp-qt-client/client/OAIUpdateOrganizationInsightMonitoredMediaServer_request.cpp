/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOrganizationInsightMonitoredMediaServer_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOrganizationInsightMonitoredMediaServer_request::OAIUpdateOrganizationInsightMonitoredMediaServer_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOrganizationInsightMonitoredMediaServer_request::OAIUpdateOrganizationInsightMonitoredMediaServer_request() {
    this->initializeModel();
}

OAIUpdateOrganizationInsightMonitoredMediaServer_request::~OAIUpdateOrganizationInsightMonitoredMediaServer_request() {}

void OAIUpdateOrganizationInsightMonitoredMediaServer_request::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_best_effort_monitoring_enabled_isSet = false;
    m_best_effort_monitoring_enabled_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIUpdateOrganizationInsightMonitoredMediaServer_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOrganizationInsightMonitoredMediaServer_request::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_best_effort_monitoring_enabled_isValid = ::OpenAPI::fromJsonValue(m_best_effort_monitoring_enabled, json[QString("bestEffortMonitoringEnabled")]);
    m_best_effort_monitoring_enabled_isSet = !json[QString("bestEffortMonitoringEnabled")].isNull() && m_best_effort_monitoring_enabled_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIUpdateOrganizationInsightMonitoredMediaServer_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOrganizationInsightMonitoredMediaServer_request::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_best_effort_monitoring_enabled_isSet) {
        obj.insert(QString("bestEffortMonitoringEnabled"), ::OpenAPI::toJsonValue(m_best_effort_monitoring_enabled));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIUpdateOrganizationInsightMonitoredMediaServer_request::getAddress() const {
    return m_address;
}
void OAIUpdateOrganizationInsightMonitoredMediaServer_request::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::is_address_Set() const{
    return m_address_isSet;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::is_address_Valid() const{
    return m_address_isValid;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::isBestEffortMonitoringEnabled() const {
    return m_best_effort_monitoring_enabled;
}
void OAIUpdateOrganizationInsightMonitoredMediaServer_request::setBestEffortMonitoringEnabled(const bool &best_effort_monitoring_enabled) {
    m_best_effort_monitoring_enabled = best_effort_monitoring_enabled;
    m_best_effort_monitoring_enabled_isSet = true;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::is_best_effort_monitoring_enabled_Set() const{
    return m_best_effort_monitoring_enabled_isSet;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::is_best_effort_monitoring_enabled_Valid() const{
    return m_best_effort_monitoring_enabled_isValid;
}

QString OAIUpdateOrganizationInsightMonitoredMediaServer_request::getName() const {
    return m_name;
}
void OAIUpdateOrganizationInsightMonitoredMediaServer_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_best_effort_monitoring_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOrganizationInsightMonitoredMediaServer_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
