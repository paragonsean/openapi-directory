/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1.h
 *
 * WAN 1 settings.
 */

#ifndef OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_H
#define OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_H

#include <QJsonObject>

#include "OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_pppoe.h"
#include "OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis.h"
#include "OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_vlanTagging.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_pppoe;
class OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis;
class OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_vlanTagging;

class OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1 : public OAIObject {
public:
    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1();
    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1(QString json);
    ~OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_pppoe getPppoe() const;
    void setPppoe(const OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_pppoe &pppoe);
    bool is_pppoe_Set() const;
    bool is_pppoe_Valid() const;

    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis getSvis() const;
    void setSvis(const OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis &svis);
    bool is_svis_Set() const;
    bool is_svis_Valid() const;

    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_vlanTagging getVlanTagging() const;
    void setVlanTagging(const OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_vlanTagging &vlan_tagging);
    bool is_vlan_tagging_Set() const;
    bool is_vlan_tagging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_pppoe m_pppoe;
    bool m_pppoe_isSet;
    bool m_pppoe_isValid;

    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis m_svis;
    bool m_svis_isSet;
    bool m_svis_isValid;

    OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_vlanTagging m_vlan_tagging;
    bool m_vlan_tagging_isSet;
    bool m_vlan_tagging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1)

#endif // OAIGetDeviceApplianceUplinksSettings_200_response_interfaces_wan1_H
