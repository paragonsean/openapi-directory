/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkSensorAlertsProfile_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkSensorAlertsProfile_request::OAIUpdateNetworkSensorAlertsProfile_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkSensorAlertsProfile_request::OAIUpdateNetworkSensorAlertsProfile_request() {
    this->initializeModel();
}

OAIUpdateNetworkSensorAlertsProfile_request::~OAIUpdateNetworkSensorAlertsProfile_request() {}

void OAIUpdateNetworkSensorAlertsProfile_request::initializeModel() {

    m_conditions_isSet = false;
    m_conditions_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_recipients_isSet = false;
    m_recipients_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_serials_isSet = false;
    m_serials_isValid = false;
}

void OAIUpdateNetworkSensorAlertsProfile_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkSensorAlertsProfile_request::fromJsonObject(QJsonObject json) {

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("conditions")]);
    m_conditions_isSet = !json[QString("conditions")].isNull() && m_conditions_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_recipients_isValid = ::OpenAPI::fromJsonValue(m_recipients, json[QString("recipients")]);
    m_recipients_isSet = !json[QString("recipients")].isNull() && m_recipients_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_serials_isValid = ::OpenAPI::fromJsonValue(m_serials, json[QString("serials")]);
    m_serials_isSet = !json[QString("serials")].isNull() && m_serials_isValid;
}

QString OAIUpdateNetworkSensorAlertsProfile_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkSensorAlertsProfile_request::asJsonObject() const {
    QJsonObject obj;
    if (m_conditions.size() > 0) {
        obj.insert(QString("conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_recipients.isSet()) {
        obj.insert(QString("recipients"), ::OpenAPI::toJsonValue(m_recipients));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_serials.size() > 0) {
        obj.insert(QString("serials"), ::OpenAPI::toJsonValue(m_serials));
    }
    return obj;
}

QList<OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner> OAIUpdateNetworkSensorAlertsProfile_request::getConditions() const {
    return m_conditions;
}
void OAIUpdateNetworkSensorAlertsProfile_request::setConditions(const QList<OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner> &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_conditions_Valid() const{
    return m_conditions_isValid;
}

QString OAIUpdateNetworkSensorAlertsProfile_request::getName() const {
    return m_name;
}
void OAIUpdateNetworkSensorAlertsProfile_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_name_Valid() const{
    return m_name_isValid;
}

OAIGetNetworkSensorAlertsProfiles_200_response_inner_recipients OAIUpdateNetworkSensorAlertsProfile_request::getRecipients() const {
    return m_recipients;
}
void OAIUpdateNetworkSensorAlertsProfile_request::setRecipients(const OAIGetNetworkSensorAlertsProfiles_200_response_inner_recipients &recipients) {
    m_recipients = recipients;
    m_recipients_isSet = true;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_recipients_Set() const{
    return m_recipients_isSet;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_recipients_Valid() const{
    return m_recipients_isValid;
}

OAICreateNetworkSensorAlertsProfile_request_schedule OAIUpdateNetworkSensorAlertsProfile_request::getSchedule() const {
    return m_schedule;
}
void OAIUpdateNetworkSensorAlertsProfile_request::setSchedule(const OAICreateNetworkSensorAlertsProfile_request_schedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QList<QString> OAIUpdateNetworkSensorAlertsProfile_request::getSerials() const {
    return m_serials;
}
void OAIUpdateNetworkSensorAlertsProfile_request::setSerials(const QList<QString> &serials) {
    m_serials = serials;
    m_serials_isSet = true;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_serials_Set() const{
    return m_serials_isSet;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::is_serials_Valid() const{
    return m_serials_isValid;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conditions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipients.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_serials.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkSensorAlertsProfile_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
