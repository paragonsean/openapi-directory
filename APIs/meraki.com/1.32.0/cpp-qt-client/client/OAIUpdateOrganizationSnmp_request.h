/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateOrganizationSnmp_request.h
 *
 * 
 */

#ifndef OAIUpdateOrganizationSnmp_request_H
#define OAIUpdateOrganizationSnmp_request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateOrganizationSnmp_request : public OAIObject {
public:
    OAIUpdateOrganizationSnmp_request();
    OAIUpdateOrganizationSnmp_request(QString json);
    ~OAIUpdateOrganizationSnmp_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getPeerIps() const;
    void setPeerIps(const QList<QString> &peer_ips);
    bool is_peer_ips_Set() const;
    bool is_peer_ips_Valid() const;

    bool isV2cEnabled() const;
    void setV2cEnabled(const bool &v2c_enabled);
    bool is_v2c_enabled_Set() const;
    bool is_v2c_enabled_Valid() const;

    QString getV3AuthMode() const;
    void setV3AuthMode(const QString &v3_auth_mode);
    bool is_v3_auth_mode_Set() const;
    bool is_v3_auth_mode_Valid() const;

    QString getV3AuthPass() const;
    void setV3AuthPass(const QString &v3_auth_pass);
    bool is_v3_auth_pass_Set() const;
    bool is_v3_auth_pass_Valid() const;

    bool isV3Enabled() const;
    void setV3Enabled(const bool &v3_enabled);
    bool is_v3_enabled_Set() const;
    bool is_v3_enabled_Valid() const;

    QString getV3PrivMode() const;
    void setV3PrivMode(const QString &v3_priv_mode);
    bool is_v3_priv_mode_Set() const;
    bool is_v3_priv_mode_Valid() const;

    QString getV3PrivPass() const;
    void setV3PrivPass(const QString &v3_priv_pass);
    bool is_v3_priv_pass_Set() const;
    bool is_v3_priv_pass_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_peer_ips;
    bool m_peer_ips_isSet;
    bool m_peer_ips_isValid;

    bool m_v2c_enabled;
    bool m_v2c_enabled_isSet;
    bool m_v2c_enabled_isValid;

    QString m_v3_auth_mode;
    bool m_v3_auth_mode_isSet;
    bool m_v3_auth_mode_isValid;

    QString m_v3_auth_pass;
    bool m_v3_auth_pass_isSet;
    bool m_v3_auth_pass_isValid;

    bool m_v3_enabled;
    bool m_v3_enabled_isSet;
    bool m_v3_enabled_isValid;

    QString m_v3_priv_mode;
    bool m_v3_priv_mode_isSet;
    bool m_v3_priv_mode_isValid;

    QString m_v3_priv_pass;
    bool m_v3_priv_pass_isSet;
    bool m_v3_priv_pass_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateOrganizationSnmp_request)

#endif // OAIUpdateOrganizationSnmp_request_H
