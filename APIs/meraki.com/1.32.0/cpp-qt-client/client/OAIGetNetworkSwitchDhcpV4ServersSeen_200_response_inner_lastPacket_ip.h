/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip.h
 *
 * Additional IP attributes of the packet.
 */

#ifndef OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_H
#define OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_H

#include <QJsonObject>

#include "OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_dscp.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_dscp;

class OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip : public OAIObject {
public:
    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip();
    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip(QString json);
    ~OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_dscp getDscp() const;
    void setDscp(const OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_dscp &dscp);
    bool is_dscp_Set() const;
    bool is_dscp_Valid() const;

    qint32 getHeaderLength() const;
    void setHeaderLength(const qint32 &header_length);
    bool is_header_length_Set() const;
    bool is_header_length_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    qint32 getProtocol() const;
    void setProtocol(const qint32 &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    qint32 getTtl() const;
    void setTtl(const qint32 &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_dscp m_dscp;
    bool m_dscp_isSet;
    bool m_dscp_isValid;

    qint32 m_header_length;
    bool m_header_length_isSet;
    bool m_header_length_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    qint32 m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    qint32 m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip)

#endif // OAIGetNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip_H
