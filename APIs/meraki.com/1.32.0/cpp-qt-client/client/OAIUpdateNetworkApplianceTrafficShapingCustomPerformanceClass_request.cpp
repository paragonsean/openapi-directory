/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request() {
    this->initializeModel();
}

OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::~OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request() {}

void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::initializeModel() {

    m_max_jitter_isSet = false;
    m_max_jitter_isValid = false;

    m_max_latency_isSet = false;
    m_max_latency_isValid = false;

    m_max_loss_percentage_isSet = false;
    m_max_loss_percentage_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::fromJsonObject(QJsonObject json) {

    m_max_jitter_isValid = ::OpenAPI::fromJsonValue(m_max_jitter, json[QString("maxJitter")]);
    m_max_jitter_isSet = !json[QString("maxJitter")].isNull() && m_max_jitter_isValid;

    m_max_latency_isValid = ::OpenAPI::fromJsonValue(m_max_latency, json[QString("maxLatency")]);
    m_max_latency_isSet = !json[QString("maxLatency")].isNull() && m_max_latency_isValid;

    m_max_loss_percentage_isValid = ::OpenAPI::fromJsonValue(m_max_loss_percentage, json[QString("maxLossPercentage")]);
    m_max_loss_percentage_isSet = !json[QString("maxLossPercentage")].isNull() && m_max_loss_percentage_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::asJsonObject() const {
    QJsonObject obj;
    if (m_max_jitter_isSet) {
        obj.insert(QString("maxJitter"), ::OpenAPI::toJsonValue(m_max_jitter));
    }
    if (m_max_latency_isSet) {
        obj.insert(QString("maxLatency"), ::OpenAPI::toJsonValue(m_max_latency));
    }
    if (m_max_loss_percentage_isSet) {
        obj.insert(QString("maxLossPercentage"), ::OpenAPI::toJsonValue(m_max_loss_percentage));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

qint32 OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::getMaxJitter() const {
    return m_max_jitter;
}
void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::setMaxJitter(const qint32 &max_jitter) {
    m_max_jitter = max_jitter;
    m_max_jitter_isSet = true;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_max_jitter_Set() const{
    return m_max_jitter_isSet;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_max_jitter_Valid() const{
    return m_max_jitter_isValid;
}

qint32 OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::getMaxLatency() const {
    return m_max_latency;
}
void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::setMaxLatency(const qint32 &max_latency) {
    m_max_latency = max_latency;
    m_max_latency_isSet = true;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_max_latency_Set() const{
    return m_max_latency_isSet;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_max_latency_Valid() const{
    return m_max_latency_isValid;
}

qint32 OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::getMaxLossPercentage() const {
    return m_max_loss_percentage;
}
void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::setMaxLossPercentage(const qint32 &max_loss_percentage) {
    m_max_loss_percentage = max_loss_percentage;
    m_max_loss_percentage_isSet = true;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_max_loss_percentage_Set() const{
    return m_max_loss_percentage_isSet;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_max_loss_percentage_Valid() const{
    return m_max_loss_percentage_isValid;
}

QString OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::getName() const {
    return m_name;
}
void OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_jitter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_latency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_loss_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkApplianceTrafficShapingCustomPerformanceClass_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
