/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVmxNetworkDevicesClaim_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVmxNetworkDevicesClaim_request::OAIVmxNetworkDevicesClaim_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVmxNetworkDevicesClaim_request::OAIVmxNetworkDevicesClaim_request() {
    this->initializeModel();
}

OAIVmxNetworkDevicesClaim_request::~OAIVmxNetworkDevicesClaim_request() {}

void OAIVmxNetworkDevicesClaim_request::initializeModel() {

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIVmxNetworkDevicesClaim_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVmxNetworkDevicesClaim_request::fromJsonObject(QJsonObject json) {

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIVmxNetworkDevicesClaim_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVmxNetworkDevicesClaim_request::asJsonObject() const {
    QJsonObject obj;
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIVmxNetworkDevicesClaim_request::getSize() const {
    return m_size;
}
void OAIVmxNetworkDevicesClaim_request::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIVmxNetworkDevicesClaim_request::is_size_Set() const{
    return m_size_isSet;
}

bool OAIVmxNetworkDevicesClaim_request::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIVmxNetworkDevicesClaim_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVmxNetworkDevicesClaim_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_size_isValid && true;
}

} // namespace OpenAPI
