/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetOrganizationWebhooksLogs_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetOrganizationWebhooksLogs_200_response_inner_H
#define OAIGetOrganizationWebhooksLogs_200_response_inner_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetOrganizationWebhooksLogs_200_response_inner : public OAIObject {
public:
    OAIGetOrganizationWebhooksLogs_200_response_inner();
    OAIGetOrganizationWebhooksLogs_200_response_inner(QString json);
    ~OAIGetOrganizationWebhooksLogs_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlertType() const;
    void setAlertType(const QString &alert_type);
    bool is_alert_type_Set() const;
    bool is_alert_type_Valid() const;

    QDateTime getLoggedAt() const;
    void setLoggedAt(const QDateTime &logged_at);
    bool is_logged_at_Set() const;
    bool is_logged_at_Valid() const;

    QString getNetworkId() const;
    void setNetworkId(const QString &network_id);
    bool is_network_id_Set() const;
    bool is_network_id_Valid() const;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    qint32 getResponseCode() const;
    void setResponseCode(const qint32 &response_code);
    bool is_response_code_Set() const;
    bool is_response_code_Valid() const;

    qint32 getResponseDuration() const;
    void setResponseDuration(const qint32 &response_duration);
    bool is_response_duration_Set() const;
    bool is_response_duration_Valid() const;

    QDateTime getSentAt() const;
    void setSentAt(const QDateTime &sent_at);
    bool is_sent_at_Set() const;
    bool is_sent_at_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alert_type;
    bool m_alert_type_isSet;
    bool m_alert_type_isValid;

    QDateTime m_logged_at;
    bool m_logged_at_isSet;
    bool m_logged_at_isValid;

    QString m_network_id;
    bool m_network_id_isSet;
    bool m_network_id_isValid;

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    qint32 m_response_code;
    bool m_response_code_isSet;
    bool m_response_code_isValid;

    qint32 m_response_duration;
    bool m_response_duration_isSet;
    bool m_response_duration_isValid;

    QDateTime m_sent_at;
    bool m_sent_at_isSet;
    bool m_sent_at_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetOrganizationWebhooksLogs_200_response_inner)

#endif // OAIGetOrganizationWebhooksLogs_200_response_inner_H
