/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty() {
    this->initializeModel();
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::~OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty() {}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::initializeModel() {

    m_access_list_isSet = false;
    m_access_list_isValid = false;

    m_authentication_isSet = false;
    m_authentication_isValid = false;

    m_authorization_isSet = false;
    m_authorization_isValid = false;

    m_end_line_number_isSet = false;
    m_end_line_number_isValid = false;

    m_rotary_number_isSet = false;
    m_rotary_number_isValid = false;

    m_start_line_number_isSet = false;
    m_start_line_number_isValid = false;
}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::fromJsonObject(QJsonObject json) {

    m_access_list_isValid = ::OpenAPI::fromJsonValue(m_access_list, json[QString("accessList")]);
    m_access_list_isSet = !json[QString("accessList")].isNull() && m_access_list_isValid;

    m_authentication_isValid = ::OpenAPI::fromJsonValue(m_authentication, json[QString("authentication")]);
    m_authentication_isSet = !json[QString("authentication")].isNull() && m_authentication_isValid;

    m_authorization_isValid = ::OpenAPI::fromJsonValue(m_authorization, json[QString("authorization")]);
    m_authorization_isSet = !json[QString("authorization")].isNull() && m_authorization_isValid;

    m_end_line_number_isValid = ::OpenAPI::fromJsonValue(m_end_line_number, json[QString("endLineNumber")]);
    m_end_line_number_isSet = !json[QString("endLineNumber")].isNull() && m_end_line_number_isValid;

    m_rotary_number_isValid = ::OpenAPI::fromJsonValue(m_rotary_number, json[QString("rotaryNumber")]);
    m_rotary_number_isSet = !json[QString("rotaryNumber")].isNull() && m_rotary_number_isValid;

    m_start_line_number_isValid = ::OpenAPI::fromJsonValue(m_start_line_number, json[QString("startLineNumber")]);
    m_start_line_number_isSet = !json[QString("startLineNumber")].isNull() && m_start_line_number_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::asJsonObject() const {
    QJsonObject obj;
    if (m_access_list.isSet()) {
        obj.insert(QString("accessList"), ::OpenAPI::toJsonValue(m_access_list));
    }
    if (m_authentication.isSet()) {
        obj.insert(QString("authentication"), ::OpenAPI::toJsonValue(m_authentication));
    }
    if (m_authorization.isSet()) {
        obj.insert(QString("authorization"), ::OpenAPI::toJsonValue(m_authorization));
    }
    if (m_end_line_number_isSet) {
        obj.insert(QString("endLineNumber"), ::OpenAPI::toJsonValue(m_end_line_number));
    }
    if (m_rotary_number_isSet) {
        obj.insert(QString("rotaryNumber"), ::OpenAPI::toJsonValue(m_rotary_number));
    }
    if (m_start_line_number_isSet) {
        obj.insert(QString("startLineNumber"), ::OpenAPI::toJsonValue(m_start_line_number));
    }
    return obj;
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty_accessList OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::getAccessList() const {
    return m_access_list;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::setAccessList(const OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty_accessList &access_list) {
    m_access_list = access_list;
    m_access_list_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_access_list_Set() const{
    return m_access_list_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_access_list_Valid() const{
    return m_access_list_isValid;
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty_authentication OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::getAuthentication() const {
    return m_authentication;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::setAuthentication(const OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty_authentication &authentication) {
    m_authentication = authentication;
    m_authentication_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_authentication_Set() const{
    return m_authentication_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_authentication_Valid() const{
    return m_authentication_isValid;
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty_authorization OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::getAuthorization() const {
    return m_authorization;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::setAuthorization(const OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty_authorization &authorization) {
    m_authorization = authorization;
    m_authorization_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_authorization_Set() const{
    return m_authorization_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_authorization_Valid() const{
    return m_authorization_isValid;
}

qint32 OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::getEndLineNumber() const {
    return m_end_line_number;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::setEndLineNumber(const qint32 &end_line_number) {
    m_end_line_number = end_line_number;
    m_end_line_number_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_end_line_number_Set() const{
    return m_end_line_number_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_end_line_number_Valid() const{
    return m_end_line_number_isValid;
}

qint32 OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::getRotaryNumber() const {
    return m_rotary_number;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::setRotaryNumber(const qint32 &rotary_number) {
    m_rotary_number = rotary_number;
    m_rotary_number_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_rotary_number_Set() const{
    return m_rotary_number_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_rotary_number_Valid() const{
    return m_rotary_number_isValid;
}

qint32 OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::getStartLineNumber() const {
    return m_start_line_number;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::setStartLineNumber(const qint32 &start_line_number) {
    m_start_line_number = start_line_number;
    m_start_line_number_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_start_line_number_Set() const{
    return m_start_line_number_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::is_start_line_number_Valid() const{
    return m_start_line_number_isValid;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_authentication.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorization.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_line_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rotary_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_line_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_request_devices_inner_vty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
