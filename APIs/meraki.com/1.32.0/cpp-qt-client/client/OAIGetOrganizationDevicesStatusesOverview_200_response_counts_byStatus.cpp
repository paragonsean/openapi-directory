/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus() {
    this->initializeModel();
}

OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::~OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus() {}

void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::initializeModel() {

    m_alerting_isSet = false;
    m_alerting_isValid = false;

    m_dormant_isSet = false;
    m_dormant_isValid = false;

    m_offline_isSet = false;
    m_offline_isValid = false;

    m_online_isSet = false;
    m_online_isValid = false;
}

void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::fromJsonObject(QJsonObject json) {

    m_alerting_isValid = ::OpenAPI::fromJsonValue(m_alerting, json[QString("alerting")]);
    m_alerting_isSet = !json[QString("alerting")].isNull() && m_alerting_isValid;

    m_dormant_isValid = ::OpenAPI::fromJsonValue(m_dormant, json[QString("dormant")]);
    m_dormant_isSet = !json[QString("dormant")].isNull() && m_dormant_isValid;

    m_offline_isValid = ::OpenAPI::fromJsonValue(m_offline, json[QString("offline")]);
    m_offline_isSet = !json[QString("offline")].isNull() && m_offline_isValid;

    m_online_isValid = ::OpenAPI::fromJsonValue(m_online, json[QString("online")]);
    m_online_isSet = !json[QString("online")].isNull() && m_online_isValid;
}

QString OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_alerting_isSet) {
        obj.insert(QString("alerting"), ::OpenAPI::toJsonValue(m_alerting));
    }
    if (m_dormant_isSet) {
        obj.insert(QString("dormant"), ::OpenAPI::toJsonValue(m_dormant));
    }
    if (m_offline_isSet) {
        obj.insert(QString("offline"), ::OpenAPI::toJsonValue(m_offline));
    }
    if (m_online_isSet) {
        obj.insert(QString("online"), ::OpenAPI::toJsonValue(m_online));
    }
    return obj;
}

qint32 OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::getAlerting() const {
    return m_alerting;
}
void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::setAlerting(const qint32 &alerting) {
    m_alerting = alerting;
    m_alerting_isSet = true;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_alerting_Set() const{
    return m_alerting_isSet;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_alerting_Valid() const{
    return m_alerting_isValid;
}

qint32 OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::getDormant() const {
    return m_dormant;
}
void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::setDormant(const qint32 &dormant) {
    m_dormant = dormant;
    m_dormant_isSet = true;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_dormant_Set() const{
    return m_dormant_isSet;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_dormant_Valid() const{
    return m_dormant_isValid;
}

qint32 OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::getOffline() const {
    return m_offline;
}
void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::setOffline(const qint32 &offline) {
    m_offline = offline;
    m_offline_isSet = true;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_offline_Set() const{
    return m_offline_isSet;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_offline_Valid() const{
    return m_offline_isValid;
}

qint32 OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::getOnline() const {
    return m_online;
}
void OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::setOnline(const qint32 &online) {
    m_online = online;
    m_online_isSet = true;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_online_Set() const{
    return m_online_isSet;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::is_online_Valid() const{
    return m_online_isValid;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alerting_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dormant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationDevicesStatusesOverview_200_response_counts_byStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
