/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOrganizationPolicyObjectsGroup_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOrganizationPolicyObjectsGroup_request::OAIUpdateOrganizationPolicyObjectsGroup_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOrganizationPolicyObjectsGroup_request::OAIUpdateOrganizationPolicyObjectsGroup_request() {
    this->initializeModel();
}

OAIUpdateOrganizationPolicyObjectsGroup_request::~OAIUpdateOrganizationPolicyObjectsGroup_request() {}

void OAIUpdateOrganizationPolicyObjectsGroup_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_object_ids_isSet = false;
    m_object_ids_isValid = false;
}

void OAIUpdateOrganizationPolicyObjectsGroup_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOrganizationPolicyObjectsGroup_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_object_ids_isValid = ::OpenAPI::fromJsonValue(m_object_ids, json[QString("objectIds")]);
    m_object_ids_isSet = !json[QString("objectIds")].isNull() && m_object_ids_isValid;
}

QString OAIUpdateOrganizationPolicyObjectsGroup_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOrganizationPolicyObjectsGroup_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_object_ids.size() > 0) {
        obj.insert(QString("objectIds"), ::OpenAPI::toJsonValue(m_object_ids));
    }
    return obj;
}

QString OAIUpdateOrganizationPolicyObjectsGroup_request::getName() const {
    return m_name;
}
void OAIUpdateOrganizationPolicyObjectsGroup_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateOrganizationPolicyObjectsGroup_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateOrganizationPolicyObjectsGroup_request::is_name_Valid() const{
    return m_name_isValid;
}

QList<qint32> OAIUpdateOrganizationPolicyObjectsGroup_request::getObjectIds() const {
    return m_object_ids;
}
void OAIUpdateOrganizationPolicyObjectsGroup_request::setObjectIds(const QList<qint32> &object_ids) {
    m_object_ids = object_ids;
    m_object_ids_isSet = true;
}

bool OAIUpdateOrganizationPolicyObjectsGroup_request::is_object_ids_Set() const{
    return m_object_ids_isSet;
}

bool OAIUpdateOrganizationPolicyObjectsGroup_request::is_object_ids_Valid() const{
    return m_object_ids_isValid;
}

bool OAIUpdateOrganizationPolicyObjectsGroup_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOrganizationPolicyObjectsGroup_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
