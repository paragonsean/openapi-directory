/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination.h
 *
 * Destination of &#39;custom&#39; type traffic filter
 */

#ifndef OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination_H
#define OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination : public OAIObject {
public:
    OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination();
    OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination(QString json);
    ~OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCidr() const;
    void setCidr(const QString &cidr);
    bool is_cidr_Set() const;
    bool is_cidr_Valid() const;

    QString getPort() const;
    void setPort(const QString &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cidr;
    bool m_cidr_isSet;
    bool m_cidr_isValid;

    QString m_port;
    bool m_port_isSet;
    bool m_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination)

#endif // OAIGetNetworkApplianceTrafficShapingUplinkSelection_200_response_wanTrafficUplinkPreferences_inner_trafficFilters_inner_value_destination_H
