/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationBrandingPolicy_request_helpSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationBrandingPolicy_request_helpSettings::OAICreateOrganizationBrandingPolicy_request_helpSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationBrandingPolicy_request_helpSettings::OAICreateOrganizationBrandingPolicy_request_helpSettings() {
    this->initializeModel();
}

OAICreateOrganizationBrandingPolicy_request_helpSettings::~OAICreateOrganizationBrandingPolicy_request_helpSettings() {}

void OAICreateOrganizationBrandingPolicy_request_helpSettings::initializeModel() {

    m_api_docs_subtab_isSet = false;
    m_api_docs_subtab_isValid = false;

    m_cases_subtab_isSet = false;
    m_cases_subtab_isValid = false;

    m_cisco_meraki_product_documentation_isSet = false;
    m_cisco_meraki_product_documentation_isValid = false;

    m_community_subtab_isSet = false;
    m_community_subtab_isValid = false;

    m_data_protection_requests_subtab_isSet = false;
    m_data_protection_requests_subtab_isValid = false;

    m_firewall_info_subtab_isSet = false;
    m_firewall_info_subtab_isValid = false;

    m_get_help_subtab_isSet = false;
    m_get_help_subtab_isValid = false;

    m_get_help_subtab_knowledge_base_search_isSet = false;
    m_get_help_subtab_knowledge_base_search_isValid = false;

    m_hardware_replacements_subtab_isSet = false;
    m_hardware_replacements_subtab_isValid = false;

    m_help_tab_isSet = false;
    m_help_tab_isValid = false;

    m_help_widget_isSet = false;
    m_help_widget_isValid = false;

    m_new_features_subtab_isSet = false;
    m_new_features_subtab_isValid = false;

    m_sm_forums_isSet = false;
    m_sm_forums_isValid = false;

    m_support_contact_info_isSet = false;
    m_support_contact_info_isValid = false;

    m_universal_search_knowledge_base_search_isSet = false;
    m_universal_search_knowledge_base_search_isValid = false;
}

void OAICreateOrganizationBrandingPolicy_request_helpSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationBrandingPolicy_request_helpSettings::fromJsonObject(QJsonObject json) {

    m_api_docs_subtab_isValid = ::OpenAPI::fromJsonValue(m_api_docs_subtab, json[QString("apiDocsSubtab")]);
    m_api_docs_subtab_isSet = !json[QString("apiDocsSubtab")].isNull() && m_api_docs_subtab_isValid;

    m_cases_subtab_isValid = ::OpenAPI::fromJsonValue(m_cases_subtab, json[QString("casesSubtab")]);
    m_cases_subtab_isSet = !json[QString("casesSubtab")].isNull() && m_cases_subtab_isValid;

    m_cisco_meraki_product_documentation_isValid = ::OpenAPI::fromJsonValue(m_cisco_meraki_product_documentation, json[QString("ciscoMerakiProductDocumentation")]);
    m_cisco_meraki_product_documentation_isSet = !json[QString("ciscoMerakiProductDocumentation")].isNull() && m_cisco_meraki_product_documentation_isValid;

    m_community_subtab_isValid = ::OpenAPI::fromJsonValue(m_community_subtab, json[QString("communitySubtab")]);
    m_community_subtab_isSet = !json[QString("communitySubtab")].isNull() && m_community_subtab_isValid;

    m_data_protection_requests_subtab_isValid = ::OpenAPI::fromJsonValue(m_data_protection_requests_subtab, json[QString("dataProtectionRequestsSubtab")]);
    m_data_protection_requests_subtab_isSet = !json[QString("dataProtectionRequestsSubtab")].isNull() && m_data_protection_requests_subtab_isValid;

    m_firewall_info_subtab_isValid = ::OpenAPI::fromJsonValue(m_firewall_info_subtab, json[QString("firewallInfoSubtab")]);
    m_firewall_info_subtab_isSet = !json[QString("firewallInfoSubtab")].isNull() && m_firewall_info_subtab_isValid;

    m_get_help_subtab_isValid = ::OpenAPI::fromJsonValue(m_get_help_subtab, json[QString("getHelpSubtab")]);
    m_get_help_subtab_isSet = !json[QString("getHelpSubtab")].isNull() && m_get_help_subtab_isValid;

    m_get_help_subtab_knowledge_base_search_isValid = ::OpenAPI::fromJsonValue(m_get_help_subtab_knowledge_base_search, json[QString("getHelpSubtabKnowledgeBaseSearch")]);
    m_get_help_subtab_knowledge_base_search_isSet = !json[QString("getHelpSubtabKnowledgeBaseSearch")].isNull() && m_get_help_subtab_knowledge_base_search_isValid;

    m_hardware_replacements_subtab_isValid = ::OpenAPI::fromJsonValue(m_hardware_replacements_subtab, json[QString("hardwareReplacementsSubtab")]);
    m_hardware_replacements_subtab_isSet = !json[QString("hardwareReplacementsSubtab")].isNull() && m_hardware_replacements_subtab_isValid;

    m_help_tab_isValid = ::OpenAPI::fromJsonValue(m_help_tab, json[QString("helpTab")]);
    m_help_tab_isSet = !json[QString("helpTab")].isNull() && m_help_tab_isValid;

    m_help_widget_isValid = ::OpenAPI::fromJsonValue(m_help_widget, json[QString("helpWidget")]);
    m_help_widget_isSet = !json[QString("helpWidget")].isNull() && m_help_widget_isValid;

    m_new_features_subtab_isValid = ::OpenAPI::fromJsonValue(m_new_features_subtab, json[QString("newFeaturesSubtab")]);
    m_new_features_subtab_isSet = !json[QString("newFeaturesSubtab")].isNull() && m_new_features_subtab_isValid;

    m_sm_forums_isValid = ::OpenAPI::fromJsonValue(m_sm_forums, json[QString("smForums")]);
    m_sm_forums_isSet = !json[QString("smForums")].isNull() && m_sm_forums_isValid;

    m_support_contact_info_isValid = ::OpenAPI::fromJsonValue(m_support_contact_info, json[QString("supportContactInfo")]);
    m_support_contact_info_isSet = !json[QString("supportContactInfo")].isNull() && m_support_contact_info_isValid;

    m_universal_search_knowledge_base_search_isValid = ::OpenAPI::fromJsonValue(m_universal_search_knowledge_base_search, json[QString("universalSearchKnowledgeBaseSearch")]);
    m_universal_search_knowledge_base_search_isSet = !json[QString("universalSearchKnowledgeBaseSearch")].isNull() && m_universal_search_knowledge_base_search_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationBrandingPolicy_request_helpSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_api_docs_subtab_isSet) {
        obj.insert(QString("apiDocsSubtab"), ::OpenAPI::toJsonValue(m_api_docs_subtab));
    }
    if (m_cases_subtab_isSet) {
        obj.insert(QString("casesSubtab"), ::OpenAPI::toJsonValue(m_cases_subtab));
    }
    if (m_cisco_meraki_product_documentation_isSet) {
        obj.insert(QString("ciscoMerakiProductDocumentation"), ::OpenAPI::toJsonValue(m_cisco_meraki_product_documentation));
    }
    if (m_community_subtab_isSet) {
        obj.insert(QString("communitySubtab"), ::OpenAPI::toJsonValue(m_community_subtab));
    }
    if (m_data_protection_requests_subtab_isSet) {
        obj.insert(QString("dataProtectionRequestsSubtab"), ::OpenAPI::toJsonValue(m_data_protection_requests_subtab));
    }
    if (m_firewall_info_subtab_isSet) {
        obj.insert(QString("firewallInfoSubtab"), ::OpenAPI::toJsonValue(m_firewall_info_subtab));
    }
    if (m_get_help_subtab_isSet) {
        obj.insert(QString("getHelpSubtab"), ::OpenAPI::toJsonValue(m_get_help_subtab));
    }
    if (m_get_help_subtab_knowledge_base_search_isSet) {
        obj.insert(QString("getHelpSubtabKnowledgeBaseSearch"), ::OpenAPI::toJsonValue(m_get_help_subtab_knowledge_base_search));
    }
    if (m_hardware_replacements_subtab_isSet) {
        obj.insert(QString("hardwareReplacementsSubtab"), ::OpenAPI::toJsonValue(m_hardware_replacements_subtab));
    }
    if (m_help_tab_isSet) {
        obj.insert(QString("helpTab"), ::OpenAPI::toJsonValue(m_help_tab));
    }
    if (m_help_widget_isSet) {
        obj.insert(QString("helpWidget"), ::OpenAPI::toJsonValue(m_help_widget));
    }
    if (m_new_features_subtab_isSet) {
        obj.insert(QString("newFeaturesSubtab"), ::OpenAPI::toJsonValue(m_new_features_subtab));
    }
    if (m_sm_forums_isSet) {
        obj.insert(QString("smForums"), ::OpenAPI::toJsonValue(m_sm_forums));
    }
    if (m_support_contact_info_isSet) {
        obj.insert(QString("supportContactInfo"), ::OpenAPI::toJsonValue(m_support_contact_info));
    }
    if (m_universal_search_knowledge_base_search_isSet) {
        obj.insert(QString("universalSearchKnowledgeBaseSearch"), ::OpenAPI::toJsonValue(m_universal_search_knowledge_base_search));
    }
    return obj;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getApiDocsSubtab() const {
    return m_api_docs_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setApiDocsSubtab(const QString &api_docs_subtab) {
    m_api_docs_subtab = api_docs_subtab;
    m_api_docs_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_api_docs_subtab_Set() const{
    return m_api_docs_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_api_docs_subtab_Valid() const{
    return m_api_docs_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getCasesSubtab() const {
    return m_cases_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setCasesSubtab(const QString &cases_subtab) {
    m_cases_subtab = cases_subtab;
    m_cases_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_cases_subtab_Set() const{
    return m_cases_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_cases_subtab_Valid() const{
    return m_cases_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getCiscoMerakiProductDocumentation() const {
    return m_cisco_meraki_product_documentation;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setCiscoMerakiProductDocumentation(const QString &cisco_meraki_product_documentation) {
    m_cisco_meraki_product_documentation = cisco_meraki_product_documentation;
    m_cisco_meraki_product_documentation_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_cisco_meraki_product_documentation_Set() const{
    return m_cisco_meraki_product_documentation_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_cisco_meraki_product_documentation_Valid() const{
    return m_cisco_meraki_product_documentation_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getCommunitySubtab() const {
    return m_community_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setCommunitySubtab(const QString &community_subtab) {
    m_community_subtab = community_subtab;
    m_community_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_community_subtab_Set() const{
    return m_community_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_community_subtab_Valid() const{
    return m_community_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getDataProtectionRequestsSubtab() const {
    return m_data_protection_requests_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setDataProtectionRequestsSubtab(const QString &data_protection_requests_subtab) {
    m_data_protection_requests_subtab = data_protection_requests_subtab;
    m_data_protection_requests_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_data_protection_requests_subtab_Set() const{
    return m_data_protection_requests_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_data_protection_requests_subtab_Valid() const{
    return m_data_protection_requests_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getFirewallInfoSubtab() const {
    return m_firewall_info_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setFirewallInfoSubtab(const QString &firewall_info_subtab) {
    m_firewall_info_subtab = firewall_info_subtab;
    m_firewall_info_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_firewall_info_subtab_Set() const{
    return m_firewall_info_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_firewall_info_subtab_Valid() const{
    return m_firewall_info_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getGetHelpSubtab() const {
    return m_get_help_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setGetHelpSubtab(const QString &get_help_subtab) {
    m_get_help_subtab = get_help_subtab;
    m_get_help_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_get_help_subtab_Set() const{
    return m_get_help_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_get_help_subtab_Valid() const{
    return m_get_help_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getGetHelpSubtabKnowledgeBaseSearch() const {
    return m_get_help_subtab_knowledge_base_search;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setGetHelpSubtabKnowledgeBaseSearch(const QString &get_help_subtab_knowledge_base_search) {
    m_get_help_subtab_knowledge_base_search = get_help_subtab_knowledge_base_search;
    m_get_help_subtab_knowledge_base_search_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_get_help_subtab_knowledge_base_search_Set() const{
    return m_get_help_subtab_knowledge_base_search_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_get_help_subtab_knowledge_base_search_Valid() const{
    return m_get_help_subtab_knowledge_base_search_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getHardwareReplacementsSubtab() const {
    return m_hardware_replacements_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setHardwareReplacementsSubtab(const QString &hardware_replacements_subtab) {
    m_hardware_replacements_subtab = hardware_replacements_subtab;
    m_hardware_replacements_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_hardware_replacements_subtab_Set() const{
    return m_hardware_replacements_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_hardware_replacements_subtab_Valid() const{
    return m_hardware_replacements_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getHelpTab() const {
    return m_help_tab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setHelpTab(const QString &help_tab) {
    m_help_tab = help_tab;
    m_help_tab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_help_tab_Set() const{
    return m_help_tab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_help_tab_Valid() const{
    return m_help_tab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getHelpWidget() const {
    return m_help_widget;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setHelpWidget(const QString &help_widget) {
    m_help_widget = help_widget;
    m_help_widget_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_help_widget_Set() const{
    return m_help_widget_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_help_widget_Valid() const{
    return m_help_widget_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getNewFeaturesSubtab() const {
    return m_new_features_subtab;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setNewFeaturesSubtab(const QString &new_features_subtab) {
    m_new_features_subtab = new_features_subtab;
    m_new_features_subtab_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_new_features_subtab_Set() const{
    return m_new_features_subtab_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_new_features_subtab_Valid() const{
    return m_new_features_subtab_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getSmForums() const {
    return m_sm_forums;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setSmForums(const QString &sm_forums) {
    m_sm_forums = sm_forums;
    m_sm_forums_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_sm_forums_Set() const{
    return m_sm_forums_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_sm_forums_Valid() const{
    return m_sm_forums_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getSupportContactInfo() const {
    return m_support_contact_info;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setSupportContactInfo(const QString &support_contact_info) {
    m_support_contact_info = support_contact_info;
    m_support_contact_info_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_support_contact_info_Set() const{
    return m_support_contact_info_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_support_contact_info_Valid() const{
    return m_support_contact_info_isValid;
}

QString OAICreateOrganizationBrandingPolicy_request_helpSettings::getUniversalSearchKnowledgeBaseSearch() const {
    return m_universal_search_knowledge_base_search;
}
void OAICreateOrganizationBrandingPolicy_request_helpSettings::setUniversalSearchKnowledgeBaseSearch(const QString &universal_search_knowledge_base_search) {
    m_universal_search_knowledge_base_search = universal_search_knowledge_base_search;
    m_universal_search_knowledge_base_search_isSet = true;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_universal_search_knowledge_base_search_Set() const{
    return m_universal_search_knowledge_base_search_isSet;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::is_universal_search_knowledge_base_search_Valid() const{
    return m_universal_search_knowledge_base_search_isValid;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_docs_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cases_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cisco_meraki_product_documentation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_community_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_protection_requests_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_firewall_info_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_help_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_help_subtab_knowledge_base_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hardware_replacements_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_tab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_widget_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_features_subtab_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sm_forums_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_contact_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_universal_search_knowledge_base_search_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationBrandingPolicy_request_helpSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
