/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones.h
 *
 * The Staged Upgrade Milestones for the stage
 */

#ifndef OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones_H
#define OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones : public OAIObject {
public:
    OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones();
    OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones(QString json);
    ~OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCanceledAt() const;
    void setCanceledAt(const QDateTime &canceled_at);
    bool is_canceled_at_Set() const;
    bool is_canceled_at_Valid() const;

    QDateTime getCompletedAt() const;
    void setCompletedAt(const QDateTime &completed_at);
    bool is_completed_at_Set() const;
    bool is_completed_at_Valid() const;

    QDateTime getScheduledFor() const;
    void setScheduledFor(const QDateTime &scheduled_for);
    bool is_scheduled_for_Set() const;
    bool is_scheduled_for_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_canceled_at;
    bool m_canceled_at_isSet;
    bool m_canceled_at_isValid;

    QDateTime m_completed_at;
    bool m_completed_at_isSet;
    bool m_completed_at_isValid;

    QDateTime m_scheduled_for;
    bool m_scheduled_for_isSet;
    bool m_scheduled_for_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones)

#endif // OAIGetNetworkFirmwareUpgradesStagedEvents_200_response_stages_inner_milestones_H
