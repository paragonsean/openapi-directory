/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationActionBatch_201_response_status.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationActionBatch_201_response_status::OAICreateOrganizationActionBatch_201_response_status(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationActionBatch_201_response_status::OAICreateOrganizationActionBatch_201_response_status() {
    this->initializeModel();
}

OAICreateOrganizationActionBatch_201_response_status::~OAICreateOrganizationActionBatch_201_response_status() {}

void OAICreateOrganizationActionBatch_201_response_status::initializeModel() {

    m_completed_isSet = false;
    m_completed_isValid = false;

    m_created_resources_isSet = false;
    m_created_resources_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_failed_isSet = false;
    m_failed_isValid = false;
}

void OAICreateOrganizationActionBatch_201_response_status::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationActionBatch_201_response_status::fromJsonObject(QJsonObject json) {

    m_completed_isValid = ::OpenAPI::fromJsonValue(m_completed, json[QString("completed")]);
    m_completed_isSet = !json[QString("completed")].isNull() && m_completed_isValid;

    m_created_resources_isValid = ::OpenAPI::fromJsonValue(m_created_resources, json[QString("createdResources")]);
    m_created_resources_isSet = !json[QString("createdResources")].isNull() && m_created_resources_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_failed_isValid = ::OpenAPI::fromJsonValue(m_failed, json[QString("failed")]);
    m_failed_isSet = !json[QString("failed")].isNull() && m_failed_isValid;
}

QString OAICreateOrganizationActionBatch_201_response_status::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationActionBatch_201_response_status::asJsonObject() const {
    QJsonObject obj;
    if (m_completed_isSet) {
        obj.insert(QString("completed"), ::OpenAPI::toJsonValue(m_completed));
    }
    if (m_created_resources.size() > 0) {
        obj.insert(QString("createdResources"), ::OpenAPI::toJsonValue(m_created_resources));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_failed_isSet) {
        obj.insert(QString("failed"), ::OpenAPI::toJsonValue(m_failed));
    }
    return obj;
}

bool OAICreateOrganizationActionBatch_201_response_status::isCompleted() const {
    return m_completed;
}
void OAICreateOrganizationActionBatch_201_response_status::setCompleted(const bool &completed) {
    m_completed = completed;
    m_completed_isSet = true;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_completed_Set() const{
    return m_completed_isSet;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_completed_Valid() const{
    return m_completed_isValid;
}

QList<OAICreateOrganizationActionBatch_201_response_status_createdResources_inner> OAICreateOrganizationActionBatch_201_response_status::getCreatedResources() const {
    return m_created_resources;
}
void OAICreateOrganizationActionBatch_201_response_status::setCreatedResources(const QList<OAICreateOrganizationActionBatch_201_response_status_createdResources_inner> &created_resources) {
    m_created_resources = created_resources;
    m_created_resources_isSet = true;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_created_resources_Set() const{
    return m_created_resources_isSet;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_created_resources_Valid() const{
    return m_created_resources_isValid;
}

QList<QString> OAICreateOrganizationActionBatch_201_response_status::getErrors() const {
    return m_errors;
}
void OAICreateOrganizationActionBatch_201_response_status::setErrors(const QList<QString> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_errors_Valid() const{
    return m_errors_isValid;
}

bool OAICreateOrganizationActionBatch_201_response_status::isFailed() const {
    return m_failed;
}
void OAICreateOrganizationActionBatch_201_response_status::setFailed(const bool &failed) {
    m_failed = failed;
    m_failed_isSet = true;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_failed_Set() const{
    return m_failed_isSet;
}

bool OAICreateOrganizationActionBatch_201_response_status::is_failed_Valid() const{
    return m_failed_isValid;
}

bool OAICreateOrganizationActionBatch_201_response_status::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_failed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationActionBatch_201_response_status::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_resources_isValid && true;
}

} // namespace OpenAPI
