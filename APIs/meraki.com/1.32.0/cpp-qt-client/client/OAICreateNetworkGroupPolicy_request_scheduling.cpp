/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateNetworkGroupPolicy_request_scheduling.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateNetworkGroupPolicy_request_scheduling::OAICreateNetworkGroupPolicy_request_scheduling(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateNetworkGroupPolicy_request_scheduling::OAICreateNetworkGroupPolicy_request_scheduling() {
    this->initializeModel();
}

OAICreateNetworkGroupPolicy_request_scheduling::~OAICreateNetworkGroupPolicy_request_scheduling() {}

void OAICreateNetworkGroupPolicy_request_scheduling::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_friday_isSet = false;
    m_friday_isValid = false;

    m_monday_isSet = false;
    m_monday_isValid = false;

    m_saturday_isSet = false;
    m_saturday_isValid = false;

    m_sunday_isSet = false;
    m_sunday_isValid = false;

    m_thursday_isSet = false;
    m_thursday_isValid = false;

    m_tuesday_isSet = false;
    m_tuesday_isValid = false;

    m_wednesday_isSet = false;
    m_wednesday_isValid = false;
}

void OAICreateNetworkGroupPolicy_request_scheduling::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateNetworkGroupPolicy_request_scheduling::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_friday_isValid = ::OpenAPI::fromJsonValue(m_friday, json[QString("friday")]);
    m_friday_isSet = !json[QString("friday")].isNull() && m_friday_isValid;

    m_monday_isValid = ::OpenAPI::fromJsonValue(m_monday, json[QString("monday")]);
    m_monday_isSet = !json[QString("monday")].isNull() && m_monday_isValid;

    m_saturday_isValid = ::OpenAPI::fromJsonValue(m_saturday, json[QString("saturday")]);
    m_saturday_isSet = !json[QString("saturday")].isNull() && m_saturday_isValid;

    m_sunday_isValid = ::OpenAPI::fromJsonValue(m_sunday, json[QString("sunday")]);
    m_sunday_isSet = !json[QString("sunday")].isNull() && m_sunday_isValid;

    m_thursday_isValid = ::OpenAPI::fromJsonValue(m_thursday, json[QString("thursday")]);
    m_thursday_isSet = !json[QString("thursday")].isNull() && m_thursday_isValid;

    m_tuesday_isValid = ::OpenAPI::fromJsonValue(m_tuesday, json[QString("tuesday")]);
    m_tuesday_isSet = !json[QString("tuesday")].isNull() && m_tuesday_isValid;

    m_wednesday_isValid = ::OpenAPI::fromJsonValue(m_wednesday, json[QString("wednesday")]);
    m_wednesday_isSet = !json[QString("wednesday")].isNull() && m_wednesday_isValid;
}

QString OAICreateNetworkGroupPolicy_request_scheduling::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateNetworkGroupPolicy_request_scheduling::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_friday.isSet()) {
        obj.insert(QString("friday"), ::OpenAPI::toJsonValue(m_friday));
    }
    if (m_monday.isSet()) {
        obj.insert(QString("monday"), ::OpenAPI::toJsonValue(m_monday));
    }
    if (m_saturday.isSet()) {
        obj.insert(QString("saturday"), ::OpenAPI::toJsonValue(m_saturday));
    }
    if (m_sunday.isSet()) {
        obj.insert(QString("sunday"), ::OpenAPI::toJsonValue(m_sunday));
    }
    if (m_thursday.isSet()) {
        obj.insert(QString("thursday"), ::OpenAPI::toJsonValue(m_thursday));
    }
    if (m_tuesday.isSet()) {
        obj.insert(QString("tuesday"), ::OpenAPI::toJsonValue(m_tuesday));
    }
    if (m_wednesday.isSet()) {
        obj.insert(QString("wednesday"), ::OpenAPI::toJsonValue(m_wednesday));
    }
    return obj;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::isEnabled() const {
    return m_enabled;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_friday OAICreateNetworkGroupPolicy_request_scheduling::getFriday() const {
    return m_friday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setFriday(const OAICreateNetworkGroupPolicy_request_scheduling_friday &friday) {
    m_friday = friday;
    m_friday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_friday_Set() const{
    return m_friday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_friday_Valid() const{
    return m_friday_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_monday OAICreateNetworkGroupPolicy_request_scheduling::getMonday() const {
    return m_monday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setMonday(const OAICreateNetworkGroupPolicy_request_scheduling_monday &monday) {
    m_monday = monday;
    m_monday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_monday_Set() const{
    return m_monday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_monday_Valid() const{
    return m_monday_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_saturday OAICreateNetworkGroupPolicy_request_scheduling::getSaturday() const {
    return m_saturday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setSaturday(const OAICreateNetworkGroupPolicy_request_scheduling_saturday &saturday) {
    m_saturday = saturday;
    m_saturday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_saturday_Set() const{
    return m_saturday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_saturday_Valid() const{
    return m_saturday_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_sunday OAICreateNetworkGroupPolicy_request_scheduling::getSunday() const {
    return m_sunday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setSunday(const OAICreateNetworkGroupPolicy_request_scheduling_sunday &sunday) {
    m_sunday = sunday;
    m_sunday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_sunday_Set() const{
    return m_sunday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_sunday_Valid() const{
    return m_sunday_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_thursday OAICreateNetworkGroupPolicy_request_scheduling::getThursday() const {
    return m_thursday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setThursday(const OAICreateNetworkGroupPolicy_request_scheduling_thursday &thursday) {
    m_thursday = thursday;
    m_thursday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_thursday_Set() const{
    return m_thursday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_thursday_Valid() const{
    return m_thursday_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_tuesday OAICreateNetworkGroupPolicy_request_scheduling::getTuesday() const {
    return m_tuesday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setTuesday(const OAICreateNetworkGroupPolicy_request_scheduling_tuesday &tuesday) {
    m_tuesday = tuesday;
    m_tuesday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_tuesday_Set() const{
    return m_tuesday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_tuesday_Valid() const{
    return m_tuesday_isValid;
}

OAICreateNetworkGroupPolicy_request_scheduling_wednesday OAICreateNetworkGroupPolicy_request_scheduling::getWednesday() const {
    return m_wednesday;
}
void OAICreateNetworkGroupPolicy_request_scheduling::setWednesday(const OAICreateNetworkGroupPolicy_request_scheduling_wednesday &wednesday) {
    m_wednesday = wednesday;
    m_wednesday_isSet = true;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_wednesday_Set() const{
    return m_wednesday_isSet;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::is_wednesday_Valid() const{
    return m_wednesday_isValid;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_saturday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sunday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_thursday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tuesday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_wednesday.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateNetworkGroupPolicy_request_scheduling::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
