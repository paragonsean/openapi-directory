/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDeviceWirelessRadioSettings_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDeviceWirelessRadioSettings_request::OAIUpdateDeviceWirelessRadioSettings_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDeviceWirelessRadioSettings_request::OAIUpdateDeviceWirelessRadioSettings_request() {
    this->initializeModel();
}

OAIUpdateDeviceWirelessRadioSettings_request::~OAIUpdateDeviceWirelessRadioSettings_request() {}

void OAIUpdateDeviceWirelessRadioSettings_request::initializeModel() {

    m_five_ghz_settings_isSet = false;
    m_five_ghz_settings_isValid = false;

    m_rf_profile_id_isSet = false;
    m_rf_profile_id_isValid = false;

    m_two_four_ghz_settings_isSet = false;
    m_two_four_ghz_settings_isValid = false;
}

void OAIUpdateDeviceWirelessRadioSettings_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDeviceWirelessRadioSettings_request::fromJsonObject(QJsonObject json) {

    m_five_ghz_settings_isValid = ::OpenAPI::fromJsonValue(m_five_ghz_settings, json[QString("fiveGhzSettings")]);
    m_five_ghz_settings_isSet = !json[QString("fiveGhzSettings")].isNull() && m_five_ghz_settings_isValid;

    m_rf_profile_id_isValid = ::OpenAPI::fromJsonValue(m_rf_profile_id, json[QString("rfProfileId")]);
    m_rf_profile_id_isSet = !json[QString("rfProfileId")].isNull() && m_rf_profile_id_isValid;

    m_two_four_ghz_settings_isValid = ::OpenAPI::fromJsonValue(m_two_four_ghz_settings, json[QString("twoFourGhzSettings")]);
    m_two_four_ghz_settings_isSet = !json[QString("twoFourGhzSettings")].isNull() && m_two_four_ghz_settings_isValid;
}

QString OAIUpdateDeviceWirelessRadioSettings_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDeviceWirelessRadioSettings_request::asJsonObject() const {
    QJsonObject obj;
    if (m_five_ghz_settings.isSet()) {
        obj.insert(QString("fiveGhzSettings"), ::OpenAPI::toJsonValue(m_five_ghz_settings));
    }
    if (m_rf_profile_id_isSet) {
        obj.insert(QString("rfProfileId"), ::OpenAPI::toJsonValue(m_rf_profile_id));
    }
    if (m_two_four_ghz_settings.isSet()) {
        obj.insert(QString("twoFourGhzSettings"), ::OpenAPI::toJsonValue(m_two_four_ghz_settings));
    }
    return obj;
}

OAIUpdateDeviceWirelessRadioSettings_request_fiveGhzSettings OAIUpdateDeviceWirelessRadioSettings_request::getFiveGhzSettings() const {
    return m_five_ghz_settings;
}
void OAIUpdateDeviceWirelessRadioSettings_request::setFiveGhzSettings(const OAIUpdateDeviceWirelessRadioSettings_request_fiveGhzSettings &five_ghz_settings) {
    m_five_ghz_settings = five_ghz_settings;
    m_five_ghz_settings_isSet = true;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::is_five_ghz_settings_Set() const{
    return m_five_ghz_settings_isSet;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::is_five_ghz_settings_Valid() const{
    return m_five_ghz_settings_isValid;
}

QString OAIUpdateDeviceWirelessRadioSettings_request::getRfProfileId() const {
    return m_rf_profile_id;
}
void OAIUpdateDeviceWirelessRadioSettings_request::setRfProfileId(const QString &rf_profile_id) {
    m_rf_profile_id = rf_profile_id;
    m_rf_profile_id_isSet = true;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::is_rf_profile_id_Set() const{
    return m_rf_profile_id_isSet;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::is_rf_profile_id_Valid() const{
    return m_rf_profile_id_isValid;
}

OAIUpdateDeviceWirelessRadioSettings_request_twoFourGhzSettings OAIUpdateDeviceWirelessRadioSettings_request::getTwoFourGhzSettings() const {
    return m_two_four_ghz_settings;
}
void OAIUpdateDeviceWirelessRadioSettings_request::setTwoFourGhzSettings(const OAIUpdateDeviceWirelessRadioSettings_request_twoFourGhzSettings &two_four_ghz_settings) {
    m_two_four_ghz_settings = two_four_ghz_settings;
    m_two_four_ghz_settings_isSet = true;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::is_two_four_ghz_settings_Set() const{
    return m_two_four_ghz_settings_isSet;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::is_two_four_ghz_settings_Valid() const{
    return m_two_four_ghz_settings_isValid;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_five_ghz_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rf_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_four_ghz_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDeviceWirelessRadioSettings_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
