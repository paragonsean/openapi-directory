/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner() {
    this->initializeModel();
}

OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::~OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner() {}

void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::initializeModel() {

    m_model_isSet = false;
    m_model_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_serial_isSet = false;
    m_serial_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::fromJsonObject(QJsonObject json) {

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_serial_isValid = ::OpenAPI::fromJsonValue(m_serial, json[QString("serial")]);
    m_serial_isSet = !json[QString("serial")].isNull() && m_serial_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_serial_isSet) {
        obj.insert(QString("serial"), ::OpenAPI::toJsonValue(m_serial));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::getModel() const {
    return m_model;
}
void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_model_Set() const{
    return m_model_isSet;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_model_Valid() const{
    return m_model_isValid;
}

qint32 OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::getNumber() const {
    return m_number;
}
void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::setNumber(const qint32 &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_number_Set() const{
    return m_number_isSet;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::getSerial() const {
    return m_serial;
}
void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::setSerial(const QString &serial) {
    m_serial = serial;
    m_serial_isSet = true;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_serial_Set() const{
    return m_serial_isSet;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_serial_Valid() const{
    return m_serial_isValid;
}

QString OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::getStatus() const {
    return m_status;
}
void OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationDevicesPowerModulesStatusesByDevice_200_response_inner_slots_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
