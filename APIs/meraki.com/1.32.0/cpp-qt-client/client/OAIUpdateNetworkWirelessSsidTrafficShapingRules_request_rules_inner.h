/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner.h
 *
 * 
 */

#ifndef OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner_H
#define OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner_H

#include <QJsonObject>

#include "OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_definitions_inner.h"
#include "OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_perClientBandwidthLimits.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_definitions_inner;
class OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_perClientBandwidthLimits;

class OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner : public OAIObject {
public:
    OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner();
    OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner(QString json);
    ~OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_definitions_inner> getDefinitions() const;
    void setDefinitions(const QList<OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_definitions_inner> &definitions);
    bool is_definitions_Set() const;
    bool is_definitions_Valid() const;

    qint32 getDscpTagValue() const;
    void setDscpTagValue(const qint32 &dscp_tag_value);
    bool is_dscp_tag_value_Set() const;
    bool is_dscp_tag_value_Valid() const;

    qint32 getPcpTagValue() const;
    void setPcpTagValue(const qint32 &pcp_tag_value);
    bool is_pcp_tag_value_Set() const;
    bool is_pcp_tag_value_Valid() const;

    OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_perClientBandwidthLimits getPerClientBandwidthLimits() const;
    void setPerClientBandwidthLimits(const OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_perClientBandwidthLimits &per_client_bandwidth_limits);
    bool is_per_client_bandwidth_limits_Set() const;
    bool is_per_client_bandwidth_limits_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_definitions_inner> m_definitions;
    bool m_definitions_isSet;
    bool m_definitions_isValid;

    qint32 m_dscp_tag_value;
    bool m_dscp_tag_value_isSet;
    bool m_dscp_tag_value_isValid;

    qint32 m_pcp_tag_value;
    bool m_pcp_tag_value_isSet;
    bool m_pcp_tag_value_isValid;

    OAIUpdateNetworkApplianceTrafficShapingRules_request_rules_inner_perClientBandwidthLimits m_per_client_bandwidth_limits;
    bool m_per_client_bandwidth_limits_isSet;
    bool m_per_client_bandwidth_limits_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner)

#endif // OAIUpdateNetworkWirelessSsidTrafficShapingRules_request_rules_inner_H
