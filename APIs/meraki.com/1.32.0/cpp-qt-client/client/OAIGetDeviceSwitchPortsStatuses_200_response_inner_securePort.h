/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort.h
 *
 * The Secure Port status of the port.
 */

#ifndef OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_H
#define OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_H

#include <QJsonObject>

#include "OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_configOverrides.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_configOverrides;

class OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort : public OAIObject {
public:
    OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort();
    OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort(QString json);
    ~OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getAuthenticationStatus() const;
    void setAuthenticationStatus(const QString &authentication_status);
    bool is_authentication_status_Set() const;
    bool is_authentication_status_Valid() const;

    OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_configOverrides getConfigOverrides() const;
    void setConfigOverrides(const OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_configOverrides &config_overrides);
    bool is_config_overrides_Set() const;
    bool is_config_overrides_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_authentication_status;
    bool m_authentication_status_isSet;
    bool m_authentication_status_isValid;

    OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_configOverrides m_config_overrides;
    bool m_config_overrides_isSet;
    bool m_config_overrides_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort)

#endif // OAIGetDeviceSwitchPortsStatuses_200_response_inner_securePort_H
