/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner.h
 *
 * 
 */

#ifndef OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_H
#define OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_H

#include <QJsonObject>

#include "OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold;

class OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner : public OAIObject {
public:
    OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner();
    OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner(QString json);
    ~OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getMetric() const;
    void setMetric(const QString &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold getThreshold() const;
    void setThreshold(const OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold &threshold);
    bool is_threshold_Set() const;
    bool is_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold m_threshold;
    bool m_threshold_isSet;
    bool m_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner)

#endif // OAIGetNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_H
