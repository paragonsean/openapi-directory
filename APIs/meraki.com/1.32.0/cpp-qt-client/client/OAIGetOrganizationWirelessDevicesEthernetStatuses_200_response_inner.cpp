/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner() {
    this->initializeModel();
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::~OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner() {}

void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::initializeModel() {

    m_aggregation_isSet = false;
    m_aggregation_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_ports_isSet = false;
    m_ports_isValid = false;

    m_power_isSet = false;
    m_power_isValid = false;

    m_serial_isSet = false;
    m_serial_isValid = false;
}

void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::fromJsonObject(QJsonObject json) {

    m_aggregation_isValid = ::OpenAPI::fromJsonValue(m_aggregation, json[QString("aggregation")]);
    m_aggregation_isSet = !json[QString("aggregation")].isNull() && m_aggregation_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_ports_isValid = ::OpenAPI::fromJsonValue(m_ports, json[QString("ports")]);
    m_ports_isSet = !json[QString("ports")].isNull() && m_ports_isValid;

    m_power_isValid = ::OpenAPI::fromJsonValue(m_power, json[QString("power")]);
    m_power_isSet = !json[QString("power")].isNull() && m_power_isValid;

    m_serial_isValid = ::OpenAPI::fromJsonValue(m_serial, json[QString("serial")]);
    m_serial_isSet = !json[QString("serial")].isNull() && m_serial_isValid;
}

QString OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation.isSet()) {
        obj.insert(QString("aggregation"), ::OpenAPI::toJsonValue(m_aggregation));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network.isSet()) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_ports.size() > 0) {
        obj.insert(QString("ports"), ::OpenAPI::toJsonValue(m_ports));
    }
    if (m_power.isSet()) {
        obj.insert(QString("power"), ::OpenAPI::toJsonValue(m_power));
    }
    if (m_serial_isSet) {
        obj.insert(QString("serial"), ::OpenAPI::toJsonValue(m_serial));
    }
    return obj;
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_aggregation OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::getAggregation() const {
    return m_aggregation;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::setAggregation(const OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_aggregation &aggregation) {
    m_aggregation = aggregation;
    m_aggregation_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_aggregation_Set() const{
    return m_aggregation_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_aggregation_Valid() const{
    return m_aggregation_isValid;
}

QString OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::getName() const {
    return m_name;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_name_Valid() const{
    return m_name_isValid;
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_network OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::getNetwork() const {
    return m_network;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::setNetwork(const OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_network &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_network_Valid() const{
    return m_network_isValid;
}

QList<OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_ports_inner> OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::getPorts() const {
    return m_ports;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::setPorts(const QList<OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_ports_inner> &ports) {
    m_ports = ports;
    m_ports_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_ports_Set() const{
    return m_ports_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_ports_Valid() const{
    return m_ports_isValid;
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::getPower() const {
    return m_power;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::setPower(const OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power &power) {
    m_power = power;
    m_power_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_power_Set() const{
    return m_power_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_power_Valid() const{
    return m_power_isValid;
}

QString OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::getSerial() const {
    return m_serial;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::setSerial(const QString &serial) {
    m_serial = serial;
    m_serial_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_serial_Set() const{
    return m_serial_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::is_serial_Valid() const{
    return m_serial_isValid;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ports.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_power.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
