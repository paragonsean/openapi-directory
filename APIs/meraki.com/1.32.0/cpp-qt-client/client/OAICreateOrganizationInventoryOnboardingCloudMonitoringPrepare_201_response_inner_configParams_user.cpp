/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user() {
    this->initializeModel();
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::~OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user() {}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::initializeModel() {

    m_public_key_isSet = false;
    m_public_key_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::fromJsonObject(QJsonObject json) {

    m_public_key_isValid = ::OpenAPI::fromJsonValue(m_public_key, json[QString("publicKey")]);
    m_public_key_isSet = !json[QString("publicKey")].isNull() && m_public_key_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::asJsonObject() const {
    QJsonObject obj;
    if (m_public_key_isSet) {
        obj.insert(QString("publicKey"), ::OpenAPI::toJsonValue(m_public_key));
    }
    if (m_secret.isSet()) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::getPublicKey() const {
    return m_public_key;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::setPublicKey(const QString &public_key) {
    m_public_key = public_key;
    m_public_key_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::is_public_key_Set() const{
    return m_public_key_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::is_public_key_Valid() const{
    return m_public_key_isValid;
}

OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user_secret OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::getSecret() const {
    return m_secret;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::setSecret(const OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user_secret &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::is_secret_Valid() const{
    return m_secret_isValid;
}

QString OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::getUsername() const {
    return m_username;
}
void OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::is_username_Set() const{
    return m_username_isSet;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::is_username_Valid() const{
    return m_username_isValid;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
