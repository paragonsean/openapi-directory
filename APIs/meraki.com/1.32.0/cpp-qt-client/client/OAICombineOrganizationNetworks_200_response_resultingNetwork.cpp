/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICombineOrganizationNetworks_200_response_resultingNetwork.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICombineOrganizationNetworks_200_response_resultingNetwork::OAICombineOrganizationNetworks_200_response_resultingNetwork(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICombineOrganizationNetworks_200_response_resultingNetwork::OAICombineOrganizationNetworks_200_response_resultingNetwork() {
    this->initializeModel();
}

OAICombineOrganizationNetworks_200_response_resultingNetwork::~OAICombineOrganizationNetworks_200_response_resultingNetwork() {}

void OAICombineOrganizationNetworks_200_response_resultingNetwork::initializeModel() {

    m_enrollment_string_isSet = false;
    m_enrollment_string_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_bound_to_config_template_isSet = false;
    m_is_bound_to_config_template_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_product_types_isSet = false;
    m_product_types_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAICombineOrganizationNetworks_200_response_resultingNetwork::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICombineOrganizationNetworks_200_response_resultingNetwork::fromJsonObject(QJsonObject json) {

    m_enrollment_string_isValid = ::OpenAPI::fromJsonValue(m_enrollment_string, json[QString("enrollmentString")]);
    m_enrollment_string_isSet = !json[QString("enrollmentString")].isNull() && m_enrollment_string_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_bound_to_config_template_isValid = ::OpenAPI::fromJsonValue(m_is_bound_to_config_template, json[QString("isBoundToConfigTemplate")]);
    m_is_bound_to_config_template_isSet = !json[QString("isBoundToConfigTemplate")].isNull() && m_is_bound_to_config_template_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(m_organization_id, json[QString("organizationId")]);
    m_organization_id_isSet = !json[QString("organizationId")].isNull() && m_organization_id_isValid;

    m_product_types_isValid = ::OpenAPI::fromJsonValue(m_product_types, json[QString("productTypes")]);
    m_product_types_isSet = !json[QString("productTypes")].isNull() && m_product_types_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICombineOrganizationNetworks_200_response_resultingNetwork::asJsonObject() const {
    QJsonObject obj;
    if (m_enrollment_string_isSet) {
        obj.insert(QString("enrollmentString"), ::OpenAPI::toJsonValue(m_enrollment_string));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_bound_to_config_template_isSet) {
        obj.insert(QString("isBoundToConfigTemplate"), ::OpenAPI::toJsonValue(m_is_bound_to_config_template));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organizationId"), ::OpenAPI::toJsonValue(m_organization_id));
    }
    if (m_product_types.size() > 0) {
        obj.insert(QString("productTypes"), ::OpenAPI::toJsonValue(m_product_types));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getEnrollmentString() const {
    return m_enrollment_string;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setEnrollmentString(const QString &enrollment_string) {
    m_enrollment_string = enrollment_string;
    m_enrollment_string_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_enrollment_string_Set() const{
    return m_enrollment_string_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_enrollment_string_Valid() const{
    return m_enrollment_string_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getId() const {
    return m_id;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_id_Set() const{
    return m_id_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::isIsBoundToConfigTemplate() const {
    return m_is_bound_to_config_template;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setIsBoundToConfigTemplate(const bool &is_bound_to_config_template) {
    m_is_bound_to_config_template = is_bound_to_config_template;
    m_is_bound_to_config_template_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_is_bound_to_config_template_Set() const{
    return m_is_bound_to_config_template_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_is_bound_to_config_template_Valid() const{
    return m_is_bound_to_config_template_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getName() const {
    return m_name;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_name_Set() const{
    return m_name_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getNotes() const {
    return m_notes;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_notes_Valid() const{
    return m_notes_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getOrganizationId() const {
    return m_organization_id;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setOrganizationId(const QString &organization_id) {
    m_organization_id = organization_id;
    m_organization_id_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QList<QString> OAICombineOrganizationNetworks_200_response_resultingNetwork::getProductTypes() const {
    return m_product_types;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setProductTypes(const QList<QString> &product_types) {
    m_product_types = product_types;
    m_product_types_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_product_types_Set() const{
    return m_product_types_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_product_types_Valid() const{
    return m_product_types_isValid;
}

QList<QString> OAICombineOrganizationNetworks_200_response_resultingNetwork::getTags() const {
    return m_tags;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getTimeZone() const {
    return m_time_zone;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

QString OAICombineOrganizationNetworks_200_response_resultingNetwork::getUrl() const {
    return m_url;
}
void OAICombineOrganizationNetworks_200_response_resultingNetwork::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_url_Set() const{
    return m_url_isSet;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::is_url_Valid() const{
    return m_url_isValid;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enrollment_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_bound_to_config_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICombineOrganizationNetworks_200_response_resultingNetwork::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
