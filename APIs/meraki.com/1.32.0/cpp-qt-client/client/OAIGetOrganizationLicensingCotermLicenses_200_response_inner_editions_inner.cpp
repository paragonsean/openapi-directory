/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner() {
    this->initializeModel();
}

OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::~OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner() {}

void OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::initializeModel() {

    m_edition_isSet = false;
    m_edition_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;
}

void OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::fromJsonObject(QJsonObject json) {

    m_edition_isValid = ::OpenAPI::fromJsonValue(m_edition, json[QString("edition")]);
    m_edition_isSet = !json[QString("edition")].isNull() && m_edition_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("productType")]);
    m_product_type_isSet = !json[QString("productType")].isNull() && m_product_type_isValid;
}

QString OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_edition_isSet) {
        obj.insert(QString("edition"), ::OpenAPI::toJsonValue(m_edition));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("productType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    return obj;
}

QString OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::getEdition() const {
    return m_edition;
}
void OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::setEdition(const QString &edition) {
    m_edition = edition;
    m_edition_isSet = true;
}

bool OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::is_edition_Set() const{
    return m_edition_isSet;
}

bool OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::is_edition_Valid() const{
    return m_edition_isValid;
}

QString OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::getProductType() const {
    return m_product_type;
}
void OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::is_product_type_Valid() const{
    return m_product_type_isValid;
}

bool OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_edition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationLicensingCotermLicenses_200_response_inner_editions_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
