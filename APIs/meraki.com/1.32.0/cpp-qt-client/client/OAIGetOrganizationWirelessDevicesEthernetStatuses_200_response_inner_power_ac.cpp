/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac() {
    this->initializeModel();
}

OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::~OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac() {}

void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::initializeModel() {

    m_is_connected_isSet = false;
    m_is_connected_isValid = false;
}

void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::fromJsonObject(QJsonObject json) {

    m_is_connected_isValid = ::OpenAPI::fromJsonValue(m_is_connected, json[QString("isConnected")]);
    m_is_connected_isSet = !json[QString("isConnected")].isNull() && m_is_connected_isValid;
}

QString OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::asJsonObject() const {
    QJsonObject obj;
    if (m_is_connected_isSet) {
        obj.insert(QString("isConnected"), ::OpenAPI::toJsonValue(m_is_connected));
    }
    return obj;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::isIsConnected() const {
    return m_is_connected;
}
void OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::setIsConnected(const bool &is_connected) {
    m_is_connected = is_connected;
    m_is_connected_isSet = true;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::is_is_connected_Set() const{
    return m_is_connected_isSet;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::is_is_connected_Valid() const{
    return m_is_connected_isValid;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_connected_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
