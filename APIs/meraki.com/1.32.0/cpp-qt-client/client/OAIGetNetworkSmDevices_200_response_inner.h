/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNetworkSmDevices_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetNetworkSmDevices_200_response_inner_H
#define OAIGetNetworkSmDevices_200_response_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNetworkSmDevices_200_response_inner : public OAIObject {
public:
    OAIGetNetworkSmDevices_200_response_inner();
    OAIGetNetworkSmDevices_200_response_inner(QString json);
    ~OAIGetNetworkSmDevices_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getOsName() const;
    void setOsName(const QString &os_name);
    bool is_os_name_Set() const;
    bool is_os_name_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getSsid() const;
    void setSsid(const QString &ssid);
    bool is_ssid_Set() const;
    bool is_ssid_Valid() const;

    QString getSystemModel() const;
    void setSystemModel(const QString &system_model);
    bool is_system_model_Set() const;
    bool is_system_model_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    QString getWifiMac() const;
    void setWifiMac(const QString &wifi_mac);
    bool is_wifi_mac_Set() const;
    bool is_wifi_mac_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_os_name;
    bool m_os_name_isSet;
    bool m_os_name_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_ssid;
    bool m_ssid_isSet;
    bool m_ssid_isValid;

    QString m_system_model;
    bool m_system_model_isSet;
    bool m_system_model_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;

    QString m_wifi_mac;
    bool m_wifi_mac_isSet;
    bool m_wifi_mac_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNetworkSmDevices_200_response_inner)

#endif // OAIGetNetworkSmDevices_200_response_inner_H
