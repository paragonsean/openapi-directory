/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetOrganizations_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetOrganizations_200_response_inner_H
#define OAIGetOrganizations_200_response_inner_H

#include <QJsonObject>

#include "OAIGetOrganizations_200_response_inner_api.h"
#include "OAIGetOrganizations_200_response_inner_cloud.h"
#include "OAIGetOrganizations_200_response_inner_licensing.h"
#include "OAIGetOrganizations_200_response_inner_management.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetOrganizations_200_response_inner_api;
class OAIGetOrganizations_200_response_inner_cloud;
class OAIGetOrganizations_200_response_inner_licensing;
class OAIGetOrganizations_200_response_inner_management;

class OAIGetOrganizations_200_response_inner : public OAIObject {
public:
    OAIGetOrganizations_200_response_inner();
    OAIGetOrganizations_200_response_inner(QString json);
    ~OAIGetOrganizations_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetOrganizations_200_response_inner_api getApi() const;
    void setApi(const OAIGetOrganizations_200_response_inner_api &api);
    bool is_api_Set() const;
    bool is_api_Valid() const;

    OAIGetOrganizations_200_response_inner_cloud getCloud() const;
    void setCloud(const OAIGetOrganizations_200_response_inner_cloud &cloud);
    bool is_cloud_Set() const;
    bool is_cloud_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIGetOrganizations_200_response_inner_licensing getLicensing() const;
    void setLicensing(const OAIGetOrganizations_200_response_inner_licensing &licensing);
    bool is_licensing_Set() const;
    bool is_licensing_Valid() const;

    OAIGetOrganizations_200_response_inner_management getManagement() const;
    void setManagement(const OAIGetOrganizations_200_response_inner_management &management);
    bool is_management_Set() const;
    bool is_management_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetOrganizations_200_response_inner_api m_api;
    bool m_api_isSet;
    bool m_api_isValid;

    OAIGetOrganizations_200_response_inner_cloud m_cloud;
    bool m_cloud_isSet;
    bool m_cloud_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIGetOrganizations_200_response_inner_licensing m_licensing;
    bool m_licensing_isSet;
    bool m_licensing_isValid;

    OAIGetOrganizations_200_response_inner_management m_management;
    bool m_management_isSet;
    bool m_management_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetOrganizations_200_response_inner)

#endif // OAIGetOrganizations_200_response_inner_H
