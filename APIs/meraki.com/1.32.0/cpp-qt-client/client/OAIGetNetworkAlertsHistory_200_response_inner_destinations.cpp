/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetNetworkAlertsHistory_200_response_inner_destinations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetNetworkAlertsHistory_200_response_inner_destinations::OAIGetNetworkAlertsHistory_200_response_inner_destinations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetNetworkAlertsHistory_200_response_inner_destinations::OAIGetNetworkAlertsHistory_200_response_inner_destinations() {
    this->initializeModel();
}

OAIGetNetworkAlertsHistory_200_response_inner_destinations::~OAIGetNetworkAlertsHistory_200_response_inner_destinations() {}

void OAIGetNetworkAlertsHistory_200_response_inner_destinations::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_push_isSet = false;
    m_push_isValid = false;

    m_sms_isSet = false;
    m_sms_isValid = false;

    m_webhook_isSet = false;
    m_webhook_isValid = false;
}

void OAIGetNetworkAlertsHistory_200_response_inner_destinations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetNetworkAlertsHistory_200_response_inner_destinations::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_push_isValid = ::OpenAPI::fromJsonValue(m_push, json[QString("push")]);
    m_push_isSet = !json[QString("push")].isNull() && m_push_isValid;

    m_sms_isValid = ::OpenAPI::fromJsonValue(m_sms, json[QString("sms")]);
    m_sms_isSet = !json[QString("sms")].isNull() && m_sms_isValid;

    m_webhook_isValid = ::OpenAPI::fromJsonValue(m_webhook, json[QString("webhook")]);
    m_webhook_isSet = !json[QString("webhook")].isNull() && m_webhook_isValid;
}

QString OAIGetNetworkAlertsHistory_200_response_inner_destinations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetNetworkAlertsHistory_200_response_inner_destinations::asJsonObject() const {
    QJsonObject obj;
    if (m_email.isSet()) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_push.isSet()) {
        obj.insert(QString("push"), ::OpenAPI::toJsonValue(m_push));
    }
    if (m_sms.isSet()) {
        obj.insert(QString("sms"), ::OpenAPI::toJsonValue(m_sms));
    }
    if (m_webhook.isSet()) {
        obj.insert(QString("webhook"), ::OpenAPI::toJsonValue(m_webhook));
    }
    return obj;
}

OAIGetNetworkAlertsHistory_200_response_inner_destinations_email OAIGetNetworkAlertsHistory_200_response_inner_destinations::getEmail() const {
    return m_email;
}
void OAIGetNetworkAlertsHistory_200_response_inner_destinations::setEmail(const OAIGetNetworkAlertsHistory_200_response_inner_destinations_email &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_email_Set() const{
    return m_email_isSet;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_email_Valid() const{
    return m_email_isValid;
}

OAIGetNetworkAlertsHistory_200_response_inner_destinations_push OAIGetNetworkAlertsHistory_200_response_inner_destinations::getPush() const {
    return m_push;
}
void OAIGetNetworkAlertsHistory_200_response_inner_destinations::setPush(const OAIGetNetworkAlertsHistory_200_response_inner_destinations_push &push) {
    m_push = push;
    m_push_isSet = true;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_push_Set() const{
    return m_push_isSet;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_push_Valid() const{
    return m_push_isValid;
}

OAIGetNetworkAlertsHistory_200_response_inner_destinations_sms OAIGetNetworkAlertsHistory_200_response_inner_destinations::getSms() const {
    return m_sms;
}
void OAIGetNetworkAlertsHistory_200_response_inner_destinations::setSms(const OAIGetNetworkAlertsHistory_200_response_inner_destinations_sms &sms) {
    m_sms = sms;
    m_sms_isSet = true;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_sms_Set() const{
    return m_sms_isSet;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_sms_Valid() const{
    return m_sms_isValid;
}

OAIGetNetworkAlertsHistory_200_response_inner_destinations_webhook OAIGetNetworkAlertsHistory_200_response_inner_destinations::getWebhook() const {
    return m_webhook;
}
void OAIGetNetworkAlertsHistory_200_response_inner_destinations::setWebhook(const OAIGetNetworkAlertsHistory_200_response_inner_destinations_webhook &webhook) {
    m_webhook = webhook;
    m_webhook_isSet = true;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_webhook_Set() const{
    return m_webhook_isSet;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::is_webhook_Valid() const{
    return m_webhook_isValid;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_push.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetNetworkAlertsHistory_200_response_inner_destinations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
