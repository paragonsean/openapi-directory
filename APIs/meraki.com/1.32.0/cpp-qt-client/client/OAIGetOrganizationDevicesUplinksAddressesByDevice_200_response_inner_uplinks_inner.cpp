/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner() {
    this->initializeModel();
}

OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::~OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner() {}

void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::initializeModel() {

    m_addresses_isSet = false;
    m_addresses_isValid = false;

    m_interface_isSet = false;
    m_interface_isValid = false;
}

void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::fromJsonObject(QJsonObject json) {

    m_addresses_isValid = ::OpenAPI::fromJsonValue(m_addresses, json[QString("addresses")]);
    m_addresses_isSet = !json[QString("addresses")].isNull() && m_addresses_isValid;

    m_interface_isValid = ::OpenAPI::fromJsonValue(m_interface, json[QString("interface")]);
    m_interface_isSet = !json[QString("interface")].isNull() && m_interface_isValid;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_addresses.size() > 0) {
        obj.insert(QString("addresses"), ::OpenAPI::toJsonValue(m_addresses));
    }
    if (m_interface_isSet) {
        obj.insert(QString("interface"), ::OpenAPI::toJsonValue(m_interface));
    }
    return obj;
}

QList<OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner> OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::getAddresses() const {
    return m_addresses;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::setAddresses(const QList<OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner> &addresses) {
    m_addresses = addresses;
    m_addresses_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::is_addresses_Set() const{
    return m_addresses_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::is_addresses_Valid() const{
    return m_addresses_isValid;
}

QString OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::getInterface() const {
    return m_interface;
}
void OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::setInterface(const QString &interface) {
    m_interface = interface;
    m_interface_isSet = true;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::is_interface_Set() const{
    return m_interface_isSet;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::is_interface_Valid() const{
    return m_interface_isValid;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_interface_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
