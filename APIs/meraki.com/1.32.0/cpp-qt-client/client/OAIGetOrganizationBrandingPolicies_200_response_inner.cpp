/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrganizationBrandingPolicies_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrganizationBrandingPolicies_200_response_inner::OAIGetOrganizationBrandingPolicies_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrganizationBrandingPolicies_200_response_inner::OAIGetOrganizationBrandingPolicies_200_response_inner() {
    this->initializeModel();
}

OAIGetOrganizationBrandingPolicies_200_response_inner::~OAIGetOrganizationBrandingPolicies_200_response_inner() {}

void OAIGetOrganizationBrandingPolicies_200_response_inner::initializeModel() {

    m_admin_settings_isSet = false;
    m_admin_settings_isValid = false;

    m_custom_logo_isSet = false;
    m_custom_logo_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_help_settings_isSet = false;
    m_help_settings_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGetOrganizationBrandingPolicies_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrganizationBrandingPolicies_200_response_inner::fromJsonObject(QJsonObject json) {

    m_admin_settings_isValid = ::OpenAPI::fromJsonValue(m_admin_settings, json[QString("adminSettings")]);
    m_admin_settings_isSet = !json[QString("adminSettings")].isNull() && m_admin_settings_isValid;

    m_custom_logo_isValid = ::OpenAPI::fromJsonValue(m_custom_logo, json[QString("customLogo")]);
    m_custom_logo_isSet = !json[QString("customLogo")].isNull() && m_custom_logo_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_help_settings_isValid = ::OpenAPI::fromJsonValue(m_help_settings, json[QString("helpSettings")]);
    m_help_settings_isSet = !json[QString("helpSettings")].isNull() && m_help_settings_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGetOrganizationBrandingPolicies_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrganizationBrandingPolicies_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_settings.isSet()) {
        obj.insert(QString("adminSettings"), ::OpenAPI::toJsonValue(m_admin_settings));
    }
    if (m_custom_logo.isSet()) {
        obj.insert(QString("customLogo"), ::OpenAPI::toJsonValue(m_custom_logo));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_help_settings.isSet()) {
        obj.insert(QString("helpSettings"), ::OpenAPI::toJsonValue(m_help_settings));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIGetOrganizationBrandingPolicies_200_response_inner_adminSettings OAIGetOrganizationBrandingPolicies_200_response_inner::getAdminSettings() const {
    return m_admin_settings;
}
void OAIGetOrganizationBrandingPolicies_200_response_inner::setAdminSettings(const OAIGetOrganizationBrandingPolicies_200_response_inner_adminSettings &admin_settings) {
    m_admin_settings = admin_settings;
    m_admin_settings_isSet = true;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_admin_settings_Set() const{
    return m_admin_settings_isSet;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_admin_settings_Valid() const{
    return m_admin_settings_isValid;
}

OAIGetOrganizationBrandingPolicies_200_response_inner_customLogo OAIGetOrganizationBrandingPolicies_200_response_inner::getCustomLogo() const {
    return m_custom_logo;
}
void OAIGetOrganizationBrandingPolicies_200_response_inner::setCustomLogo(const OAIGetOrganizationBrandingPolicies_200_response_inner_customLogo &custom_logo) {
    m_custom_logo = custom_logo;
    m_custom_logo_isSet = true;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_custom_logo_Set() const{
    return m_custom_logo_isSet;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_custom_logo_Valid() const{
    return m_custom_logo_isValid;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::isEnabled() const {
    return m_enabled;
}
void OAIGetOrganizationBrandingPolicies_200_response_inner::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAIGetOrganizationBrandingPolicies_200_response_inner_helpSettings OAIGetOrganizationBrandingPolicies_200_response_inner::getHelpSettings() const {
    return m_help_settings;
}
void OAIGetOrganizationBrandingPolicies_200_response_inner::setHelpSettings(const OAIGetOrganizationBrandingPolicies_200_response_inner_helpSettings &help_settings) {
    m_help_settings = help_settings;
    m_help_settings_isSet = true;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_help_settings_Set() const{
    return m_help_settings_isSet;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_help_settings_Valid() const{
    return m_help_settings_isValid;
}

QString OAIGetOrganizationBrandingPolicies_200_response_inner::getName() const {
    return m_name;
}
void OAIGetOrganizationBrandingPolicies_200_response_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_logo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrganizationBrandingPolicies_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
