/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.LicensesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LicensesApi', function() {
    describe('assignOrganizationLicensesSeats_1', function() {
      it('should call assignOrganizationLicensesSeats_1 successfully', function(done) {
        //uncomment below and update the code to test assignOrganizationLicensesSeats_1
        //instance.assignOrganizationLicensesSeats_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationLicense_1', function() {
      it('should call getOrganizationLicense_1 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationLicense_1
        //instance.getOrganizationLicense_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationLicensesOverview_1', function() {
      it('should call getOrganizationLicensesOverview_1 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationLicensesOverview_1
        //instance.getOrganizationLicensesOverview_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationLicenses_1', function() {
      it('should call getOrganizationLicenses_1 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationLicenses_1
        //instance.getOrganizationLicenses_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationLicensingCotermLicenses_2', function() {
      it('should call getOrganizationLicensingCotermLicenses_2 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationLicensingCotermLicenses_2
        //instance.getOrganizationLicensingCotermLicenses_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moveOrganizationLicensesSeats_1', function() {
      it('should call moveOrganizationLicensesSeats_1 successfully', function(done) {
        //uncomment below and update the code to test moveOrganizationLicensesSeats_1
        //instance.moveOrganizationLicensesSeats_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moveOrganizationLicenses_1', function() {
      it('should call moveOrganizationLicenses_1 successfully', function(done) {
        //uncomment below and update the code to test moveOrganizationLicenses_1
        //instance.moveOrganizationLicenses_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moveOrganizationLicensingCotermLicenses_2', function() {
      it('should call moveOrganizationLicensingCotermLicenses_2 successfully', function(done) {
        //uncomment below and update the code to test moveOrganizationLicensingCotermLicenses_2
        //instance.moveOrganizationLicensingCotermLicenses_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renewOrganizationLicensesSeats_1', function() {
      it('should call renewOrganizationLicensesSeats_1 successfully', function(done) {
        //uncomment below and update the code to test renewOrganizationLicensesSeats_1
        //instance.renewOrganizationLicensesSeats_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationLicense_1', function() {
      it('should call updateOrganizationLicense_1 successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationLicense_1
        //instance.updateOrganizationLicense_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
