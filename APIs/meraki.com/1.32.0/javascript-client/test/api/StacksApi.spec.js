/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.StacksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StacksApi', function() {
    describe('addNetworkSwitchStack_1', function() {
      it('should call addNetworkSwitchStack_1 successfully', function(done) {
        //uncomment below and update the code to test addNetworkSwitchStack_1
        //instance.addNetworkSwitchStack_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSwitchStackRoutingInterface_1', function() {
      it('should call createNetworkSwitchStackRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSwitchStackRoutingInterface_1
        //instance.createNetworkSwitchStackRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSwitchStackRoutingStaticRoute_1', function() {
      it('should call createNetworkSwitchStackRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSwitchStackRoutingStaticRoute_1
        //instance.createNetworkSwitchStackRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSwitchStack_1', function() {
      it('should call createNetworkSwitchStack_1 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSwitchStack_1
        //instance.createNetworkSwitchStack_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSwitchStackRoutingInterface_1', function() {
      it('should call deleteNetworkSwitchStackRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSwitchStackRoutingInterface_1
        //instance.deleteNetworkSwitchStackRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSwitchStackRoutingStaticRoute_1', function() {
      it('should call deleteNetworkSwitchStackRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSwitchStackRoutingStaticRoute_1
        //instance.deleteNetworkSwitchStackRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSwitchStack_1', function() {
      it('should call deleteNetworkSwitchStack_1 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSwitchStack_1
        //instance.deleteNetworkSwitchStack_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingInterfaceDhcp_1', function() {
      it('should call getNetworkSwitchStackRoutingInterfaceDhcp_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingInterfaceDhcp_1
        //instance.getNetworkSwitchStackRoutingInterfaceDhcp_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingInterface_1', function() {
      it('should call getNetworkSwitchStackRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingInterface_1
        //instance.getNetworkSwitchStackRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingInterfaces_1', function() {
      it('should call getNetworkSwitchStackRoutingInterfaces_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingInterfaces_1
        //instance.getNetworkSwitchStackRoutingInterfaces_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingStaticRoute_1', function() {
      it('should call getNetworkSwitchStackRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingStaticRoute_1
        //instance.getNetworkSwitchStackRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingStaticRoutes_1', function() {
      it('should call getNetworkSwitchStackRoutingStaticRoutes_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingStaticRoutes_1
        //instance.getNetworkSwitchStackRoutingStaticRoutes_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStack_1', function() {
      it('should call getNetworkSwitchStack_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStack_1
        //instance.getNetworkSwitchStack_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStacks_1', function() {
      it('should call getNetworkSwitchStacks_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStacks_1
        //instance.getNetworkSwitchStacks_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeNetworkSwitchStack_1', function() {
      it('should call removeNetworkSwitchStack_1 successfully', function(done) {
        //uncomment below and update the code to test removeNetworkSwitchStack_1
        //instance.removeNetworkSwitchStack_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchStackRoutingInterfaceDhcp_1', function() {
      it('should call updateNetworkSwitchStackRoutingInterfaceDhcp_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchStackRoutingInterfaceDhcp_1
        //instance.updateNetworkSwitchStackRoutingInterfaceDhcp_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchStackRoutingInterface_1', function() {
      it('should call updateNetworkSwitchStackRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchStackRoutingInterface_1
        //instance.updateNetworkSwitchStackRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchStackRoutingStaticRoute_1', function() {
      it('should call updateNetworkSwitchStackRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchStackRoutingStaticRoute_1
        //instance.updateNetworkSwitchStackRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
