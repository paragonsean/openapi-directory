/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.ApplianceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplianceApi', function() {
    describe('createDeviceApplianceVmxAuthenticationToken', function() {
      it('should call createDeviceApplianceVmxAuthenticationToken successfully', function(done) {
        //uncomment below and update the code to test createDeviceApplianceVmxAuthenticationToken
        //instance.createDeviceApplianceVmxAuthenticationToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkAppliancePrefixesDelegatedStatic', function() {
      it('should call createNetworkAppliancePrefixesDelegatedStatic successfully', function(done) {
        //uncomment below and update the code to test createNetworkAppliancePrefixesDelegatedStatic
        //instance.createNetworkAppliancePrefixesDelegatedStatic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkApplianceStaticRoute', function() {
      it('should call createNetworkApplianceStaticRoute successfully', function(done) {
        //uncomment below and update the code to test createNetworkApplianceStaticRoute
        //instance.createNetworkApplianceStaticRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkApplianceTrafficShapingCustomPerformanceClass', function() {
      it('should call createNetworkApplianceTrafficShapingCustomPerformanceClass successfully', function(done) {
        //uncomment below and update the code to test createNetworkApplianceTrafficShapingCustomPerformanceClass
        //instance.createNetworkApplianceTrafficShapingCustomPerformanceClass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkApplianceVlan', function() {
      it('should call createNetworkApplianceVlan successfully', function(done) {
        //uncomment below and update the code to test createNetworkApplianceVlan
        //instance.createNetworkApplianceVlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkAppliancePrefixesDelegatedStatic', function() {
      it('should call deleteNetworkAppliancePrefixesDelegatedStatic successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkAppliancePrefixesDelegatedStatic
        //instance.deleteNetworkAppliancePrefixesDelegatedStatic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkApplianceStaticRoute', function() {
      it('should call deleteNetworkApplianceStaticRoute successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkApplianceStaticRoute
        //instance.deleteNetworkApplianceStaticRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkApplianceTrafficShapingCustomPerformanceClass', function() {
      it('should call deleteNetworkApplianceTrafficShapingCustomPerformanceClass successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkApplianceTrafficShapingCustomPerformanceClass
        //instance.deleteNetworkApplianceTrafficShapingCustomPerformanceClass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkApplianceVlan', function() {
      it('should call deleteNetworkApplianceVlan successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkApplianceVlan
        //instance.deleteNetworkApplianceVlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceApplianceDhcpSubnets', function() {
      it('should call getDeviceApplianceDhcpSubnets successfully', function(done) {
        //uncomment below and update the code to test getDeviceApplianceDhcpSubnets
        //instance.getDeviceApplianceDhcpSubnets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceAppliancePerformance', function() {
      it('should call getDeviceAppliancePerformance successfully', function(done) {
        //uncomment below and update the code to test getDeviceAppliancePerformance
        //instance.getDeviceAppliancePerformance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceAppliancePrefixesDelegated', function() {
      it('should call getDeviceAppliancePrefixesDelegated successfully', function(done) {
        //uncomment below and update the code to test getDeviceAppliancePrefixesDelegated
        //instance.getDeviceAppliancePrefixesDelegated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceAppliancePrefixesDelegatedVlanAssignments', function() {
      it('should call getDeviceAppliancePrefixesDelegatedVlanAssignments successfully', function(done) {
        //uncomment below and update the code to test getDeviceAppliancePrefixesDelegatedVlanAssignments
        //instance.getDeviceAppliancePrefixesDelegatedVlanAssignments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceApplianceUplinksSettings', function() {
      it('should call getDeviceApplianceUplinksSettings successfully', function(done) {
        //uncomment below and update the code to test getDeviceApplianceUplinksSettings
        //instance.getDeviceApplianceUplinksSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceClientSecurityEvents', function() {
      it('should call getNetworkApplianceClientSecurityEvents successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceClientSecurityEvents
        //instance.getNetworkApplianceClientSecurityEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceConnectivityMonitoringDestinations', function() {
      it('should call getNetworkApplianceConnectivityMonitoringDestinations successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceConnectivityMonitoringDestinations
        //instance.getNetworkApplianceConnectivityMonitoringDestinations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceContentFiltering', function() {
      it('should call getNetworkApplianceContentFiltering successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceContentFiltering
        //instance.getNetworkApplianceContentFiltering(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceContentFilteringCategories', function() {
      it('should call getNetworkApplianceContentFilteringCategories successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceContentFilteringCategories
        //instance.getNetworkApplianceContentFilteringCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallCellularFirewallRules', function() {
      it('should call getNetworkApplianceFirewallCellularFirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallCellularFirewallRules
        //instance.getNetworkApplianceFirewallCellularFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallFirewalledService', function() {
      it('should call getNetworkApplianceFirewallFirewalledService successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallFirewalledService
        //instance.getNetworkApplianceFirewallFirewalledService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallFirewalledServices', function() {
      it('should call getNetworkApplianceFirewallFirewalledServices successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallFirewalledServices
        //instance.getNetworkApplianceFirewallFirewalledServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallInboundCellularFirewallRules', function() {
      it('should call getNetworkApplianceFirewallInboundCellularFirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallInboundCellularFirewallRules
        //instance.getNetworkApplianceFirewallInboundCellularFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallInboundFirewallRules', function() {
      it('should call getNetworkApplianceFirewallInboundFirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallInboundFirewallRules
        //instance.getNetworkApplianceFirewallInboundFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL3FirewallRules', function() {
      it('should call getNetworkApplianceFirewallL3FirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL3FirewallRules
        //instance.getNetworkApplianceFirewallL3FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL7FirewallRules', function() {
      it('should call getNetworkApplianceFirewallL7FirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL7FirewallRules
        //instance.getNetworkApplianceFirewallL7FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL7FirewallRulesApplicationCategories', function() {
      it('should call getNetworkApplianceFirewallL7FirewallRulesApplicationCategories successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL7FirewallRulesApplicationCategories
        //instance.getNetworkApplianceFirewallL7FirewallRulesApplicationCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallOneToManyNatRules', function() {
      it('should call getNetworkApplianceFirewallOneToManyNatRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallOneToManyNatRules
        //instance.getNetworkApplianceFirewallOneToManyNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallOneToOneNatRules', function() {
      it('should call getNetworkApplianceFirewallOneToOneNatRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallOneToOneNatRules
        //instance.getNetworkApplianceFirewallOneToOneNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallPortForwardingRules', function() {
      it('should call getNetworkApplianceFirewallPortForwardingRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallPortForwardingRules
        //instance.getNetworkApplianceFirewallPortForwardingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallSettings', function() {
      it('should call getNetworkApplianceFirewallSettings successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallSettings
        //instance.getNetworkApplianceFirewallSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePort', function() {
      it('should call getNetworkAppliancePort successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePort
        //instance.getNetworkAppliancePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePorts', function() {
      it('should call getNetworkAppliancePorts successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePorts
        //instance.getNetworkAppliancePorts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePrefixesDelegatedStatic', function() {
      it('should call getNetworkAppliancePrefixesDelegatedStatic successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePrefixesDelegatedStatic
        //instance.getNetworkAppliancePrefixesDelegatedStatic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePrefixesDelegatedStatics', function() {
      it('should call getNetworkAppliancePrefixesDelegatedStatics successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePrefixesDelegatedStatics
        //instance.getNetworkAppliancePrefixesDelegatedStatics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSecurityEvents', function() {
      it('should call getNetworkApplianceSecurityEvents successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSecurityEvents
        //instance.getNetworkApplianceSecurityEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSecurityIntrusion', function() {
      it('should call getNetworkApplianceSecurityIntrusion successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSecurityIntrusion
        //instance.getNetworkApplianceSecurityIntrusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSecurityMalware', function() {
      it('should call getNetworkApplianceSecurityMalware successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSecurityMalware
        //instance.getNetworkApplianceSecurityMalware(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSettings', function() {
      it('should call getNetworkApplianceSettings successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSettings
        //instance.getNetworkApplianceSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSingleLan', function() {
      it('should call getNetworkApplianceSingleLan successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSingleLan
        //instance.getNetworkApplianceSingleLan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSsid', function() {
      it('should call getNetworkApplianceSsid successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSsid
        //instance.getNetworkApplianceSsid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSsids', function() {
      it('should call getNetworkApplianceSsids successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSsids
        //instance.getNetworkApplianceSsids(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceStaticRoute', function() {
      it('should call getNetworkApplianceStaticRoute successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceStaticRoute
        //instance.getNetworkApplianceStaticRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceStaticRoutes', function() {
      it('should call getNetworkApplianceStaticRoutes successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceStaticRoutes
        //instance.getNetworkApplianceStaticRoutes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceTrafficShaping', function() {
      it('should call getNetworkApplianceTrafficShaping successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceTrafficShaping
        //instance.getNetworkApplianceTrafficShaping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceTrafficShapingCustomPerformanceClass', function() {
      it('should call getNetworkApplianceTrafficShapingCustomPerformanceClass successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceTrafficShapingCustomPerformanceClass
        //instance.getNetworkApplianceTrafficShapingCustomPerformanceClass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceTrafficShapingCustomPerformanceClasses', function() {
      it('should call getNetworkApplianceTrafficShapingCustomPerformanceClasses successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceTrafficShapingCustomPerformanceClasses
        //instance.getNetworkApplianceTrafficShapingCustomPerformanceClasses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceTrafficShapingRules', function() {
      it('should call getNetworkApplianceTrafficShapingRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceTrafficShapingRules
        //instance.getNetworkApplianceTrafficShapingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceTrafficShapingUplinkBandwidth', function() {
      it('should call getNetworkApplianceTrafficShapingUplinkBandwidth successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceTrafficShapingUplinkBandwidth
        //instance.getNetworkApplianceTrafficShapingUplinkBandwidth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceTrafficShapingUplinkSelection', function() {
      it('should call getNetworkApplianceTrafficShapingUplinkSelection successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceTrafficShapingUplinkSelection
        //instance.getNetworkApplianceTrafficShapingUplinkSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceUplinksUsageHistory', function() {
      it('should call getNetworkApplianceUplinksUsageHistory successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceUplinksUsageHistory
        //instance.getNetworkApplianceUplinksUsageHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceVlan', function() {
      it('should call getNetworkApplianceVlan successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceVlan
        //instance.getNetworkApplianceVlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceVlans', function() {
      it('should call getNetworkApplianceVlans successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceVlans
        //instance.getNetworkApplianceVlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceVlansSettings', function() {
      it('should call getNetworkApplianceVlansSettings successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceVlansSettings
        //instance.getNetworkApplianceVlansSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceVpnBgp', function() {
      it('should call getNetworkApplianceVpnBgp successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceVpnBgp
        //instance.getNetworkApplianceVpnBgp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceVpnSiteToSiteVpn', function() {
      it('should call getNetworkApplianceVpnSiteToSiteVpn successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceVpnSiteToSiteVpn
        //instance.getNetworkApplianceVpnSiteToSiteVpn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceWarmSpare', function() {
      it('should call getNetworkApplianceWarmSpare successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceWarmSpare
        //instance.getNetworkApplianceWarmSpare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceSecurityEvents', function() {
      it('should call getOrganizationApplianceSecurityEvents successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceSecurityEvents
        //instance.getOrganizationApplianceSecurityEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceSecurityIntrusion', function() {
      it('should call getOrganizationApplianceSecurityIntrusion successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceSecurityIntrusion
        //instance.getOrganizationApplianceSecurityIntrusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceUplinkStatuses', function() {
      it('should call getOrganizationApplianceUplinkStatuses successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceUplinkStatuses
        //instance.getOrganizationApplianceUplinkStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceVpnStats', function() {
      it('should call getOrganizationApplianceVpnStats successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceVpnStats
        //instance.getOrganizationApplianceVpnStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceVpnStatuses', function() {
      it('should call getOrganizationApplianceVpnStatuses successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceVpnStatuses
        //instance.getOrganizationApplianceVpnStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceVpnThirdPartyVPNPeers', function() {
      it('should call getOrganizationApplianceVpnThirdPartyVPNPeers successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceVpnThirdPartyVPNPeers
        //instance.getOrganizationApplianceVpnThirdPartyVPNPeers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationApplianceVpnVpnFirewallRules', function() {
      it('should call getOrganizationApplianceVpnVpnFirewallRules successfully', function(done) {
        //uncomment below and update the code to test getOrganizationApplianceVpnVpnFirewallRules
        //instance.getOrganizationApplianceVpnVpnFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swapNetworkApplianceWarmSpare', function() {
      it('should call swapNetworkApplianceWarmSpare successfully', function(done) {
        //uncomment below and update the code to test swapNetworkApplianceWarmSpare
        //instance.swapNetworkApplianceWarmSpare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceApplianceUplinksSettings', function() {
      it('should call updateDeviceApplianceUplinksSettings successfully', function(done) {
        //uncomment below and update the code to test updateDeviceApplianceUplinksSettings
        //instance.updateDeviceApplianceUplinksSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceConnectivityMonitoringDestinations', function() {
      it('should call updateNetworkApplianceConnectivityMonitoringDestinations successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceConnectivityMonitoringDestinations
        //instance.updateNetworkApplianceConnectivityMonitoringDestinations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceContentFiltering', function() {
      it('should call updateNetworkApplianceContentFiltering successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceContentFiltering
        //instance.updateNetworkApplianceContentFiltering(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallCellularFirewallRules', function() {
      it('should call updateNetworkApplianceFirewallCellularFirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallCellularFirewallRules
        //instance.updateNetworkApplianceFirewallCellularFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallFirewalledService', function() {
      it('should call updateNetworkApplianceFirewallFirewalledService successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallFirewalledService
        //instance.updateNetworkApplianceFirewallFirewalledService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallInboundCellularFirewallRules', function() {
      it('should call updateNetworkApplianceFirewallInboundCellularFirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallInboundCellularFirewallRules
        //instance.updateNetworkApplianceFirewallInboundCellularFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallInboundFirewallRules', function() {
      it('should call updateNetworkApplianceFirewallInboundFirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallInboundFirewallRules
        //instance.updateNetworkApplianceFirewallInboundFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallL3FirewallRules', function() {
      it('should call updateNetworkApplianceFirewallL3FirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallL3FirewallRules
        //instance.updateNetworkApplianceFirewallL3FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallL7FirewallRules', function() {
      it('should call updateNetworkApplianceFirewallL7FirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallL7FirewallRules
        //instance.updateNetworkApplianceFirewallL7FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallOneToManyNatRules', function() {
      it('should call updateNetworkApplianceFirewallOneToManyNatRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallOneToManyNatRules
        //instance.updateNetworkApplianceFirewallOneToManyNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallOneToOneNatRules', function() {
      it('should call updateNetworkApplianceFirewallOneToOneNatRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallOneToOneNatRules
        //instance.updateNetworkApplianceFirewallOneToOneNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallPortForwardingRules', function() {
      it('should call updateNetworkApplianceFirewallPortForwardingRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallPortForwardingRules
        //instance.updateNetworkApplianceFirewallPortForwardingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallSettings', function() {
      it('should call updateNetworkApplianceFirewallSettings successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallSettings
        //instance.updateNetworkApplianceFirewallSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkAppliancePort', function() {
      it('should call updateNetworkAppliancePort successfully', function(done) {
        //uncomment below and update the code to test updateNetworkAppliancePort
        //instance.updateNetworkAppliancePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkAppliancePrefixesDelegatedStatic', function() {
      it('should call updateNetworkAppliancePrefixesDelegatedStatic successfully', function(done) {
        //uncomment below and update the code to test updateNetworkAppliancePrefixesDelegatedStatic
        //instance.updateNetworkAppliancePrefixesDelegatedStatic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceSecurityIntrusion', function() {
      it('should call updateNetworkApplianceSecurityIntrusion successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceSecurityIntrusion
        //instance.updateNetworkApplianceSecurityIntrusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceSecurityMalware', function() {
      it('should call updateNetworkApplianceSecurityMalware successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceSecurityMalware
        //instance.updateNetworkApplianceSecurityMalware(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceSettings', function() {
      it('should call updateNetworkApplianceSettings successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceSettings
        //instance.updateNetworkApplianceSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceSingleLan', function() {
      it('should call updateNetworkApplianceSingleLan successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceSingleLan
        //instance.updateNetworkApplianceSingleLan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceSsid', function() {
      it('should call updateNetworkApplianceSsid successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceSsid
        //instance.updateNetworkApplianceSsid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceStaticRoute', function() {
      it('should call updateNetworkApplianceStaticRoute successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceStaticRoute
        //instance.updateNetworkApplianceStaticRoute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceTrafficShaping', function() {
      it('should call updateNetworkApplianceTrafficShaping successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceTrafficShaping
        //instance.updateNetworkApplianceTrafficShaping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceTrafficShapingCustomPerformanceClass', function() {
      it('should call updateNetworkApplianceTrafficShapingCustomPerformanceClass successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceTrafficShapingCustomPerformanceClass
        //instance.updateNetworkApplianceTrafficShapingCustomPerformanceClass(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceTrafficShapingRules', function() {
      it('should call updateNetworkApplianceTrafficShapingRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceTrafficShapingRules
        //instance.updateNetworkApplianceTrafficShapingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceTrafficShapingUplinkBandwidth', function() {
      it('should call updateNetworkApplianceTrafficShapingUplinkBandwidth successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceTrafficShapingUplinkBandwidth
        //instance.updateNetworkApplianceTrafficShapingUplinkBandwidth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceTrafficShapingUplinkSelection', function() {
      it('should call updateNetworkApplianceTrafficShapingUplinkSelection successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceTrafficShapingUplinkSelection
        //instance.updateNetworkApplianceTrafficShapingUplinkSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceVlan', function() {
      it('should call updateNetworkApplianceVlan successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceVlan
        //instance.updateNetworkApplianceVlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceVlansSettings', function() {
      it('should call updateNetworkApplianceVlansSettings successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceVlansSettings
        //instance.updateNetworkApplianceVlansSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceVpnBgp', function() {
      it('should call updateNetworkApplianceVpnBgp successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceVpnBgp
        //instance.updateNetworkApplianceVpnBgp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceVpnSiteToSiteVpn', function() {
      it('should call updateNetworkApplianceVpnSiteToSiteVpn successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceVpnSiteToSiteVpn
        //instance.updateNetworkApplianceVpnSiteToSiteVpn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceWarmSpare', function() {
      it('should call updateNetworkApplianceWarmSpare successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceWarmSpare
        //instance.updateNetworkApplianceWarmSpare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationApplianceSecurityIntrusion', function() {
      it('should call updateOrganizationApplianceSecurityIntrusion successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationApplianceSecurityIntrusion
        //instance.updateOrganizationApplianceSecurityIntrusion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationApplianceVpnThirdPartyVPNPeers', function() {
      it('should call updateOrganizationApplianceVpnThirdPartyVPNPeers successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationApplianceVpnThirdPartyVPNPeers
        //instance.updateOrganizationApplianceVpnThirdPartyVPNPeers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationApplianceVpnVpnFirewallRules', function() {
      it('should call updateOrganizationApplianceVpnVpnFirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationApplianceVpnVpnFirewallRules
        //instance.updateOrganizationApplianceVpnVpnFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
