/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.AlertsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlertsApi', function() {
    describe('createNetworkSensorAlertsProfile_1', function() {
      it('should call createNetworkSensorAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSensorAlertsProfile_1
        //instance.createNetworkSensorAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganizationAlertsProfile_1', function() {
      it('should call createOrganizationAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test createOrganizationAlertsProfile_1
        //instance.createOrganizationAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSensorAlertsProfile_1', function() {
      it('should call deleteNetworkSensorAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSensorAlertsProfile_1
        //instance.deleteNetworkSensorAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationAlertsProfile_1', function() {
      it('should call deleteOrganizationAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationAlertsProfile_1
        //instance.deleteOrganizationAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAlertsHistory_1', function() {
      it('should call getNetworkAlertsHistory_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkAlertsHistory_1
        //instance.getNetworkAlertsHistory_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAlertsSettings_1', function() {
      it('should call getNetworkAlertsSettings_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkAlertsSettings_1
        //instance.getNetworkAlertsSettings_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkHealthAlerts_2', function() {
      it('should call getNetworkHealthAlerts_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkHealthAlerts_2
        //instance.getNetworkHealthAlerts_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsCurrentOverviewByMetric_1', function() {
      it('should call getNetworkSensorAlertsCurrentOverviewByMetric_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsCurrentOverviewByMetric_1
        //instance.getNetworkSensorAlertsCurrentOverviewByMetric_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsOverviewByMetric_1', function() {
      it('should call getNetworkSensorAlertsOverviewByMetric_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsOverviewByMetric_1
        //instance.getNetworkSensorAlertsOverviewByMetric_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsProfile_1', function() {
      it('should call getNetworkSensorAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsProfile_1
        //instance.getNetworkSensorAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsProfiles_1', function() {
      it('should call getNetworkSensorAlertsProfiles_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsProfiles_1
        //instance.getNetworkSensorAlertsProfiles_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationAlertsProfiles_1', function() {
      it('should call getOrganizationAlertsProfiles_1 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationAlertsProfiles_1
        //instance.getOrganizationAlertsProfiles_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkAlertsSettings_1', function() {
      it('should call updateNetworkAlertsSettings_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkAlertsSettings_1
        //instance.updateNetworkAlertsSettings_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSensorAlertsProfile_1', function() {
      it('should call updateNetworkSensorAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSensorAlertsProfile_1
        //instance.updateNetworkSensorAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationAlertsProfile_1', function() {
      it('should call updateOrganizationAlertsProfile_1 successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationAlertsProfile_1
        //instance.updateOrganizationAlertsProfile_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
