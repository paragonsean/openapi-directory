/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.RoutingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RoutingApi', function() {
    describe('createDeviceSwitchRoutingInterface_1', function() {
      it('should call createDeviceSwitchRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test createDeviceSwitchRoutingInterface_1
        //instance.createDeviceSwitchRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDeviceSwitchRoutingStaticRoute_1', function() {
      it('should call createDeviceSwitchRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test createDeviceSwitchRoutingStaticRoute_1
        //instance.createDeviceSwitchRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSwitchRoutingMulticastRendezvousPoint_1', function() {
      it('should call createNetworkSwitchRoutingMulticastRendezvousPoint_1 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSwitchRoutingMulticastRendezvousPoint_1
        //instance.createNetworkSwitchRoutingMulticastRendezvousPoint_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSwitchStackRoutingInterface_2', function() {
      it('should call createNetworkSwitchStackRoutingInterface_2 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSwitchStackRoutingInterface_2
        //instance.createNetworkSwitchStackRoutingInterface_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNetworkSwitchStackRoutingStaticRoute_2', function() {
      it('should call createNetworkSwitchStackRoutingStaticRoute_2 successfully', function(done) {
        //uncomment below and update the code to test createNetworkSwitchStackRoutingStaticRoute_2
        //instance.createNetworkSwitchStackRoutingStaticRoute_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDeviceSwitchRoutingInterface_1', function() {
      it('should call deleteDeviceSwitchRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test deleteDeviceSwitchRoutingInterface_1
        //instance.deleteDeviceSwitchRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDeviceSwitchRoutingStaticRoute_1', function() {
      it('should call deleteDeviceSwitchRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test deleteDeviceSwitchRoutingStaticRoute_1
        //instance.deleteDeviceSwitchRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSwitchRoutingMulticastRendezvousPoint_1', function() {
      it('should call deleteNetworkSwitchRoutingMulticastRendezvousPoint_1 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSwitchRoutingMulticastRendezvousPoint_1
        //instance.deleteNetworkSwitchRoutingMulticastRendezvousPoint_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSwitchStackRoutingInterface_2', function() {
      it('should call deleteNetworkSwitchStackRoutingInterface_2 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSwitchStackRoutingInterface_2
        //instance.deleteNetworkSwitchStackRoutingInterface_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSwitchStackRoutingStaticRoute_2', function() {
      it('should call deleteNetworkSwitchStackRoutingStaticRoute_2 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSwitchStackRoutingStaticRoute_2
        //instance.deleteNetworkSwitchStackRoutingStaticRoute_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchRoutingInterfaceDhcp_1', function() {
      it('should call getDeviceSwitchRoutingInterfaceDhcp_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchRoutingInterfaceDhcp_1
        //instance.getDeviceSwitchRoutingInterfaceDhcp_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchRoutingInterface_1', function() {
      it('should call getDeviceSwitchRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchRoutingInterface_1
        //instance.getDeviceSwitchRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchRoutingInterfaces_1', function() {
      it('should call getDeviceSwitchRoutingInterfaces_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchRoutingInterfaces_1
        //instance.getDeviceSwitchRoutingInterfaces_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchRoutingStaticRoute_1', function() {
      it('should call getDeviceSwitchRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchRoutingStaticRoute_1
        //instance.getDeviceSwitchRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchRoutingStaticRoutes_1', function() {
      it('should call getDeviceSwitchRoutingStaticRoutes_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchRoutingStaticRoutes_1
        //instance.getDeviceSwitchRoutingStaticRoutes_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchRoutingMulticastRendezvousPoint_1', function() {
      it('should call getNetworkSwitchRoutingMulticastRendezvousPoint_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchRoutingMulticastRendezvousPoint_1
        //instance.getNetworkSwitchRoutingMulticastRendezvousPoint_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchRoutingMulticastRendezvousPoints_1', function() {
      it('should call getNetworkSwitchRoutingMulticastRendezvousPoints_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchRoutingMulticastRendezvousPoints_1
        //instance.getNetworkSwitchRoutingMulticastRendezvousPoints_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchRoutingMulticast_1', function() {
      it('should call getNetworkSwitchRoutingMulticast_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchRoutingMulticast_1
        //instance.getNetworkSwitchRoutingMulticast_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchRoutingOspf_1', function() {
      it('should call getNetworkSwitchRoutingOspf_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchRoutingOspf_1
        //instance.getNetworkSwitchRoutingOspf_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingInterfaceDhcp_2', function() {
      it('should call getNetworkSwitchStackRoutingInterfaceDhcp_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingInterfaceDhcp_2
        //instance.getNetworkSwitchStackRoutingInterfaceDhcp_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingInterface_2', function() {
      it('should call getNetworkSwitchStackRoutingInterface_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingInterface_2
        //instance.getNetworkSwitchStackRoutingInterface_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingInterfaces_2', function() {
      it('should call getNetworkSwitchStackRoutingInterfaces_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingInterfaces_2
        //instance.getNetworkSwitchStackRoutingInterfaces_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingStaticRoute_2', function() {
      it('should call getNetworkSwitchStackRoutingStaticRoute_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingStaticRoute_2
        //instance.getNetworkSwitchStackRoutingStaticRoute_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSwitchStackRoutingStaticRoutes_2', function() {
      it('should call getNetworkSwitchStackRoutingStaticRoutes_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkSwitchStackRoutingStaticRoutes_2
        //instance.getNetworkSwitchStackRoutingStaticRoutes_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceSwitchRoutingInterfaceDhcp_1', function() {
      it('should call updateDeviceSwitchRoutingInterfaceDhcp_1 successfully', function(done) {
        //uncomment below and update the code to test updateDeviceSwitchRoutingInterfaceDhcp_1
        //instance.updateDeviceSwitchRoutingInterfaceDhcp_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceSwitchRoutingInterface_1', function() {
      it('should call updateDeviceSwitchRoutingInterface_1 successfully', function(done) {
        //uncomment below and update the code to test updateDeviceSwitchRoutingInterface_1
        //instance.updateDeviceSwitchRoutingInterface_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceSwitchRoutingStaticRoute_1', function() {
      it('should call updateDeviceSwitchRoutingStaticRoute_1 successfully', function(done) {
        //uncomment below and update the code to test updateDeviceSwitchRoutingStaticRoute_1
        //instance.updateDeviceSwitchRoutingStaticRoute_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchRoutingMulticastRendezvousPoint_1', function() {
      it('should call updateNetworkSwitchRoutingMulticastRendezvousPoint_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchRoutingMulticastRendezvousPoint_1
        //instance.updateNetworkSwitchRoutingMulticastRendezvousPoint_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchRoutingMulticast_1', function() {
      it('should call updateNetworkSwitchRoutingMulticast_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchRoutingMulticast_1
        //instance.updateNetworkSwitchRoutingMulticast_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchRoutingOspf_1', function() {
      it('should call updateNetworkSwitchRoutingOspf_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchRoutingOspf_1
        //instance.updateNetworkSwitchRoutingOspf_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchStackRoutingInterfaceDhcp_2', function() {
      it('should call updateNetworkSwitchStackRoutingInterfaceDhcp_2 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchStackRoutingInterfaceDhcp_2
        //instance.updateNetworkSwitchStackRoutingInterfaceDhcp_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchStackRoutingInterface_2', function() {
      it('should call updateNetworkSwitchStackRoutingInterface_2 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchStackRoutingInterface_2
        //instance.updateNetworkSwitchStackRoutingInterface_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSwitchStackRoutingStaticRoute_2', function() {
      it('should call updateNetworkSwitchStackRoutingStaticRoute_2 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSwitchStackRoutingStaticRoute_2
        //instance.updateNetworkSwitchStackRoutingStaticRoute_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
