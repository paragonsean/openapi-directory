/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.FirewallApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FirewallApi', function() {
    describe('getNetworkApplianceFirewallCellularFirewallRules_1', function() {
      it('should call getNetworkApplianceFirewallCellularFirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallCellularFirewallRules_1
        //instance.getNetworkApplianceFirewallCellularFirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallFirewalledService_1', function() {
      it('should call getNetworkApplianceFirewallFirewalledService_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallFirewalledService_1
        //instance.getNetworkApplianceFirewallFirewalledService_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallFirewalledServices_1', function() {
      it('should call getNetworkApplianceFirewallFirewalledServices_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallFirewalledServices_1
        //instance.getNetworkApplianceFirewallFirewalledServices_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallInboundCellularFirewallRules_1', function() {
      it('should call getNetworkApplianceFirewallInboundCellularFirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallInboundCellularFirewallRules_1
        //instance.getNetworkApplianceFirewallInboundCellularFirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallInboundFirewallRules_1', function() {
      it('should call getNetworkApplianceFirewallInboundFirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallInboundFirewallRules_1
        //instance.getNetworkApplianceFirewallInboundFirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL3FirewallRules_1', function() {
      it('should call getNetworkApplianceFirewallL3FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL3FirewallRules_1
        //instance.getNetworkApplianceFirewallL3FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL7FirewallRulesApplicationCategories_1', function() {
      it('should call getNetworkApplianceFirewallL7FirewallRulesApplicationCategories_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL7FirewallRulesApplicationCategories_1
        //instance.getNetworkApplianceFirewallL7FirewallRulesApplicationCategories_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL7FirewallRules_1', function() {
      it('should call getNetworkApplianceFirewallL7FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL7FirewallRules_1
        //instance.getNetworkApplianceFirewallL7FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallOneToManyNatRules_1', function() {
      it('should call getNetworkApplianceFirewallOneToManyNatRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallOneToManyNatRules_1
        //instance.getNetworkApplianceFirewallOneToManyNatRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallOneToOneNatRules_1', function() {
      it('should call getNetworkApplianceFirewallOneToOneNatRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallOneToOneNatRules_1
        //instance.getNetworkApplianceFirewallOneToOneNatRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallPortForwardingRules_1', function() {
      it('should call getNetworkApplianceFirewallPortForwardingRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallPortForwardingRules_1
        //instance.getNetworkApplianceFirewallPortForwardingRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallSettings_1', function() {
      it('should call getNetworkApplianceFirewallSettings_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallSettings_1
        //instance.getNetworkApplianceFirewallSettings_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidFirewallL3FirewallRules_2', function() {
      it('should call getNetworkWirelessSsidFirewallL3FirewallRules_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidFirewallL3FirewallRules_2
        //instance.getNetworkWirelessSsidFirewallL3FirewallRules_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidFirewallL7FirewallRules_2', function() {
      it('should call getNetworkWirelessSsidFirewallL7FirewallRules_2 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidFirewallL7FirewallRules_2
        //instance.getNetworkWirelessSsidFirewallL7FirewallRules_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallCellularFirewallRules_1', function() {
      it('should call updateNetworkApplianceFirewallCellularFirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallCellularFirewallRules_1
        //instance.updateNetworkApplianceFirewallCellularFirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallFirewalledService_1', function() {
      it('should call updateNetworkApplianceFirewallFirewalledService_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallFirewalledService_1
        //instance.updateNetworkApplianceFirewallFirewalledService_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallInboundCellularFirewallRules_1', function() {
      it('should call updateNetworkApplianceFirewallInboundCellularFirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallInboundCellularFirewallRules_1
        //instance.updateNetworkApplianceFirewallInboundCellularFirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallInboundFirewallRules_1', function() {
      it('should call updateNetworkApplianceFirewallInboundFirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallInboundFirewallRules_1
        //instance.updateNetworkApplianceFirewallInboundFirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallL3FirewallRules_1', function() {
      it('should call updateNetworkApplianceFirewallL3FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallL3FirewallRules_1
        //instance.updateNetworkApplianceFirewallL3FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallL7FirewallRules_1', function() {
      it('should call updateNetworkApplianceFirewallL7FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallL7FirewallRules_1
        //instance.updateNetworkApplianceFirewallL7FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallOneToManyNatRules_1', function() {
      it('should call updateNetworkApplianceFirewallOneToManyNatRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallOneToManyNatRules_1
        //instance.updateNetworkApplianceFirewallOneToManyNatRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallOneToOneNatRules_1', function() {
      it('should call updateNetworkApplianceFirewallOneToOneNatRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallOneToOneNatRules_1
        //instance.updateNetworkApplianceFirewallOneToOneNatRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallPortForwardingRules_1', function() {
      it('should call updateNetworkApplianceFirewallPortForwardingRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallPortForwardingRules_1
        //instance.updateNetworkApplianceFirewallPortForwardingRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallSettings_1', function() {
      it('should call updateNetworkApplianceFirewallSettings_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallSettings_1
        //instance.updateNetworkApplianceFirewallSettings_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidFirewallL3FirewallRules_2', function() {
      it('should call updateNetworkWirelessSsidFirewallL3FirewallRules_2 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidFirewallL3FirewallRules_2
        //instance.updateNetworkWirelessSsidFirewallL3FirewallRules_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidFirewallL7FirewallRules_2', function() {
      it('should call updateNetworkWirelessSsidFirewallL7FirewallRules_2 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidFirewallL7FirewallRules_2
        //instance.updateNetworkWirelessSsidFirewallL7FirewallRules_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
