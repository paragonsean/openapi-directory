/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.SensorApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SensorApi', function() {
    describe('createNetworkSensorAlertsProfile', function() {
      it('should call createNetworkSensorAlertsProfile successfully', function(done) {
        //uncomment below and update the code to test createNetworkSensorAlertsProfile
        //instance.createNetworkSensorAlertsProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkSensorAlertsProfile', function() {
      it('should call deleteNetworkSensorAlertsProfile successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkSensorAlertsProfile
        //instance.deleteNetworkSensorAlertsProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSensorRelationships', function() {
      it('should call getDeviceSensorRelationships successfully', function(done) {
        //uncomment below and update the code to test getDeviceSensorRelationships
        //instance.getDeviceSensorRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsCurrentOverviewByMetric', function() {
      it('should call getNetworkSensorAlertsCurrentOverviewByMetric successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsCurrentOverviewByMetric
        //instance.getNetworkSensorAlertsCurrentOverviewByMetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsOverviewByMetric', function() {
      it('should call getNetworkSensorAlertsOverviewByMetric successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsOverviewByMetric
        //instance.getNetworkSensorAlertsOverviewByMetric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsProfile', function() {
      it('should call getNetworkSensorAlertsProfile successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsProfile
        //instance.getNetworkSensorAlertsProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorAlertsProfiles', function() {
      it('should call getNetworkSensorAlertsProfiles successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorAlertsProfiles
        //instance.getNetworkSensorAlertsProfiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSensorRelationships', function() {
      it('should call getNetworkSensorRelationships successfully', function(done) {
        //uncomment below and update the code to test getNetworkSensorRelationships
        //instance.getNetworkSensorRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationSensorReadingsHistory', function() {
      it('should call getOrganizationSensorReadingsHistory successfully', function(done) {
        //uncomment below and update the code to test getOrganizationSensorReadingsHistory
        //instance.getOrganizationSensorReadingsHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationSensorReadingsLatest', function() {
      it('should call getOrganizationSensorReadingsLatest successfully', function(done) {
        //uncomment below and update the code to test getOrganizationSensorReadingsLatest
        //instance.getOrganizationSensorReadingsLatest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceSensorRelationships', function() {
      it('should call updateDeviceSensorRelationships successfully', function(done) {
        //uncomment below and update the code to test updateDeviceSensorRelationships
        //instance.updateDeviceSensorRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSensorAlertsProfile', function() {
      it('should call updateNetworkSensorAlertsProfile successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSensorAlertsProfile
        //instance.updateNetworkSensorAlertsProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
