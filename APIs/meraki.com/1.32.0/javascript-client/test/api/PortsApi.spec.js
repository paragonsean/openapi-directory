/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.PortsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PortsApi', function() {
    describe('cycleDeviceSwitchPorts_1', function() {
      it('should call cycleDeviceSwitchPorts_1 successfully', function(done) {
        //uncomment below and update the code to test cycleDeviceSwitchPorts_1
        //instance.cycleDeviceSwitchPorts_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPort_1', function() {
      it('should call getDeviceSwitchPort_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPort_1
        //instance.getDeviceSwitchPort_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPortsStatusesPackets_1', function() {
      it('should call getDeviceSwitchPortsStatusesPackets_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPortsStatusesPackets_1
        //instance.getDeviceSwitchPortsStatusesPackets_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPortsStatuses_1', function() {
      it('should call getDeviceSwitchPortsStatuses_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPortsStatuses_1
        //instance.getDeviceSwitchPortsStatuses_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPorts_1', function() {
      it('should call getDeviceSwitchPorts_1 successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPorts_1
        //instance.getDeviceSwitchPorts_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePort_1', function() {
      it('should call getNetworkAppliancePort_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePort_1
        //instance.getNetworkAppliancePort_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePorts_1', function() {
      it('should call getNetworkAppliancePorts_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePorts_1
        //instance.getNetworkAppliancePorts_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationConfigTemplateSwitchProfilePort_3', function() {
      it('should call getOrganizationConfigTemplateSwitchProfilePort_3 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationConfigTemplateSwitchProfilePort_3
        //instance.getOrganizationConfigTemplateSwitchProfilePort_3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationConfigTemplateSwitchProfilePorts_3', function() {
      it('should call getOrganizationConfigTemplateSwitchProfilePorts_3 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationConfigTemplateSwitchProfilePorts_3
        //instance.getOrganizationConfigTemplateSwitchProfilePorts_3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationSwitchPortsBySwitch_1', function() {
      it('should call getOrganizationSwitchPortsBySwitch_1 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationSwitchPortsBySwitch_1
        //instance.getOrganizationSwitchPortsBySwitch_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceSwitchPort_1', function() {
      it('should call updateDeviceSwitchPort_1 successfully', function(done) {
        //uncomment below and update the code to test updateDeviceSwitchPort_1
        //instance.updateDeviceSwitchPort_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkAppliancePort_1', function() {
      it('should call updateNetworkAppliancePort_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkAppliancePort_1
        //instance.updateNetworkAppliancePort_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationConfigTemplateSwitchProfilePort_3', function() {
      it('should call updateOrganizationConfigTemplateSwitchProfilePort_3 successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationConfigTemplateSwitchProfilePort_3
        //instance.updateOrganizationConfigTemplateSwitchProfilePort_3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
