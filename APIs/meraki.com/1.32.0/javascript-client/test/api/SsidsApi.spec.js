/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.SsidsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SsidsApi', function() {
    describe('createNetworkWirelessSsidIdentityPsk_1', function() {
      it('should call createNetworkWirelessSsidIdentityPsk_1 successfully', function(done) {
        //uncomment below and update the code to test createNetworkWirelessSsidIdentityPsk_1
        //instance.createNetworkWirelessSsidIdentityPsk_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetworkWirelessSsidIdentityPsk_1', function() {
      it('should call deleteNetworkWirelessSsidIdentityPsk_1 successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkWirelessSsidIdentityPsk_1
        //instance.deleteNetworkWirelessSsidIdentityPsk_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSsid_1', function() {
      it('should call getNetworkApplianceSsid_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSsid_1
        //instance.getNetworkApplianceSsid_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceSsids_1', function() {
      it('should call getNetworkApplianceSsids_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceSsids_1
        //instance.getNetworkApplianceSsids_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidBonjourForwarding_1', function() {
      it('should call getNetworkWirelessSsidBonjourForwarding_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidBonjourForwarding_1
        //instance.getNetworkWirelessSsidBonjourForwarding_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidDeviceTypeGroupPolicies_1', function() {
      it('should call getNetworkWirelessSsidDeviceTypeGroupPolicies_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidDeviceTypeGroupPolicies_1
        //instance.getNetworkWirelessSsidDeviceTypeGroupPolicies_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidEapOverride_1', function() {
      it('should call getNetworkWirelessSsidEapOverride_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidEapOverride_1
        //instance.getNetworkWirelessSsidEapOverride_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidFirewallL3FirewallRules_1', function() {
      it('should call getNetworkWirelessSsidFirewallL3FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidFirewallL3FirewallRules_1
        //instance.getNetworkWirelessSsidFirewallL3FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidFirewallL7FirewallRules_1', function() {
      it('should call getNetworkWirelessSsidFirewallL7FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidFirewallL7FirewallRules_1
        //instance.getNetworkWirelessSsidFirewallL7FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidHotspot20_1', function() {
      it('should call getNetworkWirelessSsidHotspot20_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidHotspot20_1
        //instance.getNetworkWirelessSsidHotspot20_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidIdentityPsk_1', function() {
      it('should call getNetworkWirelessSsidIdentityPsk_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidIdentityPsk_1
        //instance.getNetworkWirelessSsidIdentityPsk_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidIdentityPsks_1', function() {
      it('should call getNetworkWirelessSsidIdentityPsks_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidIdentityPsks_1
        //instance.getNetworkWirelessSsidIdentityPsks_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidSchedules_1', function() {
      it('should call getNetworkWirelessSsidSchedules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidSchedules_1
        //instance.getNetworkWirelessSsidSchedules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidSplashSettings_1', function() {
      it('should call getNetworkWirelessSsidSplashSettings_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidSplashSettings_1
        //instance.getNetworkWirelessSsidSplashSettings_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidTrafficShapingRules_1', function() {
      it('should call getNetworkWirelessSsidTrafficShapingRules_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidTrafficShapingRules_1
        //instance.getNetworkWirelessSsidTrafficShapingRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidVpn_1', function() {
      it('should call getNetworkWirelessSsidVpn_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidVpn_1
        //instance.getNetworkWirelessSsidVpn_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsid_1', function() {
      it('should call getNetworkWirelessSsid_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsid_1
        //instance.getNetworkWirelessSsid_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsids_1', function() {
      it('should call getNetworkWirelessSsids_1 successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsids_1
        //instance.getNetworkWirelessSsids_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationSummaryTopSsidsByUsage_3', function() {
      it('should call getOrganizationSummaryTopSsidsByUsage_3 successfully', function(done) {
        //uncomment below and update the code to test getOrganizationSummaryTopSsidsByUsage_3
        //instance.getOrganizationSummaryTopSsidsByUsage_3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceSsid_1', function() {
      it('should call updateNetworkApplianceSsid_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceSsid_1
        //instance.updateNetworkApplianceSsid_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidBonjourForwarding_1', function() {
      it('should call updateNetworkWirelessSsidBonjourForwarding_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidBonjourForwarding_1
        //instance.updateNetworkWirelessSsidBonjourForwarding_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidDeviceTypeGroupPolicies_1', function() {
      it('should call updateNetworkWirelessSsidDeviceTypeGroupPolicies_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidDeviceTypeGroupPolicies_1
        //instance.updateNetworkWirelessSsidDeviceTypeGroupPolicies_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidEapOverride_1', function() {
      it('should call updateNetworkWirelessSsidEapOverride_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidEapOverride_1
        //instance.updateNetworkWirelessSsidEapOverride_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidFirewallL3FirewallRules_1', function() {
      it('should call updateNetworkWirelessSsidFirewallL3FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidFirewallL3FirewallRules_1
        //instance.updateNetworkWirelessSsidFirewallL3FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidFirewallL7FirewallRules_1', function() {
      it('should call updateNetworkWirelessSsidFirewallL7FirewallRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidFirewallL7FirewallRules_1
        //instance.updateNetworkWirelessSsidFirewallL7FirewallRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidHotspot20_1', function() {
      it('should call updateNetworkWirelessSsidHotspot20_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidHotspot20_1
        //instance.updateNetworkWirelessSsidHotspot20_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidIdentityPsk_1', function() {
      it('should call updateNetworkWirelessSsidIdentityPsk_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidIdentityPsk_1
        //instance.updateNetworkWirelessSsidIdentityPsk_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidSchedules_1', function() {
      it('should call updateNetworkWirelessSsidSchedules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidSchedules_1
        //instance.updateNetworkWirelessSsidSchedules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidSplashSettings_1', function() {
      it('should call updateNetworkWirelessSsidSplashSettings_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidSplashSettings_1
        //instance.updateNetworkWirelessSsidSplashSettings_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidTrafficShapingRules_1', function() {
      it('should call updateNetworkWirelessSsidTrafficShapingRules_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidTrafficShapingRules_1
        //instance.updateNetworkWirelessSsidTrafficShapingRules_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidVpn_1', function() {
      it('should call updateNetworkWirelessSsidVpn_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidVpn_1
        //instance.updateNetworkWirelessSsidVpn_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsid_1', function() {
      it('should call updateNetworkWirelessSsid_1 successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsid_1
        //instance.updateNetworkWirelessSsid_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
