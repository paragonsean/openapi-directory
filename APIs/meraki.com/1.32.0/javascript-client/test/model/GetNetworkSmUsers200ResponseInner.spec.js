/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetNetworkSmUsers200ResponseInner', function() {
    it('should create an instance of GetNetworkSmUsers200ResponseInner', function() {
      // uncomment below and update the code to test GetNetworkSmUsers200ResponseInner
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be.a(MerakiDashboardApi.GetNetworkSmUsers200ResponseInner);
    });

    it('should have the property adGroups (base name: "adGroups")', function() {
      // uncomment below and update the code to test the property adGroups
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property asmGroups (base name: "asmGroups")', function() {
      // uncomment below and update the code to test the property asmGroups
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property azureAdGroups (base name: "azureAdGroups")', function() {
      // uncomment below and update the code to test the property azureAdGroups
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property hasIdentityCertificate (base name: "hasIdentityCertificate")', function() {
      // uncomment below and update the code to test the property hasIdentityCertificate
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property hasPassword (base name: "hasPassword")', function() {
      // uncomment below and update the code to test the property hasPassword
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property isExternal (base name: "isExternal")', function() {
      // uncomment below and update the code to test the property isExternal
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property samlGroups (base name: "samlGroups")', function() {
      // uncomment below and update the code to test the property samlGroups
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property userThumbnail (base name: "userThumbnail")', function() {
      // uncomment below and update the code to test the property userThumbnail
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new MerakiDashboardApi.GetNetworkSmUsers200ResponseInner();
      //expect(instance).to.be();
    });

  });

}));
