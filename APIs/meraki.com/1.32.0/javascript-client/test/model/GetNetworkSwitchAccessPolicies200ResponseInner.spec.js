/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetNetworkSwitchAccessPolicies200ResponseInner', function() {
    it('should create an instance of GetNetworkSwitchAccessPolicies200ResponseInner', function() {
      // uncomment below and update the code to test GetNetworkSwitchAccessPolicies200ResponseInner
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be.a(MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner);
    });

    it('should have the property accessPolicyType (base name: "accessPolicyType")', function() {
      // uncomment below and update the code to test the property accessPolicyType
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property dot1x (base name: "dot1x")', function() {
      // uncomment below and update the code to test the property dot1x
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property guestPortBouncing (base name: "guestPortBouncing")', function() {
      // uncomment below and update the code to test the property guestPortBouncing
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property guestVlanId (base name: "guestVlanId")', function() {
      // uncomment below and update the code to test the property guestVlanId
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property hostMode (base name: "hostMode")', function() {
      // uncomment below and update the code to test the property hostMode
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property increaseAccessSpeed (base name: "increaseAccessSpeed")', function() {
      // uncomment below and update the code to test the property increaseAccessSpeed
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radius (base name: "radius")', function() {
      // uncomment below and update the code to test the property radius
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radiusAccountingEnabled (base name: "radiusAccountingEnabled")', function() {
      // uncomment below and update the code to test the property radiusAccountingEnabled
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radiusAccountingServers (base name: "radiusAccountingServers")', function() {
      // uncomment below and update the code to test the property radiusAccountingServers
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radiusCoaSupportEnabled (base name: "radiusCoaSupportEnabled")', function() {
      // uncomment below and update the code to test the property radiusCoaSupportEnabled
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radiusGroupAttribute (base name: "radiusGroupAttribute")', function() {
      // uncomment below and update the code to test the property radiusGroupAttribute
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radiusServers (base name: "radiusServers")', function() {
      // uncomment below and update the code to test the property radiusServers
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property radiusTestingEnabled (base name: "radiusTestingEnabled")', function() {
      // uncomment below and update the code to test the property radiusTestingEnabled
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property urlRedirectWalledGardenEnabled (base name: "urlRedirectWalledGardenEnabled")', function() {
      // uncomment below and update the code to test the property urlRedirectWalledGardenEnabled
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property urlRedirectWalledGardenRanges (base name: "urlRedirectWalledGardenRanges")', function() {
      // uncomment below and update the code to test the property urlRedirectWalledGardenRanges
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property voiceVlanClients (base name: "voiceVlanClients")', function() {
      // uncomment below and update the code to test the property voiceVlanClients
      //var instance = new MerakiDashboardApi.GetNetworkSwitchAccessPolicies200ResponseInner();
      //expect(instance).to.be();
    });

  });

}));
