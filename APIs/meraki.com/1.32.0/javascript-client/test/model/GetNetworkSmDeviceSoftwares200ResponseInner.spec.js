/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetNetworkSmDeviceSoftwares200ResponseInner', function() {
    it('should create an instance of GetNetworkSmDeviceSoftwares200ResponseInner', function() {
      // uncomment below and update the code to test GetNetworkSmDeviceSoftwares200ResponseInner
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be.a(MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner);
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property bundleSize (base name: "bundleSize")', function() {
      // uncomment below and update the code to test the property bundleSize
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property deviceId (base name: "deviceId")', function() {
      // uncomment below and update the code to test the property deviceId
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property dynamicSize (base name: "dynamicSize")', function() {
      // uncomment below and update the code to test the property dynamicSize
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property installedAt (base name: "installedAt")', function() {
      // uncomment below and update the code to test the property installedAt
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property iosRedemptionCode (base name: "iosRedemptionCode")', function() {
      // uncomment below and update the code to test the property iosRedemptionCode
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property isManaged (base name: "isManaged")', function() {
      // uncomment below and update the code to test the property isManaged
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property itunesId (base name: "itunesId")', function() {
      // uncomment below and update the code to test the property itunesId
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property licenseKey (base name: "licenseKey")', function() {
      // uncomment below and update the code to test the property licenseKey
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property redemptionCode (base name: "redemptionCode")', function() {
      // uncomment below and update the code to test the property redemptionCode
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property shortVersion (base name: "shortVersion")', function() {
      // uncomment below and update the code to test the property shortVersion
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property toInstall (base name: "toInstall")', function() {
      // uncomment below and update the code to test the property toInstall
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property toUninstall (base name: "toUninstall")', function() {
      // uncomment below and update the code to test the property toUninstall
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property uninstalledAt (base name: "uninstalledAt")', function() {
      // uncomment below and update the code to test the property uninstalledAt
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property vendor (base name: "vendor")', function() {
      // uncomment below and update the code to test the property vendor
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new MerakiDashboardApi.GetNetworkSmDeviceSoftwares200ResponseInner();
      //expect(instance).to.be();
    });

  });

}));
