/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationPolicyObjectRequest from '../model/CreateOrganizationPolicyObjectRequest';
import CreateOrganizationPolicyObjectsGroupRequest from '../model/CreateOrganizationPolicyObjectsGroupRequest';
import UpdateOrganizationPolicyObjectRequest from '../model/UpdateOrganizationPolicyObjectRequest';
import UpdateOrganizationPolicyObjectsGroupRequest from '../model/UpdateOrganizationPolicyObjectsGroupRequest';

/**
* PolicyObjects service.
* @module api/PolicyObjectsApi
* @version 1.32.0
*/
export default class PolicyObjectsApi {

    /**
    * Constructs a new PolicyObjectsApi. 
    * @alias module:api/PolicyObjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationPolicyObject_1 operation.
     * @callback module:api/PolicyObjectsApi~createOrganizationPolicyObject_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Policy Object.
     * Creates a new Policy Object.
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationPolicyObjectRequest} createOrganizationPolicyObjectRequest 
     * @param {module:api/PolicyObjectsApi~createOrganizationPolicyObject_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationPolicyObject_1(organizationId, createOrganizationPolicyObjectRequest, callback) {
      let postBody = createOrganizationPolicyObjectRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationPolicyObject_1");
      }
      // verify the required parameter 'createOrganizationPolicyObjectRequest' is set
      if (createOrganizationPolicyObjectRequest === undefined || createOrganizationPolicyObjectRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationPolicyObjectRequest' when calling createOrganizationPolicyObject_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createOrganizationPolicyObjectsGroup_1 operation.
     * @callback module:api/PolicyObjectsApi~createOrganizationPolicyObjectsGroup_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Policy Object Group.
     * Creates a new Policy Object Group.
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationPolicyObjectsGroupRequest} createOrganizationPolicyObjectsGroupRequest 
     * @param {module:api/PolicyObjectsApi~createOrganizationPolicyObjectsGroup_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationPolicyObjectsGroup_1(organizationId, createOrganizationPolicyObjectsGroupRequest, callback) {
      let postBody = createOrganizationPolicyObjectsGroupRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationPolicyObjectsGroup_1");
      }
      // verify the required parameter 'createOrganizationPolicyObjectsGroupRequest' is set
      if (createOrganizationPolicyObjectsGroupRequest === undefined || createOrganizationPolicyObjectsGroupRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationPolicyObjectsGroupRequest' when calling createOrganizationPolicyObjectsGroup_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationPolicyObject_1 operation.
     * @callback module:api/PolicyObjectsApi~deleteOrganizationPolicyObject_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Policy Object.
     * Deletes a Policy Object.
     * @param {String} organizationId 
     * @param {String} policyObjectId 
     * @param {module:api/PolicyObjectsApi~deleteOrganizationPolicyObject_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationPolicyObject_1(organizationId, policyObjectId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationPolicyObject_1");
      }
      // verify the required parameter 'policyObjectId' is set
      if (policyObjectId === undefined || policyObjectId === null) {
        throw new Error("Missing the required parameter 'policyObjectId' when calling deleteOrganizationPolicyObject_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'policyObjectId': policyObjectId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/{policyObjectId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationPolicyObjectsGroup_1 operation.
     * @callback module:api/PolicyObjectsApi~deleteOrganizationPolicyObjectsGroup_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Policy Object Group.
     * Deletes a Policy Object Group.
     * @param {String} organizationId 
     * @param {String} policyObjectGroupId 
     * @param {module:api/PolicyObjectsApi~deleteOrganizationPolicyObjectsGroup_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationPolicyObjectsGroup_1(organizationId, policyObjectGroupId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationPolicyObjectsGroup_1");
      }
      // verify the required parameter 'policyObjectGroupId' is set
      if (policyObjectGroupId === undefined || policyObjectGroupId === null) {
        throw new Error("Missing the required parameter 'policyObjectGroupId' when calling deleteOrganizationPolicyObjectsGroup_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'policyObjectGroupId': policyObjectGroupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationPolicyObject_1 operation.
     * @callback module:api/PolicyObjectsApi~getOrganizationPolicyObject_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shows details of a Policy Object.
     * Shows details of a Policy Object.
     * @param {String} organizationId 
     * @param {String} policyObjectId 
     * @param {module:api/PolicyObjectsApi~getOrganizationPolicyObject_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOrganizationPolicyObject_1(organizationId, policyObjectId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationPolicyObject_1");
      }
      // verify the required parameter 'policyObjectId' is set
      if (policyObjectId === undefined || policyObjectId === null) {
        throw new Error("Missing the required parameter 'policyObjectId' when calling getOrganizationPolicyObject_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'policyObjectId': policyObjectId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/{policyObjectId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationPolicyObjectsGroup_1 operation.
     * @callback module:api/PolicyObjectsApi~getOrganizationPolicyObjectsGroup_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shows details of a Policy Object Group.
     * Shows details of a Policy Object Group.
     * @param {String} organizationId 
     * @param {String} policyObjectGroupId 
     * @param {module:api/PolicyObjectsApi~getOrganizationPolicyObjectsGroup_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOrganizationPolicyObjectsGroup_1(organizationId, policyObjectGroupId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationPolicyObjectsGroup_1");
      }
      // verify the required parameter 'policyObjectGroupId' is set
      if (policyObjectGroupId === undefined || policyObjectGroupId === null) {
        throw new Error("Missing the required parameter 'policyObjectGroupId' when calling getOrganizationPolicyObjectsGroup_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'policyObjectGroupId': policyObjectGroupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationPolicyObjectsGroups_1 operation.
     * @callback module:api/PolicyObjectsApi~getOrganizationPolicyObjectsGroups_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Policy Object Groups belonging to the organization.
     * Lists Policy Object Groups belonging to the organization.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 10 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {module:api/PolicyObjectsApi~getOrganizationPolicyObjectsGroups_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationPolicyObjectsGroups_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationPolicyObjectsGroups_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationPolicyObjects_1 operation.
     * @callback module:api/PolicyObjectsApi~getOrganizationPolicyObjects_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Policy Objects belonging to the organization.
     * Lists Policy Objects belonging to the organization.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 10 - 5000. Default is 5000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {module:api/PolicyObjectsApi~getOrganizationPolicyObjects_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationPolicyObjects_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationPolicyObjects_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationPolicyObject_1 operation.
     * @callback module:api/PolicyObjectsApi~updateOrganizationPolicyObject_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Policy Object.
     * Updates a Policy Object.
     * @param {String} organizationId 
     * @param {String} policyObjectId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationPolicyObjectRequest} [updateOrganizationPolicyObjectRequest] 
     * @param {module:api/PolicyObjectsApi~updateOrganizationPolicyObject_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationPolicyObject_1(organizationId, policyObjectId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationPolicyObjectRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationPolicyObject_1");
      }
      // verify the required parameter 'policyObjectId' is set
      if (policyObjectId === undefined || policyObjectId === null) {
        throw new Error("Missing the required parameter 'policyObjectId' when calling updateOrganizationPolicyObject_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'policyObjectId': policyObjectId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/{policyObjectId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationPolicyObjectsGroup_1 operation.
     * @callback module:api/PolicyObjectsApi~updateOrganizationPolicyObjectsGroup_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Policy Object Group.
     * Updates a Policy Object Group.
     * @param {String} organizationId 
     * @param {String} policyObjectGroupId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationPolicyObjectsGroupRequest} [updateOrganizationPolicyObjectsGroupRequest] 
     * @param {module:api/PolicyObjectsApi~updateOrganizationPolicyObjectsGroup_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationPolicyObjectsGroup_1(organizationId, policyObjectGroupId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationPolicyObjectsGroupRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationPolicyObjectsGroup_1");
      }
      // verify the required parameter 'policyObjectGroupId' is set
      if (policyObjectGroupId === undefined || policyObjectGroupId === null) {
        throw new Error("Missing the required parameter 'policyObjectGroupId' when calling updateOrganizationPolicyObjectsGroup_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'policyObjectGroupId': policyObjectGroupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
