/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationBrandingPolicy201Response from '../model/CreateOrganizationBrandingPolicy201Response';
import CreateOrganizationBrandingPolicyRequest from '../model/CreateOrganizationBrandingPolicyRequest';
import GetOrganizationBrandingPolicies200ResponseInner from '../model/GetOrganizationBrandingPolicies200ResponseInner';
import GetOrganizationBrandingPoliciesPriorities200Response from '../model/GetOrganizationBrandingPoliciesPriorities200Response';
import UpdateOrganizationBrandingPoliciesPrioritiesRequest from '../model/UpdateOrganizationBrandingPoliciesPrioritiesRequest';
import UpdateOrganizationBrandingPolicyRequest from '../model/UpdateOrganizationBrandingPolicyRequest';

/**
* BrandingPolicies service.
* @module api/BrandingPoliciesApi
* @version 1.32.0
*/
export default class BrandingPoliciesApi {

    /**
    * Constructs a new BrandingPoliciesApi. 
    * @alias module:api/BrandingPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationBrandingPolicy_1 operation.
     * @callback module:api/BrandingPoliciesApi~createOrganizationBrandingPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateOrganizationBrandingPolicy201Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a new branding policy to an organization
     * Add a new branding policy to an organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateOrganizationBrandingPolicyRequest} [createOrganizationBrandingPolicyRequest] 
     * @param {module:api/BrandingPoliciesApi~createOrganizationBrandingPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateOrganizationBrandingPolicy201Response}
     */
    createOrganizationBrandingPolicy_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['createOrganizationBrandingPolicyRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationBrandingPolicy_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateOrganizationBrandingPolicy201Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationBrandingPolicy_1 operation.
     * @callback module:api/BrandingPoliciesApi~deleteOrganizationBrandingPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a branding policy
     * Delete a branding policy
     * @param {String} organizationId 
     * @param {String} brandingPolicyId 
     * @param {module:api/BrandingPoliciesApi~deleteOrganizationBrandingPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationBrandingPolicy_1(organizationId, brandingPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationBrandingPolicy_1");
      }
      // verify the required parameter 'brandingPolicyId' is set
      if (brandingPolicyId === undefined || brandingPolicyId === null) {
        throw new Error("Missing the required parameter 'brandingPolicyId' when calling deleteOrganizationBrandingPolicy_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'brandingPolicyId': brandingPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationBrandingPoliciesPriorities_1 operation.
     * @callback module:api/BrandingPoliciesApi~getOrganizationBrandingPoliciesPriorities_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationBrandingPoliciesPriorities200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the branding policy IDs of an organization in priority order
     * Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).
     * @param {String} organizationId 
     * @param {module:api/BrandingPoliciesApi~getOrganizationBrandingPoliciesPriorities_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationBrandingPoliciesPriorities200Response}
     */
    getOrganizationBrandingPoliciesPriorities_1(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationBrandingPoliciesPriorities_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationBrandingPoliciesPriorities200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies/priorities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationBrandingPolicies_1 operation.
     * @callback module:api/BrandingPoliciesApi~getOrganizationBrandingPolicies_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationBrandingPolicies200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the branding policies of an organization
     * List the branding policies of an organization
     * @param {String} organizationId 
     * @param {module:api/BrandingPoliciesApi~getOrganizationBrandingPolicies_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationBrandingPolicies200ResponseInner>}
     */
    getOrganizationBrandingPolicies_1(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationBrandingPolicies_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationBrandingPolicies200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationBrandingPolicy_1 operation.
     * @callback module:api/BrandingPoliciesApi~getOrganizationBrandingPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationBrandingPolicies200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a branding policy
     * Return a branding policy
     * @param {String} organizationId 
     * @param {String} brandingPolicyId 
     * @param {module:api/BrandingPoliciesApi~getOrganizationBrandingPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationBrandingPolicies200ResponseInner}
     */
    getOrganizationBrandingPolicy_1(organizationId, brandingPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationBrandingPolicy_1");
      }
      // verify the required parameter 'brandingPolicyId' is set
      if (brandingPolicyId === undefined || brandingPolicyId === null) {
        throw new Error("Missing the required parameter 'brandingPolicyId' when calling getOrganizationBrandingPolicy_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'brandingPolicyId': brandingPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationBrandingPolicies200ResponseInner;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationBrandingPoliciesPriorities_1 operation.
     * @callback module:api/BrandingPoliciesApi~updateOrganizationBrandingPoliciesPriorities_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationBrandingPoliciesPriorities200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the priority ordering of an organization's branding policies.
     * Update the priority ordering of an organization's branding policies.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationBrandingPoliciesPrioritiesRequest} [updateOrganizationBrandingPoliciesPrioritiesRequest] 
     * @param {module:api/BrandingPoliciesApi~updateOrganizationBrandingPoliciesPriorities_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationBrandingPoliciesPriorities200Response}
     */
    updateOrganizationBrandingPoliciesPriorities_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationBrandingPoliciesPrioritiesRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationBrandingPoliciesPriorities_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetOrganizationBrandingPoliciesPriorities200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies/priorities', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationBrandingPolicy_1 operation.
     * @callback module:api/BrandingPoliciesApi~updateOrganizationBrandingPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationBrandingPolicies200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a branding policy
     * Update a branding policy
     * @param {String} organizationId 
     * @param {String} brandingPolicyId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationBrandingPolicyRequest} [updateOrganizationBrandingPolicyRequest] 
     * @param {module:api/BrandingPoliciesApi~updateOrganizationBrandingPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationBrandingPolicies200ResponseInner}
     */
    updateOrganizationBrandingPolicy_1(organizationId, brandingPolicyId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationBrandingPolicyRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationBrandingPolicy_1");
      }
      // verify the required parameter 'brandingPolicyId' is set
      if (brandingPolicyId === undefined || brandingPolicyId === null) {
        throw new Error("Missing the required parameter 'brandingPolicyId' when calling updateOrganizationBrandingPolicy_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'brandingPolicyId': brandingPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetOrganizationBrandingPolicies200ResponseInner;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
