/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkCameraQualityRetentionProfileRequest from '../model/CreateNetworkCameraQualityRetentionProfileRequest';
import UpdateNetworkCameraQualityRetentionProfileRequest from '../model/UpdateNetworkCameraQualityRetentionProfileRequest';

/**
* QualityRetentionProfiles service.
* @module api/QualityRetentionProfilesApi
* @version 1.32.0
*/
export default class QualityRetentionProfilesApi {

    /**
    * Constructs a new QualityRetentionProfilesApi. 
    * @alias module:api/QualityRetentionProfilesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkCameraQualityRetentionProfile_1 operation.
     * @callback module:api/QualityRetentionProfilesApi~createNetworkCameraQualityRetentionProfile_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new quality retention profile for this network.
     * Creates new quality retention profile for this network.
     * @param {String} networkId 
     * @param {module:model/CreateNetworkCameraQualityRetentionProfileRequest} createNetworkCameraQualityRetentionProfileRequest 
     * @param {module:api/QualityRetentionProfilesApi~createNetworkCameraQualityRetentionProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkCameraQualityRetentionProfile_1(networkId, createNetworkCameraQualityRetentionProfileRequest, callback) {
      let postBody = createNetworkCameraQualityRetentionProfileRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkCameraQualityRetentionProfile_1");
      }
      // verify the required parameter 'createNetworkCameraQualityRetentionProfileRequest' is set
      if (createNetworkCameraQualityRetentionProfileRequest === undefined || createNetworkCameraQualityRetentionProfileRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkCameraQualityRetentionProfileRequest' when calling createNetworkCameraQualityRetentionProfile_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/qualityRetentionProfiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkCameraQualityRetentionProfile_1 operation.
     * @callback module:api/QualityRetentionProfilesApi~deleteNetworkCameraQualityRetentionProfile_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing quality retention profile for this network.
     * Delete an existing quality retention profile for this network.
     * @param {String} networkId 
     * @param {String} qualityRetentionProfileId 
     * @param {module:api/QualityRetentionProfilesApi~deleteNetworkCameraQualityRetentionProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkCameraQualityRetentionProfile_1(networkId, qualityRetentionProfileId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkCameraQualityRetentionProfile_1");
      }
      // verify the required parameter 'qualityRetentionProfileId' is set
      if (qualityRetentionProfileId === undefined || qualityRetentionProfileId === null) {
        throw new Error("Missing the required parameter 'qualityRetentionProfileId' when calling deleteNetworkCameraQualityRetentionProfile_1");
      }

      let pathParams = {
        'networkId': networkId,
        'qualityRetentionProfileId': qualityRetentionProfileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCameraQualityRetentionProfile_1 operation.
     * @callback module:api/QualityRetentionProfilesApi~getNetworkCameraQualityRetentionProfile_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a single quality retention profile
     * Retrieve a single quality retention profile
     * @param {String} networkId 
     * @param {String} qualityRetentionProfileId 
     * @param {module:api/QualityRetentionProfilesApi~getNetworkCameraQualityRetentionProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkCameraQualityRetentionProfile_1(networkId, qualityRetentionProfileId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCameraQualityRetentionProfile_1");
      }
      // verify the required parameter 'qualityRetentionProfileId' is set
      if (qualityRetentionProfileId === undefined || qualityRetentionProfileId === null) {
        throw new Error("Missing the required parameter 'qualityRetentionProfileId' when calling getNetworkCameraQualityRetentionProfile_1");
      }

      let pathParams = {
        'networkId': networkId,
        'qualityRetentionProfileId': qualityRetentionProfileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCameraQualityRetentionProfiles_1 operation.
     * @callback module:api/QualityRetentionProfilesApi~getNetworkCameraQualityRetentionProfiles_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the quality retention profiles for this network
     * List the quality retention profiles for this network
     * @param {String} networkId 
     * @param {module:api/QualityRetentionProfilesApi~getNetworkCameraQualityRetentionProfiles_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkCameraQualityRetentionProfiles_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCameraQualityRetentionProfiles_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/qualityRetentionProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCameraQualityRetentionProfile_1 operation.
     * @callback module:api/QualityRetentionProfilesApi~updateNetworkCameraQualityRetentionProfile_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing quality retention profile for this network.
     * Update an existing quality retention profile for this network.
     * @param {String} networkId 
     * @param {String} qualityRetentionProfileId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCameraQualityRetentionProfileRequest} [updateNetworkCameraQualityRetentionProfileRequest] 
     * @param {module:api/QualityRetentionProfilesApi~updateNetworkCameraQualityRetentionProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkCameraQualityRetentionProfile_1(networkId, qualityRetentionProfileId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkCameraQualityRetentionProfileRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCameraQualityRetentionProfile_1");
      }
      // verify the required parameter 'qualityRetentionProfileId' is set
      if (qualityRetentionProfileId === undefined || qualityRetentionProfileId === null) {
        throw new Error("Missing the required parameter 'qualityRetentionProfileId' when calling updateNetworkCameraQualityRetentionProfile_1");
      }

      let pathParams = {
        'networkId': networkId,
        'qualityRetentionProfileId': qualityRetentionProfileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
