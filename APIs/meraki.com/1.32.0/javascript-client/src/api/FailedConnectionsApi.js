/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetNetworkWirelessFailedConnections200ResponseInner from '../model/GetNetworkWirelessFailedConnections200ResponseInner';

/**
* FailedConnections service.
* @module api/FailedConnectionsApi
* @version 1.32.0
*/
export default class FailedConnectionsApi {

    /**
    * Constructs a new FailedConnectionsApi. 
    * @alias module:api/FailedConnectionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getNetworkWirelessFailedConnections_1 operation.
     * @callback module:api/FailedConnectionsApi~getNetworkWirelessFailedConnections_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkWirelessFailedConnections200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of all failed client connection events on this network in a given time range
     * List of all failed client connection events on this network in a given time range
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
     * @param {String} [t1] The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
     * @param {module:model/String} [band] Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
     * @param {Number} [ssid] Filter results by SSID
     * @param {Number} [vlan] Filter results by VLAN
     * @param {String} [apTag] Filter results by AP Tag
     * @param {String} [serial] Filter by AP
     * @param {String} [clientId] Filter by client MAC
     * @param {module:api/FailedConnectionsApi~getNetworkWirelessFailedConnections_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkWirelessFailedConnections200ResponseInner>}
     */
    getNetworkWirelessFailedConnections_1(networkId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessFailedConnections_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
        't0': opts['t0'],
        't1': opts['t1'],
        'timespan': opts['timespan'],
        'band': opts['band'],
        'ssid': opts['ssid'],
        'vlan': opts['vlan'],
        'apTag': opts['apTag'],
        'serial': opts['serial'],
        'clientId': opts['clientId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkWirelessFailedConnections200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/failedConnections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
