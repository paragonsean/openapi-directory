/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationAdaptivePolicyPolicyRequest from '../model/CreateOrganizationAdaptivePolicyPolicyRequest';
import GetNetworkPoliciesByClient200ResponseInner from '../model/GetNetworkPoliciesByClient200ResponseInner';
import UpdateOrganizationAdaptivePolicyPolicyRequest from '../model/UpdateOrganizationAdaptivePolicyPolicyRequest';

/**
* Policies service.
* @module api/PoliciesApi
* @version 1.32.0
*/
export default class PoliciesApi {

    /**
    * Constructs a new PoliciesApi. 
    * @alias module:api/PoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationAdaptivePolicyPolicy_2 operation.
     * @callback module:api/PoliciesApi~createOrganizationAdaptivePolicyPolicy_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add an Adaptive Policy
     * Add an Adaptive Policy
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationAdaptivePolicyPolicyRequest} createOrganizationAdaptivePolicyPolicyRequest 
     * @param {module:api/PoliciesApi~createOrganizationAdaptivePolicyPolicy_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationAdaptivePolicyPolicy_2(organizationId, createOrganizationAdaptivePolicyPolicyRequest, callback) {
      let postBody = createOrganizationAdaptivePolicyPolicyRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationAdaptivePolicyPolicy_2");
      }
      // verify the required parameter 'createOrganizationAdaptivePolicyPolicyRequest' is set
      if (createOrganizationAdaptivePolicyPolicyRequest === undefined || createOrganizationAdaptivePolicyPolicyRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationAdaptivePolicyPolicyRequest' when calling createOrganizationAdaptivePolicyPolicy_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/policies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationAdaptivePolicyPolicy_2 operation.
     * @callback module:api/PoliciesApi~deleteOrganizationAdaptivePolicyPolicy_2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an Adaptive Policy
     * Delete an Adaptive Policy
     * @param {String} organizationId 
     * @param {String} id 
     * @param {module:api/PoliciesApi~deleteOrganizationAdaptivePolicyPolicy_2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationAdaptivePolicyPolicy_2(organizationId, id, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationAdaptivePolicyPolicy_2");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteOrganizationAdaptivePolicyPolicy_2");
      }

      let pathParams = {
        'organizationId': organizationId,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/policies/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkPoliciesByClient_1 operation.
     * @callback module:api/PoliciesApi~getNetworkPoliciesByClient_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkPoliciesByClient200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get policies for all clients with policies
     * Get policies for all clients with policies
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
     * @param {module:api/PoliciesApi~getNetworkPoliciesByClient_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkPoliciesByClient200ResponseInner>}
     */
    getNetworkPoliciesByClient_1(networkId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkPoliciesByClient_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        't0': opts['t0'],
        'timespan': opts['timespan']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkPoliciesByClient200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/policies/byClient', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationAdaptivePolicyPolicies_2 operation.
     * @callback module:api/PoliciesApi~getOrganizationAdaptivePolicyPolicies_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List adaptive policies in an organization
     * List adaptive policies in an organization
     * @param {String} organizationId 
     * @param {module:api/PoliciesApi~getOrganizationAdaptivePolicyPolicies_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationAdaptivePolicyPolicies_2(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationAdaptivePolicyPolicies_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationAdaptivePolicyPolicy_2 operation.
     * @callback module:api/PoliciesApi~getOrganizationAdaptivePolicyPolicy_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return an adaptive policy
     * Return an adaptive policy
     * @param {String} organizationId 
     * @param {String} id 
     * @param {module:api/PoliciesApi~getOrganizationAdaptivePolicyPolicy_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOrganizationAdaptivePolicyPolicy_2(organizationId, id, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationAdaptivePolicyPolicy_2");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOrganizationAdaptivePolicyPolicy_2");
      }

      let pathParams = {
        'organizationId': organizationId,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/policies/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationAdaptivePolicyPolicy_2 operation.
     * @callback module:api/PoliciesApi~updateOrganizationAdaptivePolicyPolicy_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Adaptive Policy
     * Update an Adaptive Policy
     * @param {String} organizationId 
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationAdaptivePolicyPolicyRequest} [updateOrganizationAdaptivePolicyPolicyRequest] 
     * @param {module:api/PoliciesApi~updateOrganizationAdaptivePolicyPolicy_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationAdaptivePolicyPolicy_2(organizationId, id, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationAdaptivePolicyPolicyRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationAdaptivePolicyPolicy_2");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateOrganizationAdaptivePolicyPolicy_2");
      }

      let pathParams = {
        'organizationId': organizationId,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/policies/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
