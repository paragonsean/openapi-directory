/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkWebhooksHttpServerRequest from '../model/CreateNetworkWebhooksHttpServerRequest';
import GetNetworkWebhooksHttpServers200ResponseInner from '../model/GetNetworkWebhooksHttpServers200ResponseInner';
import UpdateNetworkWebhooksHttpServerRequest from '../model/UpdateNetworkWebhooksHttpServerRequest';

/**
* HttpServers service.
* @module api/HttpServersApi
* @version 1.32.0
*/
export default class HttpServersApi {

    /**
    * Constructs a new HttpServersApi. 
    * @alias module:api/HttpServersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkWebhooksHttpServer_2 operation.
     * @callback module:api/HttpServersApi~createNetworkWebhooksHttpServer_2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkWebhooksHttpServers200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add an HTTP server to a network
     * Add an HTTP server to a network
     * @param {String} networkId 
     * @param {module:model/CreateNetworkWebhooksHttpServerRequest} createNetworkWebhooksHttpServerRequest 
     * @param {module:api/HttpServersApi~createNetworkWebhooksHttpServer_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkWebhooksHttpServers200ResponseInner}
     */
    createNetworkWebhooksHttpServer_2(networkId, createNetworkWebhooksHttpServerRequest, callback) {
      let postBody = createNetworkWebhooksHttpServerRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkWebhooksHttpServer_2");
      }
      // verify the required parameter 'createNetworkWebhooksHttpServerRequest' is set
      if (createNetworkWebhooksHttpServerRequest === undefined || createNetworkWebhooksHttpServerRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkWebhooksHttpServerRequest' when calling createNetworkWebhooksHttpServer_2");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetNetworkWebhooksHttpServers200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/webhooks/httpServers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkWebhooksHttpServer_2 operation.
     * @callback module:api/HttpServersApi~deleteNetworkWebhooksHttpServer_2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an HTTP server from a network
     * Delete an HTTP server from a network
     * @param {String} networkId 
     * @param {String} httpServerId 
     * @param {module:api/HttpServersApi~deleteNetworkWebhooksHttpServer_2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkWebhooksHttpServer_2(networkId, httpServerId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkWebhooksHttpServer_2");
      }
      // verify the required parameter 'httpServerId' is set
      if (httpServerId === undefined || httpServerId === null) {
        throw new Error("Missing the required parameter 'httpServerId' when calling deleteNetworkWebhooksHttpServer_2");
      }

      let pathParams = {
        'networkId': networkId,
        'httpServerId': httpServerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/webhooks/httpServers/{httpServerId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWebhooksHttpServer_2 operation.
     * @callback module:api/HttpServersApi~getNetworkWebhooksHttpServer_2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkWebhooksHttpServers200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return an HTTP server for a network
     * Return an HTTP server for a network
     * @param {String} networkId 
     * @param {String} httpServerId 
     * @param {module:api/HttpServersApi~getNetworkWebhooksHttpServer_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkWebhooksHttpServers200ResponseInner}
     */
    getNetworkWebhooksHttpServer_2(networkId, httpServerId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWebhooksHttpServer_2");
      }
      // verify the required parameter 'httpServerId' is set
      if (httpServerId === undefined || httpServerId === null) {
        throw new Error("Missing the required parameter 'httpServerId' when calling getNetworkWebhooksHttpServer_2");
      }

      let pathParams = {
        'networkId': networkId,
        'httpServerId': httpServerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetNetworkWebhooksHttpServers200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/webhooks/httpServers/{httpServerId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWebhooksHttpServers_2 operation.
     * @callback module:api/HttpServersApi~getNetworkWebhooksHttpServers_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkWebhooksHttpServers200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the HTTP servers for a network
     * List the HTTP servers for a network
     * @param {String} networkId 
     * @param {module:api/HttpServersApi~getNetworkWebhooksHttpServers_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkWebhooksHttpServers200ResponseInner>}
     */
    getNetworkWebhooksHttpServers_2(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWebhooksHttpServers_2");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkWebhooksHttpServers200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/webhooks/httpServers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkWebhooksHttpServer_2 operation.
     * @callback module:api/HttpServersApi~updateNetworkWebhooksHttpServer_2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkWebhooksHttpServers200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an HTTP server
     * Update an HTTP server. To change a URL, create a new HTTP server.
     * @param {String} networkId 
     * @param {String} httpServerId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkWebhooksHttpServerRequest} [updateNetworkWebhooksHttpServerRequest] 
     * @param {module:api/HttpServersApi~updateNetworkWebhooksHttpServer_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkWebhooksHttpServers200ResponseInner}
     */
    updateNetworkWebhooksHttpServer_2(networkId, httpServerId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkWebhooksHttpServerRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkWebhooksHttpServer_2");
      }
      // verify the required parameter 'httpServerId' is set
      if (httpServerId === undefined || httpServerId === null) {
        throw new Error("Missing the required parameter 'httpServerId' when calling updateNetworkWebhooksHttpServer_2");
      }

      let pathParams = {
        'networkId': networkId,
        'httpServerId': httpServerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetNetworkWebhooksHttpServers200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/webhooks/httpServers/{httpServerId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
