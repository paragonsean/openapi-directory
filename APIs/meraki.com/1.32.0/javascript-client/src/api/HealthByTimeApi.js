/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetNetworkInsightApplicationHealthByTime200ResponseInner from '../model/GetNetworkInsightApplicationHealthByTime200ResponseInner';

/**
* HealthByTime service.
* @module api/HealthByTimeApi
* @version 1.32.0
*/
export default class HealthByTimeApi {

    /**
    * Constructs a new HealthByTimeApi. 
    * @alias module:api/HealthByTimeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getNetworkInsightApplicationHealthByTime_2 operation.
     * @callback module:api/HealthByTimeApi~getNetworkInsightApplicationHealthByTime_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkInsightApplicationHealthByTime200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get application health by time
     * Get application health by time
     * @param {String} networkId 
     * @param {String} applicationId 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     * @param {String} [t1] The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
     * @param {Number} [resolution] The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
     * @param {module:api/HealthByTimeApi~getNetworkInsightApplicationHealthByTime_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkInsightApplicationHealthByTime200ResponseInner>}
     */
    getNetworkInsightApplicationHealthByTime_2(networkId, applicationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkInsightApplicationHealthByTime_2");
      }
      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling getNetworkInsightApplicationHealthByTime_2");
      }

      let pathParams = {
        'networkId': networkId,
        'applicationId': applicationId
      };
      let queryParams = {
        't0': opts['t0'],
        't1': opts['t1'],
        'timespan': opts['timespan'],
        'resolution': opts['resolution']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkInsightApplicationHealthByTime200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/insight/applications/{applicationId}/healthByTime', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
