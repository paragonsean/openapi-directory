/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkSwitchQosRuleRequest from '../model/CreateNetworkSwitchQosRuleRequest';
import UpdateNetworkSwitchQosRuleRequest from '../model/UpdateNetworkSwitchQosRuleRequest';
import UpdateNetworkSwitchQosRulesOrderRequest from '../model/UpdateNetworkSwitchQosRulesOrderRequest';

/**
* QosRules service.
* @module api/QosRulesApi
* @version 1.32.0
*/
export default class QosRulesApi {

    /**
    * Constructs a new QosRulesApi. 
    * @alias module:api/QosRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkSwitchQosRule_1 operation.
     * @callback module:api/QosRulesApi~createNetworkSwitchQosRule_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a quality of service rule
     * Add a quality of service rule
     * @param {String} networkId 
     * @param {module:model/CreateNetworkSwitchQosRuleRequest} createNetworkSwitchQosRuleRequest 
     * @param {module:api/QosRulesApi~createNetworkSwitchQosRule_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkSwitchQosRule_1(networkId, createNetworkSwitchQosRuleRequest, callback) {
      let postBody = createNetworkSwitchQosRuleRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkSwitchQosRule_1");
      }
      // verify the required parameter 'createNetworkSwitchQosRuleRequest' is set
      if (createNetworkSwitchQosRuleRequest === undefined || createNetworkSwitchQosRuleRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkSwitchQosRuleRequest' when calling createNetworkSwitchQosRule_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkSwitchQosRule_1 operation.
     * @callback module:api/QosRulesApi~deleteNetworkSwitchQosRule_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a quality of service rule
     * Delete a quality of service rule
     * @param {String} networkId 
     * @param {String} qosRuleId 
     * @param {module:api/QosRulesApi~deleteNetworkSwitchQosRule_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkSwitchQosRule_1(networkId, qosRuleId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkSwitchQosRule_1");
      }
      // verify the required parameter 'qosRuleId' is set
      if (qosRuleId === undefined || qosRuleId === null) {
        throw new Error("Missing the required parameter 'qosRuleId' when calling deleteNetworkSwitchQosRule_1");
      }

      let pathParams = {
        'networkId': networkId,
        'qosRuleId': qosRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules/{qosRuleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchQosRule_1 operation.
     * @callback module:api/QosRulesApi~getNetworkSwitchQosRule_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a quality of service rule
     * Return a quality of service rule
     * @param {String} networkId 
     * @param {String} qosRuleId 
     * @param {module:api/QosRulesApi~getNetworkSwitchQosRule_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchQosRule_1(networkId, qosRuleId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchQosRule_1");
      }
      // verify the required parameter 'qosRuleId' is set
      if (qosRuleId === undefined || qosRuleId === null) {
        throw new Error("Missing the required parameter 'qosRuleId' when calling getNetworkSwitchQosRule_1");
      }

      let pathParams = {
        'networkId': networkId,
        'qosRuleId': qosRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules/{qosRuleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchQosRulesOrder_1 operation.
     * @callback module:api/QosRulesApi~getNetworkSwitchQosRulesOrder_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the quality of service rule IDs by order in which they will be processed by the switch
     * Return the quality of service rule IDs by order in which they will be processed by the switch
     * @param {String} networkId 
     * @param {module:api/QosRulesApi~getNetworkSwitchQosRulesOrder_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchQosRulesOrder_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchQosRulesOrder_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules/order', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchQosRules_1 operation.
     * @callback module:api/QosRulesApi~getNetworkSwitchQosRules_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List quality of service rules
     * List quality of service rules
     * @param {String} networkId 
     * @param {module:api/QosRulesApi~getNetworkSwitchQosRules_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkSwitchQosRules_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchQosRules_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchQosRule_1 operation.
     * @callback module:api/QosRulesApi~updateNetworkSwitchQosRule_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a quality of service rule
     * Update a quality of service rule
     * @param {String} networkId 
     * @param {String} qosRuleId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkSwitchQosRuleRequest} [updateNetworkSwitchQosRuleRequest] 
     * @param {module:api/QosRulesApi~updateNetworkSwitchQosRule_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchQosRule_1(networkId, qosRuleId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkSwitchQosRuleRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchQosRule_1");
      }
      // verify the required parameter 'qosRuleId' is set
      if (qosRuleId === undefined || qosRuleId === null) {
        throw new Error("Missing the required parameter 'qosRuleId' when calling updateNetworkSwitchQosRule_1");
      }

      let pathParams = {
        'networkId': networkId,
        'qosRuleId': qosRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules/{qosRuleId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchQosRulesOrder_1 operation.
     * @callback module:api/QosRulesApi~updateNetworkSwitchQosRulesOrder_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the order in which the rules should be processed by the switch
     * Update the order in which the rules should be processed by the switch
     * @param {String} networkId 
     * @param {module:model/UpdateNetworkSwitchQosRulesOrderRequest} updateNetworkSwitchQosRulesOrderRequest 
     * @param {module:api/QosRulesApi~updateNetworkSwitchQosRulesOrder_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchQosRulesOrder_1(networkId, updateNetworkSwitchQosRulesOrderRequest, callback) {
      let postBody = updateNetworkSwitchQosRulesOrderRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchQosRulesOrder_1");
      }
      // verify the required parameter 'updateNetworkSwitchQosRulesOrderRequest' is set
      if (updateNetworkSwitchQosRulesOrderRequest === undefined || updateNetworkSwitchQosRulesOrderRequest === null) {
        throw new Error("Missing the required parameter 'updateNetworkSwitchQosRulesOrderRequest' when calling updateNetworkSwitchQosRulesOrder_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/qosRules/order', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
