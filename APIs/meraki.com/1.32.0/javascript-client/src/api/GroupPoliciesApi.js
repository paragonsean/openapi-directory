/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkGroupPolicyRequest from '../model/CreateNetworkGroupPolicyRequest';
import UpdateNetworkGroupPolicyRequest from '../model/UpdateNetworkGroupPolicyRequest';

/**
* GroupPolicies service.
* @module api/GroupPoliciesApi
* @version 1.32.0
*/
export default class GroupPoliciesApi {

    /**
    * Constructs a new GroupPoliciesApi. 
    * @alias module:api/GroupPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkGroupPolicy_1 operation.
     * @callback module:api/GroupPoliciesApi~createNetworkGroupPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a group policy
     * Create a group policy
     * @param {String} networkId 
     * @param {module:model/CreateNetworkGroupPolicyRequest} createNetworkGroupPolicyRequest 
     * @param {module:api/GroupPoliciesApi~createNetworkGroupPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkGroupPolicy_1(networkId, createNetworkGroupPolicyRequest, callback) {
      let postBody = createNetworkGroupPolicyRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkGroupPolicy_1");
      }
      // verify the required parameter 'createNetworkGroupPolicyRequest' is set
      if (createNetworkGroupPolicyRequest === undefined || createNetworkGroupPolicyRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkGroupPolicyRequest' when calling createNetworkGroupPolicy_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkGroupPolicy_1 operation.
     * @callback module:api/GroupPoliciesApi~deleteNetworkGroupPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a group policy
     * Delete a group policy
     * @param {String} networkId 
     * @param {String} groupPolicyId 
     * @param {module:api/GroupPoliciesApi~deleteNetworkGroupPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkGroupPolicy_1(networkId, groupPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkGroupPolicy_1");
      }
      // verify the required parameter 'groupPolicyId' is set
      if (groupPolicyId === undefined || groupPolicyId === null) {
        throw new Error("Missing the required parameter 'groupPolicyId' when calling deleteNetworkGroupPolicy_1");
      }

      let pathParams = {
        'networkId': networkId,
        'groupPolicyId': groupPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies/{groupPolicyId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkGroupPolicies_1 operation.
     * @callback module:api/GroupPoliciesApi~getNetworkGroupPolicies_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the group policies in a network
     * List the group policies in a network
     * @param {String} networkId 
     * @param {module:api/GroupPoliciesApi~getNetworkGroupPolicies_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkGroupPolicies_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkGroupPolicies_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkGroupPolicy_1 operation.
     * @callback module:api/GroupPoliciesApi~getNetworkGroupPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Display a group policy
     * Display a group policy
     * @param {String} networkId 
     * @param {String} groupPolicyId 
     * @param {module:api/GroupPoliciesApi~getNetworkGroupPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkGroupPolicy_1(networkId, groupPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkGroupPolicy_1");
      }
      // verify the required parameter 'groupPolicyId' is set
      if (groupPolicyId === undefined || groupPolicyId === null) {
        throw new Error("Missing the required parameter 'groupPolicyId' when calling getNetworkGroupPolicy_1");
      }

      let pathParams = {
        'networkId': networkId,
        'groupPolicyId': groupPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies/{groupPolicyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkGroupPolicy_1 operation.
     * @callback module:api/GroupPoliciesApi~updateNetworkGroupPolicy_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a group policy
     * Update a group policy
     * @param {String} networkId 
     * @param {String} groupPolicyId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkGroupPolicyRequest} [updateNetworkGroupPolicyRequest] 
     * @param {module:api/GroupPoliciesApi~updateNetworkGroupPolicy_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkGroupPolicy_1(networkId, groupPolicyId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkGroupPolicyRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkGroupPolicy_1");
      }
      // verify the required parameter 'groupPolicyId' is set
      if (groupPolicyId === undefined || groupPolicyId === null) {
        throw new Error("Missing the required parameter 'groupPolicyId' when calling updateNetworkGroupPolicy_1");
      }

      let pathParams = {
        'networkId': networkId,
        'groupPolicyId': groupPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies/{groupPolicyId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
