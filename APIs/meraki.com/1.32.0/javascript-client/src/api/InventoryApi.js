/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ClaimIntoOrganizationInventoryRequest from '../model/ClaimIntoOrganizationInventoryRequest';
import CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest from '../model/CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest';
import CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner from '../model/CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner';
import CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest from '../model/CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest';
import CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner from '../model/CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner';
import CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest from '../model/CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest';
import GetNetwork200Response from '../model/GetNetwork200Response';
import GetOrganizationInventoryDevices200ResponseInner from '../model/GetOrganizationInventoryDevices200ResponseInner';
import GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner from '../model/GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner';
import ReleaseFromOrganizationInventoryRequest from '../model/ReleaseFromOrganizationInventoryRequest';

/**
* Inventory service.
* @module api/InventoryApi
* @version 1.32.0
*/
export default class InventoryApi {

    /**
    * Constructs a new InventoryApi. 
    * @alias module:api/InventoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the claimIntoOrganizationInventory_1 operation.
     * @callback module:api/InventoryApi~claimIntoOrganizationInventory_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Claim a list of devices, licenses, and/or orders into an organization inventory
     * Claim a list of devices, licenses, and/or orders into an organization inventory. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. Use /organizations/{organizationId}/inventory/release to release devices from an organization.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/ClaimIntoOrganizationInventoryRequest} [claimIntoOrganizationInventoryRequest] 
     * @param {module:api/InventoryApi~claimIntoOrganizationInventory_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    claimIntoOrganizationInventory_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['claimIntoOrganizationInventoryRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling claimIntoOrganizationInventory_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/claim', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createOrganizationInventoryOnboardingCloudMonitoringExportEvent_1 operation.
     * @callback module:api/InventoryApi~createOrganizationInventoryOnboardingCloudMonitoringExportEvent_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports event logs related to the onboarding app into elastisearch
     * Imports event logs related to the onboarding app into elastisearch
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest} createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest 
     * @param {module:api/InventoryApi~createOrganizationInventoryOnboardingCloudMonitoringExportEvent_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationInventoryOnboardingCloudMonitoringExportEvent_1(organizationId, createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest, callback) {
      let postBody = createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationInventoryOnboardingCloudMonitoringExportEvent_1");
      }
      // verify the required parameter 'createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest' is set
      if (createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest === undefined || createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest' when calling createOrganizationInventoryOnboardingCloudMonitoringExportEvent_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/exportEvents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createOrganizationInventoryOnboardingCloudMonitoringImport_1 operation.
     * @callback module:api/InventoryApi~createOrganizationInventoryOnboardingCloudMonitoringImport_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
     * Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest} createOrganizationInventoryOnboardingCloudMonitoringImportRequest 
     * @param {module:api/InventoryApi~createOrganizationInventoryOnboardingCloudMonitoringImport_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner>}
     */
    createOrganizationInventoryOnboardingCloudMonitoringImport_1(organizationId, createOrganizationInventoryOnboardingCloudMonitoringImportRequest, callback) {
      let postBody = createOrganizationInventoryOnboardingCloudMonitoringImportRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationInventoryOnboardingCloudMonitoringImport_1");
      }
      // verify the required parameter 'createOrganizationInventoryOnboardingCloudMonitoringImportRequest' is set
      if (createOrganizationInventoryOnboardingCloudMonitoringImportRequest === undefined || createOrganizationInventoryOnboardingCloudMonitoringImportRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationInventoryOnboardingCloudMonitoringImportRequest' when calling createOrganizationInventoryOnboardingCloudMonitoringImport_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/imports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createOrganizationInventoryOnboardingCloudMonitoringPrepare_1 operation.
     * @callback module:api/InventoryApi~createOrganizationInventoryOnboardingCloudMonitoringPrepare_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initiates or updates an import session
     * Initiates or updates an import session. An import ID will be generated and used when you are ready to commit the import.
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest} createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest 
     * @param {module:api/InventoryApi~createOrganizationInventoryOnboardingCloudMonitoringPrepare_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner>}
     */
    createOrganizationInventoryOnboardingCloudMonitoringPrepare_1(organizationId, createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest, callback) {
      let postBody = createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationInventoryOnboardingCloudMonitoringPrepare_1");
      }
      // verify the required parameter 'createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest' is set
      if (createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest === undefined || createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest' when calling createOrganizationInventoryOnboardingCloudMonitoringPrepare_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/prepare', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationInventoryDevice_1 operation.
     * @callback module:api/InventoryApi~getOrganizationInventoryDevice_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationInventoryDevices200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a single device from the inventory of an organization
     * Return a single device from the inventory of an organization
     * @param {String} organizationId 
     * @param {String} serial 
     * @param {module:api/InventoryApi~getOrganizationInventoryDevice_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationInventoryDevices200ResponseInner}
     */
    getOrganizationInventoryDevice_1(organizationId, serial, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationInventoryDevice_1");
      }
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getOrganizationInventoryDevice_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationInventoryDevices200ResponseInner;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/devices/{serial}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationInventoryDevices_1 operation.
     * @callback module:api/InventoryApi~getOrganizationInventoryDevices_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationInventoryDevices200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the device inventory for an organization
     * Return the device inventory for an organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {module:model/String} [usedState] Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
     * @param {String} [search] Search for devices in inventory based on serial number, mac address, or model.
     * @param {Array.<String>} [macs] Search for devices in inventory based on mac addresses.
     * @param {Array.<String>} [networkIds] Search for devices in inventory based on network ids.
     * @param {Array.<String>} [serials] Search for devices in inventory based on serials.
     * @param {Array.<String>} [models] Search for devices in inventory based on model.
     * @param {Array.<String>} [orderNumbers] Search for devices in inventory based on order numbers.
     * @param {Array.<String>} [tags] Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
     * @param {module:model/String} [tagsFilterType] To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
     * @param {Array.<module:model/String>} [productTypes] Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
     * @param {module:api/InventoryApi~getOrganizationInventoryDevices_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationInventoryDevices200ResponseInner>}
     */
    getOrganizationInventoryDevices_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationInventoryDevices_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'usedState': opts['usedState'],
        'search': opts['search'],
        'macs': this.apiClient.buildCollectionParam(opts['macs'], 'csv'),
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'models': this.apiClient.buildCollectionParam(opts['models'], 'csv'),
        'orderNumbers': this.apiClient.buildCollectionParam(opts['orderNumbers'], 'csv'),
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'tagsFilterType': opts['tagsFilterType'],
        'productTypes': this.apiClient.buildCollectionParam(opts['productTypes'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationInventoryDevices200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/devices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationInventoryOnboardingCloudMonitoringImports_1 operation.
     * @callback module:api/InventoryApi~getOrganizationInventoryOnboardingCloudMonitoringImports_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check the status of a committed Import operation
     * Check the status of a committed Import operation
     * @param {String} organizationId 
     * @param {Array.<String>} importIds import ids from an imports
     * @param {module:api/InventoryApi~getOrganizationInventoryOnboardingCloudMonitoringImports_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner>}
     */
    getOrganizationInventoryOnboardingCloudMonitoringImports_1(organizationId, importIds, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationInventoryOnboardingCloudMonitoringImports_1");
      }
      // verify the required parameter 'importIds' is set
      if (importIds === undefined || importIds === null) {
        throw new Error("Missing the required parameter 'importIds' when calling getOrganizationInventoryOnboardingCloudMonitoringImports_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'importIds': this.apiClient.buildCollectionParam(importIds, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/imports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationInventoryOnboardingCloudMonitoringNetworks_1 operation.
     * @callback module:api/InventoryApi~getOrganizationInventoryOnboardingCloudMonitoringNetworks_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetwork200Response>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of networks eligible for adding cloud monitored device
     * Returns list of networks eligible for adding cloud monitored device
     * @param {String} organizationId 
     * @param {module:model/String} deviceType Device Type switch or wireless controller
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {module:api/InventoryApi~getOrganizationInventoryOnboardingCloudMonitoringNetworks_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetwork200Response>}
     */
    getOrganizationInventoryOnboardingCloudMonitoringNetworks_1(organizationId, deviceType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationInventoryOnboardingCloudMonitoringNetworks_1");
      }
      // verify the required parameter 'deviceType' is set
      if (deviceType === undefined || deviceType === null) {
        throw new Error("Missing the required parameter 'deviceType' when calling getOrganizationInventoryOnboardingCloudMonitoringNetworks_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'deviceType': deviceType,
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetwork200Response];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the releaseFromOrganizationInventory_1 operation.
     * @callback module:api/InventoryApi~releaseFromOrganizationInventory_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Release a list of claimed devices from an organization.
     * Release a list of claimed devices from an organization.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/ReleaseFromOrganizationInventoryRequest} [releaseFromOrganizationInventoryRequest] 
     * @param {module:api/InventoryApi~releaseFromOrganizationInventory_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    releaseFromOrganizationInventory_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['releaseFromOrganizationInventoryRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling releaseFromOrganizationInventory_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/inventory/release', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
