/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkSwitchRoutingMulticastRendezvousPointRequest from '../model/CreateNetworkSwitchRoutingMulticastRendezvousPointRequest';
import UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest from '../model/UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest';
import UpdateNetworkSwitchRoutingMulticastRequest from '../model/UpdateNetworkSwitchRoutingMulticastRequest';

/**
* Multicast service.
* @module api/MulticastApi
* @version 1.32.0
*/
export default class MulticastApi {

    /**
    * Constructs a new MulticastApi. 
    * @alias module:api/MulticastApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkSwitchRoutingMulticastRendezvousPoint_2 operation.
     * @callback module:api/MulticastApi~createNetworkSwitchRoutingMulticastRendezvousPoint_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a multicast rendezvous point
     * Create a multicast rendezvous point
     * @param {String} networkId 
     * @param {module:model/CreateNetworkSwitchRoutingMulticastRendezvousPointRequest} createNetworkSwitchRoutingMulticastRendezvousPointRequest 
     * @param {module:api/MulticastApi~createNetworkSwitchRoutingMulticastRendezvousPoint_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkSwitchRoutingMulticastRendezvousPoint_2(networkId, createNetworkSwitchRoutingMulticastRendezvousPointRequest, callback) {
      let postBody = createNetworkSwitchRoutingMulticastRendezvousPointRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }
      // verify the required parameter 'createNetworkSwitchRoutingMulticastRendezvousPointRequest' is set
      if (createNetworkSwitchRoutingMulticastRendezvousPointRequest === undefined || createNetworkSwitchRoutingMulticastRendezvousPointRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkSwitchRoutingMulticastRendezvousPointRequest' when calling createNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast/rendezvousPoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkSwitchRoutingMulticastRendezvousPoint_2 operation.
     * @callback module:api/MulticastApi~deleteNetworkSwitchRoutingMulticastRendezvousPoint_2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a multicast rendezvous point
     * Delete a multicast rendezvous point
     * @param {String} networkId 
     * @param {String} rendezvousPointId 
     * @param {module:api/MulticastApi~deleteNetworkSwitchRoutingMulticastRendezvousPoint_2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkSwitchRoutingMulticastRendezvousPoint_2(networkId, rendezvousPointId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }
      // verify the required parameter 'rendezvousPointId' is set
      if (rendezvousPointId === undefined || rendezvousPointId === null) {
        throw new Error("Missing the required parameter 'rendezvousPointId' when calling deleteNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }

      let pathParams = {
        'networkId': networkId,
        'rendezvousPointId': rendezvousPointId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchRoutingMulticastRendezvousPoint_2 operation.
     * @callback module:api/MulticastApi~getNetworkSwitchRoutingMulticastRendezvousPoint_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a multicast rendezvous point
     * Return a multicast rendezvous point
     * @param {String} networkId 
     * @param {String} rendezvousPointId 
     * @param {module:api/MulticastApi~getNetworkSwitchRoutingMulticastRendezvousPoint_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchRoutingMulticastRendezvousPoint_2(networkId, rendezvousPointId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }
      // verify the required parameter 'rendezvousPointId' is set
      if (rendezvousPointId === undefined || rendezvousPointId === null) {
        throw new Error("Missing the required parameter 'rendezvousPointId' when calling getNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }

      let pathParams = {
        'networkId': networkId,
        'rendezvousPointId': rendezvousPointId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchRoutingMulticastRendezvousPoints_2 operation.
     * @callback module:api/MulticastApi~getNetworkSwitchRoutingMulticastRendezvousPoints_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<[Object]>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List multicast rendezvous points
     * List multicast rendezvous points
     * @param {String} networkId 
     * @param {module:api/MulticastApi~getNetworkSwitchRoutingMulticastRendezvousPoints_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<[Object]>}
     */
    getNetworkSwitchRoutingMulticastRendezvousPoints_2(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchRoutingMulticastRendezvousPoints_2");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [[Object]];
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast/rendezvousPoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchRoutingMulticast_2 operation.
     * @callback module:api/MulticastApi~getNetworkSwitchRoutingMulticast_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return multicast settings for a network
     * Return multicast settings for a network
     * @param {String} networkId 
     * @param {module:api/MulticastApi~getNetworkSwitchRoutingMulticast_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchRoutingMulticast_2(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchRoutingMulticast_2");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchRoutingMulticastRendezvousPoint_2 operation.
     * @callback module:api/MulticastApi~updateNetworkSwitchRoutingMulticastRendezvousPoint_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a multicast rendezvous point
     * Update a multicast rendezvous point
     * @param {String} networkId 
     * @param {String} rendezvousPointId 
     * @param {module:model/UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest} updateNetworkSwitchRoutingMulticastRendezvousPointRequest 
     * @param {module:api/MulticastApi~updateNetworkSwitchRoutingMulticastRendezvousPoint_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchRoutingMulticastRendezvousPoint_2(networkId, rendezvousPointId, updateNetworkSwitchRoutingMulticastRendezvousPointRequest, callback) {
      let postBody = updateNetworkSwitchRoutingMulticastRendezvousPointRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }
      // verify the required parameter 'rendezvousPointId' is set
      if (rendezvousPointId === undefined || rendezvousPointId === null) {
        throw new Error("Missing the required parameter 'rendezvousPointId' when calling updateNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }
      // verify the required parameter 'updateNetworkSwitchRoutingMulticastRendezvousPointRequest' is set
      if (updateNetworkSwitchRoutingMulticastRendezvousPointRequest === undefined || updateNetworkSwitchRoutingMulticastRendezvousPointRequest === null) {
        throw new Error("Missing the required parameter 'updateNetworkSwitchRoutingMulticastRendezvousPointRequest' when calling updateNetworkSwitchRoutingMulticastRendezvousPoint_2");
      }

      let pathParams = {
        'networkId': networkId,
        'rendezvousPointId': rendezvousPointId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchRoutingMulticast_2 operation.
     * @callback module:api/MulticastApi~updateNetworkSwitchRoutingMulticast_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update multicast settings for a network
     * Update multicast settings for a network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkSwitchRoutingMulticastRequest} [updateNetworkSwitchRoutingMulticastRequest] 
     * @param {module:api/MulticastApi~updateNetworkSwitchRoutingMulticast_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchRoutingMulticast_2(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkSwitchRoutingMulticastRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchRoutingMulticast_2");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/routing/multicast', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
