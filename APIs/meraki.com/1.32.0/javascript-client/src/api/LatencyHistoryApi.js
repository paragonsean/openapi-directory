/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetNetworkWirelessLatencyHistory200ResponseInner from '../model/GetNetworkWirelessLatencyHistory200ResponseInner';

/**
* LatencyHistory service.
* @module api/LatencyHistoryApi
* @version 1.32.0
*/
export default class LatencyHistoryApi {

    /**
    * Constructs a new LatencyHistoryApi. 
    * @alias module:api/LatencyHistoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getNetworkWirelessClientLatencyHistory_2 operation.
     * @callback module:api/LatencyHistoryApi~getNetworkWirelessClientLatencyHistory_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the latency history for a client
     * Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.
     * @param {String} networkId 
     * @param {String} clientId 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
     * @param {String} [t1] The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.
     * @param {Number} [resolution] The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.
     * @param {module:api/LatencyHistoryApi~getNetworkWirelessClientLatencyHistory_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkWirelessClientLatencyHistory_2(networkId, clientId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessClientLatencyHistory_2");
      }
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling getNetworkWirelessClientLatencyHistory_2");
      }

      let pathParams = {
        'networkId': networkId,
        'clientId': clientId
      };
      let queryParams = {
        't0': opts['t0'],
        't1': opts['t1'],
        'timespan': opts['timespan'],
        'resolution': opts['resolution']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/clients/{clientId}/latencyHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWirelessLatencyHistory_1 operation.
     * @callback module:api/LatencyHistoryApi~getNetworkWirelessLatencyHistory_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkWirelessLatencyHistory200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return average wireless latency over time for a network, device, or network client
     * Return average wireless latency over time for a network, device, or network client
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * @param {String} [t1] The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
     * @param {Number} [resolution] The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
     * @param {Boolean} [autoResolution] Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
     * @param {String} [clientId] Filter results by network client.
     * @param {String} [deviceSerial] Filter results by device.
     * @param {String} [apTag] Filter results by AP tag.
     * @param {module:model/String} [band] Filter results by band (either '2.4', '5' or '6').
     * @param {Number} [ssid] Filter results by SSID number.
     * @param {module:model/String} [accessCategory] Filter by access category.
     * @param {module:api/LatencyHistoryApi~getNetworkWirelessLatencyHistory_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkWirelessLatencyHistory200ResponseInner>}
     */
    getNetworkWirelessLatencyHistory_1(networkId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessLatencyHistory_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
        't0': opts['t0'],
        't1': opts['t1'],
        'timespan': opts['timespan'],
        'resolution': opts['resolution'],
        'autoResolution': opts['autoResolution'],
        'clientId': opts['clientId'],
        'deviceSerial': opts['deviceSerial'],
        'apTag': opts['apTag'],
        'band': opts['band'],
        'ssid': opts['ssid'],
        'accessCategory': opts['accessCategory']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkWirelessLatencyHistory200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/latencyHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
