/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationConfigTemplateRequest from '../model/CreateOrganizationConfigTemplateRequest';
import GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner from '../model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner';
import GetOrganizationConfigTemplateSwitchProfiles200Response from '../model/GetOrganizationConfigTemplateSwitchProfiles200Response';
import UpdateOrganizationConfigTemplateRequest from '../model/UpdateOrganizationConfigTemplateRequest';
import UpdateOrganizationConfigTemplateSwitchProfilePortRequest from '../model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest';

/**
* ConfigTemplates service.
* @module api/ConfigTemplatesApi
* @version 1.32.0
*/
export default class ConfigTemplatesApi {

    /**
    * Constructs a new ConfigTemplatesApi. 
    * @alias module:api/ConfigTemplatesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationConfigTemplate_1 operation.
     * @callback module:api/ConfigTemplatesApi~createOrganizationConfigTemplate_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new configuration template
     * Create a new configuration template
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationConfigTemplateRequest} createOrganizationConfigTemplateRequest 
     * @param {module:api/ConfigTemplatesApi~createOrganizationConfigTemplate_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationConfigTemplate_1(organizationId, createOrganizationConfigTemplateRequest, callback) {
      let postBody = createOrganizationConfigTemplateRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationConfigTemplate_1");
      }
      // verify the required parameter 'createOrganizationConfigTemplateRequest' is set
      if (createOrganizationConfigTemplateRequest === undefined || createOrganizationConfigTemplateRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationConfigTemplateRequest' when calling createOrganizationConfigTemplate_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationConfigTemplate_1 operation.
     * @callback module:api/ConfigTemplatesApi~deleteOrganizationConfigTemplate_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a configuration template
     * Remove a configuration template
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {module:api/ConfigTemplatesApi~deleteOrganizationConfigTemplate_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationConfigTemplate_1(organizationId, configTemplateId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationConfigTemplate_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling deleteOrganizationConfigTemplate_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationConfigTemplateSwitchProfilePort_1 operation.
     * @callback module:api/ConfigTemplatesApi~getOrganizationConfigTemplateSwitchProfilePort_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a switch profile port
     * Return a switch profile port
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {String} profileId 
     * @param {String} portId 
     * @param {module:api/ConfigTemplatesApi~getOrganizationConfigTemplateSwitchProfilePort_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner}
     */
    getOrganizationConfigTemplateSwitchProfilePort_1(organizationId, configTemplateId, profileId, portId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationConfigTemplateSwitchProfilePort_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling getOrganizationConfigTemplateSwitchProfilePort_1");
      }
      // verify the required parameter 'profileId' is set
      if (profileId === undefined || profileId === null) {
        throw new Error("Missing the required parameter 'profileId' when calling getOrganizationConfigTemplateSwitchProfilePort_1");
      }
      // verify the required parameter 'portId' is set
      if (portId === undefined || portId === null) {
        throw new Error("Missing the required parameter 'portId' when calling getOrganizationConfigTemplateSwitchProfilePort_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId,
        'profileId': profileId,
        'portId': portId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationConfigTemplateSwitchProfilePorts_1 operation.
     * @callback module:api/ConfigTemplatesApi~getOrganizationConfigTemplateSwitchProfilePorts_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return all the ports of a switch profile
     * Return all the ports of a switch profile
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {String} profileId 
     * @param {module:api/ConfigTemplatesApi~getOrganizationConfigTemplateSwitchProfilePorts_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner>}
     */
    getOrganizationConfigTemplateSwitchProfilePorts_1(organizationId, configTemplateId, profileId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationConfigTemplateSwitchProfilePorts_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling getOrganizationConfigTemplateSwitchProfilePorts_1");
      }
      // verify the required parameter 'profileId' is set
      if (profileId === undefined || profileId === null) {
        throw new Error("Missing the required parameter 'profileId' when calling getOrganizationConfigTemplateSwitchProfilePorts_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId,
        'profileId': profileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationConfigTemplateSwitchProfiles_1 operation.
     * @callback module:api/ConfigTemplatesApi~getOrganizationConfigTemplateSwitchProfiles_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationConfigTemplateSwitchProfiles200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the switch profiles for your switch template configuration
     * List the switch profiles for your switch template configuration
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {module:api/ConfigTemplatesApi~getOrganizationConfigTemplateSwitchProfiles_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationConfigTemplateSwitchProfiles200Response}
     */
    getOrganizationConfigTemplateSwitchProfiles_1(organizationId, configTemplateId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationConfigTemplateSwitchProfiles_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling getOrganizationConfigTemplateSwitchProfiles_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationConfigTemplateSwitchProfiles200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationConfigTemplate_1 operation.
     * @callback module:api/ConfigTemplatesApi~getOrganizationConfigTemplate_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a single configuration template
     * Return a single configuration template
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {module:api/ConfigTemplatesApi~getOrganizationConfigTemplate_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOrganizationConfigTemplate_1(organizationId, configTemplateId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationConfigTemplate_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling getOrganizationConfigTemplate_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationConfigTemplates_1 operation.
     * @callback module:api/ConfigTemplatesApi~getOrganizationConfigTemplates_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the configuration templates for this organization
     * List the configuration templates for this organization
     * @param {String} organizationId 
     * @param {module:api/ConfigTemplatesApi~getOrganizationConfigTemplates_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationConfigTemplates_1(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationConfigTemplates_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationConfigTemplateSwitchProfilePort_1 operation.
     * @callback module:api/ConfigTemplatesApi~updateOrganizationConfigTemplateSwitchProfilePort_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a switch profile port
     * Update a switch profile port
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {String} profileId 
     * @param {String} portId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest} [updateOrganizationConfigTemplateSwitchProfilePortRequest] 
     * @param {module:api/ConfigTemplatesApi~updateOrganizationConfigTemplateSwitchProfilePort_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner}
     */
    updateOrganizationConfigTemplateSwitchProfilePort_1(organizationId, configTemplateId, profileId, portId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationConfigTemplateSwitchProfilePortRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationConfigTemplateSwitchProfilePort_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling updateOrganizationConfigTemplateSwitchProfilePort_1");
      }
      // verify the required parameter 'profileId' is set
      if (profileId === undefined || profileId === null) {
        throw new Error("Missing the required parameter 'profileId' when calling updateOrganizationConfigTemplateSwitchProfilePort_1");
      }
      // verify the required parameter 'portId' is set
      if (portId === undefined || portId === null) {
        throw new Error("Missing the required parameter 'portId' when calling updateOrganizationConfigTemplateSwitchProfilePort_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId,
        'profileId': profileId,
        'portId': portId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationConfigTemplate_1 operation.
     * @callback module:api/ConfigTemplatesApi~updateOrganizationConfigTemplate_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a configuration template
     * Update a configuration template
     * @param {String} organizationId 
     * @param {String} configTemplateId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationConfigTemplateRequest} [updateOrganizationConfigTemplateRequest] 
     * @param {module:api/ConfigTemplatesApi~updateOrganizationConfigTemplate_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationConfigTemplate_1(organizationId, configTemplateId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationConfigTemplateRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationConfigTemplate_1");
      }
      // verify the required parameter 'configTemplateId' is set
      if (configTemplateId === undefined || configTemplateId === null) {
        throw new Error("Missing the required parameter 'configTemplateId' when calling updateOrganizationConfigTemplate_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'configTemplateId': configTemplateId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/configTemplates/{configTemplateId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
