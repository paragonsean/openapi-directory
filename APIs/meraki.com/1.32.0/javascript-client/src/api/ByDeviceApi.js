/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner from '../model/GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner';
import GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner from '../model/GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner';
import GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner from '../model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner';
import GetOrganizationFirmwareUpgradesByDevice200ResponseInner from '../model/GetOrganizationFirmwareUpgradesByDevice200ResponseInner';

/**
* ByDevice service.
* @module api/ByDeviceApi
* @version 1.32.0
*/
export default class ByDeviceApi {

    /**
    * Constructs a new ByDeviceApi. 
    * @alias module:api/ByDeviceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice_4 operation.
     * @callback module:api/ByDeviceApi~getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice_4Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the devices that have a Dynamic ARP Inspection warning and their warnings
     * Return the devices that have a Dynamic ARP Inspection warning and their warnings
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {module:api/ByDeviceApi~getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice_4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner>}
     */
    getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice_4(networkId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice_4");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/warnings/byDevice', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationDevicesPowerModulesStatusesByDevice_4 operation.
     * @callback module:api/ByDeviceApi~getOrganizationDevicesPowerModulesStatusesByDevice_4Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the power status information for devices in an organization
     * List the power status information for devices in an organization. The data returned by this endpoint is updated every 5 minutes.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
     * @param {Array.<String>} [productTypes] Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
     * @param {Array.<String>} [serials] Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
     * @param {Array.<String>} [tags] An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
     * @param {module:model/String} [tagsFilterType] An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     * @param {module:api/ByDeviceApi~getOrganizationDevicesPowerModulesStatusesByDevice_4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner>}
     */
    getOrganizationDevicesPowerModulesStatusesByDevice_4(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationDevicesPowerModulesStatusesByDevice_4");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'productTypes': this.apiClient.buildCollectionParam(opts['productTypes'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'tagsFilterType': opts['tagsFilterType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/devices/powerModules/statuses/byDevice', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationDevicesUplinksAddressesByDevice_4 operation.
     * @callback module:api/ByDeviceApi~getOrganizationDevicesUplinksAddressesByDevice_4Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the current uplink addresses for devices in an organization.
     * List the current uplink addresses for devices in an organization.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.
     * @param {Array.<String>} [productTypes] Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.
     * @param {Array.<String>} [serials] Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
     * @param {Array.<String>} [tags] An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
     * @param {module:model/String} [tagsFilterType] An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     * @param {module:api/ByDeviceApi~getOrganizationDevicesUplinksAddressesByDevice_4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner>}
     */
    getOrganizationDevicesUplinksAddressesByDevice_4(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationDevicesUplinksAddressesByDevice_4");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'productTypes': this.apiClient.buildCollectionParam(opts['productTypes'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'tagsFilterType': opts['tagsFilterType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/devices/uplinks/addresses/byDevice', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationFirmwareUpgradesByDevice_3 operation.
     * @callback module:api/ByDeviceApi~getOrganizationFirmwareUpgradesByDevice_3Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationFirmwareUpgradesByDevice200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get firmware upgrade status for the filtered devices
     * Get firmware upgrade status for the filtered devices
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 50. Default is 50.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] Optional parameter to filter by network
     * @param {Array.<String>} [serials] Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.
     * @param {Array.<String>} [macs] Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.
     * @param {Array.<String>} [firmwareUpgradeIds] Optional parameter to filter by firmware upgrade ids.
     * @param {Array.<String>} [firmwareUpgradeBatchIds] Optional parameter to filter by firmware upgrade batch ids.
     * @param {module:api/ByDeviceApi~getOrganizationFirmwareUpgradesByDevice_3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationFirmwareUpgradesByDevice200ResponseInner>}
     */
    getOrganizationFirmwareUpgradesByDevice_3(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationFirmwareUpgradesByDevice_3");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'macs': this.apiClient.buildCollectionParam(opts['macs'], 'csv'),
        'firmwareUpgradeIds': this.apiClient.buildCollectionParam(opts['firmwareUpgradeIds'], 'csv'),
        'firmwareUpgradeBatchIds': this.apiClient.buildCollectionParam(opts['firmwareUpgradeBatchIds'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationFirmwareUpgradesByDevice200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/firmware/upgrades/byDevice', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
