/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationSamlIdpRequest from '../model/CreateOrganizationSamlIdpRequest';
import GetOrganizationSaml200Response from '../model/GetOrganizationSaml200Response';
import GetOrganizationSamlIdps200ResponseInner from '../model/GetOrganizationSamlIdps200ResponseInner';
import UpdateOrganizationSamlIdpRequest from '../model/UpdateOrganizationSamlIdpRequest';
import UpdateOrganizationSamlRequest from '../model/UpdateOrganizationSamlRequest';

/**
* Saml service.
* @module api/SamlApi
* @version 1.32.0
*/
export default class SamlApi {

    /**
    * Constructs a new SamlApi. 
    * @alias module:api/SamlApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationSamlIdp_1 operation.
     * @callback module:api/SamlApi~createOrganizationSamlIdp_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationSamlIdps200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a SAML IdP for your organization.
     * Create a SAML IdP for your organization.
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationSamlIdpRequest} createOrganizationSamlIdpRequest 
     * @param {module:api/SamlApi~createOrganizationSamlIdp_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationSamlIdps200ResponseInner>}
     */
    createOrganizationSamlIdp_1(organizationId, createOrganizationSamlIdpRequest, callback) {
      let postBody = createOrganizationSamlIdpRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationSamlIdp_1");
      }
      // verify the required parameter 'createOrganizationSamlIdpRequest' is set
      if (createOrganizationSamlIdpRequest === undefined || createOrganizationSamlIdpRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationSamlIdpRequest' when calling createOrganizationSamlIdp_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationSamlIdps200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml/idps', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationSamlIdp_1 operation.
     * @callback module:api/SamlApi~deleteOrganizationSamlIdp_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a SAML IdP in your organization.
     * Remove a SAML IdP in your organization.
     * @param {String} organizationId 
     * @param {String} idpId 
     * @param {module:api/SamlApi~deleteOrganizationSamlIdp_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationSamlIdp_1(organizationId, idpId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationSamlIdp_1");
      }
      // verify the required parameter 'idpId' is set
      if (idpId === undefined || idpId === null) {
        throw new Error("Missing the required parameter 'idpId' when calling deleteOrganizationSamlIdp_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'idpId': idpId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml/idps/{idpId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationSamlIdp_1 operation.
     * @callback module:api/SamlApi~getOrganizationSamlIdp_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationSamlIdps200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a SAML IdP from your organization.
     * Get a SAML IdP from your organization.
     * @param {String} organizationId 
     * @param {String} idpId 
     * @param {module:api/SamlApi~getOrganizationSamlIdp_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationSamlIdps200ResponseInner}
     */
    getOrganizationSamlIdp_1(organizationId, idpId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationSamlIdp_1");
      }
      // verify the required parameter 'idpId' is set
      if (idpId === undefined || idpId === null) {
        throw new Error("Missing the required parameter 'idpId' when calling getOrganizationSamlIdp_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'idpId': idpId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationSamlIdps200ResponseInner;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml/idps/{idpId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationSamlIdps_1 operation.
     * @callback module:api/SamlApi~getOrganizationSamlIdps_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationSamlIdps200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the SAML IdPs in your organization.
     * List the SAML IdPs in your organization.
     * @param {String} organizationId 
     * @param {module:api/SamlApi~getOrganizationSamlIdps_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationSamlIdps200ResponseInner>}
     */
    getOrganizationSamlIdps_1(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationSamlIdps_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationSamlIdps200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml/idps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationSaml_1 operation.
     * @callback module:api/SamlApi~getOrganizationSaml_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationSaml200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the SAML SSO enabled settings for an organization.
     * Returns the SAML SSO enabled settings for an organization.
     * @param {String} organizationId 
     * @param {module:api/SamlApi~getOrganizationSaml_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationSaml200Response}
     */
    getOrganizationSaml_1(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationSaml_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationSaml200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationSamlIdp_1 operation.
     * @callback module:api/SamlApi~updateOrganizationSamlIdp_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationSamlIdps200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a SAML IdP in your organization
     * Update a SAML IdP in your organization
     * @param {String} organizationId 
     * @param {String} idpId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationSamlIdpRequest} [updateOrganizationSamlIdpRequest] 
     * @param {module:api/SamlApi~updateOrganizationSamlIdp_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationSamlIdps200ResponseInner>}
     */
    updateOrganizationSamlIdp_1(organizationId, idpId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationSamlIdpRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationSamlIdp_1");
      }
      // verify the required parameter 'idpId' is set
      if (idpId === undefined || idpId === null) {
        throw new Error("Missing the required parameter 'idpId' when calling updateOrganizationSamlIdp_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'idpId': idpId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationSamlIdps200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml/idps/{idpId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationSaml_1 operation.
     * @callback module:api/SamlApi~updateOrganizationSaml_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationSaml200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the SAML SSO enabled settings for an organization.
     * Updates the SAML SSO enabled settings for an organization.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationSamlRequest} [updateOrganizationSamlRequest] 
     * @param {module:api/SamlApi~updateOrganizationSaml_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationSaml200Response}
     */
    updateOrganizationSaml_1(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationSamlRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationSaml_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetOrganizationSaml200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/saml', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
