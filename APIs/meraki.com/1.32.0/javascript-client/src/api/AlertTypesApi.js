/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* AlertTypes service.
* @module api/AlertTypesApi
* @version 1.32.0
*/
export default class AlertTypesApi {

    /**
    * Constructs a new AlertTypesApi. 
    * @alias module:api/AlertTypesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getOrganizationWebhooksAlertTypes_2 operation.
     * @callback module:api/AlertTypesApi~getOrganizationWebhooksAlertTypes_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of alert types to be used with managing webhook alerts
     * Return a list of alert types to be used with managing webhook alerts
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [productType] Filter sample alerts to a specific product type
     * @param {module:api/AlertTypesApi~getOrganizationWebhooksAlertTypes_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationWebhooksAlertTypes_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationWebhooksAlertTypes_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'productType': opts['productType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/webhooks/alertTypes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
