/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationAdaptivePolicyAclRequest from '../model/CreateOrganizationAdaptivePolicyAclRequest';
import UpdateOrganizationAdaptivePolicyAclRequest from '../model/UpdateOrganizationAdaptivePolicyAclRequest';

/**
* Acls service.
* @module api/AclsApi
* @version 1.32.0
*/
export default class AclsApi {

    /**
    * Constructs a new AclsApi. 
    * @alias module:api/AclsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationAdaptivePolicyAcl_2 operation.
     * @callback module:api/AclsApi~createOrganizationAdaptivePolicyAcl_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new adaptive policy ACL
     * Creates new adaptive policy ACL
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationAdaptivePolicyAclRequest} createOrganizationAdaptivePolicyAclRequest 
     * @param {module:api/AclsApi~createOrganizationAdaptivePolicyAcl_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationAdaptivePolicyAcl_2(organizationId, createOrganizationAdaptivePolicyAclRequest, callback) {
      let postBody = createOrganizationAdaptivePolicyAclRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationAdaptivePolicyAcl_2");
      }
      // verify the required parameter 'createOrganizationAdaptivePolicyAclRequest' is set
      if (createOrganizationAdaptivePolicyAclRequest === undefined || createOrganizationAdaptivePolicyAclRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationAdaptivePolicyAclRequest' when calling createOrganizationAdaptivePolicyAcl_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/acls', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationAdaptivePolicyAcl_2 operation.
     * @callback module:api/AclsApi~deleteOrganizationAdaptivePolicyAcl_2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified adaptive policy ACL
     * Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.
     * @param {String} organizationId 
     * @param {String} aclId 
     * @param {module:api/AclsApi~deleteOrganizationAdaptivePolicyAcl_2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationAdaptivePolicyAcl_2(organizationId, aclId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationAdaptivePolicyAcl_2");
      }
      // verify the required parameter 'aclId' is set
      if (aclId === undefined || aclId === null) {
        throw new Error("Missing the required parameter 'aclId' when calling deleteOrganizationAdaptivePolicyAcl_2");
      }

      let pathParams = {
        'organizationId': organizationId,
        'aclId': aclId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/acls/{aclId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationAdaptivePolicyAcl_2 operation.
     * @callback module:api/AclsApi~getOrganizationAdaptivePolicyAcl_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the adaptive policy ACL information
     * Returns the adaptive policy ACL information
     * @param {String} organizationId 
     * @param {String} aclId 
     * @param {module:api/AclsApi~getOrganizationAdaptivePolicyAcl_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOrganizationAdaptivePolicyAcl_2(organizationId, aclId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationAdaptivePolicyAcl_2");
      }
      // verify the required parameter 'aclId' is set
      if (aclId === undefined || aclId === null) {
        throw new Error("Missing the required parameter 'aclId' when calling getOrganizationAdaptivePolicyAcl_2");
      }

      let pathParams = {
        'organizationId': organizationId,
        'aclId': aclId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/acls/{aclId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationAdaptivePolicyAcls_2 operation.
     * @callback module:api/AclsApi~getOrganizationAdaptivePolicyAcls_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List adaptive policy ACLs in a organization
     * List adaptive policy ACLs in a organization
     * @param {String} organizationId 
     * @param {module:api/AclsApi~getOrganizationAdaptivePolicyAcls_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationAdaptivePolicyAcls_2(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationAdaptivePolicyAcls_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/acls', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationAdaptivePolicyAcl_2 operation.
     * @callback module:api/AclsApi~updateOrganizationAdaptivePolicyAcl_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an adaptive policy ACL
     * Updates an adaptive policy ACL
     * @param {String} organizationId 
     * @param {String} aclId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationAdaptivePolicyAclRequest} [updateOrganizationAdaptivePolicyAclRequest] 
     * @param {module:api/AclsApi~updateOrganizationAdaptivePolicyAcl_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationAdaptivePolicyAcl_2(organizationId, aclId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationAdaptivePolicyAclRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationAdaptivePolicyAcl_2");
      }
      // verify the required parameter 'aclId' is set
      if (aclId === undefined || aclId === null) {
        throw new Error("Missing the required parameter 'aclId' when calling updateOrganizationAdaptivePolicyAcl_2");
      }

      let pathParams = {
        'organizationId': organizationId,
        'aclId': aclId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/adaptivePolicy/acls/{aclId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
