/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetNetworkCellularGatewayDhcp200Response from '../model/GetNetworkCellularGatewayDhcp200Response';
import GetOrganizationCellularGatewayUplinkStatuses200ResponseInner from '../model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInner';
import UpdateDeviceCellularGatewayLanRequest from '../model/UpdateDeviceCellularGatewayLanRequest';
import UpdateDeviceCellularGatewayPortForwardingRulesRequest from '../model/UpdateDeviceCellularGatewayPortForwardingRulesRequest';
import UpdateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest from '../model/UpdateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest';
import UpdateNetworkCellularGatewayDhcpRequest from '../model/UpdateNetworkCellularGatewayDhcpRequest';
import UpdateNetworkCellularGatewaySubnetPoolRequest from '../model/UpdateNetworkCellularGatewaySubnetPoolRequest';
import UpdateNetworkCellularGatewayUplinkRequest from '../model/UpdateNetworkCellularGatewayUplinkRequest';

/**
* CellularGateway service.
* @module api/CellularGatewayApi
* @version 1.32.0
*/
export default class CellularGatewayApi {

    /**
    * Constructs a new CellularGatewayApi. 
    * @alias module:api/CellularGatewayApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDeviceCellularGatewayLan operation.
     * @callback module:api/CellularGatewayApi~getDeviceCellularGatewayLanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show the LAN Settings of a MG
     * Show the LAN Settings of a MG
     * @param {String} serial 
     * @param {module:api/CellularGatewayApi~getDeviceCellularGatewayLanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceCellularGatewayLan(serial, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceCellularGatewayLan");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/lan', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceCellularGatewayPortForwardingRules operation.
     * @callback module:api/CellularGatewayApi~getDeviceCellularGatewayPortForwardingRulesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the port forwarding rules for a single MG.
     * Returns the port forwarding rules for a single MG.
     * @param {String} serial 
     * @param {module:api/CellularGatewayApi~getDeviceCellularGatewayPortForwardingRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceCellularGatewayPortForwardingRules(serial, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceCellularGatewayPortForwardingRules");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/portForwardingRules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewayConnectivityMonitoringDestinations operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewayConnectivityMonitoringDestinationsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the connectivity testing destinations for an MG network
     * Return the connectivity testing destinations for an MG network
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewayConnectivityMonitoringDestinationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkCellularGatewayConnectivityMonitoringDestinations(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewayConnectivityMonitoringDestinations");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewayDhcp operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewayDhcpCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkCellularGatewayDhcp200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List common DHCP settings of MGs
     * List common DHCP settings of MGs
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewayDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkCellularGatewayDhcp200Response}
     */
    getNetworkCellularGatewayDhcp(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewayDhcp");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetNetworkCellularGatewayDhcp200Response;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/dhcp', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewaySubnetPool operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewaySubnetPoolCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the subnet pool and mask configured for MGs in the network.
     * Return the subnet pool and mask configured for MGs in the network.
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewaySubnetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkCellularGatewaySubnetPool(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewaySubnetPool");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/subnetPool', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewayUplink operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewayUplinkCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the uplink settings for your MG network.
     * Returns the uplink settings for your MG network.
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewayUplinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkCellularGatewayUplink(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewayUplink");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/uplink', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationCellularGatewayUplinkStatuses operation.
     * @callback module:api/CellularGatewayApi~getOrganizationCellularGatewayUplinkStatusesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the uplink status of every Meraki MG cellular gateway in the organization
     * List the uplink status of every Meraki MG cellular gateway in the organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] A list of network IDs. The returned devices will be filtered to only include these networks.
     * @param {Array.<String>} [serials] A list of serial numbers. The returned devices will be filtered to only include these serials.
     * @param {Array.<String>} [iccids] A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
     * @param {module:api/CellularGatewayApi~getOrganizationCellularGatewayUplinkStatusesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInner>}
     */
    getOrganizationCellularGatewayUplinkStatuses(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationCellularGatewayUplinkStatuses");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'iccids': this.apiClient.buildCollectionParam(opts['iccids'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationCellularGatewayUplinkStatuses200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/cellularGateway/uplink/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDeviceCellularGatewayLan operation.
     * @callback module:api/CellularGatewayApi~updateDeviceCellularGatewayLanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the LAN Settings for a single MG.
     * Update the LAN Settings for a single MG.
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateDeviceCellularGatewayLanRequest} [updateDeviceCellularGatewayLanRequest] 
     * @param {module:api/CellularGatewayApi~updateDeviceCellularGatewayLanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDeviceCellularGatewayLan(serial, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateDeviceCellularGatewayLanRequest'];
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling updateDeviceCellularGatewayLan");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/lan', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDeviceCellularGatewayPortForwardingRules operation.
     * @callback module:api/CellularGatewayApi~updateDeviceCellularGatewayPortForwardingRulesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the port forwarding rules for a single MG.
     * Updates the port forwarding rules for a single MG.
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateDeviceCellularGatewayPortForwardingRulesRequest} [updateDeviceCellularGatewayPortForwardingRulesRequest] 
     * @param {module:api/CellularGatewayApi~updateDeviceCellularGatewayPortForwardingRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDeviceCellularGatewayPortForwardingRules(serial, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateDeviceCellularGatewayPortForwardingRulesRequest'];
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling updateDeviceCellularGatewayPortForwardingRules");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/portForwardingRules', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewayConnectivityMonitoringDestinations operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewayConnectivityMonitoringDestinationsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the connectivity testing destinations for an MG network
     * Update the connectivity testing destinations for an MG network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest} [updateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest] 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewayConnectivityMonitoringDestinationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkCellularGatewayConnectivityMonitoringDestinations(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewayConnectivityMonitoringDestinations");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewayDhcp operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewayDhcpCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkCellularGatewayDhcp200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update common DHCP settings of MGs
     * Update common DHCP settings of MGs
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewayDhcpRequest} [updateNetworkCellularGatewayDhcpRequest] 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewayDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkCellularGatewayDhcp200Response}
     */
    updateNetworkCellularGatewayDhcp(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkCellularGatewayDhcpRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewayDhcp");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetNetworkCellularGatewayDhcp200Response;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/dhcp', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewaySubnetPool operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewaySubnetPoolCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the subnet pool and mask configuration for MGs in the network.
     * Update the subnet pool and mask configuration for MGs in the network.
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewaySubnetPoolRequest} [updateNetworkCellularGatewaySubnetPoolRequest] 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewaySubnetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkCellularGatewaySubnetPool(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkCellularGatewaySubnetPoolRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewaySubnetPool");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/subnetPool', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewayUplink operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewayUplinkCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the uplink settings for your MG network.
     * Updates the uplink settings for your MG network.
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewayUplinkRequest} [updateNetworkCellularGatewayUplinkRequest] 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewayUplinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkCellularGatewayUplink(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkCellularGatewayUplinkRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewayUplink");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/uplink', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
