/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BlinkDeviceLedsRequest from '../model/BlinkDeviceLedsRequest';
import CreateDeviceLiveToolsPing201Response from '../model/CreateDeviceLiveToolsPing201Response';
import CreateDeviceLiveToolsPingDeviceRequest from '../model/CreateDeviceLiveToolsPingDeviceRequest';
import CreateDeviceLiveToolsPingRequest from '../model/CreateDeviceLiveToolsPingRequest';
import CycleDeviceSwitchPortsRequest from '../model/CycleDeviceSwitchPortsRequest';
import GetDeviceLiveToolsPing200Response from '../model/GetDeviceLiveToolsPing200Response';

/**
* LiveTools service.
* @module api/LiveToolsApi
* @version 1.32.0
*/
export default class LiveToolsApi {

    /**
    * Constructs a new LiveToolsApi. 
    * @alias module:api/LiveToolsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the blinkDeviceLeds_0 operation.
     * @callback module:api/LiveToolsApi~blinkDeviceLeds_0Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Blink the LEDs on a device
     * Blink the LEDs on a device
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/BlinkDeviceLedsRequest} [blinkDeviceLedsRequest] 
     * @param {module:api/LiveToolsApi~blinkDeviceLeds_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    blinkDeviceLeds_0(serial, opts, callback) {
      opts = opts || {};
      let postBody = opts['blinkDeviceLedsRequest'];
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling blinkDeviceLeds_0");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/blinkLeds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createDeviceLiveToolsPingDevice_0 operation.
     * @callback module:api/LiveToolsApi~createDeviceLiveToolsPingDevice_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateDeviceLiveToolsPing201Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enqueue a job to check connectivity status to the device
     * Enqueue a job to check connectivity status to the device
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateDeviceLiveToolsPingDeviceRequest} [createDeviceLiveToolsPingDeviceRequest] 
     * @param {module:api/LiveToolsApi~createDeviceLiveToolsPingDevice_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateDeviceLiveToolsPing201Response}
     */
    createDeviceLiveToolsPingDevice_0(serial, opts, callback) {
      opts = opts || {};
      let postBody = opts['createDeviceLiveToolsPingDeviceRequest'];
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling createDeviceLiveToolsPingDevice_0");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateDeviceLiveToolsPing201Response;
      return this.apiClient.callApi(
        '/devices/{serial}/liveTools/pingDevice', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createDeviceLiveToolsPing_0 operation.
     * @callback module:api/LiveToolsApi~createDeviceLiveToolsPing_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateDeviceLiveToolsPing201Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enqueue a job to ping a target host from the device
     * Enqueue a job to ping a target host from the device
     * @param {String} serial 
     * @param {module:model/CreateDeviceLiveToolsPingRequest} createDeviceLiveToolsPingRequest 
     * @param {module:api/LiveToolsApi~createDeviceLiveToolsPing_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateDeviceLiveToolsPing201Response}
     */
    createDeviceLiveToolsPing_0(serial, createDeviceLiveToolsPingRequest, callback) {
      let postBody = createDeviceLiveToolsPingRequest;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling createDeviceLiveToolsPing_0");
      }
      // verify the required parameter 'createDeviceLiveToolsPingRequest' is set
      if (createDeviceLiveToolsPingRequest === undefined || createDeviceLiveToolsPingRequest === null) {
        throw new Error("Missing the required parameter 'createDeviceLiveToolsPingRequest' when calling createDeviceLiveToolsPing_0");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateDeviceLiveToolsPing201Response;
      return this.apiClient.callApi(
        '/devices/{serial}/liveTools/ping', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cycleDeviceSwitchPorts_0 operation.
     * @callback module:api/LiveToolsApi~cycleDeviceSwitchPorts_0Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cycle a set of switch ports
     * Cycle a set of switch ports
     * @param {String} serial 
     * @param {module:model/CycleDeviceSwitchPortsRequest} cycleDeviceSwitchPortsRequest 
     * @param {module:api/LiveToolsApi~cycleDeviceSwitchPorts_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    cycleDeviceSwitchPorts_0(serial, cycleDeviceSwitchPortsRequest, callback) {
      let postBody = cycleDeviceSwitchPortsRequest;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling cycleDeviceSwitchPorts_0");
      }
      // verify the required parameter 'cycleDeviceSwitchPortsRequest' is set
      if (cycleDeviceSwitchPortsRequest === undefined || cycleDeviceSwitchPortsRequest === null) {
        throw new Error("Missing the required parameter 'cycleDeviceSwitchPortsRequest' when calling cycleDeviceSwitchPorts_0");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/switch/ports/cycle', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceLiveToolsPingDevice_0 operation.
     * @callback module:api/LiveToolsApi~getDeviceLiveToolsPingDevice_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDeviceLiveToolsPing200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a ping device job
     * Return a ping device job. Latency unit in response is in milliseconds. Size is in bytes.
     * @param {String} serial 
     * @param {String} id 
     * @param {module:api/LiveToolsApi~getDeviceLiveToolsPingDevice_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDeviceLiveToolsPing200Response}
     */
    getDeviceLiveToolsPingDevice_0(serial, id, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceLiveToolsPingDevice_0");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getDeviceLiveToolsPingDevice_0");
      }

      let pathParams = {
        'serial': serial,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDeviceLiveToolsPing200Response;
      return this.apiClient.callApi(
        '/devices/{serial}/liveTools/pingDevice/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceLiveToolsPing_0 operation.
     * @callback module:api/LiveToolsApi~getDeviceLiveToolsPing_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDeviceLiveToolsPing200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a ping job
     * Return a ping job. Latency unit in response is in milliseconds. Size is in bytes.
     * @param {String} serial 
     * @param {String} id 
     * @param {module:api/LiveToolsApi~getDeviceLiveToolsPing_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDeviceLiveToolsPing200Response}
     */
    getDeviceLiveToolsPing_0(serial, id, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceLiveToolsPing_0");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getDeviceLiveToolsPing_0");
      }

      let pathParams = {
        'serial': serial,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDeviceLiveToolsPing200Response;
      return this.apiClient.callApi(
        '/devices/{serial}/liveTools/ping/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rebootDevice_0 operation.
     * @callback module:api/LiveToolsApi~rebootDevice_0Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reboot a device
     * Reboot a device
     * @param {String} serial 
     * @param {module:api/LiveToolsApi~rebootDevice_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    rebootDevice_0(serial, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling rebootDevice_0");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/reboot', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
