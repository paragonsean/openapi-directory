/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkWirelessSsidIdentityPskRequest from '../model/CreateNetworkWirelessSsidIdentityPskRequest';
import GetNetworkWirelessSsidIdentityPsks200ResponseInner from '../model/GetNetworkWirelessSsidIdentityPsks200ResponseInner';
import UpdateNetworkWirelessSsidIdentityPskRequest from '../model/UpdateNetworkWirelessSsidIdentityPskRequest';

/**
* IdentityPsks service.
* @module api/IdentityPsksApi
* @version 1.32.0
*/
export default class IdentityPsksApi {

    /**
    * Constructs a new IdentityPsksApi. 
    * @alias module:api/IdentityPsksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkWirelessSsidIdentityPsk_2 operation.
     * @callback module:api/IdentityPsksApi~createNetworkWirelessSsidIdentityPsk_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Identity PSK
     * Create an Identity PSK
     * @param {String} networkId 
     * @param {String} number 
     * @param {module:model/CreateNetworkWirelessSsidIdentityPskRequest} createNetworkWirelessSsidIdentityPskRequest 
     * @param {module:api/IdentityPsksApi~createNetworkWirelessSsidIdentityPsk_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkWirelessSsidIdentityPsk_2(networkId, number, createNetworkWirelessSsidIdentityPskRequest, callback) {
      let postBody = createNetworkWirelessSsidIdentityPskRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling createNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'createNetworkWirelessSsidIdentityPskRequest' is set
      if (createNetworkWirelessSsidIdentityPskRequest === undefined || createNetworkWirelessSsidIdentityPskRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkWirelessSsidIdentityPskRequest' when calling createNetworkWirelessSsidIdentityPsk_2");
      }

      let pathParams = {
        'networkId': networkId,
        'number': number
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkWirelessSsidIdentityPsk_2 operation.
     * @callback module:api/IdentityPsksApi~deleteNetworkWirelessSsidIdentityPsk_2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an Identity PSK
     * Delete an Identity PSK
     * @param {String} networkId 
     * @param {String} number 
     * @param {String} identityPskId 
     * @param {module:api/IdentityPsksApi~deleteNetworkWirelessSsidIdentityPsk_2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkWirelessSsidIdentityPsk_2(networkId, number, identityPskId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling deleteNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'identityPskId' is set
      if (identityPskId === undefined || identityPskId === null) {
        throw new Error("Missing the required parameter 'identityPskId' when calling deleteNetworkWirelessSsidIdentityPsk_2");
      }

      let pathParams = {
        'networkId': networkId,
        'number': number,
        'identityPskId': identityPskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWirelessSsidIdentityPsk_2 operation.
     * @callback module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPsk_2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkWirelessSsidIdentityPsks200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return an Identity PSK
     * Return an Identity PSK
     * @param {String} networkId 
     * @param {String} number 
     * @param {String} identityPskId 
     * @param {module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPsk_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkWirelessSsidIdentityPsks200ResponseInner}
     */
    getNetworkWirelessSsidIdentityPsk_2(networkId, number, identityPskId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'identityPskId' is set
      if (identityPskId === undefined || identityPskId === null) {
        throw new Error("Missing the required parameter 'identityPskId' when calling getNetworkWirelessSsidIdentityPsk_2");
      }

      let pathParams = {
        'networkId': networkId,
        'number': number,
        'identityPskId': identityPskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetNetworkWirelessSsidIdentityPsks200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWirelessSsidIdentityPsks_2 operation.
     * @callback module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPsks_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkWirelessSsidIdentityPsks200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all Identity PSKs in a wireless network
     * List all Identity PSKs in a wireless network
     * @param {String} networkId 
     * @param {String} number 
     * @param {module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPsks_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkWirelessSsidIdentityPsks200ResponseInner>}
     */
    getNetworkWirelessSsidIdentityPsks_2(networkId, number, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessSsidIdentityPsks_2");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNetworkWirelessSsidIdentityPsks_2");
      }

      let pathParams = {
        'networkId': networkId,
        'number': number
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkWirelessSsidIdentityPsks200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkWirelessSsidIdentityPsk_2 operation.
     * @callback module:api/IdentityPsksApi~updateNetworkWirelessSsidIdentityPsk_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Identity PSK
     * Update an Identity PSK
     * @param {String} networkId 
     * @param {String} number 
     * @param {String} identityPskId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkWirelessSsidIdentityPskRequest} [updateNetworkWirelessSsidIdentityPskRequest] 
     * @param {module:api/IdentityPsksApi~updateNetworkWirelessSsidIdentityPsk_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkWirelessSsidIdentityPsk_2(networkId, number, identityPskId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkWirelessSsidIdentityPskRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling updateNetworkWirelessSsidIdentityPsk_2");
      }
      // verify the required parameter 'identityPskId' is set
      if (identityPskId === undefined || identityPskId === null) {
        throw new Error("Missing the required parameter 'identityPskId' when calling updateNetworkWirelessSsidIdentityPsk_2");
      }

      let pathParams = {
        'networkId': networkId,
        'number': number,
        'identityPskId': identityPskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
