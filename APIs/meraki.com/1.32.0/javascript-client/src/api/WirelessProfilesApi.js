/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkCameraWirelessProfileRequest from '../model/CreateNetworkCameraWirelessProfileRequest';
import UpdateDeviceCameraWirelessProfilesRequest from '../model/UpdateDeviceCameraWirelessProfilesRequest';
import UpdateNetworkCameraWirelessProfileRequest from '../model/UpdateNetworkCameraWirelessProfileRequest';

/**
* WirelessProfiles service.
* @module api/WirelessProfilesApi
* @version 1.32.0
*/
export default class WirelessProfilesApi {

    /**
    * Constructs a new WirelessProfilesApi. 
    * @alias module:api/WirelessProfilesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkCameraWirelessProfile_1 operation.
     * @callback module:api/WirelessProfilesApi~createNetworkCameraWirelessProfile_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new camera wireless profile for this network.
     * Creates a new camera wireless profile for this network.
     * @param {String} networkId 
     * @param {module:model/CreateNetworkCameraWirelessProfileRequest} createNetworkCameraWirelessProfileRequest 
     * @param {module:api/WirelessProfilesApi~createNetworkCameraWirelessProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkCameraWirelessProfile_1(networkId, createNetworkCameraWirelessProfileRequest, callback) {
      let postBody = createNetworkCameraWirelessProfileRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkCameraWirelessProfile_1");
      }
      // verify the required parameter 'createNetworkCameraWirelessProfileRequest' is set
      if (createNetworkCameraWirelessProfileRequest === undefined || createNetworkCameraWirelessProfileRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkCameraWirelessProfileRequest' when calling createNetworkCameraWirelessProfile_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/wirelessProfiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkCameraWirelessProfile_1 operation.
     * @callback module:api/WirelessProfilesApi~deleteNetworkCameraWirelessProfile_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an existing camera wireless profile for this network.
     * Delete an existing camera wireless profile for this network.
     * @param {String} networkId 
     * @param {String} wirelessProfileId 
     * @param {module:api/WirelessProfilesApi~deleteNetworkCameraWirelessProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkCameraWirelessProfile_1(networkId, wirelessProfileId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkCameraWirelessProfile_1");
      }
      // verify the required parameter 'wirelessProfileId' is set
      if (wirelessProfileId === undefined || wirelessProfileId === null) {
        throw new Error("Missing the required parameter 'wirelessProfileId' when calling deleteNetworkCameraWirelessProfile_1");
      }

      let pathParams = {
        'networkId': networkId,
        'wirelessProfileId': wirelessProfileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/wirelessProfiles/{wirelessProfileId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceCameraWirelessProfiles_1 operation.
     * @callback module:api/WirelessProfilesApi~getDeviceCameraWirelessProfiles_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns wireless profile assigned to the given camera
     * Returns wireless profile assigned to the given camera
     * @param {String} serial 
     * @param {module:api/WirelessProfilesApi~getDeviceCameraWirelessProfiles_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceCameraWirelessProfiles_1(serial, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceCameraWirelessProfiles_1");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/camera/wirelessProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCameraWirelessProfile_1 operation.
     * @callback module:api/WirelessProfilesApi~getNetworkCameraWirelessProfile_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a single camera wireless profile.
     * Retrieve a single camera wireless profile.
     * @param {String} networkId 
     * @param {String} wirelessProfileId 
     * @param {module:api/WirelessProfilesApi~getNetworkCameraWirelessProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkCameraWirelessProfile_1(networkId, wirelessProfileId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCameraWirelessProfile_1");
      }
      // verify the required parameter 'wirelessProfileId' is set
      if (wirelessProfileId === undefined || wirelessProfileId === null) {
        throw new Error("Missing the required parameter 'wirelessProfileId' when calling getNetworkCameraWirelessProfile_1");
      }

      let pathParams = {
        'networkId': networkId,
        'wirelessProfileId': wirelessProfileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/wirelessProfiles/{wirelessProfileId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCameraWirelessProfiles_1 operation.
     * @callback module:api/WirelessProfilesApi~getNetworkCameraWirelessProfiles_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the camera wireless profiles for this network.
     * List the camera wireless profiles for this network.
     * @param {String} networkId 
     * @param {module:api/WirelessProfilesApi~getNetworkCameraWirelessProfiles_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkCameraWirelessProfiles_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCameraWirelessProfiles_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/wirelessProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDeviceCameraWirelessProfiles_1 operation.
     * @callback module:api/WirelessProfilesApi~updateDeviceCameraWirelessProfiles_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign wireless profiles to the given camera
     * Assign wireless profiles to the given camera. Incremental updates are not supported, all profile assignment need to be supplied at once.
     * @param {String} serial 
     * @param {module:model/UpdateDeviceCameraWirelessProfilesRequest} updateDeviceCameraWirelessProfilesRequest 
     * @param {module:api/WirelessProfilesApi~updateDeviceCameraWirelessProfiles_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDeviceCameraWirelessProfiles_1(serial, updateDeviceCameraWirelessProfilesRequest, callback) {
      let postBody = updateDeviceCameraWirelessProfilesRequest;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling updateDeviceCameraWirelessProfiles_1");
      }
      // verify the required parameter 'updateDeviceCameraWirelessProfilesRequest' is set
      if (updateDeviceCameraWirelessProfilesRequest === undefined || updateDeviceCameraWirelessProfilesRequest === null) {
        throw new Error("Missing the required parameter 'updateDeviceCameraWirelessProfilesRequest' when calling updateDeviceCameraWirelessProfiles_1");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/camera/wirelessProfiles', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCameraWirelessProfile_1 operation.
     * @callback module:api/WirelessProfilesApi~updateNetworkCameraWirelessProfile_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing camera wireless profile in this network.
     * Update an existing camera wireless profile in this network.
     * @param {String} networkId 
     * @param {String} wirelessProfileId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCameraWirelessProfileRequest} [updateNetworkCameraWirelessProfileRequest] 
     * @param {module:api/WirelessProfilesApi~updateNetworkCameraWirelessProfile_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkCameraWirelessProfile_1(networkId, wirelessProfileId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkCameraWirelessProfileRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCameraWirelessProfile_1");
      }
      // verify the required parameter 'wirelessProfileId' is set
      if (wirelessProfileId === undefined || wirelessProfileId === null) {
        throw new Error("Missing the required parameter 'wirelessProfileId' when calling updateNetworkCameraWirelessProfile_1");
      }

      let pathParams = {
        'networkId': networkId,
        'wirelessProfileId': wirelessProfileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/wirelessProfiles/{wirelessProfileId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
