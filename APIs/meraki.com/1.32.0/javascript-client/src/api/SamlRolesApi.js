/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationSamlRoleRequest from '../model/CreateOrganizationSamlRoleRequest';
import UpdateOrganizationSamlRole200Response from '../model/UpdateOrganizationSamlRole200Response';
import UpdateOrganizationSamlRoleRequest from '../model/UpdateOrganizationSamlRoleRequest';

/**
* SamlRoles service.
* @module api/SamlRolesApi
* @version 1.32.0
*/
export default class SamlRolesApi {

    /**
    * Constructs a new SamlRolesApi. 
    * @alias module:api/SamlRolesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationSamlRole_1 operation.
     * @callback module:api/SamlRolesApi~createOrganizationSamlRole_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a SAML role
     * Create a SAML role
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationSamlRoleRequest} createOrganizationSamlRoleRequest 
     * @param {module:api/SamlRolesApi~createOrganizationSamlRole_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationSamlRole_1(organizationId, createOrganizationSamlRoleRequest, callback) {
      let postBody = createOrganizationSamlRoleRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationSamlRole_1");
      }
      // verify the required parameter 'createOrganizationSamlRoleRequest' is set
      if (createOrganizationSamlRoleRequest === undefined || createOrganizationSamlRoleRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationSamlRoleRequest' when calling createOrganizationSamlRole_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/samlRoles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationSamlRole_1 operation.
     * @callback module:api/SamlRolesApi~deleteOrganizationSamlRole_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a SAML role
     * Remove a SAML role
     * @param {String} organizationId 
     * @param {String} samlRoleId 
     * @param {module:api/SamlRolesApi~deleteOrganizationSamlRole_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationSamlRole_1(organizationId, samlRoleId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationSamlRole_1");
      }
      // verify the required parameter 'samlRoleId' is set
      if (samlRoleId === undefined || samlRoleId === null) {
        throw new Error("Missing the required parameter 'samlRoleId' when calling deleteOrganizationSamlRole_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'samlRoleId': samlRoleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/samlRoles/{samlRoleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationSamlRole_1 operation.
     * @callback module:api/SamlRolesApi~getOrganizationSamlRole_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a SAML role
     * Return a SAML role
     * @param {String} organizationId 
     * @param {String} samlRoleId 
     * @param {module:api/SamlRolesApi~getOrganizationSamlRole_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getOrganizationSamlRole_1(organizationId, samlRoleId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationSamlRole_1");
      }
      // verify the required parameter 'samlRoleId' is set
      if (samlRoleId === undefined || samlRoleId === null) {
        throw new Error("Missing the required parameter 'samlRoleId' when calling getOrganizationSamlRole_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'samlRoleId': samlRoleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/samlRoles/{samlRoleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationSamlRoles_1 operation.
     * @callback module:api/SamlRolesApi~getOrganizationSamlRoles_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the SAML roles for this organization
     * List the SAML roles for this organization
     * @param {String} organizationId 
     * @param {module:api/SamlRolesApi~getOrganizationSamlRoles_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationSamlRoles_1(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationSamlRoles_1");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/samlRoles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationSamlRole_1 operation.
     * @callback module:api/SamlRolesApi~updateOrganizationSamlRole_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateOrganizationSamlRole200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a SAML role
     * Update a SAML role
     * @param {String} organizationId 
     * @param {String} samlRoleId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationSamlRoleRequest} [updateOrganizationSamlRoleRequest] 
     * @param {module:api/SamlRolesApi~updateOrganizationSamlRole_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateOrganizationSamlRole200Response}
     */
    updateOrganizationSamlRole_1(organizationId, samlRoleId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationSamlRoleRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationSamlRole_1");
      }
      // verify the required parameter 'samlRoleId' is set
      if (samlRoleId === undefined || samlRoleId === null) {
        throw new Error("Missing the required parameter 'samlRoleId' when calling updateOrganizationSamlRole_1");
      }

      let pathParams = {
        'organizationId': organizationId,
        'samlRoleId': samlRoleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateOrganizationSamlRole200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/samlRoles/{samlRoleId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
