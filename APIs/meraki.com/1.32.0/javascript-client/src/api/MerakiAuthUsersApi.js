/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkMerakiAuthUserRequest from '../model/CreateNetworkMerakiAuthUserRequest';
import GetNetworkMerakiAuthUsers200ResponseInner from '../model/GetNetworkMerakiAuthUsers200ResponseInner';
import UpdateNetworkMerakiAuthUserRequest from '../model/UpdateNetworkMerakiAuthUserRequest';

/**
* MerakiAuthUsers service.
* @module api/MerakiAuthUsersApi
* @version 1.32.0
*/
export default class MerakiAuthUsersApi {

    /**
    * Constructs a new MerakiAuthUsersApi. 
    * @alias module:api/MerakiAuthUsersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkMerakiAuthUser_1 operation.
     * @callback module:api/MerakiAuthUsersApi~createNetworkMerakiAuthUser_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkMerakiAuthUsers200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)
     * Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)
     * @param {String} networkId 
     * @param {module:model/CreateNetworkMerakiAuthUserRequest} createNetworkMerakiAuthUserRequest 
     * @param {module:api/MerakiAuthUsersApi~createNetworkMerakiAuthUser_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkMerakiAuthUsers200ResponseInner}
     */
    createNetworkMerakiAuthUser_1(networkId, createNetworkMerakiAuthUserRequest, callback) {
      let postBody = createNetworkMerakiAuthUserRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkMerakiAuthUser_1");
      }
      // verify the required parameter 'createNetworkMerakiAuthUserRequest' is set
      if (createNetworkMerakiAuthUserRequest === undefined || createNetworkMerakiAuthUserRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkMerakiAuthUserRequest' when calling createNetworkMerakiAuthUser_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetNetworkMerakiAuthUsers200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/merakiAuthUsers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkMerakiAuthUser_1 operation.
     * @callback module:api/MerakiAuthUsersApi~deleteNetworkMerakiAuthUser_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deauthorize a user
     * Deauthorize a user. To reauthorize a user after deauthorizing them, POST to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN users can be deauthorized.)
     * @param {String} networkId 
     * @param {String} merakiAuthUserId 
     * @param {module:api/MerakiAuthUsersApi~deleteNetworkMerakiAuthUser_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkMerakiAuthUser_1(networkId, merakiAuthUserId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkMerakiAuthUser_1");
      }
      // verify the required parameter 'merakiAuthUserId' is set
      if (merakiAuthUserId === undefined || merakiAuthUserId === null) {
        throw new Error("Missing the required parameter 'merakiAuthUserId' when calling deleteNetworkMerakiAuthUser_1");
      }

      let pathParams = {
        'networkId': networkId,
        'merakiAuthUserId': merakiAuthUserId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkMerakiAuthUser_1 operation.
     * @callback module:api/MerakiAuthUsersApi~getNetworkMerakiAuthUser_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkMerakiAuthUsers200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the Meraki Auth splash guest, RADIUS, or client VPN user
     * Return the Meraki Auth splash guest, RADIUS, or client VPN user
     * @param {String} networkId 
     * @param {String} merakiAuthUserId 
     * @param {module:api/MerakiAuthUsersApi~getNetworkMerakiAuthUser_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkMerakiAuthUsers200ResponseInner}
     */
    getNetworkMerakiAuthUser_1(networkId, merakiAuthUserId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkMerakiAuthUser_1");
      }
      // verify the required parameter 'merakiAuthUserId' is set
      if (merakiAuthUserId === undefined || merakiAuthUserId === null) {
        throw new Error("Missing the required parameter 'merakiAuthUserId' when calling getNetworkMerakiAuthUser_1");
      }

      let pathParams = {
        'networkId': networkId,
        'merakiAuthUserId': merakiAuthUserId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetNetworkMerakiAuthUsers200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkMerakiAuthUsers_1 operation.
     * @callback module:api/MerakiAuthUsersApi~getNetworkMerakiAuthUsers_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkMerakiAuthUsers200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)
     * List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)
     * @param {String} networkId 
     * @param {module:api/MerakiAuthUsersApi~getNetworkMerakiAuthUsers_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkMerakiAuthUsers200ResponseInner>}
     */
    getNetworkMerakiAuthUsers_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkMerakiAuthUsers_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkMerakiAuthUsers200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/merakiAuthUsers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkMerakiAuthUser_1 operation.
     * @callback module:api/MerakiAuthUsersApi~updateNetworkMerakiAuthUser_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkMerakiAuthUsers200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)
     * Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)
     * @param {String} networkId 
     * @param {String} merakiAuthUserId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkMerakiAuthUserRequest} [updateNetworkMerakiAuthUserRequest] 
     * @param {module:api/MerakiAuthUsersApi~updateNetworkMerakiAuthUser_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkMerakiAuthUsers200ResponseInner}
     */
    updateNetworkMerakiAuthUser_1(networkId, merakiAuthUserId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkMerakiAuthUserRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkMerakiAuthUser_1");
      }
      // verify the required parameter 'merakiAuthUserId' is set
      if (merakiAuthUserId === undefined || merakiAuthUserId === null) {
        throw new Error("Missing the required parameter 'merakiAuthUserId' when calling updateNetworkMerakiAuthUser_1");
      }

      let pathParams = {
        'networkId': networkId,
        'merakiAuthUserId': merakiAuthUserId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetNetworkMerakiAuthUsers200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
