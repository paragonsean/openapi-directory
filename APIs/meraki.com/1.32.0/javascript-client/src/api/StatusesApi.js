/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetDeviceSwitchPortsStatuses200ResponseInner from '../model/GetDeviceSwitchPortsStatuses200ResponseInner';
import GetOrganizationCellularGatewayUplinkStatuses200ResponseInner from '../model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInner';
import GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner from '../model/GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner';
import GetOrganizationDevicesStatuses200Response from '../model/GetOrganizationDevicesStatuses200Response';
import GetOrganizationDevicesStatusesOverview200Response from '../model/GetOrganizationDevicesStatusesOverview200Response';
import GetOrganizationUplinksStatuses200ResponseInner from '../model/GetOrganizationUplinksStatuses200ResponseInner';
import GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner from '../model/GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner';
import UpdateOrganizationCameraOnboardingStatusesRequest from '../model/UpdateOrganizationCameraOnboardingStatusesRequest';

/**
* Statuses service.
* @module api/StatusesApi
* @version 1.32.0
*/
export default class StatusesApi {

    /**
    * Constructs a new StatusesApi. 
    * @alias module:api/StatusesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDeviceSwitchPortsStatusesPackets_2 operation.
     * @callback module:api/StatusesApi~getDeviceSwitchPortsStatusesPackets_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the packet counters for all the ports of a switch
     * Return the packet counters for all the ports of a switch
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.
     * @param {module:api/StatusesApi~getDeviceSwitchPortsStatusesPackets_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getDeviceSwitchPortsStatusesPackets_2(serial, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceSwitchPortsStatusesPackets_2");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
        't0': opts['t0'],
        'timespan': opts['timespan']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/devices/{serial}/switch/ports/statuses/packets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceSwitchPortsStatuses_2 operation.
     * @callback module:api/StatusesApi~getDeviceSwitchPortsStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetDeviceSwitchPortsStatuses200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the status for all the ports of a switch
     * Return the status for all the ports of a switch
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
     * @param {module:api/StatusesApi~getDeviceSwitchPortsStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetDeviceSwitchPortsStatuses200ResponseInner>}
     */
    getDeviceSwitchPortsStatuses_2(serial, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceSwitchPortsStatuses_2");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
        't0': opts['t0'],
        'timespan': opts['timespan']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetDeviceSwitchPortsStatuses200ResponseInner];
      return this.apiClient.callApi(
        '/devices/{serial}/switch/ports/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationApplianceUplinkStatuses_2 operation.
     * @callback module:api/StatusesApi~getOrganizationApplianceUplinkStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the uplink status of every Meraki MX and Z series appliances in the organization
     * List the uplink status of every Meraki MX and Z series appliances in the organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] A list of network IDs. The returned devices will be filtered to only include these networks.
     * @param {Array.<String>} [serials] A list of serial numbers. The returned devices will be filtered to only include these serials.
     * @param {Array.<String>} [iccids] A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
     * @param {module:api/StatusesApi~getOrganizationApplianceUplinkStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationApplianceUplinkStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationApplianceUplinkStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'iccids': this.apiClient.buildCollectionParam(opts['iccids'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/appliance/uplink/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationApplianceVpnStatuses_2 operation.
     * @callback module:api/StatusesApi~getOrganizationApplianceVpnStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show VPN status for networks in an organization
     * Show VPN status for networks in an organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
     * @param {module:api/StatusesApi~getOrganizationApplianceVpnStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationApplianceVpnStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationApplianceVpnStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/appliance/vpn/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationCameraOnboardingStatuses_2 operation.
     * @callback module:api/StatusesApi~getOrganizationCameraOnboardingStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch onboarding status of cameras
     * Fetch onboarding status of cameras
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [serials] A list of serial numbers. The returned cameras will be filtered to only include these serials.
     * @param {Array.<String>} [networkIds] A list of network IDs. The returned cameras will be filtered to only include these networks.
     * @param {module:api/StatusesApi~getOrganizationCameraOnboardingStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationCameraOnboardingStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationCameraOnboardingStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/camera/onboarding/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationCellularGatewayUplinkStatuses_2 operation.
     * @callback module:api/StatusesApi~getOrganizationCellularGatewayUplinkStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the uplink status of every Meraki MG cellular gateway in the organization
     * List the uplink status of every Meraki MG cellular gateway in the organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] A list of network IDs. The returned devices will be filtered to only include these networks.
     * @param {Array.<String>} [serials] A list of serial numbers. The returned devices will be filtered to only include these serials.
     * @param {Array.<String>} [iccids] A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
     * @param {module:api/StatusesApi~getOrganizationCellularGatewayUplinkStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInner>}
     */
    getOrganizationCellularGatewayUplinkStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationCellularGatewayUplinkStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'iccids': this.apiClient.buildCollectionParam(opts['iccids'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationCellularGatewayUplinkStatuses200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/cellularGateway/uplink/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationDevicesPowerModulesStatusesByDevice_3 operation.
     * @callback module:api/StatusesApi~getOrganizationDevicesPowerModulesStatusesByDevice_3Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the power status information for devices in an organization
     * List the power status information for devices in an organization. The data returned by this endpoint is updated every 5 minutes.
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
     * @param {Array.<String>} [productTypes] Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
     * @param {Array.<String>} [serials] Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
     * @param {Array.<String>} [tags] An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
     * @param {module:model/String} [tagsFilterType] An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     * @param {module:api/StatusesApi~getOrganizationDevicesPowerModulesStatusesByDevice_3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner>}
     */
    getOrganizationDevicesPowerModulesStatusesByDevice_3(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationDevicesPowerModulesStatusesByDevice_3");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'productTypes': this.apiClient.buildCollectionParam(opts['productTypes'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'tagsFilterType': opts['tagsFilterType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationDevicesPowerModulesStatusesByDevice200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/devices/powerModules/statuses/byDevice', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationDevicesStatusesOverview_2 operation.
     * @callback module:api/StatusesApi~getOrganizationDevicesStatusesOverview_2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationDevicesStatusesOverview200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return an overview of current device statuses
     * Return an overview of current device statuses
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [productTypes] An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     * @param {Array.<String>} [networkIds] An optional parameter to filter device statuses by network.
     * @param {module:api/StatusesApi~getOrganizationDevicesStatusesOverview_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationDevicesStatusesOverview200Response}
     */
    getOrganizationDevicesStatusesOverview_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationDevicesStatusesOverview_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'productTypes': this.apiClient.buildCollectionParam(opts['productTypes'], 'csv'),
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationDevicesStatusesOverview200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/devices/statuses/overview', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationDevicesStatuses_2 operation.
     * @callback module:api/StatusesApi~getOrganizationDevicesStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrganizationDevicesStatuses200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the status of every Meraki device in the organization
     * List the status of every Meraki device in the organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] Optional parameter to filter devices by network ids.
     * @param {Array.<String>} [serials] Optional parameter to filter devices by serials.
     * @param {Array.<module:model/String>} [statuses] Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"].
     * @param {Array.<module:model/String>} [productTypes] An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     * @param {Array.<String>} [models] Optional parameter to filter devices by models.
     * @param {Array.<String>} [tags] An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
     * @param {module:model/String} [tagsFilterType] An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     * @param {module:api/StatusesApi~getOrganizationDevicesStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrganizationDevicesStatuses200Response}
     */
    getOrganizationDevicesStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationDevicesStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'statuses': this.apiClient.buildCollectionParam(opts['statuses'], 'csv'),
        'productTypes': this.apiClient.buildCollectionParam(opts['productTypes'], 'csv'),
        'models': this.apiClient.buildCollectionParam(opts['models'], 'csv'),
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'tagsFilterType': opts['tagsFilterType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrganizationDevicesStatuses200Response;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/devices/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationUplinksStatuses_2 operation.
     * @callback module:api/StatusesApi~getOrganizationUplinksStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationUplinksStatuses200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the uplink status of every Meraki MX, MG and Z series devices in the organization
     * List the uplink status of every Meraki MX, MG and Z series devices in the organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] A list of network IDs. The returned devices will be filtered to only include these networks.
     * @param {Array.<String>} [serials] A list of serial numbers. The returned devices will be filtered to only include these serials.
     * @param {Array.<String>} [iccids] A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
     * @param {module:api/StatusesApi~getOrganizationUplinksStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationUplinksStatuses200ResponseInner>}
     */
    getOrganizationUplinksStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationUplinksStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv'),
        'serials': this.apiClient.buildCollectionParam(opts['serials'], 'csv'),
        'iccids': this.apiClient.buildCollectionParam(opts['iccids'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationUplinksStatuses200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/uplinks/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationWirelessDevicesEthernetStatuses_3 operation.
     * @callback module:api/StatusesApi~getOrganizationWirelessDevicesEthernetStatuses_3Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint to see power status for wireless devices
     * Endpoint to see power status for wireless devices
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Array.<String>} [networkIds] A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
     * @param {module:api/StatusesApi~getOrganizationWirelessDevicesEthernetStatuses_3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner>}
     */
    getOrganizationWirelessDevicesEthernetStatuses_3(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationWirelessDevicesEthernetStatuses_3");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'networkIds': this.apiClient.buildCollectionParam(opts['networkIds'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/wireless/devices/ethernet/statuses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationCameraOnboardingStatuses_2 operation.
     * @callback module:api/StatusesApi~updateOrganizationCameraOnboardingStatuses_2Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Notify that credential handoff to camera has completed
     * Notify that credential handoff to camera has completed
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationCameraOnboardingStatusesRequest} [updateOrganizationCameraOnboardingStatusesRequest] 
     * @param {module:api/StatusesApi~updateOrganizationCameraOnboardingStatuses_2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationCameraOnboardingStatuses_2(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationCameraOnboardingStatusesRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationCameraOnboardingStatuses_2");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/camera/onboarding/statuses', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
