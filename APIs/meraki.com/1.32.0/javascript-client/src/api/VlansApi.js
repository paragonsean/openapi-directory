/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkApplianceVlan201Response from '../model/CreateNetworkApplianceVlan201Response';
import CreateNetworkApplianceVlanRequest from '../model/CreateNetworkApplianceVlanRequest';
import GetNetworkApplianceVlans200ResponseInner from '../model/GetNetworkApplianceVlans200ResponseInner';
import UpdateNetworkApplianceVlanRequest from '../model/UpdateNetworkApplianceVlanRequest';
import UpdateNetworkApplianceVlansSettingsRequest from '../model/UpdateNetworkApplianceVlansSettingsRequest';

/**
* Vlans service.
* @module api/VlansApi
* @version 1.32.0
*/
export default class VlansApi {

    /**
    * Constructs a new VlansApi. 
    * @alias module:api/VlansApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkApplianceVlan_1 operation.
     * @callback module:api/VlansApi~createNetworkApplianceVlan_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateNetworkApplianceVlan201Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a VLAN
     * Add a VLAN
     * @param {String} networkId 
     * @param {module:model/CreateNetworkApplianceVlanRequest} createNetworkApplianceVlanRequest 
     * @param {module:api/VlansApi~createNetworkApplianceVlan_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateNetworkApplianceVlan201Response}
     */
    createNetworkApplianceVlan_1(networkId, createNetworkApplianceVlanRequest, callback) {
      let postBody = createNetworkApplianceVlanRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkApplianceVlan_1");
      }
      // verify the required parameter 'createNetworkApplianceVlanRequest' is set
      if (createNetworkApplianceVlanRequest === undefined || createNetworkApplianceVlanRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkApplianceVlanRequest' when calling createNetworkApplianceVlan_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateNetworkApplianceVlan201Response;
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkApplianceVlan_1 operation.
     * @callback module:api/VlansApi~deleteNetworkApplianceVlan_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a VLAN from a network
     * Delete a VLAN from a network
     * @param {String} networkId 
     * @param {String} vlanId 
     * @param {module:api/VlansApi~deleteNetworkApplianceVlan_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkApplianceVlan_1(networkId, vlanId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkApplianceVlan_1");
      }
      // verify the required parameter 'vlanId' is set
      if (vlanId === undefined || vlanId === null) {
        throw new Error("Missing the required parameter 'vlanId' when calling deleteNetworkApplianceVlan_1");
      }

      let pathParams = {
        'networkId': networkId,
        'vlanId': vlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans/{vlanId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkApplianceVlan_1 operation.
     * @callback module:api/VlansApi~getNetworkApplianceVlan_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkApplianceVlans200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a VLAN
     * Return a VLAN
     * @param {String} networkId 
     * @param {String} vlanId 
     * @param {module:api/VlansApi~getNetworkApplianceVlan_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkApplianceVlans200ResponseInner}
     */
    getNetworkApplianceVlan_1(networkId, vlanId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkApplianceVlan_1");
      }
      // verify the required parameter 'vlanId' is set
      if (vlanId === undefined || vlanId === null) {
        throw new Error("Missing the required parameter 'vlanId' when calling getNetworkApplianceVlan_1");
      }

      let pathParams = {
        'networkId': networkId,
        'vlanId': vlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetNetworkApplianceVlans200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans/{vlanId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkApplianceVlansSettings_1 operation.
     * @callback module:api/VlansApi~getNetworkApplianceVlansSettings_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the enabled status of VLANs for the network
     * Returns the enabled status of VLANs for the network
     * @param {String} networkId 
     * @param {module:api/VlansApi~getNetworkApplianceVlansSettings_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkApplianceVlansSettings_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkApplianceVlansSettings_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkApplianceVlans_1 operation.
     * @callback module:api/VlansApi~getNetworkApplianceVlans_1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetNetworkApplianceVlans200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the VLANs for an MX network
     * List the VLANs for an MX network
     * @param {String} networkId 
     * @param {module:api/VlansApi~getNetworkApplianceVlans_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetNetworkApplianceVlans200ResponseInner>}
     */
    getNetworkApplianceVlans_1(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkApplianceVlans_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetNetworkApplianceVlans200ResponseInner];
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkApplianceVlan_1 operation.
     * @callback module:api/VlansApi~updateNetworkApplianceVlan_1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNetworkApplianceVlans200ResponseInner} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a VLAN
     * Update a VLAN
     * @param {String} networkId 
     * @param {String} vlanId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkApplianceVlanRequest} [updateNetworkApplianceVlanRequest] 
     * @param {module:api/VlansApi~updateNetworkApplianceVlan_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNetworkApplianceVlans200ResponseInner}
     */
    updateNetworkApplianceVlan_1(networkId, vlanId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkApplianceVlanRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkApplianceVlan_1");
      }
      // verify the required parameter 'vlanId' is set
      if (vlanId === undefined || vlanId === null) {
        throw new Error("Missing the required parameter 'vlanId' when calling updateNetworkApplianceVlan_1");
      }

      let pathParams = {
        'networkId': networkId,
        'vlanId': vlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetNetworkApplianceVlans200ResponseInner;
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans/{vlanId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkApplianceVlansSettings_1 operation.
     * @callback module:api/VlansApi~updateNetworkApplianceVlansSettings_1Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable/Disable VLANs for the given network
     * Enable/Disable VLANs for the given network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkApplianceVlansSettingsRequest} [updateNetworkApplianceVlansSettingsRequest] 
     * @param {module:api/VlansApi~updateNetworkApplianceVlansSettings_1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkApplianceVlansSettings_1(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkApplianceVlansSettingsRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkApplianceVlansSettings_1");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/appliance/vlans/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
