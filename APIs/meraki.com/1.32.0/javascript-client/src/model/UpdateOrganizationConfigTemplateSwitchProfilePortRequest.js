/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetDeviceSwitchPorts200ResponseInnerProfile from './GetDeviceSwitchPorts200ResponseInnerProfile';

/**
 * The UpdateOrganizationConfigTemplateSwitchProfilePortRequest model module.
 * @module model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest
 * @version 1.32.0
 */
class UpdateOrganizationConfigTemplateSwitchProfilePortRequest {
    /**
     * Constructs a new <code>UpdateOrganizationConfigTemplateSwitchProfilePortRequest</code>.
     * @alias module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest
     */
    constructor() { 
        
        UpdateOrganizationConfigTemplateSwitchProfilePortRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateOrganizationConfigTemplateSwitchProfilePortRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest} obj Optional instance to populate.
     * @return {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest} The populated <code>UpdateOrganizationConfigTemplateSwitchProfilePortRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOrganizationConfigTemplateSwitchProfilePortRequest();

            if (data.hasOwnProperty('accessPolicyNumber')) {
                obj['accessPolicyNumber'] = ApiClient.convertToType(data['accessPolicyNumber'], 'Number');
            }
            if (data.hasOwnProperty('accessPolicyType')) {
                obj['accessPolicyType'] = ApiClient.convertToType(data['accessPolicyType'], 'String');
            }
            if (data.hasOwnProperty('allowedVlans')) {
                obj['allowedVlans'] = ApiClient.convertToType(data['allowedVlans'], 'String');
            }
            if (data.hasOwnProperty('daiTrusted')) {
                obj['daiTrusted'] = ApiClient.convertToType(data['daiTrusted'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('flexibleStackingEnabled')) {
                obj['flexibleStackingEnabled'] = ApiClient.convertToType(data['flexibleStackingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('isolationEnabled')) {
                obj['isolationEnabled'] = ApiClient.convertToType(data['isolationEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('linkNegotiation')) {
                obj['linkNegotiation'] = ApiClient.convertToType(data['linkNegotiation'], 'String');
            }
            if (data.hasOwnProperty('macAllowList')) {
                obj['macAllowList'] = ApiClient.convertToType(data['macAllowList'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('poeEnabled')) {
                obj['poeEnabled'] = ApiClient.convertToType(data['poeEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('portScheduleId')) {
                obj['portScheduleId'] = ApiClient.convertToType(data['portScheduleId'], 'String');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = GetDeviceSwitchPorts200ResponseInnerProfile.constructFromObject(data['profile']);
            }
            if (data.hasOwnProperty('rstpEnabled')) {
                obj['rstpEnabled'] = ApiClient.convertToType(data['rstpEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('stickyMacAllowList')) {
                obj['stickyMacAllowList'] = ApiClient.convertToType(data['stickyMacAllowList'], ['String']);
            }
            if (data.hasOwnProperty('stickyMacAllowListLimit')) {
                obj['stickyMacAllowListLimit'] = ApiClient.convertToType(data['stickyMacAllowListLimit'], 'Number');
            }
            if (data.hasOwnProperty('stormControlEnabled')) {
                obj['stormControlEnabled'] = ApiClient.convertToType(data['stormControlEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('stpGuard')) {
                obj['stpGuard'] = ApiClient.convertToType(data['stpGuard'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('udld')) {
                obj['udld'] = ApiClient.convertToType(data['udld'], 'String');
            }
            if (data.hasOwnProperty('vlan')) {
                obj['vlan'] = ApiClient.convertToType(data['vlan'], 'Number');
            }
            if (data.hasOwnProperty('voiceVlan')) {
                obj['voiceVlan'] = ApiClient.convertToType(data['voiceVlan'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOrganizationConfigTemplateSwitchProfilePortRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOrganizationConfigTemplateSwitchProfilePortRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessPolicyType'] && !(typeof data['accessPolicyType'] === 'string' || data['accessPolicyType'] instanceof String)) {
            throw new Error("Expected the field `accessPolicyType` to be a primitive type in the JSON string but got " + data['accessPolicyType']);
        }
        // ensure the json data is a string
        if (data['allowedVlans'] && !(typeof data['allowedVlans'] === 'string' || data['allowedVlans'] instanceof String)) {
            throw new Error("Expected the field `allowedVlans` to be a primitive type in the JSON string but got " + data['allowedVlans']);
        }
        // ensure the json data is a string
        if (data['linkNegotiation'] && !(typeof data['linkNegotiation'] === 'string' || data['linkNegotiation'] instanceof String)) {
            throw new Error("Expected the field `linkNegotiation` to be a primitive type in the JSON string but got " + data['linkNegotiation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['macAllowList'])) {
            throw new Error("Expected the field `macAllowList` to be an array in the JSON data but got " + data['macAllowList']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['portScheduleId'] && !(typeof data['portScheduleId'] === 'string' || data['portScheduleId'] instanceof String)) {
            throw new Error("Expected the field `portScheduleId` to be a primitive type in the JSON string but got " + data['portScheduleId']);
        }
        // validate the optional field `profile`
        if (data['profile']) { // data not null
          GetDeviceSwitchPorts200ResponseInnerProfile.validateJSON(data['profile']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stickyMacAllowList'])) {
            throw new Error("Expected the field `stickyMacAllowList` to be an array in the JSON data but got " + data['stickyMacAllowList']);
        }
        // ensure the json data is a string
        if (data['stpGuard'] && !(typeof data['stpGuard'] === 'string' || data['stpGuard'] instanceof String)) {
            throw new Error("Expected the field `stpGuard` to be a primitive type in the JSON string but got " + data['stpGuard']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['udld'] && !(typeof data['udld'] === 'string' || data['udld'] instanceof String)) {
            throw new Error("Expected the field `udld` to be a primitive type in the JSON string but got " + data['udld']);
        }

        return true;
    }


}



/**
 * The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
 * @member {Number} accessPolicyNumber
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['accessPolicyNumber'] = undefined;

/**
 * The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
 * @member {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest.AccessPolicyTypeEnum} accessPolicyType
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['accessPolicyType'] = undefined;

/**
 * The VLANs allowed on the switch profile port. Only applicable to trunk ports.
 * @member {String} allowedVlans
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['allowedVlans'] = undefined;

/**
 * If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
 * @member {Boolean} daiTrusted
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['daiTrusted'] = undefined;

/**
 * The status of the switch profile port.
 * @member {Boolean} enabled
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['enabled'] = undefined;

/**
 * For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
 * @member {Boolean} flexibleStackingEnabled
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['flexibleStackingEnabled'] = undefined;

/**
 * The isolation status of the switch profile port.
 * @member {Boolean} isolationEnabled
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['isolationEnabled'] = undefined;

/**
 * The link speed for the switch profile port.
 * @member {String} linkNegotiation
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['linkNegotiation'] = undefined;

/**
 * Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
 * @member {Array.<String>} macAllowList
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['macAllowList'] = undefined;

/**
 * The name of the switch profile port.
 * @member {String} name
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['name'] = undefined;

/**
 * The PoE status of the switch profile port.
 * @member {Boolean} poeEnabled
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['poeEnabled'] = undefined;

/**
 * The ID of the port schedule. A value of null will clear the port schedule.
 * @member {String} portScheduleId
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['portScheduleId'] = undefined;

/**
 * @member {module:model/GetDeviceSwitchPorts200ResponseInnerProfile} profile
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['profile'] = undefined;

/**
 * The rapid spanning tree protocol status.
 * @member {Boolean} rstpEnabled
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['rstpEnabled'] = undefined;

/**
 * The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
 * @member {Array.<String>} stickyMacAllowList
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['stickyMacAllowList'] = undefined;

/**
 * The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
 * @member {Number} stickyMacAllowListLimit
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['stickyMacAllowListLimit'] = undefined;

/**
 * The storm control status of the switch profile port.
 * @member {Boolean} stormControlEnabled
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['stormControlEnabled'] = undefined;

/**
 * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
 * @member {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest.StpGuardEnum} stpGuard
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['stpGuard'] = undefined;

/**
 * The list of tags of the switch profile port.
 * @member {Array.<String>} tags
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['tags'] = undefined;

/**
 * The type of the switch profile port ('trunk' or 'access').
 * @member {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest.TypeEnum} type
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['type'] = undefined;

/**
 * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
 * @member {module:model/UpdateOrganizationConfigTemplateSwitchProfilePortRequest.UdldEnum} udld
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['udld'] = undefined;

/**
 * The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
 * @member {Number} vlan
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['vlan'] = undefined;

/**
 * The voice VLAN of the switch profile port. Only applicable to access ports.
 * @member {Number} voiceVlan
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest.prototype['voiceVlan'] = undefined;





/**
 * Allowed values for the <code>accessPolicyType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest['AccessPolicyTypeEnum'] = {

    /**
     * value: "Custom access policy"
     * @const
     */
    "Custom access policy": "Custom access policy",

    /**
     * value: "MAC allow list"
     * @const
     */
    "MAC allow list": "MAC allow list",

    /**
     * value: "Open"
     * @const
     */
    "Open": "Open",

    /**
     * value: "Sticky MAC allow list"
     * @const
     */
    "Sticky MAC allow list": "Sticky MAC allow list"
};


/**
 * Allowed values for the <code>stpGuard</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest['StpGuardEnum'] = {

    /**
     * value: "bpdu guard"
     * @const
     */
    "bpdu guard": "bpdu guard",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "loop guard"
     * @const
     */
    "loop guard": "loop guard",

    /**
     * value: "root guard"
     * @const
     */
    "root guard": "root guard"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest['TypeEnum'] = {

    /**
     * value: "access"
     * @const
     */
    "access": "access",

    /**
     * value: "trunk"
     * @const
     */
    "trunk": "trunk"
};


/**
 * Allowed values for the <code>udld</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOrganizationConfigTemplateSwitchProfilePortRequest['UdldEnum'] = {

    /**
     * value: "Alert only"
     * @const
     */
    "Alert only": "Alert only",

    /**
     * value: "Enforce"
     * @const
     */
    "Enforce": "Enforce"
};



export default UpdateOrganizationConfigTemplateSwitchProfilePortRequest;

