/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateDeviceCameraQualityAndRetentionRequest model module.
 * @module model/UpdateDeviceCameraQualityAndRetentionRequest
 * @version 1.32.0
 */
class UpdateDeviceCameraQualityAndRetentionRequest {
    /**
     * Constructs a new <code>UpdateDeviceCameraQualityAndRetentionRequest</code>.
     * @alias module:model/UpdateDeviceCameraQualityAndRetentionRequest
     */
    constructor() { 
        
        UpdateDeviceCameraQualityAndRetentionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateDeviceCameraQualityAndRetentionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDeviceCameraQualityAndRetentionRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDeviceCameraQualityAndRetentionRequest} The populated <code>UpdateDeviceCameraQualityAndRetentionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDeviceCameraQualityAndRetentionRequest();

            if (data.hasOwnProperty('audioRecordingEnabled')) {
                obj['audioRecordingEnabled'] = ApiClient.convertToType(data['audioRecordingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('motionBasedRetentionEnabled')) {
                obj['motionBasedRetentionEnabled'] = ApiClient.convertToType(data['motionBasedRetentionEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('motionDetectorVersion')) {
                obj['motionDetectorVersion'] = ApiClient.convertToType(data['motionDetectorVersion'], 'Number');
            }
            if (data.hasOwnProperty('profileId')) {
                obj['profileId'] = ApiClient.convertToType(data['profileId'], 'String');
            }
            if (data.hasOwnProperty('quality')) {
                obj['quality'] = ApiClient.convertToType(data['quality'], 'String');
            }
            if (data.hasOwnProperty('resolution')) {
                obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
            }
            if (data.hasOwnProperty('restrictedBandwidthModeEnabled')) {
                obj['restrictedBandwidthModeEnabled'] = ApiClient.convertToType(data['restrictedBandwidthModeEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDeviceCameraQualityAndRetentionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDeviceCameraQualityAndRetentionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['profileId'] && !(typeof data['profileId'] === 'string' || data['profileId'] instanceof String)) {
            throw new Error("Expected the field `profileId` to be a primitive type in the JSON string but got " + data['profileId']);
        }
        // ensure the json data is a string
        if (data['quality'] && !(typeof data['quality'] === 'string' || data['quality'] instanceof String)) {
            throw new Error("Expected the field `quality` to be a primitive type in the JSON string but got " + data['quality']);
        }
        // ensure the json data is a string
        if (data['resolution'] && !(typeof data['resolution'] === 'string' || data['resolution'] instanceof String)) {
            throw new Error("Expected the field `resolution` to be a primitive type in the JSON string but got " + data['resolution']);
        }

        return true;
    }


}



/**
 * Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
 * @member {Boolean} audioRecordingEnabled
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['audioRecordingEnabled'] = undefined;

/**
 * Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
 * @member {Boolean} motionBasedRetentionEnabled
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['motionBasedRetentionEnabled'] = undefined;

/**
 * The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
 * @member {module:model/UpdateDeviceCameraQualityAndRetentionRequest.MotionDetectorVersionEnum} motionDetectorVersion
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['motionDetectorVersion'] = undefined;

/**
 * The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
 * @member {String} profileId
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['profileId'] = undefined;

/**
 * Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
 * @member {module:model/UpdateDeviceCameraQualityAndRetentionRequest.QualityEnum} quality
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['quality'] = undefined;

/**
 * Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2058x2058', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
 * @member {module:model/UpdateDeviceCameraQualityAndRetentionRequest.ResolutionEnum} resolution
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['resolution'] = undefined;

/**
 * Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
 * @member {Boolean} restrictedBandwidthModeEnabled
 */
UpdateDeviceCameraQualityAndRetentionRequest.prototype['restrictedBandwidthModeEnabled'] = undefined;





/**
 * Allowed values for the <code>motionDetectorVersion</code> property.
 * @enum {Number}
 * @readonly
 */
UpdateDeviceCameraQualityAndRetentionRequest['MotionDetectorVersionEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};


/**
 * Allowed values for the <code>quality</code> property.
 * @enum {String}
 * @readonly
 */
UpdateDeviceCameraQualityAndRetentionRequest['QualityEnum'] = {

    /**
     * value: "Enhanced"
     * @const
     */
    "Enhanced": "Enhanced",

    /**
     * value: "High"
     * @const
     */
    "High": "High",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard"
};


/**
 * Allowed values for the <code>resolution</code> property.
 * @enum {String}
 * @readonly
 */
UpdateDeviceCameraQualityAndRetentionRequest['ResolutionEnum'] = {

    /**
     * value: "1080x1080"
     * @const
     */
    "1080x1080": "1080x1080",

    /**
     * value: "1280x720"
     * @const
     */
    "1280x720": "1280x720",

    /**
     * value: "1920x1080"
     * @const
     */
    "1920x1080": "1920x1080",

    /**
     * value: "2058x2058"
     * @const
     */
    "2058x2058": "2058x2058",

    /**
     * value: "2112x2112"
     * @const
     */
    "2112x2112": "2112x2112",

    /**
     * value: "2688x1512"
     * @const
     */
    "2688x1512": "2688x1512",

    /**
     * value: "2880x2880"
     * @const
     */
    "2880x2880": "2880x2880",

    /**
     * value: "3840x2160"
     * @const
     */
    "3840x2160": "3840x2160"
};



export default UpdateDeviceCameraQualityAndRetentionRequest;

