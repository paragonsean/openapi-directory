/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner from './GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner';
import GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp from './GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp';

/**
 * The GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner model module.
 * @module model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
 * @version 1.32.0
 */
class GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner {
    /**
     * Constructs a new <code>GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner</code>.
     * @alias module:model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
     */
    constructor() { 
        
        GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner} obj Optional instance to populate.
     * @return {module:model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner} The populated <code>GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner();

            if (data.hasOwnProperty('clients')) {
                obj['clients'] = ApiClient.convertToType(data['clients'], [GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner]);
            }
            if (data.hasOwnProperty('lldp')) {
                obj['lldp'] = GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp.constructFromObject(data['lldp']);
            }
            if (data.hasOwnProperty('mac')) {
                obj['mac'] = ApiClient.convertToType(data['mac'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('serial')) {
                obj['serial'] = ApiClient.convertToType(data['serial'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner</code>.
     */
    static validateJSON(data) {
        if (data['clients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clients'])) {
                throw new Error("Expected the field `clients` to be an array in the JSON data but got " + data['clients']);
            }
            // validate the optional field `clients` (array)
            for (const item of data['clients']) {
                GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner.validateJSON(item);
            };
        }
        // validate the optional field `lldp`
        if (data['lldp']) { // data not null
          GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp.validateJSON(data['lldp']);
        }
        // ensure the json data is a string
        if (data['mac'] && !(typeof data['mac'] === 'string' || data['mac'] instanceof String)) {
            throw new Error("Expected the field `mac` to be a primitive type in the JSON string but got " + data['mac']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['productType'] && !(typeof data['productType'] === 'string' || data['productType'] instanceof String)) {
            throw new Error("Expected the field `productType` to be a primitive type in the JSON string but got " + data['productType']);
        }
        // ensure the json data is a string
        if (data['serial'] && !(typeof data['serial'] === 'string' || data['serial'] instanceof String)) {
            throw new Error("Expected the field `serial` to be a primitive type in the JSON string but got " + data['serial']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Clients related to the device
 * @member {Array.<module:model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner>} clients
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['clients'] = undefined;

/**
 * @member {module:model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp} lldp
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['lldp'] = undefined;

/**
 * The mac address of the device
 * @member {String} mac
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['mac'] = undefined;

/**
 * Name of the device
 * @member {String} name
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['name'] = undefined;

/**
 * Product type of the device
 * @member {String} productType
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['productType'] = undefined;

/**
 * Serial number of the device
 * @member {String} serial
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['serial'] = undefined;

/**
 * URL to the device
 * @member {String} url
 */
GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.prototype['url'] = undefined;






export default GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner;

