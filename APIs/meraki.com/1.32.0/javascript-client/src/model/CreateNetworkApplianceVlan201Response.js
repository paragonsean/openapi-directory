/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetNetworkApplianceVlans200ResponseInnerIpv6 from './GetNetworkApplianceVlans200ResponseInnerIpv6';
import GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp from './GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp';

/**
 * The CreateNetworkApplianceVlan201Response model module.
 * @module model/CreateNetworkApplianceVlan201Response
 * @version 1.32.0
 */
class CreateNetworkApplianceVlan201Response {
    /**
     * Constructs a new <code>CreateNetworkApplianceVlan201Response</code>.
     * @alias module:model/CreateNetworkApplianceVlan201Response
     */
    constructor() { 
        
        CreateNetworkApplianceVlan201Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['templateVlanType'] = 'same';
    }

    /**
     * Constructs a <code>CreateNetworkApplianceVlan201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkApplianceVlan201Response} obj Optional instance to populate.
     * @return {module:model/CreateNetworkApplianceVlan201Response} The populated <code>CreateNetworkApplianceVlan201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkApplianceVlan201Response();

            if (data.hasOwnProperty('applianceIp')) {
                obj['applianceIp'] = ApiClient.convertToType(data['applianceIp'], 'String');
            }
            if (data.hasOwnProperty('cidr')) {
                obj['cidr'] = ApiClient.convertToType(data['cidr'], 'String');
            }
            if (data.hasOwnProperty('groupPolicyId')) {
                obj['groupPolicyId'] = ApiClient.convertToType(data['groupPolicyId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('interfaceId')) {
                obj['interfaceId'] = ApiClient.convertToType(data['interfaceId'], 'String');
            }
            if (data.hasOwnProperty('ipv6')) {
                obj['ipv6'] = GetNetworkApplianceVlans200ResponseInnerIpv6.constructFromObject(data['ipv6']);
            }
            if (data.hasOwnProperty('mandatoryDhcp')) {
                obj['mandatoryDhcp'] = GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp.constructFromObject(data['mandatoryDhcp']);
            }
            if (data.hasOwnProperty('mask')) {
                obj['mask'] = ApiClient.convertToType(data['mask'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
            if (data.hasOwnProperty('templateVlanType')) {
                obj['templateVlanType'] = ApiClient.convertToType(data['templateVlanType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkApplianceVlan201Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkApplianceVlan201Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applianceIp'] && !(typeof data['applianceIp'] === 'string' || data['applianceIp'] instanceof String)) {
            throw new Error("Expected the field `applianceIp` to be a primitive type in the JSON string but got " + data['applianceIp']);
        }
        // ensure the json data is a string
        if (data['cidr'] && !(typeof data['cidr'] === 'string' || data['cidr'] instanceof String)) {
            throw new Error("Expected the field `cidr` to be a primitive type in the JSON string but got " + data['cidr']);
        }
        // ensure the json data is a string
        if (data['groupPolicyId'] && !(typeof data['groupPolicyId'] === 'string' || data['groupPolicyId'] instanceof String)) {
            throw new Error("Expected the field `groupPolicyId` to be a primitive type in the JSON string but got " + data['groupPolicyId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['interfaceId'] && !(typeof data['interfaceId'] === 'string' || data['interfaceId'] instanceof String)) {
            throw new Error("Expected the field `interfaceId` to be a primitive type in the JSON string but got " + data['interfaceId']);
        }
        // validate the optional field `ipv6`
        if (data['ipv6']) { // data not null
          GetNetworkApplianceVlans200ResponseInnerIpv6.validateJSON(data['ipv6']);
        }
        // validate the optional field `mandatoryDhcp`
        if (data['mandatoryDhcp']) { // data not null
          GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp.validateJSON(data['mandatoryDhcp']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['subnet'] && !(typeof data['subnet'] === 'string' || data['subnet'] instanceof String)) {
            throw new Error("Expected the field `subnet` to be a primitive type in the JSON string but got " + data['subnet']);
        }
        // ensure the json data is a string
        if (data['templateVlanType'] && !(typeof data['templateVlanType'] === 'string' || data['templateVlanType'] instanceof String)) {
            throw new Error("Expected the field `templateVlanType` to be a primitive type in the JSON string but got " + data['templateVlanType']);
        }

        return true;
    }


}



/**
 * The local IP of the appliance on the VLAN
 * @member {String} applianceIp
 */
CreateNetworkApplianceVlan201Response.prototype['applianceIp'] = undefined;

/**
 * CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
 * @member {String} cidr
 */
CreateNetworkApplianceVlan201Response.prototype['cidr'] = undefined;

/**
 * The id of the desired group policy to apply to the VLAN
 * @member {String} groupPolicyId
 */
CreateNetworkApplianceVlan201Response.prototype['groupPolicyId'] = undefined;

/**
 * The VLAN ID of the VLAN
 * @member {String} id
 */
CreateNetworkApplianceVlan201Response.prototype['id'] = undefined;

/**
 * The interface ID of the VLAN
 * @member {String} interfaceId
 */
CreateNetworkApplianceVlan201Response.prototype['interfaceId'] = undefined;

/**
 * @member {module:model/GetNetworkApplianceVlans200ResponseInnerIpv6} ipv6
 */
CreateNetworkApplianceVlan201Response.prototype['ipv6'] = undefined;

/**
 * @member {module:model/GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp} mandatoryDhcp
 */
CreateNetworkApplianceVlan201Response.prototype['mandatoryDhcp'] = undefined;

/**
 * Mask used for the subnet of all bound to the template networks. Applicable only for template network.
 * @member {Number} mask
 */
CreateNetworkApplianceVlan201Response.prototype['mask'] = undefined;

/**
 * The name of the VLAN
 * @member {String} name
 */
CreateNetworkApplianceVlan201Response.prototype['name'] = undefined;

/**
 * The subnet of the VLAN
 * @member {String} subnet
 */
CreateNetworkApplianceVlan201Response.prototype['subnet'] = undefined;

/**
 * Type of subnetting of the VLAN. Applicable only for template network.
 * @member {module:model/CreateNetworkApplianceVlan201Response.TemplateVlanTypeEnum} templateVlanType
 * @default 'same'
 */
CreateNetworkApplianceVlan201Response.prototype['templateVlanType'] = 'same';





/**
 * Allowed values for the <code>templateVlanType</code> property.
 * @enum {String}
 * @readonly
 */
CreateNetworkApplianceVlan201Response['TemplateVlanTypeEnum'] = {

    /**
     * value: "same"
     * @const
     */
    "same": "same",

    /**
     * value: "unique"
     * @const
     */
    "unique": "unique"
};



export default CreateNetworkApplianceVlan201Response;

