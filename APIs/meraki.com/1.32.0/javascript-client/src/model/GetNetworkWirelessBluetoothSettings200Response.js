/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetNetworkWirelessBluetoothSettings200Response model module.
 * @module model/GetNetworkWirelessBluetoothSettings200Response
 * @version 1.32.0
 */
class GetNetworkWirelessBluetoothSettings200Response {
    /**
     * Constructs a new <code>GetNetworkWirelessBluetoothSettings200Response</code>.
     * @alias module:model/GetNetworkWirelessBluetoothSettings200Response
     */
    constructor() { 
        
        GetNetworkWirelessBluetoothSettings200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkWirelessBluetoothSettings200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkWirelessBluetoothSettings200Response} obj Optional instance to populate.
     * @return {module:model/GetNetworkWirelessBluetoothSettings200Response} The populated <code>GetNetworkWirelessBluetoothSettings200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkWirelessBluetoothSettings200Response();

            if (data.hasOwnProperty('advertisingEnabled')) {
                obj['advertisingEnabled'] = ApiClient.convertToType(data['advertisingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('eslEnabled')) {
                obj['eslEnabled'] = ApiClient.convertToType(data['eslEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('major')) {
                obj['major'] = ApiClient.convertToType(data['major'], 'Number');
            }
            if (data.hasOwnProperty('majorMinorAssignmentMode')) {
                obj['majorMinorAssignmentMode'] = ApiClient.convertToType(data['majorMinorAssignmentMode'], 'String');
            }
            if (data.hasOwnProperty('minor')) {
                obj['minor'] = ApiClient.convertToType(data['minor'], 'Number');
            }
            if (data.hasOwnProperty('scanningEnabled')) {
                obj['scanningEnabled'] = ApiClient.convertToType(data['scanningEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkWirelessBluetoothSettings200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkWirelessBluetoothSettings200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['majorMinorAssignmentMode'] && !(typeof data['majorMinorAssignmentMode'] === 'string' || data['majorMinorAssignmentMode'] instanceof String)) {
            throw new Error("Expected the field `majorMinorAssignmentMode` to be a primitive type in the JSON string but got " + data['majorMinorAssignmentMode']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}



/**
 * Whether APs will advertise beacons.
 * @member {Boolean} advertisingEnabled
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['advertisingEnabled'] = undefined;

/**
 * Whether ESL is enabled on this network.
 * @member {Boolean} eslEnabled
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['eslEnabled'] = undefined;

/**
 * The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
 * @member {Number} major
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['major'] = undefined;

/**
 * The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
 * @member {String} majorMinorAssignmentMode
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['majorMinorAssignmentMode'] = undefined;

/**
 * The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
 * @member {Number} minor
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['minor'] = undefined;

/**
 * Whether APs will scan for Bluetooth enabled clients.
 * @member {Boolean} scanningEnabled
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['scanningEnabled'] = undefined;

/**
 * The UUID to be used in the beacon identifier.
 * @member {String} uuid
 */
GetNetworkWirelessBluetoothSettings200Response.prototype['uuid'] = undefined;






export default GetNetworkWirelessBluetoothSettings200Response;

