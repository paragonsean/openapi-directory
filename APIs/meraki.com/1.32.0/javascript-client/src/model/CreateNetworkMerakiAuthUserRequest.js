/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkMerakiAuthUserRequestAuthorizationsInner from './CreateNetworkMerakiAuthUserRequestAuthorizationsInner';

/**
 * The CreateNetworkMerakiAuthUserRequest model module.
 * @module model/CreateNetworkMerakiAuthUserRequest
 * @version 1.32.0
 */
class CreateNetworkMerakiAuthUserRequest {
    /**
     * Constructs a new <code>CreateNetworkMerakiAuthUserRequest</code>.
     * @alias module:model/CreateNetworkMerakiAuthUserRequest
     * @param authorizations {Array.<module:model/CreateNetworkMerakiAuthUserRequestAuthorizationsInner>} Authorization zones and expiration dates for the user.
     * @param email {String} Email address of the user
     */
    constructor(authorizations, email) { 
        
        CreateNetworkMerakiAuthUserRequest.initialize(this, authorizations, email);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authorizations, email) { 
        obj['accountType'] = '802.1X';
        obj['authorizations'] = authorizations;
        obj['email'] = email;
    }

    /**
     * Constructs a <code>CreateNetworkMerakiAuthUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkMerakiAuthUserRequest} obj Optional instance to populate.
     * @return {module:model/CreateNetworkMerakiAuthUserRequest} The populated <code>CreateNetworkMerakiAuthUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkMerakiAuthUserRequest();

            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('authorizations')) {
                obj['authorizations'] = ApiClient.convertToType(data['authorizations'], [CreateNetworkMerakiAuthUserRequestAuthorizationsInner]);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('emailPasswordToUser')) {
                obj['emailPasswordToUser'] = ApiClient.convertToType(data['emailPasswordToUser'], 'Boolean');
            }
            if (data.hasOwnProperty('isAdmin')) {
                obj['isAdmin'] = ApiClient.convertToType(data['isAdmin'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkMerakiAuthUserRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkMerakiAuthUserRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkMerakiAuthUserRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountType'] && !(typeof data['accountType'] === 'string' || data['accountType'] instanceof String)) {
            throw new Error("Expected the field `accountType` to be a primitive type in the JSON string but got " + data['accountType']);
        }
        if (data['authorizations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['authorizations'])) {
                throw new Error("Expected the field `authorizations` to be an array in the JSON data but got " + data['authorizations']);
            }
            // validate the optional field `authorizations` (array)
            for (const item of data['authorizations']) {
                CreateNetworkMerakiAuthUserRequestAuthorizationsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }

        return true;
    }


}

CreateNetworkMerakiAuthUserRequest.RequiredProperties = ["authorizations", "email"];

/**
 * Authorization type for user. Can be 'Guest' or '802.1X' for wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.
 * @member {module:model/CreateNetworkMerakiAuthUserRequest.AccountTypeEnum} accountType
 * @default '802.1X'
 */
CreateNetworkMerakiAuthUserRequest.prototype['accountType'] = '802.1X';

/**
 * Authorization zones and expiration dates for the user.
 * @member {Array.<module:model/CreateNetworkMerakiAuthUserRequestAuthorizationsInner>} authorizations
 */
CreateNetworkMerakiAuthUserRequest.prototype['authorizations'] = undefined;

/**
 * Email address of the user
 * @member {String} email
 */
CreateNetworkMerakiAuthUserRequest.prototype['email'] = undefined;

/**
 * Whether or not Meraki should email the password to user. Default is false.
 * @member {Boolean} emailPasswordToUser
 */
CreateNetworkMerakiAuthUserRequest.prototype['emailPasswordToUser'] = undefined;

/**
 * Whether or not the user is a Dashboard administrator.
 * @member {Boolean} isAdmin
 */
CreateNetworkMerakiAuthUserRequest.prototype['isAdmin'] = undefined;

/**
 * Name of the user. Only required If the user is not a Dashboard administrator.
 * @member {String} name
 */
CreateNetworkMerakiAuthUserRequest.prototype['name'] = undefined;

/**
 * The password for this user account. Only required If the user is not a Dashboard administrator.
 * @member {String} password
 */
CreateNetworkMerakiAuthUserRequest.prototype['password'] = undefined;





/**
 * Allowed values for the <code>accountType</code> property.
 * @enum {String}
 * @readonly
 */
CreateNetworkMerakiAuthUserRequest['AccountTypeEnum'] = {

    /**
     * value: "802.1X"
     * @const
     */
    "802.1X": "802.1X",

    /**
     * value: "Client VPN"
     * @const
     */
    "Client VPN": "Client VPN",

    /**
     * value: "Guest"
     * @const
     */
    "Guest": "Guest"
};



export default CreateNetworkMerakiAuthUserRequest;

