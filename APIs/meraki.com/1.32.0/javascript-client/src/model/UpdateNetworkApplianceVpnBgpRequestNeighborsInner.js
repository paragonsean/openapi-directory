/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkApplianceVpnBgpRequestNeighborsInnerIpv6 from './UpdateNetworkApplianceVpnBgpRequestNeighborsInnerIpv6';

/**
 * The UpdateNetworkApplianceVpnBgpRequestNeighborsInner model module.
 * @module model/UpdateNetworkApplianceVpnBgpRequestNeighborsInner
 * @version 1.32.0
 */
class UpdateNetworkApplianceVpnBgpRequestNeighborsInner {
    /**
     * Constructs a new <code>UpdateNetworkApplianceVpnBgpRequestNeighborsInner</code>.
     * @alias module:model/UpdateNetworkApplianceVpnBgpRequestNeighborsInner
     * @param ebgpHoldTimer {Number} The EBGP hold timer in seconds for each neighbor. The EBGP hold timer must be an integer between 12 and 240.
     * @param ebgpMultihop {Number} Configure this if the neighbor is not adjacent. The EBGP multi-hop must be an integer between 1 and 255.
     * @param remoteAsNumber {Number} Remote ASN of the neighbor. The remote ASN must be an integer between 1 and 4294967295.
     */
    constructor(ebgpHoldTimer, ebgpMultihop, remoteAsNumber) { 
        
        UpdateNetworkApplianceVpnBgpRequestNeighborsInner.initialize(this, ebgpHoldTimer, ebgpMultihop, remoteAsNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ebgpHoldTimer, ebgpMultihop, remoteAsNumber) { 
        obj['ebgpHoldTimer'] = ebgpHoldTimer;
        obj['ebgpMultihop'] = ebgpMultihop;
        obj['remoteAsNumber'] = remoteAsNumber;
    }

    /**
     * Constructs a <code>UpdateNetworkApplianceVpnBgpRequestNeighborsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkApplianceVpnBgpRequestNeighborsInner} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkApplianceVpnBgpRequestNeighborsInner} The populated <code>UpdateNetworkApplianceVpnBgpRequestNeighborsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkApplianceVpnBgpRequestNeighborsInner();

            if (data.hasOwnProperty('allowTransit')) {
                obj['allowTransit'] = ApiClient.convertToType(data['allowTransit'], 'Boolean');
            }
            if (data.hasOwnProperty('ebgpHoldTimer')) {
                obj['ebgpHoldTimer'] = ApiClient.convertToType(data['ebgpHoldTimer'], 'Number');
            }
            if (data.hasOwnProperty('ebgpMultihop')) {
                obj['ebgpMultihop'] = ApiClient.convertToType(data['ebgpMultihop'], 'Number');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('ipv6')) {
                obj['ipv6'] = UpdateNetworkApplianceVpnBgpRequestNeighborsInnerIpv6.constructFromObject(data['ipv6']);
            }
            if (data.hasOwnProperty('receiveLimit')) {
                obj['receiveLimit'] = ApiClient.convertToType(data['receiveLimit'], 'Number');
            }
            if (data.hasOwnProperty('remoteAsNumber')) {
                obj['remoteAsNumber'] = ApiClient.convertToType(data['remoteAsNumber'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkApplianceVpnBgpRequestNeighborsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkApplianceVpnBgpRequestNeighborsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateNetworkApplianceVpnBgpRequestNeighborsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // validate the optional field `ipv6`
        if (data['ipv6']) { // data not null
          UpdateNetworkApplianceVpnBgpRequestNeighborsInnerIpv6.validateJSON(data['ipv6']);
        }

        return true;
    }


}

UpdateNetworkApplianceVpnBgpRequestNeighborsInner.RequiredProperties = ["ebgpHoldTimer", "ebgpMultihop", "remoteAsNumber"];

/**
 * When this feature is on, the Meraki device will advertise routes learned from other Autonomous Systems, thereby allowing traffic between Autonomous Systems to transit this AS. When absent, it defaults to false.
 * @member {Boolean} allowTransit
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['allowTransit'] = undefined;

/**
 * The EBGP hold timer in seconds for each neighbor. The EBGP hold timer must be an integer between 12 and 240.
 * @member {Number} ebgpHoldTimer
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['ebgpHoldTimer'] = undefined;

/**
 * Configure this if the neighbor is not adjacent. The EBGP multi-hop must be an integer between 1 and 255.
 * @member {Number} ebgpMultihop
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['ebgpMultihop'] = undefined;

/**
 * The IPv4 address of the neighbor
 * @member {String} ip
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['ip'] = undefined;

/**
 * @member {module:model/UpdateNetworkApplianceVpnBgpRequestNeighborsInnerIpv6} ipv6
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['ipv6'] = undefined;

/**
 * The receive limit is the maximum number of routes that can be received from any BGP peer. The receive limit must be an integer between 0 and 4294967295. When absent, it defaults to 0.
 * @member {Number} receiveLimit
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['receiveLimit'] = undefined;

/**
 * Remote ASN of the neighbor. The remote ASN must be an integer between 1 and 4294967295.
 * @member {Number} remoteAsNumber
 */
UpdateNetworkApplianceVpnBgpRequestNeighborsInner.prototype['remoteAsNumber'] = undefined;






export default UpdateNetworkApplianceVpnBgpRequestNeighborsInner;

