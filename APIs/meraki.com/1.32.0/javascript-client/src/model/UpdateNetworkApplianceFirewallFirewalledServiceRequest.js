/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateNetworkApplianceFirewallFirewalledServiceRequest model module.
 * @module model/UpdateNetworkApplianceFirewallFirewalledServiceRequest
 * @version 1.32.0
 */
class UpdateNetworkApplianceFirewallFirewalledServiceRequest {
    /**
     * Constructs a new <code>UpdateNetworkApplianceFirewallFirewalledServiceRequest</code>.
     * @alias module:model/UpdateNetworkApplianceFirewallFirewalledServiceRequest
     * @param access {module:model/UpdateNetworkApplianceFirewallFirewalledServiceRequest.AccessEnum} A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only allowed IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required
     */
    constructor(access) { 
        
        UpdateNetworkApplianceFirewallFirewalledServiceRequest.initialize(this, access);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, access) { 
        obj['access'] = access;
    }

    /**
     * Constructs a <code>UpdateNetworkApplianceFirewallFirewalledServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkApplianceFirewallFirewalledServiceRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkApplianceFirewallFirewalledServiceRequest} The populated <code>UpdateNetworkApplianceFirewallFirewalledServiceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkApplianceFirewallFirewalledServiceRequest();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
            if (data.hasOwnProperty('allowedIps')) {
                obj['allowedIps'] = ApiClient.convertToType(data['allowedIps'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkApplianceFirewallFirewalledServiceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkApplianceFirewallFirewalledServiceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateNetworkApplianceFirewallFirewalledServiceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access'] && !(typeof data['access'] === 'string' || data['access'] instanceof String)) {
            throw new Error("Expected the field `access` to be a primitive type in the JSON string but got " + data['access']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowedIps'])) {
            throw new Error("Expected the field `allowedIps` to be an array in the JSON data but got " + data['allowedIps']);
        }

        return true;
    }


}

UpdateNetworkApplianceFirewallFirewalledServiceRequest.RequiredProperties = ["access"];

/**
 * A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only allowed IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required
 * @member {module:model/UpdateNetworkApplianceFirewallFirewalledServiceRequest.AccessEnum} access
 */
UpdateNetworkApplianceFirewallFirewalledServiceRequest.prototype['access'] = undefined;

/**
 * An array of allowed IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored
 * @member {Array.<String>} allowedIps
 */
UpdateNetworkApplianceFirewallFirewalledServiceRequest.prototype['allowedIps'] = undefined;





/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkApplianceFirewallFirewalledServiceRequest['AccessEnum'] = {

    /**
     * value: "blocked"
     * @const
     */
    "blocked": "blocked",

    /**
     * value: "restricted"
     * @const
     */
    "restricted": "restricted",

    /**
     * value: "unrestricted"
     * @const
     */
    "unrestricted": "unrestricted"
};



export default UpdateNetworkApplianceFirewallFirewalledServiceRequest;

