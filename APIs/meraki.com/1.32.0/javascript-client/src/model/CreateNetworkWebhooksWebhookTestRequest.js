/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateNetworkWebhooksWebhookTestRequest model module.
 * @module model/CreateNetworkWebhooksWebhookTestRequest
 * @version 1.32.0
 */
class CreateNetworkWebhooksWebhookTestRequest {
    /**
     * Constructs a new <code>CreateNetworkWebhooksWebhookTestRequest</code>.
     * @alias module:model/CreateNetworkWebhooksWebhookTestRequest
     * @param url {String} The URL where the test webhook will be sent
     */
    constructor(url) { 
        
        CreateNetworkWebhooksWebhookTestRequest.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['alertTypeId'] = 'power_supply_down';
        obj['sharedSecret'] = '';
        obj['url'] = url;
    }

    /**
     * Constructs a <code>CreateNetworkWebhooksWebhookTestRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkWebhooksWebhookTestRequest} obj Optional instance to populate.
     * @return {module:model/CreateNetworkWebhooksWebhookTestRequest} The populated <code>CreateNetworkWebhooksWebhookTestRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkWebhooksWebhookTestRequest();

            if (data.hasOwnProperty('alertTypeId')) {
                obj['alertTypeId'] = ApiClient.convertToType(data['alertTypeId'], 'String');
            }
            if (data.hasOwnProperty('payloadTemplateId')) {
                obj['payloadTemplateId'] = ApiClient.convertToType(data['payloadTemplateId'], 'String');
            }
            if (data.hasOwnProperty('payloadTemplateName')) {
                obj['payloadTemplateName'] = ApiClient.convertToType(data['payloadTemplateName'], 'String');
            }
            if (data.hasOwnProperty('sharedSecret')) {
                obj['sharedSecret'] = ApiClient.convertToType(data['sharedSecret'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkWebhooksWebhookTestRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkWebhooksWebhookTestRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkWebhooksWebhookTestRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['alertTypeId'] && !(typeof data['alertTypeId'] === 'string' || data['alertTypeId'] instanceof String)) {
            throw new Error("Expected the field `alertTypeId` to be a primitive type in the JSON string but got " + data['alertTypeId']);
        }
        // ensure the json data is a string
        if (data['payloadTemplateId'] && !(typeof data['payloadTemplateId'] === 'string' || data['payloadTemplateId'] instanceof String)) {
            throw new Error("Expected the field `payloadTemplateId` to be a primitive type in the JSON string but got " + data['payloadTemplateId']);
        }
        // ensure the json data is a string
        if (data['payloadTemplateName'] && !(typeof data['payloadTemplateName'] === 'string' || data['payloadTemplateName'] instanceof String)) {
            throw new Error("Expected the field `payloadTemplateName` to be a primitive type in the JSON string but got " + data['payloadTemplateName']);
        }
        // ensure the json data is a string
        if (data['sharedSecret'] && !(typeof data['sharedSecret'] === 'string' || data['sharedSecret'] instanceof String)) {
            throw new Error("Expected the field `sharedSecret` to be a primitive type in the JSON string but got " + data['sharedSecret']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

CreateNetworkWebhooksWebhookTestRequest.RequiredProperties = ["url"];

/**
 * The type of alert which the test webhook will send. Optional. Defaults to power_supply_down.
 * @member {String} alertTypeId
 * @default 'power_supply_down'
 */
CreateNetworkWebhooksWebhookTestRequest.prototype['alertTypeId'] = 'power_supply_down';

/**
 * The ID of the payload template of the test webhook. Defaults to the HTTP server's template ID if one exists for the given URL, or Generic template ID otherwise
 * @member {String} payloadTemplateId
 */
CreateNetworkWebhooksWebhookTestRequest.prototype['payloadTemplateId'] = undefined;

/**
 * The name of the payload template.
 * @member {String} payloadTemplateName
 */
CreateNetworkWebhooksWebhookTestRequest.prototype['payloadTemplateName'] = undefined;

/**
 * The shared secret the test webhook will send. Optional. Defaults to an empty string.
 * @member {String} sharedSecret
 * @default ''
 */
CreateNetworkWebhooksWebhookTestRequest.prototype['sharedSecret'] = '';

/**
 * The URL where the test webhook will be sent
 * @member {String} url
 */
CreateNetworkWebhooksWebhookTestRequest.prototype['url'] = undefined;






export default CreateNetworkWebhooksWebhookTestRequest;

