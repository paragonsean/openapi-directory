/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetNetworkApplianceSettings200ResponseDynamicDns from './GetNetworkApplianceSettings200ResponseDynamicDns';

/**
 * The GetNetworkApplianceSettings200Response model module.
 * @module model/GetNetworkApplianceSettings200Response
 * @version 1.32.0
 */
class GetNetworkApplianceSettings200Response {
    /**
     * Constructs a new <code>GetNetworkApplianceSettings200Response</code>.
     * @alias module:model/GetNetworkApplianceSettings200Response
     */
    constructor() { 
        
        GetNetworkApplianceSettings200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkApplianceSettings200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkApplianceSettings200Response} obj Optional instance to populate.
     * @return {module:model/GetNetworkApplianceSettings200Response} The populated <code>GetNetworkApplianceSettings200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkApplianceSettings200Response();

            if (data.hasOwnProperty('clientTrackingMethod')) {
                obj['clientTrackingMethod'] = ApiClient.convertToType(data['clientTrackingMethod'], 'String');
            }
            if (data.hasOwnProperty('deploymentMode')) {
                obj['deploymentMode'] = ApiClient.convertToType(data['deploymentMode'], 'String');
            }
            if (data.hasOwnProperty('dynamicDns')) {
                obj['dynamicDns'] = GetNetworkApplianceSettings200ResponseDynamicDns.constructFromObject(data['dynamicDns']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkApplianceSettings200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkApplianceSettings200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientTrackingMethod'] && !(typeof data['clientTrackingMethod'] === 'string' || data['clientTrackingMethod'] instanceof String)) {
            throw new Error("Expected the field `clientTrackingMethod` to be a primitive type in the JSON string but got " + data['clientTrackingMethod']);
        }
        // ensure the json data is a string
        if (data['deploymentMode'] && !(typeof data['deploymentMode'] === 'string' || data['deploymentMode'] instanceof String)) {
            throw new Error("Expected the field `deploymentMode` to be a primitive type in the JSON string but got " + data['deploymentMode']);
        }
        // validate the optional field `dynamicDns`
        if (data['dynamicDns']) { // data not null
          GetNetworkApplianceSettings200ResponseDynamicDns.validateJSON(data['dynamicDns']);
        }

        return true;
    }


}



/**
 * Client tracking method of a network
 * @member {module:model/GetNetworkApplianceSettings200Response.ClientTrackingMethodEnum} clientTrackingMethod
 */
GetNetworkApplianceSettings200Response.prototype['clientTrackingMethod'] = undefined;

/**
 * Deployment mode of a network
 * @member {module:model/GetNetworkApplianceSettings200Response.DeploymentModeEnum} deploymentMode
 */
GetNetworkApplianceSettings200Response.prototype['deploymentMode'] = undefined;

/**
 * @member {module:model/GetNetworkApplianceSettings200ResponseDynamicDns} dynamicDns
 */
GetNetworkApplianceSettings200Response.prototype['dynamicDns'] = undefined;





/**
 * Allowed values for the <code>clientTrackingMethod</code> property.
 * @enum {String}
 * @readonly
 */
GetNetworkApplianceSettings200Response['ClientTrackingMethodEnum'] = {

    /**
     * value: "IP address"
     * @const
     */
    "IP address": "IP address",

    /**
     * value: "MAC address"
     * @const
     */
    "MAC address": "MAC address",

    /**
     * value: "Unique client identifier"
     * @const
     */
    "Unique client identifier": "Unique client identifier"
};


/**
 * Allowed values for the <code>deploymentMode</code> property.
 * @enum {String}
 * @readonly
 */
GetNetworkApplianceSettings200Response['DeploymentModeEnum'] = {

    /**
     * value: "passthrough"
     * @const
     */
    "passthrough": "passthrough",

    /**
     * value: "routed"
     * @const
     */
    "routed": "routed"
};



export default GetNetworkApplianceSettings200Response;

