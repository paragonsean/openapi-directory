/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetOrganizationDevicesAvailabilities200ResponseInnerNetwork from './GetOrganizationDevicesAvailabilities200ResponseInnerNetwork';

/**
 * The GetOrganizationDevicesAvailabilities200ResponseInner model module.
 * @module model/GetOrganizationDevicesAvailabilities200ResponseInner
 * @version 1.32.0
 */
class GetOrganizationDevicesAvailabilities200ResponseInner {
    /**
     * Constructs a new <code>GetOrganizationDevicesAvailabilities200ResponseInner</code>.
     * @alias module:model/GetOrganizationDevicesAvailabilities200ResponseInner
     */
    constructor() { 
        
        GetOrganizationDevicesAvailabilities200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationDevicesAvailabilities200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationDevicesAvailabilities200ResponseInner} obj Optional instance to populate.
     * @return {module:model/GetOrganizationDevicesAvailabilities200ResponseInner} The populated <code>GetOrganizationDevicesAvailabilities200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationDevicesAvailabilities200ResponseInner();

            if (data.hasOwnProperty('mac')) {
                obj['mac'] = ApiClient.convertToType(data['mac'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = GetOrganizationDevicesAvailabilities200ResponseInnerNetwork.constructFromObject(data['network']);
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('serial')) {
                obj['serial'] = ApiClient.convertToType(data['serial'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationDevicesAvailabilities200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationDevicesAvailabilities200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mac'] && !(typeof data['mac'] === 'string' || data['mac'] instanceof String)) {
            throw new Error("Expected the field `mac` to be a primitive type in the JSON string but got " + data['mac']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `network`
        if (data['network']) { // data not null
          GetOrganizationDevicesAvailabilities200ResponseInnerNetwork.validateJSON(data['network']);
        }
        // ensure the json data is a string
        if (data['productType'] && !(typeof data['productType'] === 'string' || data['productType'] instanceof String)) {
            throw new Error("Expected the field `productType` to be a primitive type in the JSON string but got " + data['productType']);
        }
        // ensure the json data is a string
        if (data['serial'] && !(typeof data['serial'] === 'string' || data['serial'] instanceof String)) {
            throw new Error("Expected the field `serial` to be a primitive type in the JSON string but got " + data['serial']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * The device MAC address.
 * @member {String} mac
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['mac'] = undefined;

/**
 * The device name.
 * @member {String} name
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['name'] = undefined;

/**
 * @member {module:model/GetOrganizationDevicesAvailabilities200ResponseInnerNetwork} network
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['network'] = undefined;

/**
 * Device product type.
 * @member {module:model/GetOrganizationDevicesAvailabilities200ResponseInner.ProductTypeEnum} productType
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['productType'] = undefined;

/**
 * The device serial number.
 * @member {String} serial
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['serial'] = undefined;

/**
 * Status of the device. Possible values are: online, alerting, offline, dormant.
 * @member {module:model/GetOrganizationDevicesAvailabilities200ResponseInner.StatusEnum} status
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['status'] = undefined;

/**
 * List of custom tags for the device.
 * @member {Array.<String>} tags
 */
GetOrganizationDevicesAvailabilities200ResponseInner.prototype['tags'] = undefined;





/**
 * Allowed values for the <code>productType</code> property.
 * @enum {String}
 * @readonly
 */
GetOrganizationDevicesAvailabilities200ResponseInner['ProductTypeEnum'] = {

    /**
     * value: "appliance"
     * @const
     */
    "appliance": "appliance",

    /**
     * value: "camera"
     * @const
     */
    "camera": "camera",

    /**
     * value: "cellularGateway"
     * @const
     */
    "cellularGateway": "cellularGateway",

    /**
     * value: "sensor"
     * @const
     */
    "sensor": "sensor",

    /**
     * value: "switch"
     * @const
     */
    "switch": "switch",

    /**
     * value: "systemsManager"
     * @const
     */
    "systemsManager": "systemsManager",

    /**
     * value: "wireless"
     * @const
     */
    "wireless": "wireless"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetOrganizationDevicesAvailabilities200ResponseInner['StatusEnum'] = {

    /**
     * value: "alerting"
     * @const
     */
    "alerting": "alerting",

    /**
     * value: "dormant"
     * @const
     */
    "dormant": "dormant",

    /**
     * value: "offline"
     * @const
     */
    "offline": "offline",

    /**
     * value: "online"
     * @const
     */
    "online": "online"
};



export default GetOrganizationDevicesAvailabilities200ResponseInner;

