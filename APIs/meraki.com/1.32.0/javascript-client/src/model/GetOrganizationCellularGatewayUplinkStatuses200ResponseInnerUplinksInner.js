/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInnerSignalStat from './GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInnerSignalStat';

/**
 * The GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner model module.
 * @module model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner
 * @version 1.32.0
 */
class GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner {
    /**
     * Constructs a new <code>GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner</code>.
     * @alias module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner
     */
    constructor() { 
        
        GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner} obj Optional instance to populate.
     * @return {module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner} The populated <code>GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner();

            if (data.hasOwnProperty('apn')) {
                obj['apn'] = ApiClient.convertToType(data['apn'], 'String');
            }
            if (data.hasOwnProperty('connectionType')) {
                obj['connectionType'] = ApiClient.convertToType(data['connectionType'], 'String');
            }
            if (data.hasOwnProperty('dns1')) {
                obj['dns1'] = ApiClient.convertToType(data['dns1'], 'String');
            }
            if (data.hasOwnProperty('dns2')) {
                obj['dns2'] = ApiClient.convertToType(data['dns2'], 'String');
            }
            if (data.hasOwnProperty('gateway')) {
                obj['gateway'] = ApiClient.convertToType(data['gateway'], 'String');
            }
            if (data.hasOwnProperty('iccid')) {
                obj['iccid'] = ApiClient.convertToType(data['iccid'], 'String');
            }
            if (data.hasOwnProperty('interface')) {
                obj['interface'] = ApiClient.convertToType(data['interface'], 'String');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('publicIp')) {
                obj['publicIp'] = ApiClient.convertToType(data['publicIp'], 'String');
            }
            if (data.hasOwnProperty('signalStat')) {
                obj['signalStat'] = GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInnerSignalStat.constructFromObject(data['signalStat']);
            }
            if (data.hasOwnProperty('signalType')) {
                obj['signalType'] = ApiClient.convertToType(data['signalType'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apn'] && !(typeof data['apn'] === 'string' || data['apn'] instanceof String)) {
            throw new Error("Expected the field `apn` to be a primitive type in the JSON string but got " + data['apn']);
        }
        // ensure the json data is a string
        if (data['connectionType'] && !(typeof data['connectionType'] === 'string' || data['connectionType'] instanceof String)) {
            throw new Error("Expected the field `connectionType` to be a primitive type in the JSON string but got " + data['connectionType']);
        }
        // ensure the json data is a string
        if (data['dns1'] && !(typeof data['dns1'] === 'string' || data['dns1'] instanceof String)) {
            throw new Error("Expected the field `dns1` to be a primitive type in the JSON string but got " + data['dns1']);
        }
        // ensure the json data is a string
        if (data['dns2'] && !(typeof data['dns2'] === 'string' || data['dns2'] instanceof String)) {
            throw new Error("Expected the field `dns2` to be a primitive type in the JSON string but got " + data['dns2']);
        }
        // ensure the json data is a string
        if (data['gateway'] && !(typeof data['gateway'] === 'string' || data['gateway'] instanceof String)) {
            throw new Error("Expected the field `gateway` to be a primitive type in the JSON string but got " + data['gateway']);
        }
        // ensure the json data is a string
        if (data['iccid'] && !(typeof data['iccid'] === 'string' || data['iccid'] instanceof String)) {
            throw new Error("Expected the field `iccid` to be a primitive type in the JSON string but got " + data['iccid']);
        }
        // ensure the json data is a string
        if (data['interface'] && !(typeof data['interface'] === 'string' || data['interface'] instanceof String)) {
            throw new Error("Expected the field `interface` to be a primitive type in the JSON string but got " + data['interface']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['publicIp'] && !(typeof data['publicIp'] === 'string' || data['publicIp'] instanceof String)) {
            throw new Error("Expected the field `publicIp` to be a primitive type in the JSON string but got " + data['publicIp']);
        }
        // validate the optional field `signalStat`
        if (data['signalStat']) { // data not null
          GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInnerSignalStat.validateJSON(data['signalStat']);
        }
        // ensure the json data is a string
        if (data['signalType'] && !(typeof data['signalType'] === 'string' || data['signalType'] instanceof String)) {
            throw new Error("Expected the field `signalType` to be a primitive type in the JSON string but got " + data['signalType']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Access Point Name
 * @member {String} apn
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['apn'] = undefined;

/**
 * Connection Type
 * @member {String} connectionType
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['connectionType'] = undefined;

/**
 * Primary DNS IP
 * @member {String} dns1
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['dns1'] = undefined;

/**
 * Secondary DNS IP
 * @member {String} dns2
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['dns2'] = undefined;

/**
 * Gateway IP
 * @member {String} gateway
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['gateway'] = undefined;

/**
 * Integrated Circuit Card Identification Number
 * @member {String} iccid
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['iccid'] = undefined;

/**
 * Uplink interface
 * @member {String} interface
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['interface'] = undefined;

/**
 * Uplink IP
 * @member {String} ip
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['ip'] = undefined;

/**
 * Uplink model
 * @member {String} model
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['model'] = undefined;

/**
 * Network Provider
 * @member {String} provider
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['provider'] = undefined;

/**
 * Public IP
 * @member {String} publicIp
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['publicIp'] = undefined;

/**
 * @member {module:model/GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInnerSignalStat} signalStat
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['signalStat'] = undefined;

/**
 * Signal Type
 * @member {String} signalType
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['signalType'] = undefined;

/**
 * Uplink status
 * @member {String} status
 */
GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner.prototype['status'] = undefined;






export default GetOrganizationCellularGatewayUplinkStatuses200ResponseInnerUplinksInner;

