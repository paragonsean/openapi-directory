/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateNetworkApplianceContentFilteringRequest model module.
 * @module model/UpdateNetworkApplianceContentFilteringRequest
 * @version 1.32.0
 */
class UpdateNetworkApplianceContentFilteringRequest {
    /**
     * Constructs a new <code>UpdateNetworkApplianceContentFilteringRequest</code>.
     * @alias module:model/UpdateNetworkApplianceContentFilteringRequest
     */
    constructor() { 
        
        UpdateNetworkApplianceContentFilteringRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkApplianceContentFilteringRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkApplianceContentFilteringRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkApplianceContentFilteringRequest} The populated <code>UpdateNetworkApplianceContentFilteringRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkApplianceContentFilteringRequest();

            if (data.hasOwnProperty('allowedUrlPatterns')) {
                obj['allowedUrlPatterns'] = ApiClient.convertToType(data['allowedUrlPatterns'], ['String']);
            }
            if (data.hasOwnProperty('blockedUrlCategories')) {
                obj['blockedUrlCategories'] = ApiClient.convertToType(data['blockedUrlCategories'], ['String']);
            }
            if (data.hasOwnProperty('blockedUrlPatterns')) {
                obj['blockedUrlPatterns'] = ApiClient.convertToType(data['blockedUrlPatterns'], ['String']);
            }
            if (data.hasOwnProperty('urlCategoryListSize')) {
                obj['urlCategoryListSize'] = ApiClient.convertToType(data['urlCategoryListSize'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkApplianceContentFilteringRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkApplianceContentFilteringRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedUrlPatterns'])) {
            throw new Error("Expected the field `allowedUrlPatterns` to be an array in the JSON data but got " + data['allowedUrlPatterns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blockedUrlCategories'])) {
            throw new Error("Expected the field `blockedUrlCategories` to be an array in the JSON data but got " + data['blockedUrlCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blockedUrlPatterns'])) {
            throw new Error("Expected the field `blockedUrlPatterns` to be an array in the JSON data but got " + data['blockedUrlPatterns']);
        }
        // ensure the json data is a string
        if (data['urlCategoryListSize'] && !(typeof data['urlCategoryListSize'] === 'string' || data['urlCategoryListSize'] instanceof String)) {
            throw new Error("Expected the field `urlCategoryListSize` to be a primitive type in the JSON string but got " + data['urlCategoryListSize']);
        }

        return true;
    }


}



/**
 * A list of URL patterns that are allowed
 * @member {Array.<String>} allowedUrlPatterns
 */
UpdateNetworkApplianceContentFilteringRequest.prototype['allowedUrlPatterns'] = undefined;

/**
 * A list of URL categories to block
 * @member {Array.<String>} blockedUrlCategories
 */
UpdateNetworkApplianceContentFilteringRequest.prototype['blockedUrlCategories'] = undefined;

/**
 * A list of URL patterns that are blocked
 * @member {Array.<String>} blockedUrlPatterns
 */
UpdateNetworkApplianceContentFilteringRequest.prototype['blockedUrlPatterns'] = undefined;

/**
 * URL category list size which is either 'topSites' or 'fullList'
 * @member {module:model/UpdateNetworkApplianceContentFilteringRequest.UrlCategoryListSizeEnum} urlCategoryListSize
 */
UpdateNetworkApplianceContentFilteringRequest.prototype['urlCategoryListSize'] = undefined;





/**
 * Allowed values for the <code>urlCategoryListSize</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkApplianceContentFilteringRequest['UrlCategoryListSizeEnum'] = {

    /**
     * value: "fullList"
     * @const
     */
    "fullList": "fullList",

    /**
     * value: "topSites"
     * @const
     */
    "topSites": "topSites"
};



export default UpdateNetworkApplianceContentFilteringRequest;

