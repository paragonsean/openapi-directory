/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateOrganizationActionBatch201ResponseActionsInner from './CreateOrganizationActionBatch201ResponseActionsInner';
import CreateOrganizationActionBatch201ResponseStatus from './CreateOrganizationActionBatch201ResponseStatus';

/**
 * The CreateOrganizationActionBatch201Response model module.
 * @module model/CreateOrganizationActionBatch201Response
 * @version 1.32.0
 */
class CreateOrganizationActionBatch201Response {
    /**
     * Constructs a new <code>CreateOrganizationActionBatch201Response</code>.
     * @alias module:model/CreateOrganizationActionBatch201Response
     * @param actions {Array.<module:model/CreateOrganizationActionBatch201ResponseActionsInner>} A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
     */
    constructor(actions) { 
        
        CreateOrganizationActionBatch201Response.initialize(this, actions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, actions) { 
        obj['actions'] = actions;
    }

    /**
     * Constructs a <code>CreateOrganizationActionBatch201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrganizationActionBatch201Response} obj Optional instance to populate.
     * @return {module:model/CreateOrganizationActionBatch201Response} The populated <code>CreateOrganizationActionBatch201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrganizationActionBatch201Response();

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [CreateOrganizationActionBatch201ResponseActionsInner]);
            }
            if (data.hasOwnProperty('confirmed')) {
                obj['confirmed'] = ApiClient.convertToType(data['confirmed'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CreateOrganizationActionBatch201ResponseStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('synchronous')) {
                obj['synchronous'] = ApiClient.convertToType(data['synchronous'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrganizationActionBatch201Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrganizationActionBatch201Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateOrganizationActionBatch201Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['actions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actions'])) {
                throw new Error("Expected the field `actions` to be an array in the JSON data but got " + data['actions']);
            }
            // validate the optional field `actions` (array)
            for (const item of data['actions']) {
                CreateOrganizationActionBatch201ResponseActionsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          CreateOrganizationActionBatch201ResponseStatus.validateJSON(data['status']);
        }

        return true;
    }


}

CreateOrganizationActionBatch201Response.RequiredProperties = ["actions"];

/**
 * A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
 * @member {Array.<module:model/CreateOrganizationActionBatch201ResponseActionsInner>} actions
 */
CreateOrganizationActionBatch201Response.prototype['actions'] = undefined;

/**
 * Flag describing whether the action should be previewed before executing or not
 * @member {Boolean} confirmed
 */
CreateOrganizationActionBatch201Response.prototype['confirmed'] = undefined;

/**
 * ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
 * @member {String} id
 */
CreateOrganizationActionBatch201Response.prototype['id'] = undefined;

/**
 * ID of the organization this action batch belongs to
 * @member {String} organizationId
 */
CreateOrganizationActionBatch201Response.prototype['organizationId'] = undefined;

/**
 * @member {module:model/CreateOrganizationActionBatch201ResponseStatus} status
 */
CreateOrganizationActionBatch201Response.prototype['status'] = undefined;

/**
 * Flag describing whether actions should run synchronously or asynchronously
 * @member {Boolean} synchronous
 */
CreateOrganizationActionBatch201Response.prototype['synchronous'] = undefined;






export default CreateOrganizationActionBatch201Response;

