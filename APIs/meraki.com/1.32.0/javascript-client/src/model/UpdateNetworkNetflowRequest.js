/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateNetworkNetflowRequest model module.
 * @module model/UpdateNetworkNetflowRequest
 * @version 1.32.0
 */
class UpdateNetworkNetflowRequest {
    /**
     * Constructs a new <code>UpdateNetworkNetflowRequest</code>.
     * @alias module:model/UpdateNetworkNetflowRequest
     */
    constructor() { 
        
        UpdateNetworkNetflowRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkNetflowRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkNetflowRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkNetflowRequest} The populated <code>UpdateNetworkNetflowRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkNetflowRequest();

            if (data.hasOwnProperty('collectorIp')) {
                obj['collectorIp'] = ApiClient.convertToType(data['collectorIp'], 'String');
            }
            if (data.hasOwnProperty('collectorPort')) {
                obj['collectorPort'] = ApiClient.convertToType(data['collectorPort'], 'Number');
            }
            if (data.hasOwnProperty('etaDstPort')) {
                obj['etaDstPort'] = ApiClient.convertToType(data['etaDstPort'], 'Number');
            }
            if (data.hasOwnProperty('etaEnabled')) {
                obj['etaEnabled'] = ApiClient.convertToType(data['etaEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('reportingEnabled')) {
                obj['reportingEnabled'] = ApiClient.convertToType(data['reportingEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkNetflowRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkNetflowRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['collectorIp'] && !(typeof data['collectorIp'] === 'string' || data['collectorIp'] instanceof String)) {
            throw new Error("Expected the field `collectorIp` to be a primitive type in the JSON string but got " + data['collectorIp']);
        }

        return true;
    }


}



/**
 * The IPv4 address of the NetFlow collector.
 * @member {String} collectorIp
 */
UpdateNetworkNetflowRequest.prototype['collectorIp'] = undefined;

/**
 * The port that the NetFlow collector will be listening on.
 * @member {Number} collectorPort
 */
UpdateNetworkNetflowRequest.prototype['collectorPort'] = undefined;

/**
 * The port that the Encrypted Traffic Analytics collector will be listening on.
 * @member {Number} etaDstPort
 */
UpdateNetworkNetflowRequest.prototype['etaDstPort'] = undefined;

/**
 * Boolean indicating whether Encrypted Traffic Analytics is enabled (true) or disabled (false).
 * @member {Boolean} etaEnabled
 */
UpdateNetworkNetflowRequest.prototype['etaEnabled'] = undefined;

/**
 * Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
 * @member {Boolean} reportingEnabled
 */
UpdateNetworkNetflowRequest.prototype['reportingEnabled'] = undefined;






export default UpdateNetworkNetflowRequest;

