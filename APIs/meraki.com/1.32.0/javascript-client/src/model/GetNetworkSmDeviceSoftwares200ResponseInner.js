/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetNetworkSmDeviceSoftwares200ResponseInner model module.
 * @module model/GetNetworkSmDeviceSoftwares200ResponseInner
 * @version 1.32.0
 */
class GetNetworkSmDeviceSoftwares200ResponseInner {
    /**
     * Constructs a new <code>GetNetworkSmDeviceSoftwares200ResponseInner</code>.
     * @alias module:model/GetNetworkSmDeviceSoftwares200ResponseInner
     */
    constructor() { 
        
        GetNetworkSmDeviceSoftwares200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkSmDeviceSoftwares200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkSmDeviceSoftwares200ResponseInner} obj Optional instance to populate.
     * @return {module:model/GetNetworkSmDeviceSoftwares200ResponseInner} The populated <code>GetNetworkSmDeviceSoftwares200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkSmDeviceSoftwares200ResponseInner();

            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('bundleSize')) {
                obj['bundleSize'] = ApiClient.convertToType(data['bundleSize'], 'Number');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('dynamicSize')) {
                obj['dynamicSize'] = ApiClient.convertToType(data['dynamicSize'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('installedAt')) {
                obj['installedAt'] = ApiClient.convertToType(data['installedAt'], 'String');
            }
            if (data.hasOwnProperty('iosRedemptionCode')) {
                obj['iosRedemptionCode'] = ApiClient.convertToType(data['iosRedemptionCode'], 'Boolean');
            }
            if (data.hasOwnProperty('isManaged')) {
                obj['isManaged'] = ApiClient.convertToType(data['isManaged'], 'Boolean');
            }
            if (data.hasOwnProperty('itunesId')) {
                obj['itunesId'] = ApiClient.convertToType(data['itunesId'], 'String');
            }
            if (data.hasOwnProperty('licenseKey')) {
                obj['licenseKey'] = ApiClient.convertToType(data['licenseKey'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('redemptionCode')) {
                obj['redemptionCode'] = ApiClient.convertToType(data['redemptionCode'], 'Number');
            }
            if (data.hasOwnProperty('shortVersion')) {
                obj['shortVersion'] = ApiClient.convertToType(data['shortVersion'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('toInstall')) {
                obj['toInstall'] = ApiClient.convertToType(data['toInstall'], 'Boolean');
            }
            if (data.hasOwnProperty('toUninstall')) {
                obj['toUninstall'] = ApiClient.convertToType(data['toUninstall'], 'Boolean');
            }
            if (data.hasOwnProperty('uninstalledAt')) {
                obj['uninstalledAt'] = ApiClient.convertToType(data['uninstalledAt'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkSmDeviceSoftwares200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkSmDeviceSoftwares200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['deviceId'] && !(typeof data['deviceId'] === 'string' || data['deviceId'] instanceof String)) {
            throw new Error("Expected the field `deviceId` to be a primitive type in the JSON string but got " + data['deviceId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['installedAt'] && !(typeof data['installedAt'] === 'string' || data['installedAt'] instanceof String)) {
            throw new Error("Expected the field `installedAt` to be a primitive type in the JSON string but got " + data['installedAt']);
        }
        // ensure the json data is a string
        if (data['itunesId'] && !(typeof data['itunesId'] === 'string' || data['itunesId'] instanceof String)) {
            throw new Error("Expected the field `itunesId` to be a primitive type in the JSON string but got " + data['itunesId']);
        }
        // ensure the json data is a string
        if (data['licenseKey'] && !(typeof data['licenseKey'] === 'string' || data['licenseKey'] instanceof String)) {
            throw new Error("Expected the field `licenseKey` to be a primitive type in the JSON string but got " + data['licenseKey']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['shortVersion'] && !(typeof data['shortVersion'] === 'string' || data['shortVersion'] instanceof String)) {
            throw new Error("Expected the field `shortVersion` to be a primitive type in the JSON string but got " + data['shortVersion']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['uninstalledAt'] && !(typeof data['uninstalledAt'] === 'string' || data['uninstalledAt'] instanceof String)) {
            throw new Error("Expected the field `uninstalledAt` to be a primitive type in the JSON string but got " + data['uninstalledAt']);
        }
        // ensure the json data is a string
        if (data['updatedAt'] && !(typeof data['updatedAt'] === 'string' || data['updatedAt'] instanceof String)) {
            throw new Error("Expected the field `updatedAt` to be a primitive type in the JSON string but got " + data['updatedAt']);
        }
        // ensure the json data is a string
        if (data['vendor'] && !(typeof data['vendor'] === 'string' || data['vendor'] instanceof String)) {
            throw new Error("Expected the field `vendor` to be a primitive type in the JSON string but got " + data['vendor']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * The Meraki managed application Id for this record on a particular device.
 * @member {String} appId
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['appId'] = undefined;

/**
 * The size of the software bundle.
 * @member {Number} bundleSize
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['bundleSize'] = undefined;

/**
 * When the Meraki record for the software was created.
 * @member {String} createdAt
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['createdAt'] = undefined;

/**
 * The Meraki managed device Id.
 * @member {String} deviceId
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['deviceId'] = undefined;

/**
 * The size of the data stored in the application.
 * @member {Number} dynamicSize
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['dynamicSize'] = undefined;

/**
 * The Meraki software Id.
 * @member {String} id
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['id'] = undefined;

/**
 * Software bundle identifier.
 * @member {String} identifier
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['identifier'] = undefined;

/**
 * When the Software was installed on the device.
 * @member {String} installedAt
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['installedAt'] = undefined;

/**
 * A boolean indicating whether or not an iOS redemption code was used.
 * @member {Boolean} iosRedemptionCode
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['iosRedemptionCode'] = undefined;

/**
 * A boolean indicating whether or not the software is managed by Meraki.
 * @member {Boolean} isManaged
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['isManaged'] = undefined;

/**
 * The itunes numerical identifier.
 * @member {String} itunesId
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['itunesId'] = undefined;

/**
 * The license key associated with this software installation.
 * @member {String} licenseKey
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['licenseKey'] = undefined;

/**
 * The name of the software.
 * @member {String} name
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['name'] = undefined;

/**
 * The path on the device where the software record is located.
 * @member {String} path
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['path'] = undefined;

/**
 * The redemption code used for this software.
 * @member {Number} redemptionCode
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['redemptionCode'] = undefined;

/**
 * Short version notation for the software.
 * @member {String} shortVersion
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['shortVersion'] = undefined;

/**
 * The management status of the software.
 * @member {String} status
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['status'] = undefined;

/**
 * A boolean indicating this software record should be installed on the associated device.
 * @member {Boolean} toInstall
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['toInstall'] = undefined;

/**
 * A boolean indicating this software record should be uninstalled on the associated device.
 * @member {Boolean} toUninstall
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['toUninstall'] = undefined;

/**
 * When the record was uninstalled from the device.
 * @member {String} uninstalledAt
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['uninstalledAt'] = undefined;

/**
 * When the record was last updated by Meraki.
 * @member {String} updatedAt
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['updatedAt'] = undefined;

/**
 * The vendor of the software.
 * @member {String} vendor
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['vendor'] = undefined;

/**
 * Full version notation for the software.
 * @member {String} version
 */
GetNetworkSmDeviceSoftwares200ResponseInner.prototype['version'] = undefined;






export default GetNetworkSmDeviceSoftwares200ResponseInner;

