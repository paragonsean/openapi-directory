/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkWirelessAlternateManagementInterfaceRequestAccessPointsInner from './UpdateNetworkWirelessAlternateManagementInterfaceRequestAccessPointsInner';

/**
 * The UpdateNetworkWirelessAlternateManagementInterfaceRequest model module.
 * @module model/UpdateNetworkWirelessAlternateManagementInterfaceRequest
 * @version 1.32.0
 */
class UpdateNetworkWirelessAlternateManagementInterfaceRequest {
    /**
     * Constructs a new <code>UpdateNetworkWirelessAlternateManagementInterfaceRequest</code>.
     * @alias module:model/UpdateNetworkWirelessAlternateManagementInterfaceRequest
     */
    constructor() { 
        
        UpdateNetworkWirelessAlternateManagementInterfaceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkWirelessAlternateManagementInterfaceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkWirelessAlternateManagementInterfaceRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkWirelessAlternateManagementInterfaceRequest} The populated <code>UpdateNetworkWirelessAlternateManagementInterfaceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkWirelessAlternateManagementInterfaceRequest();

            if (data.hasOwnProperty('accessPoints')) {
                obj['accessPoints'] = ApiClient.convertToType(data['accessPoints'], [UpdateNetworkWirelessAlternateManagementInterfaceRequestAccessPointsInner]);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('protocols')) {
                obj['protocols'] = ApiClient.convertToType(data['protocols'], ['String']);
            }
            if (data.hasOwnProperty('vlanId')) {
                obj['vlanId'] = ApiClient.convertToType(data['vlanId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkWirelessAlternateManagementInterfaceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkWirelessAlternateManagementInterfaceRequest</code>.
     */
    static validateJSON(data) {
        if (data['accessPoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accessPoints'])) {
                throw new Error("Expected the field `accessPoints` to be an array in the JSON data but got " + data['accessPoints']);
            }
            // validate the optional field `accessPoints` (array)
            for (const item of data['accessPoints']) {
                UpdateNetworkWirelessAlternateManagementInterfaceRequestAccessPointsInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['protocols'])) {
            throw new Error("Expected the field `protocols` to be an array in the JSON data but got " + data['protocols']);
        }

        return true;
    }


}



/**
 * Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments
 * @member {Array.<module:model/UpdateNetworkWirelessAlternateManagementInterfaceRequestAccessPointsInner>} accessPoints
 */
UpdateNetworkWirelessAlternateManagementInterfaceRequest.prototype['accessPoints'] = undefined;

/**
 * Boolean value to enable or disable alternate management interface
 * @member {Boolean} enabled
 */
UpdateNetworkWirelessAlternateManagementInterfaceRequest.prototype['enabled'] = undefined;

/**
 * Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'
 * @member {Array.<module:model/UpdateNetworkWirelessAlternateManagementInterfaceRequest.ProtocolsEnum>} protocols
 */
UpdateNetworkWirelessAlternateManagementInterfaceRequest.prototype['protocols'] = undefined;

/**
 * Alternate management interface VLAN, must be between 1 and 4094
 * @member {Number} vlanId
 */
UpdateNetworkWirelessAlternateManagementInterfaceRequest.prototype['vlanId'] = undefined;





/**
 * Allowed values for the <code>protocols</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkWirelessAlternateManagementInterfaceRequest['ProtocolsEnum'] = {

    /**
     * value: "ldap"
     * @const
     */
    "ldap": "ldap",

    /**
     * value: "radius"
     * @const
     */
    "radius": "radius",

    /**
     * value: "snmp"
     * @const
     */
    "snmp": "snmp",

    /**
     * value: "syslog"
     * @const
     */
    "syslog": "syslog"
};



export default UpdateNetworkWirelessAlternateManagementInterfaceRequest;

