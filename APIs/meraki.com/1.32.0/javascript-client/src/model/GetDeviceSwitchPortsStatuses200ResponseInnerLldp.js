/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetDeviceSwitchPortsStatuses200ResponseInnerLldp model module.
 * @module model/GetDeviceSwitchPortsStatuses200ResponseInnerLldp
 * @version 1.32.0
 */
class GetDeviceSwitchPortsStatuses200ResponseInnerLldp {
    /**
     * Constructs a new <code>GetDeviceSwitchPortsStatuses200ResponseInnerLldp</code>.
     * The Link Layer Discovery Protocol (LLDP) information of the connected device.
     * @alias module:model/GetDeviceSwitchPortsStatuses200ResponseInnerLldp
     */
    constructor() { 
        
        GetDeviceSwitchPortsStatuses200ResponseInnerLldp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDeviceSwitchPortsStatuses200ResponseInnerLldp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDeviceSwitchPortsStatuses200ResponseInnerLldp} obj Optional instance to populate.
     * @return {module:model/GetDeviceSwitchPortsStatuses200ResponseInnerLldp} The populated <code>GetDeviceSwitchPortsStatuses200ResponseInnerLldp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDeviceSwitchPortsStatuses200ResponseInnerLldp();

            if (data.hasOwnProperty('chassisId')) {
                obj['chassisId'] = ApiClient.convertToType(data['chassisId'], 'String');
            }
            if (data.hasOwnProperty('managementAddress')) {
                obj['managementAddress'] = ApiClient.convertToType(data['managementAddress'], 'String');
            }
            if (data.hasOwnProperty('managementVlan')) {
                obj['managementVlan'] = ApiClient.convertToType(data['managementVlan'], 'Number');
            }
            if (data.hasOwnProperty('portDescription')) {
                obj['portDescription'] = ApiClient.convertToType(data['portDescription'], 'String');
            }
            if (data.hasOwnProperty('portId')) {
                obj['portId'] = ApiClient.convertToType(data['portId'], 'String');
            }
            if (data.hasOwnProperty('portVlan')) {
                obj['portVlan'] = ApiClient.convertToType(data['portVlan'], 'Number');
            }
            if (data.hasOwnProperty('systemCapabilities')) {
                obj['systemCapabilities'] = ApiClient.convertToType(data['systemCapabilities'], 'String');
            }
            if (data.hasOwnProperty('systemDescription')) {
                obj['systemDescription'] = ApiClient.convertToType(data['systemDescription'], 'String');
            }
            if (data.hasOwnProperty('systemName')) {
                obj['systemName'] = ApiClient.convertToType(data['systemName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDeviceSwitchPortsStatuses200ResponseInnerLldp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDeviceSwitchPortsStatuses200ResponseInnerLldp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chassisId'] && !(typeof data['chassisId'] === 'string' || data['chassisId'] instanceof String)) {
            throw new Error("Expected the field `chassisId` to be a primitive type in the JSON string but got " + data['chassisId']);
        }
        // ensure the json data is a string
        if (data['managementAddress'] && !(typeof data['managementAddress'] === 'string' || data['managementAddress'] instanceof String)) {
            throw new Error("Expected the field `managementAddress` to be a primitive type in the JSON string but got " + data['managementAddress']);
        }
        // ensure the json data is a string
        if (data['portDescription'] && !(typeof data['portDescription'] === 'string' || data['portDescription'] instanceof String)) {
            throw new Error("Expected the field `portDescription` to be a primitive type in the JSON string but got " + data['portDescription']);
        }
        // ensure the json data is a string
        if (data['portId'] && !(typeof data['portId'] === 'string' || data['portId'] instanceof String)) {
            throw new Error("Expected the field `portId` to be a primitive type in the JSON string but got " + data['portId']);
        }
        // ensure the json data is a string
        if (data['systemCapabilities'] && !(typeof data['systemCapabilities'] === 'string' || data['systemCapabilities'] instanceof String)) {
            throw new Error("Expected the field `systemCapabilities` to be a primitive type in the JSON string but got " + data['systemCapabilities']);
        }
        // ensure the json data is a string
        if (data['systemDescription'] && !(typeof data['systemDescription'] === 'string' || data['systemDescription'] instanceof String)) {
            throw new Error("Expected the field `systemDescription` to be a primitive type in the JSON string but got " + data['systemDescription']);
        }
        // ensure the json data is a string
        if (data['systemName'] && !(typeof data['systemName'] === 'string' || data['systemName'] instanceof String)) {
            throw new Error("Expected the field `systemName` to be a primitive type in the JSON string but got " + data['systemName']);
        }

        return true;
    }


}



/**
 * The device's chassis ID.
 * @member {String} chassisId
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['chassisId'] = undefined;

/**
 * The device's management IP.
 * @member {String} managementAddress
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['managementAddress'] = undefined;

/**
 * The device's management VLAN.
 * @member {Number} managementVlan
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['managementVlan'] = undefined;

/**
 * Description of the port from which the LLDP packet was sent.
 * @member {String} portDescription
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['portDescription'] = undefined;

/**
 * Identifies the port from which the LLDP packet was sent
 * @member {String} portId
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['portId'] = undefined;

/**
 * The port's VLAN.
 * @member {Number} portVlan
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['portVlan'] = undefined;

/**
 * Identifies the device type, which indicates the functional capabilities of the device.
 * @member {String} systemCapabilities
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['systemCapabilities'] = undefined;

/**
 * The device's system description.
 * @member {String} systemDescription
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['systemDescription'] = undefined;

/**
 * The device's system name.
 * @member {String} systemName
 */
GetDeviceSwitchPortsStatuses200ResponseInnerLldp.prototype['systemName'] = undefined;






export default GetDeviceSwitchPortsStatuses200ResponseInnerLldp;

