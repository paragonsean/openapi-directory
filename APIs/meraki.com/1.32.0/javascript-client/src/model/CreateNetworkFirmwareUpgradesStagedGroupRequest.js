/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices from './CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices';

/**
 * The CreateNetworkFirmwareUpgradesStagedGroupRequest model module.
 * @module model/CreateNetworkFirmwareUpgradesStagedGroupRequest
 * @version 1.32.0
 */
class CreateNetworkFirmwareUpgradesStagedGroupRequest {
    /**
     * Constructs a new <code>CreateNetworkFirmwareUpgradesStagedGroupRequest</code>.
     * @alias module:model/CreateNetworkFirmwareUpgradesStagedGroupRequest
     * @param isDefault {Boolean} Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
     * @param name {String} Name of the Staged Upgrade Group. Length must be 1 to 255 characters
     */
    constructor(isDefault, name) { 
        
        CreateNetworkFirmwareUpgradesStagedGroupRequest.initialize(this, isDefault, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isDefault, name) { 
        obj['isDefault'] = isDefault;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateNetworkFirmwareUpgradesStagedGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkFirmwareUpgradesStagedGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateNetworkFirmwareUpgradesStagedGroupRequest} The populated <code>CreateNetworkFirmwareUpgradesStagedGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkFirmwareUpgradesStagedGroupRequest();

            if (data.hasOwnProperty('assignedDevices')) {
                obj['assignedDevices'] = CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.constructFromObject(data['assignedDevices']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkFirmwareUpgradesStagedGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkFirmwareUpgradesStagedGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkFirmwareUpgradesStagedGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `assignedDevices`
        if (data['assignedDevices']) { // data not null
          CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.validateJSON(data['assignedDevices']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CreateNetworkFirmwareUpgradesStagedGroupRequest.RequiredProperties = ["isDefault", "name"];

/**
 * @member {module:model/CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices} assignedDevices
 */
CreateNetworkFirmwareUpgradesStagedGroupRequest.prototype['assignedDevices'] = undefined;

/**
 * Description of the Staged Upgrade Group. Length must be 1 to 255 characters
 * @member {String} description
 */
CreateNetworkFirmwareUpgradesStagedGroupRequest.prototype['description'] = undefined;

/**
 * Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
 * @member {Boolean} isDefault
 */
CreateNetworkFirmwareUpgradesStagedGroupRequest.prototype['isDefault'] = undefined;

/**
 * Name of the Staged Upgrade Group. Length must be 1 to 255 characters
 * @member {String} name
 */
CreateNetworkFirmwareUpgradesStagedGroupRequest.prototype['name'] = undefined;






export default CreateNetworkFirmwareUpgradesStagedGroupRequest;

