/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner model module.
 * @module model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner
 * @version 1.32.0
 */
class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner {
    /**
     * Constructs a new <code>UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner</code>.
     * @alias module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner
     * @param devicePolicy {module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.DevicePolicyEnum} The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'
     * @param deviceType {module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.DeviceTypeEnum} The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'
     */
    constructor(devicePolicy, deviceType) { 
        
        UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.initialize(this, devicePolicy, deviceType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, devicePolicy, deviceType) { 
        obj['devicePolicy'] = devicePolicy;
        obj['deviceType'] = deviceType;
    }

    /**
     * Constructs a <code>UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner} The populated <code>UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner();

            if (data.hasOwnProperty('devicePolicy')) {
                obj['devicePolicy'] = ApiClient.convertToType(data['devicePolicy'], 'String');
            }
            if (data.hasOwnProperty('deviceType')) {
                obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
            }
            if (data.hasOwnProperty('groupPolicyId')) {
                obj['groupPolicyId'] = ApiClient.convertToType(data['groupPolicyId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['devicePolicy'] && !(typeof data['devicePolicy'] === 'string' || data['devicePolicy'] instanceof String)) {
            throw new Error("Expected the field `devicePolicy` to be a primitive type in the JSON string but got " + data['devicePolicy']);
        }
        // ensure the json data is a string
        if (data['deviceType'] && !(typeof data['deviceType'] === 'string' || data['deviceType'] instanceof String)) {
            throw new Error("Expected the field `deviceType` to be a primitive type in the JSON string but got " + data['deviceType']);
        }

        return true;
    }


}

UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.RequiredProperties = ["devicePolicy", "deviceType"];

/**
 * The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'
 * @member {module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.DevicePolicyEnum} devicePolicy
 */
UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.prototype['devicePolicy'] = undefined;

/**
 * The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'
 * @member {module:model/UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.DeviceTypeEnum} deviceType
 */
UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.prototype['deviceType'] = undefined;

/**
 * ID of the group policy object.
 * @member {Number} groupPolicyId
 */
UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.prototype['groupPolicyId'] = undefined;





/**
 * Allowed values for the <code>devicePolicy</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner['DevicePolicyEnum'] = {

    /**
     * value: "Allowed"
     * @const
     */
    "Allowed": "Allowed",

    /**
     * value: "Blocked"
     * @const
     */
    "Blocked": "Blocked",

    /**
     * value: "Group policy"
     * @const
     */
    "Group policy": "Group policy"
};


/**
 * Allowed values for the <code>deviceType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner['DeviceTypeEnum'] = {

    /**
     * value: "Android"
     * @const
     */
    "Android": "Android",

    /**
     * value: "B&N Nook"
     * @const
     */
    "B&amp;N Nook": "B&N Nook",

    /**
     * value: "BlackBerry"
     * @const
     */
    "BlackBerry": "BlackBerry",

    /**
     * value: "Chrome OS"
     * @const
     */
    "Chrome OS": "Chrome OS",

    /**
     * value: "Mac OS X"
     * @const
     */
    "Mac OS X": "Mac OS X",

    /**
     * value: "Other OS"
     * @const
     */
    "Other OS": "Other OS",

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "Windows Phone"
     * @const
     */
    "Windows Phone": "Windows Phone",

    /**
     * value: "iPad"
     * @const
     */
    "iPad": "iPad",

    /**
     * value: "iPhone"
     * @const
     */
    "iPhone": "iPhone",

    /**
     * value: "iPod"
     * @const
     */
    "iPod": "iPod"
};



export default UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner;

