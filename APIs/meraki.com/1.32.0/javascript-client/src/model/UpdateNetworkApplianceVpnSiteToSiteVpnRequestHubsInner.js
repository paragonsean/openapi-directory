/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner model module.
 * @module model/UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner
 * @version 1.32.0
 */
class UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner {
    /**
     * Constructs a new <code>UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner</code>.
     * @alias module:model/UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner
     * @param hubId {String} The network ID of the hub.
     */
    constructor(hubId) { 
        
        UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner.initialize(this, hubId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hubId) { 
        obj['hubId'] = hubId;
    }

    /**
     * Constructs a <code>UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner} The populated <code>UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner();

            if (data.hasOwnProperty('hubId')) {
                obj['hubId'] = ApiClient.convertToType(data['hubId'], 'String');
            }
            if (data.hasOwnProperty('useDefaultRoute')) {
                obj['useDefaultRoute'] = ApiClient.convertToType(data['useDefaultRoute'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['hubId'] && !(typeof data['hubId'] === 'string' || data['hubId'] instanceof String)) {
            throw new Error("Expected the field `hubId` to be a primitive type in the JSON string but got " + data['hubId']);
        }

        return true;
    }


}

UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner.RequiredProperties = ["hubId"];

/**
 * The network ID of the hub.
 * @member {String} hubId
 */
UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner.prototype['hubId'] = undefined;

/**
 * Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.
 * @member {Boolean} useDefaultRoute
 */
UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner.prototype['useDefaultRoute'] = undefined;






export default UpdateNetworkApplianceVpnSiteToSiteVpnRequestHubsInner;

