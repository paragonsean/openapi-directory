/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner model module.
 * @module model/GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner
 * @version 1.32.0
 */
class GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner {
    /**
     * Constructs a new <code>GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner</code>.
     * @alias module:model/GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner
     */
    constructor() { 
        
        GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner} obj Optional instance to populate.
     * @return {module:model/GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner} The populated <code>GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner();

            if (data.hasOwnProperty('durationInDays')) {
                obj['durationInDays'] = ApiClient.convertToType(data['durationInDays'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('licenseKey')) {
                obj['licenseKey'] = ApiClient.convertToType(data['licenseKey'], 'String');
            }
            if (data.hasOwnProperty('licenseType')) {
                obj['licenseType'] = ApiClient.convertToType(data['licenseType'], 'String');
            }
            if (data.hasOwnProperty('orderNumber')) {
                obj['orderNumber'] = ApiClient.convertToType(data['orderNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['licenseKey'] && !(typeof data['licenseKey'] === 'string' || data['licenseKey'] instanceof String)) {
            throw new Error("Expected the field `licenseKey` to be a primitive type in the JSON string but got " + data['licenseKey']);
        }
        // ensure the json data is a string
        if (data['licenseType'] && !(typeof data['licenseType'] === 'string' || data['licenseType'] instanceof String)) {
            throw new Error("Expected the field `licenseType` to be a primitive type in the JSON string but got " + data['licenseType']);
        }
        // ensure the json data is a string
        if (data['orderNumber'] && !(typeof data['orderNumber'] === 'string' || data['orderNumber'] instanceof String)) {
            throw new Error("Expected the field `orderNumber` to be a primitive type in the JSON string but got " + data['orderNumber']);
        }

        return true;
    }


}



/**
 * The duration of the individual license
 * @member {Number} durationInDays
 */
GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner.prototype['durationInDays'] = undefined;

/**
 * Permanently queued license ID
 * @member {String} id
 */
GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner.prototype['id'] = undefined;

/**
 * License key
 * @member {String} licenseKey
 */
GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner.prototype['licenseKey'] = undefined;

/**
 * License type
 * @member {String} licenseType
 */
GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner.prototype['licenseType'] = undefined;

/**
 * Order number
 * @member {String} orderNumber
 */
GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner.prototype['orderNumber'] = undefined;






export default GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner;

