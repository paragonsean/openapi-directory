/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateOrganizationAdaptivePolicyPolicyRequestAclsInner from './CreateOrganizationAdaptivePolicyPolicyRequestAclsInner';
import CreateOrganizationAdaptivePolicyPolicyRequestDestinationGroup from './CreateOrganizationAdaptivePolicyPolicyRequestDestinationGroup';
import CreateOrganizationAdaptivePolicyPolicyRequestSourceGroup from './CreateOrganizationAdaptivePolicyPolicyRequestSourceGroup';

/**
 * The CreateOrganizationAdaptivePolicyPolicyRequest model module.
 * @module model/CreateOrganizationAdaptivePolicyPolicyRequest
 * @version 1.32.0
 */
class CreateOrganizationAdaptivePolicyPolicyRequest {
    /**
     * Constructs a new <code>CreateOrganizationAdaptivePolicyPolicyRequest</code>.
     * @alias module:model/CreateOrganizationAdaptivePolicyPolicyRequest
     * @param destinationGroup {module:model/CreateOrganizationAdaptivePolicyPolicyRequestDestinationGroup} 
     * @param sourceGroup {module:model/CreateOrganizationAdaptivePolicyPolicyRequestSourceGroup} 
     */
    constructor(destinationGroup, sourceGroup) { 
        
        CreateOrganizationAdaptivePolicyPolicyRequest.initialize(this, destinationGroup, sourceGroup);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationGroup, sourceGroup) { 
        obj['destinationGroup'] = destinationGroup;
        obj['sourceGroup'] = sourceGroup;
    }

    /**
     * Constructs a <code>CreateOrganizationAdaptivePolicyPolicyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrganizationAdaptivePolicyPolicyRequest} obj Optional instance to populate.
     * @return {module:model/CreateOrganizationAdaptivePolicyPolicyRequest} The populated <code>CreateOrganizationAdaptivePolicyPolicyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrganizationAdaptivePolicyPolicyRequest();

            if (data.hasOwnProperty('acls')) {
                obj['acls'] = ApiClient.convertToType(data['acls'], [CreateOrganizationAdaptivePolicyPolicyRequestAclsInner]);
            }
            if (data.hasOwnProperty('destinationGroup')) {
                obj['destinationGroup'] = CreateOrganizationAdaptivePolicyPolicyRequestDestinationGroup.constructFromObject(data['destinationGroup']);
            }
            if (data.hasOwnProperty('lastEntryRule')) {
                obj['lastEntryRule'] = ApiClient.convertToType(data['lastEntryRule'], 'String');
            }
            if (data.hasOwnProperty('sourceGroup')) {
                obj['sourceGroup'] = CreateOrganizationAdaptivePolicyPolicyRequestSourceGroup.constructFromObject(data['sourceGroup']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrganizationAdaptivePolicyPolicyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrganizationAdaptivePolicyPolicyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateOrganizationAdaptivePolicyPolicyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['acls']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['acls'])) {
                throw new Error("Expected the field `acls` to be an array in the JSON data but got " + data['acls']);
            }
            // validate the optional field `acls` (array)
            for (const item of data['acls']) {
                CreateOrganizationAdaptivePolicyPolicyRequestAclsInner.validateJSON(item);
            };
        }
        // validate the optional field `destinationGroup`
        if (data['destinationGroup']) { // data not null
          CreateOrganizationAdaptivePolicyPolicyRequestDestinationGroup.validateJSON(data['destinationGroup']);
        }
        // ensure the json data is a string
        if (data['lastEntryRule'] && !(typeof data['lastEntryRule'] === 'string' || data['lastEntryRule'] instanceof String)) {
            throw new Error("Expected the field `lastEntryRule` to be a primitive type in the JSON string but got " + data['lastEntryRule']);
        }
        // validate the optional field `sourceGroup`
        if (data['sourceGroup']) { // data not null
          CreateOrganizationAdaptivePolicyPolicyRequestSourceGroup.validateJSON(data['sourceGroup']);
        }

        return true;
    }


}

CreateOrganizationAdaptivePolicyPolicyRequest.RequiredProperties = ["destinationGroup", "sourceGroup"];

/**
 * An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
 * @member {Array.<module:model/CreateOrganizationAdaptivePolicyPolicyRequestAclsInner>} acls
 */
CreateOrganizationAdaptivePolicyPolicyRequest.prototype['acls'] = undefined;

/**
 * @member {module:model/CreateOrganizationAdaptivePolicyPolicyRequestDestinationGroup} destinationGroup
 */
CreateOrganizationAdaptivePolicyPolicyRequest.prototype['destinationGroup'] = undefined;

/**
 * The rule to apply if there is no matching ACL (default: \"default\")
 * @member {module:model/CreateOrganizationAdaptivePolicyPolicyRequest.LastEntryRuleEnum} lastEntryRule
 */
CreateOrganizationAdaptivePolicyPolicyRequest.prototype['lastEntryRule'] = undefined;

/**
 * @member {module:model/CreateOrganizationAdaptivePolicyPolicyRequestSourceGroup} sourceGroup
 */
CreateOrganizationAdaptivePolicyPolicyRequest.prototype['sourceGroup'] = undefined;





/**
 * Allowed values for the <code>lastEntryRule</code> property.
 * @enum {String}
 * @readonly
 */
CreateOrganizationAdaptivePolicyPolicyRequest['LastEntryRuleEnum'] = {

    /**
     * value: "allow"
     * @const
     */
    "allow": "allow",

    /**
     * value: "default"
     * @const
     */
    "default": "default",

    /**
     * value: "deny"
     * @const
     */
    "deny": "deny"
};



export default CreateOrganizationAdaptivePolicyPolicyRequest;

