/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetOrganizationWebhooksLogs200ResponseInner model module.
 * @module model/GetOrganizationWebhooksLogs200ResponseInner
 * @version 1.32.0
 */
class GetOrganizationWebhooksLogs200ResponseInner {
    /**
     * Constructs a new <code>GetOrganizationWebhooksLogs200ResponseInner</code>.
     * @alias module:model/GetOrganizationWebhooksLogs200ResponseInner
     */
    constructor() { 
        
        GetOrganizationWebhooksLogs200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationWebhooksLogs200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationWebhooksLogs200ResponseInner} obj Optional instance to populate.
     * @return {module:model/GetOrganizationWebhooksLogs200ResponseInner} The populated <code>GetOrganizationWebhooksLogs200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationWebhooksLogs200ResponseInner();

            if (data.hasOwnProperty('alertType')) {
                obj['alertType'] = ApiClient.convertToType(data['alertType'], 'String');
            }
            if (data.hasOwnProperty('loggedAt')) {
                obj['loggedAt'] = ApiClient.convertToType(data['loggedAt'], 'Date');
            }
            if (data.hasOwnProperty('networkId')) {
                obj['networkId'] = ApiClient.convertToType(data['networkId'], 'String');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('responseCode')) {
                obj['responseCode'] = ApiClient.convertToType(data['responseCode'], 'Number');
            }
            if (data.hasOwnProperty('responseDuration')) {
                obj['responseDuration'] = ApiClient.convertToType(data['responseDuration'], 'Number');
            }
            if (data.hasOwnProperty('sentAt')) {
                obj['sentAt'] = ApiClient.convertToType(data['sentAt'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationWebhooksLogs200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationWebhooksLogs200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alertType'] && !(typeof data['alertType'] === 'string' || data['alertType'] instanceof String)) {
            throw new Error("Expected the field `alertType` to be a primitive type in the JSON string but got " + data['alertType']);
        }
        // ensure the json data is a string
        if (data['networkId'] && !(typeof data['networkId'] === 'string' || data['networkId'] instanceof String)) {
            throw new Error("Expected the field `networkId` to be a primitive type in the JSON string but got " + data['networkId']);
        }
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Type of alert that the webhook is delivering
 * @member {String} alertType
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['alertType'] = undefined;

/**
 * When the webhook log was created, in ISO8601 format
 * @member {Date} loggedAt
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['loggedAt'] = undefined;

/**
 * Network ID for the webhook log
 * @member {String} networkId
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['networkId'] = undefined;

/**
 * ID for the webhook log's organization
 * @member {String} organizationId
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['organizationId'] = undefined;

/**
 * Response code from the webhook
 * @member {Number} responseCode
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['responseCode'] = undefined;

/**
 * Duration of the response, in milliseconds
 * @member {Number} responseDuration
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['responseDuration'] = undefined;

/**
 * When the webhook was sent, in ISO8601 format
 * @member {Date} sentAt
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['sentAt'] = undefined;

/**
 * URL where the webhook was sent
 * @member {String} url
 */
GetOrganizationWebhooksLogs200ResponseInner.prototype['url'] = undefined;






export default GetOrganizationWebhooksLogs200ResponseInner;

