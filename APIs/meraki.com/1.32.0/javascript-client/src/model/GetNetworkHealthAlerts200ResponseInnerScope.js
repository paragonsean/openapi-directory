/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner from './GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner';
import GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner from './GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner';
import GetNetworkHealthAlerts200ResponseInnerScopePeersInner from './GetNetworkHealthAlerts200ResponseInnerScopePeersInner';

/**
 * The GetNetworkHealthAlerts200ResponseInnerScope model module.
 * @module model/GetNetworkHealthAlerts200ResponseInnerScope
 * @version 1.32.0
 */
class GetNetworkHealthAlerts200ResponseInnerScope {
    /**
     * Constructs a new <code>GetNetworkHealthAlerts200ResponseInnerScope</code>.
     * The scope of the alert
     * @alias module:model/GetNetworkHealthAlerts200ResponseInnerScope
     */
    constructor() { 
        
        GetNetworkHealthAlerts200ResponseInnerScope.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkHealthAlerts200ResponseInnerScope</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkHealthAlerts200ResponseInnerScope} obj Optional instance to populate.
     * @return {module:model/GetNetworkHealthAlerts200ResponseInnerScope} The populated <code>GetNetworkHealthAlerts200ResponseInnerScope</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkHealthAlerts200ResponseInnerScope();

            if (data.hasOwnProperty('applications')) {
                obj['applications'] = ApiClient.convertToType(data['applications'], [GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner]);
            }
            if (data.hasOwnProperty('devices')) {
                obj['devices'] = ApiClient.convertToType(data['devices'], [GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner]);
            }
            if (data.hasOwnProperty('peers')) {
                obj['peers'] = ApiClient.convertToType(data['peers'], [GetNetworkHealthAlerts200ResponseInnerScopePeersInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkHealthAlerts200ResponseInnerScope</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkHealthAlerts200ResponseInnerScope</code>.
     */
    static validateJSON(data) {
        if (data['applications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applications'])) {
                throw new Error("Expected the field `applications` to be an array in the JSON data but got " + data['applications']);
            }
            // validate the optional field `applications` (array)
            for (const item of data['applications']) {
                GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner.validateJSON(item);
            };
        }
        if (data['devices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['devices'])) {
                throw new Error("Expected the field `devices` to be an array in the JSON data but got " + data['devices']);
            }
            // validate the optional field `devices` (array)
            for (const item of data['devices']) {
                GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.validateJSON(item);
            };
        }
        if (data['peers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['peers'])) {
                throw new Error("Expected the field `peers` to be an array in the JSON data but got " + data['peers']);
            }
            // validate the optional field `peers` (array)
            for (const item of data['peers']) {
                GetNetworkHealthAlerts200ResponseInnerScopePeersInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Applications related to the alert
 * @member {Array.<module:model/GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner>} applications
 */
GetNetworkHealthAlerts200ResponseInnerScope.prototype['applications'] = undefined;

/**
 * Devices related to the alert
 * @member {Array.<module:model/GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner>} devices
 */
GetNetworkHealthAlerts200ResponseInnerScope.prototype['devices'] = undefined;

/**
 * Peers related to the alert
 * @member {Array.<module:model/GetNetworkHealthAlerts200ResponseInnerScopePeersInner>} peers
 */
GetNetworkHealthAlerts200ResponseInnerScope.prototype['peers'] = undefined;






export default GetNetworkHealthAlerts200ResponseInnerScope;

