/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkApplianceSingleLanRequestIpv6 from './UpdateNetworkApplianceSingleLanRequestIpv6';
import UpdateNetworkApplianceSingleLanRequestMandatoryDhcp from './UpdateNetworkApplianceSingleLanRequestMandatoryDhcp';

/**
 * The UpdateNetworkApplianceSingleLanRequest model module.
 * @module model/UpdateNetworkApplianceSingleLanRequest
 * @version 1.32.0
 */
class UpdateNetworkApplianceSingleLanRequest {
    /**
     * Constructs a new <code>UpdateNetworkApplianceSingleLanRequest</code>.
     * @alias module:model/UpdateNetworkApplianceSingleLanRequest
     */
    constructor() { 
        
        UpdateNetworkApplianceSingleLanRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkApplianceSingleLanRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkApplianceSingleLanRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkApplianceSingleLanRequest} The populated <code>UpdateNetworkApplianceSingleLanRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkApplianceSingleLanRequest();

            if (data.hasOwnProperty('applianceIp')) {
                obj['applianceIp'] = ApiClient.convertToType(data['applianceIp'], 'String');
            }
            if (data.hasOwnProperty('ipv6')) {
                obj['ipv6'] = UpdateNetworkApplianceSingleLanRequestIpv6.constructFromObject(data['ipv6']);
            }
            if (data.hasOwnProperty('mandatoryDhcp')) {
                obj['mandatoryDhcp'] = UpdateNetworkApplianceSingleLanRequestMandatoryDhcp.constructFromObject(data['mandatoryDhcp']);
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkApplianceSingleLanRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkApplianceSingleLanRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applianceIp'] && !(typeof data['applianceIp'] === 'string' || data['applianceIp'] instanceof String)) {
            throw new Error("Expected the field `applianceIp` to be a primitive type in the JSON string but got " + data['applianceIp']);
        }
        // validate the optional field `ipv6`
        if (data['ipv6']) { // data not null
          UpdateNetworkApplianceSingleLanRequestIpv6.validateJSON(data['ipv6']);
        }
        // validate the optional field `mandatoryDhcp`
        if (data['mandatoryDhcp']) { // data not null
          UpdateNetworkApplianceSingleLanRequestMandatoryDhcp.validateJSON(data['mandatoryDhcp']);
        }
        // ensure the json data is a string
        if (data['subnet'] && !(typeof data['subnet'] === 'string' || data['subnet'] instanceof String)) {
            throw new Error("Expected the field `subnet` to be a primitive type in the JSON string but got " + data['subnet']);
        }

        return true;
    }


}



/**
 * The appliance IP address of the single LAN
 * @member {String} applianceIp
 */
UpdateNetworkApplianceSingleLanRequest.prototype['applianceIp'] = undefined;

/**
 * @member {module:model/UpdateNetworkApplianceSingleLanRequestIpv6} ipv6
 */
UpdateNetworkApplianceSingleLanRequest.prototype['ipv6'] = undefined;

/**
 * @member {module:model/UpdateNetworkApplianceSingleLanRequestMandatoryDhcp} mandatoryDhcp
 */
UpdateNetworkApplianceSingleLanRequest.prototype['mandatoryDhcp'] = undefined;

/**
 * The subnet of the single LAN configuration
 * @member {String} subnet
 */
UpdateNetworkApplianceSingleLanRequest.prototype['subnet'] = undefined;






export default UpdateNetworkApplianceSingleLanRequest;

