/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateOrganizationBrandingPolicyRequestHelpSettings from './CreateOrganizationBrandingPolicyRequestHelpSettings';
import GetOrganizationBrandingPolicies200ResponseInnerAdminSettings from './GetOrganizationBrandingPolicies200ResponseInnerAdminSettings';
import GetOrganizationBrandingPolicies200ResponseInnerCustomLogo from './GetOrganizationBrandingPolicies200ResponseInnerCustomLogo';

/**
 * The CreateOrganizationBrandingPolicy201Response model module.
 * @module model/CreateOrganizationBrandingPolicy201Response
 * @version 1.32.0
 */
class CreateOrganizationBrandingPolicy201Response {
    /**
     * Constructs a new <code>CreateOrganizationBrandingPolicy201Response</code>.
     * @alias module:model/CreateOrganizationBrandingPolicy201Response
     */
    constructor() { 
        
        CreateOrganizationBrandingPolicy201Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateOrganizationBrandingPolicy201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrganizationBrandingPolicy201Response} obj Optional instance to populate.
     * @return {module:model/CreateOrganizationBrandingPolicy201Response} The populated <code>CreateOrganizationBrandingPolicy201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrganizationBrandingPolicy201Response();

            if (data.hasOwnProperty('adminSettings')) {
                obj['adminSettings'] = GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.constructFromObject(data['adminSettings']);
            }
            if (data.hasOwnProperty('customLogo')) {
                obj['customLogo'] = GetOrganizationBrandingPolicies200ResponseInnerCustomLogo.constructFromObject(data['customLogo']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('helpSettings')) {
                obj['helpSettings'] = CreateOrganizationBrandingPolicyRequestHelpSettings.constructFromObject(data['helpSettings']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrganizationBrandingPolicy201Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrganizationBrandingPolicy201Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adminSettings`
        if (data['adminSettings']) { // data not null
          GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.validateJSON(data['adminSettings']);
        }
        // validate the optional field `customLogo`
        if (data['customLogo']) { // data not null
          GetOrganizationBrandingPolicies200ResponseInnerCustomLogo.validateJSON(data['customLogo']);
        }
        // validate the optional field `helpSettings`
        if (data['helpSettings']) { // data not null
          CreateOrganizationBrandingPolicyRequestHelpSettings.validateJSON(data['helpSettings']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetOrganizationBrandingPolicies200ResponseInnerAdminSettings} adminSettings
 */
CreateOrganizationBrandingPolicy201Response.prototype['adminSettings'] = undefined;

/**
 * @member {module:model/GetOrganizationBrandingPolicies200ResponseInnerCustomLogo} customLogo
 */
CreateOrganizationBrandingPolicy201Response.prototype['customLogo'] = undefined;

/**
 * Boolean indicating whether this policy is enabled.
 * @member {Boolean} enabled
 */
CreateOrganizationBrandingPolicy201Response.prototype['enabled'] = undefined;

/**
 * @member {module:model/CreateOrganizationBrandingPolicyRequestHelpSettings} helpSettings
 */
CreateOrganizationBrandingPolicy201Response.prototype['helpSettings'] = undefined;

/**
 * Name of the Dashboard branding policy.
 * @member {String} name
 */
CreateOrganizationBrandingPolicy201Response.prototype['name'] = undefined;






export default CreateOrganizationBrandingPolicy201Response;

