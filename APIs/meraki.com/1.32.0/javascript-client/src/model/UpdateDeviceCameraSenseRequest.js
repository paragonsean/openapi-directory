/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateDeviceCameraSenseRequestAudioDetection from './UpdateDeviceCameraSenseRequestAudioDetection';

/**
 * The UpdateDeviceCameraSenseRequest model module.
 * @module model/UpdateDeviceCameraSenseRequest
 * @version 1.32.0
 */
class UpdateDeviceCameraSenseRequest {
    /**
     * Constructs a new <code>UpdateDeviceCameraSenseRequest</code>.
     * @alias module:model/UpdateDeviceCameraSenseRequest
     */
    constructor() { 
        
        UpdateDeviceCameraSenseRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateDeviceCameraSenseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDeviceCameraSenseRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDeviceCameraSenseRequest} The populated <code>UpdateDeviceCameraSenseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDeviceCameraSenseRequest();

            if (data.hasOwnProperty('audioDetection')) {
                obj['audioDetection'] = UpdateDeviceCameraSenseRequestAudioDetection.constructFromObject(data['audioDetection']);
            }
            if (data.hasOwnProperty('detectionModelId')) {
                obj['detectionModelId'] = ApiClient.convertToType(data['detectionModelId'], 'String');
            }
            if (data.hasOwnProperty('mqttBrokerId')) {
                obj['mqttBrokerId'] = ApiClient.convertToType(data['mqttBrokerId'], 'String');
            }
            if (data.hasOwnProperty('senseEnabled')) {
                obj['senseEnabled'] = ApiClient.convertToType(data['senseEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDeviceCameraSenseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDeviceCameraSenseRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `audioDetection`
        if (data['audioDetection']) { // data not null
          UpdateDeviceCameraSenseRequestAudioDetection.validateJSON(data['audioDetection']);
        }
        // ensure the json data is a string
        if (data['detectionModelId'] && !(typeof data['detectionModelId'] === 'string' || data['detectionModelId'] instanceof String)) {
            throw new Error("Expected the field `detectionModelId` to be a primitive type in the JSON string but got " + data['detectionModelId']);
        }
        // ensure the json data is a string
        if (data['mqttBrokerId'] && !(typeof data['mqttBrokerId'] === 'string' || data['mqttBrokerId'] instanceof String)) {
            throw new Error("Expected the field `mqttBrokerId` to be a primitive type in the JSON string but got " + data['mqttBrokerId']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdateDeviceCameraSenseRequestAudioDetection} audioDetection
 */
UpdateDeviceCameraSenseRequest.prototype['audioDetection'] = undefined;

/**
 * The ID of the object detection model
 * @member {String} detectionModelId
 */
UpdateDeviceCameraSenseRequest.prototype['detectionModelId'] = undefined;

/**
 * The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera
 * @member {String} mqttBrokerId
 */
UpdateDeviceCameraSenseRequest.prototype['mqttBrokerId'] = undefined;

/**
 * Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera
 * @member {Boolean} senseEnabled
 */
UpdateDeviceCameraSenseRequest.prototype['senseEnabled'] = undefined;






export default UpdateDeviceCameraSenseRequest;

