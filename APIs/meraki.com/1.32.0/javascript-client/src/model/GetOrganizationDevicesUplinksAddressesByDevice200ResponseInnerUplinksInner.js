/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInnerAddressesInner from './GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInnerAddressesInner';

/**
 * The GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner model module.
 * @module model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner
 * @version 1.32.0
 */
class GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner {
    /**
     * Constructs a new <code>GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner</code>.
     * @alias module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner
     */
    constructor() { 
        
        GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner} obj Optional instance to populate.
     * @return {module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner} The populated <code>GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInnerAddressesInner]);
            }
            if (data.hasOwnProperty('interface')) {
                obj['interface'] = ApiClient.convertToType(data['interface'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner</code>.
     */
    static validateJSON(data) {
        if (data['addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addresses'])) {
                throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
            }
            // validate the optional field `addresses` (array)
            for (const item of data['addresses']) {
                GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInnerAddressesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['interface'] && !(typeof data['interface'] === 'string' || data['interface'] instanceof String)) {
            throw new Error("Expected the field `interface` to be a primitive type in the JSON string but got " + data['interface']);
        }

        return true;
    }


}



/**
 * Available addresses for the interface.
 * @member {Array.<module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInnerAddressesInner>} addresses
 */
GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner.prototype['addresses'] = undefined;

/**
 * Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2
 * @member {module:model/GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner.InterfaceEnum} interface
 */
GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner.prototype['interface'] = undefined;





/**
 * Allowed values for the <code>interface</code> property.
 * @enum {String}
 * @readonly
 */
GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner['InterfaceEnum'] = {

    /**
     * value: "cellular"
     * @const
     */
    "cellular": "cellular",

    /**
     * value: "man1"
     * @const
     */
    "man1": "man1",

    /**
     * value: "man2"
     * @const
     */
    "man2": "man2",

    /**
     * value: "wan1"
     * @const
     */
    "wan1": "wan1",

    /**
     * value: "wan2"
     * @const
     */
    "wan2": "wan2"
};



export default GetOrganizationDevicesUplinksAddressesByDevice200ResponseInnerUplinksInner;

