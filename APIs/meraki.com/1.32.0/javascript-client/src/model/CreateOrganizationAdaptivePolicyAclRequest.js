/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateOrganizationAdaptivePolicyAclRequestRulesInner from './CreateOrganizationAdaptivePolicyAclRequestRulesInner';

/**
 * The CreateOrganizationAdaptivePolicyAclRequest model module.
 * @module model/CreateOrganizationAdaptivePolicyAclRequest
 * @version 1.32.0
 */
class CreateOrganizationAdaptivePolicyAclRequest {
    /**
     * Constructs a new <code>CreateOrganizationAdaptivePolicyAclRequest</code>.
     * @alias module:model/CreateOrganizationAdaptivePolicyAclRequest
     * @param ipVersion {module:model/CreateOrganizationAdaptivePolicyAclRequest.IpVersionEnum} IP version of adpative policy ACL. One of: 'any', 'ipv4' or 'ipv6'
     * @param name {String} Name of the adaptive policy ACL
     * @param rules {Array.<module:model/CreateOrganizationAdaptivePolicyAclRequestRulesInner>} An ordered array of the adaptive policy ACL rules.
     */
    constructor(ipVersion, name, rules) { 
        
        CreateOrganizationAdaptivePolicyAclRequest.initialize(this, ipVersion, name, rules);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ipVersion, name, rules) { 
        obj['description'] = '';
        obj['ipVersion'] = ipVersion;
        obj['name'] = name;
        obj['rules'] = rules;
    }

    /**
     * Constructs a <code>CreateOrganizationAdaptivePolicyAclRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrganizationAdaptivePolicyAclRequest} obj Optional instance to populate.
     * @return {module:model/CreateOrganizationAdaptivePolicyAclRequest} The populated <code>CreateOrganizationAdaptivePolicyAclRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrganizationAdaptivePolicyAclRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('ipVersion')) {
                obj['ipVersion'] = ApiClient.convertToType(data['ipVersion'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [CreateOrganizationAdaptivePolicyAclRequestRulesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrganizationAdaptivePolicyAclRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrganizationAdaptivePolicyAclRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateOrganizationAdaptivePolicyAclRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['ipVersion'] && !(typeof data['ipVersion'] === 'string' || data['ipVersion'] instanceof String)) {
            throw new Error("Expected the field `ipVersion` to be a primitive type in the JSON string but got " + data['ipVersion']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                CreateOrganizationAdaptivePolicyAclRequestRulesInner.validateJSON(item);
            };
        }

        return true;
    }


}

CreateOrganizationAdaptivePolicyAclRequest.RequiredProperties = ["ipVersion", "name", "rules"];

/**
 * Description of the adaptive policy ACL
 * @member {String} description
 * @default ''
 */
CreateOrganizationAdaptivePolicyAclRequest.prototype['description'] = '';

/**
 * IP version of adpative policy ACL. One of: 'any', 'ipv4' or 'ipv6'
 * @member {module:model/CreateOrganizationAdaptivePolicyAclRequest.IpVersionEnum} ipVersion
 */
CreateOrganizationAdaptivePolicyAclRequest.prototype['ipVersion'] = undefined;

/**
 * Name of the adaptive policy ACL
 * @member {String} name
 */
CreateOrganizationAdaptivePolicyAclRequest.prototype['name'] = undefined;

/**
 * An ordered array of the adaptive policy ACL rules.
 * @member {Array.<module:model/CreateOrganizationAdaptivePolicyAclRequestRulesInner>} rules
 */
CreateOrganizationAdaptivePolicyAclRequest.prototype['rules'] = undefined;





/**
 * Allowed values for the <code>ipVersion</code> property.
 * @enum {String}
 * @readonly
 */
CreateOrganizationAdaptivePolicyAclRequest['IpVersionEnum'] = {

    /**
     * value: "any"
     * @const
     */
    "any": "any",

    /**
     * value: "ipv4"
     * @const
     */
    "ipv4": "ipv4",

    /**
     * value: "ipv6"
     * @const
     */
    "ipv6": "ipv6"
};



export default CreateOrganizationAdaptivePolicyAclRequest;

