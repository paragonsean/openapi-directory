/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesDevicesInner from './GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesDevicesInner';
import GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesSwitchStacksInner from './GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesSwitchStacksInner';

/**
 * The GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices model module.
 * @module model/GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices
 * @version 1.32.0
 */
class GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices {
    /**
     * Constructs a new <code>GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices</code>.
     * The devices and Switch Stacks assigned to the Group
     * @alias module:model/GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices
     */
    constructor() { 
        
        GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices} obj Optional instance to populate.
     * @return {module:model/GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices} The populated <code>GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices();

            if (data.hasOwnProperty('devices')) {
                obj['devices'] = ApiClient.convertToType(data['devices'], [GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesDevicesInner]);
            }
            if (data.hasOwnProperty('switchStacks')) {
                obj['switchStacks'] = ApiClient.convertToType(data['switchStacks'], [GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesSwitchStacksInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices</code>.
     */
    static validateJSON(data) {
        if (data['devices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['devices'])) {
                throw new Error("Expected the field `devices` to be an array in the JSON data but got " + data['devices']);
            }
            // validate the optional field `devices` (array)
            for (const item of data['devices']) {
                GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesDevicesInner.validateJSON(item);
            };
        }
        if (data['switchStacks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['switchStacks'])) {
                throw new Error("Expected the field `switchStacks` to be an array in the JSON data but got " + data['switchStacks']);
            }
            // validate the optional field `switchStacks` (array)
            for (const item of data['switchStacks']) {
                GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesSwitchStacksInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Data Array of Devices containing the name and serial
 * @member {Array.<module:model/GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesDevicesInner>} devices
 */
GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices.prototype['devices'] = undefined;

/**
 * Data Array of Switch Stacks containing the name and id
 * @member {Array.<module:model/GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevicesSwitchStacksInner>} switchStacks
 */
GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices.prototype['switchStacks'] = undefined;






export default GetNetworkFirmwareUpgradesStagedGroups200ResponseInnerAssignedDevices;

