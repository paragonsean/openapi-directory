/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner model module.
 * @module model/UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner
 * @version 1.32.0
 */
class UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner {
    /**
     * Constructs a new <code>UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner</code>.
     * @alias module:model/UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner
     * @param code {String} The code for DHCP option which should be from 2 to 254
     * @param type {module:model/UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.TypeEnum} The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
     * @param value {String} The value of the DHCP option
     */
    constructor(code, type, value) { 
        
        UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.initialize(this, code, type, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, type, value) { 
        obj['code'] = code;
        obj['type'] = type;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner} obj Optional instance to populate.
     * @return {module:model/UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner} The populated <code>UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.RequiredProperties = ["code", "type", "value"];

/**
 * The code for DHCP option which should be from 2 to 254
 * @member {String} code
 */
UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.prototype['code'] = undefined;

/**
 * The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
 * @member {module:model/UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.TypeEnum} type
 */
UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.prototype['type'] = undefined;

/**
 * The value of the DHCP option
 * @member {String} value
 */
UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner.prototype['value'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner['TypeEnum'] = {

    /**
     * value: "hex"
     * @const
     */
    "hex": "hex",

    /**
     * value: "integer"
     * @const
     */
    "integer": "integer",

    /**
     * value: "ip"
     * @const
     */
    "ip": "ip",

    /**
     * value: "text"
     * @const
     */
    "text": "text"
};



export default UpdateDeviceSwitchRoutingInterfaceDhcpRequestDhcpOptionsInner;

