/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateNetworkWirelessSsidRequestLdapCredentials model module.
 * @module model/UpdateNetworkWirelessSsidRequestLdapCredentials
 * @version 1.32.0
 */
class UpdateNetworkWirelessSsidRequestLdapCredentials {
    /**
     * Constructs a new <code>UpdateNetworkWirelessSsidRequestLdapCredentials</code>.
     * (Optional) The credentials of the user account to be used by the AP to bind to your LDAP server. The LDAP account should have permissions on all your LDAP servers.
     * @alias module:model/UpdateNetworkWirelessSsidRequestLdapCredentials
     */
    constructor() { 
        
        UpdateNetworkWirelessSsidRequestLdapCredentials.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkWirelessSsidRequestLdapCredentials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkWirelessSsidRequestLdapCredentials} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkWirelessSsidRequestLdapCredentials} The populated <code>UpdateNetworkWirelessSsidRequestLdapCredentials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkWirelessSsidRequestLdapCredentials();

            if (data.hasOwnProperty('distinguishedName')) {
                obj['distinguishedName'] = ApiClient.convertToType(data['distinguishedName'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkWirelessSsidRequestLdapCredentials</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkWirelessSsidRequestLdapCredentials</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['distinguishedName'] && !(typeof data['distinguishedName'] === 'string' || data['distinguishedName'] instanceof String)) {
            throw new Error("Expected the field `distinguishedName` to be a primitive type in the JSON string but got " + data['distinguishedName']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }

        return true;
    }


}



/**
 * The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com).
 * @member {String} distinguishedName
 */
UpdateNetworkWirelessSsidRequestLdapCredentials.prototype['distinguishedName'] = undefined;

/**
 * The password of the LDAP user account.
 * @member {String} password
 */
UpdateNetworkWirelessSsidRequestLdapCredentials.prototype['password'] = undefined;






export default UpdateNetworkWirelessSsidRequestLdapCredentials;

