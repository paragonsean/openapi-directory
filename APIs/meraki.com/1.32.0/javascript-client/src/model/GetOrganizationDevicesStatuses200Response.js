/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetOrganizationDevicesStatuses200ResponseComponents from './GetOrganizationDevicesStatuses200ResponseComponents';

/**
 * The GetOrganizationDevicesStatuses200Response model module.
 * @module model/GetOrganizationDevicesStatuses200Response
 * @version 1.32.0
 */
class GetOrganizationDevicesStatuses200Response {
    /**
     * Constructs a new <code>GetOrganizationDevicesStatuses200Response</code>.
     * @alias module:model/GetOrganizationDevicesStatuses200Response
     */
    constructor() { 
        
        GetOrganizationDevicesStatuses200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationDevicesStatuses200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationDevicesStatuses200Response} obj Optional instance to populate.
     * @return {module:model/GetOrganizationDevicesStatuses200Response} The populated <code>GetOrganizationDevicesStatuses200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationDevicesStatuses200Response();

            if (data.hasOwnProperty('components')) {
                obj['components'] = GetOrganizationDevicesStatuses200ResponseComponents.constructFromObject(data['components']);
            }
            if (data.hasOwnProperty('gateway')) {
                obj['gateway'] = ApiClient.convertToType(data['gateway'], 'String');
            }
            if (data.hasOwnProperty('ipType')) {
                obj['ipType'] = ApiClient.convertToType(data['ipType'], 'String');
            }
            if (data.hasOwnProperty('lanIp')) {
                obj['lanIp'] = ApiClient.convertToType(data['lanIp'], 'String');
            }
            if (data.hasOwnProperty('lastReportedAt')) {
                obj['lastReportedAt'] = ApiClient.convertToType(data['lastReportedAt'], 'String');
            }
            if (data.hasOwnProperty('mac')) {
                obj['mac'] = ApiClient.convertToType(data['mac'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkId')) {
                obj['networkId'] = ApiClient.convertToType(data['networkId'], 'String');
            }
            if (data.hasOwnProperty('primaryDns')) {
                obj['primaryDns'] = ApiClient.convertToType(data['primaryDns'], 'String');
            }
            if (data.hasOwnProperty('productType')) {
                obj['productType'] = ApiClient.convertToType(data['productType'], 'String');
            }
            if (data.hasOwnProperty('publicIp')) {
                obj['publicIp'] = ApiClient.convertToType(data['publicIp'], 'String');
            }
            if (data.hasOwnProperty('secondaryDns')) {
                obj['secondaryDns'] = ApiClient.convertToType(data['secondaryDns'], 'String');
            }
            if (data.hasOwnProperty('serial')) {
                obj['serial'] = ApiClient.convertToType(data['serial'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationDevicesStatuses200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationDevicesStatuses200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `components`
        if (data['components']) { // data not null
          GetOrganizationDevicesStatuses200ResponseComponents.validateJSON(data['components']);
        }
        // ensure the json data is a string
        if (data['gateway'] && !(typeof data['gateway'] === 'string' || data['gateway'] instanceof String)) {
            throw new Error("Expected the field `gateway` to be a primitive type in the JSON string but got " + data['gateway']);
        }
        // ensure the json data is a string
        if (data['ipType'] && !(typeof data['ipType'] === 'string' || data['ipType'] instanceof String)) {
            throw new Error("Expected the field `ipType` to be a primitive type in the JSON string but got " + data['ipType']);
        }
        // ensure the json data is a string
        if (data['lanIp'] && !(typeof data['lanIp'] === 'string' || data['lanIp'] instanceof String)) {
            throw new Error("Expected the field `lanIp` to be a primitive type in the JSON string but got " + data['lanIp']);
        }
        // ensure the json data is a string
        if (data['lastReportedAt'] && !(typeof data['lastReportedAt'] === 'string' || data['lastReportedAt'] instanceof String)) {
            throw new Error("Expected the field `lastReportedAt` to be a primitive type in the JSON string but got " + data['lastReportedAt']);
        }
        // ensure the json data is a string
        if (data['mac'] && !(typeof data['mac'] === 'string' || data['mac'] instanceof String)) {
            throw new Error("Expected the field `mac` to be a primitive type in the JSON string but got " + data['mac']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['networkId'] && !(typeof data['networkId'] === 'string' || data['networkId'] instanceof String)) {
            throw new Error("Expected the field `networkId` to be a primitive type in the JSON string but got " + data['networkId']);
        }
        // ensure the json data is a string
        if (data['primaryDns'] && !(typeof data['primaryDns'] === 'string' || data['primaryDns'] instanceof String)) {
            throw new Error("Expected the field `primaryDns` to be a primitive type in the JSON string but got " + data['primaryDns']);
        }
        // ensure the json data is a string
        if (data['productType'] && !(typeof data['productType'] === 'string' || data['productType'] instanceof String)) {
            throw new Error("Expected the field `productType` to be a primitive type in the JSON string but got " + data['productType']);
        }
        // ensure the json data is a string
        if (data['publicIp'] && !(typeof data['publicIp'] === 'string' || data['publicIp'] instanceof String)) {
            throw new Error("Expected the field `publicIp` to be a primitive type in the JSON string but got " + data['publicIp']);
        }
        // ensure the json data is a string
        if (data['secondaryDns'] && !(typeof data['secondaryDns'] === 'string' || data['secondaryDns'] instanceof String)) {
            throw new Error("Expected the field `secondaryDns` to be a primitive type in the JSON string but got " + data['secondaryDns']);
        }
        // ensure the json data is a string
        if (data['serial'] && !(typeof data['serial'] === 'string' || data['serial'] instanceof String)) {
            throw new Error("Expected the field `serial` to be a primitive type in the JSON string but got " + data['serial']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetOrganizationDevicesStatuses200ResponseComponents} components
 */
GetOrganizationDevicesStatuses200Response.prototype['components'] = undefined;

/**
 * IP Gateway
 * @member {String} gateway
 */
GetOrganizationDevicesStatuses200Response.prototype['gateway'] = undefined;

/**
 * IP Type
 * @member {String} ipType
 */
GetOrganizationDevicesStatuses200Response.prototype['ipType'] = undefined;

/**
 * LAN IP Address
 * @member {String} lanIp
 */
GetOrganizationDevicesStatuses200Response.prototype['lanIp'] = undefined;

/**
 * Device Last Reported Location
 * @member {String} lastReportedAt
 */
GetOrganizationDevicesStatuses200Response.prototype['lastReportedAt'] = undefined;

/**
 * MAC Address
 * @member {String} mac
 */
GetOrganizationDevicesStatuses200Response.prototype['mac'] = undefined;

/**
 * Model
 * @member {String} model
 */
GetOrganizationDevicesStatuses200Response.prototype['model'] = undefined;

/**
 * Device Name
 * @member {String} name
 */
GetOrganizationDevicesStatuses200Response.prototype['name'] = undefined;

/**
 * Network ID
 * @member {String} networkId
 */
GetOrganizationDevicesStatuses200Response.prototype['networkId'] = undefined;

/**
 * Primary DNS
 * @member {String} primaryDns
 */
GetOrganizationDevicesStatuses200Response.prototype['primaryDns'] = undefined;

/**
 * Product Type
 * @member {String} productType
 */
GetOrganizationDevicesStatuses200Response.prototype['productType'] = undefined;

/**
 * Public IP Address
 * @member {String} publicIp
 */
GetOrganizationDevicesStatuses200Response.prototype['publicIp'] = undefined;

/**
 * Secondary DNS
 * @member {String} secondaryDns
 */
GetOrganizationDevicesStatuses200Response.prototype['secondaryDns'] = undefined;

/**
 * Device Serial Number
 * @member {String} serial
 */
GetOrganizationDevicesStatuses200Response.prototype['serial'] = undefined;

/**
 * Device Status
 * @member {String} status
 */
GetOrganizationDevicesStatuses200Response.prototype['status'] = undefined;

/**
 * Tags
 * @member {Array.<String>} tags
 */
GetOrganizationDevicesStatuses200Response.prototype['tags'] = undefined;






export default GetOrganizationDevicesStatuses200Response;

