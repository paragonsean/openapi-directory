/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClaimIntoOrganizationRequestLicensesInner from './ClaimIntoOrganizationRequestLicensesInner';

/**
 * The ClaimIntoOrganizationRequest model module.
 * @module model/ClaimIntoOrganizationRequest
 * @version 1.32.0
 */
class ClaimIntoOrganizationRequest {
    /**
     * Constructs a new <code>ClaimIntoOrganizationRequest</code>.
     * @alias module:model/ClaimIntoOrganizationRequest
     */
    constructor() { 
        
        ClaimIntoOrganizationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClaimIntoOrganizationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClaimIntoOrganizationRequest} obj Optional instance to populate.
     * @return {module:model/ClaimIntoOrganizationRequest} The populated <code>ClaimIntoOrganizationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClaimIntoOrganizationRequest();

            if (data.hasOwnProperty('licenses')) {
                obj['licenses'] = ApiClient.convertToType(data['licenses'], [ClaimIntoOrganizationRequestLicensesInner]);
            }
            if (data.hasOwnProperty('orders')) {
                obj['orders'] = ApiClient.convertToType(data['orders'], ['String']);
            }
            if (data.hasOwnProperty('serials')) {
                obj['serials'] = ApiClient.convertToType(data['serials'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClaimIntoOrganizationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClaimIntoOrganizationRequest</code>.
     */
    static validateJSON(data) {
        if (data['licenses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['licenses'])) {
                throw new Error("Expected the field `licenses` to be an array in the JSON data but got " + data['licenses']);
            }
            // validate the optional field `licenses` (array)
            for (const item of data['licenses']) {
                ClaimIntoOrganizationRequestLicensesInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['orders'])) {
            throw new Error("Expected the field `orders` to be an array in the JSON data but got " + data['orders']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['serials'])) {
            throw new Error("Expected the field `serials` to be an array in the JSON data but got " + data['serials']);
        }

        return true;
    }


}



/**
 * The licenses that should be claimed
 * @member {Array.<module:model/ClaimIntoOrganizationRequestLicensesInner>} licenses
 */
ClaimIntoOrganizationRequest.prototype['licenses'] = undefined;

/**
 * The numbers of the orders that should be claimed
 * @member {Array.<String>} orders
 */
ClaimIntoOrganizationRequest.prototype['orders'] = undefined;

/**
 * The serials of the devices that should be claimed
 * @member {Array.<String>} serials
 */
ClaimIntoOrganizationRequest.prototype['serials'] = undefined;






export default ClaimIntoOrganizationRequest;

