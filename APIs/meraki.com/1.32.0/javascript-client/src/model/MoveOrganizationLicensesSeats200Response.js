/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MoveOrganizationLicensesSeats200Response model module.
 * @module model/MoveOrganizationLicensesSeats200Response
 * @version 1.32.0
 */
class MoveOrganizationLicensesSeats200Response {
    /**
     * Constructs a new <code>MoveOrganizationLicensesSeats200Response</code>.
     * @alias module:model/MoveOrganizationLicensesSeats200Response
     */
    constructor() { 
        
        MoveOrganizationLicensesSeats200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MoveOrganizationLicensesSeats200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MoveOrganizationLicensesSeats200Response} obj Optional instance to populate.
     * @return {module:model/MoveOrganizationLicensesSeats200Response} The populated <code>MoveOrganizationLicensesSeats200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoveOrganizationLicensesSeats200Response();

            if (data.hasOwnProperty('destOrganizationId')) {
                obj['destOrganizationId'] = ApiClient.convertToType(data['destOrganizationId'], 'String');
            }
            if (data.hasOwnProperty('licenseId')) {
                obj['licenseId'] = ApiClient.convertToType(data['licenseId'], 'String');
            }
            if (data.hasOwnProperty('seatCount')) {
                obj['seatCount'] = ApiClient.convertToType(data['seatCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoveOrganizationLicensesSeats200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoveOrganizationLicensesSeats200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destOrganizationId'] && !(typeof data['destOrganizationId'] === 'string' || data['destOrganizationId'] instanceof String)) {
            throw new Error("Expected the field `destOrganizationId` to be a primitive type in the JSON string but got " + data['destOrganizationId']);
        }
        // ensure the json data is a string
        if (data['licenseId'] && !(typeof data['licenseId'] === 'string' || data['licenseId'] instanceof String)) {
            throw new Error("Expected the field `licenseId` to be a primitive type in the JSON string but got " + data['licenseId']);
        }

        return true;
    }


}



/**
 * The ID of the organization to move the SM seats to
 * @member {String} destOrganizationId
 */
MoveOrganizationLicensesSeats200Response.prototype['destOrganizationId'] = undefined;

/**
 * The ID of the SM license to move the seats from
 * @member {String} licenseId
 */
MoveOrganizationLicensesSeats200Response.prototype['licenseId'] = undefined;

/**
 * The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
 * @member {Number} seatCount
 */
MoveOrganizationLicensesSeats200Response.prototype['seatCount'] = undefined;






export default MoveOrganizationLicensesSeats200Response;

