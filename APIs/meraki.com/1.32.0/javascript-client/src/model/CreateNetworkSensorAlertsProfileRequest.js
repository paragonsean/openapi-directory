/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkSensorAlertsProfileRequestSchedule from './CreateNetworkSensorAlertsProfileRequestSchedule';
import GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInner from './GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInner';
import GetNetworkSensorAlertsProfiles200ResponseInnerRecipients from './GetNetworkSensorAlertsProfiles200ResponseInnerRecipients';

/**
 * The CreateNetworkSensorAlertsProfileRequest model module.
 * @module model/CreateNetworkSensorAlertsProfileRequest
 * @version 1.32.0
 */
class CreateNetworkSensorAlertsProfileRequest {
    /**
     * Constructs a new <code>CreateNetworkSensorAlertsProfileRequest</code>.
     * @alias module:model/CreateNetworkSensorAlertsProfileRequest
     * @param conditions {Array.<module:model/GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInner>} List of conditions that will cause the profile to send an alert.
     * @param name {String} Name of the sensor alert profile.
     */
    constructor(conditions, name) { 
        
        CreateNetworkSensorAlertsProfileRequest.initialize(this, conditions, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, conditions, name) { 
        obj['conditions'] = conditions;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateNetworkSensorAlertsProfileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkSensorAlertsProfileRequest} obj Optional instance to populate.
     * @return {module:model/CreateNetworkSensorAlertsProfileRequest} The populated <code>CreateNetworkSensorAlertsProfileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkSensorAlertsProfileRequest();

            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInner]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = GetNetworkSensorAlertsProfiles200ResponseInnerRecipients.constructFromObject(data['recipients']);
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = CreateNetworkSensorAlertsProfileRequestSchedule.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('serials')) {
                obj['serials'] = ApiClient.convertToType(data['serials'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkSensorAlertsProfileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkSensorAlertsProfileRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkSensorAlertsProfileRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `recipients`
        if (data['recipients']) { // data not null
          GetNetworkSensorAlertsProfiles200ResponseInnerRecipients.validateJSON(data['recipients']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          CreateNetworkSensorAlertsProfileRequestSchedule.validateJSON(data['schedule']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['serials'])) {
            throw new Error("Expected the field `serials` to be an array in the JSON data but got " + data['serials']);
        }

        return true;
    }


}

CreateNetworkSensorAlertsProfileRequest.RequiredProperties = ["conditions", "name"];

/**
 * List of conditions that will cause the profile to send an alert.
 * @member {Array.<module:model/GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInner>} conditions
 */
CreateNetworkSensorAlertsProfileRequest.prototype['conditions'] = undefined;

/**
 * Name of the sensor alert profile.
 * @member {String} name
 */
CreateNetworkSensorAlertsProfileRequest.prototype['name'] = undefined;

/**
 * @member {module:model/GetNetworkSensorAlertsProfiles200ResponseInnerRecipients} recipients
 */
CreateNetworkSensorAlertsProfileRequest.prototype['recipients'] = undefined;

/**
 * @member {module:model/CreateNetworkSensorAlertsProfileRequestSchedule} schedule
 */
CreateNetworkSensorAlertsProfileRequest.prototype['schedule'] = undefined;

/**
 * List of device serials assigned to this sensor alert profile.
 * @member {Array.<String>} serials
 */
CreateNetworkSensorAlertsProfileRequest.prototype['serials'] = undefined;






export default CreateNetworkSensorAlertsProfileRequest;

