/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkGroupPolicyRequestBandwidth from './CreateNetworkGroupPolicyRequestBandwidth';
import CreateNetworkGroupPolicyRequestBonjourForwarding from './CreateNetworkGroupPolicyRequestBonjourForwarding';
import CreateNetworkGroupPolicyRequestContentFiltering from './CreateNetworkGroupPolicyRequestContentFiltering';
import CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping from './CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping';
import CreateNetworkGroupPolicyRequestScheduling from './CreateNetworkGroupPolicyRequestScheduling';
import CreateNetworkGroupPolicyRequestVlanTagging from './CreateNetworkGroupPolicyRequestVlanTagging';

/**
 * The UpdateNetworkGroupPolicyRequest model module.
 * @module model/UpdateNetworkGroupPolicyRequest
 * @version 1.32.0
 */
class UpdateNetworkGroupPolicyRequest {
    /**
     * Constructs a new <code>UpdateNetworkGroupPolicyRequest</code>.
     * @alias module:model/UpdateNetworkGroupPolicyRequest
     */
    constructor() { 
        
        UpdateNetworkGroupPolicyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkGroupPolicyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkGroupPolicyRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkGroupPolicyRequest} The populated <code>UpdateNetworkGroupPolicyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkGroupPolicyRequest();

            if (data.hasOwnProperty('bandwidth')) {
                obj['bandwidth'] = CreateNetworkGroupPolicyRequestBandwidth.constructFromObject(data['bandwidth']);
            }
            if (data.hasOwnProperty('bonjourForwarding')) {
                obj['bonjourForwarding'] = CreateNetworkGroupPolicyRequestBonjourForwarding.constructFromObject(data['bonjourForwarding']);
            }
            if (data.hasOwnProperty('contentFiltering')) {
                obj['contentFiltering'] = CreateNetworkGroupPolicyRequestContentFiltering.constructFromObject(data['contentFiltering']);
            }
            if (data.hasOwnProperty('firewallAndTrafficShaping')) {
                obj['firewallAndTrafficShaping'] = CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.constructFromObject(data['firewallAndTrafficShaping']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('scheduling')) {
                obj['scheduling'] = CreateNetworkGroupPolicyRequestScheduling.constructFromObject(data['scheduling']);
            }
            if (data.hasOwnProperty('splashAuthSettings')) {
                obj['splashAuthSettings'] = ApiClient.convertToType(data['splashAuthSettings'], 'String');
            }
            if (data.hasOwnProperty('vlanTagging')) {
                obj['vlanTagging'] = CreateNetworkGroupPolicyRequestVlanTagging.constructFromObject(data['vlanTagging']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkGroupPolicyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkGroupPolicyRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bandwidth`
        if (data['bandwidth']) { // data not null
          CreateNetworkGroupPolicyRequestBandwidth.validateJSON(data['bandwidth']);
        }
        // validate the optional field `bonjourForwarding`
        if (data['bonjourForwarding']) { // data not null
          CreateNetworkGroupPolicyRequestBonjourForwarding.validateJSON(data['bonjourForwarding']);
        }
        // validate the optional field `contentFiltering`
        if (data['contentFiltering']) { // data not null
          CreateNetworkGroupPolicyRequestContentFiltering.validateJSON(data['contentFiltering']);
        }
        // validate the optional field `firewallAndTrafficShaping`
        if (data['firewallAndTrafficShaping']) { // data not null
          CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.validateJSON(data['firewallAndTrafficShaping']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `scheduling`
        if (data['scheduling']) { // data not null
          CreateNetworkGroupPolicyRequestScheduling.validateJSON(data['scheduling']);
        }
        // ensure the json data is a string
        if (data['splashAuthSettings'] && !(typeof data['splashAuthSettings'] === 'string' || data['splashAuthSettings'] instanceof String)) {
            throw new Error("Expected the field `splashAuthSettings` to be a primitive type in the JSON string but got " + data['splashAuthSettings']);
        }
        // validate the optional field `vlanTagging`
        if (data['vlanTagging']) { // data not null
          CreateNetworkGroupPolicyRequestVlanTagging.validateJSON(data['vlanTagging']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateNetworkGroupPolicyRequestBandwidth} bandwidth
 */
UpdateNetworkGroupPolicyRequest.prototype['bandwidth'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestBonjourForwarding} bonjourForwarding
 */
UpdateNetworkGroupPolicyRequest.prototype['bonjourForwarding'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestContentFiltering} contentFiltering
 */
UpdateNetworkGroupPolicyRequest.prototype['contentFiltering'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping} firewallAndTrafficShaping
 */
UpdateNetworkGroupPolicyRequest.prototype['firewallAndTrafficShaping'] = undefined;

/**
 * The name for your group policy.
 * @member {String} name
 */
UpdateNetworkGroupPolicyRequest.prototype['name'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestScheduling} scheduling
 */
UpdateNetworkGroupPolicyRequest.prototype['scheduling'] = undefined;

/**
 * Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
 * @member {module:model/UpdateNetworkGroupPolicyRequest.SplashAuthSettingsEnum} splashAuthSettings
 */
UpdateNetworkGroupPolicyRequest.prototype['splashAuthSettings'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestVlanTagging} vlanTagging
 */
UpdateNetworkGroupPolicyRequest.prototype['vlanTagging'] = undefined;





/**
 * Allowed values for the <code>splashAuthSettings</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkGroupPolicyRequest['SplashAuthSettingsEnum'] = {

    /**
     * value: "bypass"
     * @const
     */
    "bypass": "bypass",

    /**
     * value: "network default"
     * @const
     */
    "network default": "network default"
};



export default UpdateNetworkGroupPolicyRequest;

