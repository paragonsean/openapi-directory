/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkGroupPolicyRequestSchedulingFriday from './CreateNetworkGroupPolicyRequestSchedulingFriday';
import CreateNetworkGroupPolicyRequestSchedulingMonday from './CreateNetworkGroupPolicyRequestSchedulingMonday';
import CreateNetworkGroupPolicyRequestSchedulingSaturday from './CreateNetworkGroupPolicyRequestSchedulingSaturday';
import CreateNetworkGroupPolicyRequestSchedulingSunday from './CreateNetworkGroupPolicyRequestSchedulingSunday';
import CreateNetworkGroupPolicyRequestSchedulingThursday from './CreateNetworkGroupPolicyRequestSchedulingThursday';
import CreateNetworkGroupPolicyRequestSchedulingTuesday from './CreateNetworkGroupPolicyRequestSchedulingTuesday';
import CreateNetworkGroupPolicyRequestSchedulingWednesday from './CreateNetworkGroupPolicyRequestSchedulingWednesday';

/**
 * The CreateNetworkSwitchPortScheduleRequestPortSchedule model module.
 * @module model/CreateNetworkSwitchPortScheduleRequestPortSchedule
 * @version 1.32.0
 */
class CreateNetworkSwitchPortScheduleRequestPortSchedule {
    /**
     * Constructs a new <code>CreateNetworkSwitchPortScheduleRequestPortSchedule</code>.
     *     The schedule for switch port scheduling. Schedules are applied to days of the week.     When it&#39;s empty, default schedule with all days of a week are configured.     Any unspecified day in the schedule is added as a default schedule configuration of the day. 
     * @alias module:model/CreateNetworkSwitchPortScheduleRequestPortSchedule
     */
    constructor() { 
        
        CreateNetworkSwitchPortScheduleRequestPortSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateNetworkSwitchPortScheduleRequestPortSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkSwitchPortScheduleRequestPortSchedule} obj Optional instance to populate.
     * @return {module:model/CreateNetworkSwitchPortScheduleRequestPortSchedule} The populated <code>CreateNetworkSwitchPortScheduleRequestPortSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkSwitchPortScheduleRequestPortSchedule();

            if (data.hasOwnProperty('friday')) {
                obj['friday'] = CreateNetworkGroupPolicyRequestSchedulingFriday.constructFromObject(data['friday']);
            }
            if (data.hasOwnProperty('monday')) {
                obj['monday'] = CreateNetworkGroupPolicyRequestSchedulingMonday.constructFromObject(data['monday']);
            }
            if (data.hasOwnProperty('saturday')) {
                obj['saturday'] = CreateNetworkGroupPolicyRequestSchedulingSaturday.constructFromObject(data['saturday']);
            }
            if (data.hasOwnProperty('sunday')) {
                obj['sunday'] = CreateNetworkGroupPolicyRequestSchedulingSunday.constructFromObject(data['sunday']);
            }
            if (data.hasOwnProperty('thursday')) {
                obj['thursday'] = CreateNetworkGroupPolicyRequestSchedulingThursday.constructFromObject(data['thursday']);
            }
            if (data.hasOwnProperty('tuesday')) {
                obj['tuesday'] = CreateNetworkGroupPolicyRequestSchedulingTuesday.constructFromObject(data['tuesday']);
            }
            if (data.hasOwnProperty('wednesday')) {
                obj['wednesday'] = CreateNetworkGroupPolicyRequestSchedulingWednesday.constructFromObject(data['wednesday']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkSwitchPortScheduleRequestPortSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkSwitchPortScheduleRequestPortSchedule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `friday`
        if (data['friday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingFriday.validateJSON(data['friday']);
        }
        // validate the optional field `monday`
        if (data['monday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingMonday.validateJSON(data['monday']);
        }
        // validate the optional field `saturday`
        if (data['saturday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingSaturday.validateJSON(data['saturday']);
        }
        // validate the optional field `sunday`
        if (data['sunday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingSunday.validateJSON(data['sunday']);
        }
        // validate the optional field `thursday`
        if (data['thursday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingThursday.validateJSON(data['thursday']);
        }
        // validate the optional field `tuesday`
        if (data['tuesday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingTuesday.validateJSON(data['tuesday']);
        }
        // validate the optional field `wednesday`
        if (data['wednesday']) { // data not null
          CreateNetworkGroupPolicyRequestSchedulingWednesday.validateJSON(data['wednesday']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingFriday} friday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['friday'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingMonday} monday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['monday'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingSaturday} saturday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['saturday'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingSunday} sunday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['sunday'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingThursday} thursday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['thursday'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingTuesday} tuesday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['tuesday'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestSchedulingWednesday} wednesday
 */
CreateNetworkSwitchPortScheduleRequestPortSchedule.prototype['wednesday'] = undefined;






export default CreateNetworkSwitchPortScheduleRequestPortSchedule;

