/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetNetworkApplianceTrafficShapingUplinkSelection200ResponseFailoverAndFailback from './GetNetworkApplianceTrafficShapingUplinkSelection200ResponseFailoverAndFailback';
import GetNetworkApplianceTrafficShapingUplinkSelection200ResponseVpnTrafficUplinkPreferencesInner from './GetNetworkApplianceTrafficShapingUplinkSelection200ResponseVpnTrafficUplinkPreferencesInner';
import GetNetworkApplianceTrafficShapingUplinkSelection200ResponseWanTrafficUplinkPreferencesInner from './GetNetworkApplianceTrafficShapingUplinkSelection200ResponseWanTrafficUplinkPreferencesInner';

/**
 * The GetNetworkApplianceTrafficShapingUplinkSelection200Response model module.
 * @module model/GetNetworkApplianceTrafficShapingUplinkSelection200Response
 * @version 1.32.0
 */
class GetNetworkApplianceTrafficShapingUplinkSelection200Response {
    /**
     * Constructs a new <code>GetNetworkApplianceTrafficShapingUplinkSelection200Response</code>.
     * @alias module:model/GetNetworkApplianceTrafficShapingUplinkSelection200Response
     */
    constructor() { 
        
        GetNetworkApplianceTrafficShapingUplinkSelection200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkApplianceTrafficShapingUplinkSelection200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkApplianceTrafficShapingUplinkSelection200Response} obj Optional instance to populate.
     * @return {module:model/GetNetworkApplianceTrafficShapingUplinkSelection200Response} The populated <code>GetNetworkApplianceTrafficShapingUplinkSelection200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkApplianceTrafficShapingUplinkSelection200Response();

            if (data.hasOwnProperty('activeActiveAutoVpnEnabled')) {
                obj['activeActiveAutoVpnEnabled'] = ApiClient.convertToType(data['activeActiveAutoVpnEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultUplink')) {
                obj['defaultUplink'] = ApiClient.convertToType(data['defaultUplink'], 'String');
            }
            if (data.hasOwnProperty('failoverAndFailback')) {
                obj['failoverAndFailback'] = GetNetworkApplianceTrafficShapingUplinkSelection200ResponseFailoverAndFailback.constructFromObject(data['failoverAndFailback']);
            }
            if (data.hasOwnProperty('loadBalancingEnabled')) {
                obj['loadBalancingEnabled'] = ApiClient.convertToType(data['loadBalancingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('vpnTrafficUplinkPreferences')) {
                obj['vpnTrafficUplinkPreferences'] = ApiClient.convertToType(data['vpnTrafficUplinkPreferences'], [GetNetworkApplianceTrafficShapingUplinkSelection200ResponseVpnTrafficUplinkPreferencesInner]);
            }
            if (data.hasOwnProperty('wanTrafficUplinkPreferences')) {
                obj['wanTrafficUplinkPreferences'] = ApiClient.convertToType(data['wanTrafficUplinkPreferences'], [GetNetworkApplianceTrafficShapingUplinkSelection200ResponseWanTrafficUplinkPreferencesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkApplianceTrafficShapingUplinkSelection200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkApplianceTrafficShapingUplinkSelection200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultUplink'] && !(typeof data['defaultUplink'] === 'string' || data['defaultUplink'] instanceof String)) {
            throw new Error("Expected the field `defaultUplink` to be a primitive type in the JSON string but got " + data['defaultUplink']);
        }
        // validate the optional field `failoverAndFailback`
        if (data['failoverAndFailback']) { // data not null
          GetNetworkApplianceTrafficShapingUplinkSelection200ResponseFailoverAndFailback.validateJSON(data['failoverAndFailback']);
        }
        if (data['vpnTrafficUplinkPreferences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vpnTrafficUplinkPreferences'])) {
                throw new Error("Expected the field `vpnTrafficUplinkPreferences` to be an array in the JSON data but got " + data['vpnTrafficUplinkPreferences']);
            }
            // validate the optional field `vpnTrafficUplinkPreferences` (array)
            for (const item of data['vpnTrafficUplinkPreferences']) {
                GetNetworkApplianceTrafficShapingUplinkSelection200ResponseVpnTrafficUplinkPreferencesInner.validateJSON(item);
            };
        }
        if (data['wanTrafficUplinkPreferences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['wanTrafficUplinkPreferences'])) {
                throw new Error("Expected the field `wanTrafficUplinkPreferences` to be an array in the JSON data but got " + data['wanTrafficUplinkPreferences']);
            }
            // validate the optional field `wanTrafficUplinkPreferences` (array)
            for (const item of data['wanTrafficUplinkPreferences']) {
                GetNetworkApplianceTrafficShapingUplinkSelection200ResponseWanTrafficUplinkPreferencesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Whether active-active AutoVPN is enabled
 * @member {Boolean} activeActiveAutoVpnEnabled
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response.prototype['activeActiveAutoVpnEnabled'] = undefined;

/**
 * The default uplink. Must be one of: 'wan1' or 'wan2'
 * @member {module:model/GetNetworkApplianceTrafficShapingUplinkSelection200Response.DefaultUplinkEnum} defaultUplink
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response.prototype['defaultUplink'] = undefined;

/**
 * @member {module:model/GetNetworkApplianceTrafficShapingUplinkSelection200ResponseFailoverAndFailback} failoverAndFailback
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response.prototype['failoverAndFailback'] = undefined;

/**
 * Whether load balancing is enabled
 * @member {Boolean} loadBalancingEnabled
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response.prototype['loadBalancingEnabled'] = undefined;

/**
 * Uplink preference rules for VPN traffic
 * @member {Array.<module:model/GetNetworkApplianceTrafficShapingUplinkSelection200ResponseVpnTrafficUplinkPreferencesInner>} vpnTrafficUplinkPreferences
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response.prototype['vpnTrafficUplinkPreferences'] = undefined;

/**
 * Uplink preference rules for WAN traffic
 * @member {Array.<module:model/GetNetworkApplianceTrafficShapingUplinkSelection200ResponseWanTrafficUplinkPreferencesInner>} wanTrafficUplinkPreferences
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response.prototype['wanTrafficUplinkPreferences'] = undefined;





/**
 * Allowed values for the <code>defaultUplink</code> property.
 * @enum {String}
 * @readonly
 */
GetNetworkApplianceTrafficShapingUplinkSelection200Response['DefaultUplinkEnum'] = {

    /**
     * value: "wan1"
     * @const
     */
    "wan1": "wan1",

    /**
     * value: "wan2"
     * @const
     */
    "wan2": "wan2"
};



export default GetNetworkApplianceTrafficShapingUplinkSelection200Response;

