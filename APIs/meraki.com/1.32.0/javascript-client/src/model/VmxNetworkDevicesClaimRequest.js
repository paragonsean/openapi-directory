/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmxNetworkDevicesClaimRequest model module.
 * @module model/VmxNetworkDevicesClaimRequest
 * @version 1.32.0
 */
class VmxNetworkDevicesClaimRequest {
    /**
     * Constructs a new <code>VmxNetworkDevicesClaimRequest</code>.
     * @alias module:model/VmxNetworkDevicesClaimRequest
     * @param size {module:model/VmxNetworkDevicesClaimRequest.SizeEnum} The size of the vMX you claim. It can be one of: small, medium, large, 100
     */
    constructor(size) { 
        
        VmxNetworkDevicesClaimRequest.initialize(this, size);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, size) { 
        obj['size'] = size;
    }

    /**
     * Constructs a <code>VmxNetworkDevicesClaimRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmxNetworkDevicesClaimRequest} obj Optional instance to populate.
     * @return {module:model/VmxNetworkDevicesClaimRequest} The populated <code>VmxNetworkDevicesClaimRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmxNetworkDevicesClaimRequest();

            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmxNetworkDevicesClaimRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmxNetworkDevicesClaimRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VmxNetworkDevicesClaimRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }

        return true;
    }


}

VmxNetworkDevicesClaimRequest.RequiredProperties = ["size"];

/**
 * The size of the vMX you claim. It can be one of: small, medium, large, 100
 * @member {module:model/VmxNetworkDevicesClaimRequest.SizeEnum} size
 */
VmxNetworkDevicesClaimRequest.prototype['size'] = undefined;





/**
 * Allowed values for the <code>size</code> property.
 * @enum {String}
 * @readonly
 */
VmxNetworkDevicesClaimRequest['SizeEnum'] = {

    /**
     * value: "100"
     * @const
     */
    "100": "100",

    /**
     * value: "large"
     * @const
     */
    "large": "large",

    /**
     * value: "medium"
     * @const
     */
    "medium": "medium",

    /**
     * value: "small"
     * @const
     */
    "small": "small"
};



export default VmxNetworkDevicesClaimRequest;

