/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns from './CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns';
import CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories from './CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories';
import CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns from './CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns';

/**
 * The CreateNetworkGroupPolicyRequestContentFiltering model module.
 * @module model/CreateNetworkGroupPolicyRequestContentFiltering
 * @version 1.32.0
 */
class CreateNetworkGroupPolicyRequestContentFiltering {
    /**
     * Constructs a new <code>CreateNetworkGroupPolicyRequestContentFiltering</code>.
     * The content filtering settings for your group policy
     * @alias module:model/CreateNetworkGroupPolicyRequestContentFiltering
     */
    constructor() { 
        
        CreateNetworkGroupPolicyRequestContentFiltering.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateNetworkGroupPolicyRequestContentFiltering</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkGroupPolicyRequestContentFiltering} obj Optional instance to populate.
     * @return {module:model/CreateNetworkGroupPolicyRequestContentFiltering} The populated <code>CreateNetworkGroupPolicyRequestContentFiltering</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkGroupPolicyRequestContentFiltering();

            if (data.hasOwnProperty('allowedUrlPatterns')) {
                obj['allowedUrlPatterns'] = CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns.constructFromObject(data['allowedUrlPatterns']);
            }
            if (data.hasOwnProperty('blockedUrlCategories')) {
                obj['blockedUrlCategories'] = CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories.constructFromObject(data['blockedUrlCategories']);
            }
            if (data.hasOwnProperty('blockedUrlPatterns')) {
                obj['blockedUrlPatterns'] = CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns.constructFromObject(data['blockedUrlPatterns']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkGroupPolicyRequestContentFiltering</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkGroupPolicyRequestContentFiltering</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allowedUrlPatterns`
        if (data['allowedUrlPatterns']) { // data not null
          CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns.validateJSON(data['allowedUrlPatterns']);
        }
        // validate the optional field `blockedUrlCategories`
        if (data['blockedUrlCategories']) { // data not null
          CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories.validateJSON(data['blockedUrlCategories']);
        }
        // validate the optional field `blockedUrlPatterns`
        if (data['blockedUrlPatterns']) { // data not null
          CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns.validateJSON(data['blockedUrlPatterns']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns} allowedUrlPatterns
 */
CreateNetworkGroupPolicyRequestContentFiltering.prototype['allowedUrlPatterns'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories} blockedUrlCategories
 */
CreateNetworkGroupPolicyRequestContentFiltering.prototype['blockedUrlCategories'] = undefined;

/**
 * @member {module:model/CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns} blockedUrlPatterns
 */
CreateNetworkGroupPolicyRequestContentFiltering.prototype['blockedUrlPatterns'] = undefined;






export default CreateNetworkGroupPolicyRequestContentFiltering;

