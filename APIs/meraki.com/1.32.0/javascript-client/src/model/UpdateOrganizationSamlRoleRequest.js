/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateOrganizationSamlRoleRequestNetworksInner from './CreateOrganizationSamlRoleRequestNetworksInner';
import CreateOrganizationSamlRoleRequestTagsInner from './CreateOrganizationSamlRoleRequestTagsInner';

/**
 * The UpdateOrganizationSamlRoleRequest model module.
 * @module model/UpdateOrganizationSamlRoleRequest
 * @version 1.32.0
 */
class UpdateOrganizationSamlRoleRequest {
    /**
     * Constructs a new <code>UpdateOrganizationSamlRoleRequest</code>.
     * @alias module:model/UpdateOrganizationSamlRoleRequest
     */
    constructor() { 
        
        UpdateOrganizationSamlRoleRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateOrganizationSamlRoleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOrganizationSamlRoleRequest} obj Optional instance to populate.
     * @return {module:model/UpdateOrganizationSamlRoleRequest} The populated <code>UpdateOrganizationSamlRoleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOrganizationSamlRoleRequest();

            if (data.hasOwnProperty('networks')) {
                obj['networks'] = ApiClient.convertToType(data['networks'], [CreateOrganizationSamlRoleRequestNetworksInner]);
            }
            if (data.hasOwnProperty('orgAccess')) {
                obj['orgAccess'] = ApiClient.convertToType(data['orgAccess'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [CreateOrganizationSamlRoleRequestTagsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOrganizationSamlRoleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOrganizationSamlRoleRequest</code>.
     */
    static validateJSON(data) {
        if (data['networks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['networks'])) {
                throw new Error("Expected the field `networks` to be an array in the JSON data but got " + data['networks']);
            }
            // validate the optional field `networks` (array)
            for (const item of data['networks']) {
                CreateOrganizationSamlRoleRequestNetworksInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['orgAccess'] && !(typeof data['orgAccess'] === 'string' || data['orgAccess'] instanceof String)) {
            throw new Error("Expected the field `orgAccess` to be a primitive type in the JSON string but got " + data['orgAccess']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                CreateOrganizationSamlRoleRequestTagsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of networks that the SAML administrator has privileges on
 * @member {Array.<module:model/CreateOrganizationSamlRoleRequestNetworksInner>} networks
 */
UpdateOrganizationSamlRoleRequest.prototype['networks'] = undefined;

/**
 * The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
 * @member {module:model/UpdateOrganizationSamlRoleRequest.OrgAccessEnum} orgAccess
 */
UpdateOrganizationSamlRoleRequest.prototype['orgAccess'] = undefined;

/**
 * The role of the SAML administrator
 * @member {String} role
 */
UpdateOrganizationSamlRoleRequest.prototype['role'] = undefined;

/**
 * The list of tags that the SAML administrator has privleges on
 * @member {Array.<module:model/CreateOrganizationSamlRoleRequestTagsInner>} tags
 */
UpdateOrganizationSamlRoleRequest.prototype['tags'] = undefined;





/**
 * Allowed values for the <code>orgAccess</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOrganizationSamlRoleRequest['OrgAccessEnum'] = {

    /**
     * value: "enterprise"
     * @const
     */
    "enterprise": "enterprise",

    /**
     * value: "full"
     * @const
     */
    "full": "full",

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "read-only"
     * @const
     */
    "read-only": "read-only"
};



export default UpdateOrganizationSamlRoleRequest;

