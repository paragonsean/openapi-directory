/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion model module.
 * @module model/GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion
 * @version 1.32.0
 */
class GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion {
    /**
     * Constructs a new <code>GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion</code>.
     * Version the device is upgrading to
     * @alias module:model/GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion
     */
    constructor() { 
        
        GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion} obj Optional instance to populate.
     * @return {module:model/GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion} The populated <code>GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('releaseDate')) {
                obj['releaseDate'] = ApiClient.convertToType(data['releaseDate'], 'String');
            }
            if (data.hasOwnProperty('releaseType')) {
                obj['releaseType'] = ApiClient.convertToType(data['releaseType'], 'String');
            }
            if (data.hasOwnProperty('shortName')) {
                obj['shortName'] = ApiClient.convertToType(data['shortName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['releaseDate'] && !(typeof data['releaseDate'] === 'string' || data['releaseDate'] instanceof String)) {
            throw new Error("Expected the field `releaseDate` to be a primitive type in the JSON string but got " + data['releaseDate']);
        }
        // ensure the json data is a string
        if (data['releaseType'] && !(typeof data['releaseType'] === 'string' || data['releaseType'] instanceof String)) {
            throw new Error("Expected the field `releaseType` to be a primitive type in the JSON string but got " + data['releaseType']);
        }
        // ensure the json data is a string
        if (data['shortName'] && !(typeof data['shortName'] === 'string' || data['shortName'] instanceof String)) {
            throw new Error("Expected the field `shortName` to be a primitive type in the JSON string but got " + data['shortName']);
        }

        return true;
    }


}



/**
 * ID of the initial firmware version
 * @member {String} id
 */
GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion.prototype['id'] = undefined;

/**
 * Release date of the firmware version
 * @member {String} releaseDate
 */
GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion.prototype['releaseDate'] = undefined;

/**
 * Release type of the firmware version
 * @member {String} releaseType
 */
GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion.prototype['releaseType'] = undefined;

/**
 * Firmware version short name
 * @member {String} shortName
 */
GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion.prototype['shortName'] = undefined;






export default GetOrganizationFirmwareUpgradesByDevice200ResponseInnerUpgradeToVersion;

