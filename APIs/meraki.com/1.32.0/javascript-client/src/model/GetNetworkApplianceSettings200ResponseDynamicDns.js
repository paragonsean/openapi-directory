/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetNetworkApplianceSettings200ResponseDynamicDns model module.
 * @module model/GetNetworkApplianceSettings200ResponseDynamicDns
 * @version 1.32.0
 */
class GetNetworkApplianceSettings200ResponseDynamicDns {
    /**
     * Constructs a new <code>GetNetworkApplianceSettings200ResponseDynamicDns</code>.
     * Dynamic DNS settings for a network
     * @alias module:model/GetNetworkApplianceSettings200ResponseDynamicDns
     */
    constructor() { 
        
        GetNetworkApplianceSettings200ResponseDynamicDns.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNetworkApplianceSettings200ResponseDynamicDns</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNetworkApplianceSettings200ResponseDynamicDns} obj Optional instance to populate.
     * @return {module:model/GetNetworkApplianceSettings200ResponseDynamicDns} The populated <code>GetNetworkApplianceSettings200ResponseDynamicDns</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNetworkApplianceSettings200ResponseDynamicDns();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('prefix')) {
                obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNetworkApplianceSettings200ResponseDynamicDns</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNetworkApplianceSettings200ResponseDynamicDns</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['prefix'] && !(typeof data['prefix'] === 'string' || data['prefix'] instanceof String)) {
            throw new Error("Expected the field `prefix` to be a primitive type in the JSON string but got " + data['prefix']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Dynamic DNS enabled
 * @member {Boolean} enabled
 */
GetNetworkApplianceSettings200ResponseDynamicDns.prototype['enabled'] = undefined;

/**
 * Dynamic DNS url prefix. DDNS must be enabled to update
 * @member {String} prefix
 */
GetNetworkApplianceSettings200ResponseDynamicDns.prototype['prefix'] = undefined;

/**
 * Dynamic DNS url. DDNS must be enabled to update
 * @member {String} url
 */
GetNetworkApplianceSettings200ResponseDynamicDns.prototype['url'] = undefined;






export default GetNetworkApplianceSettings200ResponseDynamicDns;

