/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModifyNetworkSmDevicesTagsRequest model module.
 * @module model/ModifyNetworkSmDevicesTagsRequest
 * @version 1.32.0
 */
class ModifyNetworkSmDevicesTagsRequest {
    /**
     * Constructs a new <code>ModifyNetworkSmDevicesTagsRequest</code>.
     * @alias module:model/ModifyNetworkSmDevicesTagsRequest
     * @param tags {Array.<String>} The tags to be added, deleted, or updated.
     * @param updateAction {String} One of add, delete, or update. Only devices that have been modified will be returned.
     */
    constructor(tags, updateAction) { 
        
        ModifyNetworkSmDevicesTagsRequest.initialize(this, tags, updateAction);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tags, updateAction) { 
        obj['tags'] = tags;
        obj['updateAction'] = updateAction;
    }

    /**
     * Constructs a <code>ModifyNetworkSmDevicesTagsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModifyNetworkSmDevicesTagsRequest} obj Optional instance to populate.
     * @return {module:model/ModifyNetworkSmDevicesTagsRequest} The populated <code>ModifyNetworkSmDevicesTagsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModifyNetworkSmDevicesTagsRequest();

            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['String']);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], ['String']);
            }
            if (data.hasOwnProperty('serials')) {
                obj['serials'] = ApiClient.convertToType(data['serials'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('updateAction')) {
                obj['updateAction'] = ApiClient.convertToType(data['updateAction'], 'String');
            }
            if (data.hasOwnProperty('wifiMacs')) {
                obj['wifiMacs'] = ApiClient.convertToType(data['wifiMacs'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModifyNetworkSmDevicesTagsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModifyNetworkSmDevicesTagsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModifyNetworkSmDevicesTagsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ids'])) {
            throw new Error("Expected the field `ids` to be an array in the JSON data but got " + data['ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scope'])) {
            throw new Error("Expected the field `scope` to be an array in the JSON data but got " + data['scope']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['serials'])) {
            throw new Error("Expected the field `serials` to be an array in the JSON data but got " + data['serials']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['updateAction'] && !(typeof data['updateAction'] === 'string' || data['updateAction'] instanceof String)) {
            throw new Error("Expected the field `updateAction` to be a primitive type in the JSON string but got " + data['updateAction']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['wifiMacs'])) {
            throw new Error("Expected the field `wifiMacs` to be an array in the JSON data but got " + data['wifiMacs']);
        }

        return true;
    }


}

ModifyNetworkSmDevicesTagsRequest.RequiredProperties = ["tags", "updateAction"];

/**
 * The ids of the devices to be modified.
 * @member {Array.<String>} ids
 */
ModifyNetworkSmDevicesTagsRequest.prototype['ids'] = undefined;

/**
 * The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.
 * @member {Array.<String>} scope
 */
ModifyNetworkSmDevicesTagsRequest.prototype['scope'] = undefined;

/**
 * The serials of the devices to be modified.
 * @member {Array.<String>} serials
 */
ModifyNetworkSmDevicesTagsRequest.prototype['serials'] = undefined;

/**
 * The tags to be added, deleted, or updated.
 * @member {Array.<String>} tags
 */
ModifyNetworkSmDevicesTagsRequest.prototype['tags'] = undefined;

/**
 * One of add, delete, or update. Only devices that have been modified will be returned.
 * @member {String} updateAction
 */
ModifyNetworkSmDevicesTagsRequest.prototype['updateAction'] = undefined;

/**
 * The wifiMacs of the devices to be modified.
 * @member {Array.<String>} wifiMacs
 */
ModifyNetworkSmDevicesTagsRequest.prototype['wifiMacs'] = undefined;






export default ModifyNetworkSmDevicesTagsRequest;

