/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNetworkWirelessRfProfile201ResponseApBandSettings from './CreateNetworkWirelessRfProfile201ResponseApBandSettings';
import CreateNetworkWirelessRfProfile201ResponsePerSsidSettings from './CreateNetworkWirelessRfProfile201ResponsePerSsidSettings';
import CreateNetworkWirelessRfProfileRequestFiveGhzSettings from './CreateNetworkWirelessRfProfileRequestFiveGhzSettings';
import CreateNetworkWirelessRfProfileRequestTransmission from './CreateNetworkWirelessRfProfileRequestTransmission';
import CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings from './CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings';

/**
 * The CreateNetworkWirelessRfProfile201Response model module.
 * @module model/CreateNetworkWirelessRfProfile201Response
 * @version 1.32.0
 */
class CreateNetworkWirelessRfProfile201Response {
    /**
     * Constructs a new <code>CreateNetworkWirelessRfProfile201Response</code>.
     * @alias module:model/CreateNetworkWirelessRfProfile201Response
     */
    constructor() { 
        
        CreateNetworkWirelessRfProfile201Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateNetworkWirelessRfProfile201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkWirelessRfProfile201Response} obj Optional instance to populate.
     * @return {module:model/CreateNetworkWirelessRfProfile201Response} The populated <code>CreateNetworkWirelessRfProfile201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkWirelessRfProfile201Response();

            if (data.hasOwnProperty('apBandSettings')) {
                obj['apBandSettings'] = CreateNetworkWirelessRfProfile201ResponseApBandSettings.constructFromObject(data['apBandSettings']);
            }
            if (data.hasOwnProperty('bandSelectionType')) {
                obj['bandSelectionType'] = ApiClient.convertToType(data['bandSelectionType'], 'String');
            }
            if (data.hasOwnProperty('clientBalancingEnabled')) {
                obj['clientBalancingEnabled'] = ApiClient.convertToType(data['clientBalancingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('fiveGhzSettings')) {
                obj['fiveGhzSettings'] = CreateNetworkWirelessRfProfileRequestFiveGhzSettings.constructFromObject(data['fiveGhzSettings']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('minBitrateType')) {
                obj['minBitrateType'] = ApiClient.convertToType(data['minBitrateType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkId')) {
                obj['networkId'] = ApiClient.convertToType(data['networkId'], 'String');
            }
            if (data.hasOwnProperty('perSsidSettings')) {
                obj['perSsidSettings'] = CreateNetworkWirelessRfProfile201ResponsePerSsidSettings.constructFromObject(data['perSsidSettings']);
            }
            if (data.hasOwnProperty('transmission')) {
                obj['transmission'] = CreateNetworkWirelessRfProfileRequestTransmission.constructFromObject(data['transmission']);
            }
            if (data.hasOwnProperty('twoFourGhzSettings')) {
                obj['twoFourGhzSettings'] = CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings.constructFromObject(data['twoFourGhzSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkWirelessRfProfile201Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkWirelessRfProfile201Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `apBandSettings`
        if (data['apBandSettings']) { // data not null
          CreateNetworkWirelessRfProfile201ResponseApBandSettings.validateJSON(data['apBandSettings']);
        }
        // ensure the json data is a string
        if (data['bandSelectionType'] && !(typeof data['bandSelectionType'] === 'string' || data['bandSelectionType'] instanceof String)) {
            throw new Error("Expected the field `bandSelectionType` to be a primitive type in the JSON string but got " + data['bandSelectionType']);
        }
        // validate the optional field `fiveGhzSettings`
        if (data['fiveGhzSettings']) { // data not null
          CreateNetworkWirelessRfProfileRequestFiveGhzSettings.validateJSON(data['fiveGhzSettings']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['minBitrateType'] && !(typeof data['minBitrateType'] === 'string' || data['minBitrateType'] instanceof String)) {
            throw new Error("Expected the field `minBitrateType` to be a primitive type in the JSON string but got " + data['minBitrateType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['networkId'] && !(typeof data['networkId'] === 'string' || data['networkId'] instanceof String)) {
            throw new Error("Expected the field `networkId` to be a primitive type in the JSON string but got " + data['networkId']);
        }
        // validate the optional field `perSsidSettings`
        if (data['perSsidSettings']) { // data not null
          CreateNetworkWirelessRfProfile201ResponsePerSsidSettings.validateJSON(data['perSsidSettings']);
        }
        // validate the optional field `transmission`
        if (data['transmission']) { // data not null
          CreateNetworkWirelessRfProfileRequestTransmission.validateJSON(data['transmission']);
        }
        // validate the optional field `twoFourGhzSettings`
        if (data['twoFourGhzSettings']) { // data not null
          CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings.validateJSON(data['twoFourGhzSettings']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateNetworkWirelessRfProfile201ResponseApBandSettings} apBandSettings
 */
CreateNetworkWirelessRfProfile201Response.prototype['apBandSettings'] = undefined;

/**
 * Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
 * @member {String} bandSelectionType
 */
CreateNetworkWirelessRfProfile201Response.prototype['bandSelectionType'] = undefined;

/**
 * Steers client to best available access point. Can be either true or false. Defaults to true.
 * @member {Boolean} clientBalancingEnabled
 */
CreateNetworkWirelessRfProfile201Response.prototype['clientBalancingEnabled'] = undefined;

/**
 * @member {module:model/CreateNetworkWirelessRfProfileRequestFiveGhzSettings} fiveGhzSettings
 */
CreateNetworkWirelessRfProfile201Response.prototype['fiveGhzSettings'] = undefined;

/**
 * The name of the new profile. Must be unique.
 * @member {String} id
 */
CreateNetworkWirelessRfProfile201Response.prototype['id'] = undefined;

/**
 * Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
 * @member {String} minBitrateType
 */
CreateNetworkWirelessRfProfile201Response.prototype['minBitrateType'] = undefined;

/**
 * The name of the new profile. Must be unique. This param is required on creation.
 * @member {String} name
 */
CreateNetworkWirelessRfProfile201Response.prototype['name'] = undefined;

/**
 * The network ID of the RF Profile
 * @member {String} networkId
 */
CreateNetworkWirelessRfProfile201Response.prototype['networkId'] = undefined;

/**
 * @member {module:model/CreateNetworkWirelessRfProfile201ResponsePerSsidSettings} perSsidSettings
 */
CreateNetworkWirelessRfProfile201Response.prototype['perSsidSettings'] = undefined;

/**
 * @member {module:model/CreateNetworkWirelessRfProfileRequestTransmission} transmission
 */
CreateNetworkWirelessRfProfile201Response.prototype['transmission'] = undefined;

/**
 * @member {module:model/CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings} twoFourGhzSettings
 */
CreateNetworkWirelessRfProfile201Response.prototype['twoFourGhzSettings'] = undefined;






export default CreateNetworkWirelessRfProfile201Response;

