/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetAdministeredIdentitiesMe200ResponseAuthenticationApi from './GetAdministeredIdentitiesMe200ResponseAuthenticationApi';
import GetAdministeredIdentitiesMe200ResponseAuthenticationSaml from './GetAdministeredIdentitiesMe200ResponseAuthenticationSaml';
import GetAdministeredIdentitiesMe200ResponseAuthenticationTwoFactor from './GetAdministeredIdentitiesMe200ResponseAuthenticationTwoFactor';

/**
 * The GetAdministeredIdentitiesMe200ResponseAuthentication model module.
 * @module model/GetAdministeredIdentitiesMe200ResponseAuthentication
 * @version 1.32.0
 */
class GetAdministeredIdentitiesMe200ResponseAuthentication {
    /**
     * Constructs a new <code>GetAdministeredIdentitiesMe200ResponseAuthentication</code>.
     * Authentication info
     * @alias module:model/GetAdministeredIdentitiesMe200ResponseAuthentication
     */
    constructor() { 
        
        GetAdministeredIdentitiesMe200ResponseAuthentication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetAdministeredIdentitiesMe200ResponseAuthentication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAdministeredIdentitiesMe200ResponseAuthentication} obj Optional instance to populate.
     * @return {module:model/GetAdministeredIdentitiesMe200ResponseAuthentication} The populated <code>GetAdministeredIdentitiesMe200ResponseAuthentication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAdministeredIdentitiesMe200ResponseAuthentication();

            if (data.hasOwnProperty('api')) {
                obj['api'] = GetAdministeredIdentitiesMe200ResponseAuthenticationApi.constructFromObject(data['api']);
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('saml')) {
                obj['saml'] = GetAdministeredIdentitiesMe200ResponseAuthenticationSaml.constructFromObject(data['saml']);
            }
            if (data.hasOwnProperty('twoFactor')) {
                obj['twoFactor'] = GetAdministeredIdentitiesMe200ResponseAuthenticationTwoFactor.constructFromObject(data['twoFactor']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAdministeredIdentitiesMe200ResponseAuthentication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAdministeredIdentitiesMe200ResponseAuthentication</code>.
     */
    static validateJSON(data) {
        // validate the optional field `api`
        if (data['api']) { // data not null
          GetAdministeredIdentitiesMe200ResponseAuthenticationApi.validateJSON(data['api']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // validate the optional field `saml`
        if (data['saml']) { // data not null
          GetAdministeredIdentitiesMe200ResponseAuthenticationSaml.validateJSON(data['saml']);
        }
        // validate the optional field `twoFactor`
        if (data['twoFactor']) { // data not null
          GetAdministeredIdentitiesMe200ResponseAuthenticationTwoFactor.validateJSON(data['twoFactor']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetAdministeredIdentitiesMe200ResponseAuthenticationApi} api
 */
GetAdministeredIdentitiesMe200ResponseAuthentication.prototype['api'] = undefined;

/**
 * Authentication mode
 * @member {String} mode
 */
GetAdministeredIdentitiesMe200ResponseAuthentication.prototype['mode'] = undefined;

/**
 * @member {module:model/GetAdministeredIdentitiesMe200ResponseAuthenticationSaml} saml
 */
GetAdministeredIdentitiesMe200ResponseAuthentication.prototype['saml'] = undefined;

/**
 * @member {module:model/GetAdministeredIdentitiesMe200ResponseAuthenticationTwoFactor} twoFactor
 */
GetAdministeredIdentitiesMe200ResponseAuthentication.prototype['twoFactor'] = undefined;






export default GetAdministeredIdentitiesMe200ResponseAuthentication;

