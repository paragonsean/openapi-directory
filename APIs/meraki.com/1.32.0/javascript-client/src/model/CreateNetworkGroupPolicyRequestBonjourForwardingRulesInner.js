/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner model module.
 * @module model/CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner
 * @version 1.32.0
 */
class CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner {
    /**
     * Constructs a new <code>CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner</code>.
     * @alias module:model/CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner
     * @param services {Array.<module:model/CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.ServicesEnum>} A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
     * @param vlanId {String} The ID of the service VLAN. Required.
     */
    constructor(services, vlanId) { 
        
        CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.initialize(this, services, vlanId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, services, vlanId) { 
        obj['services'] = services;
        obj['vlanId'] = vlanId;
    }

    /**
     * Constructs a <code>CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner} obj Optional instance to populate.
     * @return {module:model/CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner} The populated <code>CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], ['String']);
            }
            if (data.hasOwnProperty('vlanId')) {
                obj['vlanId'] = ApiClient.convertToType(data['vlanId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['services'])) {
            throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
        }
        // ensure the json data is a string
        if (data['vlanId'] && !(typeof data['vlanId'] === 'string' || data['vlanId'] instanceof String)) {
            throw new Error("Expected the field `vlanId` to be a primitive type in the JSON string but got " + data['vlanId']);
        }

        return true;
    }


}

CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.RequiredProperties = ["services", "vlanId"];

/**
 * A description for your Bonjour forwarding rule. Optional.
 * @member {String} description
 */
CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.prototype['description'] = undefined;

/**
 * A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
 * @member {Array.<module:model/CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.ServicesEnum>} services
 */
CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.prototype['services'] = undefined;

/**
 * The ID of the service VLAN. Required.
 * @member {String} vlanId
 */
CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner.prototype['vlanId'] = undefined;





/**
 * Allowed values for the <code>services</code> property.
 * @enum {String}
 * @readonly
 */
CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner['ServicesEnum'] = {

    /**
     * value: "AFP"
     * @const
     */
    "AFP": "AFP",

    /**
     * value: "AirPlay"
     * @const
     */
    "AirPlay": "AirPlay",

    /**
     * value: "All Services"
     * @const
     */
    "All Services": "All Services",

    /**
     * value: "BitTorrent"
     * @const
     */
    "BitTorrent": "BitTorrent",

    /**
     * value: "FTP"
     * @const
     */
    "FTP": "FTP",

    /**
     * value: "Printers"
     * @const
     */
    "Printers": "Printers",

    /**
     * value: "SSH"
     * @const
     */
    "SSH": "SSH",

    /**
     * value: "Samba"
     * @const
     */
    "Samba": "Samba",

    /**
     * value: "Scanners"
     * @const
     */
    "Scanners": "Scanners",

    /**
     * value: "iChat"
     * @const
     */
    "iChat": "iChat",

    /**
     * value: "iTunes"
     * @const
     */
    "iTunes": "iTunes"
};



export default CreateNetworkGroupPolicyRequestBonjourForwardingRulesInner;

