# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_appliance_static_route_request_reserved_ip_ranges_inner import UpdateNetworkApplianceStaticRouteRequestReservedIpRangesInner
from openapi_server import util


class UpdateNetworkApplianceStaticRouteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, fixed_ip_assignments: object=None, gateway_ip: str=None, gateway_vlan_id: str=None, name: str=None, reserved_ip_ranges: List[UpdateNetworkApplianceStaticRouteRequestReservedIpRangesInner]=None, subnet: str=None):
        """UpdateNetworkApplianceStaticRouteRequest - a model defined in OpenAPI

        :param enabled: The enabled of this UpdateNetworkApplianceStaticRouteRequest.
        :param fixed_ip_assignments: The fixed_ip_assignments of this UpdateNetworkApplianceStaticRouteRequest.
        :param gateway_ip: The gateway_ip of this UpdateNetworkApplianceStaticRouteRequest.
        :param gateway_vlan_id: The gateway_vlan_id of this UpdateNetworkApplianceStaticRouteRequest.
        :param name: The name of this UpdateNetworkApplianceStaticRouteRequest.
        :param reserved_ip_ranges: The reserved_ip_ranges of this UpdateNetworkApplianceStaticRouteRequest.
        :param subnet: The subnet of this UpdateNetworkApplianceStaticRouteRequest.
        """
        self.openapi_types = {
            'enabled': bool,
            'fixed_ip_assignments': object,
            'gateway_ip': str,
            'gateway_vlan_id': str,
            'name': str,
            'reserved_ip_ranges': List[UpdateNetworkApplianceStaticRouteRequestReservedIpRangesInner],
            'subnet': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'fixed_ip_assignments': 'fixedIpAssignments',
            'gateway_ip': 'gatewayIp',
            'gateway_vlan_id': 'gatewayVlanId',
            'name': 'name',
            'reserved_ip_ranges': 'reservedIpRanges',
            'subnet': 'subnet'
        }

        self._enabled = enabled
        self._fixed_ip_assignments = fixed_ip_assignments
        self._gateway_ip = gateway_ip
        self._gateway_vlan_id = gateway_vlan_id
        self._name = name
        self._reserved_ip_ranges = reserved_ip_ranges
        self._subnet = subnet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkApplianceStaticRouteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkApplianceStaticRoute_request of this UpdateNetworkApplianceStaticRouteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkApplianceStaticRouteRequest.

        The enabled state of the static route

        :return: The enabled of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkApplianceStaticRouteRequest.

        The enabled state of the static route

        :param enabled: The enabled of this UpdateNetworkApplianceStaticRouteRequest.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def fixed_ip_assignments(self):
        """Gets the fixed_ip_assignments of this UpdateNetworkApplianceStaticRouteRequest.

        The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.

        :return: The fixed_ip_assignments of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: object
        """
        return self._fixed_ip_assignments

    @fixed_ip_assignments.setter
    def fixed_ip_assignments(self, fixed_ip_assignments):
        """Sets the fixed_ip_assignments of this UpdateNetworkApplianceStaticRouteRequest.

        The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.

        :param fixed_ip_assignments: The fixed_ip_assignments of this UpdateNetworkApplianceStaticRouteRequest.
        :type fixed_ip_assignments: object
        """

        self._fixed_ip_assignments = fixed_ip_assignments

    @property
    def gateway_ip(self):
        """Gets the gateway_ip of this UpdateNetworkApplianceStaticRouteRequest.

        The gateway IP (next hop) of the static route

        :return: The gateway_ip of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: str
        """
        return self._gateway_ip

    @gateway_ip.setter
    def gateway_ip(self, gateway_ip):
        """Sets the gateway_ip of this UpdateNetworkApplianceStaticRouteRequest.

        The gateway IP (next hop) of the static route

        :param gateway_ip: The gateway_ip of this UpdateNetworkApplianceStaticRouteRequest.
        :type gateway_ip: str
        """

        self._gateway_ip = gateway_ip

    @property
    def gateway_vlan_id(self):
        """Gets the gateway_vlan_id of this UpdateNetworkApplianceStaticRouteRequest.

        The gateway IP (next hop) VLAN ID of the static route

        :return: The gateway_vlan_id of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: str
        """
        return self._gateway_vlan_id

    @gateway_vlan_id.setter
    def gateway_vlan_id(self, gateway_vlan_id):
        """Sets the gateway_vlan_id of this UpdateNetworkApplianceStaticRouteRequest.

        The gateway IP (next hop) VLAN ID of the static route

        :param gateway_vlan_id: The gateway_vlan_id of this UpdateNetworkApplianceStaticRouteRequest.
        :type gateway_vlan_id: str
        """

        self._gateway_vlan_id = gateway_vlan_id

    @property
    def name(self):
        """Gets the name of this UpdateNetworkApplianceStaticRouteRequest.

        The name of the static route

        :return: The name of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateNetworkApplianceStaticRouteRequest.

        The name of the static route

        :param name: The name of this UpdateNetworkApplianceStaticRouteRequest.
        :type name: str
        """

        self._name = name

    @property
    def reserved_ip_ranges(self):
        """Gets the reserved_ip_ranges of this UpdateNetworkApplianceStaticRouteRequest.

        The DHCP reserved IP ranges on the static route

        :return: The reserved_ip_ranges of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: List[UpdateNetworkApplianceStaticRouteRequestReservedIpRangesInner]
        """
        return self._reserved_ip_ranges

    @reserved_ip_ranges.setter
    def reserved_ip_ranges(self, reserved_ip_ranges):
        """Sets the reserved_ip_ranges of this UpdateNetworkApplianceStaticRouteRequest.

        The DHCP reserved IP ranges on the static route

        :param reserved_ip_ranges: The reserved_ip_ranges of this UpdateNetworkApplianceStaticRouteRequest.
        :type reserved_ip_ranges: List[UpdateNetworkApplianceStaticRouteRequestReservedIpRangesInner]
        """

        self._reserved_ip_ranges = reserved_ip_ranges

    @property
    def subnet(self):
        """Gets the subnet of this UpdateNetworkApplianceStaticRouteRequest.

        The subnet of the static route

        :return: The subnet of this UpdateNetworkApplianceStaticRouteRequest.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this UpdateNetworkApplianceStaticRouteRequest.

        The subnet of the static route

        :param subnet: The subnet of this UpdateNetworkApplianceStaticRouteRequest.
        :type subnet: str
        """

        self._subnet = subnet
