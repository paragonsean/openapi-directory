# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_wireless_ssid_hotspot20_request_mcc_mncs_inner import UpdateNetworkWirelessSsidHotspot20RequestMccMncsInner
from openapi_server.models.update_network_wireless_ssid_hotspot20_request_nai_realms_inner import UpdateNetworkWirelessSsidHotspot20RequestNaiRealmsInner
from openapi_server.models.update_network_wireless_ssid_hotspot20_request_operator import UpdateNetworkWirelessSsidHotspot20RequestOperator
from openapi_server.models.update_network_wireless_ssid_hotspot20_request_venue import UpdateNetworkWirelessSsidHotspot20RequestVenue
from openapi_server import util


class UpdateNetworkWirelessSsidHotspot20Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domains: List[str]=None, enabled: bool=None, mcc_mncs: List[UpdateNetworkWirelessSsidHotspot20RequestMccMncsInner]=None, nai_realms: List[UpdateNetworkWirelessSsidHotspot20RequestNaiRealmsInner]=None, network_access_type: str=None, operator: UpdateNetworkWirelessSsidHotspot20RequestOperator=None, roam_consort_ois: List[str]=None, venue: UpdateNetworkWirelessSsidHotspot20RequestVenue=None):
        """UpdateNetworkWirelessSsidHotspot20Request - a model defined in OpenAPI

        :param domains: The domains of this UpdateNetworkWirelessSsidHotspot20Request.
        :param enabled: The enabled of this UpdateNetworkWirelessSsidHotspot20Request.
        :param mcc_mncs: The mcc_mncs of this UpdateNetworkWirelessSsidHotspot20Request.
        :param nai_realms: The nai_realms of this UpdateNetworkWirelessSsidHotspot20Request.
        :param network_access_type: The network_access_type of this UpdateNetworkWirelessSsidHotspot20Request.
        :param operator: The operator of this UpdateNetworkWirelessSsidHotspot20Request.
        :param roam_consort_ois: The roam_consort_ois of this UpdateNetworkWirelessSsidHotspot20Request.
        :param venue: The venue of this UpdateNetworkWirelessSsidHotspot20Request.
        """
        self.openapi_types = {
            'domains': List[str],
            'enabled': bool,
            'mcc_mncs': List[UpdateNetworkWirelessSsidHotspot20RequestMccMncsInner],
            'nai_realms': List[UpdateNetworkWirelessSsidHotspot20RequestNaiRealmsInner],
            'network_access_type': str,
            'operator': UpdateNetworkWirelessSsidHotspot20RequestOperator,
            'roam_consort_ois': List[str],
            'venue': UpdateNetworkWirelessSsidHotspot20RequestVenue
        }

        self.attribute_map = {
            'domains': 'domains',
            'enabled': 'enabled',
            'mcc_mncs': 'mccMncs',
            'nai_realms': 'naiRealms',
            'network_access_type': 'networkAccessType',
            'operator': 'operator',
            'roam_consort_ois': 'roamConsortOis',
            'venue': 'venue'
        }

        self._domains = domains
        self._enabled = enabled
        self._mcc_mncs = mcc_mncs
        self._nai_realms = nai_realms
        self._network_access_type = network_access_type
        self._operator = operator
        self._roam_consort_ois = roam_consort_ois
        self._venue = venue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessSsidHotspot20Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessSsidHotspot20_request of this UpdateNetworkWirelessSsidHotspot20Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domains(self):
        """Gets the domains of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of domain names

        :return: The domains of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: List[str]
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of domain names

        :param domains: The domains of this UpdateNetworkWirelessSsidHotspot20Request.
        :type domains: List[str]
        """

        self._domains = domains

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkWirelessSsidHotspot20Request.

        Whether or not Hotspot 2.0 for this SSID is enabled

        :return: The enabled of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkWirelessSsidHotspot20Request.

        Whether or not Hotspot 2.0 for this SSID is enabled

        :param enabled: The enabled of this UpdateNetworkWirelessSsidHotspot20Request.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def mcc_mncs(self):
        """Gets the mcc_mncs of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of MCC/MNC pairs

        :return: The mcc_mncs of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: List[UpdateNetworkWirelessSsidHotspot20RequestMccMncsInner]
        """
        return self._mcc_mncs

    @mcc_mncs.setter
    def mcc_mncs(self, mcc_mncs):
        """Sets the mcc_mncs of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of MCC/MNC pairs

        :param mcc_mncs: The mcc_mncs of this UpdateNetworkWirelessSsidHotspot20Request.
        :type mcc_mncs: List[UpdateNetworkWirelessSsidHotspot20RequestMccMncsInner]
        """

        self._mcc_mncs = mcc_mncs

    @property
    def nai_realms(self):
        """Gets the nai_realms of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of NAI realms

        :return: The nai_realms of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: List[UpdateNetworkWirelessSsidHotspot20RequestNaiRealmsInner]
        """
        return self._nai_realms

    @nai_realms.setter
    def nai_realms(self, nai_realms):
        """Sets the nai_realms of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of NAI realms

        :param nai_realms: The nai_realms of this UpdateNetworkWirelessSsidHotspot20Request.
        :type nai_realms: List[UpdateNetworkWirelessSsidHotspot20RequestNaiRealmsInner]
        """

        self._nai_realms = nai_realms

    @property
    def network_access_type(self):
        """Gets the network_access_type of this UpdateNetworkWirelessSsidHotspot20Request.

        The network type of this SSID ('Private network', 'Private network with guest access', 'Chargeable public network', 'Free public network', 'Personal device network', 'Emergency services only network', 'Test or experimental', 'Wildcard')

        :return: The network_access_type of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: str
        """
        return self._network_access_type

    @network_access_type.setter
    def network_access_type(self, network_access_type):
        """Sets the network_access_type of this UpdateNetworkWirelessSsidHotspot20Request.

        The network type of this SSID ('Private network', 'Private network with guest access', 'Chargeable public network', 'Free public network', 'Personal device network', 'Emergency services only network', 'Test or experimental', 'Wildcard')

        :param network_access_type: The network_access_type of this UpdateNetworkWirelessSsidHotspot20Request.
        :type network_access_type: str
        """
        allowed_values = ["Chargeable public network", "Emergency services only network", "Free public network", "Personal device network", "Private network", "Private network with guest access", "Test or experimental", "Wildcard"]  # noqa: E501
        if network_access_type not in allowed_values:
            raise ValueError(
                "Invalid value for `network_access_type` ({0}), must be one of {1}"
                .format(network_access_type, allowed_values)
            )

        self._network_access_type = network_access_type

    @property
    def operator(self):
        """Gets the operator of this UpdateNetworkWirelessSsidHotspot20Request.


        :return: The operator of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: UpdateNetworkWirelessSsidHotspot20RequestOperator
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this UpdateNetworkWirelessSsidHotspot20Request.


        :param operator: The operator of this UpdateNetworkWirelessSsidHotspot20Request.
        :type operator: UpdateNetworkWirelessSsidHotspot20RequestOperator
        """

        self._operator = operator

    @property
    def roam_consort_ois(self):
        """Gets the roam_consort_ois of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of roaming consortium OIs (hexadecimal number 3-5 octets in length)

        :return: The roam_consort_ois of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: List[str]
        """
        return self._roam_consort_ois

    @roam_consort_ois.setter
    def roam_consort_ois(self, roam_consort_ois):
        """Sets the roam_consort_ois of this UpdateNetworkWirelessSsidHotspot20Request.

        An array of roaming consortium OIs (hexadecimal number 3-5 octets in length)

        :param roam_consort_ois: The roam_consort_ois of this UpdateNetworkWirelessSsidHotspot20Request.
        :type roam_consort_ois: List[str]
        """

        self._roam_consort_ois = roam_consort_ois

    @property
    def venue(self):
        """Gets the venue of this UpdateNetworkWirelessSsidHotspot20Request.


        :return: The venue of this UpdateNetworkWirelessSsidHotspot20Request.
        :rtype: UpdateNetworkWirelessSsidHotspot20RequestVenue
        """
        return self._venue

    @venue.setter
    def venue(self, venue):
        """Sets the venue of this UpdateNetworkWirelessSsidHotspot20Request.


        :param venue: The venue of this UpdateNetworkWirelessSsidHotspot20Request.
        :type venue: UpdateNetworkWirelessSsidHotspot20RequestVenue
        """

        self._venue = venue
