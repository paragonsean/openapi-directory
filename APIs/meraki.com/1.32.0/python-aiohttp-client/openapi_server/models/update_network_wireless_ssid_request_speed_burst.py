# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkWirelessSsidRequestSpeedBurst(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None):
        """UpdateNetworkWirelessSsidRequestSpeedBurst - a model defined in OpenAPI

        :param enabled: The enabled of this UpdateNetworkWirelessSsidRequestSpeedBurst.
        """
        self.openapi_types = {
            'enabled': bool
        }

        self.attribute_map = {
            'enabled': 'enabled'
        }

        self._enabled = enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessSsidRequestSpeedBurst':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessSsid_request_speedBurst of this UpdateNetworkWirelessSsidRequestSpeedBurst.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkWirelessSsidRequestSpeedBurst.

        Boolean indicating whether or not to allow users to temporarily exceed the bandwidth limit for short periods while still keeping them under the bandwidth limit over time.

        :return: The enabled of this UpdateNetworkWirelessSsidRequestSpeedBurst.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkWirelessSsidRequestSpeedBurst.

        Boolean indicating whether or not to allow users to temporarily exceed the bandwidth limit for short periods while still keeping them under the bandwidth limit over time.

        :param enabled: The enabled of this UpdateNetworkWirelessSsidRequestSpeedBurst.
        :type enabled: bool
        """

        self._enabled = enabled
