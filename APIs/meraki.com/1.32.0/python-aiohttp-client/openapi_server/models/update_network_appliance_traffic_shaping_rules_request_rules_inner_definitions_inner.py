# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, value: str=None):
        """UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner - a model defined in OpenAPI

        :param type: The type of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        :param value: The value of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        """
        self.openapi_types = {
            'type': str,
            'value': str
        }

        self.attribute_map = {
            'type': 'type',
            'value': 'value'
        }

        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkApplianceTrafficShapingRules_request_rules_inner_definitions_inner of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.

        The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.

        :return: The type of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.

        The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.

        :param type: The type of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        :type type: str
        """
        allowed_values = ["application", "applicationCategory", "host", "ipRange", "localNet", "port"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def value(self):
        """Gets the value of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.

            If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either     a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",     \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding     custom ports.      If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object     with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or     application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories     endpoint). 

        :return: The value of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.

            If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either     a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",     \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding     custom ports.      If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object     with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or     application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories     endpoint). 

        :param value: The value of this UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.
        :type value: str
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
