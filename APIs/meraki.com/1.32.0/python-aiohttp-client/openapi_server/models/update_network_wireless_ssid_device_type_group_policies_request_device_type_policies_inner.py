# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_policy: str=None, device_type: str=None, group_policy_id: int=None):
        """UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner - a model defined in OpenAPI

        :param device_policy: The device_policy of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :param device_type: The device_type of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :param group_policy_id: The group_policy_id of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        """
        self.openapi_types = {
            'device_policy': str,
            'device_type': str,
            'group_policy_id': int
        }

        self.attribute_map = {
            'device_policy': 'devicePolicy',
            'device_type': 'deviceType',
            'group_policy_id': 'groupPolicyId'
        }

        self._device_policy = device_policy
        self._device_type = device_type
        self._group_policy_id = group_policy_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessSsidDeviceTypeGroupPolicies_request_deviceTypePolicies_inner of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_policy(self):
        """Gets the device_policy of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.

        The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'

        :return: The device_policy of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :rtype: str
        """
        return self._device_policy

    @device_policy.setter
    def device_policy(self, device_policy):
        """Sets the device_policy of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.

        The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'

        :param device_policy: The device_policy of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :type device_policy: str
        """
        allowed_values = ["Allowed", "Blocked", "Group policy"]  # noqa: E501
        if device_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `device_policy` ({0}), must be one of {1}"
                .format(device_policy, allowed_values)
            )

        self._device_policy = device_policy

    @property
    def device_type(self):
        """Gets the device_type of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.

        The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'

        :return: The device_type of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.

        The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'

        :param device_type: The device_type of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :type device_type: str
        """
        allowed_values = ["Android", "B&N Nook", "BlackBerry", "Chrome OS", "Mac OS X", "Other OS", "Windows", "Windows Phone", "iPad", "iPhone", "iPod"]  # noqa: E501
        if device_type not in allowed_values:
            raise ValueError(
                "Invalid value for `device_type` ({0}), must be one of {1}"
                .format(device_type, allowed_values)
            )

        self._device_type = device_type

    @property
    def group_policy_id(self):
        """Gets the group_policy_id of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.

        ID of the group policy object.

        :return: The group_policy_id of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :rtype: int
        """
        return self._group_policy_id

    @group_policy_id.setter
    def group_policy_id(self, group_policy_id):
        """Sets the group_policy_id of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.

        ID of the group policy object.

        :param group_policy_id: The group_policy_id of this UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestDeviceTypePoliciesInner.
        :type group_policy_id: int
        """

        self._group_policy_id = group_policy_id
