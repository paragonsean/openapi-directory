# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDeviceLiveToolsPing200ResponseResultsLatencies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: float=None, maximum: float=None, minimum: float=None):
        """GetDeviceLiveToolsPing200ResponseResultsLatencies - a model defined in OpenAPI

        :param average: The average of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :param maximum: The maximum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :param minimum: The minimum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        """
        self.openapi_types = {
            'average': float,
            'maximum': float,
            'minimum': float
        }

        self.attribute_map = {
            'average': 'average',
            'maximum': 'maximum',
            'minimum': 'minimum'
        }

        self._average = average
        self._maximum = maximum
        self._minimum = minimum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDeviceLiveToolsPing200ResponseResultsLatencies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDeviceLiveToolsPing_200_response_results_latencies of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this GetDeviceLiveToolsPing200ResponseResultsLatencies.

        Average latency

        :return: The average of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :rtype: float
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this GetDeviceLiveToolsPing200ResponseResultsLatencies.

        Average latency

        :param average: The average of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :type average: float
        """

        self._average = average

    @property
    def maximum(self):
        """Gets the maximum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.

        Maximum latency

        :return: The maximum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.

        Maximum latency

        :param maximum: The maximum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :type maximum: float
        """

        self._maximum = maximum

    @property
    def minimum(self):
        """Gets the minimum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.

        Minimum latency

        :return: The minimum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :rtype: float
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.

        Minimum latency

        :param minimum: The minimum of this GetDeviceLiveToolsPing200ResponseResultsLatencies.
        :type minimum: float
        """

        self._minimum = minimum
