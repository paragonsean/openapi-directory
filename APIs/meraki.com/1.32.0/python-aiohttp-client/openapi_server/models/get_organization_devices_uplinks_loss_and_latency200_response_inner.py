# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_devices_uplinks_loss_and_latency200_response_inner_time_series_inner import GetOrganizationDevicesUplinksLossAndLatency200ResponseInnerTimeSeriesInner
from openapi_server import util


class GetOrganizationDevicesUplinksLossAndLatency200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip: str=None, network_id: str=None, serial: str=None, time_series: List[GetOrganizationDevicesUplinksLossAndLatency200ResponseInnerTimeSeriesInner]=None, uplink: str=None):
        """GetOrganizationDevicesUplinksLossAndLatency200ResponseInner - a model defined in OpenAPI

        :param ip: The ip of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :param network_id: The network_id of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :param serial: The serial of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :param time_series: The time_series of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :param uplink: The uplink of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        """
        self.openapi_types = {
            'ip': str,
            'network_id': str,
            'serial': str,
            'time_series': List[GetOrganizationDevicesUplinksLossAndLatency200ResponseInnerTimeSeriesInner],
            'uplink': str
        }

        self.attribute_map = {
            'ip': 'ip',
            'network_id': 'networkId',
            'serial': 'serial',
            'time_series': 'timeSeries',
            'uplink': 'uplink'
        }

        self._ip = ip
        self._network_id = network_id
        self._serial = serial
        self._time_series = time_series
        self._uplink = uplink

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationDevicesUplinksLossAndLatency200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationDevicesUplinksLossAndLatency_200_response_inner of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip(self):
        """Gets the ip of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        IP address of uplink

        :return: The ip of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        IP address of uplink

        :param ip: The ip of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :type ip: str
        """

        self._ip = ip

    @property
    def network_id(self):
        """Gets the network_id of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Network ID

        :return: The network_id of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Network ID

        :param network_id: The network_id of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Serial of MX device

        :return: The serial of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Serial of MX device

        :param serial: The serial of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def time_series(self):
        """Gets the time_series of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Loss and latency timeseries data

        :return: The time_series of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :rtype: List[GetOrganizationDevicesUplinksLossAndLatency200ResponseInnerTimeSeriesInner]
        """
        return self._time_series

    @time_series.setter
    def time_series(self, time_series):
        """Sets the time_series of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Loss and latency timeseries data

        :param time_series: The time_series of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :type time_series: List[GetOrganizationDevicesUplinksLossAndLatency200ResponseInnerTimeSeriesInner]
        """

        self._time_series = time_series

    @property
    def uplink(self):
        """Gets the uplink of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Uplink interface (wan1, wan2, or cellular)

        :return: The uplink of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :rtype: str
        """
        return self._uplink

    @uplink.setter
    def uplink(self, uplink):
        """Sets the uplink of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.

        Uplink interface (wan1, wan2, or cellular)

        :param uplink: The uplink of this GetOrganizationDevicesUplinksLossAndLatency200ResponseInner.
        :type uplink: str
        """

        self._uplink = uplink
