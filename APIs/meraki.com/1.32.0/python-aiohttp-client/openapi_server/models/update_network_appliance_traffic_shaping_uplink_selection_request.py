# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_appliance_traffic_shaping_uplink_selection_request_failover_and_failback import UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestFailoverAndFailback
from openapi_server.models.update_network_appliance_traffic_shaping_uplink_selection_request_vpn_traffic_uplink_preferences_inner import UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestVpnTrafficUplinkPreferencesInner
from openapi_server.models.update_network_appliance_traffic_shaping_uplink_selection_request_wan_traffic_uplink_preferences_inner import UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestWanTrafficUplinkPreferencesInner
from openapi_server import util


class UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_active_auto_vpn_enabled: bool=None, default_uplink: str=None, failover_and_failback: UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestFailoverAndFailback=None, load_balancing_enabled: bool=None, vpn_traffic_uplink_preferences: List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestVpnTrafficUplinkPreferencesInner]=None, wan_traffic_uplink_preferences: List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestWanTrafficUplinkPreferencesInner]=None):
        """UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest - a model defined in OpenAPI

        :param active_active_auto_vpn_enabled: The active_active_auto_vpn_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :param default_uplink: The default_uplink of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :param failover_and_failback: The failover_and_failback of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :param load_balancing_enabled: The load_balancing_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :param vpn_traffic_uplink_preferences: The vpn_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :param wan_traffic_uplink_preferences: The wan_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        """
        self.openapi_types = {
            'active_active_auto_vpn_enabled': bool,
            'default_uplink': str,
            'failover_and_failback': UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestFailoverAndFailback,
            'load_balancing_enabled': bool,
            'vpn_traffic_uplink_preferences': List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestVpnTrafficUplinkPreferencesInner],
            'wan_traffic_uplink_preferences': List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestWanTrafficUplinkPreferencesInner]
        }

        self.attribute_map = {
            'active_active_auto_vpn_enabled': 'activeActiveAutoVpnEnabled',
            'default_uplink': 'defaultUplink',
            'failover_and_failback': 'failoverAndFailback',
            'load_balancing_enabled': 'loadBalancingEnabled',
            'vpn_traffic_uplink_preferences': 'vpnTrafficUplinkPreferences',
            'wan_traffic_uplink_preferences': 'wanTrafficUplinkPreferences'
        }

        self._active_active_auto_vpn_enabled = active_active_auto_vpn_enabled
        self._default_uplink = default_uplink
        self._failover_and_failback = failover_and_failback
        self._load_balancing_enabled = load_balancing_enabled
        self._vpn_traffic_uplink_preferences = vpn_traffic_uplink_preferences
        self._wan_traffic_uplink_preferences = wan_traffic_uplink_preferences

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkApplianceTrafficShapingUplinkSelection_request of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_active_auto_vpn_enabled(self):
        """Gets the active_active_auto_vpn_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Toggle for enabling or disabling active-active AutoVPN

        :return: The active_active_auto_vpn_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :rtype: bool
        """
        return self._active_active_auto_vpn_enabled

    @active_active_auto_vpn_enabled.setter
    def active_active_auto_vpn_enabled(self, active_active_auto_vpn_enabled):
        """Sets the active_active_auto_vpn_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Toggle for enabling or disabling active-active AutoVPN

        :param active_active_auto_vpn_enabled: The active_active_auto_vpn_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :type active_active_auto_vpn_enabled: bool
        """

        self._active_active_auto_vpn_enabled = active_active_auto_vpn_enabled

    @property
    def default_uplink(self):
        """Gets the default_uplink of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        The default uplink. Must be one of: 'wan1' or 'wan2'

        :return: The default_uplink of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :rtype: str
        """
        return self._default_uplink

    @default_uplink.setter
    def default_uplink(self, default_uplink):
        """Sets the default_uplink of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        The default uplink. Must be one of: 'wan1' or 'wan2'

        :param default_uplink: The default_uplink of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :type default_uplink: str
        """
        allowed_values = ["wan1", "wan2"]  # noqa: E501
        if default_uplink not in allowed_values:
            raise ValueError(
                "Invalid value for `default_uplink` ({0}), must be one of {1}"
                .format(default_uplink, allowed_values)
            )

        self._default_uplink = default_uplink

    @property
    def failover_and_failback(self):
        """Gets the failover_and_failback of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.


        :return: The failover_and_failback of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :rtype: UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestFailoverAndFailback
        """
        return self._failover_and_failback

    @failover_and_failback.setter
    def failover_and_failback(self, failover_and_failback):
        """Sets the failover_and_failback of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.


        :param failover_and_failback: The failover_and_failback of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :type failover_and_failback: UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestFailoverAndFailback
        """

        self._failover_and_failback = failover_and_failback

    @property
    def load_balancing_enabled(self):
        """Gets the load_balancing_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Toggle for enabling or disabling load balancing

        :return: The load_balancing_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :rtype: bool
        """
        return self._load_balancing_enabled

    @load_balancing_enabled.setter
    def load_balancing_enabled(self, load_balancing_enabled):
        """Sets the load_balancing_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Toggle for enabling or disabling load balancing

        :param load_balancing_enabled: The load_balancing_enabled of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :type load_balancing_enabled: bool
        """

        self._load_balancing_enabled = load_balancing_enabled

    @property
    def vpn_traffic_uplink_preferences(self):
        """Gets the vpn_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Array of uplink preference rules for VPN traffic

        :return: The vpn_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :rtype: List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestVpnTrafficUplinkPreferencesInner]
        """
        return self._vpn_traffic_uplink_preferences

    @vpn_traffic_uplink_preferences.setter
    def vpn_traffic_uplink_preferences(self, vpn_traffic_uplink_preferences):
        """Sets the vpn_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Array of uplink preference rules for VPN traffic

        :param vpn_traffic_uplink_preferences: The vpn_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :type vpn_traffic_uplink_preferences: List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestVpnTrafficUplinkPreferencesInner]
        """

        self._vpn_traffic_uplink_preferences = vpn_traffic_uplink_preferences

    @property
    def wan_traffic_uplink_preferences(self):
        """Gets the wan_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Array of uplink preference rules for WAN traffic

        :return: The wan_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :rtype: List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestWanTrafficUplinkPreferencesInner]
        """
        return self._wan_traffic_uplink_preferences

    @wan_traffic_uplink_preferences.setter
    def wan_traffic_uplink_preferences(self, wan_traffic_uplink_preferences):
        """Sets the wan_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.

        Array of uplink preference rules for WAN traffic

        :param wan_traffic_uplink_preferences: The wan_traffic_uplink_preferences of this UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest.
        :type wan_traffic_uplink_preferences: List[UpdateNetworkApplianceTrafficShapingUplinkSelectionRequestWanTrafficUplinkPreferencesInner]
        """

        self._wan_traffic_uplink_preferences = wan_traffic_uplink_preferences
