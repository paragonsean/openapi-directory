# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_firmware_upgrades_rollback_request_reasons_inner import CreateNetworkFirmwareUpgradesRollbackRequestReasonsInner
from openapi_server.models.update_network_firmware_upgrades_staged_events_request_stages_inner import UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInner
from openapi_server import util


class RollbacksNetworkFirmwareUpgradesStagedEventsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reasons: List[CreateNetworkFirmwareUpgradesRollbackRequestReasonsInner]=None, stages: List[UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInner]=None):
        """RollbacksNetworkFirmwareUpgradesStagedEventsRequest - a model defined in OpenAPI

        :param reasons: The reasons of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        :param stages: The stages of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        """
        self.openapi_types = {
            'reasons': List[CreateNetworkFirmwareUpgradesRollbackRequestReasonsInner],
            'stages': List[UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInner]
        }

        self.attribute_map = {
            'reasons': 'reasons',
            'stages': 'stages'
        }

        self._reasons = reasons
        self._stages = stages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RollbacksNetworkFirmwareUpgradesStagedEventsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rollbacksNetworkFirmwareUpgradesStagedEvents_request of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reasons(self):
        """Gets the reasons of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.

        The reason for rolling back the staged upgrade

        :return: The reasons of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        :rtype: List[CreateNetworkFirmwareUpgradesRollbackRequestReasonsInner]
        """
        return self._reasons

    @reasons.setter
    def reasons(self, reasons):
        """Sets the reasons of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.

        The reason for rolling back the staged upgrade

        :param reasons: The reasons of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        :type reasons: List[CreateNetworkFirmwareUpgradesRollbackRequestReasonsInner]
        """

        self._reasons = reasons

    @property
    def stages(self):
        """Gets the stages of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.

        All completed or in-progress stages in the network with their new start times. All pending stages will be canceled

        :return: The stages of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        :rtype: List[UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInner]
        """
        return self._stages

    @stages.setter
    def stages(self, stages):
        """Sets the stages of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.

        All completed or in-progress stages in the network with their new start times. All pending stages will be canceled

        :param stages: The stages of this RollbacksNetworkFirmwareUpgradesStagedEventsRequest.
        :type stages: List[UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInner]
        """
        if stages is None:
            raise ValueError("Invalid value for `stages`, must not be `None`")

        self._stages = stages
