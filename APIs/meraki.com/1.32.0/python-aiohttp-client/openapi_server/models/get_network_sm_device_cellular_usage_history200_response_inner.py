# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkSmDeviceCellularUsageHistory200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, received: float=None, sent: float=None, ts: str=None):
        """GetNetworkSmDeviceCellularUsageHistory200ResponseInner - a model defined in OpenAPI

        :param received: The received of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :param sent: The sent of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :param ts: The ts of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        """
        self.openapi_types = {
            'received': float,
            'sent': float,
            'ts': str
        }

        self.attribute_map = {
            'received': 'received',
            'sent': 'sent',
            'ts': 'ts'
        }

        self._received = received
        self._sent = sent
        self._ts = ts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSmDeviceCellularUsageHistory200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSmDeviceCellularUsageHistory_200_response_inner of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def received(self):
        """Gets the received of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.

        The amount of cellular data received by the device.

        :return: The received of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :rtype: float
        """
        return self._received

    @received.setter
    def received(self, received):
        """Sets the received of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.

        The amount of cellular data received by the device.

        :param received: The received of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :type received: float
        """

        self._received = received

    @property
    def sent(self):
        """Gets the sent of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.

        The amount of cellular sent received by the device.

        :return: The sent of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :rtype: float
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.

        The amount of cellular sent received by the device.

        :param sent: The sent of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :type sent: float
        """

        self._sent = sent

    @property
    def ts(self):
        """Gets the ts of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.

        When the cellular usage data was collected.

        :return: The ts of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :rtype: str
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.

        When the cellular usage data was collected.

        :param ts: The ts of this GetNetworkSmDeviceCellularUsageHistory200ResponseInner.
        :type ts: str
        """

        self._ts = ts
