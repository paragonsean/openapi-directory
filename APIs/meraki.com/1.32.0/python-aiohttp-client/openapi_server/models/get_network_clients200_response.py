# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_clients200_response_usage import GetNetworkClients200ResponseUsage
from openapi_server import util


class GetNetworkClients200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adaptive_policy_group: str=None, description: str=None, device_type_prediction: str=None, first_seen: int=None, group_policy8021x: str=None, id: str=None, ip: str=None, ip6: str=None, ip6_local: str=None, last_seen: int=None, mac: str=None, manufacturer: str=None, named_vlan: str=None, notes: str=None, os: str=None, recent_device_connection: str=None, recent_device_mac: str=None, recent_device_name: str=None, recent_device_serial: str=None, sm_installed: bool=None, ssid: str=None, status: str=None, switchport: str=None, usage: GetNetworkClients200ResponseUsage=None, user: str=None, vlan: str=None, wireless_capabilities: str=None):
        """GetNetworkClients200Response - a model defined in OpenAPI

        :param adaptive_policy_group: The adaptive_policy_group of this GetNetworkClients200Response.
        :param description: The description of this GetNetworkClients200Response.
        :param device_type_prediction: The device_type_prediction of this GetNetworkClients200Response.
        :param first_seen: The first_seen of this GetNetworkClients200Response.
        :param group_policy8021x: The group_policy8021x of this GetNetworkClients200Response.
        :param id: The id of this GetNetworkClients200Response.
        :param ip: The ip of this GetNetworkClients200Response.
        :param ip6: The ip6 of this GetNetworkClients200Response.
        :param ip6_local: The ip6_local of this GetNetworkClients200Response.
        :param last_seen: The last_seen of this GetNetworkClients200Response.
        :param mac: The mac of this GetNetworkClients200Response.
        :param manufacturer: The manufacturer of this GetNetworkClients200Response.
        :param named_vlan: The named_vlan of this GetNetworkClients200Response.
        :param notes: The notes of this GetNetworkClients200Response.
        :param os: The os of this GetNetworkClients200Response.
        :param recent_device_connection: The recent_device_connection of this GetNetworkClients200Response.
        :param recent_device_mac: The recent_device_mac of this GetNetworkClients200Response.
        :param recent_device_name: The recent_device_name of this GetNetworkClients200Response.
        :param recent_device_serial: The recent_device_serial of this GetNetworkClients200Response.
        :param sm_installed: The sm_installed of this GetNetworkClients200Response.
        :param ssid: The ssid of this GetNetworkClients200Response.
        :param status: The status of this GetNetworkClients200Response.
        :param switchport: The switchport of this GetNetworkClients200Response.
        :param usage: The usage of this GetNetworkClients200Response.
        :param user: The user of this GetNetworkClients200Response.
        :param vlan: The vlan of this GetNetworkClients200Response.
        :param wireless_capabilities: The wireless_capabilities of this GetNetworkClients200Response.
        """
        self.openapi_types = {
            'adaptive_policy_group': str,
            'description': str,
            'device_type_prediction': str,
            'first_seen': int,
            'group_policy8021x': str,
            'id': str,
            'ip': str,
            'ip6': str,
            'ip6_local': str,
            'last_seen': int,
            'mac': str,
            'manufacturer': str,
            'named_vlan': str,
            'notes': str,
            'os': str,
            'recent_device_connection': str,
            'recent_device_mac': str,
            'recent_device_name': str,
            'recent_device_serial': str,
            'sm_installed': bool,
            'ssid': str,
            'status': str,
            'switchport': str,
            'usage': GetNetworkClients200ResponseUsage,
            'user': str,
            'vlan': str,
            'wireless_capabilities': str
        }

        self.attribute_map = {
            'adaptive_policy_group': 'adaptivePolicyGroup',
            'description': 'description',
            'device_type_prediction': 'deviceTypePrediction',
            'first_seen': 'firstSeen',
            'group_policy8021x': 'groupPolicy8021x',
            'id': 'id',
            'ip': 'ip',
            'ip6': 'ip6',
            'ip6_local': 'ip6Local',
            'last_seen': 'lastSeen',
            'mac': 'mac',
            'manufacturer': 'manufacturer',
            'named_vlan': 'namedVlan',
            'notes': 'notes',
            'os': 'os',
            'recent_device_connection': 'recentDeviceConnection',
            'recent_device_mac': 'recentDeviceMac',
            'recent_device_name': 'recentDeviceName',
            'recent_device_serial': 'recentDeviceSerial',
            'sm_installed': 'smInstalled',
            'ssid': 'ssid',
            'status': 'status',
            'switchport': 'switchport',
            'usage': 'usage',
            'user': 'user',
            'vlan': 'vlan',
            'wireless_capabilities': 'wirelessCapabilities'
        }

        self._adaptive_policy_group = adaptive_policy_group
        self._description = description
        self._device_type_prediction = device_type_prediction
        self._first_seen = first_seen
        self._group_policy8021x = group_policy8021x
        self._id = id
        self._ip = ip
        self._ip6 = ip6
        self._ip6_local = ip6_local
        self._last_seen = last_seen
        self._mac = mac
        self._manufacturer = manufacturer
        self._named_vlan = named_vlan
        self._notes = notes
        self._os = os
        self._recent_device_connection = recent_device_connection
        self._recent_device_mac = recent_device_mac
        self._recent_device_name = recent_device_name
        self._recent_device_serial = recent_device_serial
        self._sm_installed = sm_installed
        self._ssid = ssid
        self._status = status
        self._switchport = switchport
        self._usage = usage
        self._user = user
        self._vlan = vlan
        self._wireless_capabilities = wireless_capabilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkClients200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkClients_200_response of this GetNetworkClients200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adaptive_policy_group(self):
        """Gets the adaptive_policy_group of this GetNetworkClients200Response.

        The adaptive policy group of the client

        :return: The adaptive_policy_group of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._adaptive_policy_group

    @adaptive_policy_group.setter
    def adaptive_policy_group(self, adaptive_policy_group):
        """Sets the adaptive_policy_group of this GetNetworkClients200Response.

        The adaptive policy group of the client

        :param adaptive_policy_group: The adaptive_policy_group of this GetNetworkClients200Response.
        :type adaptive_policy_group: str
        """

        self._adaptive_policy_group = adaptive_policy_group

    @property
    def description(self):
        """Gets the description of this GetNetworkClients200Response.

        Short description of the client

        :return: The description of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetNetworkClients200Response.

        Short description of the client

        :param description: The description of this GetNetworkClients200Response.
        :type description: str
        """

        self._description = description

    @property
    def device_type_prediction(self):
        """Gets the device_type_prediction of this GetNetworkClients200Response.

        Prediction of the client's device type

        :return: The device_type_prediction of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._device_type_prediction

    @device_type_prediction.setter
    def device_type_prediction(self, device_type_prediction):
        """Sets the device_type_prediction of this GetNetworkClients200Response.

        Prediction of the client's device type

        :param device_type_prediction: The device_type_prediction of this GetNetworkClients200Response.
        :type device_type_prediction: str
        """

        self._device_type_prediction = device_type_prediction

    @property
    def first_seen(self):
        """Gets the first_seen of this GetNetworkClients200Response.

        Timestamp client was first seen in the network

        :return: The first_seen of this GetNetworkClients200Response.
        :rtype: int
        """
        return self._first_seen

    @first_seen.setter
    def first_seen(self, first_seen):
        """Sets the first_seen of this GetNetworkClients200Response.

        Timestamp client was first seen in the network

        :param first_seen: The first_seen of this GetNetworkClients200Response.
        :type first_seen: int
        """

        self._first_seen = first_seen

    @property
    def group_policy8021x(self):
        """Gets the group_policy8021x of this GetNetworkClients200Response.

        802.1x group policy of the client

        :return: The group_policy8021x of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._group_policy8021x

    @group_policy8021x.setter
    def group_policy8021x(self, group_policy8021x):
        """Sets the group_policy8021x of this GetNetworkClients200Response.

        802.1x group policy of the client

        :param group_policy8021x: The group_policy8021x of this GetNetworkClients200Response.
        :type group_policy8021x: str
        """

        self._group_policy8021x = group_policy8021x

    @property
    def id(self):
        """Gets the id of this GetNetworkClients200Response.

        The ID of the client

        :return: The id of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkClients200Response.

        The ID of the client

        :param id: The id of this GetNetworkClients200Response.
        :type id: str
        """

        self._id = id

    @property
    def ip(self):
        """Gets the ip of this GetNetworkClients200Response.

        The IP address of the client

        :return: The ip of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this GetNetworkClients200Response.

        The IP address of the client

        :param ip: The ip of this GetNetworkClients200Response.
        :type ip: str
        """

        self._ip = ip

    @property
    def ip6(self):
        """Gets the ip6 of this GetNetworkClients200Response.

        The IPv6 address of the client

        :return: The ip6 of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._ip6

    @ip6.setter
    def ip6(self, ip6):
        """Sets the ip6 of this GetNetworkClients200Response.

        The IPv6 address of the client

        :param ip6: The ip6 of this GetNetworkClients200Response.
        :type ip6: str
        """

        self._ip6 = ip6

    @property
    def ip6_local(self):
        """Gets the ip6_local of this GetNetworkClients200Response.

        Local IPv6 address of the client

        :return: The ip6_local of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._ip6_local

    @ip6_local.setter
    def ip6_local(self, ip6_local):
        """Sets the ip6_local of this GetNetworkClients200Response.

        Local IPv6 address of the client

        :param ip6_local: The ip6_local of this GetNetworkClients200Response.
        :type ip6_local: str
        """

        self._ip6_local = ip6_local

    @property
    def last_seen(self):
        """Gets the last_seen of this GetNetworkClients200Response.

        Timestamp client was last seen in the network

        :return: The last_seen of this GetNetworkClients200Response.
        :rtype: int
        """
        return self._last_seen

    @last_seen.setter
    def last_seen(self, last_seen):
        """Sets the last_seen of this GetNetworkClients200Response.

        Timestamp client was last seen in the network

        :param last_seen: The last_seen of this GetNetworkClients200Response.
        :type last_seen: int
        """

        self._last_seen = last_seen

    @property
    def mac(self):
        """Gets the mac of this GetNetworkClients200Response.

        The MAC address of the client

        :return: The mac of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetNetworkClients200Response.

        The MAC address of the client

        :param mac: The mac of this GetNetworkClients200Response.
        :type mac: str
        """

        self._mac = mac

    @property
    def manufacturer(self):
        """Gets the manufacturer of this GetNetworkClients200Response.

        Manufacturer of the client

        :return: The manufacturer of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this GetNetworkClients200Response.

        Manufacturer of the client

        :param manufacturer: The manufacturer of this GetNetworkClients200Response.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def named_vlan(self):
        """Gets the named_vlan of this GetNetworkClients200Response.

        Named VLAN of the client

        :return: The named_vlan of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._named_vlan

    @named_vlan.setter
    def named_vlan(self, named_vlan):
        """Sets the named_vlan of this GetNetworkClients200Response.

        Named VLAN of the client

        :param named_vlan: The named_vlan of this GetNetworkClients200Response.
        :type named_vlan: str
        """

        self._named_vlan = named_vlan

    @property
    def notes(self):
        """Gets the notes of this GetNetworkClients200Response.

        Notes on the client

        :return: The notes of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this GetNetworkClients200Response.

        Notes on the client

        :param notes: The notes of this GetNetworkClients200Response.
        :type notes: str
        """

        self._notes = notes

    @property
    def os(self):
        """Gets the os of this GetNetworkClients200Response.

        The operating system of the client

        :return: The os of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this GetNetworkClients200Response.

        The operating system of the client

        :param os: The os of this GetNetworkClients200Response.
        :type os: str
        """

        self._os = os

    @property
    def recent_device_connection(self):
        """Gets the recent_device_connection of this GetNetworkClients200Response.

        Client's most recent connection type

        :return: The recent_device_connection of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._recent_device_connection

    @recent_device_connection.setter
    def recent_device_connection(self, recent_device_connection):
        """Sets the recent_device_connection of this GetNetworkClients200Response.

        Client's most recent connection type

        :param recent_device_connection: The recent_device_connection of this GetNetworkClients200Response.
        :type recent_device_connection: str
        """
        allowed_values = ["Wired", "Wireless"]  # noqa: E501
        if recent_device_connection not in allowed_values:
            raise ValueError(
                "Invalid value for `recent_device_connection` ({0}), must be one of {1}"
                .format(recent_device_connection, allowed_values)
            )

        self._recent_device_connection = recent_device_connection

    @property
    def recent_device_mac(self):
        """Gets the recent_device_mac of this GetNetworkClients200Response.

        The MAC address of the node that the device was last connected to

        :return: The recent_device_mac of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._recent_device_mac

    @recent_device_mac.setter
    def recent_device_mac(self, recent_device_mac):
        """Sets the recent_device_mac of this GetNetworkClients200Response.

        The MAC address of the node that the device was last connected to

        :param recent_device_mac: The recent_device_mac of this GetNetworkClients200Response.
        :type recent_device_mac: str
        """

        self._recent_device_mac = recent_device_mac

    @property
    def recent_device_name(self):
        """Gets the recent_device_name of this GetNetworkClients200Response.

        The name of the node the device was last connected to

        :return: The recent_device_name of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._recent_device_name

    @recent_device_name.setter
    def recent_device_name(self, recent_device_name):
        """Sets the recent_device_name of this GetNetworkClients200Response.

        The name of the node the device was last connected to

        :param recent_device_name: The recent_device_name of this GetNetworkClients200Response.
        :type recent_device_name: str
        """

        self._recent_device_name = recent_device_name

    @property
    def recent_device_serial(self):
        """Gets the recent_device_serial of this GetNetworkClients200Response.

        The serial of the node the device was last connected to

        :return: The recent_device_serial of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._recent_device_serial

    @recent_device_serial.setter
    def recent_device_serial(self, recent_device_serial):
        """Sets the recent_device_serial of this GetNetworkClients200Response.

        The serial of the node the device was last connected to

        :param recent_device_serial: The recent_device_serial of this GetNetworkClients200Response.
        :type recent_device_serial: str
        """

        self._recent_device_serial = recent_device_serial

    @property
    def sm_installed(self):
        """Gets the sm_installed of this GetNetworkClients200Response.

        Status of SM for the client

        :return: The sm_installed of this GetNetworkClients200Response.
        :rtype: bool
        """
        return self._sm_installed

    @sm_installed.setter
    def sm_installed(self, sm_installed):
        """Sets the sm_installed of this GetNetworkClients200Response.

        Status of SM for the client

        :param sm_installed: The sm_installed of this GetNetworkClients200Response.
        :type sm_installed: bool
        """

        self._sm_installed = sm_installed

    @property
    def ssid(self):
        """Gets the ssid of this GetNetworkClients200Response.

        The name of the SSID that the client is connected to

        :return: The ssid of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._ssid

    @ssid.setter
    def ssid(self, ssid):
        """Sets the ssid of this GetNetworkClients200Response.

        The name of the SSID that the client is connected to

        :param ssid: The ssid of this GetNetworkClients200Response.
        :type ssid: str
        """

        self._ssid = ssid

    @property
    def status(self):
        """Gets the status of this GetNetworkClients200Response.

        The connection status of the client

        :return: The status of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetNetworkClients200Response.

        The connection status of the client

        :param status: The status of this GetNetworkClients200Response.
        :type status: str
        """
        allowed_values = ["Offline", "Online"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def switchport(self):
        """Gets the switchport of this GetNetworkClients200Response.

        The switch port that the client is connected to

        :return: The switchport of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._switchport

    @switchport.setter
    def switchport(self, switchport):
        """Sets the switchport of this GetNetworkClients200Response.

        The switch port that the client is connected to

        :param switchport: The switchport of this GetNetworkClients200Response.
        :type switchport: str
        """

        self._switchport = switchport

    @property
    def usage(self):
        """Gets the usage of this GetNetworkClients200Response.


        :return: The usage of this GetNetworkClients200Response.
        :rtype: GetNetworkClients200ResponseUsage
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this GetNetworkClients200Response.


        :param usage: The usage of this GetNetworkClients200Response.
        :type usage: GetNetworkClients200ResponseUsage
        """

        self._usage = usage

    @property
    def user(self):
        """Gets the user of this GetNetworkClients200Response.

        The username of the user of the client

        :return: The user of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this GetNetworkClients200Response.

        The username of the user of the client

        :param user: The user of this GetNetworkClients200Response.
        :type user: str
        """

        self._user = user

    @property
    def vlan(self):
        """Gets the vlan of this GetNetworkClients200Response.

        The name of the VLAN that the client is connected to

        :return: The vlan of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this GetNetworkClients200Response.

        The name of the VLAN that the client is connected to

        :param vlan: The vlan of this GetNetworkClients200Response.
        :type vlan: str
        """

        self._vlan = vlan

    @property
    def wireless_capabilities(self):
        """Gets the wireless_capabilities of this GetNetworkClients200Response.

        Wireless capabilities of the client

        :return: The wireless_capabilities of this GetNetworkClients200Response.
        :rtype: str
        """
        return self._wireless_capabilities

    @wireless_capabilities.setter
    def wireless_capabilities(self, wireless_capabilities):
        """Sets the wireless_capabilities of this GetNetworkClients200Response.

        Wireless capabilities of the client

        :param wireless_capabilities: The wireless_capabilities of this GetNetworkClients200Response.
        :type wireless_capabilities: str
        """

        self._wireless_capabilities = wireless_capabilities
