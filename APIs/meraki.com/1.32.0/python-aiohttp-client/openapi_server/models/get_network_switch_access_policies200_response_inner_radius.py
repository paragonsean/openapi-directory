# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_switch_access_policies200_response_inner_radius_critical_auth import GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth
from openapi_server import util


class GetNetworkSwitchAccessPolicies200ResponseInnerRadius(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, critical_auth: GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth=None, failed_auth_vlan_id: int=None, re_authentication_interval: int=None):
        """GetNetworkSwitchAccessPolicies200ResponseInnerRadius - a model defined in OpenAPI

        :param critical_auth: The critical_auth of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :param failed_auth_vlan_id: The failed_auth_vlan_id of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :param re_authentication_interval: The re_authentication_interval of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        """
        self.openapi_types = {
            'critical_auth': GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth,
            'failed_auth_vlan_id': int,
            're_authentication_interval': int
        }

        self.attribute_map = {
            'critical_auth': 'criticalAuth',
            'failed_auth_vlan_id': 'failedAuthVlanId',
            're_authentication_interval': 'reAuthenticationInterval'
        }

        self._critical_auth = critical_auth
        self._failed_auth_vlan_id = failed_auth_vlan_id
        self._re_authentication_interval = re_authentication_interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSwitchAccessPolicies200ResponseInnerRadius':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSwitchAccessPolicies_200_response_inner_radius of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def critical_auth(self):
        """Gets the critical_auth of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.


        :return: The critical_auth of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :rtype: GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth
        """
        return self._critical_auth

    @critical_auth.setter
    def critical_auth(self, critical_auth):
        """Sets the critical_auth of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.


        :param critical_auth: The critical_auth of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :type critical_auth: GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth
        """

        self._critical_auth = critical_auth

    @property
    def failed_auth_vlan_id(self):
        """Gets the failed_auth_vlan_id of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.

        VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth

        :return: The failed_auth_vlan_id of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :rtype: int
        """
        return self._failed_auth_vlan_id

    @failed_auth_vlan_id.setter
    def failed_auth_vlan_id(self, failed_auth_vlan_id):
        """Sets the failed_auth_vlan_id of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.

        VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth

        :param failed_auth_vlan_id: The failed_auth_vlan_id of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :type failed_auth_vlan_id: int
        """

        self._failed_auth_vlan_id = failed_auth_vlan_id

    @property
    def re_authentication_interval(self):
        """Gets the re_authentication_interval of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.

        Re-authentication period in seconds. Will be null if hostMode is Multi-Auth

        :return: The re_authentication_interval of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :rtype: int
        """
        return self._re_authentication_interval

    @re_authentication_interval.setter
    def re_authentication_interval(self, re_authentication_interval):
        """Sets the re_authentication_interval of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.

        Re-authentication period in seconds. Will be null if hostMode is Multi-Auth

        :param re_authentication_interval: The re_authentication_interval of this GetNetworkSwitchAccessPolicies200ResponseInnerRadius.
        :type re_authentication_interval: int
        """

        self._re_authentication_interval = re_authentication_interval
