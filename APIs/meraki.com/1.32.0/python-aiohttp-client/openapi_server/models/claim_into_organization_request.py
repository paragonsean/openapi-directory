# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.claim_into_organization_request_licenses_inner import ClaimIntoOrganizationRequestLicensesInner
from openapi_server import util


class ClaimIntoOrganizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, licenses: List[ClaimIntoOrganizationRequestLicensesInner]=None, orders: List[str]=None, serials: List[str]=None):
        """ClaimIntoOrganizationRequest - a model defined in OpenAPI

        :param licenses: The licenses of this ClaimIntoOrganizationRequest.
        :param orders: The orders of this ClaimIntoOrganizationRequest.
        :param serials: The serials of this ClaimIntoOrganizationRequest.
        """
        self.openapi_types = {
            'licenses': List[ClaimIntoOrganizationRequestLicensesInner],
            'orders': List[str],
            'serials': List[str]
        }

        self.attribute_map = {
            'licenses': 'licenses',
            'orders': 'orders',
            'serials': 'serials'
        }

        self._licenses = licenses
        self._orders = orders
        self._serials = serials

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClaimIntoOrganizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The claimIntoOrganization_request of this ClaimIntoOrganizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def licenses(self):
        """Gets the licenses of this ClaimIntoOrganizationRequest.

        The licenses that should be claimed

        :return: The licenses of this ClaimIntoOrganizationRequest.
        :rtype: List[ClaimIntoOrganizationRequestLicensesInner]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses):
        """Sets the licenses of this ClaimIntoOrganizationRequest.

        The licenses that should be claimed

        :param licenses: The licenses of this ClaimIntoOrganizationRequest.
        :type licenses: List[ClaimIntoOrganizationRequestLicensesInner]
        """

        self._licenses = licenses

    @property
    def orders(self):
        """Gets the orders of this ClaimIntoOrganizationRequest.

        The numbers of the orders that should be claimed

        :return: The orders of this ClaimIntoOrganizationRequest.
        :rtype: List[str]
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this ClaimIntoOrganizationRequest.

        The numbers of the orders that should be claimed

        :param orders: The orders of this ClaimIntoOrganizationRequest.
        :type orders: List[str]
        """

        self._orders = orders

    @property
    def serials(self):
        """Gets the serials of this ClaimIntoOrganizationRequest.

        The serials of the devices that should be claimed

        :return: The serials of this ClaimIntoOrganizationRequest.
        :rtype: List[str]
        """
        return self._serials

    @serials.setter
    def serials(self, serials):
        """Sets the serials of this ClaimIntoOrganizationRequest.

        The serials of the devices that should be claimed

        :param serials: The serials of this ClaimIntoOrganizationRequest.
        :type serials: List[str]
        """

        self._serials = serials
