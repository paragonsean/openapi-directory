# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ambient: int=None):
        """GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise - a model defined in OpenAPI

        :param ambient: The ambient of this GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise.
        """
        self.openapi_types = {
            'ambient': int
        }

        self.attribute_map = {
            'ambient': 'ambient'
        }

        self._ambient = ambient

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSensorAlertsOverviewByMetric_200_response_inner_counts_noise of this GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ambient(self):
        """Gets the ambient of this GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise.

        Number of sensor alerts that occurred due to ambient noise readings

        :return: The ambient of this GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise.
        :rtype: int
        """
        return self._ambient

    @ambient.setter
    def ambient(self, ambient):
        """Sets the ambient of this GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise.

        Number of sensor alerts that occurred due to ambient noise readings

        :param ambient: The ambient of this GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCountsNoise.
        :type ambient: int
        """

        self._ambient = ambient
