# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_alerts_settings_request_alerts_inner_alert_destinations import UpdateNetworkAlertsSettingsRequestAlertsInnerAlertDestinations
from openapi_server import util


class UpdateNetworkAlertsSettingsRequestAlertsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_destinations: UpdateNetworkAlertsSettingsRequestAlertsInnerAlertDestinations=None, enabled: bool=None, filters: object=None, type: str=None):
        """UpdateNetworkAlertsSettingsRequestAlertsInner - a model defined in OpenAPI

        :param alert_destinations: The alert_destinations of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :param enabled: The enabled of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :param filters: The filters of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :param type: The type of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        """
        self.openapi_types = {
            'alert_destinations': UpdateNetworkAlertsSettingsRequestAlertsInnerAlertDestinations,
            'enabled': bool,
            'filters': object,
            'type': str
        }

        self.attribute_map = {
            'alert_destinations': 'alertDestinations',
            'enabled': 'enabled',
            'filters': 'filters',
            'type': 'type'
        }

        self._alert_destinations = alert_destinations
        self._enabled = enabled
        self._filters = filters
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkAlertsSettingsRequestAlertsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkAlertsSettings_request_alerts_inner of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_destinations(self):
        """Gets the alert_destinations of this UpdateNetworkAlertsSettingsRequestAlertsInner.


        :return: The alert_destinations of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :rtype: UpdateNetworkAlertsSettingsRequestAlertsInnerAlertDestinations
        """
        return self._alert_destinations

    @alert_destinations.setter
    def alert_destinations(self, alert_destinations):
        """Sets the alert_destinations of this UpdateNetworkAlertsSettingsRequestAlertsInner.


        :param alert_destinations: The alert_destinations of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :type alert_destinations: UpdateNetworkAlertsSettingsRequestAlertsInnerAlertDestinations
        """

        self._alert_destinations = alert_destinations

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkAlertsSettingsRequestAlertsInner.

        A boolean depicting if the alert is turned on or off

        :return: The enabled of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkAlertsSettingsRequestAlertsInner.

        A boolean depicting if the alert is turned on or off

        :param enabled: The enabled of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def filters(self):
        """Gets the filters of this UpdateNetworkAlertsSettingsRequestAlertsInner.

        A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.

        :return: The filters of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :rtype: object
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this UpdateNetworkAlertsSettingsRequestAlertsInner.

        A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.

        :param filters: The filters of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :type filters: object
        """

        self._filters = filters

    @property
    def type(self):
        """Gets the type of this UpdateNetworkAlertsSettingsRequestAlertsInner.

        The type of alert

        :return: The type of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateNetworkAlertsSettingsRequestAlertsInner.

        The type of alert

        :param type: The type of this UpdateNetworkAlertsSettingsRequestAlertsInner.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
