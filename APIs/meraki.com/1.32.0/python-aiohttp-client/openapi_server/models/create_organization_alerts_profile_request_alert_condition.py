# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateOrganizationAlertsProfileRequestAlertCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bit_rate_bps: int=None, duration: int=None, interface: str=None, jitter_ms: int=None, latency_ms: int=None, loss_ratio: float=None, mos: float=None, window: int=None):
        """CreateOrganizationAlertsProfileRequestAlertCondition - a model defined in OpenAPI

        :param bit_rate_bps: The bit_rate_bps of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param duration: The duration of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param interface: The interface of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param jitter_ms: The jitter_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param latency_ms: The latency_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param loss_ratio: The loss_ratio of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param mos: The mos of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :param window: The window of this CreateOrganizationAlertsProfileRequestAlertCondition.
        """
        self.openapi_types = {
            'bit_rate_bps': int,
            'duration': int,
            'interface': str,
            'jitter_ms': int,
            'latency_ms': int,
            'loss_ratio': float,
            'mos': float,
            'window': int
        }

        self.attribute_map = {
            'bit_rate_bps': 'bit_rate_bps',
            'duration': 'duration',
            'interface': 'interface',
            'jitter_ms': 'jitter_ms',
            'latency_ms': 'latency_ms',
            'loss_ratio': 'loss_ratio',
            'mos': 'mos',
            'window': 'window'
        }

        self._bit_rate_bps = bit_rate_bps
        self._duration = duration
        self._interface = interface
        self._jitter_ms = jitter_ms
        self._latency_ms = latency_ms
        self._loss_ratio = loss_ratio
        self._mos = mos
        self._window = window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrganizationAlertsProfileRequestAlertCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createOrganizationAlertsProfile_request_alertCondition of this CreateOrganizationAlertsProfileRequestAlertCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bit_rate_bps(self):
        """Gets the bit_rate_bps of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.

        :return: The bit_rate_bps of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: int
        """
        return self._bit_rate_bps

    @bit_rate_bps.setter
    def bit_rate_bps(self, bit_rate_bps):
        """Sets the bit_rate_bps of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.

        :param bit_rate_bps: The bit_rate_bps of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type bit_rate_bps: int
        """

        self._bit_rate_bps = bit_rate_bps

    @property
    def duration(self):
        """Gets the duration of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The total duration in seconds that the threshold should be crossed before alerting

        :return: The duration of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The total duration in seconds that the threshold should be crossed before alerting

        :param duration: The duration of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type duration: int
        """

        self._duration = duration

    @property
    def interface(self):
        """Gets the interface of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular

        :return: The interface of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """Sets the interface of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular

        :param interface: The interface of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type interface: str
        """
        allowed_values = ["cellular", "wan1", "wan2"]  # noqa: E501
        if interface not in allowed_values:
            raise ValueError(
                "Invalid value for `interface` ({0}), must be one of {1}"
                .format(interface, allowed_values)
            )

        self._interface = interface

    @property
    def jitter_ms(self):
        """Gets the jitter_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.

        :return: The jitter_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: int
        """
        return self._jitter_ms

    @jitter_ms.setter
    def jitter_ms(self, jitter_ms):
        """Sets the jitter_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.

        :param jitter_ms: The jitter_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type jitter_ms: int
        """

        self._jitter_ms = jitter_ms

    @property
    def latency_ms(self):
        """Gets the latency_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.

        :return: The latency_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: int
        """
        return self._latency_ms

    @latency_ms.setter
    def latency_ms(self, latency_ms):
        """Sets the latency_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.

        :param latency_ms: The latency_ms of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type latency_ms: int
        """

        self._latency_ms = latency_ms

    @property
    def loss_ratio(self):
        """Gets the loss_ratio of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.

        :return: The loss_ratio of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: float
        """
        return self._loss_ratio

    @loss_ratio.setter
    def loss_ratio(self, loss_ratio):
        """Sets the loss_ratio of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.

        :param loss_ratio: The loss_ratio of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type loss_ratio: float
        """

        self._loss_ratio = loss_ratio

    @property
    def mos(self):
        """Gets the mos of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.

        :return: The mos of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: float
        """
        return self._mos

    @mos.setter
    def mos(self, mos):
        """Sets the mos of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.

        :param mos: The mos of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type mos: float
        """

        self._mos = mos

    @property
    def window(self):
        """Gets the window of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The look back period in seconds for sensing the alert

        :return: The window of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :rtype: int
        """
        return self._window

    @window.setter
    def window(self, window):
        """Sets the window of this CreateOrganizationAlertsProfileRequestAlertCondition.

        The look back period in seconds for sensing the alert

        :param window: The window of this CreateOrganizationAlertsProfileRequestAlertCondition.
        :type window: int
        """

        self._window = window
