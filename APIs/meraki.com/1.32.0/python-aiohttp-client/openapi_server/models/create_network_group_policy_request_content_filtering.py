# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_group_policy_request_content_filtering_allowed_url_patterns import CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns
from openapi_server.models.create_network_group_policy_request_content_filtering_blocked_url_categories import CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories
from openapi_server.models.create_network_group_policy_request_content_filtering_blocked_url_patterns import CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns
from openapi_server import util


class CreateNetworkGroupPolicyRequestContentFiltering(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_url_patterns: CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns=None, blocked_url_categories: CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories=None, blocked_url_patterns: CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns=None):
        """CreateNetworkGroupPolicyRequestContentFiltering - a model defined in OpenAPI

        :param allowed_url_patterns: The allowed_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.
        :param blocked_url_categories: The blocked_url_categories of this CreateNetworkGroupPolicyRequestContentFiltering.
        :param blocked_url_patterns: The blocked_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.
        """
        self.openapi_types = {
            'allowed_url_patterns': CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns,
            'blocked_url_categories': CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories,
            'blocked_url_patterns': CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns
        }

        self.attribute_map = {
            'allowed_url_patterns': 'allowedUrlPatterns',
            'blocked_url_categories': 'blockedUrlCategories',
            'blocked_url_patterns': 'blockedUrlPatterns'
        }

        self._allowed_url_patterns = allowed_url_patterns
        self._blocked_url_categories = blocked_url_categories
        self._blocked_url_patterns = blocked_url_patterns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkGroupPolicyRequestContentFiltering':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkGroupPolicy_request_contentFiltering of this CreateNetworkGroupPolicyRequestContentFiltering.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_url_patterns(self):
        """Gets the allowed_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.


        :return: The allowed_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.
        :rtype: CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns
        """
        return self._allowed_url_patterns

    @allowed_url_patterns.setter
    def allowed_url_patterns(self, allowed_url_patterns):
        """Sets the allowed_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.


        :param allowed_url_patterns: The allowed_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.
        :type allowed_url_patterns: CreateNetworkGroupPolicyRequestContentFilteringAllowedUrlPatterns
        """

        self._allowed_url_patterns = allowed_url_patterns

    @property
    def blocked_url_categories(self):
        """Gets the blocked_url_categories of this CreateNetworkGroupPolicyRequestContentFiltering.


        :return: The blocked_url_categories of this CreateNetworkGroupPolicyRequestContentFiltering.
        :rtype: CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories
        """
        return self._blocked_url_categories

    @blocked_url_categories.setter
    def blocked_url_categories(self, blocked_url_categories):
        """Sets the blocked_url_categories of this CreateNetworkGroupPolicyRequestContentFiltering.


        :param blocked_url_categories: The blocked_url_categories of this CreateNetworkGroupPolicyRequestContentFiltering.
        :type blocked_url_categories: CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlCategories
        """

        self._blocked_url_categories = blocked_url_categories

    @property
    def blocked_url_patterns(self):
        """Gets the blocked_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.


        :return: The blocked_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.
        :rtype: CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns
        """
        return self._blocked_url_patterns

    @blocked_url_patterns.setter
    def blocked_url_patterns(self, blocked_url_patterns):
        """Sets the blocked_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.


        :param blocked_url_patterns: The blocked_url_patterns of this CreateNetworkGroupPolicyRequestContentFiltering.
        :type blocked_url_patterns: CreateNetworkGroupPolicyRequestContentFilteringBlockedUrlPatterns
        """

        self._blocked_url_patterns = blocked_url_patterns
