# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: int=None, target_power: int=None):
        """UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings - a model defined in OpenAPI

        :param channel: The channel of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        :param target_power: The target_power of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        """
        self.openapi_types = {
            'channel': int,
            'target_power': int
        }

        self.attribute_map = {
            'channel': 'channel',
            'target_power': 'targetPower'
        }

        self._channel = channel
        self._target_power = target_power

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDeviceWirelessRadioSettings_request_twoFourGhzSettings of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.

        Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.

        :return: The channel of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        :rtype: int
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.

        Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.

        :param channel: The channel of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        :type channel: int
        """
        allowed_values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  # noqa: E501
        if channel not in allowed_values:
            raise ValueError(
                "Invalid value for `channel` ({0}), must be one of {1}"
                .format(channel, allowed_values)
            )

        self._channel = channel

    @property
    def target_power(self):
        """Gets the target_power of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.

        Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.

        :return: The target_power of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        :rtype: int
        """
        return self._target_power

    @target_power.setter
    def target_power(self, target_power):
        """Sets the target_power of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.

        Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.

        :param target_power: The target_power of this UpdateDeviceWirelessRadioSettingsRequestTwoFourGhzSettings.
        :type target_power: int
        """

        self._target_power = target_power
