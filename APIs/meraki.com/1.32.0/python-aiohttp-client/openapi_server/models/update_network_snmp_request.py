# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_snmp_request_users_inner import UpdateNetworkSnmpRequestUsersInner
from openapi_server import util


class UpdateNetworkSnmpRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: str=None, community_string: str=None, users: List[UpdateNetworkSnmpRequestUsersInner]=None):
        """UpdateNetworkSnmpRequest - a model defined in OpenAPI

        :param access: The access of this UpdateNetworkSnmpRequest.
        :param community_string: The community_string of this UpdateNetworkSnmpRequest.
        :param users: The users of this UpdateNetworkSnmpRequest.
        """
        self.openapi_types = {
            'access': str,
            'community_string': str,
            'users': List[UpdateNetworkSnmpRequestUsersInner]
        }

        self.attribute_map = {
            'access': 'access',
            'community_string': 'communityString',
            'users': 'users'
        }

        self._access = access
        self._community_string = community_string
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSnmpRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSnmp_request of this UpdateNetworkSnmpRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this UpdateNetworkSnmpRequest.

        The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).

        :return: The access of this UpdateNetworkSnmpRequest.
        :rtype: str
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this UpdateNetworkSnmpRequest.

        The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).

        :param access: The access of this UpdateNetworkSnmpRequest.
        :type access: str
        """
        allowed_values = ["community", "none", "users"]  # noqa: E501
        if access not in allowed_values:
            raise ValueError(
                "Invalid value for `access` ({0}), must be one of {1}"
                .format(access, allowed_values)
            )

        self._access = access

    @property
    def community_string(self):
        """Gets the community_string of this UpdateNetworkSnmpRequest.

        The SNMP community string. Only relevant if 'access' is set to 'community'.

        :return: The community_string of this UpdateNetworkSnmpRequest.
        :rtype: str
        """
        return self._community_string

    @community_string.setter
    def community_string(self, community_string):
        """Sets the community_string of this UpdateNetworkSnmpRequest.

        The SNMP community string. Only relevant if 'access' is set to 'community'.

        :param community_string: The community_string of this UpdateNetworkSnmpRequest.
        :type community_string: str
        """

        self._community_string = community_string

    @property
    def users(self):
        """Gets the users of this UpdateNetworkSnmpRequest.

        The list of SNMP users. Only relevant if 'access' is set to 'users'.

        :return: The users of this UpdateNetworkSnmpRequest.
        :rtype: List[UpdateNetworkSnmpRequestUsersInner]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this UpdateNetworkSnmpRequest.

        The list of SNMP users. Only relevant if 'access' is set to 'users'.

        :param users: The users of this UpdateNetworkSnmpRequest.
        :type users: List[UpdateNetworkSnmpRequestUsersInner]
        """

        self._users = users
