# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, level: int=None, quality: str=None):
        """GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient - a model defined in OpenAPI

        :param level: The level of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        :param quality: The quality of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        """
        self.openapi_types = {
            'level': int,
            'quality': str
        }

        self.attribute_map = {
            'level': 'level',
            'quality': 'quality'
        }

        self._level = level
        self._quality = quality

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSensorAlertsProfiles_200_response_inner_conditions_inner_threshold_noise_ambient of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def level(self):
        """Gets the level of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.

        Alerting threshold as adjusted decibels.

        :return: The level of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.

        Alerting threshold as adjusted decibels.

        :param level: The level of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        :type level: int
        """

        self._level = level

    @property
    def quality(self):
        """Gets the quality of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.

        Alerting threshold as a qualitative ambient noise level.

        :return: The quality of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        :rtype: str
        """
        return self._quality

    @quality.setter
    def quality(self, quality):
        """Sets the quality of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.

        Alerting threshold as a qualitative ambient noise level.

        :param quality: The quality of this GetNetworkSensorAlertsProfiles200ResponseInnerConditionsInnerThresholdNoiseAmbient.
        :type quality: str
        """
        allowed_values = ["fair", "good", "inadequate", "poor"]  # noqa: E501
        if quality not in allowed_values:
            raise ValueError(
                "Invalid value for `quality` ({0}), must be one of {1}"
                .format(quality, allowed_values)
            )

        self._quality = quality
