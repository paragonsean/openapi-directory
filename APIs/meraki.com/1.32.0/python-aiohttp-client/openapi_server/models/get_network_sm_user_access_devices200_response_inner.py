# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_sm_user_access_devices200_response_inner_trusted_access_connections_inner import GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner
from openapi_server import util


class GetNetworkSmUserAccessDevices200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, id: str=None, mac: str=None, name: str=None, system_type: str=None, tags: List[str]=None, trusted_access_connections: List[GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner]=None, username: str=None):
        """GetNetworkSmUserAccessDevices200ResponseInner - a model defined in OpenAPI

        :param email: The email of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param id: The id of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param mac: The mac of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param name: The name of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param system_type: The system_type of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param tags: The tags of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param trusted_access_connections: The trusted_access_connections of this GetNetworkSmUserAccessDevices200ResponseInner.
        :param username: The username of this GetNetworkSmUserAccessDevices200ResponseInner.
        """
        self.openapi_types = {
            'email': str,
            'id': str,
            'mac': str,
            'name': str,
            'system_type': str,
            'tags': List[str],
            'trusted_access_connections': List[GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner],
            'username': str
        }

        self.attribute_map = {
            'email': 'email',
            'id': 'id',
            'mac': 'mac',
            'name': 'name',
            'system_type': 'systemType',
            'tags': 'tags',
            'trusted_access_connections': 'trustedAccessConnections',
            'username': 'username'
        }

        self._email = email
        self._id = id
        self._mac = mac
        self._name = name
        self._system_type = system_type
        self._tags = tags
        self._trusted_access_connections = trusted_access_connections
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSmUserAccessDevices200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSmUserAccessDevices_200_response_inner of this GetNetworkSmUserAccessDevices200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this GetNetworkSmUserAccessDevices200ResponseInner.

        user email

        :return: The email of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GetNetworkSmUserAccessDevices200ResponseInner.

        user email

        :param email: The email of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this GetNetworkSmUserAccessDevices200ResponseInner.

        device ID

        :return: The id of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkSmUserAccessDevices200ResponseInner.

        device ID

        :param id: The id of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def mac(self):
        """Gets the mac of this GetNetworkSmUserAccessDevices200ResponseInner.

        mac address

        :return: The mac of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetNetworkSmUserAccessDevices200ResponseInner.

        mac address

        :param mac: The mac of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def name(self):
        """Gets the name of this GetNetworkSmUserAccessDevices200ResponseInner.

        device name

        :return: The name of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetNetworkSmUserAccessDevices200ResponseInner.

        device name

        :param name: The name of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def system_type(self):
        """Gets the system_type of this GetNetworkSmUserAccessDevices200ResponseInner.

        system type

        :return: The system_type of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: str
        """
        return self._system_type

    @system_type.setter
    def system_type(self, system_type):
        """Sets the system_type of this GetNetworkSmUserAccessDevices200ResponseInner.

        system type

        :param system_type: The system_type of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type system_type: str
        """

        self._system_type = system_type

    @property
    def tags(self):
        """Gets the tags of this GetNetworkSmUserAccessDevices200ResponseInner.

        device tags

        :return: The tags of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetNetworkSmUserAccessDevices200ResponseInner.

        device tags

        :param tags: The tags of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def trusted_access_connections(self):
        """Gets the trusted_access_connections of this GetNetworkSmUserAccessDevices200ResponseInner.

        Array of trusted access configs

        :return: The trusted_access_connections of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: List[GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner]
        """
        return self._trusted_access_connections

    @trusted_access_connections.setter
    def trusted_access_connections(self, trusted_access_connections):
        """Sets the trusted_access_connections of this GetNetworkSmUserAccessDevices200ResponseInner.

        Array of trusted access configs

        :param trusted_access_connections: The trusted_access_connections of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type trusted_access_connections: List[GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner]
        """

        self._trusted_access_connections = trusted_access_connections

    @property
    def username(self):
        """Gets the username of this GetNetworkSmUserAccessDevices200ResponseInner.

        username

        :return: The username of this GetNetworkSmUserAccessDevices200ResponseInner.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this GetNetworkSmUserAccessDevices200ResponseInner.

        username

        :param username: The username of this GetNetworkSmUserAccessDevices200ResponseInner.
        :type username: str
        """

        self._username = username
