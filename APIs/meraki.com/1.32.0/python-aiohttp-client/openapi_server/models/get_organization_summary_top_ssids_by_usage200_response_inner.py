# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_summary_top_ssids_by_usage200_response_inner_clients import GetOrganizationSummaryTopSsidsByUsage200ResponseInnerClients
from openapi_server.models.get_organization_summary_top_ssids_by_usage200_response_inner_usage import GetOrganizationSummaryTopSsidsByUsage200ResponseInnerUsage
from openapi_server import util


class GetOrganizationSummaryTopSsidsByUsage200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clients: GetOrganizationSummaryTopSsidsByUsage200ResponseInnerClients=None, name: str=None, usage: GetOrganizationSummaryTopSsidsByUsage200ResponseInnerUsage=None):
        """GetOrganizationSummaryTopSsidsByUsage200ResponseInner - a model defined in OpenAPI

        :param clients: The clients of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :param name: The name of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :param usage: The usage of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        """
        self.openapi_types = {
            'clients': GetOrganizationSummaryTopSsidsByUsage200ResponseInnerClients,
            'name': str,
            'usage': GetOrganizationSummaryTopSsidsByUsage200ResponseInnerUsage
        }

        self.attribute_map = {
            'clients': 'clients',
            'name': 'name',
            'usage': 'usage'
        }

        self._clients = clients
        self._name = name
        self._usage = usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSummaryTopSsidsByUsage200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSummaryTopSsidsByUsage_200_response_inner of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clients(self):
        """Gets the clients of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.


        :return: The clients of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :rtype: GetOrganizationSummaryTopSsidsByUsage200ResponseInnerClients
        """
        return self._clients

    @clients.setter
    def clients(self, clients):
        """Sets the clients of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.


        :param clients: The clients of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :type clients: GetOrganizationSummaryTopSsidsByUsage200ResponseInnerClients
        """

        self._clients = clients

    @property
    def name(self):
        """Gets the name of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.

        Name of the SSID

        :return: The name of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.

        Name of the SSID

        :param name: The name of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def usage(self):
        """Gets the usage of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.


        :return: The usage of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :rtype: GetOrganizationSummaryTopSsidsByUsage200ResponseInnerUsage
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.


        :param usage: The usage of this GetOrganizationSummaryTopSsidsByUsage200ResponseInner.
        :type usage: GetOrganizationSummaryTopSsidsByUsage200ResponseInnerUsage
        """

        self._usage = usage
