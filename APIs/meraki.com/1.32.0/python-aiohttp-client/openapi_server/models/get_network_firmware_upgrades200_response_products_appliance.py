# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_firmware_upgrades200_response_products_appliance_available_versions_inner import GetNetworkFirmwareUpgrades200ResponseProductsApplianceAvailableVersionsInner
from openapi_server.models.get_network_firmware_upgrades200_response_products_appliance_current_version import GetNetworkFirmwareUpgrades200ResponseProductsApplianceCurrentVersion
from openapi_server.models.get_network_firmware_upgrades200_response_products_appliance_last_upgrade import GetNetworkFirmwareUpgrades200ResponseProductsApplianceLastUpgrade
from openapi_server.models.get_network_firmware_upgrades200_response_products_appliance_next_upgrade import GetNetworkFirmwareUpgrades200ResponseProductsApplianceNextUpgrade
from openapi_server import util


class GetNetworkFirmwareUpgrades200ResponseProductsAppliance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_versions: List[GetNetworkFirmwareUpgrades200ResponseProductsApplianceAvailableVersionsInner]=None, current_version: GetNetworkFirmwareUpgrades200ResponseProductsApplianceCurrentVersion=None, last_upgrade: GetNetworkFirmwareUpgrades200ResponseProductsApplianceLastUpgrade=None, next_upgrade: GetNetworkFirmwareUpgrades200ResponseProductsApplianceNextUpgrade=None, participate_in_next_beta_release: bool=None):
        """GetNetworkFirmwareUpgrades200ResponseProductsAppliance - a model defined in OpenAPI

        :param available_versions: The available_versions of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :param current_version: The current_version of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :param last_upgrade: The last_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :param next_upgrade: The next_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :param participate_in_next_beta_release: The participate_in_next_beta_release of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        """
        self.openapi_types = {
            'available_versions': List[GetNetworkFirmwareUpgrades200ResponseProductsApplianceAvailableVersionsInner],
            'current_version': GetNetworkFirmwareUpgrades200ResponseProductsApplianceCurrentVersion,
            'last_upgrade': GetNetworkFirmwareUpgrades200ResponseProductsApplianceLastUpgrade,
            'next_upgrade': GetNetworkFirmwareUpgrades200ResponseProductsApplianceNextUpgrade,
            'participate_in_next_beta_release': bool
        }

        self.attribute_map = {
            'available_versions': 'availableVersions',
            'current_version': 'currentVersion',
            'last_upgrade': 'lastUpgrade',
            'next_upgrade': 'nextUpgrade',
            'participate_in_next_beta_release': 'participateInNextBetaRelease'
        }

        self._available_versions = available_versions
        self._current_version = current_version
        self._last_upgrade = last_upgrade
        self._next_upgrade = next_upgrade
        self._participate_in_next_beta_release = participate_in_next_beta_release

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkFirmwareUpgrades200ResponseProductsAppliance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkFirmwareUpgrades_200_response_products_appliance of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_versions(self):
        """Gets the available_versions of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.

        Firmware versions available for upgrade

        :return: The available_versions of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :rtype: List[GetNetworkFirmwareUpgrades200ResponseProductsApplianceAvailableVersionsInner]
        """
        return self._available_versions

    @available_versions.setter
    def available_versions(self, available_versions):
        """Sets the available_versions of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.

        Firmware versions available for upgrade

        :param available_versions: The available_versions of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :type available_versions: List[GetNetworkFirmwareUpgrades200ResponseProductsApplianceAvailableVersionsInner]
        """

        self._available_versions = available_versions

    @property
    def current_version(self):
        """Gets the current_version of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.


        :return: The current_version of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :rtype: GetNetworkFirmwareUpgrades200ResponseProductsApplianceCurrentVersion
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.


        :param current_version: The current_version of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :type current_version: GetNetworkFirmwareUpgrades200ResponseProductsApplianceCurrentVersion
        """

        self._current_version = current_version

    @property
    def last_upgrade(self):
        """Gets the last_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.


        :return: The last_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :rtype: GetNetworkFirmwareUpgrades200ResponseProductsApplianceLastUpgrade
        """
        return self._last_upgrade

    @last_upgrade.setter
    def last_upgrade(self, last_upgrade):
        """Sets the last_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.


        :param last_upgrade: The last_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :type last_upgrade: GetNetworkFirmwareUpgrades200ResponseProductsApplianceLastUpgrade
        """

        self._last_upgrade = last_upgrade

    @property
    def next_upgrade(self):
        """Gets the next_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.


        :return: The next_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :rtype: GetNetworkFirmwareUpgrades200ResponseProductsApplianceNextUpgrade
        """
        return self._next_upgrade

    @next_upgrade.setter
    def next_upgrade(self, next_upgrade):
        """Sets the next_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.


        :param next_upgrade: The next_upgrade of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :type next_upgrade: GetNetworkFirmwareUpgrades200ResponseProductsApplianceNextUpgrade
        """

        self._next_upgrade = next_upgrade

    @property
    def participate_in_next_beta_release(self):
        """Gets the participate_in_next_beta_release of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.

        Whether or not the network wants beta firmware

        :return: The participate_in_next_beta_release of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :rtype: bool
        """
        return self._participate_in_next_beta_release

    @participate_in_next_beta_release.setter
    def participate_in_next_beta_release(self, participate_in_next_beta_release):
        """Sets the participate_in_next_beta_release of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.

        Whether or not the network wants beta firmware

        :param participate_in_next_beta_release: The participate_in_next_beta_release of this GetNetworkFirmwareUpgrades200ResponseProductsAppliance.
        :type participate_in_next_beta_release: bool
        """

        self._participate_in_next_beta_release = participate_in_next_beta_release
