# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, comment: str=None):
        """CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner - a model defined in OpenAPI

        :param category: The category of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        :param comment: The comment of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        """
        self.openapi_types = {
            'category': str,
            'comment': str
        }

        self.attribute_map = {
            'category': 'category',
            'comment': 'comment'
        }

        self._category = category
        self._comment = comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkFirmwareUpgradesRollback_200_response_reasons_inner of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.

        Reason for the rollback

        :return: The category of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.

        Reason for the rollback

        :param category: The category of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        :type category: str
        """
        allowed_values = ["broke old features", "other", "performance", "stability", "testing", "unifying networks versions"]  # noqa: E501
        if category not in allowed_values:
            raise ValueError(
                "Invalid value for `category` ({0}), must be one of {1}"
                .format(category, allowed_values)
            )

        self._category = category

    @property
    def comment(self):
        """Gets the comment of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.

        Additional comment about the rollback

        :return: The comment of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.

        Additional comment about the rollback

        :param comment: The comment of this CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.
        :type comment: str
        """

        self._comment = comment
