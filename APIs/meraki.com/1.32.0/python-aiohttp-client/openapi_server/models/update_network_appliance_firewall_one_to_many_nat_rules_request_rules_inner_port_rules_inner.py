# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_ips: List[str]=None, local_ip: str=None, local_port: str=None, name: str=None, protocol: str=None, public_port: str=None):
        """UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner - a model defined in OpenAPI

        :param allowed_ips: The allowed_ips of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :param local_ip: The local_ip of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :param local_port: The local_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :param name: The name of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :param protocol: The protocol of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :param public_port: The public_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        """
        self.openapi_types = {
            'allowed_ips': List[str],
            'local_ip': str,
            'local_port': str,
            'name': str,
            'protocol': str,
            'public_port': str
        }

        self.attribute_map = {
            'allowed_ips': 'allowedIps',
            'local_ip': 'localIp',
            'local_port': 'localPort',
            'name': 'name',
            'protocol': 'protocol',
            'public_port': 'publicPort'
        }

        self._allowed_ips = allowed_ips
        self._local_ip = local_ip
        self._local_port = local_port
        self._name = name
        self._protocol = protocol
        self._public_port = public_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkApplianceFirewallOneToManyNatRules_request_rules_inner_portRules_inner of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_ips(self):
        """Gets the allowed_ips of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'

        :return: The allowed_ips of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :rtype: List[str]
        """
        return self._allowed_ips

    @allowed_ips.setter
    def allowed_ips(self, allowed_ips):
        """Sets the allowed_ips of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'

        :param allowed_ips: The allowed_ips of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :type allowed_ips: List[str]
        """

        self._allowed_ips = allowed_ips

    @property
    def local_ip(self):
        """Gets the local_ip of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Local IP address to which traffic will be forwarded

        :return: The local_ip of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :rtype: str
        """
        return self._local_ip

    @local_ip.setter
    def local_ip(self, local_ip):
        """Sets the local_ip of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Local IP address to which traffic will be forwarded

        :param local_ip: The local_ip of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :type local_ip: str
        """

        self._local_ip = local_ip

    @property
    def local_port(self):
        """Gets the local_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port

        :return: The local_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :rtype: str
        """
        return self._local_port

    @local_port.setter
    def local_port(self, local_port):
        """Sets the local_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port

        :param local_port: The local_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :type local_port: str
        """

        self._local_port = local_port

    @property
    def name(self):
        """Gets the name of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        A description of the rule

        :return: The name of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        A description of the rule

        :param name: The name of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :type name: str
        """

        self._name = name

    @property
    def protocol(self):
        """Gets the protocol of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        'tcp' or 'udp'

        :return: The protocol of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        'tcp' or 'udp'

        :param protocol: The protocol of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :type protocol: str
        """
        allowed_values = ["tcp", "udp"]  # noqa: E501
        if protocol not in allowed_values:
            raise ValueError(
                "Invalid value for `protocol` ({0}), must be one of {1}"
                .format(protocol, allowed_values)
            )

        self._protocol = protocol

    @property
    def public_port(self):
        """Gets the public_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Destination port of the traffic that is arriving on the WAN

        :return: The public_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :rtype: str
        """
        return self._public_port

    @public_port.setter
    def public_port(self, public_port):
        """Sets the public_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.

        Destination port of the traffic that is arriving on the WAN

        :param public_port: The public_port of this UpdateNetworkApplianceFirewallOneToManyNatRulesRequestRulesInnerPortRulesInner.
        :type public_port: str
        """

        self._public_port = public_port
