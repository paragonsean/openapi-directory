# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateNetworkSwitchAccessPolicyRequestRadiusServersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, port: int=None, secret: str=None):
        """CreateNetworkSwitchAccessPolicyRequestRadiusServersInner - a model defined in OpenAPI

        :param host: The host of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :param port: The port of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :param secret: The secret of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        """
        self.openapi_types = {
            'host': str,
            'port': int,
            'secret': str
        }

        self.attribute_map = {
            'host': 'host',
            'port': 'port',
            'secret': 'secret'
        }

        self._host = host
        self._port = port
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkSwitchAccessPolicyRequestRadiusServersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkSwitchAccessPolicy_request_radiusServers_inner of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.

        Public IP address of the RADIUS server

        :return: The host of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.

        Public IP address of the RADIUS server

        :param host: The host of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :type host: str
        """
        if host is None:
            raise ValueError("Invalid value for `host`, must not be `None`")

        self._host = host

    @property
    def port(self):
        """Gets the port of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.

        UDP port that the RADIUS server listens on for access requests

        :return: The port of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.

        UDP port that the RADIUS server listens on for access requests

        :param port: The port of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :type port: int
        """
        if port is None:
            raise ValueError("Invalid value for `port`, must not be `None`")

        self._port = port

    @property
    def secret(self):
        """Gets the secret of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.

        RADIUS client shared secret

        :return: The secret of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.

        RADIUS client shared secret

        :param secret: The secret of this CreateNetworkSwitchAccessPolicyRequestRadiusServersInner.
        :type secret: str
        """
        if secret is None:
            raise ValueError("Invalid value for `secret`, must not be `None`")

        self._secret = secret
