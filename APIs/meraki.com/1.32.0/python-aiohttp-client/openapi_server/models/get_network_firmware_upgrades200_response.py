# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_firmware_upgrades200_response_products import GetNetworkFirmwareUpgrades200ResponseProducts
from openapi_server.models.get_network_firmware_upgrades200_response_upgrade_window import GetNetworkFirmwareUpgrades200ResponseUpgradeWindow
from openapi_server import util


class GetNetworkFirmwareUpgrades200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, products: GetNetworkFirmwareUpgrades200ResponseProducts=None, timezone: str=None, upgrade_window: GetNetworkFirmwareUpgrades200ResponseUpgradeWindow=None):
        """GetNetworkFirmwareUpgrades200Response - a model defined in OpenAPI

        :param products: The products of this GetNetworkFirmwareUpgrades200Response.
        :param timezone: The timezone of this GetNetworkFirmwareUpgrades200Response.
        :param upgrade_window: The upgrade_window of this GetNetworkFirmwareUpgrades200Response.
        """
        self.openapi_types = {
            'products': GetNetworkFirmwareUpgrades200ResponseProducts,
            'timezone': str,
            'upgrade_window': GetNetworkFirmwareUpgrades200ResponseUpgradeWindow
        }

        self.attribute_map = {
            'products': 'products',
            'timezone': 'timezone',
            'upgrade_window': 'upgradeWindow'
        }

        self._products = products
        self._timezone = timezone
        self._upgrade_window = upgrade_window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkFirmwareUpgrades200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkFirmwareUpgrades_200_response of this GetNetworkFirmwareUpgrades200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def products(self):
        """Gets the products of this GetNetworkFirmwareUpgrades200Response.


        :return: The products of this GetNetworkFirmwareUpgrades200Response.
        :rtype: GetNetworkFirmwareUpgrades200ResponseProducts
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this GetNetworkFirmwareUpgrades200Response.


        :param products: The products of this GetNetworkFirmwareUpgrades200Response.
        :type products: GetNetworkFirmwareUpgrades200ResponseProducts
        """

        self._products = products

    @property
    def timezone(self):
        """Gets the timezone of this GetNetworkFirmwareUpgrades200Response.

        The timezone for the network

        :return: The timezone of this GetNetworkFirmwareUpgrades200Response.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this GetNetworkFirmwareUpgrades200Response.

        The timezone for the network

        :param timezone: The timezone of this GetNetworkFirmwareUpgrades200Response.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def upgrade_window(self):
        """Gets the upgrade_window of this GetNetworkFirmwareUpgrades200Response.


        :return: The upgrade_window of this GetNetworkFirmwareUpgrades200Response.
        :rtype: GetNetworkFirmwareUpgrades200ResponseUpgradeWindow
        """
        return self._upgrade_window

    @upgrade_window.setter
    def upgrade_window(self, upgrade_window):
        """Sets the upgrade_window of this GetNetworkFirmwareUpgrades200Response.


        :param upgrade_window: The upgrade_window of this GetNetworkFirmwareUpgrades200Response.
        :type upgrade_window: GetNetworkFirmwareUpgrades200ResponseUpgradeWindow
        """

        self._upgrade_window = upgrade_window
