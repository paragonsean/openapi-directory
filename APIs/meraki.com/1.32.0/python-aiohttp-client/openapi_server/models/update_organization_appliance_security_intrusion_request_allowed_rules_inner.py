# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, rule_id: str=None):
        """UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner - a model defined in OpenAPI

        :param message: The message of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        :param rule_id: The rule_id of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        """
        self.openapi_types = {
            'message': str,
            'rule_id': str
        }

        self.attribute_map = {
            'message': 'message',
            'rule_id': 'ruleId'
        }

        self._message = message
        self._rule_id = rule_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateOrganizationApplianceSecurityIntrusion_request_allowedRules_inner of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.

        Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET

        :return: The message of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.

        Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET

        :param message: The message of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        :type message: str
        """

        self._message = message

    @property
    def rule_id(self):
        """Gets the rule_id of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.

        A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents

        :return: The rule_id of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.

        A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents

        :param rule_id: The rule_id of this UpdateOrganizationApplianceSecurityIntrusionRequestAllowedRulesInner.
        :type rule_id: str
        """
        if rule_id is None:
            raise ValueError("Invalid value for `rule_id`, must not be `None`")

        self._rule_id = rule_id
