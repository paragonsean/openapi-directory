# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_device_appliance_uplinks_settings200_response_interfaces_wan1_svis_ipv4 import GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4
from openapi_server.models.get_device_appliance_uplinks_settings200_response_interfaces_wan1_svis_ipv6 import GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6
from openapi_server import util


class GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ipv4: GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4=None, ipv6: GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6=None):
        """GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis - a model defined in OpenAPI

        :param ipv4: The ipv4 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        :param ipv6: The ipv6 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        """
        self.openapi_types = {
            'ipv4': GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4,
            'ipv6': GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6
        }

        self.attribute_map = {
            'ipv4': 'ipv4',
            'ipv6': 'ipv6'
        }

        self._ipv4 = ipv4
        self._ipv6 = ipv6

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDeviceApplianceUplinksSettings_200_response_interfaces_wan1_svis of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ipv4(self):
        """Gets the ipv4 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.


        :return: The ipv4 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        :rtype: GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4
        """
        return self._ipv4

    @ipv4.setter
    def ipv4(self, ipv4):
        """Sets the ipv4 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.


        :param ipv4: The ipv4 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        :type ipv4: GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4
        """

        self._ipv4 = ipv4

    @property
    def ipv6(self):
        """Gets the ipv6 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.


        :return: The ipv6 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        :rtype: GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6
        """
        return self._ipv6

    @ipv6.setter
    def ipv6(self, ipv6):
        """Sets the ipv6 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.


        :param ipv6: The ipv6 of this GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis.
        :type ipv6: GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6
        """

        self._ipv6 = ipv6
