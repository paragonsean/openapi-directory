# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_appliance_vlans200_response_inner_ipv6 import GetNetworkApplianceVlans200ResponseInnerIpv6
from openapi_server.models.get_network_appliance_vlans200_response_inner_mandatory_dhcp import GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp
from openapi_server import util


class CreateNetworkApplianceVlan201Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appliance_ip: str=None, cidr: str=None, group_policy_id: str=None, id: str=None, interface_id: str=None, ipv6: GetNetworkApplianceVlans200ResponseInnerIpv6=None, mandatory_dhcp: GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp=None, mask: int=None, name: str=None, subnet: str=None, template_vlan_type: str='same'):
        """CreateNetworkApplianceVlan201Response - a model defined in OpenAPI

        :param appliance_ip: The appliance_ip of this CreateNetworkApplianceVlan201Response.
        :param cidr: The cidr of this CreateNetworkApplianceVlan201Response.
        :param group_policy_id: The group_policy_id of this CreateNetworkApplianceVlan201Response.
        :param id: The id of this CreateNetworkApplianceVlan201Response.
        :param interface_id: The interface_id of this CreateNetworkApplianceVlan201Response.
        :param ipv6: The ipv6 of this CreateNetworkApplianceVlan201Response.
        :param mandatory_dhcp: The mandatory_dhcp of this CreateNetworkApplianceVlan201Response.
        :param mask: The mask of this CreateNetworkApplianceVlan201Response.
        :param name: The name of this CreateNetworkApplianceVlan201Response.
        :param subnet: The subnet of this CreateNetworkApplianceVlan201Response.
        :param template_vlan_type: The template_vlan_type of this CreateNetworkApplianceVlan201Response.
        """
        self.openapi_types = {
            'appliance_ip': str,
            'cidr': str,
            'group_policy_id': str,
            'id': str,
            'interface_id': str,
            'ipv6': GetNetworkApplianceVlans200ResponseInnerIpv6,
            'mandatory_dhcp': GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp,
            'mask': int,
            'name': str,
            'subnet': str,
            'template_vlan_type': str
        }

        self.attribute_map = {
            'appliance_ip': 'applianceIp',
            'cidr': 'cidr',
            'group_policy_id': 'groupPolicyId',
            'id': 'id',
            'interface_id': 'interfaceId',
            'ipv6': 'ipv6',
            'mandatory_dhcp': 'mandatoryDhcp',
            'mask': 'mask',
            'name': 'name',
            'subnet': 'subnet',
            'template_vlan_type': 'templateVlanType'
        }

        self._appliance_ip = appliance_ip
        self._cidr = cidr
        self._group_policy_id = group_policy_id
        self._id = id
        self._interface_id = interface_id
        self._ipv6 = ipv6
        self._mandatory_dhcp = mandatory_dhcp
        self._mask = mask
        self._name = name
        self._subnet = subnet
        self._template_vlan_type = template_vlan_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkApplianceVlan201Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkApplianceVlan_201_response of this CreateNetworkApplianceVlan201Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appliance_ip(self):
        """Gets the appliance_ip of this CreateNetworkApplianceVlan201Response.

        The local IP of the appliance on the VLAN

        :return: The appliance_ip of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._appliance_ip

    @appliance_ip.setter
    def appliance_ip(self, appliance_ip):
        """Sets the appliance_ip of this CreateNetworkApplianceVlan201Response.

        The local IP of the appliance on the VLAN

        :param appliance_ip: The appliance_ip of this CreateNetworkApplianceVlan201Response.
        :type appliance_ip: str
        """

        self._appliance_ip = appliance_ip

    @property
    def cidr(self):
        """Gets the cidr of this CreateNetworkApplianceVlan201Response.

        CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.

        :return: The cidr of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._cidr

    @cidr.setter
    def cidr(self, cidr):
        """Sets the cidr of this CreateNetworkApplianceVlan201Response.

        CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.

        :param cidr: The cidr of this CreateNetworkApplianceVlan201Response.
        :type cidr: str
        """

        self._cidr = cidr

    @property
    def group_policy_id(self):
        """Gets the group_policy_id of this CreateNetworkApplianceVlan201Response.

        The id of the desired group policy to apply to the VLAN

        :return: The group_policy_id of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._group_policy_id

    @group_policy_id.setter
    def group_policy_id(self, group_policy_id):
        """Sets the group_policy_id of this CreateNetworkApplianceVlan201Response.

        The id of the desired group policy to apply to the VLAN

        :param group_policy_id: The group_policy_id of this CreateNetworkApplianceVlan201Response.
        :type group_policy_id: str
        """

        self._group_policy_id = group_policy_id

    @property
    def id(self):
        """Gets the id of this CreateNetworkApplianceVlan201Response.

        The VLAN ID of the VLAN

        :return: The id of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateNetworkApplianceVlan201Response.

        The VLAN ID of the VLAN

        :param id: The id of this CreateNetworkApplianceVlan201Response.
        :type id: str
        """

        self._id = id

    @property
    def interface_id(self):
        """Gets the interface_id of this CreateNetworkApplianceVlan201Response.

        The interface ID of the VLAN

        :return: The interface_id of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._interface_id

    @interface_id.setter
    def interface_id(self, interface_id):
        """Sets the interface_id of this CreateNetworkApplianceVlan201Response.

        The interface ID of the VLAN

        :param interface_id: The interface_id of this CreateNetworkApplianceVlan201Response.
        :type interface_id: str
        """

        self._interface_id = interface_id

    @property
    def ipv6(self):
        """Gets the ipv6 of this CreateNetworkApplianceVlan201Response.


        :return: The ipv6 of this CreateNetworkApplianceVlan201Response.
        :rtype: GetNetworkApplianceVlans200ResponseInnerIpv6
        """
        return self._ipv6

    @ipv6.setter
    def ipv6(self, ipv6):
        """Sets the ipv6 of this CreateNetworkApplianceVlan201Response.


        :param ipv6: The ipv6 of this CreateNetworkApplianceVlan201Response.
        :type ipv6: GetNetworkApplianceVlans200ResponseInnerIpv6
        """

        self._ipv6 = ipv6

    @property
    def mandatory_dhcp(self):
        """Gets the mandatory_dhcp of this CreateNetworkApplianceVlan201Response.


        :return: The mandatory_dhcp of this CreateNetworkApplianceVlan201Response.
        :rtype: GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp
        """
        return self._mandatory_dhcp

    @mandatory_dhcp.setter
    def mandatory_dhcp(self, mandatory_dhcp):
        """Sets the mandatory_dhcp of this CreateNetworkApplianceVlan201Response.


        :param mandatory_dhcp: The mandatory_dhcp of this CreateNetworkApplianceVlan201Response.
        :type mandatory_dhcp: GetNetworkApplianceVlans200ResponseInnerMandatoryDhcp
        """

        self._mandatory_dhcp = mandatory_dhcp

    @property
    def mask(self):
        """Gets the mask of this CreateNetworkApplianceVlan201Response.

        Mask used for the subnet of all bound to the template networks. Applicable only for template network.

        :return: The mask of this CreateNetworkApplianceVlan201Response.
        :rtype: int
        """
        return self._mask

    @mask.setter
    def mask(self, mask):
        """Sets the mask of this CreateNetworkApplianceVlan201Response.

        Mask used for the subnet of all bound to the template networks. Applicable only for template network.

        :param mask: The mask of this CreateNetworkApplianceVlan201Response.
        :type mask: int
        """

        self._mask = mask

    @property
    def name(self):
        """Gets the name of this CreateNetworkApplianceVlan201Response.

        The name of the VLAN

        :return: The name of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateNetworkApplianceVlan201Response.

        The name of the VLAN

        :param name: The name of this CreateNetworkApplianceVlan201Response.
        :type name: str
        """

        self._name = name

    @property
    def subnet(self):
        """Gets the subnet of this CreateNetworkApplianceVlan201Response.

        The subnet of the VLAN

        :return: The subnet of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this CreateNetworkApplianceVlan201Response.

        The subnet of the VLAN

        :param subnet: The subnet of this CreateNetworkApplianceVlan201Response.
        :type subnet: str
        """

        self._subnet = subnet

    @property
    def template_vlan_type(self):
        """Gets the template_vlan_type of this CreateNetworkApplianceVlan201Response.

        Type of subnetting of the VLAN. Applicable only for template network.

        :return: The template_vlan_type of this CreateNetworkApplianceVlan201Response.
        :rtype: str
        """
        return self._template_vlan_type

    @template_vlan_type.setter
    def template_vlan_type(self, template_vlan_type):
        """Sets the template_vlan_type of this CreateNetworkApplianceVlan201Response.

        Type of subnetting of the VLAN. Applicable only for template network.

        :param template_vlan_type: The template_vlan_type of this CreateNetworkApplianceVlan201Response.
        :type template_vlan_type: str
        """
        allowed_values = ["same", "unique"]  # noqa: E501
        if template_vlan_type not in allowed_values:
            raise ValueError(
                "Invalid value for `template_vlan_type` ({0}), must be one of {1}"
                .format(template_vlan_type, allowed_values)
            )

        self._template_vlan_type = template_vlan_type
