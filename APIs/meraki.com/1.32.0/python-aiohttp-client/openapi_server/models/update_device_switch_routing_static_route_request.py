# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateDeviceSwitchRoutingStaticRouteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertise_via_ospf_enabled: bool=None, name: str=None, next_hop_ip: str=None, prefer_over_ospf_routes_enabled: bool=None, subnet: str=None):
        """UpdateDeviceSwitchRoutingStaticRouteRequest - a model defined in OpenAPI

        :param advertise_via_ospf_enabled: The advertise_via_ospf_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :param name: The name of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :param next_hop_ip: The next_hop_ip of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :param prefer_over_ospf_routes_enabled: The prefer_over_ospf_routes_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :param subnet: The subnet of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        """
        self.openapi_types = {
            'advertise_via_ospf_enabled': bool,
            'name': str,
            'next_hop_ip': str,
            'prefer_over_ospf_routes_enabled': bool,
            'subnet': str
        }

        self.attribute_map = {
            'advertise_via_ospf_enabled': 'advertiseViaOspfEnabled',
            'name': 'name',
            'next_hop_ip': 'nextHopIp',
            'prefer_over_ospf_routes_enabled': 'preferOverOspfRoutesEnabled',
            'subnet': 'subnet'
        }

        self._advertise_via_ospf_enabled = advertise_via_ospf_enabled
        self._name = name
        self._next_hop_ip = next_hop_ip
        self._prefer_over_ospf_routes_enabled = prefer_over_ospf_routes_enabled
        self._subnet = subnet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDeviceSwitchRoutingStaticRouteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDeviceSwitchRoutingStaticRoute_request of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertise_via_ospf_enabled(self):
        """Gets the advertise_via_ospf_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        Option to advertise static route via OSPF

        :return: The advertise_via_ospf_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :rtype: bool
        """
        return self._advertise_via_ospf_enabled

    @advertise_via_ospf_enabled.setter
    def advertise_via_ospf_enabled(self, advertise_via_ospf_enabled):
        """Sets the advertise_via_ospf_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        Option to advertise static route via OSPF

        :param advertise_via_ospf_enabled: The advertise_via_ospf_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :type advertise_via_ospf_enabled: bool
        """

        self._advertise_via_ospf_enabled = advertise_via_ospf_enabled

    @property
    def name(self):
        """Gets the name of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        Name or description for layer 3 static route

        :return: The name of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        Name or description for layer 3 static route

        :param name: The name of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :type name: str
        """

        self._name = name

    @property
    def next_hop_ip(self):
        """Gets the next_hop_ip of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        IP address of the next hop device to which the device sends its traffic for the subnet

        :return: The next_hop_ip of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :rtype: str
        """
        return self._next_hop_ip

    @next_hop_ip.setter
    def next_hop_ip(self, next_hop_ip):
        """Sets the next_hop_ip of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        IP address of the next hop device to which the device sends its traffic for the subnet

        :param next_hop_ip: The next_hop_ip of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :type next_hop_ip: str
        """

        self._next_hop_ip = next_hop_ip

    @property
    def prefer_over_ospf_routes_enabled(self):
        """Gets the prefer_over_ospf_routes_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        Option to prefer static route over OSPF routes

        :return: The prefer_over_ospf_routes_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :rtype: bool
        """
        return self._prefer_over_ospf_routes_enabled

    @prefer_over_ospf_routes_enabled.setter
    def prefer_over_ospf_routes_enabled(self, prefer_over_ospf_routes_enabled):
        """Sets the prefer_over_ospf_routes_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        Option to prefer static route over OSPF routes

        :param prefer_over_ospf_routes_enabled: The prefer_over_ospf_routes_enabled of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :type prefer_over_ospf_routes_enabled: bool
        """

        self._prefer_over_ospf_routes_enabled = prefer_over_ospf_routes_enabled

    @property
    def subnet(self):
        """Gets the subnet of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)

        :return: The subnet of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this UpdateDeviceSwitchRoutingStaticRouteRequest.

        The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)

        :param subnet: The subnet of this UpdateDeviceSwitchRoutingStaticRouteRequest.
        :type subnet: str
        """

        self._subnet = subnet
