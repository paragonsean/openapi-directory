# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: bool=None):
        """GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey - a model defined in OpenAPI

        :param created: The created of this GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey.
        """
        self.openapi_types = {
            'created': bool
        }

        self.attribute_map = {
            'created': 'created'
        }

        self._created = created

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getAdministeredIdentitiesMe_200_response_authentication_api_key of this GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey.

        If API key is created for this user

        :return: The created of this GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey.
        :rtype: bool
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey.

        If API key is created for this user

        :param created: The created of this GetAdministeredIdentitiesMe200ResponseAuthenticationApiKey.
        :type created: bool
        """

        self._created = created
