# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_client200_response_client_vpn_connections_inner import GetNetworkClient200ResponseClientVpnConnectionsInner
from openapi_server import util


class GetNetworkClient200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cdp: List[List[str]]=None, client_vpn_connections: List[GetNetworkClient200ResponseClientVpnConnectionsInner]=None, description: str=None, first_seen: int=None, id: str=None, ip: str=None, ip6: str=None, last_seen: int=None, lldp: List[List[str]]=None, mac: str=None, manufacturer: str=None, os: str=None, recent_device_mac: str=None, sm_installed: bool=None, ssid: str=None, status: str=None, switchport: str=None, user: str=None, vlan: str=None, wireless_capabilities: str=None):
        """GetNetworkClient200Response - a model defined in OpenAPI

        :param cdp: The cdp of this GetNetworkClient200Response.
        :param client_vpn_connections: The client_vpn_connections of this GetNetworkClient200Response.
        :param description: The description of this GetNetworkClient200Response.
        :param first_seen: The first_seen of this GetNetworkClient200Response.
        :param id: The id of this GetNetworkClient200Response.
        :param ip: The ip of this GetNetworkClient200Response.
        :param ip6: The ip6 of this GetNetworkClient200Response.
        :param last_seen: The last_seen of this GetNetworkClient200Response.
        :param lldp: The lldp of this GetNetworkClient200Response.
        :param mac: The mac of this GetNetworkClient200Response.
        :param manufacturer: The manufacturer of this GetNetworkClient200Response.
        :param os: The os of this GetNetworkClient200Response.
        :param recent_device_mac: The recent_device_mac of this GetNetworkClient200Response.
        :param sm_installed: The sm_installed of this GetNetworkClient200Response.
        :param ssid: The ssid of this GetNetworkClient200Response.
        :param status: The status of this GetNetworkClient200Response.
        :param switchport: The switchport of this GetNetworkClient200Response.
        :param user: The user of this GetNetworkClient200Response.
        :param vlan: The vlan of this GetNetworkClient200Response.
        :param wireless_capabilities: The wireless_capabilities of this GetNetworkClient200Response.
        """
        self.openapi_types = {
            'cdp': List[List[str]],
            'client_vpn_connections': List[GetNetworkClient200ResponseClientVpnConnectionsInner],
            'description': str,
            'first_seen': int,
            'id': str,
            'ip': str,
            'ip6': str,
            'last_seen': int,
            'lldp': List[List[str]],
            'mac': str,
            'manufacturer': str,
            'os': str,
            'recent_device_mac': str,
            'sm_installed': bool,
            'ssid': str,
            'status': str,
            'switchport': str,
            'user': str,
            'vlan': str,
            'wireless_capabilities': str
        }

        self.attribute_map = {
            'cdp': 'cdp',
            'client_vpn_connections': 'clientVpnConnections',
            'description': 'description',
            'first_seen': 'firstSeen',
            'id': 'id',
            'ip': 'ip',
            'ip6': 'ip6',
            'last_seen': 'lastSeen',
            'lldp': 'lldp',
            'mac': 'mac',
            'manufacturer': 'manufacturer',
            'os': 'os',
            'recent_device_mac': 'recentDeviceMac',
            'sm_installed': 'smInstalled',
            'ssid': 'ssid',
            'status': 'status',
            'switchport': 'switchport',
            'user': 'user',
            'vlan': 'vlan',
            'wireless_capabilities': 'wirelessCapabilities'
        }

        self._cdp = cdp
        self._client_vpn_connections = client_vpn_connections
        self._description = description
        self._first_seen = first_seen
        self._id = id
        self._ip = ip
        self._ip6 = ip6
        self._last_seen = last_seen
        self._lldp = lldp
        self._mac = mac
        self._manufacturer = manufacturer
        self._os = os
        self._recent_device_mac = recent_device_mac
        self._sm_installed = sm_installed
        self._ssid = ssid
        self._status = status
        self._switchport = switchport
        self._user = user
        self._vlan = vlan
        self._wireless_capabilities = wireless_capabilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkClient200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkClient_200_response of this GetNetworkClient200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cdp(self):
        """Gets the cdp of this GetNetworkClient200Response.

        The Cisco discover protocol settings for the client

        :return: The cdp of this GetNetworkClient200Response.
        :rtype: List[List[str]]
        """
        return self._cdp

    @cdp.setter
    def cdp(self, cdp):
        """Sets the cdp of this GetNetworkClient200Response.

        The Cisco discover protocol settings for the client

        :param cdp: The cdp of this GetNetworkClient200Response.
        :type cdp: List[List[str]]
        """

        self._cdp = cdp

    @property
    def client_vpn_connections(self):
        """Gets the client_vpn_connections of this GetNetworkClient200Response.

        VPN connections associated with the client

        :return: The client_vpn_connections of this GetNetworkClient200Response.
        :rtype: List[GetNetworkClient200ResponseClientVpnConnectionsInner]
        """
        return self._client_vpn_connections

    @client_vpn_connections.setter
    def client_vpn_connections(self, client_vpn_connections):
        """Sets the client_vpn_connections of this GetNetworkClient200Response.

        VPN connections associated with the client

        :param client_vpn_connections: The client_vpn_connections of this GetNetworkClient200Response.
        :type client_vpn_connections: List[GetNetworkClient200ResponseClientVpnConnectionsInner]
        """

        self._client_vpn_connections = client_vpn_connections

    @property
    def description(self):
        """Gets the description of this GetNetworkClient200Response.

        Short description of the client

        :return: The description of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetNetworkClient200Response.

        Short description of the client

        :param description: The description of this GetNetworkClient200Response.
        :type description: str
        """

        self._description = description

    @property
    def first_seen(self):
        """Gets the first_seen of this GetNetworkClient200Response.

        Timestamp client was first seen in the network

        :return: The first_seen of this GetNetworkClient200Response.
        :rtype: int
        """
        return self._first_seen

    @first_seen.setter
    def first_seen(self, first_seen):
        """Sets the first_seen of this GetNetworkClient200Response.

        Timestamp client was first seen in the network

        :param first_seen: The first_seen of this GetNetworkClient200Response.
        :type first_seen: int
        """

        self._first_seen = first_seen

    @property
    def id(self):
        """Gets the id of this GetNetworkClient200Response.

        The ID of the client

        :return: The id of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkClient200Response.

        The ID of the client

        :param id: The id of this GetNetworkClient200Response.
        :type id: str
        """

        self._id = id

    @property
    def ip(self):
        """Gets the ip of this GetNetworkClient200Response.

        The IP address of the client

        :return: The ip of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this GetNetworkClient200Response.

        The IP address of the client

        :param ip: The ip of this GetNetworkClient200Response.
        :type ip: str
        """

        self._ip = ip

    @property
    def ip6(self):
        """Gets the ip6 of this GetNetworkClient200Response.

        The IPv6 address of the client

        :return: The ip6 of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._ip6

    @ip6.setter
    def ip6(self, ip6):
        """Sets the ip6 of this GetNetworkClient200Response.

        The IPv6 address of the client

        :param ip6: The ip6 of this GetNetworkClient200Response.
        :type ip6: str
        """

        self._ip6 = ip6

    @property
    def last_seen(self):
        """Gets the last_seen of this GetNetworkClient200Response.

        Timestamp client was last seen in the network

        :return: The last_seen of this GetNetworkClient200Response.
        :rtype: int
        """
        return self._last_seen

    @last_seen.setter
    def last_seen(self, last_seen):
        """Sets the last_seen of this GetNetworkClient200Response.

        Timestamp client was last seen in the network

        :param last_seen: The last_seen of this GetNetworkClient200Response.
        :type last_seen: int
        """

        self._last_seen = last_seen

    @property
    def lldp(self):
        """Gets the lldp of this GetNetworkClient200Response.

        The link layer discover protocol settings for the client

        :return: The lldp of this GetNetworkClient200Response.
        :rtype: List[List[str]]
        """
        return self._lldp

    @lldp.setter
    def lldp(self, lldp):
        """Sets the lldp of this GetNetworkClient200Response.

        The link layer discover protocol settings for the client

        :param lldp: The lldp of this GetNetworkClient200Response.
        :type lldp: List[List[str]]
        """

        self._lldp = lldp

    @property
    def mac(self):
        """Gets the mac of this GetNetworkClient200Response.

        The MAC address of the client

        :return: The mac of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetNetworkClient200Response.

        The MAC address of the client

        :param mac: The mac of this GetNetworkClient200Response.
        :type mac: str
        """

        self._mac = mac

    @property
    def manufacturer(self):
        """Gets the manufacturer of this GetNetworkClient200Response.

        Manufacturer of the client

        :return: The manufacturer of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this GetNetworkClient200Response.

        Manufacturer of the client

        :param manufacturer: The manufacturer of this GetNetworkClient200Response.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def os(self):
        """Gets the os of this GetNetworkClient200Response.

        The operating system of the client

        :return: The os of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this GetNetworkClient200Response.

        The operating system of the client

        :param os: The os of this GetNetworkClient200Response.
        :type os: str
        """

        self._os = os

    @property
    def recent_device_mac(self):
        """Gets the recent_device_mac of this GetNetworkClient200Response.

        The MAC address of the node that the device was last connected to

        :return: The recent_device_mac of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._recent_device_mac

    @recent_device_mac.setter
    def recent_device_mac(self, recent_device_mac):
        """Sets the recent_device_mac of this GetNetworkClient200Response.

        The MAC address of the node that the device was last connected to

        :param recent_device_mac: The recent_device_mac of this GetNetworkClient200Response.
        :type recent_device_mac: str
        """

        self._recent_device_mac = recent_device_mac

    @property
    def sm_installed(self):
        """Gets the sm_installed of this GetNetworkClient200Response.

        Status of SM for the client

        :return: The sm_installed of this GetNetworkClient200Response.
        :rtype: bool
        """
        return self._sm_installed

    @sm_installed.setter
    def sm_installed(self, sm_installed):
        """Sets the sm_installed of this GetNetworkClient200Response.

        Status of SM for the client

        :param sm_installed: The sm_installed of this GetNetworkClient200Response.
        :type sm_installed: bool
        """

        self._sm_installed = sm_installed

    @property
    def ssid(self):
        """Gets the ssid of this GetNetworkClient200Response.

        The name of the SSID that the client is connected to

        :return: The ssid of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._ssid

    @ssid.setter
    def ssid(self, ssid):
        """Sets the ssid of this GetNetworkClient200Response.

        The name of the SSID that the client is connected to

        :param ssid: The ssid of this GetNetworkClient200Response.
        :type ssid: str
        """

        self._ssid = ssid

    @property
    def status(self):
        """Gets the status of this GetNetworkClient200Response.

        The connection status of the client

        :return: The status of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetNetworkClient200Response.

        The connection status of the client

        :param status: The status of this GetNetworkClient200Response.
        :type status: str
        """
        allowed_values = ["Offline", "Online"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def switchport(self):
        """Gets the switchport of this GetNetworkClient200Response.

        The switch port that the client is connected to

        :return: The switchport of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._switchport

    @switchport.setter
    def switchport(self, switchport):
        """Sets the switchport of this GetNetworkClient200Response.

        The switch port that the client is connected to

        :param switchport: The switchport of this GetNetworkClient200Response.
        :type switchport: str
        """

        self._switchport = switchport

    @property
    def user(self):
        """Gets the user of this GetNetworkClient200Response.

        The username of the user of the client

        :return: The user of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this GetNetworkClient200Response.

        The username of the user of the client

        :param user: The user of this GetNetworkClient200Response.
        :type user: str
        """

        self._user = user

    @property
    def vlan(self):
        """Gets the vlan of this GetNetworkClient200Response.

        The name of the VLAN that the client is connected to

        :return: The vlan of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this GetNetworkClient200Response.

        The name of the VLAN that the client is connected to

        :param vlan: The vlan of this GetNetworkClient200Response.
        :type vlan: str
        """

        self._vlan = vlan

    @property
    def wireless_capabilities(self):
        """Gets the wireless_capabilities of this GetNetworkClient200Response.

        Wireless capabilities of the client

        :return: The wireless_capabilities of this GetNetworkClient200Response.
        :rtype: str
        """
        return self._wireless_capabilities

    @wireless_capabilities.setter
    def wireless_capabilities(self, wireless_capabilities):
        """Sets the wireless_capabilities of this GetNetworkClient200Response.

        Wireless capabilities of the client

        :param wireless_capabilities: The wireless_capabilities of this GetNetworkClient200Response.
        :type wireless_capabilities: str
        """

        self._wireless_capabilities = wireless_capabilities
