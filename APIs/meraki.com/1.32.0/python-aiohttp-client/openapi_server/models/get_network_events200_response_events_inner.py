# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_events200_response_events_inner_event_data import GetNetworkEvents200ResponseEventsInnerEventData
from openapi_server import util


class GetNetworkEvents200ResponseEventsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, client_description: str=None, client_id: str=None, client_mac: str=None, description: str=None, device_name: str=None, device_serial: str=None, event_data: GetNetworkEvents200ResponseEventsInnerEventData=None, network_id: str=None, occurred_at: str=None, ssid_number: int=None, type: str=None):
        """GetNetworkEvents200ResponseEventsInner - a model defined in OpenAPI

        :param category: The category of this GetNetworkEvents200ResponseEventsInner.
        :param client_description: The client_description of this GetNetworkEvents200ResponseEventsInner.
        :param client_id: The client_id of this GetNetworkEvents200ResponseEventsInner.
        :param client_mac: The client_mac of this GetNetworkEvents200ResponseEventsInner.
        :param description: The description of this GetNetworkEvents200ResponseEventsInner.
        :param device_name: The device_name of this GetNetworkEvents200ResponseEventsInner.
        :param device_serial: The device_serial of this GetNetworkEvents200ResponseEventsInner.
        :param event_data: The event_data of this GetNetworkEvents200ResponseEventsInner.
        :param network_id: The network_id of this GetNetworkEvents200ResponseEventsInner.
        :param occurred_at: The occurred_at of this GetNetworkEvents200ResponseEventsInner.
        :param ssid_number: The ssid_number of this GetNetworkEvents200ResponseEventsInner.
        :param type: The type of this GetNetworkEvents200ResponseEventsInner.
        """
        self.openapi_types = {
            'category': str,
            'client_description': str,
            'client_id': str,
            'client_mac': str,
            'description': str,
            'device_name': str,
            'device_serial': str,
            'event_data': GetNetworkEvents200ResponseEventsInnerEventData,
            'network_id': str,
            'occurred_at': str,
            'ssid_number': int,
            'type': str
        }

        self.attribute_map = {
            'category': 'category',
            'client_description': 'clientDescription',
            'client_id': 'clientId',
            'client_mac': 'clientMac',
            'description': 'description',
            'device_name': 'deviceName',
            'device_serial': 'deviceSerial',
            'event_data': 'eventData',
            'network_id': 'networkId',
            'occurred_at': 'occurredAt',
            'ssid_number': 'ssidNumber',
            'type': 'type'
        }

        self._category = category
        self._client_description = client_description
        self._client_id = client_id
        self._client_mac = client_mac
        self._description = description
        self._device_name = device_name
        self._device_serial = device_serial
        self._event_data = event_data
        self._network_id = network_id
        self._occurred_at = occurred_at
        self._ssid_number = ssid_number
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkEvents200ResponseEventsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkEvents_200_response_events_inner of this GetNetworkEvents200ResponseEventsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this GetNetworkEvents200ResponseEventsInner.

        The category that the event type belongs to

        :return: The category of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GetNetworkEvents200ResponseEventsInner.

        The category that the event type belongs to

        :param category: The category of this GetNetworkEvents200ResponseEventsInner.
        :type category: str
        """

        self._category = category

    @property
    def client_description(self):
        """Gets the client_description of this GetNetworkEvents200ResponseEventsInner.

        A description of the client. This is usually the client's device name.

        :return: The client_description of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._client_description

    @client_description.setter
    def client_description(self, client_description):
        """Sets the client_description of this GetNetworkEvents200ResponseEventsInner.

        A description of the client. This is usually the client's device name.

        :param client_description: The client_description of this GetNetworkEvents200ResponseEventsInner.
        :type client_description: str
        """

        self._client_description = client_description

    @property
    def client_id(self):
        """Gets the client_id of this GetNetworkEvents200ResponseEventsInner.

        A string identifying the client. This could be a client's MAC or IP address

        :return: The client_id of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GetNetworkEvents200ResponseEventsInner.

        A string identifying the client. This could be a client's MAC or IP address

        :param client_id: The client_id of this GetNetworkEvents200ResponseEventsInner.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_mac(self):
        """Gets the client_mac of this GetNetworkEvents200ResponseEventsInner.

        The client's MAC address.

        :return: The client_mac of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._client_mac

    @client_mac.setter
    def client_mac(self, client_mac):
        """Sets the client_mac of this GetNetworkEvents200ResponseEventsInner.

        The client's MAC address.

        :param client_mac: The client_mac of this GetNetworkEvents200ResponseEventsInner.
        :type client_mac: str
        """

        self._client_mac = client_mac

    @property
    def description(self):
        """Gets the description of this GetNetworkEvents200ResponseEventsInner.

        A description of the event the happened.

        :return: The description of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetNetworkEvents200ResponseEventsInner.

        A description of the event the happened.

        :param description: The description of this GetNetworkEvents200ResponseEventsInner.
        :type description: str
        """

        self._description = description

    @property
    def device_name(self):
        """Gets the device_name of this GetNetworkEvents200ResponseEventsInner.

        The name of the device. Only shown if the device is an access point.

        :return: The device_name of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this GetNetworkEvents200ResponseEventsInner.

        The name of the device. Only shown if the device is an access point.

        :param device_name: The device_name of this GetNetworkEvents200ResponseEventsInner.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def device_serial(self):
        """Gets the device_serial of this GetNetworkEvents200ResponseEventsInner.

        The serial number of the device. Only shown if the device is an access point.

        :return: The device_serial of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._device_serial

    @device_serial.setter
    def device_serial(self, device_serial):
        """Sets the device_serial of this GetNetworkEvents200ResponseEventsInner.

        The serial number of the device. Only shown if the device is an access point.

        :param device_serial: The device_serial of this GetNetworkEvents200ResponseEventsInner.
        :type device_serial: str
        """

        self._device_serial = device_serial

    @property
    def event_data(self):
        """Gets the event_data of this GetNetworkEvents200ResponseEventsInner.


        :return: The event_data of this GetNetworkEvents200ResponseEventsInner.
        :rtype: GetNetworkEvents200ResponseEventsInnerEventData
        """
        return self._event_data

    @event_data.setter
    def event_data(self, event_data):
        """Sets the event_data of this GetNetworkEvents200ResponseEventsInner.


        :param event_data: The event_data of this GetNetworkEvents200ResponseEventsInner.
        :type event_data: GetNetworkEvents200ResponseEventsInnerEventData
        """

        self._event_data = event_data

    @property
    def network_id(self):
        """Gets the network_id of this GetNetworkEvents200ResponseEventsInner.

        The ID of the network.

        :return: The network_id of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this GetNetworkEvents200ResponseEventsInner.

        The ID of the network.

        :param network_id: The network_id of this GetNetworkEvents200ResponseEventsInner.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def occurred_at(self):
        """Gets the occurred_at of this GetNetworkEvents200ResponseEventsInner.

        An UTC ISO8601 string of the time the event occurred at.

        :return: The occurred_at of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._occurred_at

    @occurred_at.setter
    def occurred_at(self, occurred_at):
        """Sets the occurred_at of this GetNetworkEvents200ResponseEventsInner.

        An UTC ISO8601 string of the time the event occurred at.

        :param occurred_at: The occurred_at of this GetNetworkEvents200ResponseEventsInner.
        :type occurred_at: str
        """

        self._occurred_at = occurred_at

    @property
    def ssid_number(self):
        """Gets the ssid_number of this GetNetworkEvents200ResponseEventsInner.

        The SSID number of the device.

        :return: The ssid_number of this GetNetworkEvents200ResponseEventsInner.
        :rtype: int
        """
        return self._ssid_number

    @ssid_number.setter
    def ssid_number(self, ssid_number):
        """Sets the ssid_number of this GetNetworkEvents200ResponseEventsInner.

        The SSID number of the device.

        :param ssid_number: The ssid_number of this GetNetworkEvents200ResponseEventsInner.
        :type ssid_number: int
        """

        self._ssid_number = ssid_number

    @property
    def type(self):
        """Gets the type of this GetNetworkEvents200ResponseEventsInner.

        The type of event being listed.

        :return: The type of this GetNetworkEvents200ResponseEventsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetNetworkEvents200ResponseEventsInner.

        The type of event being listed.

        :param type: The type of this GetNetworkEvents200ResponseEventsInner.
        :type type: str
        """

        self._type = type
