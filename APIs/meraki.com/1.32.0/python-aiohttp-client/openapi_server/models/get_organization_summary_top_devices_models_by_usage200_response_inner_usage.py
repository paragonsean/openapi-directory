# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: float=None, total: float=None):
        """GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage - a model defined in OpenAPI

        :param average: The average of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        :param total: The total of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        """
        self.openapi_types = {
            'average': float,
            'total': float
        }

        self.attribute_map = {
            'average': 'average',
            'total': 'total'
        }

        self._average = average
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSummaryTopDevicesModelsByUsage_200_response_inner_usage of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.

        Average usage in megabytes

        :return: The average of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        :rtype: float
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.

        Average usage in megabytes

        :param average: The average of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        :type average: float
        """

        self._average = average

    @property
    def total(self):
        """Gets the total of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.

        Total usage in megabytes

        :return: The total of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.

        Total usage in megabytes

        :param total: The total of this GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInnerUsage.
        :type total: float
        """

        self._total = total
