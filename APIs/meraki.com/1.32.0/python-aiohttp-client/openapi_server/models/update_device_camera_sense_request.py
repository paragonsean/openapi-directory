# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_device_camera_sense_request_audio_detection import UpdateDeviceCameraSenseRequestAudioDetection
from openapi_server import util


class UpdateDeviceCameraSenseRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_detection: UpdateDeviceCameraSenseRequestAudioDetection=None, detection_model_id: str=None, mqtt_broker_id: str=None, sense_enabled: bool=None):
        """UpdateDeviceCameraSenseRequest - a model defined in OpenAPI

        :param audio_detection: The audio_detection of this UpdateDeviceCameraSenseRequest.
        :param detection_model_id: The detection_model_id of this UpdateDeviceCameraSenseRequest.
        :param mqtt_broker_id: The mqtt_broker_id of this UpdateDeviceCameraSenseRequest.
        :param sense_enabled: The sense_enabled of this UpdateDeviceCameraSenseRequest.
        """
        self.openapi_types = {
            'audio_detection': UpdateDeviceCameraSenseRequestAudioDetection,
            'detection_model_id': str,
            'mqtt_broker_id': str,
            'sense_enabled': bool
        }

        self.attribute_map = {
            'audio_detection': 'audioDetection',
            'detection_model_id': 'detectionModelId',
            'mqtt_broker_id': 'mqttBrokerId',
            'sense_enabled': 'senseEnabled'
        }

        self._audio_detection = audio_detection
        self._detection_model_id = detection_model_id
        self._mqtt_broker_id = mqtt_broker_id
        self._sense_enabled = sense_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDeviceCameraSenseRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDeviceCameraSense_request of this UpdateDeviceCameraSenseRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_detection(self):
        """Gets the audio_detection of this UpdateDeviceCameraSenseRequest.


        :return: The audio_detection of this UpdateDeviceCameraSenseRequest.
        :rtype: UpdateDeviceCameraSenseRequestAudioDetection
        """
        return self._audio_detection

    @audio_detection.setter
    def audio_detection(self, audio_detection):
        """Sets the audio_detection of this UpdateDeviceCameraSenseRequest.


        :param audio_detection: The audio_detection of this UpdateDeviceCameraSenseRequest.
        :type audio_detection: UpdateDeviceCameraSenseRequestAudioDetection
        """

        self._audio_detection = audio_detection

    @property
    def detection_model_id(self):
        """Gets the detection_model_id of this UpdateDeviceCameraSenseRequest.

        The ID of the object detection model

        :return: The detection_model_id of this UpdateDeviceCameraSenseRequest.
        :rtype: str
        """
        return self._detection_model_id

    @detection_model_id.setter
    def detection_model_id(self, detection_model_id):
        """Sets the detection_model_id of this UpdateDeviceCameraSenseRequest.

        The ID of the object detection model

        :param detection_model_id: The detection_model_id of this UpdateDeviceCameraSenseRequest.
        :type detection_model_id: str
        """

        self._detection_model_id = detection_model_id

    @property
    def mqtt_broker_id(self):
        """Gets the mqtt_broker_id of this UpdateDeviceCameraSenseRequest.

        The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera

        :return: The mqtt_broker_id of this UpdateDeviceCameraSenseRequest.
        :rtype: str
        """
        return self._mqtt_broker_id

    @mqtt_broker_id.setter
    def mqtt_broker_id(self, mqtt_broker_id):
        """Sets the mqtt_broker_id of this UpdateDeviceCameraSenseRequest.

        The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera

        :param mqtt_broker_id: The mqtt_broker_id of this UpdateDeviceCameraSenseRequest.
        :type mqtt_broker_id: str
        """

        self._mqtt_broker_id = mqtt_broker_id

    @property
    def sense_enabled(self):
        """Gets the sense_enabled of this UpdateDeviceCameraSenseRequest.

        Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera

        :return: The sense_enabled of this UpdateDeviceCameraSenseRequest.
        :rtype: bool
        """
        return self._sense_enabled

    @sense_enabled.setter
    def sense_enabled(self, sense_enabled):
        """Sets the sense_enabled of this UpdateDeviceCameraSenseRequest.

        Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera

        :param sense_enabled: The sense_enabled of this UpdateDeviceCameraSenseRequest.
        :type sense_enabled: bool
        """

        self._sense_enabled = sense_enabled
