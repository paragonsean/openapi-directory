# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_clients_overview200_response_usage_overall import GetOrganizationClientsOverview200ResponseUsageOverall
from openapi_server import util


class GetOrganizationClientsOverview200ResponseUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: float=None, overall: GetOrganizationClientsOverview200ResponseUsageOverall=None):
        """GetOrganizationClientsOverview200ResponseUsage - a model defined in OpenAPI

        :param average: The average of this GetOrganizationClientsOverview200ResponseUsage.
        :param overall: The overall of this GetOrganizationClientsOverview200ResponseUsage.
        """
        self.openapi_types = {
            'average': float,
            'overall': GetOrganizationClientsOverview200ResponseUsageOverall
        }

        self.attribute_map = {
            'average': 'average',
            'overall': 'overall'
        }

        self._average = average
        self._overall = overall

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationClientsOverview200ResponseUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationClientsOverview_200_response_usage of this GetOrganizationClientsOverview200ResponseUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this GetOrganizationClientsOverview200ResponseUsage.

        Average data usage (in kb) of each client in organization

        :return: The average of this GetOrganizationClientsOverview200ResponseUsage.
        :rtype: float
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this GetOrganizationClientsOverview200ResponseUsage.

        Average data usage (in kb) of each client in organization

        :param average: The average of this GetOrganizationClientsOverview200ResponseUsage.
        :type average: float
        """

        self._average = average

    @property
    def overall(self):
        """Gets the overall of this GetOrganizationClientsOverview200ResponseUsage.


        :return: The overall of this GetOrganizationClientsOverview200ResponseUsage.
        :rtype: GetOrganizationClientsOverview200ResponseUsageOverall
        """
        return self._overall

    @overall.setter
    def overall(self, overall):
        """Sets the overall of this GetOrganizationClientsOverview200ResponseUsage.


        :param overall: The overall of this GetOrganizationClientsOverview200ResponseUsage.
        :type overall: GetOrganizationClientsOverview200ResponseUsageOverall
        """

        self._overall = overall
