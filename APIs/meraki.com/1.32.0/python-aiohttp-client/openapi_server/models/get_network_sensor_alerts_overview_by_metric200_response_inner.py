# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_sensor_alerts_overview_by_metric200_response_inner_counts import GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCounts
from openapi_server import util


class GetNetworkSensorAlertsOverviewByMetric200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, counts: GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCounts=None, end_ts: datetime=None, start_ts: datetime=None):
        """GetNetworkSensorAlertsOverviewByMetric200ResponseInner - a model defined in OpenAPI

        :param counts: The counts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :param end_ts: The end_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :param start_ts: The start_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        """
        self.openapi_types = {
            'counts': GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCounts,
            'end_ts': datetime,
            'start_ts': datetime
        }

        self.attribute_map = {
            'counts': 'counts',
            'end_ts': 'endTs',
            'start_ts': 'startTs'
        }

        self._counts = counts
        self._end_ts = end_ts
        self._start_ts = start_ts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSensorAlertsOverviewByMetric200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSensorAlertsOverviewByMetric_200_response_inner of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counts(self):
        """Gets the counts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.


        :return: The counts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :rtype: GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCounts
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.


        :param counts: The counts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :type counts: GetNetworkSensorAlertsOverviewByMetric200ResponseInnerCounts
        """

        self._counts = counts

    @property
    def end_ts(self):
        """Gets the end_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.

        End of the timespan over which sensor alerts are counted

        :return: The end_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :rtype: datetime
        """
        return self._end_ts

    @end_ts.setter
    def end_ts(self, end_ts):
        """Sets the end_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.

        End of the timespan over which sensor alerts are counted

        :param end_ts: The end_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :type end_ts: datetime
        """

        self._end_ts = end_ts

    @property
    def start_ts(self):
        """Gets the start_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.

        Start of the timespan over which sensor alerts are counted

        :return: The start_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :rtype: datetime
        """
        return self._start_ts

    @start_ts.setter
    def start_ts(self, start_ts):
        """Sets the start_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.

        Start of the timespan over which sensor alerts are counted

        :param start_ts: The start_ts of this GetNetworkSensorAlertsOverviewByMetric200ResponseInner.
        :type start_ts: datetime
        """

        self._start_ts = start_ts
