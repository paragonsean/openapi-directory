# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_wireless_devices_ethernet_statuses200_response_inner_power_ac import GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerAc
from openapi_server.models.get_organization_wireless_devices_ethernet_statuses200_response_inner_power_poe import GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerPoe
from openapi_server import util


class GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ac: GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerAc=None, mode: str=None, poe: GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerPoe=None):
        """GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower - a model defined in OpenAPI

        :param ac: The ac of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :param mode: The mode of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :param poe: The poe of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        """
        self.openapi_types = {
            'ac': GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerAc,
            'mode': str,
            'poe': GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerPoe
        }

        self.attribute_map = {
            'ac': 'ac',
            'mode': 'mode',
            'poe': 'poe'
        }

        self._ac = ac
        self._mode = mode
        self._poe = poe

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ac(self):
        """Gets the ac of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.


        :return: The ac of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :rtype: GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerAc
        """
        return self._ac

    @ac.setter
    def ac(self, ac):
        """Sets the ac of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.


        :param ac: The ac of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :type ac: GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerAc
        """

        self._ac = ac

    @property
    def mode(self):
        """Gets the mode of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.

        The PoE power mode for the AP. Can be 'full' or 'low'

        :return: The mode of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.

        The PoE power mode for the AP. Can be 'full' or 'low'

        :param mode: The mode of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :type mode: str
        """

        self._mode = mode

    @property
    def poe(self):
        """Gets the poe of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.


        :return: The poe of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :rtype: GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerPoe
        """
        return self._poe

    @poe.setter
    def poe(self, poe):
        """Sets the poe of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.


        :param poe: The poe of this GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPower.
        :type poe: GetOrganizationWirelessDevicesEthernetStatuses200ResponseInnerPowerPoe
        """

        self._poe = poe
