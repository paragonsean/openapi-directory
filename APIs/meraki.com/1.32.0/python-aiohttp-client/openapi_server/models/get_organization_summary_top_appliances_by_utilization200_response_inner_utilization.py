# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_summary_top_appliances_by_utilization200_response_inner_utilization_average import GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilizationAverage
from openapi_server import util


class GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilizationAverage=None):
        """GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization - a model defined in OpenAPI

        :param average: The average of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization.
        """
        self.openapi_types = {
            'average': GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilizationAverage
        }

        self.attribute_map = {
            'average': 'average'
        }

        self._average = average

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSummaryTopAppliancesByUtilization_200_response_inner_utilization of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization.


        :return: The average of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization.
        :rtype: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilizationAverage
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization.


        :param average: The average of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization.
        :type average: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilizationAverage
        """

        self._average = average
