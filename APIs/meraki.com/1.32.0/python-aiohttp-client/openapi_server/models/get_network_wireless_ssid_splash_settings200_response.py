# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_billing import GetNetworkWirelessSsidSplashSettings200ResponseBilling
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_guest_sponsorship import GetNetworkWirelessSsidSplashSettings200ResponseGuestSponsorship
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_self_registration import GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_sentry_enrollment import GetNetworkWirelessSsidSplashSettings200ResponseSentryEnrollment
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_splash_image import GetNetworkWirelessSsidSplashSettings200ResponseSplashImage
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_splash_logo import GetNetworkWirelessSsidSplashSettings200ResponseSplashLogo
from openapi_server.models.get_network_wireless_ssid_splash_settings200_response_splash_prepaid_front import GetNetworkWirelessSsidSplashSettings200ResponseSplashPrepaidFront
from openapi_server import util


class GetNetworkWirelessSsidSplashSettings200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_simultaneous_logins: bool=None, billing: GetNetworkWirelessSsidSplashSettings200ResponseBilling=None, block_all_traffic_before_sign_on: bool=None, controller_disconnection_behavior: str=None, guest_sponsorship: GetNetworkWirelessSsidSplashSettings200ResponseGuestSponsorship=None, redirect_url: str=None, self_registration: GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration=None, sentry_enrollment: GetNetworkWirelessSsidSplashSettings200ResponseSentryEnrollment=None, splash_image: GetNetworkWirelessSsidSplashSettings200ResponseSplashImage=None, splash_logo: GetNetworkWirelessSsidSplashSettings200ResponseSplashLogo=None, splash_page: str=None, splash_prepaid_front: GetNetworkWirelessSsidSplashSettings200ResponseSplashPrepaidFront=None, splash_timeout: int=None, splash_url: str=None, ssid_number: int=None, use_redirect_url: bool=None, use_splash_url: bool=None, welcome_message: str=None):
        """GetNetworkWirelessSsidSplashSettings200Response - a model defined in OpenAPI

        :param allow_simultaneous_logins: The allow_simultaneous_logins of this GetNetworkWirelessSsidSplashSettings200Response.
        :param billing: The billing of this GetNetworkWirelessSsidSplashSettings200Response.
        :param block_all_traffic_before_sign_on: The block_all_traffic_before_sign_on of this GetNetworkWirelessSsidSplashSettings200Response.
        :param controller_disconnection_behavior: The controller_disconnection_behavior of this GetNetworkWirelessSsidSplashSettings200Response.
        :param guest_sponsorship: The guest_sponsorship of this GetNetworkWirelessSsidSplashSettings200Response.
        :param redirect_url: The redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :param self_registration: The self_registration of this GetNetworkWirelessSsidSplashSettings200Response.
        :param sentry_enrollment: The sentry_enrollment of this GetNetworkWirelessSsidSplashSettings200Response.
        :param splash_image: The splash_image of this GetNetworkWirelessSsidSplashSettings200Response.
        :param splash_logo: The splash_logo of this GetNetworkWirelessSsidSplashSettings200Response.
        :param splash_page: The splash_page of this GetNetworkWirelessSsidSplashSettings200Response.
        :param splash_prepaid_front: The splash_prepaid_front of this GetNetworkWirelessSsidSplashSettings200Response.
        :param splash_timeout: The splash_timeout of this GetNetworkWirelessSsidSplashSettings200Response.
        :param splash_url: The splash_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :param ssid_number: The ssid_number of this GetNetworkWirelessSsidSplashSettings200Response.
        :param use_redirect_url: The use_redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :param use_splash_url: The use_splash_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :param welcome_message: The welcome_message of this GetNetworkWirelessSsidSplashSettings200Response.
        """
        self.openapi_types = {
            'allow_simultaneous_logins': bool,
            'billing': GetNetworkWirelessSsidSplashSettings200ResponseBilling,
            'block_all_traffic_before_sign_on': bool,
            'controller_disconnection_behavior': str,
            'guest_sponsorship': GetNetworkWirelessSsidSplashSettings200ResponseGuestSponsorship,
            'redirect_url': str,
            'self_registration': GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration,
            'sentry_enrollment': GetNetworkWirelessSsidSplashSettings200ResponseSentryEnrollment,
            'splash_image': GetNetworkWirelessSsidSplashSettings200ResponseSplashImage,
            'splash_logo': GetNetworkWirelessSsidSplashSettings200ResponseSplashLogo,
            'splash_page': str,
            'splash_prepaid_front': GetNetworkWirelessSsidSplashSettings200ResponseSplashPrepaidFront,
            'splash_timeout': int,
            'splash_url': str,
            'ssid_number': int,
            'use_redirect_url': bool,
            'use_splash_url': bool,
            'welcome_message': str
        }

        self.attribute_map = {
            'allow_simultaneous_logins': 'allowSimultaneousLogins',
            'billing': 'billing',
            'block_all_traffic_before_sign_on': 'blockAllTrafficBeforeSignOn',
            'controller_disconnection_behavior': 'controllerDisconnectionBehavior',
            'guest_sponsorship': 'guestSponsorship',
            'redirect_url': 'redirectUrl',
            'self_registration': 'selfRegistration',
            'sentry_enrollment': 'sentryEnrollment',
            'splash_image': 'splashImage',
            'splash_logo': 'splashLogo',
            'splash_page': 'splashPage',
            'splash_prepaid_front': 'splashPrepaidFront',
            'splash_timeout': 'splashTimeout',
            'splash_url': 'splashUrl',
            'ssid_number': 'ssidNumber',
            'use_redirect_url': 'useRedirectUrl',
            'use_splash_url': 'useSplashUrl',
            'welcome_message': 'welcomeMessage'
        }

        self._allow_simultaneous_logins = allow_simultaneous_logins
        self._billing = billing
        self._block_all_traffic_before_sign_on = block_all_traffic_before_sign_on
        self._controller_disconnection_behavior = controller_disconnection_behavior
        self._guest_sponsorship = guest_sponsorship
        self._redirect_url = redirect_url
        self._self_registration = self_registration
        self._sentry_enrollment = sentry_enrollment
        self._splash_image = splash_image
        self._splash_logo = splash_logo
        self._splash_page = splash_page
        self._splash_prepaid_front = splash_prepaid_front
        self._splash_timeout = splash_timeout
        self._splash_url = splash_url
        self._ssid_number = ssid_number
        self._use_redirect_url = use_redirect_url
        self._use_splash_url = use_splash_url
        self._welcome_message = welcome_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkWirelessSsidSplashSettings200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkWirelessSsidSplashSettings_200_response of this GetNetworkWirelessSsidSplashSettings200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_simultaneous_logins(self):
        """Gets the allow_simultaneous_logins of this GetNetworkWirelessSsidSplashSettings200Response.

        Whether or not to allow simultaneous logins from different devices.

        :return: The allow_simultaneous_logins of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: bool
        """
        return self._allow_simultaneous_logins

    @allow_simultaneous_logins.setter
    def allow_simultaneous_logins(self, allow_simultaneous_logins):
        """Sets the allow_simultaneous_logins of this GetNetworkWirelessSsidSplashSettings200Response.

        Whether or not to allow simultaneous logins from different devices.

        :param allow_simultaneous_logins: The allow_simultaneous_logins of this GetNetworkWirelessSsidSplashSettings200Response.
        :type allow_simultaneous_logins: bool
        """

        self._allow_simultaneous_logins = allow_simultaneous_logins

    @property
    def billing(self):
        """Gets the billing of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The billing of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseBilling
        """
        return self._billing

    @billing.setter
    def billing(self, billing):
        """Sets the billing of this GetNetworkWirelessSsidSplashSettings200Response.


        :param billing: The billing of this GetNetworkWirelessSsidSplashSettings200Response.
        :type billing: GetNetworkWirelessSsidSplashSettings200ResponseBilling
        """

        self._billing = billing

    @property
    def block_all_traffic_before_sign_on(self):
        """Gets the block_all_traffic_before_sign_on of this GetNetworkWirelessSsidSplashSettings200Response.

        How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.

        :return: The block_all_traffic_before_sign_on of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: bool
        """
        return self._block_all_traffic_before_sign_on

    @block_all_traffic_before_sign_on.setter
    def block_all_traffic_before_sign_on(self, block_all_traffic_before_sign_on):
        """Sets the block_all_traffic_before_sign_on of this GetNetworkWirelessSsidSplashSettings200Response.

        How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.

        :param block_all_traffic_before_sign_on: The block_all_traffic_before_sign_on of this GetNetworkWirelessSsidSplashSettings200Response.
        :type block_all_traffic_before_sign_on: bool
        """

        self._block_all_traffic_before_sign_on = block_all_traffic_before_sign_on

    @property
    def controller_disconnection_behavior(self):
        """Gets the controller_disconnection_behavior of this GetNetworkWirelessSsidSplashSettings200Response.

        How login attempts should be handled when the controller is unreachable.

        :return: The controller_disconnection_behavior of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: str
        """
        return self._controller_disconnection_behavior

    @controller_disconnection_behavior.setter
    def controller_disconnection_behavior(self, controller_disconnection_behavior):
        """Sets the controller_disconnection_behavior of this GetNetworkWirelessSsidSplashSettings200Response.

        How login attempts should be handled when the controller is unreachable.

        :param controller_disconnection_behavior: The controller_disconnection_behavior of this GetNetworkWirelessSsidSplashSettings200Response.
        :type controller_disconnection_behavior: str
        """

        self._controller_disconnection_behavior = controller_disconnection_behavior

    @property
    def guest_sponsorship(self):
        """Gets the guest_sponsorship of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The guest_sponsorship of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseGuestSponsorship
        """
        return self._guest_sponsorship

    @guest_sponsorship.setter
    def guest_sponsorship(self, guest_sponsorship):
        """Sets the guest_sponsorship of this GetNetworkWirelessSsidSplashSettings200Response.


        :param guest_sponsorship: The guest_sponsorship of this GetNetworkWirelessSsidSplashSettings200Response.
        :type guest_sponsorship: GetNetworkWirelessSsidSplashSettings200ResponseGuestSponsorship
        """

        self._guest_sponsorship = guest_sponsorship

    @property
    def redirect_url(self):
        """Gets the redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.

        The custom redirect URL where the users will go after the splash page.

        :return: The redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.

        The custom redirect URL where the users will go after the splash page.

        :param redirect_url: The redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url

    @property
    def self_registration(self):
        """Gets the self_registration of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The self_registration of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration
        """
        return self._self_registration

    @self_registration.setter
    def self_registration(self, self_registration):
        """Sets the self_registration of this GetNetworkWirelessSsidSplashSettings200Response.


        :param self_registration: The self_registration of this GetNetworkWirelessSsidSplashSettings200Response.
        :type self_registration: GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration
        """

        self._self_registration = self_registration

    @property
    def sentry_enrollment(self):
        """Gets the sentry_enrollment of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The sentry_enrollment of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseSentryEnrollment
        """
        return self._sentry_enrollment

    @sentry_enrollment.setter
    def sentry_enrollment(self, sentry_enrollment):
        """Sets the sentry_enrollment of this GetNetworkWirelessSsidSplashSettings200Response.


        :param sentry_enrollment: The sentry_enrollment of this GetNetworkWirelessSsidSplashSettings200Response.
        :type sentry_enrollment: GetNetworkWirelessSsidSplashSettings200ResponseSentryEnrollment
        """

        self._sentry_enrollment = sentry_enrollment

    @property
    def splash_image(self):
        """Gets the splash_image of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The splash_image of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseSplashImage
        """
        return self._splash_image

    @splash_image.setter
    def splash_image(self, splash_image):
        """Sets the splash_image of this GetNetworkWirelessSsidSplashSettings200Response.


        :param splash_image: The splash_image of this GetNetworkWirelessSsidSplashSettings200Response.
        :type splash_image: GetNetworkWirelessSsidSplashSettings200ResponseSplashImage
        """

        self._splash_image = splash_image

    @property
    def splash_logo(self):
        """Gets the splash_logo of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The splash_logo of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseSplashLogo
        """
        return self._splash_logo

    @splash_logo.setter
    def splash_logo(self, splash_logo):
        """Sets the splash_logo of this GetNetworkWirelessSsidSplashSettings200Response.


        :param splash_logo: The splash_logo of this GetNetworkWirelessSsidSplashSettings200Response.
        :type splash_logo: GetNetworkWirelessSsidSplashSettings200ResponseSplashLogo
        """

        self._splash_logo = splash_logo

    @property
    def splash_page(self):
        """Gets the splash_page of this GetNetworkWirelessSsidSplashSettings200Response.

        The type of splash page for this SSID

        :return: The splash_page of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: str
        """
        return self._splash_page

    @splash_page.setter
    def splash_page(self, splash_page):
        """Sets the splash_page of this GetNetworkWirelessSsidSplashSettings200Response.

        The type of splash page for this SSID

        :param splash_page: The splash_page of this GetNetworkWirelessSsidSplashSettings200Response.
        :type splash_page: str
        """

        self._splash_page = splash_page

    @property
    def splash_prepaid_front(self):
        """Gets the splash_prepaid_front of this GetNetworkWirelessSsidSplashSettings200Response.


        :return: The splash_prepaid_front of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: GetNetworkWirelessSsidSplashSettings200ResponseSplashPrepaidFront
        """
        return self._splash_prepaid_front

    @splash_prepaid_front.setter
    def splash_prepaid_front(self, splash_prepaid_front):
        """Sets the splash_prepaid_front of this GetNetworkWirelessSsidSplashSettings200Response.


        :param splash_prepaid_front: The splash_prepaid_front of this GetNetworkWirelessSsidSplashSettings200Response.
        :type splash_prepaid_front: GetNetworkWirelessSsidSplashSettings200ResponseSplashPrepaidFront
        """

        self._splash_prepaid_front = splash_prepaid_front

    @property
    def splash_timeout(self):
        """Gets the splash_timeout of this GetNetworkWirelessSsidSplashSettings200Response.

        Splash timeout in minutes.

        :return: The splash_timeout of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: int
        """
        return self._splash_timeout

    @splash_timeout.setter
    def splash_timeout(self, splash_timeout):
        """Sets the splash_timeout of this GetNetworkWirelessSsidSplashSettings200Response.

        Splash timeout in minutes.

        :param splash_timeout: The splash_timeout of this GetNetworkWirelessSsidSplashSettings200Response.
        :type splash_timeout: int
        """

        self._splash_timeout = splash_timeout

    @property
    def splash_url(self):
        """Gets the splash_url of this GetNetworkWirelessSsidSplashSettings200Response.

        The custom splash URL of the click-through splash page.

        :return: The splash_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: str
        """
        return self._splash_url

    @splash_url.setter
    def splash_url(self, splash_url):
        """Sets the splash_url of this GetNetworkWirelessSsidSplashSettings200Response.

        The custom splash URL of the click-through splash page.

        :param splash_url: The splash_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :type splash_url: str
        """

        self._splash_url = splash_url

    @property
    def ssid_number(self):
        """Gets the ssid_number of this GetNetworkWirelessSsidSplashSettings200Response.

        SSID number

        :return: The ssid_number of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: int
        """
        return self._ssid_number

    @ssid_number.setter
    def ssid_number(self, ssid_number):
        """Sets the ssid_number of this GetNetworkWirelessSsidSplashSettings200Response.

        SSID number

        :param ssid_number: The ssid_number of this GetNetworkWirelessSsidSplashSettings200Response.
        :type ssid_number: int
        """

        self._ssid_number = ssid_number

    @property
    def use_redirect_url(self):
        """Gets the use_redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.

        The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.

        :return: The use_redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: bool
        """
        return self._use_redirect_url

    @use_redirect_url.setter
    def use_redirect_url(self, use_redirect_url):
        """Sets the use_redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.

        The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.

        :param use_redirect_url: The use_redirect_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :type use_redirect_url: bool
        """

        self._use_redirect_url = use_redirect_url

    @property
    def use_splash_url(self):
        """Gets the use_splash_url of this GetNetworkWirelessSsidSplashSettings200Response.

        Boolean indicating whether the users will be redirected to the custom splash url

        :return: The use_splash_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: bool
        """
        return self._use_splash_url

    @use_splash_url.setter
    def use_splash_url(self, use_splash_url):
        """Sets the use_splash_url of this GetNetworkWirelessSsidSplashSettings200Response.

        Boolean indicating whether the users will be redirected to the custom splash url

        :param use_splash_url: The use_splash_url of this GetNetworkWirelessSsidSplashSettings200Response.
        :type use_splash_url: bool
        """

        self._use_splash_url = use_splash_url

    @property
    def welcome_message(self):
        """Gets the welcome_message of this GetNetworkWirelessSsidSplashSettings200Response.

        The welcome message for the users on the splash page.

        :return: The welcome_message of this GetNetworkWirelessSsidSplashSettings200Response.
        :rtype: str
        """
        return self._welcome_message

    @welcome_message.setter
    def welcome_message(self, welcome_message):
        """Sets the welcome_message of this GetNetworkWirelessSsidSplashSettings200Response.

        The welcome message for the users on the splash page.

        :param welcome_message: The welcome_message of this GetNetworkWirelessSsidSplashSettings200Response.
        :type welcome_message: str
        """

        self._welcome_message = welcome_message
