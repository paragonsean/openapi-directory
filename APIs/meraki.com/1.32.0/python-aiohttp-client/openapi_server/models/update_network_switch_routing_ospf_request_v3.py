# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_switch_routing_ospf_request_areas_inner import UpdateNetworkSwitchRoutingOspfRequestAreasInner
from openapi_server import util


class UpdateNetworkSwitchRoutingOspfRequestV3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, areas: List[UpdateNetworkSwitchRoutingOspfRequestAreasInner]=None, dead_timer_in_seconds: int=None, enabled: bool=None, hello_timer_in_seconds: int=None):
        """UpdateNetworkSwitchRoutingOspfRequestV3 - a model defined in OpenAPI

        :param areas: The areas of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :param dead_timer_in_seconds: The dead_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :param enabled: The enabled of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :param hello_timer_in_seconds: The hello_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.
        """
        self.openapi_types = {
            'areas': List[UpdateNetworkSwitchRoutingOspfRequestAreasInner],
            'dead_timer_in_seconds': int,
            'enabled': bool,
            'hello_timer_in_seconds': int
        }

        self.attribute_map = {
            'areas': 'areas',
            'dead_timer_in_seconds': 'deadTimerInSeconds',
            'enabled': 'enabled',
            'hello_timer_in_seconds': 'helloTimerInSeconds'
        }

        self._areas = areas
        self._dead_timer_in_seconds = dead_timer_in_seconds
        self._enabled = enabled
        self._hello_timer_in_seconds = hello_timer_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSwitchRoutingOspfRequestV3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSwitchRoutingOspf_request_v3 of this UpdateNetworkSwitchRoutingOspfRequestV3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def areas(self):
        """Gets the areas of this UpdateNetworkSwitchRoutingOspfRequestV3.

        OSPF v3 areas

        :return: The areas of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :rtype: List[UpdateNetworkSwitchRoutingOspfRequestAreasInner]
        """
        return self._areas

    @areas.setter
    def areas(self, areas):
        """Sets the areas of this UpdateNetworkSwitchRoutingOspfRequestV3.

        OSPF v3 areas

        :param areas: The areas of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :type areas: List[UpdateNetworkSwitchRoutingOspfRequestAreasInner]
        """

        self._areas = areas

    @property
    def dead_timer_in_seconds(self):
        """Gets the dead_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.

        Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535

        :return: The dead_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :rtype: int
        """
        return self._dead_timer_in_seconds

    @dead_timer_in_seconds.setter
    def dead_timer_in_seconds(self, dead_timer_in_seconds):
        """Sets the dead_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.

        Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535

        :param dead_timer_in_seconds: The dead_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :type dead_timer_in_seconds: int
        """

        self._dead_timer_in_seconds = dead_timer_in_seconds

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkSwitchRoutingOspfRequestV3.

        Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.

        :return: The enabled of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkSwitchRoutingOspfRequestV3.

        Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.

        :param enabled: The enabled of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def hello_timer_in_seconds(self):
        """Gets the hello_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.

        Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.

        :return: The hello_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :rtype: int
        """
        return self._hello_timer_in_seconds

    @hello_timer_in_seconds.setter
    def hello_timer_in_seconds(self, hello_timer_in_seconds):
        """Sets the hello_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.

        Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.

        :param hello_timer_in_seconds: The hello_timer_in_seconds of this UpdateNetworkSwitchRoutingOspfRequestV3.
        :type hello_timer_in_seconds: int
        """

        self._hello_timer_in_seconds = hello_timer_in_seconds
