# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_mqtt_broker_request_security_security import CreateNetworkMqttBrokerRequestSecuritySecurity
from openapi_server import util


class CreateNetworkMqttBrokerRequestSecurity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: str=None, security: CreateNetworkMqttBrokerRequestSecuritySecurity=None):
        """CreateNetworkMqttBrokerRequestSecurity - a model defined in OpenAPI

        :param mode: The mode of this CreateNetworkMqttBrokerRequestSecurity.
        :param security: The security of this CreateNetworkMqttBrokerRequestSecurity.
        """
        self.openapi_types = {
            'mode': str,
            'security': CreateNetworkMqttBrokerRequestSecuritySecurity
        }

        self.attribute_map = {
            'mode': 'mode',
            'security': 'security'
        }

        self._mode = mode
        self._security = security

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkMqttBrokerRequestSecurity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkMqttBroker_request_security of this CreateNetworkMqttBrokerRequestSecurity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this CreateNetworkMqttBrokerRequestSecurity.

        Security protocol of the MQTT broker.

        :return: The mode of this CreateNetworkMqttBrokerRequestSecurity.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this CreateNetworkMqttBrokerRequestSecurity.

        Security protocol of the MQTT broker.

        :param mode: The mode of this CreateNetworkMqttBrokerRequestSecurity.
        :type mode: str
        """

        self._mode = mode

    @property
    def security(self):
        """Gets the security of this CreateNetworkMqttBrokerRequestSecurity.


        :return: The security of this CreateNetworkMqttBrokerRequestSecurity.
        :rtype: CreateNetworkMqttBrokerRequestSecuritySecurity
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this CreateNetworkMqttBrokerRequestSecurity.


        :param security: The security of this CreateNetworkMqttBrokerRequestSecurity.
        :type security: CreateNetworkMqttBrokerRequestSecuritySecurity
        """

        self._security = security
