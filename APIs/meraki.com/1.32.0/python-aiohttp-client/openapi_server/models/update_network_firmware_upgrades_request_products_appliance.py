# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_firmware_upgrades_request_products_appliance_next_upgrade import UpdateNetworkFirmwareUpgradesRequestProductsApplianceNextUpgrade
from openapi_server import util


class UpdateNetworkFirmwareUpgradesRequestProductsAppliance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_upgrade: UpdateNetworkFirmwareUpgradesRequestProductsApplianceNextUpgrade=None, participate_in_next_beta_release: bool=None):
        """UpdateNetworkFirmwareUpgradesRequestProductsAppliance - a model defined in OpenAPI

        :param next_upgrade: The next_upgrade of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        :param participate_in_next_beta_release: The participate_in_next_beta_release of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        """
        self.openapi_types = {
            'next_upgrade': UpdateNetworkFirmwareUpgradesRequestProductsApplianceNextUpgrade,
            'participate_in_next_beta_release': bool
        }

        self.attribute_map = {
            'next_upgrade': 'nextUpgrade',
            'participate_in_next_beta_release': 'participateInNextBetaRelease'
        }

        self._next_upgrade = next_upgrade
        self._participate_in_next_beta_release = participate_in_next_beta_release

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkFirmwareUpgradesRequestProductsAppliance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkFirmwareUpgrades_request_products_appliance of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_upgrade(self):
        """Gets the next_upgrade of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.


        :return: The next_upgrade of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        :rtype: UpdateNetworkFirmwareUpgradesRequestProductsApplianceNextUpgrade
        """
        return self._next_upgrade

    @next_upgrade.setter
    def next_upgrade(self, next_upgrade):
        """Sets the next_upgrade of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.


        :param next_upgrade: The next_upgrade of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        :type next_upgrade: UpdateNetworkFirmwareUpgradesRequestProductsApplianceNextUpgrade
        """

        self._next_upgrade = next_upgrade

    @property
    def participate_in_next_beta_release(self):
        """Gets the participate_in_next_beta_release of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.

        Whether or not the network wants beta firmware

        :return: The participate_in_next_beta_release of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        :rtype: bool
        """
        return self._participate_in_next_beta_release

    @participate_in_next_beta_release.setter
    def participate_in_next_beta_release(self, participate_in_next_beta_release):
        """Sets the participate_in_next_beta_release of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.

        Whether or not the network wants beta firmware

        :param participate_in_next_beta_release: The participate_in_next_beta_release of this UpdateNetworkFirmwareUpgradesRequestProductsAppliance.
        :type participate_in_next_beta_release: bool
        """

        self._participate_in_next_beta_release = participate_in_next_beta_release
