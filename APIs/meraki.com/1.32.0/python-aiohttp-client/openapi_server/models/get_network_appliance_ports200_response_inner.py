# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkAppliancePorts200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_policy: str=None, allowed_vlans: str=None, drop_untagged_traffic: bool=None, enabled: bool=None, number: int=None, type: str=None, vlan: int=None):
        """GetNetworkAppliancePorts200ResponseInner - a model defined in OpenAPI

        :param access_policy: The access_policy of this GetNetworkAppliancePorts200ResponseInner.
        :param allowed_vlans: The allowed_vlans of this GetNetworkAppliancePorts200ResponseInner.
        :param drop_untagged_traffic: The drop_untagged_traffic of this GetNetworkAppliancePorts200ResponseInner.
        :param enabled: The enabled of this GetNetworkAppliancePorts200ResponseInner.
        :param number: The number of this GetNetworkAppliancePorts200ResponseInner.
        :param type: The type of this GetNetworkAppliancePorts200ResponseInner.
        :param vlan: The vlan of this GetNetworkAppliancePorts200ResponseInner.
        """
        self.openapi_types = {
            'access_policy': str,
            'allowed_vlans': str,
            'drop_untagged_traffic': bool,
            'enabled': bool,
            'number': int,
            'type': str,
            'vlan': int
        }

        self.attribute_map = {
            'access_policy': 'accessPolicy',
            'allowed_vlans': 'allowedVlans',
            'drop_untagged_traffic': 'dropUntaggedTraffic',
            'enabled': 'enabled',
            'number': 'number',
            'type': 'type',
            'vlan': 'vlan'
        }

        self._access_policy = access_policy
        self._allowed_vlans = allowed_vlans
        self._drop_untagged_traffic = drop_untagged_traffic
        self._enabled = enabled
        self._number = number
        self._type = type
        self._vlan = vlan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkAppliancePorts200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkAppliancePorts_200_response_inner of this GetNetworkAppliancePorts200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_policy(self):
        """Gets the access_policy of this GetNetworkAppliancePorts200ResponseInner.

        The name of the policy. Only applicable to Access ports.

        :return: The access_policy of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: str
        """
        return self._access_policy

    @access_policy.setter
    def access_policy(self, access_policy):
        """Sets the access_policy of this GetNetworkAppliancePorts200ResponseInner.

        The name of the policy. Only applicable to Access ports.

        :param access_policy: The access_policy of this GetNetworkAppliancePorts200ResponseInner.
        :type access_policy: str
        """

        self._access_policy = access_policy

    @property
    def allowed_vlans(self):
        """Gets the allowed_vlans of this GetNetworkAppliancePorts200ResponseInner.

        Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.

        :return: The allowed_vlans of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: str
        """
        return self._allowed_vlans

    @allowed_vlans.setter
    def allowed_vlans(self, allowed_vlans):
        """Sets the allowed_vlans of this GetNetworkAppliancePorts200ResponseInner.

        Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.

        :param allowed_vlans: The allowed_vlans of this GetNetworkAppliancePorts200ResponseInner.
        :type allowed_vlans: str
        """

        self._allowed_vlans = allowed_vlans

    @property
    def drop_untagged_traffic(self):
        """Gets the drop_untagged_traffic of this GetNetworkAppliancePorts200ResponseInner.

        Whether the trunk port can drop all untagged traffic.

        :return: The drop_untagged_traffic of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: bool
        """
        return self._drop_untagged_traffic

    @drop_untagged_traffic.setter
    def drop_untagged_traffic(self, drop_untagged_traffic):
        """Sets the drop_untagged_traffic of this GetNetworkAppliancePorts200ResponseInner.

        Whether the trunk port can drop all untagged traffic.

        :param drop_untagged_traffic: The drop_untagged_traffic of this GetNetworkAppliancePorts200ResponseInner.
        :type drop_untagged_traffic: bool
        """

        self._drop_untagged_traffic = drop_untagged_traffic

    @property
    def enabled(self):
        """Gets the enabled of this GetNetworkAppliancePorts200ResponseInner.

        The status of the port

        :return: The enabled of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GetNetworkAppliancePorts200ResponseInner.

        The status of the port

        :param enabled: The enabled of this GetNetworkAppliancePorts200ResponseInner.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def number(self):
        """Gets the number of this GetNetworkAppliancePorts200ResponseInner.

        Number of the port

        :return: The number of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this GetNetworkAppliancePorts200ResponseInner.

        Number of the port

        :param number: The number of this GetNetworkAppliancePorts200ResponseInner.
        :type number: int
        """

        self._number = number

    @property
    def type(self):
        """Gets the type of this GetNetworkAppliancePorts200ResponseInner.

        The type of the port: 'access' or 'trunk'.

        :return: The type of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetNetworkAppliancePorts200ResponseInner.

        The type of the port: 'access' or 'trunk'.

        :param type: The type of this GetNetworkAppliancePorts200ResponseInner.
        :type type: str
        """

        self._type = type

    @property
    def vlan(self):
        """Gets the vlan of this GetNetworkAppliancePorts200ResponseInner.

        Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.

        :return: The vlan of this GetNetworkAppliancePorts200ResponseInner.
        :rtype: int
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this GetNetworkAppliancePorts200ResponseInner.

        Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.

        :param vlan: The vlan of this GetNetworkAppliancePorts200ResponseInner.
        :type vlan: int
        """

        self._vlan = vlan
