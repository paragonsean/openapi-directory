# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_trusted_port: bool=None, name: str=None, serial: str=None, supports_inspection: bool=None, url: str=None):
        """GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner - a model defined in OpenAPI

        :param has_trusted_port: The has_trusted_port of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :param name: The name of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :param serial: The serial of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :param supports_inspection: The supports_inspection of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :param url: The url of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        """
        self.openapi_types = {
            'has_trusted_port': bool,
            'name': str,
            'serial': str,
            'supports_inspection': bool,
            'url': str
        }

        self.attribute_map = {
            'has_trusted_port': 'hasTrustedPort',
            'name': 'name',
            'serial': 'serial',
            'supports_inspection': 'supportsInspection',
            'url': 'url'
        }

        self._has_trusted_port = has_trusted_port
        self._name = name
        self._serial = serial
        self._supports_inspection = supports_inspection
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice_200_response_inner of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_trusted_port(self):
        """Gets the has_trusted_port of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Whether this switch has a trusted DAI port. Always false if supportsInspection is false.

        :return: The has_trusted_port of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :rtype: bool
        """
        return self._has_trusted_port

    @has_trusted_port.setter
    def has_trusted_port(self, has_trusted_port):
        """Sets the has_trusted_port of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Whether this switch has a trusted DAI port. Always false if supportsInspection is false.

        :param has_trusted_port: The has_trusted_port of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :type has_trusted_port: bool
        """

        self._has_trusted_port = has_trusted_port

    @property
    def name(self):
        """Gets the name of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Switch name.

        :return: The name of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Switch name.

        :param name: The name of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def serial(self):
        """Gets the serial of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Switch serial.

        :return: The serial of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Switch serial.

        :param serial: The serial of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def supports_inspection(self):
        """Gets the supports_inspection of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Whether this switch supports Dynamic ARP Inspection.

        :return: The supports_inspection of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :rtype: bool
        """
        return self._supports_inspection

    @supports_inspection.setter
    def supports_inspection(self, supports_inspection):
        """Sets the supports_inspection of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Whether this switch supports Dynamic ARP Inspection.

        :param supports_inspection: The supports_inspection of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :type supports_inspection: bool
        """

        self._supports_inspection = supports_inspection

    @property
    def url(self):
        """Gets the url of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Url link to switch.

        :return: The url of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.

        Url link to switch.

        :param url: The url of this GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner.
        :type url: str
        """

        self._url = url
