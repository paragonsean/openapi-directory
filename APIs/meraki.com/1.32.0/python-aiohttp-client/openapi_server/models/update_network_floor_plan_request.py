# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_floor_plan_request_bottom_left_corner import CreateNetworkFloorPlanRequestBottomLeftCorner
from openapi_server.models.create_network_floor_plan_request_bottom_right_corner import CreateNetworkFloorPlanRequestBottomRightCorner
from openapi_server.models.create_network_floor_plan_request_top_left_corner import CreateNetworkFloorPlanRequestTopLeftCorner
from openapi_server.models.create_network_floor_plan_request_top_right_corner import CreateNetworkFloorPlanRequestTopRightCorner
from openapi_server.models.update_network_floor_plan_request_center import UpdateNetworkFloorPlanRequestCenter
from openapi_server import util


class UpdateNetworkFloorPlanRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bottom_left_corner: CreateNetworkFloorPlanRequestBottomLeftCorner=None, bottom_right_corner: CreateNetworkFloorPlanRequestBottomRightCorner=None, center: UpdateNetworkFloorPlanRequestCenter=None, image_contents: str=None, name: str=None, top_left_corner: CreateNetworkFloorPlanRequestTopLeftCorner=None, top_right_corner: CreateNetworkFloorPlanRequestTopRightCorner=None):
        """UpdateNetworkFloorPlanRequest - a model defined in OpenAPI

        :param bottom_left_corner: The bottom_left_corner of this UpdateNetworkFloorPlanRequest.
        :param bottom_right_corner: The bottom_right_corner of this UpdateNetworkFloorPlanRequest.
        :param center: The center of this UpdateNetworkFloorPlanRequest.
        :param image_contents: The image_contents of this UpdateNetworkFloorPlanRequest.
        :param name: The name of this UpdateNetworkFloorPlanRequest.
        :param top_left_corner: The top_left_corner of this UpdateNetworkFloorPlanRequest.
        :param top_right_corner: The top_right_corner of this UpdateNetworkFloorPlanRequest.
        """
        self.openapi_types = {
            'bottom_left_corner': CreateNetworkFloorPlanRequestBottomLeftCorner,
            'bottom_right_corner': CreateNetworkFloorPlanRequestBottomRightCorner,
            'center': UpdateNetworkFloorPlanRequestCenter,
            'image_contents': str,
            'name': str,
            'top_left_corner': CreateNetworkFloorPlanRequestTopLeftCorner,
            'top_right_corner': CreateNetworkFloorPlanRequestTopRightCorner
        }

        self.attribute_map = {
            'bottom_left_corner': 'bottomLeftCorner',
            'bottom_right_corner': 'bottomRightCorner',
            'center': 'center',
            'image_contents': 'imageContents',
            'name': 'name',
            'top_left_corner': 'topLeftCorner',
            'top_right_corner': 'topRightCorner'
        }

        self._bottom_left_corner = bottom_left_corner
        self._bottom_right_corner = bottom_right_corner
        self._center = center
        self._image_contents = image_contents
        self._name = name
        self._top_left_corner = top_left_corner
        self._top_right_corner = top_right_corner

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkFloorPlanRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkFloorPlan_request of this UpdateNetworkFloorPlanRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bottom_left_corner(self):
        """Gets the bottom_left_corner of this UpdateNetworkFloorPlanRequest.


        :return: The bottom_left_corner of this UpdateNetworkFloorPlanRequest.
        :rtype: CreateNetworkFloorPlanRequestBottomLeftCorner
        """
        return self._bottom_left_corner

    @bottom_left_corner.setter
    def bottom_left_corner(self, bottom_left_corner):
        """Sets the bottom_left_corner of this UpdateNetworkFloorPlanRequest.


        :param bottom_left_corner: The bottom_left_corner of this UpdateNetworkFloorPlanRequest.
        :type bottom_left_corner: CreateNetworkFloorPlanRequestBottomLeftCorner
        """

        self._bottom_left_corner = bottom_left_corner

    @property
    def bottom_right_corner(self):
        """Gets the bottom_right_corner of this UpdateNetworkFloorPlanRequest.


        :return: The bottom_right_corner of this UpdateNetworkFloorPlanRequest.
        :rtype: CreateNetworkFloorPlanRequestBottomRightCorner
        """
        return self._bottom_right_corner

    @bottom_right_corner.setter
    def bottom_right_corner(self, bottom_right_corner):
        """Sets the bottom_right_corner of this UpdateNetworkFloorPlanRequest.


        :param bottom_right_corner: The bottom_right_corner of this UpdateNetworkFloorPlanRequest.
        :type bottom_right_corner: CreateNetworkFloorPlanRequestBottomRightCorner
        """

        self._bottom_right_corner = bottom_right_corner

    @property
    def center(self):
        """Gets the center of this UpdateNetworkFloorPlanRequest.


        :return: The center of this UpdateNetworkFloorPlanRequest.
        :rtype: UpdateNetworkFloorPlanRequestCenter
        """
        return self._center

    @center.setter
    def center(self, center):
        """Sets the center of this UpdateNetworkFloorPlanRequest.


        :param center: The center of this UpdateNetworkFloorPlanRequest.
        :type center: UpdateNetworkFloorPlanRequestCenter
        """

        self._center = center

    @property
    def image_contents(self):
        """Gets the image_contents of this UpdateNetworkFloorPlanRequest.

        The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.

        :return: The image_contents of this UpdateNetworkFloorPlanRequest.
        :rtype: str
        """
        return self._image_contents

    @image_contents.setter
    def image_contents(self, image_contents):
        """Sets the image_contents of this UpdateNetworkFloorPlanRequest.

        The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.

        :param image_contents: The image_contents of this UpdateNetworkFloorPlanRequest.
        :type image_contents: str
        """

        self._image_contents = image_contents

    @property
    def name(self):
        """Gets the name of this UpdateNetworkFloorPlanRequest.

        The name of your floor plan.

        :return: The name of this UpdateNetworkFloorPlanRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateNetworkFloorPlanRequest.

        The name of your floor plan.

        :param name: The name of this UpdateNetworkFloorPlanRequest.
        :type name: str
        """

        self._name = name

    @property
    def top_left_corner(self):
        """Gets the top_left_corner of this UpdateNetworkFloorPlanRequest.


        :return: The top_left_corner of this UpdateNetworkFloorPlanRequest.
        :rtype: CreateNetworkFloorPlanRequestTopLeftCorner
        """
        return self._top_left_corner

    @top_left_corner.setter
    def top_left_corner(self, top_left_corner):
        """Sets the top_left_corner of this UpdateNetworkFloorPlanRequest.


        :param top_left_corner: The top_left_corner of this UpdateNetworkFloorPlanRequest.
        :type top_left_corner: CreateNetworkFloorPlanRequestTopLeftCorner
        """

        self._top_left_corner = top_left_corner

    @property
    def top_right_corner(self):
        """Gets the top_right_corner of this UpdateNetworkFloorPlanRequest.


        :return: The top_right_corner of this UpdateNetworkFloorPlanRequest.
        :rtype: CreateNetworkFloorPlanRequestTopRightCorner
        """
        return self._top_right_corner

    @top_right_corner.setter
    def top_right_corner(self, top_right_corner):
        """Sets the top_right_corner of this UpdateNetworkFloorPlanRequest.


        :param top_right_corner: The top_right_corner of this UpdateNetworkFloorPlanRequest.
        :type top_right_corner: CreateNetworkFloorPlanRequestTopRightCorner
        """

        self._top_right_corner = top_right_corner
