# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationSensorReadingsHistory200ResponseInnerTemperature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, celsius: float=None, fahrenheit: float=None):
        """GetOrganizationSensorReadingsHistory200ResponseInnerTemperature - a model defined in OpenAPI

        :param celsius: The celsius of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        :param fahrenheit: The fahrenheit of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        """
        self.openapi_types = {
            'celsius': float,
            'fahrenheit': float
        }

        self.attribute_map = {
            'celsius': 'celsius',
            'fahrenheit': 'fahrenheit'
        }

        self._celsius = celsius
        self._fahrenheit = fahrenheit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSensorReadingsHistory200ResponseInnerTemperature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSensorReadingsHistory_200_response_inner_temperature of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def celsius(self):
        """Gets the celsius of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.

        Temperature reading in degrees Celsius.

        :return: The celsius of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        :rtype: float
        """
        return self._celsius

    @celsius.setter
    def celsius(self, celsius):
        """Sets the celsius of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.

        Temperature reading in degrees Celsius.

        :param celsius: The celsius of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        :type celsius: float
        """

        self._celsius = celsius

    @property
    def fahrenheit(self):
        """Gets the fahrenheit of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.

        Temperature reading in degrees Fahrenheit.

        :return: The fahrenheit of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        :rtype: float
        """
        return self._fahrenheit

    @fahrenheit.setter
    def fahrenheit(self, fahrenheit):
        """Sets the fahrenheit of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.

        Temperature reading in degrees Fahrenheit.

        :param fahrenheit: The fahrenheit of this GetOrganizationSensorReadingsHistory200ResponseInnerTemperature.
        :type fahrenheit: float
        """

        self._fahrenheit = fahrenheit
