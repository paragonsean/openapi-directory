# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkSmDeviceSoftwares200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, bundle_size: int=None, created_at: str=None, device_id: str=None, dynamic_size: int=None, id: str=None, identifier: str=None, installed_at: str=None, ios_redemption_code: bool=None, is_managed: bool=None, itunes_id: str=None, license_key: str=None, name: str=None, path: str=None, redemption_code: int=None, short_version: str=None, status: str=None, to_install: bool=None, to_uninstall: bool=None, uninstalled_at: str=None, updated_at: str=None, vendor: str=None, version: str=None):
        """GetNetworkSmDeviceSoftwares200ResponseInner - a model defined in OpenAPI

        :param app_id: The app_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param bundle_size: The bundle_size of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param created_at: The created_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param device_id: The device_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param dynamic_size: The dynamic_size of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param id: The id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param identifier: The identifier of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param installed_at: The installed_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param ios_redemption_code: The ios_redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param is_managed: The is_managed of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param itunes_id: The itunes_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param license_key: The license_key of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param name: The name of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param path: The path of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param redemption_code: The redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param short_version: The short_version of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param status: The status of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param to_install: The to_install of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param to_uninstall: The to_uninstall of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param uninstalled_at: The uninstalled_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param updated_at: The updated_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param vendor: The vendor of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :param version: The version of this GetNetworkSmDeviceSoftwares200ResponseInner.
        """
        self.openapi_types = {
            'app_id': str,
            'bundle_size': int,
            'created_at': str,
            'device_id': str,
            'dynamic_size': int,
            'id': str,
            'identifier': str,
            'installed_at': str,
            'ios_redemption_code': bool,
            'is_managed': bool,
            'itunes_id': str,
            'license_key': str,
            'name': str,
            'path': str,
            'redemption_code': int,
            'short_version': str,
            'status': str,
            'to_install': bool,
            'to_uninstall': bool,
            'uninstalled_at': str,
            'updated_at': str,
            'vendor': str,
            'version': str
        }

        self.attribute_map = {
            'app_id': 'appId',
            'bundle_size': 'bundleSize',
            'created_at': 'createdAt',
            'device_id': 'deviceId',
            'dynamic_size': 'dynamicSize',
            'id': 'id',
            'identifier': 'identifier',
            'installed_at': 'installedAt',
            'ios_redemption_code': 'iosRedemptionCode',
            'is_managed': 'isManaged',
            'itunes_id': 'itunesId',
            'license_key': 'licenseKey',
            'name': 'name',
            'path': 'path',
            'redemption_code': 'redemptionCode',
            'short_version': 'shortVersion',
            'status': 'status',
            'to_install': 'toInstall',
            'to_uninstall': 'toUninstall',
            'uninstalled_at': 'uninstalledAt',
            'updated_at': 'updatedAt',
            'vendor': 'vendor',
            'version': 'version'
        }

        self._app_id = app_id
        self._bundle_size = bundle_size
        self._created_at = created_at
        self._device_id = device_id
        self._dynamic_size = dynamic_size
        self._id = id
        self._identifier = identifier
        self._installed_at = installed_at
        self._ios_redemption_code = ios_redemption_code
        self._is_managed = is_managed
        self._itunes_id = itunes_id
        self._license_key = license_key
        self._name = name
        self._path = path
        self._redemption_code = redemption_code
        self._short_version = short_version
        self._status = status
        self._to_install = to_install
        self._to_uninstall = to_uninstall
        self._uninstalled_at = uninstalled_at
        self._updated_at = updated_at
        self._vendor = vendor
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSmDeviceSoftwares200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSmDeviceSoftwares_200_response_inner of this GetNetworkSmDeviceSoftwares200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The Meraki managed application Id for this record on a particular device.

        :return: The app_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The Meraki managed application Id for this record on a particular device.

        :param app_id: The app_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def bundle_size(self):
        """Gets the bundle_size of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The size of the software bundle.

        :return: The bundle_size of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: int
        """
        return self._bundle_size

    @bundle_size.setter
    def bundle_size(self, bundle_size):
        """Sets the bundle_size of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The size of the software bundle.

        :param bundle_size: The bundle_size of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type bundle_size: int
        """

        self._bundle_size = bundle_size

    @property
    def created_at(self):
        """Gets the created_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the Meraki record for the software was created.

        :return: The created_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the Meraki record for the software was created.

        :param created_at: The created_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def device_id(self):
        """Gets the device_id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The Meraki managed device Id.

        :return: The device_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The Meraki managed device Id.

        :param device_id: The device_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def dynamic_size(self):
        """Gets the dynamic_size of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The size of the data stored in the application.

        :return: The dynamic_size of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: int
        """
        return self._dynamic_size

    @dynamic_size.setter
    def dynamic_size(self, dynamic_size):
        """Sets the dynamic_size of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The size of the data stored in the application.

        :param dynamic_size: The dynamic_size of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type dynamic_size: int
        """

        self._dynamic_size = dynamic_size

    @property
    def id(self):
        """Gets the id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The Meraki software Id.

        :return: The id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The Meraki software Id.

        :param id: The id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def identifier(self):
        """Gets the identifier of this GetNetworkSmDeviceSoftwares200ResponseInner.

        Software bundle identifier.

        :return: The identifier of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this GetNetworkSmDeviceSoftwares200ResponseInner.

        Software bundle identifier.

        :param identifier: The identifier of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def installed_at(self):
        """Gets the installed_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the Software was installed on the device.

        :return: The installed_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._installed_at

    @installed_at.setter
    def installed_at(self, installed_at):
        """Sets the installed_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the Software was installed on the device.

        :param installed_at: The installed_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type installed_at: str
        """

        self._installed_at = installed_at

    @property
    def ios_redemption_code(self):
        """Gets the ios_redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating whether or not an iOS redemption code was used.

        :return: The ios_redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: bool
        """
        return self._ios_redemption_code

    @ios_redemption_code.setter
    def ios_redemption_code(self, ios_redemption_code):
        """Sets the ios_redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating whether or not an iOS redemption code was used.

        :param ios_redemption_code: The ios_redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type ios_redemption_code: bool
        """

        self._ios_redemption_code = ios_redemption_code

    @property
    def is_managed(self):
        """Gets the is_managed of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating whether or not the software is managed by Meraki.

        :return: The is_managed of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: bool
        """
        return self._is_managed

    @is_managed.setter
    def is_managed(self, is_managed):
        """Sets the is_managed of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating whether or not the software is managed by Meraki.

        :param is_managed: The is_managed of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type is_managed: bool
        """

        self._is_managed = is_managed

    @property
    def itunes_id(self):
        """Gets the itunes_id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The itunes numerical identifier.

        :return: The itunes_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._itunes_id

    @itunes_id.setter
    def itunes_id(self, itunes_id):
        """Sets the itunes_id of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The itunes numerical identifier.

        :param itunes_id: The itunes_id of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type itunes_id: str
        """

        self._itunes_id = itunes_id

    @property
    def license_key(self):
        """Gets the license_key of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The license key associated with this software installation.

        :return: The license_key of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._license_key

    @license_key.setter
    def license_key(self, license_key):
        """Sets the license_key of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The license key associated with this software installation.

        :param license_key: The license_key of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type license_key: str
        """

        self._license_key = license_key

    @property
    def name(self):
        """Gets the name of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The name of the software.

        :return: The name of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The name of the software.

        :param name: The name of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The path on the device where the software record is located.

        :return: The path of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The path on the device where the software record is located.

        :param path: The path of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type path: str
        """

        self._path = path

    @property
    def redemption_code(self):
        """Gets the redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The redemption code used for this software.

        :return: The redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: int
        """
        return self._redemption_code

    @redemption_code.setter
    def redemption_code(self, redemption_code):
        """Sets the redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The redemption code used for this software.

        :param redemption_code: The redemption_code of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type redemption_code: int
        """

        self._redemption_code = redemption_code

    @property
    def short_version(self):
        """Gets the short_version of this GetNetworkSmDeviceSoftwares200ResponseInner.

        Short version notation for the software.

        :return: The short_version of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._short_version

    @short_version.setter
    def short_version(self, short_version):
        """Sets the short_version of this GetNetworkSmDeviceSoftwares200ResponseInner.

        Short version notation for the software.

        :param short_version: The short_version of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type short_version: str
        """

        self._short_version = short_version

    @property
    def status(self):
        """Gets the status of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The management status of the software.

        :return: The status of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The management status of the software.

        :param status: The status of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type status: str
        """

        self._status = status

    @property
    def to_install(self):
        """Gets the to_install of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating this software record should be installed on the associated device.

        :return: The to_install of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: bool
        """
        return self._to_install

    @to_install.setter
    def to_install(self, to_install):
        """Sets the to_install of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating this software record should be installed on the associated device.

        :param to_install: The to_install of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type to_install: bool
        """

        self._to_install = to_install

    @property
    def to_uninstall(self):
        """Gets the to_uninstall of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating this software record should be uninstalled on the associated device.

        :return: The to_uninstall of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: bool
        """
        return self._to_uninstall

    @to_uninstall.setter
    def to_uninstall(self, to_uninstall):
        """Sets the to_uninstall of this GetNetworkSmDeviceSoftwares200ResponseInner.

        A boolean indicating this software record should be uninstalled on the associated device.

        :param to_uninstall: The to_uninstall of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type to_uninstall: bool
        """

        self._to_uninstall = to_uninstall

    @property
    def uninstalled_at(self):
        """Gets the uninstalled_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the record was uninstalled from the device.

        :return: The uninstalled_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._uninstalled_at

    @uninstalled_at.setter
    def uninstalled_at(self, uninstalled_at):
        """Sets the uninstalled_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the record was uninstalled from the device.

        :param uninstalled_at: The uninstalled_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type uninstalled_at: str
        """

        self._uninstalled_at = uninstalled_at

    @property
    def updated_at(self):
        """Gets the updated_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the record was last updated by Meraki.

        :return: The updated_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this GetNetworkSmDeviceSoftwares200ResponseInner.

        When the record was last updated by Meraki.

        :param updated_at: The updated_at of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def vendor(self):
        """Gets the vendor of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The vendor of the software.

        :return: The vendor of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this GetNetworkSmDeviceSoftwares200ResponseInner.

        The vendor of the software.

        :param vendor: The vendor of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type vendor: str
        """

        self._vendor = vendor

    @property
    def version(self):
        """Gets the version of this GetNetworkSmDeviceSoftwares200ResponseInner.

        Full version notation for the software.

        :return: The version of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GetNetworkSmDeviceSoftwares200ResponseInner.

        Full version notation for the software.

        :param version: The version of this GetNetworkSmDeviceSoftwares200ResponseInner.
        :type version: str
        """

        self._version = version
