# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, ranges: List[str]=None):
        """GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys - a model defined in OpenAPI

        :param enabled: The enabled of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        :param ranges: The ranges of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        """
        self.openapi_types = {
            'enabled': bool,
            'ranges': List[str]
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'ranges': 'ranges'
        }

        self._enabled = enabled
        self._ranges = ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationLoginSecurity_200_response_apiAuthentication_ipRestrictionsForKeys of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.

        Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.

        :return: The enabled of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.

        Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.

        :param enabled: The enabled of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def ranges(self):
        """Gets the ranges of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.

        List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.

        :return: The ranges of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        :rtype: List[str]
        """
        return self._ranges

    @ranges.setter
    def ranges(self, ranges):
        """Sets the ranges of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.

        List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.

        :param ranges: The ranges of this GetOrganizationLoginSecurity200ResponseApiAuthenticationIpRestrictionsForKeys.
        :type ranges: List[str]
        """

        self._ranges = ranges
