# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkSmDeviceNetworkAdapters200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dhcp_server: str=None, dns_server: str=None, gateway: str=None, id: str=None, ip: str=None, mac: str=None, name: str=None, subnet: str=None):
        """GetNetworkSmDeviceNetworkAdapters200ResponseInner - a model defined in OpenAPI

        :param dhcp_server: The dhcp_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param dns_server: The dns_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param gateway: The gateway of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param id: The id of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param ip: The ip of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param mac: The mac of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param name: The name of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :param subnet: The subnet of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        """
        self.openapi_types = {
            'dhcp_server': str,
            'dns_server': str,
            'gateway': str,
            'id': str,
            'ip': str,
            'mac': str,
            'name': str,
            'subnet': str
        }

        self.attribute_map = {
            'dhcp_server': 'dhcpServer',
            'dns_server': 'dnsServer',
            'gateway': 'gateway',
            'id': 'id',
            'ip': 'ip',
            'mac': 'mac',
            'name': 'name',
            'subnet': 'subnet'
        }

        self._dhcp_server = dhcp_server
        self._dns_server = dns_server
        self._gateway = gateway
        self._id = id
        self._ip = ip
        self._mac = mac
        self._name = name
        self._subnet = subnet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSmDeviceNetworkAdapters200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSmDeviceNetworkAdapters_200_response_inner of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dhcp_server(self):
        """Gets the dhcp_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the DCHP Server.

        :return: The dhcp_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._dhcp_server

    @dhcp_server.setter
    def dhcp_server(self, dhcp_server):
        """Sets the dhcp_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the DCHP Server.

        :param dhcp_server: The dhcp_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type dhcp_server: str
        """

        self._dhcp_server = dhcp_server

    @property
    def dns_server(self):
        """Gets the dns_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the DNS Server.

        :return: The dns_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._dns_server

    @dns_server.setter
    def dns_server(self, dns_server):
        """Sets the dns_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the DNS Server.

        :param dns_server: The dns_server of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type dns_server: str
        """

        self._dns_server = dns_server

    @property
    def gateway(self):
        """Gets the gateway of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the Gateway.

        :return: The gateway of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the Gateway.

        :param gateway: The gateway of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type gateway: str
        """

        self._gateway = gateway

    @property
    def id(self):
        """Gets the id of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The Meraki Id of the network adapter record.

        :return: The id of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The Meraki Id of the network adapter record.

        :param id: The id of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def ip(self):
        """Gets the ip of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the network adapter.

        :return: The ip of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The IP address of the network adapter.

        :param ip: The ip of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type ip: str
        """

        self._ip = ip

    @property
    def mac(self):
        """Gets the mac of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The MAC associated with the network adapter.

        :return: The mac of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The MAC associated with the network adapter.

        :param mac: The mac of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def name(self):
        """Gets the name of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The name of the newtwork adapter.

        :return: The name of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The name of the newtwork adapter.

        :param name: The name of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def subnet(self):
        """Gets the subnet of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The subnet for the network adapter.

        :return: The subnet of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.

        The subnet for the network adapter.

        :param subnet: The subnet of this GetNetworkSmDeviceNetworkAdapters200ResponseInner.
        :type subnet: str
        """

        self._subnet = subnet
