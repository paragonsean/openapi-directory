# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationAdaptivePolicyOverview200ResponseLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acls_in_a_policy: int=None, custom_groups: int=None, policy_objects: int=None, rules_in_an_acl: int=None):
        """GetOrganizationAdaptivePolicyOverview200ResponseLimits - a model defined in OpenAPI

        :param acls_in_a_policy: The acls_in_a_policy of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :param custom_groups: The custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :param policy_objects: The policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :param rules_in_an_acl: The rules_in_an_acl of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        """
        self.openapi_types = {
            'acls_in_a_policy': int,
            'custom_groups': int,
            'policy_objects': int,
            'rules_in_an_acl': int
        }

        self.attribute_map = {
            'acls_in_a_policy': 'aclsInAPolicy',
            'custom_groups': 'customGroups',
            'policy_objects': 'policyObjects',
            'rules_in_an_acl': 'rulesInAnAcl'
        }

        self._acls_in_a_policy = acls_in_a_policy
        self._custom_groups = custom_groups
        self._policy_objects = policy_objects
        self._rules_in_an_acl = rules_in_an_acl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationAdaptivePolicyOverview200ResponseLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationAdaptivePolicyOverview_200_response_limits of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acls_in_a_policy(self):
        """Gets the acls_in_a_policy of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.

        :return: The acls_in_a_policy of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :rtype: int
        """
        return self._acls_in_a_policy

    @acls_in_a_policy.setter
    def acls_in_a_policy(self, acls_in_a_policy):
        """Sets the acls_in_a_policy of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.

        :param acls_in_a_policy: The acls_in_a_policy of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :type acls_in_a_policy: int
        """

        self._acls_in_a_policy = acls_in_a_policy

    @property
    def custom_groups(self):
        """Gets the custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of user-created adaptive policy groups allowed in the organization.

        :return: The custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :rtype: int
        """
        return self._custom_groups

    @custom_groups.setter
    def custom_groups(self, custom_groups):
        """Sets the custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of user-created adaptive policy groups allowed in the organization.

        :param custom_groups: The custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :type custom_groups: int
        """

        self._custom_groups = custom_groups

    @property
    def policy_objects(self):
        """Gets the policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of policy objects (with the adaptive policy type) allowed in the organization.

        :return: The policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :rtype: int
        """
        return self._policy_objects

    @policy_objects.setter
    def policy_objects(self, policy_objects):
        """Sets the policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of policy objects (with the adaptive policy type) allowed in the organization.

        :param policy_objects: The policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :type policy_objects: int
        """

        self._policy_objects = policy_objects

    @property
    def rules_in_an_acl(self):
        """Gets the rules_in_an_acl of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of rules allowed in an adaptive policy ACL in the organization.

        :return: The rules_in_an_acl of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :rtype: int
        """
        return self._rules_in_an_acl

    @rules_in_an_acl.setter
    def rules_in_an_acl(self, rules_in_an_acl):
        """Sets the rules_in_an_acl of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.

        Maximum number of rules allowed in an adaptive policy ACL in the organization.

        :param rules_in_an_acl: The rules_in_an_acl of this GetOrganizationAdaptivePolicyOverview200ResponseLimits.
        :type rules_in_an_acl: int
        """

        self._rules_in_an_acl = rules_in_an_acl
