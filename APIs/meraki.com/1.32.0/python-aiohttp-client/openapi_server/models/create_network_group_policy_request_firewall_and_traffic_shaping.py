# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_group_policy_request_firewall_and_traffic_shaping_l3_firewall_rules_inner import CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner
from openapi_server.models.create_network_group_policy_request_firewall_and_traffic_shaping_l7_firewall_rules_inner import CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner
from openapi_server.models.create_network_group_policy_request_firewall_and_traffic_shaping_traffic_shaping_rules_inner import CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner
from openapi_server import util


class CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, l3_firewall_rules: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner]=None, l7_firewall_rules: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner]=None, settings: str=None, traffic_shaping_rules: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner]=None):
        """CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping - a model defined in OpenAPI

        :param l3_firewall_rules: The l3_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :param l7_firewall_rules: The l7_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :param settings: The settings of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :param traffic_shaping_rules: The traffic_shaping_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        """
        self.openapi_types = {
            'l3_firewall_rules': List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner],
            'l7_firewall_rules': List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner],
            'settings': str,
            'traffic_shaping_rules': List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner]
        }

        self.attribute_map = {
            'l3_firewall_rules': 'l3FirewallRules',
            'l7_firewall_rules': 'l7FirewallRules',
            'settings': 'settings',
            'traffic_shaping_rules': 'trafficShapingRules'
        }

        self._l3_firewall_rules = l3_firewall_rules
        self._l7_firewall_rules = l7_firewall_rules
        self._settings = settings
        self._traffic_shaping_rules = traffic_shaping_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkGroupPolicy_request_firewallAndTrafficShaping of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def l3_firewall_rules(self):
        """Gets the l3_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

        An ordered array of the L3 firewall rules

        :return: The l3_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :rtype: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner]
        """
        return self._l3_firewall_rules

    @l3_firewall_rules.setter
    def l3_firewall_rules(self, l3_firewall_rules):
        """Sets the l3_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

        An ordered array of the L3 firewall rules

        :param l3_firewall_rules: The l3_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :type l3_firewall_rules: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner]
        """

        self._l3_firewall_rules = l3_firewall_rules

    @property
    def l7_firewall_rules(self):
        """Gets the l7_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

        An ordered array of L7 firewall rules

        :return: The l7_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :rtype: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner]
        """
        return self._l7_firewall_rules

    @l7_firewall_rules.setter
    def l7_firewall_rules(self, l7_firewall_rules):
        """Sets the l7_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

        An ordered array of L7 firewall rules

        :param l7_firewall_rules: The l7_firewall_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :type l7_firewall_rules: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner]
        """

        self._l7_firewall_rules = l7_firewall_rules

    @property
    def settings(self):
        """Gets the settings of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

        How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.

        :return: The settings of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :rtype: str
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

        How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.

        :param settings: The settings of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :type settings: str
        """
        allowed_values = ["custom", "ignore", "network default"]  # noqa: E501
        if settings not in allowed_values:
            raise ValueError(
                "Invalid value for `settings` ({0}), must be one of {1}"
                .format(settings, allowed_values)
            )

        self._settings = settings

    @property
    def traffic_shaping_rules(self):
        """Gets the traffic_shaping_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

            An array of traffic shaping rules. Rules are applied in the order that     they are specified in. An empty list (or null) means no rules. Note that     you are allowed a maximum of 8 rules. 

        :return: The traffic_shaping_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :rtype: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner]
        """
        return self._traffic_shaping_rules

    @traffic_shaping_rules.setter
    def traffic_shaping_rules(self, traffic_shaping_rules):
        """Sets the traffic_shaping_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.

            An array of traffic shaping rules. Rules are applied in the order that     they are specified in. An empty list (or null) means no rules. Note that     you are allowed a maximum of 8 rules. 

        :param traffic_shaping_rules: The traffic_shaping_rules of this CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.
        :type traffic_shaping_rules: List[CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner]
        """

        self._traffic_shaping_rules = traffic_shaping_rules
