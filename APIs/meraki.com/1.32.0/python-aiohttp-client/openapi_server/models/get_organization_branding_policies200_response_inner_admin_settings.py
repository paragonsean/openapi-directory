# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationBrandingPolicies200ResponseInnerAdminSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applies_to: str=None, values: List[str]=None):
        """GetOrganizationBrandingPolicies200ResponseInnerAdminSettings - a model defined in OpenAPI

        :param applies_to: The applies_to of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        :param values: The values of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        """
        self.openapi_types = {
            'applies_to': str,
            'values': List[str]
        }

        self.attribute_map = {
            'applies_to': 'appliesTo',
            'values': 'values'
        }

        self._applies_to = applies_to
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationBrandingPolicies200ResponseInnerAdminSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationBrandingPolicies_200_response_inner_adminSettings of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applies_to(self):
        """Gets the applies_to of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.

        Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.

        :return: The applies_to of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        :rtype: str
        """
        return self._applies_to

    @applies_to.setter
    def applies_to(self, applies_to):
        """Sets the applies_to of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.

        Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.

        :param applies_to: The applies_to of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        :type applies_to: str
        """
        allowed_values = ["All SAML admins", "All admins", "All admins of networks tagged...", "All admins of networks...", "All enterprise admins", "All network admins", "All organization admins", "Specific admins..."]  # noqa: E501
        if applies_to not in allowed_values:
            raise ValueError(
                "Invalid value for `applies_to` ({0}), must be one of {1}"
                .format(applies_to, allowed_values)
            )

        self._applies_to = applies_to

    @property
    def values(self):
        """Gets the values of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.

              If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of       entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of       networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',       specify an array of tag names. 

        :return: The values of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.

              If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of       entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of       networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',       specify an array of tag names. 

        :param values: The values of this GetOrganizationBrandingPolicies200ResponseInnerAdminSettings.
        :type values: List[str]
        """

        self._values = values
