# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_type: str=None, enabled: bool=None):
        """GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration - a model defined in OpenAPI

        :param authorization_type: The authorization_type of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        :param enabled: The enabled of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        """
        self.openapi_types = {
            'authorization_type': str,
            'enabled': bool
        }

        self.attribute_map = {
            'authorization_type': 'authorizationType',
            'enabled': 'enabled'
        }

        self._authorization_type = authorization_type
        self._enabled = enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkWirelessSsidSplashSettings_200_response_selfRegistration of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_type(self):
        """Gets the authorization_type of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.

        How created user accounts should be authorized.

        :return: The authorization_type of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        :rtype: str
        """
        return self._authorization_type

    @authorization_type.setter
    def authorization_type(self, authorization_type):
        """Sets the authorization_type of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.

        How created user accounts should be authorized.

        :param authorization_type: The authorization_type of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        :type authorization_type: str
        """
        allowed_values = ["admin", "auto", "self_email"]  # noqa: E501
        if authorization_type not in allowed_values:
            raise ValueError(
                "Invalid value for `authorization_type` ({0}), must be one of {1}"
                .format(authorization_type, allowed_values)
            )

        self._authorization_type = authorization_type

    @property
    def enabled(self):
        """Gets the enabled of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.

        Whether or not to allow users to create their own account on the network.

        :return: The enabled of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.

        Whether or not to allow users to create their own account on the network.

        :param enabled: The enabled of this GetNetworkWirelessSsidSplashSettings200ResponseSelfRegistration.
        :type enabled: bool
        """

        self._enabled = enabled
