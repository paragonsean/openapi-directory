# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_organization_saml_role200_response_networks_inner import UpdateOrganizationSamlRole200ResponseNetworksInner
from openapi_server.models.update_organization_saml_role200_response_tags_inner import UpdateOrganizationSamlRole200ResponseTagsInner
from openapi_server import util


class UpdateOrganizationSamlRole200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, networks: List[UpdateOrganizationSamlRole200ResponseNetworksInner]=None, org_access: str=None, role: str=None, tags: List[UpdateOrganizationSamlRole200ResponseTagsInner]=None):
        """UpdateOrganizationSamlRole200Response - a model defined in OpenAPI

        :param id: The id of this UpdateOrganizationSamlRole200Response.
        :param networks: The networks of this UpdateOrganizationSamlRole200Response.
        :param org_access: The org_access of this UpdateOrganizationSamlRole200Response.
        :param role: The role of this UpdateOrganizationSamlRole200Response.
        :param tags: The tags of this UpdateOrganizationSamlRole200Response.
        """
        self.openapi_types = {
            'id': str,
            'networks': List[UpdateOrganizationSamlRole200ResponseNetworksInner],
            'org_access': str,
            'role': str,
            'tags': List[UpdateOrganizationSamlRole200ResponseTagsInner]
        }

        self.attribute_map = {
            'id': 'id',
            'networks': 'networks',
            'org_access': 'orgAccess',
            'role': 'role',
            'tags': 'tags'
        }

        self._id = id
        self._networks = networks
        self._org_access = org_access
        self._role = role
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOrganizationSamlRole200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateOrganizationSamlRole_200_response of this UpdateOrganizationSamlRole200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateOrganizationSamlRole200Response.

        ID associated with the SAML role

        :return: The id of this UpdateOrganizationSamlRole200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateOrganizationSamlRole200Response.

        ID associated with the SAML role

        :param id: The id of this UpdateOrganizationSamlRole200Response.
        :type id: str
        """

        self._id = id

    @property
    def networks(self):
        """Gets the networks of this UpdateOrganizationSamlRole200Response.

        The list of networks that the SAML administrator has privileges on

        :return: The networks of this UpdateOrganizationSamlRole200Response.
        :rtype: List[UpdateOrganizationSamlRole200ResponseNetworksInner]
        """
        return self._networks

    @networks.setter
    def networks(self, networks):
        """Sets the networks of this UpdateOrganizationSamlRole200Response.

        The list of networks that the SAML administrator has privileges on

        :param networks: The networks of this UpdateOrganizationSamlRole200Response.
        :type networks: List[UpdateOrganizationSamlRole200ResponseNetworksInner]
        """

        self._networks = networks

    @property
    def org_access(self):
        """Gets the org_access of this UpdateOrganizationSamlRole200Response.

        The privilege of the SAML administrator on the organization

        :return: The org_access of this UpdateOrganizationSamlRole200Response.
        :rtype: str
        """
        return self._org_access

    @org_access.setter
    def org_access(self, org_access):
        """Sets the org_access of this UpdateOrganizationSamlRole200Response.

        The privilege of the SAML administrator on the organization

        :param org_access: The org_access of this UpdateOrganizationSamlRole200Response.
        :type org_access: str
        """

        self._org_access = org_access

    @property
    def role(self):
        """Gets the role of this UpdateOrganizationSamlRole200Response.

        The role of the SAML administrator

        :return: The role of this UpdateOrganizationSamlRole200Response.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this UpdateOrganizationSamlRole200Response.

        The role of the SAML administrator

        :param role: The role of this UpdateOrganizationSamlRole200Response.
        :type role: str
        """

        self._role = role

    @property
    def tags(self):
        """Gets the tags of this UpdateOrganizationSamlRole200Response.

        The list of tags that the SAML administrator has privleges on

        :return: The tags of this UpdateOrganizationSamlRole200Response.
        :rtype: List[UpdateOrganizationSamlRole200ResponseTagsInner]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateOrganizationSamlRole200Response.

        The list of tags that the SAML administrator has privleges on

        :param tags: The tags of this UpdateOrganizationSamlRole200Response.
        :type tags: List[UpdateOrganizationSamlRole200ResponseTagsInner]
        """

        self._tags = tags
