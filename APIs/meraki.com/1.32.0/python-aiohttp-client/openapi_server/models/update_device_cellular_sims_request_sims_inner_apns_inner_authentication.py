# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, password: str=None, type: str='none', username: str=None):
        """UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication - a model defined in OpenAPI

        :param password: The password of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :param type: The type of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :param username: The username of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        """
        self.openapi_types = {
            'password': str,
            'type': str,
            'username': str
        }

        self.attribute_map = {
            'password': 'password',
            'type': 'type',
            'username': 'username'
        }

        self._password = password
        self._type = type
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDeviceCellularSims_request_sims_inner_apns_inner_authentication of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def password(self):
        """Gets the password of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.

        APN password, if type is set (if APN password is not supplied, the password is left unchanged).

        :return: The password of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.

        APN password, if type is set (if APN password is not supplied, the password is left unchanged).

        :param password: The password of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :type password: str
        """

        self._password = password

    @property
    def type(self):
        """Gets the type of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.

        APN auth type.

        :return: The type of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.

        APN auth type.

        :param type: The type of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :type type: str
        """
        allowed_values = ["chap", "none", "pap"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def username(self):
        """Gets the username of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.

        APN username, if type is set.

        :return: The username of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.

        APN username, if type is set.

        :param username: The username of this UpdateDeviceCellularSimsRequestSimsInnerApnsInnerAuthentication.
        :type username: str
        """

        self._username = username
