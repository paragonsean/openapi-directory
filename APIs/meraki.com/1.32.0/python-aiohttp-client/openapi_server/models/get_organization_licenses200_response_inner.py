# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_licenses200_response_inner_permanently_queued_licenses_inner import GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner
from openapi_server import util


class GetOrganizationLicenses200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activation_date: str=None, claim_date: str=None, device_serial: str=None, duration_in_days: int=None, expiration_date: str=None, head_license_id: str=None, id: str=None, license_key: str=None, license_type: str=None, network_id: str=None, order_number: str=None, permanently_queued_licenses: List[GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner]=None, seat_count: int=None, state: str=None, total_duration_in_days: int=None):
        """GetOrganizationLicenses200ResponseInner - a model defined in OpenAPI

        :param activation_date: The activation_date of this GetOrganizationLicenses200ResponseInner.
        :param claim_date: The claim_date of this GetOrganizationLicenses200ResponseInner.
        :param device_serial: The device_serial of this GetOrganizationLicenses200ResponseInner.
        :param duration_in_days: The duration_in_days of this GetOrganizationLicenses200ResponseInner.
        :param expiration_date: The expiration_date of this GetOrganizationLicenses200ResponseInner.
        :param head_license_id: The head_license_id of this GetOrganizationLicenses200ResponseInner.
        :param id: The id of this GetOrganizationLicenses200ResponseInner.
        :param license_key: The license_key of this GetOrganizationLicenses200ResponseInner.
        :param license_type: The license_type of this GetOrganizationLicenses200ResponseInner.
        :param network_id: The network_id of this GetOrganizationLicenses200ResponseInner.
        :param order_number: The order_number of this GetOrganizationLicenses200ResponseInner.
        :param permanently_queued_licenses: The permanently_queued_licenses of this GetOrganizationLicenses200ResponseInner.
        :param seat_count: The seat_count of this GetOrganizationLicenses200ResponseInner.
        :param state: The state of this GetOrganizationLicenses200ResponseInner.
        :param total_duration_in_days: The total_duration_in_days of this GetOrganizationLicenses200ResponseInner.
        """
        self.openapi_types = {
            'activation_date': str,
            'claim_date': str,
            'device_serial': str,
            'duration_in_days': int,
            'expiration_date': str,
            'head_license_id': str,
            'id': str,
            'license_key': str,
            'license_type': str,
            'network_id': str,
            'order_number': str,
            'permanently_queued_licenses': List[GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner],
            'seat_count': int,
            'state': str,
            'total_duration_in_days': int
        }

        self.attribute_map = {
            'activation_date': 'activationDate',
            'claim_date': 'claimDate',
            'device_serial': 'deviceSerial',
            'duration_in_days': 'durationInDays',
            'expiration_date': 'expirationDate',
            'head_license_id': 'headLicenseId',
            'id': 'id',
            'license_key': 'licenseKey',
            'license_type': 'licenseType',
            'network_id': 'networkId',
            'order_number': 'orderNumber',
            'permanently_queued_licenses': 'permanentlyQueuedLicenses',
            'seat_count': 'seatCount',
            'state': 'state',
            'total_duration_in_days': 'totalDurationInDays'
        }

        self._activation_date = activation_date
        self._claim_date = claim_date
        self._device_serial = device_serial
        self._duration_in_days = duration_in_days
        self._expiration_date = expiration_date
        self._head_license_id = head_license_id
        self._id = id
        self._license_key = license_key
        self._license_type = license_type
        self._network_id = network_id
        self._order_number = order_number
        self._permanently_queued_licenses = permanently_queued_licenses
        self._seat_count = seat_count
        self._state = state
        self._total_duration_in_days = total_duration_in_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationLicenses200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationLicenses_200_response_inner of this GetOrganizationLicenses200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activation_date(self):
        """Gets the activation_date of this GetOrganizationLicenses200ResponseInner.

        The date the license started burning

        :return: The activation_date of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._activation_date

    @activation_date.setter
    def activation_date(self, activation_date):
        """Sets the activation_date of this GetOrganizationLicenses200ResponseInner.

        The date the license started burning

        :param activation_date: The activation_date of this GetOrganizationLicenses200ResponseInner.
        :type activation_date: str
        """

        self._activation_date = activation_date

    @property
    def claim_date(self):
        """Gets the claim_date of this GetOrganizationLicenses200ResponseInner.

        The date the license was claimed into the organization

        :return: The claim_date of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._claim_date

    @claim_date.setter
    def claim_date(self, claim_date):
        """Sets the claim_date of this GetOrganizationLicenses200ResponseInner.

        The date the license was claimed into the organization

        :param claim_date: The claim_date of this GetOrganizationLicenses200ResponseInner.
        :type claim_date: str
        """

        self._claim_date = claim_date

    @property
    def device_serial(self):
        """Gets the device_serial of this GetOrganizationLicenses200ResponseInner.

        Serial number of the device the license is assigned to

        :return: The device_serial of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._device_serial

    @device_serial.setter
    def device_serial(self, device_serial):
        """Sets the device_serial of this GetOrganizationLicenses200ResponseInner.

        Serial number of the device the license is assigned to

        :param device_serial: The device_serial of this GetOrganizationLicenses200ResponseInner.
        :type device_serial: str
        """

        self._device_serial = device_serial

    @property
    def duration_in_days(self):
        """Gets the duration_in_days of this GetOrganizationLicenses200ResponseInner.

        The duration of the individual license

        :return: The duration_in_days of this GetOrganizationLicenses200ResponseInner.
        :rtype: int
        """
        return self._duration_in_days

    @duration_in_days.setter
    def duration_in_days(self, duration_in_days):
        """Sets the duration_in_days of this GetOrganizationLicenses200ResponseInner.

        The duration of the individual license

        :param duration_in_days: The duration_in_days of this GetOrganizationLicenses200ResponseInner.
        :type duration_in_days: int
        """

        self._duration_in_days = duration_in_days

    @property
    def expiration_date(self):
        """Gets the expiration_date of this GetOrganizationLicenses200ResponseInner.

        The date the license will expire

        :return: The expiration_date of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this GetOrganizationLicenses200ResponseInner.

        The date the license will expire

        :param expiration_date: The expiration_date of this GetOrganizationLicenses200ResponseInner.
        :type expiration_date: str
        """

        self._expiration_date = expiration_date

    @property
    def head_license_id(self):
        """Gets the head_license_id of this GetOrganizationLicenses200ResponseInner.

        The id of the head license this license is queued behind. If there is no head license, it returns nil.

        :return: The head_license_id of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._head_license_id

    @head_license_id.setter
    def head_license_id(self, head_license_id):
        """Sets the head_license_id of this GetOrganizationLicenses200ResponseInner.

        The id of the head license this license is queued behind. If there is no head license, it returns nil.

        :param head_license_id: The head_license_id of this GetOrganizationLicenses200ResponseInner.
        :type head_license_id: str
        """

        self._head_license_id = head_license_id

    @property
    def id(self):
        """Gets the id of this GetOrganizationLicenses200ResponseInner.

        License ID

        :return: The id of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetOrganizationLicenses200ResponseInner.

        License ID

        :param id: The id of this GetOrganizationLicenses200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def license_key(self):
        """Gets the license_key of this GetOrganizationLicenses200ResponseInner.

        License key

        :return: The license_key of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._license_key

    @license_key.setter
    def license_key(self, license_key):
        """Sets the license_key of this GetOrganizationLicenses200ResponseInner.

        License key

        :param license_key: The license_key of this GetOrganizationLicenses200ResponseInner.
        :type license_key: str
        """

        self._license_key = license_key

    @property
    def license_type(self):
        """Gets the license_type of this GetOrganizationLicenses200ResponseInner.

        License type

        :return: The license_type of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._license_type

    @license_type.setter
    def license_type(self, license_type):
        """Sets the license_type of this GetOrganizationLicenses200ResponseInner.

        License type

        :param license_type: The license_type of this GetOrganizationLicenses200ResponseInner.
        :type license_type: str
        """

        self._license_type = license_type

    @property
    def network_id(self):
        """Gets the network_id of this GetOrganizationLicenses200ResponseInner.

        ID of the network the license is assigned to

        :return: The network_id of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this GetOrganizationLicenses200ResponseInner.

        ID of the network the license is assigned to

        :param network_id: The network_id of this GetOrganizationLicenses200ResponseInner.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def order_number(self):
        """Gets the order_number of this GetOrganizationLicenses200ResponseInner.

        Order number

        :return: The order_number of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this GetOrganizationLicenses200ResponseInner.

        Order number

        :param order_number: The order_number of this GetOrganizationLicenses200ResponseInner.
        :type order_number: str
        """

        self._order_number = order_number

    @property
    def permanently_queued_licenses(self):
        """Gets the permanently_queued_licenses of this GetOrganizationLicenses200ResponseInner.

        DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.

        :return: The permanently_queued_licenses of this GetOrganizationLicenses200ResponseInner.
        :rtype: List[GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner]
        """
        return self._permanently_queued_licenses

    @permanently_queued_licenses.setter
    def permanently_queued_licenses(self, permanently_queued_licenses):
        """Sets the permanently_queued_licenses of this GetOrganizationLicenses200ResponseInner.

        DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.

        :param permanently_queued_licenses: The permanently_queued_licenses of this GetOrganizationLicenses200ResponseInner.
        :type permanently_queued_licenses: List[GetOrganizationLicenses200ResponseInnerPermanentlyQueuedLicensesInner]
        """

        self._permanently_queued_licenses = permanently_queued_licenses

    @property
    def seat_count(self):
        """Gets the seat_count of this GetOrganizationLicenses200ResponseInner.

        The number of seats of the license. Only applicable to SM licenses.

        :return: The seat_count of this GetOrganizationLicenses200ResponseInner.
        :rtype: int
        """
        return self._seat_count

    @seat_count.setter
    def seat_count(self, seat_count):
        """Sets the seat_count of this GetOrganizationLicenses200ResponseInner.

        The number of seats of the license. Only applicable to SM licenses.

        :param seat_count: The seat_count of this GetOrganizationLicenses200ResponseInner.
        :type seat_count: int
        """

        self._seat_count = seat_count

    @property
    def state(self):
        """Gets the state of this GetOrganizationLicenses200ResponseInner.

        The state of the license. All queued licenses have a status of `recentlyQueued`.

        :return: The state of this GetOrganizationLicenses200ResponseInner.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GetOrganizationLicenses200ResponseInner.

        The state of the license. All queued licenses have a status of `recentlyQueued`.

        :param state: The state of this GetOrganizationLicenses200ResponseInner.
        :type state: str
        """
        allowed_values = ["active", "expired", "expiring", "recentlyQueued", "unused", "unusedActive"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def total_duration_in_days(self):
        """Gets the total_duration_in_days of this GetOrganizationLicenses200ResponseInner.

        The duration of the license plus all permanently queued licenses associated with it

        :return: The total_duration_in_days of this GetOrganizationLicenses200ResponseInner.
        :rtype: int
        """
        return self._total_duration_in_days

    @total_duration_in_days.setter
    def total_duration_in_days(self, total_duration_in_days):
        """Sets the total_duration_in_days of this GetOrganizationLicenses200ResponseInner.

        The duration of the license plus all permanently queued licenses associated with it

        :param total_duration_in_days: The total_duration_in_days of this GetOrganizationLicenses200ResponseInner.
        :type total_duration_in_days: int
        """

        self._total_duration_in_days = total_duration_in_days
