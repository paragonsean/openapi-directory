# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationInventoryDevices200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, claimed_at: datetime=None, license_expiration_date: datetime=None, mac: str=None, model: str=None, name: str=None, network_id: str=None, order_number: str=None, product_type: str=None, serial: str=None, tags: List[str]=None):
        """GetOrganizationInventoryDevices200ResponseInner - a model defined in OpenAPI

        :param claimed_at: The claimed_at of this GetOrganizationInventoryDevices200ResponseInner.
        :param license_expiration_date: The license_expiration_date of this GetOrganizationInventoryDevices200ResponseInner.
        :param mac: The mac of this GetOrganizationInventoryDevices200ResponseInner.
        :param model: The model of this GetOrganizationInventoryDevices200ResponseInner.
        :param name: The name of this GetOrganizationInventoryDevices200ResponseInner.
        :param network_id: The network_id of this GetOrganizationInventoryDevices200ResponseInner.
        :param order_number: The order_number of this GetOrganizationInventoryDevices200ResponseInner.
        :param product_type: The product_type of this GetOrganizationInventoryDevices200ResponseInner.
        :param serial: The serial of this GetOrganizationInventoryDevices200ResponseInner.
        :param tags: The tags of this GetOrganizationInventoryDevices200ResponseInner.
        """
        self.openapi_types = {
            'claimed_at': datetime,
            'license_expiration_date': datetime,
            'mac': str,
            'model': str,
            'name': str,
            'network_id': str,
            'order_number': str,
            'product_type': str,
            'serial': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'claimed_at': 'claimedAt',
            'license_expiration_date': 'licenseExpirationDate',
            'mac': 'mac',
            'model': 'model',
            'name': 'name',
            'network_id': 'networkId',
            'order_number': 'orderNumber',
            'product_type': 'productType',
            'serial': 'serial',
            'tags': 'tags'
        }

        self._claimed_at = claimed_at
        self._license_expiration_date = license_expiration_date
        self._mac = mac
        self._model = model
        self._name = name
        self._network_id = network_id
        self._order_number = order_number
        self._product_type = product_type
        self._serial = serial
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationInventoryDevices200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationInventoryDevices_200_response_inner of this GetOrganizationInventoryDevices200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claimed_at(self):
        """Gets the claimed_at of this GetOrganizationInventoryDevices200ResponseInner.

        Claimed time of the device

        :return: The claimed_at of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: datetime
        """
        return self._claimed_at

    @claimed_at.setter
    def claimed_at(self, claimed_at):
        """Sets the claimed_at of this GetOrganizationInventoryDevices200ResponseInner.

        Claimed time of the device

        :param claimed_at: The claimed_at of this GetOrganizationInventoryDevices200ResponseInner.
        :type claimed_at: datetime
        """

        self._claimed_at = claimed_at

    @property
    def license_expiration_date(self):
        """Gets the license_expiration_date of this GetOrganizationInventoryDevices200ResponseInner.

        License expiration date of the device

        :return: The license_expiration_date of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: datetime
        """
        return self._license_expiration_date

    @license_expiration_date.setter
    def license_expiration_date(self, license_expiration_date):
        """Sets the license_expiration_date of this GetOrganizationInventoryDevices200ResponseInner.

        License expiration date of the device

        :param license_expiration_date: The license_expiration_date of this GetOrganizationInventoryDevices200ResponseInner.
        :type license_expiration_date: datetime
        """

        self._license_expiration_date = license_expiration_date

    @property
    def mac(self):
        """Gets the mac of this GetOrganizationInventoryDevices200ResponseInner.

        MAC address of the device

        :return: The mac of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetOrganizationInventoryDevices200ResponseInner.

        MAC address of the device

        :param mac: The mac of this GetOrganizationInventoryDevices200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def model(self):
        """Gets the model of this GetOrganizationInventoryDevices200ResponseInner.

        Model type of the device

        :return: The model of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GetOrganizationInventoryDevices200ResponseInner.

        Model type of the device

        :param model: The model of this GetOrganizationInventoryDevices200ResponseInner.
        :type model: str
        """

        self._model = model

    @property
    def name(self):
        """Gets the name of this GetOrganizationInventoryDevices200ResponseInner.

        Name of the device

        :return: The name of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOrganizationInventoryDevices200ResponseInner.

        Name of the device

        :param name: The name of this GetOrganizationInventoryDevices200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def network_id(self):
        """Gets the network_id of this GetOrganizationInventoryDevices200ResponseInner.

        Network Id of the device

        :return: The network_id of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this GetOrganizationInventoryDevices200ResponseInner.

        Network Id of the device

        :param network_id: The network_id of this GetOrganizationInventoryDevices200ResponseInner.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def order_number(self):
        """Gets the order_number of this GetOrganizationInventoryDevices200ResponseInner.

        Order number of the device

        :return: The order_number of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this GetOrganizationInventoryDevices200ResponseInner.

        Order number of the device

        :param order_number: The order_number of this GetOrganizationInventoryDevices200ResponseInner.
        :type order_number: str
        """

        self._order_number = order_number

    @property
    def product_type(self):
        """Gets the product_type of this GetOrganizationInventoryDevices200ResponseInner.

        Product type of the device

        :return: The product_type of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this GetOrganizationInventoryDevices200ResponseInner.

        Product type of the device

        :param product_type: The product_type of this GetOrganizationInventoryDevices200ResponseInner.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationInventoryDevices200ResponseInner.

        Serial number of the device

        :return: The serial of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationInventoryDevices200ResponseInner.

        Serial number of the device

        :param serial: The serial of this GetOrganizationInventoryDevices200ResponseInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def tags(self):
        """Gets the tags of this GetOrganizationInventoryDevices200ResponseInner.

        Device tags

        :return: The tags of this GetOrganizationInventoryDevices200ResponseInner.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetOrganizationInventoryDevices200ResponseInner.

        Device tags

        :param tags: The tags of this GetOrganizationInventoryDevices200ResponseInner.
        :type tags: List[str]
        """

        self._tags = tags
