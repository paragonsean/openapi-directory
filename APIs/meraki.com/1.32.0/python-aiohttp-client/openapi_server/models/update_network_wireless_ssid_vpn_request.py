# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_wireless_ssid_vpn_request_concentrator import UpdateNetworkWirelessSsidVpnRequestConcentrator
from openapi_server.models.update_network_wireless_ssid_vpn_request_failover import UpdateNetworkWirelessSsidVpnRequestFailover
from openapi_server.models.update_network_wireless_ssid_vpn_request_split_tunnel import UpdateNetworkWirelessSsidVpnRequestSplitTunnel
from openapi_server import util


class UpdateNetworkWirelessSsidVpnRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concentrator: UpdateNetworkWirelessSsidVpnRequestConcentrator=None, failover: UpdateNetworkWirelessSsidVpnRequestFailover=None, split_tunnel: UpdateNetworkWirelessSsidVpnRequestSplitTunnel=None):
        """UpdateNetworkWirelessSsidVpnRequest - a model defined in OpenAPI

        :param concentrator: The concentrator of this UpdateNetworkWirelessSsidVpnRequest.
        :param failover: The failover of this UpdateNetworkWirelessSsidVpnRequest.
        :param split_tunnel: The split_tunnel of this UpdateNetworkWirelessSsidVpnRequest.
        """
        self.openapi_types = {
            'concentrator': UpdateNetworkWirelessSsidVpnRequestConcentrator,
            'failover': UpdateNetworkWirelessSsidVpnRequestFailover,
            'split_tunnel': UpdateNetworkWirelessSsidVpnRequestSplitTunnel
        }

        self.attribute_map = {
            'concentrator': 'concentrator',
            'failover': 'failover',
            'split_tunnel': 'splitTunnel'
        }

        self._concentrator = concentrator
        self._failover = failover
        self._split_tunnel = split_tunnel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessSsidVpnRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessSsidVpn_request of this UpdateNetworkWirelessSsidVpnRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concentrator(self):
        """Gets the concentrator of this UpdateNetworkWirelessSsidVpnRequest.


        :return: The concentrator of this UpdateNetworkWirelessSsidVpnRequest.
        :rtype: UpdateNetworkWirelessSsidVpnRequestConcentrator
        """
        return self._concentrator

    @concentrator.setter
    def concentrator(self, concentrator):
        """Sets the concentrator of this UpdateNetworkWirelessSsidVpnRequest.


        :param concentrator: The concentrator of this UpdateNetworkWirelessSsidVpnRequest.
        :type concentrator: UpdateNetworkWirelessSsidVpnRequestConcentrator
        """

        self._concentrator = concentrator

    @property
    def failover(self):
        """Gets the failover of this UpdateNetworkWirelessSsidVpnRequest.


        :return: The failover of this UpdateNetworkWirelessSsidVpnRequest.
        :rtype: UpdateNetworkWirelessSsidVpnRequestFailover
        """
        return self._failover

    @failover.setter
    def failover(self, failover):
        """Sets the failover of this UpdateNetworkWirelessSsidVpnRequest.


        :param failover: The failover of this UpdateNetworkWirelessSsidVpnRequest.
        :type failover: UpdateNetworkWirelessSsidVpnRequestFailover
        """

        self._failover = failover

    @property
    def split_tunnel(self):
        """Gets the split_tunnel of this UpdateNetworkWirelessSsidVpnRequest.


        :return: The split_tunnel of this UpdateNetworkWirelessSsidVpnRequest.
        :rtype: UpdateNetworkWirelessSsidVpnRequestSplitTunnel
        """
        return self._split_tunnel

    @split_tunnel.setter
    def split_tunnel(self, split_tunnel):
        """Sets the split_tunnel of this UpdateNetworkWirelessSsidVpnRequest.


        :param split_tunnel: The split_tunnel of this UpdateNetworkWirelessSsidVpnRequest.
        :type split_tunnel: UpdateNetworkWirelessSsidVpnRequestSplitTunnel
        """

        self._split_tunnel = split_tunnel
