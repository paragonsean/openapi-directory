# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_switch_dhcp_v4_servers_seen200_response_inner_last_packet_ip_dscp import GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp
from openapi_server import util


class GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dscp: GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp=None, header_length: int=None, id: str=None, length: int=None, protocol: int=None, ttl: int=None, version: int=None):
        """GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp - a model defined in OpenAPI

        :param dscp: The dscp of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :param header_length: The header_length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :param id: The id of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :param length: The length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :param protocol: The protocol of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :param ttl: The ttl of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :param version: The version of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        """
        self.openapi_types = {
            'dscp': GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp,
            'header_length': int,
            'id': str,
            'length': int,
            'protocol': int,
            'ttl': int,
            'version': int
        }

        self.attribute_map = {
            'dscp': 'dscp',
            'header_length': 'headerLength',
            'id': 'id',
            'length': 'length',
            'protocol': 'protocol',
            'ttl': 'ttl',
            'version': 'version'
        }

        self._dscp = dscp
        self._header_length = header_length
        self._id = id
        self._length = length
        self._protocol = protocol
        self._ttl = ttl
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkSwitchDhcpV4ServersSeen_200_response_inner_lastPacket_ip of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dscp(self):
        """Gets the dscp of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.


        :return: The dscp of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp
        """
        return self._dscp

    @dscp.setter
    def dscp(self, dscp):
        """Sets the dscp of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.


        :param dscp: The dscp of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type dscp: GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp
        """

        self._dscp = dscp

    @property
    def header_length(self):
        """Gets the header_length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP header length of the packet.

        :return: The header_length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: int
        """
        return self._header_length

    @header_length.setter
    def header_length(self, header_length):
        """Sets the header_length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP header length of the packet.

        :param header_length: The header_length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type header_length: int
        """

        self._header_length = header_length

    @property
    def id(self):
        """Gets the id of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP ID of the packet.

        :return: The id of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP ID of the packet.

        :param id: The id of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type id: str
        """

        self._id = id

    @property
    def length(self):
        """Gets the length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP length of the packet.

        :return: The length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP length of the packet.

        :param length: The length of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type length: int
        """

        self._length = length

    @property
    def protocol(self):
        """Gets the protocol of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP protocol number of the packet.

        :return: The protocol of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: int
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP protocol number of the packet.

        :param protocol: The protocol of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type protocol: int
        """

        self._protocol = protocol

    @property
    def ttl(self):
        """Gets the ttl of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        Time to live of the packet.

        :return: The ttl of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: int
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        Time to live of the packet.

        :param ttl: The ttl of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type ttl: int
        """

        self._ttl = ttl

    @property
    def version(self):
        """Gets the version of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP version of the packet.

        :return: The version of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.

        IP version of the packet.

        :param version: The version of this GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.
        :type version: int
        """
        allowed_values = [4, 6]  # noqa: E501
        if version not in allowed_values:
            raise ValueError(
                "Invalid value for `version` ({0}), must be one of {1}"
                .format(version, allowed_values)
            )

        self._version = version
