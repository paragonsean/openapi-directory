# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkWirelessRfProfileRequestFiveGhzSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_width: str=None, max_power: int=None, min_bitrate: int=None, min_power: int=None, rxsop: int=None, valid_auto_channels: List[int]=None):
        """UpdateNetworkWirelessRfProfileRequestFiveGhzSettings - a model defined in OpenAPI

        :param channel_width: The channel_width of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :param max_power: The max_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :param min_bitrate: The min_bitrate of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :param min_power: The min_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :param rxsop: The rxsop of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :param valid_auto_channels: The valid_auto_channels of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        """
        self.openapi_types = {
            'channel_width': str,
            'max_power': int,
            'min_bitrate': int,
            'min_power': int,
            'rxsop': int,
            'valid_auto_channels': List[int]
        }

        self.attribute_map = {
            'channel_width': 'channelWidth',
            'max_power': 'maxPower',
            'min_bitrate': 'minBitrate',
            'min_power': 'minPower',
            'rxsop': 'rxsop',
            'valid_auto_channels': 'validAutoChannels'
        }

        self._channel_width = channel_width
        self._max_power = max_power
        self._min_bitrate = min_bitrate
        self._min_power = min_power
        self._rxsop = rxsop
        self._valid_auto_channels = valid_auto_channels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessRfProfileRequestFiveGhzSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessRfProfile_request_fiveGhzSettings of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_width(self):
        """Gets the channel_width of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'.

        :return: The channel_width of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :rtype: str
        """
        return self._channel_width

    @channel_width.setter
    def channel_width(self, channel_width):
        """Sets the channel_width of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'.

        :param channel_width: The channel_width of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :type channel_width: str
        """

        self._channel_width = channel_width

    @property
    def max_power(self):
        """Gets the max_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30.

        :return: The max_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :rtype: int
        """
        return self._max_power

    @max_power.setter
    def max_power(self, max_power):
        """Sets the max_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30.

        :param max_power: The max_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :type max_power: int
        """

        self._max_power = max_power

    @property
    def min_bitrate(self):
        """Gets the min_bitrate of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'.

        :return: The min_bitrate of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :rtype: int
        """
        return self._min_bitrate

    @min_bitrate.setter
    def min_bitrate(self, min_bitrate):
        """Sets the min_bitrate of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'.

        :param min_bitrate: The min_bitrate of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :type min_bitrate: int
        """

        self._min_bitrate = min_bitrate

    @property
    def min_power(self):
        """Gets the min_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30.

        :return: The min_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :rtype: int
        """
        return self._min_power

    @min_power.setter
    def min_power(self, min_power):
        """Sets the min_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30.

        :param min_power: The min_power of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :type min_power: int
        """

        self._min_power = min_power

    @property
    def rxsop(self):
        """Gets the rxsop of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.

        :return: The rxsop of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :rtype: int
        """
        return self._rxsop

    @rxsop.setter
    def rxsop(self, rxsop):
        """Sets the rxsop of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.

        :param rxsop: The rxsop of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :type rxsop: int
        """

        self._rxsop = rxsop

    @property
    def valid_auto_channels(self):
        """Gets the valid_auto_channels of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.

        :return: The valid_auto_channels of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :rtype: List[int]
        """
        return self._valid_auto_channels

    @valid_auto_channels.setter
    def valid_auto_channels(self, valid_auto_channels):
        """Sets the valid_auto_channels of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.

        Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.

        :param valid_auto_channels: The valid_auto_channels of this UpdateNetworkWirelessRfProfileRequestFiveGhzSettings.
        :type valid_auto_channels: List[int]
        """

        self._valid_auto_channels = valid_auto_channels
