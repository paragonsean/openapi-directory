# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationAdaptivePolicyOverview200ResponseCounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_policies: int=None, custom_acls: int=None, custom_groups: int=None, deny_policies: int=None, groups: int=None, policies: int=None, policy_objects: int=None):
        """GetOrganizationAdaptivePolicyOverview200ResponseCounts - a model defined in OpenAPI

        :param allow_policies: The allow_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :param custom_acls: The custom_acls of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :param custom_groups: The custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :param deny_policies: The deny_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :param groups: The groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :param policies: The policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :param policy_objects: The policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        """
        self.openapi_types = {
            'allow_policies': int,
            'custom_acls': int,
            'custom_groups': int,
            'deny_policies': int,
            'groups': int,
            'policies': int,
            'policy_objects': int
        }

        self.attribute_map = {
            'allow_policies': 'allowPolicies',
            'custom_acls': 'customAcls',
            'custom_groups': 'customGroups',
            'deny_policies': 'denyPolicies',
            'groups': 'groups',
            'policies': 'policies',
            'policy_objects': 'policyObjects'
        }

        self._allow_policies = allow_policies
        self._custom_acls = custom_acls
        self._custom_groups = custom_groups
        self._deny_policies = deny_policies
        self._groups = groups
        self._policies = policies
        self._policy_objects = policy_objects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationAdaptivePolicyOverview200ResponseCounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationAdaptivePolicyOverview_200_response_counts of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_policies(self):
        """Gets the allow_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policies currently in the organization that allow all traffic.

        :return: The allow_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._allow_policies

    @allow_policies.setter
    def allow_policies(self, allow_policies):
        """Sets the allow_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policies currently in the organization that allow all traffic.

        :param allow_policies: The allow_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type allow_policies: int
        """

        self._allow_policies = allow_policies

    @property
    def custom_acls(self):
        """Gets the custom_acls of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of user-created adaptive policy ACLs currently in the organization.

        :return: The custom_acls of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._custom_acls

    @custom_acls.setter
    def custom_acls(self, custom_acls):
        """Sets the custom_acls of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of user-created adaptive policy ACLs currently in the organization.

        :param custom_acls: The custom_acls of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type custom_acls: int
        """

        self._custom_acls = custom_acls

    @property
    def custom_groups(self):
        """Gets the custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of user-created adaptive policy groups currently in the organization.

        :return: The custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._custom_groups

    @custom_groups.setter
    def custom_groups(self, custom_groups):
        """Sets the custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of user-created adaptive policy groups currently in the organization.

        :param custom_groups: The custom_groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type custom_groups: int
        """

        self._custom_groups = custom_groups

    @property
    def deny_policies(self):
        """Gets the deny_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policies currently in the organization that deny all traffic.

        :return: The deny_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._deny_policies

    @deny_policies.setter
    def deny_policies(self, deny_policies):
        """Sets the deny_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policies currently in the organization that deny all traffic.

        :param deny_policies: The deny_policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type deny_policies: int
        """

        self._deny_policies = deny_policies

    @property
    def groups(self):
        """Gets the groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policy groups currently in the organization.

        :return: The groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policy groups currently in the organization.

        :param groups: The groups of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type groups: int
        """

        self._groups = groups

    @property
    def policies(self):
        """Gets the policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policies currently in the organization.

        :return: The policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of adaptive policies currently in the organization.

        :param policies: The policies of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type policies: int
        """

        self._policies = policies

    @property
    def policy_objects(self):
        """Gets the policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of policy objects (with the adaptive policy type) currently in the organization.

        :return: The policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :rtype: int
        """
        return self._policy_objects

    @policy_objects.setter
    def policy_objects(self, policy_objects):
        """Sets the policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.

        Number of policy objects (with the adaptive policy type) currently in the organization.

        :param policy_objects: The policy_objects of this GetOrganizationAdaptivePolicyOverview200ResponseCounts.
        :type policy_objects: int
        """

        self._policy_objects = policy_objects
