# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_device_sensor_relationships_request_livestream import UpdateDeviceSensorRelationshipsRequestLivestream
from openapi_server import util


class UpdateDeviceSensorRelationshipsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, livestream: UpdateDeviceSensorRelationshipsRequestLivestream=None):
        """UpdateDeviceSensorRelationshipsRequest - a model defined in OpenAPI

        :param livestream: The livestream of this UpdateDeviceSensorRelationshipsRequest.
        """
        self.openapi_types = {
            'livestream': UpdateDeviceSensorRelationshipsRequestLivestream
        }

        self.attribute_map = {
            'livestream': 'livestream'
        }

        self._livestream = livestream

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDeviceSensorRelationshipsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDeviceSensorRelationships_request of this UpdateDeviceSensorRelationshipsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def livestream(self):
        """Gets the livestream of this UpdateDeviceSensorRelationshipsRequest.


        :return: The livestream of this UpdateDeviceSensorRelationshipsRequest.
        :rtype: UpdateDeviceSensorRelationshipsRequestLivestream
        """
        return self._livestream

    @livestream.setter
    def livestream(self, livestream):
        """Sets the livestream of this UpdateDeviceSensorRelationshipsRequest.


        :param livestream: The livestream of this UpdateDeviceSensorRelationshipsRequest.
        :type livestream: UpdateDeviceSensorRelationshipsRequestLivestream
        """

        self._livestream = livestream
