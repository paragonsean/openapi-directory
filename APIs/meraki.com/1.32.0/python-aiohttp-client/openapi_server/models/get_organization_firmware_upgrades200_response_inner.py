# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_firmware_upgrades200_response_inner_from_version import GetOrganizationFirmwareUpgrades200ResponseInnerFromVersion
from openapi_server.models.get_organization_firmware_upgrades200_response_inner_network import GetOrganizationFirmwareUpgrades200ResponseInnerNetwork
from openapi_server.models.get_organization_firmware_upgrades200_response_inner_to_version import GetOrganizationFirmwareUpgrades200ResponseInnerToVersion
from openapi_server import util


class GetOrganizationFirmwareUpgrades200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed_at: str=None, from_version: GetOrganizationFirmwareUpgrades200ResponseInnerFromVersion=None, network: GetOrganizationFirmwareUpgrades200ResponseInnerNetwork=None, product_type: str=None, status: str=None, time: datetime=None, to_version: GetOrganizationFirmwareUpgrades200ResponseInnerToVersion=None, upgrade_batch_id: str=None, upgrade_id: str=None):
        """GetOrganizationFirmwareUpgrades200ResponseInner - a model defined in OpenAPI

        :param completed_at: The completed_at of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param from_version: The from_version of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param network: The network of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param product_type: The product_type of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param status: The status of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param time: The time of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param to_version: The to_version of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param upgrade_batch_id: The upgrade_batch_id of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :param upgrade_id: The upgrade_id of this GetOrganizationFirmwareUpgrades200ResponseInner.
        """
        self.openapi_types = {
            'completed_at': str,
            'from_version': GetOrganizationFirmwareUpgrades200ResponseInnerFromVersion,
            'network': GetOrganizationFirmwareUpgrades200ResponseInnerNetwork,
            'product_type': str,
            'status': str,
            'time': datetime,
            'to_version': GetOrganizationFirmwareUpgrades200ResponseInnerToVersion,
            'upgrade_batch_id': str,
            'upgrade_id': str
        }

        self.attribute_map = {
            'completed_at': 'completedAt',
            'from_version': 'fromVersion',
            'network': 'network',
            'product_type': 'productType',
            'status': 'status',
            'time': 'time',
            'to_version': 'toVersion',
            'upgrade_batch_id': 'upgradeBatchId',
            'upgrade_id': 'upgradeId'
        }

        self._completed_at = completed_at
        self._from_version = from_version
        self._network = network
        self._product_type = product_type
        self._status = status
        self._time = time
        self._to_version = to_version
        self._upgrade_batch_id = upgrade_batch_id
        self._upgrade_id = upgrade_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationFirmwareUpgrades200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationFirmwareUpgrades_200_response_inner of this GetOrganizationFirmwareUpgrades200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed_at(self):
        """Gets the completed_at of this GetOrganizationFirmwareUpgrades200ResponseInner.

        Timestamp when upgrade completed. Null if status pending.

        :return: The completed_at of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: str
        """
        return self._completed_at

    @completed_at.setter
    def completed_at(self, completed_at):
        """Sets the completed_at of this GetOrganizationFirmwareUpgrades200ResponseInner.

        Timestamp when upgrade completed. Null if status pending.

        :param completed_at: The completed_at of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type completed_at: str
        """

        self._completed_at = completed_at

    @property
    def from_version(self):
        """Gets the from_version of this GetOrganizationFirmwareUpgrades200ResponseInner.


        :return: The from_version of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: GetOrganizationFirmwareUpgrades200ResponseInnerFromVersion
        """
        return self._from_version

    @from_version.setter
    def from_version(self, from_version):
        """Sets the from_version of this GetOrganizationFirmwareUpgrades200ResponseInner.


        :param from_version: The from_version of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type from_version: GetOrganizationFirmwareUpgrades200ResponseInnerFromVersion
        """

        self._from_version = from_version

    @property
    def network(self):
        """Gets the network of this GetOrganizationFirmwareUpgrades200ResponseInner.


        :return: The network of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: GetOrganizationFirmwareUpgrades200ResponseInnerNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetOrganizationFirmwareUpgrades200ResponseInner.


        :param network: The network of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type network: GetOrganizationFirmwareUpgrades200ResponseInnerNetwork
        """

        self._network = network

    @property
    def product_type(self):
        """Gets the product_type of this GetOrganizationFirmwareUpgrades200ResponseInner.

        product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]

        :return: The product_type of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this GetOrganizationFirmwareUpgrades200ResponseInner.

        product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]

        :param product_type: The product_type of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def status(self):
        """Gets the status of this GetOrganizationFirmwareUpgrades200ResponseInner.

        Status of upgrade event: [Cancelled, Completed]

        :return: The status of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetOrganizationFirmwareUpgrades200ResponseInner.

        Status of upgrade event: [Cancelled, Completed]

        :param status: The status of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type status: str
        """

        self._status = status

    @property
    def time(self):
        """Gets the time of this GetOrganizationFirmwareUpgrades200ResponseInner.

        Scheduled start time

        :return: The time of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this GetOrganizationFirmwareUpgrades200ResponseInner.

        Scheduled start time

        :param time: The time of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type time: datetime
        """

        self._time = time

    @property
    def to_version(self):
        """Gets the to_version of this GetOrganizationFirmwareUpgrades200ResponseInner.


        :return: The to_version of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: GetOrganizationFirmwareUpgrades200ResponseInnerToVersion
        """
        return self._to_version

    @to_version.setter
    def to_version(self, to_version):
        """Sets the to_version of this GetOrganizationFirmwareUpgrades200ResponseInner.


        :param to_version: The to_version of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type to_version: GetOrganizationFirmwareUpgrades200ResponseInnerToVersion
        """

        self._to_version = to_version

    @property
    def upgrade_batch_id(self):
        """Gets the upgrade_batch_id of this GetOrganizationFirmwareUpgrades200ResponseInner.

        The upgrade batch

        :return: The upgrade_batch_id of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: str
        """
        return self._upgrade_batch_id

    @upgrade_batch_id.setter
    def upgrade_batch_id(self, upgrade_batch_id):
        """Sets the upgrade_batch_id of this GetOrganizationFirmwareUpgrades200ResponseInner.

        The upgrade batch

        :param upgrade_batch_id: The upgrade_batch_id of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type upgrade_batch_id: str
        """

        self._upgrade_batch_id = upgrade_batch_id

    @property
    def upgrade_id(self):
        """Gets the upgrade_id of this GetOrganizationFirmwareUpgrades200ResponseInner.

        The upgrade

        :return: The upgrade_id of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :rtype: str
        """
        return self._upgrade_id

    @upgrade_id.setter
    def upgrade_id(self, upgrade_id):
        """Sets the upgrade_id of this GetOrganizationFirmwareUpgrades200ResponseInner.

        The upgrade

        :param upgrade_id: The upgrade_id of this GetOrganizationFirmwareUpgrades200ResponseInner.
        :type upgrade_id: str
        """

        self._upgrade_id = upgrade_id
