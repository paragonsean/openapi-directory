# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_mqtt_broker_request_security import CreateNetworkMqttBrokerRequestSecurity
from openapi_server import util


class UpdateNetworkMqttBrokerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication: object=None, host: str=None, name: str=None, port: int=None, security: CreateNetworkMqttBrokerRequestSecurity=None):
        """UpdateNetworkMqttBrokerRequest - a model defined in OpenAPI

        :param authentication: The authentication of this UpdateNetworkMqttBrokerRequest.
        :param host: The host of this UpdateNetworkMqttBrokerRequest.
        :param name: The name of this UpdateNetworkMqttBrokerRequest.
        :param port: The port of this UpdateNetworkMqttBrokerRequest.
        :param security: The security of this UpdateNetworkMqttBrokerRequest.
        """
        self.openapi_types = {
            'authentication': object,
            'host': str,
            'name': str,
            'port': int,
            'security': CreateNetworkMqttBrokerRequestSecurity
        }

        self.attribute_map = {
            'authentication': 'authentication',
            'host': 'host',
            'name': 'name',
            'port': 'port',
            'security': 'security'
        }

        self._authentication = authentication
        self._host = host
        self._name = name
        self._port = port
        self._security = security

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkMqttBrokerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkMqttBroker_request of this UpdateNetworkMqttBrokerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication(self):
        """Gets the authentication of this UpdateNetworkMqttBrokerRequest.

        Authentication settings of the MQTT broker

        :return: The authentication of this UpdateNetworkMqttBrokerRequest.
        :rtype: object
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this UpdateNetworkMqttBrokerRequest.

        Authentication settings of the MQTT broker

        :param authentication: The authentication of this UpdateNetworkMqttBrokerRequest.
        :type authentication: object
        """

        self._authentication = authentication

    @property
    def host(self):
        """Gets the host of this UpdateNetworkMqttBrokerRequest.

        Host name/IP address where the MQTT broker runs.

        :return: The host of this UpdateNetworkMqttBrokerRequest.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this UpdateNetworkMqttBrokerRequest.

        Host name/IP address where the MQTT broker runs.

        :param host: The host of this UpdateNetworkMqttBrokerRequest.
        :type host: str
        """

        self._host = host

    @property
    def name(self):
        """Gets the name of this UpdateNetworkMqttBrokerRequest.

        Name of the MQTT broker.

        :return: The name of this UpdateNetworkMqttBrokerRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateNetworkMqttBrokerRequest.

        Name of the MQTT broker.

        :param name: The name of this UpdateNetworkMqttBrokerRequest.
        :type name: str
        """

        self._name = name

    @property
    def port(self):
        """Gets the port of this UpdateNetworkMqttBrokerRequest.

        Host port though which the MQTT broker can be reached.

        :return: The port of this UpdateNetworkMqttBrokerRequest.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this UpdateNetworkMqttBrokerRequest.

        Host port though which the MQTT broker can be reached.

        :param port: The port of this UpdateNetworkMqttBrokerRequest.
        :type port: int
        """

        self._port = port

    @property
    def security(self):
        """Gets the security of this UpdateNetworkMqttBrokerRequest.


        :return: The security of this UpdateNetworkMqttBrokerRequest.
        :rtype: CreateNetworkMqttBrokerRequestSecurity
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this UpdateNetworkMqttBrokerRequest.


        :param security: The security of this UpdateNetworkMqttBrokerRequest.
        :type security: CreateNetworkMqttBrokerRequestSecurity
        """

        self._security = security
