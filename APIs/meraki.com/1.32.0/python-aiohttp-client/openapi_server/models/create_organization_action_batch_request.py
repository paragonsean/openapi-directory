# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_organization_action_batch_request_actions_inner import CreateOrganizationActionBatchRequestActionsInner
from openapi_server import util


class CreateOrganizationActionBatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[CreateOrganizationActionBatchRequestActionsInner]=None, confirmed: bool=None, synchronous: bool=None):
        """CreateOrganizationActionBatchRequest - a model defined in OpenAPI

        :param actions: The actions of this CreateOrganizationActionBatchRequest.
        :param confirmed: The confirmed of this CreateOrganizationActionBatchRequest.
        :param synchronous: The synchronous of this CreateOrganizationActionBatchRequest.
        """
        self.openapi_types = {
            'actions': List[CreateOrganizationActionBatchRequestActionsInner],
            'confirmed': bool,
            'synchronous': bool
        }

        self.attribute_map = {
            'actions': 'actions',
            'confirmed': 'confirmed',
            'synchronous': 'synchronous'
        }

        self._actions = actions
        self._confirmed = confirmed
        self._synchronous = synchronous

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrganizationActionBatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createOrganizationActionBatch_request of this CreateOrganizationActionBatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this CreateOrganizationActionBatchRequest.

        A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)

        :return: The actions of this CreateOrganizationActionBatchRequest.
        :rtype: List[CreateOrganizationActionBatchRequestActionsInner]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this CreateOrganizationActionBatchRequest.

        A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)

        :param actions: The actions of this CreateOrganizationActionBatchRequest.
        :type actions: List[CreateOrganizationActionBatchRequestActionsInner]
        """
        if actions is None:
            raise ValueError("Invalid value for `actions`, must not be `None`")

        self._actions = actions

    @property
    def confirmed(self):
        """Gets the confirmed of this CreateOrganizationActionBatchRequest.

        Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.

        :return: The confirmed of this CreateOrganizationActionBatchRequest.
        :rtype: bool
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed):
        """Sets the confirmed of this CreateOrganizationActionBatchRequest.

        Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.

        :param confirmed: The confirmed of this CreateOrganizationActionBatchRequest.
        :type confirmed: bool
        """

        self._confirmed = confirmed

    @property
    def synchronous(self):
        """Gets the synchronous of this CreateOrganizationActionBatchRequest.

        Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.

        :return: The synchronous of this CreateOrganizationActionBatchRequest.
        :rtype: bool
        """
        return self._synchronous

    @synchronous.setter
    def synchronous(self, synchronous):
        """Sets the synchronous of this CreateOrganizationActionBatchRequest.

        Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.

        :param synchronous: The synchronous of this CreateOrganizationActionBatchRequest.
        :type synchronous: bool
        """

        self._synchronous = synchronous
