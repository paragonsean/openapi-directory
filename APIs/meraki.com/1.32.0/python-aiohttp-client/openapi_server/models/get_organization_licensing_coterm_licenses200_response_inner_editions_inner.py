# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edition: str=None, product_type: str=None):
        """GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner - a model defined in OpenAPI

        :param edition: The edition of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        :param product_type: The product_type of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        """
        self.openapi_types = {
            'edition': str,
            'product_type': str
        }

        self.attribute_map = {
            'edition': 'edition',
            'product_type': 'productType'
        }

        self._edition = edition
        self._product_type = product_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationLicensingCotermLicenses_200_response_inner_editions_inner of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edition(self):
        """Gets the edition of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.

        The name of the license edition

        :return: The edition of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        :rtype: str
        """
        return self._edition

    @edition.setter
    def edition(self, edition):
        """Sets the edition of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.

        The name of the license edition

        :param edition: The edition of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        :type edition: str
        """

        self._edition = edition

    @property
    def product_type(self):
        """Gets the product_type of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.

        The product type of the license edition

        :return: The product_type of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.

        The product type of the license edition

        :param product_type: The product_type of this GetOrganizationLicensingCotermLicenses200ResponseInnerEditionsInner.
        :type product_type: str
        """

        self._product_type = product_type
