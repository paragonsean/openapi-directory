# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_clients_overview200_response_counts import GetOrganizationClientsOverview200ResponseCounts
from openapi_server.models.get_organization_clients_overview200_response_usage import GetOrganizationClientsOverview200ResponseUsage
from openapi_server import util


class GetOrganizationClientsOverview200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, counts: GetOrganizationClientsOverview200ResponseCounts=None, usage: GetOrganizationClientsOverview200ResponseUsage=None):
        """GetOrganizationClientsOverview200Response - a model defined in OpenAPI

        :param counts: The counts of this GetOrganizationClientsOverview200Response.
        :param usage: The usage of this GetOrganizationClientsOverview200Response.
        """
        self.openapi_types = {
            'counts': GetOrganizationClientsOverview200ResponseCounts,
            'usage': GetOrganizationClientsOverview200ResponseUsage
        }

        self.attribute_map = {
            'counts': 'counts',
            'usage': 'usage'
        }

        self._counts = counts
        self._usage = usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationClientsOverview200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationClientsOverview_200_response of this GetOrganizationClientsOverview200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counts(self):
        """Gets the counts of this GetOrganizationClientsOverview200Response.


        :return: The counts of this GetOrganizationClientsOverview200Response.
        :rtype: GetOrganizationClientsOverview200ResponseCounts
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this GetOrganizationClientsOverview200Response.


        :param counts: The counts of this GetOrganizationClientsOverview200Response.
        :type counts: GetOrganizationClientsOverview200ResponseCounts
        """

        self._counts = counts

    @property
    def usage(self):
        """Gets the usage of this GetOrganizationClientsOverview200Response.


        :return: The usage of this GetOrganizationClientsOverview200Response.
        :rtype: GetOrganizationClientsOverview200ResponseUsage
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this GetOrganizationClientsOverview200Response.


        :param usage: The usage of this GetOrganizationClientsOverview200Response.
        :type usage: GetOrganizationClientsOverview200ResponseUsage
        """

        self._usage = usage
