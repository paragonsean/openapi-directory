# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationDevices200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, firmware: str=None, lan_ip: str=None, lat: float=None, lng: float=None, mac: str=None, model: str=None, name: str=None, network_id: str=None, notes: str=None, product_type: str=None, serial: str=None, tags: List[str]=None):
        """GetOrganizationDevices200ResponseInner - a model defined in OpenAPI

        :param address: The address of this GetOrganizationDevices200ResponseInner.
        :param firmware: The firmware of this GetOrganizationDevices200ResponseInner.
        :param lan_ip: The lan_ip of this GetOrganizationDevices200ResponseInner.
        :param lat: The lat of this GetOrganizationDevices200ResponseInner.
        :param lng: The lng of this GetOrganizationDevices200ResponseInner.
        :param mac: The mac of this GetOrganizationDevices200ResponseInner.
        :param model: The model of this GetOrganizationDevices200ResponseInner.
        :param name: The name of this GetOrganizationDevices200ResponseInner.
        :param network_id: The network_id of this GetOrganizationDevices200ResponseInner.
        :param notes: The notes of this GetOrganizationDevices200ResponseInner.
        :param product_type: The product_type of this GetOrganizationDevices200ResponseInner.
        :param serial: The serial of this GetOrganizationDevices200ResponseInner.
        :param tags: The tags of this GetOrganizationDevices200ResponseInner.
        """
        self.openapi_types = {
            'address': str,
            'firmware': str,
            'lan_ip': str,
            'lat': float,
            'lng': float,
            'mac': str,
            'model': str,
            'name': str,
            'network_id': str,
            'notes': str,
            'product_type': str,
            'serial': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'address': 'address',
            'firmware': 'firmware',
            'lan_ip': 'lanIp',
            'lat': 'lat',
            'lng': 'lng',
            'mac': 'mac',
            'model': 'model',
            'name': 'name',
            'network_id': 'networkId',
            'notes': 'notes',
            'product_type': 'productType',
            'serial': 'serial',
            'tags': 'tags'
        }

        self._address = address
        self._firmware = firmware
        self._lan_ip = lan_ip
        self._lat = lat
        self._lng = lng
        self._mac = mac
        self._model = model
        self._name = name
        self._network_id = network_id
        self._notes = notes
        self._product_type = product_type
        self._serial = serial
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationDevices200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationDevices_200_response_inner of this GetOrganizationDevices200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this GetOrganizationDevices200ResponseInner.

        Physical address of the device

        :return: The address of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetOrganizationDevices200ResponseInner.

        Physical address of the device

        :param address: The address of this GetOrganizationDevices200ResponseInner.
        :type address: str
        """

        self._address = address

    @property
    def firmware(self):
        """Gets the firmware of this GetOrganizationDevices200ResponseInner.

        Firmware version of the device

        :return: The firmware of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._firmware

    @firmware.setter
    def firmware(self, firmware):
        """Sets the firmware of this GetOrganizationDevices200ResponseInner.

        Firmware version of the device

        :param firmware: The firmware of this GetOrganizationDevices200ResponseInner.
        :type firmware: str
        """

        self._firmware = firmware

    @property
    def lan_ip(self):
        """Gets the lan_ip of this GetOrganizationDevices200ResponseInner.

        LAN IP address of the device

        :return: The lan_ip of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._lan_ip

    @lan_ip.setter
    def lan_ip(self, lan_ip):
        """Sets the lan_ip of this GetOrganizationDevices200ResponseInner.

        LAN IP address of the device

        :param lan_ip: The lan_ip of this GetOrganizationDevices200ResponseInner.
        :type lan_ip: str
        """

        self._lan_ip = lan_ip

    @property
    def lat(self):
        """Gets the lat of this GetOrganizationDevices200ResponseInner.

        Latitude of the device

        :return: The lat of this GetOrganizationDevices200ResponseInner.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this GetOrganizationDevices200ResponseInner.

        Latitude of the device

        :param lat: The lat of this GetOrganizationDevices200ResponseInner.
        :type lat: float
        """

        self._lat = lat

    @property
    def lng(self):
        """Gets the lng of this GetOrganizationDevices200ResponseInner.

        Longitude of the device

        :return: The lng of this GetOrganizationDevices200ResponseInner.
        :rtype: float
        """
        return self._lng

    @lng.setter
    def lng(self, lng):
        """Sets the lng of this GetOrganizationDevices200ResponseInner.

        Longitude of the device

        :param lng: The lng of this GetOrganizationDevices200ResponseInner.
        :type lng: float
        """

        self._lng = lng

    @property
    def mac(self):
        """Gets the mac of this GetOrganizationDevices200ResponseInner.

        MAC address of the device

        :return: The mac of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetOrganizationDevices200ResponseInner.

        MAC address of the device

        :param mac: The mac of this GetOrganizationDevices200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def model(self):
        """Gets the model of this GetOrganizationDevices200ResponseInner.

        Model of the device

        :return: The model of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GetOrganizationDevices200ResponseInner.

        Model of the device

        :param model: The model of this GetOrganizationDevices200ResponseInner.
        :type model: str
        """

        self._model = model

    @property
    def name(self):
        """Gets the name of this GetOrganizationDevices200ResponseInner.

        Name of the device

        :return: The name of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOrganizationDevices200ResponseInner.

        Name of the device

        :param name: The name of this GetOrganizationDevices200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def network_id(self):
        """Gets the network_id of this GetOrganizationDevices200ResponseInner.

        ID of the network the device belongs to

        :return: The network_id of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._network_id

    @network_id.setter
    def network_id(self, network_id):
        """Sets the network_id of this GetOrganizationDevices200ResponseInner.

        ID of the network the device belongs to

        :param network_id: The network_id of this GetOrganizationDevices200ResponseInner.
        :type network_id: str
        """

        self._network_id = network_id

    @property
    def notes(self):
        """Gets the notes of this GetOrganizationDevices200ResponseInner.

        Notes for the device, limited to 255 characters

        :return: The notes of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this GetOrganizationDevices200ResponseInner.

        Notes for the device, limited to 255 characters

        :param notes: The notes of this GetOrganizationDevices200ResponseInner.
        :type notes: str
        """

        self._notes = notes

    @property
    def product_type(self):
        """Gets the product_type of this GetOrganizationDevices200ResponseInner.

        Product type of the device

        :return: The product_type of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this GetOrganizationDevices200ResponseInner.

        Product type of the device

        :param product_type: The product_type of this GetOrganizationDevices200ResponseInner.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationDevices200ResponseInner.

        Serial number of the device

        :return: The serial of this GetOrganizationDevices200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationDevices200ResponseInner.

        Serial number of the device

        :param serial: The serial of this GetOrganizationDevices200ResponseInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def tags(self):
        """Gets the tags of this GetOrganizationDevices200ResponseInner.

        List of tags assigned to the device

        :return: The tags of this GetOrganizationDevices200ResponseInner.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetOrganizationDevices200ResponseInner.

        List of tags assigned to the device

        :param tags: The tags of this GetOrganizationDevices200ResponseInner.
        :type tags: List[str]
        """

        self._tags = tags
