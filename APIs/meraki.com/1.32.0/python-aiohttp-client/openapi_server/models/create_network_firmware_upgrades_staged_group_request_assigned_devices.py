# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_firmware_upgrades_staged_group_request_assigned_devices_devices_inner import CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesDevicesInner
from openapi_server.models.create_network_firmware_upgrades_staged_group_request_assigned_devices_switch_stacks_inner import CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesSwitchStacksInner
from openapi_server import util


class CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices: List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesDevicesInner]=None, switch_stacks: List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesSwitchStacksInner]=None):
        """CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices - a model defined in OpenAPI

        :param devices: The devices of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        :param switch_stacks: The switch_stacks of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        """
        self.openapi_types = {
            'devices': List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesDevicesInner],
            'switch_stacks': List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesSwitchStacksInner]
        }

        self.attribute_map = {
            'devices': 'devices',
            'switch_stacks': 'switchStacks'
        }

        self._devices = devices
        self._switch_stacks = switch_stacks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkFirmwareUpgradesStagedGroup_request_assignedDevices of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self):
        """Gets the devices of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.

        Data Array of Devices containing the name and serial

        :return: The devices of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        :rtype: List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesDevicesInner]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.

        Data Array of Devices containing the name and serial

        :param devices: The devices of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        :type devices: List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesDevicesInner]
        """

        self._devices = devices

    @property
    def switch_stacks(self):
        """Gets the switch_stacks of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.

        Data Array of Switch Stacks containing the name and id

        :return: The switch_stacks of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        :rtype: List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesSwitchStacksInner]
        """
        return self._switch_stacks

    @switch_stacks.setter
    def switch_stacks(self, switch_stacks):
        """Sets the switch_stacks of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.

        Data Array of Switch Stacks containing the name and id

        :param switch_stacks: The switch_stacks of this CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevices.
        :type switch_stacks: List[CreateNetworkFirmwareUpgradesStagedGroupRequestAssignedDevicesSwitchStacksInner]
        """

        self._switch_stacks = switch_stacks
