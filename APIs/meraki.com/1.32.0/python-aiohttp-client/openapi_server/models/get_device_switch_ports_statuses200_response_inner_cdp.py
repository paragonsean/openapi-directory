# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDeviceSwitchPortsStatuses200ResponseInnerCdp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, capabilities: str=None, device_id: str=None, management_address: str=None, native_vlan: int=None, platform: str=None, port_id: str=None, system_name: str=None, version: str=None, vtp_management_domain: str=None):
        """GetDeviceSwitchPortsStatuses200ResponseInnerCdp - a model defined in OpenAPI

        :param address: The address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param capabilities: The capabilities of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param device_id: The device_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param management_address: The management_address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param native_vlan: The native_vlan of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param platform: The platform of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param port_id: The port_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param system_name: The system_name of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param version: The version of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :param vtp_management_domain: The vtp_management_domain of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        """
        self.openapi_types = {
            'address': str,
            'capabilities': str,
            'device_id': str,
            'management_address': str,
            'native_vlan': int,
            'platform': str,
            'port_id': str,
            'system_name': str,
            'version': str,
            'vtp_management_domain': str
        }

        self.attribute_map = {
            'address': 'address',
            'capabilities': 'capabilities',
            'device_id': 'deviceId',
            'management_address': 'managementAddress',
            'native_vlan': 'nativeVlan',
            'platform': 'platform',
            'port_id': 'portId',
            'system_name': 'systemName',
            'version': 'version',
            'vtp_management_domain': 'vtpManagementDomain'
        }

        self._address = address
        self._capabilities = capabilities
        self._device_id = device_id
        self._management_address = management_address
        self._native_vlan = native_vlan
        self._platform = platform
        self._port_id = port_id
        self._system_name = system_name
        self._version = version
        self._vtp_management_domain = vtp_management_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDeviceSwitchPortsStatuses200ResponseInnerCdp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDeviceSwitchPortsStatuses_200_response_inner_cdp of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Contains network addresses of both receiving and sending devices.

        :return: The address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Contains network addresses of both receiving and sending devices.

        :param address: The address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type address: str
        """

        self._address = address

    @property
    def capabilities(self):
        """Gets the capabilities of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the device type, which indicates the functional capabilities of the device.

        :return: The capabilities of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the device type, which indicates the functional capabilities of the device.

        :param capabilities: The capabilities of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type capabilities: str
        """

        self._capabilities = capabilities

    @property
    def device_id(self):
        """Gets the device_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the device name.

        :return: The device_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the device name.

        :param device_id: The device_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def management_address(self):
        """Gets the management_address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        The device's management IP.

        :return: The management_address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._management_address

    @management_address.setter
    def management_address(self, management_address):
        """Sets the management_address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        The device's management IP.

        :param management_address: The management_address of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type management_address: str
        """

        self._management_address = management_address

    @property
    def native_vlan(self):
        """Gets the native_vlan of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Indicates, per interface, the assumed VLAN for untagged packets on the interface.

        :return: The native_vlan of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: int
        """
        return self._native_vlan

    @native_vlan.setter
    def native_vlan(self, native_vlan):
        """Sets the native_vlan of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Indicates, per interface, the assumed VLAN for untagged packets on the interface.

        :param native_vlan: The native_vlan of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type native_vlan: int
        """

        self._native_vlan = native_vlan

    @property
    def platform(self):
        """Gets the platform of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the hardware platform of the device.

        :return: The platform of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the hardware platform of the device.

        :param platform: The platform of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type platform: str
        """

        self._platform = platform

    @property
    def port_id(self):
        """Gets the port_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the port from which the CDP packet was sent.

        :return: The port_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._port_id

    @port_id.setter
    def port_id(self, port_id):
        """Sets the port_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Identifies the port from which the CDP packet was sent.

        :param port_id: The port_id of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type port_id: str
        """

        self._port_id = port_id

    @property
    def system_name(self):
        """Gets the system_name of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        The system name.

        :return: The system_name of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._system_name

    @system_name.setter
    def system_name(self, system_name):
        """Sets the system_name of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        The system name.

        :param system_name: The system_name of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type system_name: str
        """

        self._system_name = system_name

    @property
    def version(self):
        """Gets the version of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Contains the device software release information.

        :return: The version of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Contains the device software release information.

        :param version: The version of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type version: str
        """

        self._version = version

    @property
    def vtp_management_domain(self):
        """Gets the vtp_management_domain of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.

        :return: The vtp_management_domain of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :rtype: str
        """
        return self._vtp_management_domain

    @vtp_management_domain.setter
    def vtp_management_domain(self, vtp_management_domain):
        """Sets the vtp_management_domain of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.

        Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.

        :param vtp_management_domain: The vtp_management_domain of this GetDeviceSwitchPortsStatuses200ResponseInnerCdp.
        :type vtp_management_domain: str
        """

        self._vtp_management_domain = vtp_management_domain
