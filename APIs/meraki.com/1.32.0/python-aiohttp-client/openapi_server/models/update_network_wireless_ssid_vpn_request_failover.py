# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkWirelessSsidVpnRequestFailover(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, heartbeat_interval: int=None, idle_timeout: int=None, request_ip: str=None):
        """UpdateNetworkWirelessSsidVpnRequestFailover - a model defined in OpenAPI

        :param heartbeat_interval: The heartbeat_interval of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :param idle_timeout: The idle_timeout of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :param request_ip: The request_ip of this UpdateNetworkWirelessSsidVpnRequestFailover.
        """
        self.openapi_types = {
            'heartbeat_interval': int,
            'idle_timeout': int,
            'request_ip': str
        }

        self.attribute_map = {
            'heartbeat_interval': 'heartbeatInterval',
            'idle_timeout': 'idleTimeout',
            'request_ip': 'requestIp'
        }

        self._heartbeat_interval = heartbeat_interval
        self._idle_timeout = idle_timeout
        self._request_ip = request_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessSsidVpnRequestFailover':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessSsidVpn_request_failover of this UpdateNetworkWirelessSsidVpnRequestFailover.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def heartbeat_interval(self):
        """Gets the heartbeat_interval of this UpdateNetworkWirelessSsidVpnRequestFailover.

        Idle timer interval in seconds.

        :return: The heartbeat_interval of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :rtype: int
        """
        return self._heartbeat_interval

    @heartbeat_interval.setter
    def heartbeat_interval(self, heartbeat_interval):
        """Sets the heartbeat_interval of this UpdateNetworkWirelessSsidVpnRequestFailover.

        Idle timer interval in seconds.

        :param heartbeat_interval: The heartbeat_interval of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :type heartbeat_interval: int
        """

        self._heartbeat_interval = heartbeat_interval

    @property
    def idle_timeout(self):
        """Gets the idle_timeout of this UpdateNetworkWirelessSsidVpnRequestFailover.

        Idle timer timeout in seconds.

        :return: The idle_timeout of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :rtype: int
        """
        return self._idle_timeout

    @idle_timeout.setter
    def idle_timeout(self, idle_timeout):
        """Sets the idle_timeout of this UpdateNetworkWirelessSsidVpnRequestFailover.

        Idle timer timeout in seconds.

        :param idle_timeout: The idle_timeout of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :type idle_timeout: int
        """

        self._idle_timeout = idle_timeout

    @property
    def request_ip(self):
        """Gets the request_ip of this UpdateNetworkWirelessSsidVpnRequestFailover.

        IP addressed reserved on DHCP server where SSID will terminate.

        :return: The request_ip of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :rtype: str
        """
        return self._request_ip

    @request_ip.setter
    def request_ip(self, request_ip):
        """Sets the request_ip of this UpdateNetworkWirelessSsidVpnRequestFailover.

        IP addressed reserved on DHCP server where SSID will terminate.

        :param request_ip: The request_ip of this UpdateNetworkWirelessSsidVpnRequestFailover.
        :type request_ip: str
        """

        self._request_ip = request_ip
