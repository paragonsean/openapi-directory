# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interface_ip: str=None, multicast_group: str=None):
        """UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest - a model defined in OpenAPI

        :param interface_ip: The interface_ip of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        :param multicast_group: The multicast_group of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        """
        self.openapi_types = {
            'interface_ip': str,
            'multicast_group': str
        }

        self.attribute_map = {
            'interface_ip': 'interfaceIp',
            'multicast_group': 'multicastGroup'
        }

        self._interface_ip = interface_ip
        self._multicast_group = multicast_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSwitchRoutingMulticastRendezvousPoint_request of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interface_ip(self):
        """Gets the interface_ip of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.

        The IP address of the interface to use

        :return: The interface_ip of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        :rtype: str
        """
        return self._interface_ip

    @interface_ip.setter
    def interface_ip(self, interface_ip):
        """Sets the interface_ip of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.

        The IP address of the interface to use

        :param interface_ip: The interface_ip of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        :type interface_ip: str
        """
        if interface_ip is None:
            raise ValueError("Invalid value for `interface_ip`, must not be `None`")

        self._interface_ip = interface_ip

    @property
    def multicast_group(self):
        """Gets the multicast_group of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.

        'Any', or the IP address of a multicast group

        :return: The multicast_group of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        :rtype: str
        """
        return self._multicast_group

    @multicast_group.setter
    def multicast_group(self, multicast_group):
        """Sets the multicast_group of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.

        'Any', or the IP address of a multicast group

        :param multicast_group: The multicast_group of this UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest.
        :type multicast_group: str
        """
        if multicast_group is None:
            raise ValueError("Invalid value for `multicast_group`, must not be `None`")

        self._multicast_group = multicast_group
