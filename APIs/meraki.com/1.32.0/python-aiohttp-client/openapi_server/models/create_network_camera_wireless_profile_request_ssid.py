# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateNetworkCameraWirelessProfileRequestSsid(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_mode: str=None, encryption_mode: str=None, name: str=None, psk: str=None):
        """CreateNetworkCameraWirelessProfileRequestSsid - a model defined in OpenAPI

        :param auth_mode: The auth_mode of this CreateNetworkCameraWirelessProfileRequestSsid.
        :param encryption_mode: The encryption_mode of this CreateNetworkCameraWirelessProfileRequestSsid.
        :param name: The name of this CreateNetworkCameraWirelessProfileRequestSsid.
        :param psk: The psk of this CreateNetworkCameraWirelessProfileRequestSsid.
        """
        self.openapi_types = {
            'auth_mode': str,
            'encryption_mode': str,
            'name': str,
            'psk': str
        }

        self.attribute_map = {
            'auth_mode': 'authMode',
            'encryption_mode': 'encryptionMode',
            'name': 'name',
            'psk': 'psk'
        }

        self._auth_mode = auth_mode
        self._encryption_mode = encryption_mode
        self._name = name
        self._psk = psk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkCameraWirelessProfileRequestSsid':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkCameraWirelessProfile_request_ssid of this CreateNetworkCameraWirelessProfileRequestSsid.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_mode(self):
        """Gets the auth_mode of this CreateNetworkCameraWirelessProfileRequestSsid.

        The auth mode of the SSID. It can be set to ('psk', '8021x-radius').

        :return: The auth_mode of this CreateNetworkCameraWirelessProfileRequestSsid.
        :rtype: str
        """
        return self._auth_mode

    @auth_mode.setter
    def auth_mode(self, auth_mode):
        """Sets the auth_mode of this CreateNetworkCameraWirelessProfileRequestSsid.

        The auth mode of the SSID. It can be set to ('psk', '8021x-radius').

        :param auth_mode: The auth_mode of this CreateNetworkCameraWirelessProfileRequestSsid.
        :type auth_mode: str
        """
        allowed_values = ["8021x-radius", "psk"]  # noqa: E501
        if auth_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `auth_mode` ({0}), must be one of {1}"
                .format(auth_mode, allowed_values)
            )

        self._auth_mode = auth_mode

    @property
    def encryption_mode(self):
        """Gets the encryption_mode of this CreateNetworkCameraWirelessProfileRequestSsid.

        The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap'). With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode should be '8021x-radius'

        :return: The encryption_mode of this CreateNetworkCameraWirelessProfileRequestSsid.
        :rtype: str
        """
        return self._encryption_mode

    @encryption_mode.setter
    def encryption_mode(self, encryption_mode):
        """Sets the encryption_mode of this CreateNetworkCameraWirelessProfileRequestSsid.

        The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap'). With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode should be '8021x-radius'

        :param encryption_mode: The encryption_mode of this CreateNetworkCameraWirelessProfileRequestSsid.
        :type encryption_mode: str
        """

        self._encryption_mode = encryption_mode

    @property
    def name(self):
        """Gets the name of this CreateNetworkCameraWirelessProfileRequestSsid.

        The name of the SSID.

        :return: The name of this CreateNetworkCameraWirelessProfileRequestSsid.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateNetworkCameraWirelessProfileRequestSsid.

        The name of the SSID.

        :param name: The name of this CreateNetworkCameraWirelessProfileRequestSsid.
        :type name: str
        """

        self._name = name

    @property
    def psk(self):
        """Gets the psk of this CreateNetworkCameraWirelessProfileRequestSsid.

        The pre-shared key of the SSID.

        :return: The psk of this CreateNetworkCameraWirelessProfileRequestSsid.
        :rtype: str
        """
        return self._psk

    @psk.setter
    def psk(self, psk):
        """Sets the psk of this CreateNetworkCameraWirelessProfileRequestSsid.

        The pre-shared key of the SSID.

        :param psk: The psk of this CreateNetworkCameraWirelessProfileRequestSsid.
        :type psk: str
        """

        self._psk = psk
