# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrganizationSensorReadingsHistory200ResponseInnerWater(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, present: bool=None):
        """GetOrganizationSensorReadingsHistory200ResponseInnerWater - a model defined in OpenAPI

        :param present: The present of this GetOrganizationSensorReadingsHistory200ResponseInnerWater.
        """
        self.openapi_types = {
            'present': bool
        }

        self.attribute_map = {
            'present': 'present'
        }

        self._present = present

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSensorReadingsHistory200ResponseInnerWater':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSensorReadingsHistory_200_response_inner_water of this GetOrganizationSensorReadingsHistory200ResponseInnerWater.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def present(self):
        """Gets the present of this GetOrganizationSensorReadingsHistory200ResponseInnerWater.

        True if water is detected.

        :return: The present of this GetOrganizationSensorReadingsHistory200ResponseInnerWater.
        :rtype: bool
        """
        return self._present

    @present.setter
    def present(self, present):
        """Sets the present of this GetOrganizationSensorReadingsHistory200ResponseInnerWater.

        True if water is detected.

        :param present: The present of this GetOrganizationSensorReadingsHistory200ResponseInnerWater.
        :type present: bool
        """

        self._present = present
