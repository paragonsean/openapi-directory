# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkEvents200ResponseEventsInnerEventData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aid: str=None, channel: str=None, client_ip: str=None, client_mac: str=None, radio: str=None, rssi: str=None, vap: str=None):
        """GetNetworkEvents200ResponseEventsInnerEventData - a model defined in OpenAPI

        :param aid: The aid of this GetNetworkEvents200ResponseEventsInnerEventData.
        :param channel: The channel of this GetNetworkEvents200ResponseEventsInnerEventData.
        :param client_ip: The client_ip of this GetNetworkEvents200ResponseEventsInnerEventData.
        :param client_mac: The client_mac of this GetNetworkEvents200ResponseEventsInnerEventData.
        :param radio: The radio of this GetNetworkEvents200ResponseEventsInnerEventData.
        :param rssi: The rssi of this GetNetworkEvents200ResponseEventsInnerEventData.
        :param vap: The vap of this GetNetworkEvents200ResponseEventsInnerEventData.
        """
        self.openapi_types = {
            'aid': str,
            'channel': str,
            'client_ip': str,
            'client_mac': str,
            'radio': str,
            'rssi': str,
            'vap': str
        }

        self.attribute_map = {
            'aid': 'aid',
            'channel': 'channel',
            'client_ip': 'client_ip',
            'client_mac': 'client_mac',
            'radio': 'radio',
            'rssi': 'rssi',
            'vap': 'vap'
        }

        self._aid = aid
        self._channel = channel
        self._client_ip = client_ip
        self._client_mac = client_mac
        self._radio = radio
        self._rssi = rssi
        self._vap = vap

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkEvents200ResponseEventsInnerEventData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkEvents_200_response_events_inner_eventData of this GetNetworkEvents200ResponseEventsInnerEventData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aid(self):
        """Gets the aid of this GetNetworkEvents200ResponseEventsInnerEventData.

        The association ID of the client.

        :return: The aid of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._aid

    @aid.setter
    def aid(self, aid):
        """Sets the aid of this GetNetworkEvents200ResponseEventsInnerEventData.

        The association ID of the client.

        :param aid: The aid of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type aid: str
        """

        self._aid = aid

    @property
    def channel(self):
        """Gets the channel of this GetNetworkEvents200ResponseEventsInnerEventData.

        The radio channel the client is connecting to.

        :return: The channel of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this GetNetworkEvents200ResponseEventsInnerEventData.

        The radio channel the client is connecting to.

        :param channel: The channel of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type channel: str
        """

        self._channel = channel

    @property
    def client_ip(self):
        """Gets the client_ip of this GetNetworkEvents200ResponseEventsInnerEventData.

        The client's IP address

        :return: The client_ip of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._client_ip

    @client_ip.setter
    def client_ip(self, client_ip):
        """Sets the client_ip of this GetNetworkEvents200ResponseEventsInnerEventData.

        The client's IP address

        :param client_ip: The client_ip of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type client_ip: str
        """

        self._client_ip = client_ip

    @property
    def client_mac(self):
        """Gets the client_mac of this GetNetworkEvents200ResponseEventsInnerEventData.

        The client's MAC address

        :return: The client_mac of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._client_mac

    @client_mac.setter
    def client_mac(self, client_mac):
        """Sets the client_mac of this GetNetworkEvents200ResponseEventsInnerEventData.

        The client's MAC address

        :param client_mac: The client_mac of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type client_mac: str
        """

        self._client_mac = client_mac

    @property
    def radio(self):
        """Gets the radio of this GetNetworkEvents200ResponseEventsInnerEventData.

        The radio band number the client is trying to connect to.

        :return: The radio of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._radio

    @radio.setter
    def radio(self, radio):
        """Sets the radio of this GetNetworkEvents200ResponseEventsInnerEventData.

        The radio band number the client is trying to connect to.

        :param radio: The radio of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type radio: str
        """

        self._radio = radio

    @property
    def rssi(self):
        """Gets the rssi of this GetNetworkEvents200ResponseEventsInnerEventData.

        The current received signal strength indication (RSSI) of the client connected to an AP.

        :return: The rssi of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._rssi

    @rssi.setter
    def rssi(self, rssi):
        """Sets the rssi of this GetNetworkEvents200ResponseEventsInnerEventData.

        The current received signal strength indication (RSSI) of the client connected to an AP.

        :param rssi: The rssi of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type rssi: str
        """

        self._rssi = rssi

    @property
    def vap(self):
        """Gets the vap of this GetNetworkEvents200ResponseEventsInnerEventData.

        The virtual access point (VAP) number the client is connecting to.

        :return: The vap of this GetNetworkEvents200ResponseEventsInnerEventData.
        :rtype: str
        """
        return self._vap

    @vap.setter
    def vap(self, vap):
        """Sets the vap of this GetNetworkEvents200ResponseEventsInnerEventData.

        The virtual access point (VAP) number the client is connecting to.

        :param vap: The vap of this GetNetworkEvents200ResponseEventsInnerEventData.
        :type vap: str
        """

        self._vap = vap
