# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_appliance_single_lan_request_ipv6_prefix_assignments_inner import UpdateNetworkApplianceSingleLanRequestIpv6PrefixAssignmentsInner
from openapi_server import util


class UpdateNetworkApplianceSingleLanRequestIpv6(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, prefix_assignments: List[UpdateNetworkApplianceSingleLanRequestIpv6PrefixAssignmentsInner]=None):
        """UpdateNetworkApplianceSingleLanRequestIpv6 - a model defined in OpenAPI

        :param enabled: The enabled of this UpdateNetworkApplianceSingleLanRequestIpv6.
        :param prefix_assignments: The prefix_assignments of this UpdateNetworkApplianceSingleLanRequestIpv6.
        """
        self.openapi_types = {
            'enabled': bool,
            'prefix_assignments': List[UpdateNetworkApplianceSingleLanRequestIpv6PrefixAssignmentsInner]
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'prefix_assignments': 'prefixAssignments'
        }

        self._enabled = enabled
        self._prefix_assignments = prefix_assignments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkApplianceSingleLanRequestIpv6':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkApplianceSingleLan_request_ipv6 of this UpdateNetworkApplianceSingleLanRequestIpv6.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkApplianceSingleLanRequestIpv6.

        Enable IPv6 on VLAN.

        :return: The enabled of this UpdateNetworkApplianceSingleLanRequestIpv6.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkApplianceSingleLanRequestIpv6.

        Enable IPv6 on VLAN.

        :param enabled: The enabled of this UpdateNetworkApplianceSingleLanRequestIpv6.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def prefix_assignments(self):
        """Gets the prefix_assignments of this UpdateNetworkApplianceSingleLanRequestIpv6.

        Prefix assignments on the VLAN

        :return: The prefix_assignments of this UpdateNetworkApplianceSingleLanRequestIpv6.
        :rtype: List[UpdateNetworkApplianceSingleLanRequestIpv6PrefixAssignmentsInner]
        """
        return self._prefix_assignments

    @prefix_assignments.setter
    def prefix_assignments(self, prefix_assignments):
        """Sets the prefix_assignments of this UpdateNetworkApplianceSingleLanRequestIpv6.

        Prefix assignments on the VLAN

        :param prefix_assignments: The prefix_assignments of this UpdateNetworkApplianceSingleLanRequestIpv6.
        :type prefix_assignments: List[UpdateNetworkApplianceSingleLanRequestIpv6PrefixAssignmentsInner]
        """

        self._prefix_assignments = prefix_assignments
