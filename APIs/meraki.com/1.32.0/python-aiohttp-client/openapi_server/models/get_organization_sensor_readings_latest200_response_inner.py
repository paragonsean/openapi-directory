# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_network import GetOrganizationSensorReadingsHistory200ResponseInnerNetwork
from openapi_server.models.get_organization_sensor_readings_latest200_response_inner_readings_inner import GetOrganizationSensorReadingsLatest200ResponseInnerReadingsInner
from openapi_server import util


class GetOrganizationSensorReadingsLatest200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network: GetOrganizationSensorReadingsHistory200ResponseInnerNetwork=None, readings: List[GetOrganizationSensorReadingsLatest200ResponseInnerReadingsInner]=None, serial: str=None):
        """GetOrganizationSensorReadingsLatest200ResponseInner - a model defined in OpenAPI

        :param network: The network of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :param readings: The readings of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :param serial: The serial of this GetOrganizationSensorReadingsLatest200ResponseInner.
        """
        self.openapi_types = {
            'network': GetOrganizationSensorReadingsHistory200ResponseInnerNetwork,
            'readings': List[GetOrganizationSensorReadingsLatest200ResponseInnerReadingsInner],
            'serial': str
        }

        self.attribute_map = {
            'network': 'network',
            'readings': 'readings',
            'serial': 'serial'
        }

        self._network = network
        self._readings = readings
        self._serial = serial

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSensorReadingsLatest200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSensorReadingsLatest_200_response_inner of this GetOrganizationSensorReadingsLatest200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network(self):
        """Gets the network of this GetOrganizationSensorReadingsLatest200ResponseInner.


        :return: The network of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetOrganizationSensorReadingsLatest200ResponseInner.


        :param network: The network of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :type network: GetOrganizationSensorReadingsHistory200ResponseInnerNetwork
        """

        self._network = network

    @property
    def readings(self):
        """Gets the readings of this GetOrganizationSensorReadingsLatest200ResponseInner.

        Array of latest readings from the sensor. Each object represents a single reading for a single metric.

        :return: The readings of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :rtype: List[GetOrganizationSensorReadingsLatest200ResponseInnerReadingsInner]
        """
        return self._readings

    @readings.setter
    def readings(self, readings):
        """Sets the readings of this GetOrganizationSensorReadingsLatest200ResponseInner.

        Array of latest readings from the sensor. Each object represents a single reading for a single metric.

        :param readings: The readings of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :type readings: List[GetOrganizationSensorReadingsLatest200ResponseInnerReadingsInner]
        """

        self._readings = readings

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationSensorReadingsLatest200ResponseInner.

        Serial number of the sensor that took the readings.

        :return: The serial of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationSensorReadingsLatest200ResponseInner.

        Serial number of the sensor that took the readings.

        :param serial: The serial of this GetOrganizationSensorReadingsLatest200ResponseInner.
        :type serial: str
        """

        self._serial = serial
