# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_health_alerts200_response_inner_scope_applications_inner import GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner
from openapi_server.models.get_network_health_alerts200_response_inner_scope_devices_inner import GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
from openapi_server.models.get_network_health_alerts200_response_inner_scope_peers_inner import GetNetworkHealthAlerts200ResponseInnerScopePeersInner
from openapi_server import util


class GetNetworkHealthAlerts200ResponseInnerScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applications: List[GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner]=None, devices: List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner]=None, peers: List[GetNetworkHealthAlerts200ResponseInnerScopePeersInner]=None):
        """GetNetworkHealthAlerts200ResponseInnerScope - a model defined in OpenAPI

        :param applications: The applications of this GetNetworkHealthAlerts200ResponseInnerScope.
        :param devices: The devices of this GetNetworkHealthAlerts200ResponseInnerScope.
        :param peers: The peers of this GetNetworkHealthAlerts200ResponseInnerScope.
        """
        self.openapi_types = {
            'applications': List[GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner],
            'devices': List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner],
            'peers': List[GetNetworkHealthAlerts200ResponseInnerScopePeersInner]
        }

        self.attribute_map = {
            'applications': 'applications',
            'devices': 'devices',
            'peers': 'peers'
        }

        self._applications = applications
        self._devices = devices
        self._peers = peers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkHealthAlerts200ResponseInnerScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkHealthAlerts_200_response_inner_scope of this GetNetworkHealthAlerts200ResponseInnerScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applications(self):
        """Gets the applications of this GetNetworkHealthAlerts200ResponseInnerScope.

        Applications related to the alert

        :return: The applications of this GetNetworkHealthAlerts200ResponseInnerScope.
        :rtype: List[GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner]
        """
        return self._applications

    @applications.setter
    def applications(self, applications):
        """Sets the applications of this GetNetworkHealthAlerts200ResponseInnerScope.

        Applications related to the alert

        :param applications: The applications of this GetNetworkHealthAlerts200ResponseInnerScope.
        :type applications: List[GetNetworkHealthAlerts200ResponseInnerScopeApplicationsInner]
        """

        self._applications = applications

    @property
    def devices(self):
        """Gets the devices of this GetNetworkHealthAlerts200ResponseInnerScope.

        Devices related to the alert

        :return: The devices of this GetNetworkHealthAlerts200ResponseInnerScope.
        :rtype: List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this GetNetworkHealthAlerts200ResponseInnerScope.

        Devices related to the alert

        :param devices: The devices of this GetNetworkHealthAlerts200ResponseInnerScope.
        :type devices: List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner]
        """

        self._devices = devices

    @property
    def peers(self):
        """Gets the peers of this GetNetworkHealthAlerts200ResponseInnerScope.

        Peers related to the alert

        :return: The peers of this GetNetworkHealthAlerts200ResponseInnerScope.
        :rtype: List[GetNetworkHealthAlerts200ResponseInnerScopePeersInner]
        """
        return self._peers

    @peers.setter
    def peers(self, peers):
        """Sets the peers of this GetNetworkHealthAlerts200ResponseInnerScope.

        Peers related to the alert

        :param peers: The peers of this GetNetworkHealthAlerts200ResponseInnerScope.
        :type peers: List[GetNetworkHealthAlerts200ResponseInnerScopePeersInner]
        """

        self._peers = peers
