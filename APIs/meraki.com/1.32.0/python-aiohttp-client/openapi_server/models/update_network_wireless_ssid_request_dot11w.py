# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkWirelessSsidRequestDot11w(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, required: bool=None):
        """UpdateNetworkWirelessSsidRequestDot11w - a model defined in OpenAPI

        :param enabled: The enabled of this UpdateNetworkWirelessSsidRequestDot11w.
        :param required: The required of this UpdateNetworkWirelessSsidRequestDot11w.
        """
        self.openapi_types = {
            'enabled': bool,
            'required': bool
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'required': 'required'
        }

        self._enabled = enabled
        self._required = required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkWirelessSsidRequestDot11w':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkWirelessSsid_request_dot11w of this UpdateNetworkWirelessSsidRequestDot11w.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this UpdateNetworkWirelessSsidRequestDot11w.

        Whether 802.11w is enabled or not.

        :return: The enabled of this UpdateNetworkWirelessSsidRequestDot11w.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateNetworkWirelessSsidRequestDot11w.

        Whether 802.11w is enabled or not.

        :param enabled: The enabled of this UpdateNetworkWirelessSsidRequestDot11w.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def required(self):
        """Gets the required of this UpdateNetworkWirelessSsidRequestDot11w.

        (Optional) Whether 802.11w is required or not.

        :return: The required of this UpdateNetworkWirelessSsidRequestDot11w.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this UpdateNetworkWirelessSsidRequestDot11w.

        (Optional) Whether 802.11w is required or not.

        :param required: The required of this UpdateNetworkWirelessSsidRequestDot11w.
        :type required: bool
        """

        self._required = required
