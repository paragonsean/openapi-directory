# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scheduled_for: str=None):
        """UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones - a model defined in OpenAPI

        :param scheduled_for: The scheduled_for of this UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones.
        """
        self.openapi_types = {
            'scheduled_for': str
        }

        self.attribute_map = {
            'scheduled_for': 'scheduledFor'
        }

        self._scheduled_for = scheduled_for

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkFirmwareUpgradesStagedEvents_request_stages_inner_milestones of this UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scheduled_for(self):
        """Gets the scheduled_for of this UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones.

        The start time of the staged upgrade stage. (In ISO-8601 format, in the time zone of the network.)

        :return: The scheduled_for of this UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones.
        :rtype: str
        """
        return self._scheduled_for

    @scheduled_for.setter
    def scheduled_for(self, scheduled_for):
        """Sets the scheduled_for of this UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones.

        The start time of the staged upgrade stage. (In ISO-8601 format, in the time zone of the network.)

        :param scheduled_for: The scheduled_for of this UpdateNetworkFirmwareUpgradesStagedEventsRequestStagesInnerMilestones.
        :type scheduled_for: str
        """
        if scheduled_for is None:
            raise ValueError("Invalid value for `scheduled_for`, must not be `None`")

        self._scheduled_for = scheduled_for
