# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_battery import GetOrganizationSensorReadingsHistory200ResponseInnerBattery
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_button import GetOrganizationSensorReadingsHistory200ResponseInnerButton
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_door import GetOrganizationSensorReadingsHistory200ResponseInnerDoor
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_humidity import GetOrganizationSensorReadingsHistory200ResponseInnerHumidity
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_indoor_air_quality import GetOrganizationSensorReadingsHistory200ResponseInnerIndoorAirQuality
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_network import GetOrganizationSensorReadingsHistory200ResponseInnerNetwork
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_noise import GetOrganizationSensorReadingsHistory200ResponseInnerNoise
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_pm25 import GetOrganizationSensorReadingsHistory200ResponseInnerPm25
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_temperature import GetOrganizationSensorReadingsHistory200ResponseInnerTemperature
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_tvoc import GetOrganizationSensorReadingsHistory200ResponseInnerTvoc
from openapi_server.models.get_organization_sensor_readings_history200_response_inner_water import GetOrganizationSensorReadingsHistory200ResponseInnerWater
from openapi_server import util


class GetOrganizationSensorReadingsHistory200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, battery: GetOrganizationSensorReadingsHistory200ResponseInnerBattery=None, button: GetOrganizationSensorReadingsHistory200ResponseInnerButton=None, door: GetOrganizationSensorReadingsHistory200ResponseInnerDoor=None, humidity: GetOrganizationSensorReadingsHistory200ResponseInnerHumidity=None, indoor_air_quality: GetOrganizationSensorReadingsHistory200ResponseInnerIndoorAirQuality=None, metric: str=None, network: GetOrganizationSensorReadingsHistory200ResponseInnerNetwork=None, noise: GetOrganizationSensorReadingsHistory200ResponseInnerNoise=None, pm25: GetOrganizationSensorReadingsHistory200ResponseInnerPm25=None, serial: str=None, temperature: GetOrganizationSensorReadingsHistory200ResponseInnerTemperature=None, ts: str=None, tvoc: GetOrganizationSensorReadingsHistory200ResponseInnerTvoc=None, water: GetOrganizationSensorReadingsHistory200ResponseInnerWater=None):
        """GetOrganizationSensorReadingsHistory200ResponseInner - a model defined in OpenAPI

        :param battery: The battery of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param button: The button of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param door: The door of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param humidity: The humidity of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param indoor_air_quality: The indoor_air_quality of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param metric: The metric of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param network: The network of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param noise: The noise of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param pm25: The pm25 of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param serial: The serial of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param temperature: The temperature of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param ts: The ts of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param tvoc: The tvoc of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :param water: The water of this GetOrganizationSensorReadingsHistory200ResponseInner.
        """
        self.openapi_types = {
            'battery': GetOrganizationSensorReadingsHistory200ResponseInnerBattery,
            'button': GetOrganizationSensorReadingsHistory200ResponseInnerButton,
            'door': GetOrganizationSensorReadingsHistory200ResponseInnerDoor,
            'humidity': GetOrganizationSensorReadingsHistory200ResponseInnerHumidity,
            'indoor_air_quality': GetOrganizationSensorReadingsHistory200ResponseInnerIndoorAirQuality,
            'metric': str,
            'network': GetOrganizationSensorReadingsHistory200ResponseInnerNetwork,
            'noise': GetOrganizationSensorReadingsHistory200ResponseInnerNoise,
            'pm25': GetOrganizationSensorReadingsHistory200ResponseInnerPm25,
            'serial': str,
            'temperature': GetOrganizationSensorReadingsHistory200ResponseInnerTemperature,
            'ts': str,
            'tvoc': GetOrganizationSensorReadingsHistory200ResponseInnerTvoc,
            'water': GetOrganizationSensorReadingsHistory200ResponseInnerWater
        }

        self.attribute_map = {
            'battery': 'battery',
            'button': 'button',
            'door': 'door',
            'humidity': 'humidity',
            'indoor_air_quality': 'indoorAirQuality',
            'metric': 'metric',
            'network': 'network',
            'noise': 'noise',
            'pm25': 'pm25',
            'serial': 'serial',
            'temperature': 'temperature',
            'ts': 'ts',
            'tvoc': 'tvoc',
            'water': 'water'
        }

        self._battery = battery
        self._button = button
        self._door = door
        self._humidity = humidity
        self._indoor_air_quality = indoor_air_quality
        self._metric = metric
        self._network = network
        self._noise = noise
        self._pm25 = pm25
        self._serial = serial
        self._temperature = temperature
        self._ts = ts
        self._tvoc = tvoc
        self._water = water

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSensorReadingsHistory200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSensorReadingsHistory_200_response_inner of this GetOrganizationSensorReadingsHistory200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def battery(self):
        """Gets the battery of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The battery of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerBattery
        """
        return self._battery

    @battery.setter
    def battery(self, battery):
        """Sets the battery of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param battery: The battery of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type battery: GetOrganizationSensorReadingsHistory200ResponseInnerBattery
        """

        self._battery = battery

    @property
    def button(self):
        """Gets the button of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The button of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerButton
        """
        return self._button

    @button.setter
    def button(self, button):
        """Sets the button of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param button: The button of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type button: GetOrganizationSensorReadingsHistory200ResponseInnerButton
        """

        self._button = button

    @property
    def door(self):
        """Gets the door of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The door of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerDoor
        """
        return self._door

    @door.setter
    def door(self, door):
        """Sets the door of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param door: The door of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type door: GetOrganizationSensorReadingsHistory200ResponseInnerDoor
        """

        self._door = door

    @property
    def humidity(self):
        """Gets the humidity of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The humidity of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerHumidity
        """
        return self._humidity

    @humidity.setter
    def humidity(self, humidity):
        """Sets the humidity of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param humidity: The humidity of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type humidity: GetOrganizationSensorReadingsHistory200ResponseInnerHumidity
        """

        self._humidity = humidity

    @property
    def indoor_air_quality(self):
        """Gets the indoor_air_quality of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The indoor_air_quality of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerIndoorAirQuality
        """
        return self._indoor_air_quality

    @indoor_air_quality.setter
    def indoor_air_quality(self, indoor_air_quality):
        """Sets the indoor_air_quality of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param indoor_air_quality: The indoor_air_quality of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type indoor_air_quality: GetOrganizationSensorReadingsHistory200ResponseInnerIndoorAirQuality
        """

        self._indoor_air_quality = indoor_air_quality

    @property
    def metric(self):
        """Gets the metric of this GetOrganizationSensorReadingsHistory200ResponseInner.

        Type of sensor reading.

        :return: The metric of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: str
        """
        return self._metric

    @metric.setter
    def metric(self, metric):
        """Sets the metric of this GetOrganizationSensorReadingsHistory200ResponseInner.

        Type of sensor reading.

        :param metric: The metric of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type metric: str
        """
        allowed_values = ["battery", "button", "door", "humidity", "indoorAirQuality", "noise", "pm25", "temperature", "tvoc", "water"]  # noqa: E501
        if metric not in allowed_values:
            raise ValueError(
                "Invalid value for `metric` ({0}), must be one of {1}"
                .format(metric, allowed_values)
            )

        self._metric = metric

    @property
    def network(self):
        """Gets the network of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The network of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param network: The network of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type network: GetOrganizationSensorReadingsHistory200ResponseInnerNetwork
        """

        self._network = network

    @property
    def noise(self):
        """Gets the noise of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The noise of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerNoise
        """
        return self._noise

    @noise.setter
    def noise(self, noise):
        """Sets the noise of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param noise: The noise of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type noise: GetOrganizationSensorReadingsHistory200ResponseInnerNoise
        """

        self._noise = noise

    @property
    def pm25(self):
        """Gets the pm25 of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The pm25 of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerPm25
        """
        return self._pm25

    @pm25.setter
    def pm25(self, pm25):
        """Sets the pm25 of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param pm25: The pm25 of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type pm25: GetOrganizationSensorReadingsHistory200ResponseInnerPm25
        """

        self._pm25 = pm25

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationSensorReadingsHistory200ResponseInner.

        Serial number of the sensor that took the reading.

        :return: The serial of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationSensorReadingsHistory200ResponseInner.

        Serial number of the sensor that took the reading.

        :param serial: The serial of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def temperature(self):
        """Gets the temperature of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The temperature of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerTemperature
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature):
        """Sets the temperature of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param temperature: The temperature of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type temperature: GetOrganizationSensorReadingsHistory200ResponseInnerTemperature
        """

        self._temperature = temperature

    @property
    def ts(self):
        """Gets the ts of this GetOrganizationSensorReadingsHistory200ResponseInner.

        Time at which the reading occurred, in ISO8601 format.

        :return: The ts of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: str
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this GetOrganizationSensorReadingsHistory200ResponseInner.

        Time at which the reading occurred, in ISO8601 format.

        :param ts: The ts of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type ts: str
        """

        self._ts = ts

    @property
    def tvoc(self):
        """Gets the tvoc of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The tvoc of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerTvoc
        """
        return self._tvoc

    @tvoc.setter
    def tvoc(self, tvoc):
        """Sets the tvoc of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param tvoc: The tvoc of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type tvoc: GetOrganizationSensorReadingsHistory200ResponseInnerTvoc
        """

        self._tvoc = tvoc

    @property
    def water(self):
        """Gets the water of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :return: The water of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :rtype: GetOrganizationSensorReadingsHistory200ResponseInnerWater
        """
        return self._water

    @water.setter
    def water(self, water):
        """Sets the water of this GetOrganizationSensorReadingsHistory200ResponseInner.


        :param water: The water of this GetOrganizationSensorReadingsHistory200ResponseInner.
        :type water: GetOrganizationSensorReadingsHistory200ResponseInnerWater
        """

        self._water = water
