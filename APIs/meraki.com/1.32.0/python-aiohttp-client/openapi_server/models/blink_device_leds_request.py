# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BlinkDeviceLedsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: int=None, duty: int=None, period: int=None):
        """BlinkDeviceLedsRequest - a model defined in OpenAPI

        :param duration: The duration of this BlinkDeviceLedsRequest.
        :param duty: The duty of this BlinkDeviceLedsRequest.
        :param period: The period of this BlinkDeviceLedsRequest.
        """
        self.openapi_types = {
            'duration': int,
            'duty': int,
            'period': int
        }

        self.attribute_map = {
            'duration': 'duration',
            'duty': 'duty',
            'period': 'period'
        }

        self._duration = duration
        self._duty = duty
        self._period = period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlinkDeviceLedsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The blinkDeviceLeds_request of this BlinkDeviceLedsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this BlinkDeviceLedsRequest.

        The duration in seconds. Must be between 5 and 120. Default is 20 seconds

        :return: The duration of this BlinkDeviceLedsRequest.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this BlinkDeviceLedsRequest.

        The duration in seconds. Must be between 5 and 120. Default is 20 seconds

        :param duration: The duration of this BlinkDeviceLedsRequest.
        :type duration: int
        """

        self._duration = duration

    @property
    def duty(self):
        """Gets the duty of this BlinkDeviceLedsRequest.

        The duty cycle as the percent active. Must be between 10 and 90. Default is 50.

        :return: The duty of this BlinkDeviceLedsRequest.
        :rtype: int
        """
        return self._duty

    @duty.setter
    def duty(self, duty):
        """Sets the duty of this BlinkDeviceLedsRequest.

        The duty cycle as the percent active. Must be between 10 and 90. Default is 50.

        :param duty: The duty of this BlinkDeviceLedsRequest.
        :type duty: int
        """

        self._duty = duty

    @property
    def period(self):
        """Gets the period of this BlinkDeviceLedsRequest.

        The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds

        :return: The period of this BlinkDeviceLedsRequest.
        :rtype: int
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this BlinkDeviceLedsRequest.

        The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds

        :param period: The period of this BlinkDeviceLedsRequest.
        :type period: int
        """

        self._period = period
