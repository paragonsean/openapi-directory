# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateNetworkSmTargetGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, scope: str=None):
        """CreateNetworkSmTargetGroupRequest - a model defined in OpenAPI

        :param name: The name of this CreateNetworkSmTargetGroupRequest.
        :param scope: The scope of this CreateNetworkSmTargetGroupRequest.
        """
        self.openapi_types = {
            'name': str,
            'scope': str
        }

        self.attribute_map = {
            'name': 'name',
            'scope': 'scope'
        }

        self._name = name
        self._scope = scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkSmTargetGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createNetworkSmTargetGroup_request of this CreateNetworkSmTargetGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateNetworkSmTargetGroupRequest.

        The name of this target group

        :return: The name of this CreateNetworkSmTargetGroupRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateNetworkSmTargetGroupRequest.

        The name of this target group

        :param name: The name of this CreateNetworkSmTargetGroupRequest.
        :type name: str
        """

        self._name = name

    @property
    def scope(self):
        """Gets the scope of this CreateNetworkSmTargetGroupRequest.

        The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.

        :return: The scope of this CreateNetworkSmTargetGroupRequest.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this CreateNetworkSmTargetGroupRequest.

        The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.

        :param scope: The scope of this CreateNetworkSmTargetGroupRequest.
        :type scope: str
        """

        self._scope = scope
