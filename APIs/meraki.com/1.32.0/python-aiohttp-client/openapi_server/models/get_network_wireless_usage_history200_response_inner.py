# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkWirelessUsageHistory200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_ts: datetime=None, received_kbps: int=None, sent_kbps: int=None, start_ts: datetime=None, total_kbps: int=None):
        """GetNetworkWirelessUsageHistory200ResponseInner - a model defined in OpenAPI

        :param end_ts: The end_ts of this GetNetworkWirelessUsageHistory200ResponseInner.
        :param received_kbps: The received_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :param sent_kbps: The sent_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :param start_ts: The start_ts of this GetNetworkWirelessUsageHistory200ResponseInner.
        :param total_kbps: The total_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        """
        self.openapi_types = {
            'end_ts': datetime,
            'received_kbps': int,
            'sent_kbps': int,
            'start_ts': datetime,
            'total_kbps': int
        }

        self.attribute_map = {
            'end_ts': 'endTs',
            'received_kbps': 'receivedKbps',
            'sent_kbps': 'sentKbps',
            'start_ts': 'startTs',
            'total_kbps': 'totalKbps'
        }

        self._end_ts = end_ts
        self._received_kbps = received_kbps
        self._sent_kbps = sent_kbps
        self._start_ts = start_ts
        self._total_kbps = total_kbps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkWirelessUsageHistory200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkWirelessUsageHistory_200_response_inner of this GetNetworkWirelessUsageHistory200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_ts(self):
        """Gets the end_ts of this GetNetworkWirelessUsageHistory200ResponseInner.

        The end time of the query range

        :return: The end_ts of this GetNetworkWirelessUsageHistory200ResponseInner.
        :rtype: datetime
        """
        return self._end_ts

    @end_ts.setter
    def end_ts(self, end_ts):
        """Sets the end_ts of this GetNetworkWirelessUsageHistory200ResponseInner.

        The end time of the query range

        :param end_ts: The end_ts of this GetNetworkWirelessUsageHistory200ResponseInner.
        :type end_ts: datetime
        """

        self._end_ts = end_ts

    @property
    def received_kbps(self):
        """Gets the received_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.

        Received kilobytes-per-second

        :return: The received_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :rtype: int
        """
        return self._received_kbps

    @received_kbps.setter
    def received_kbps(self, received_kbps):
        """Sets the received_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.

        Received kilobytes-per-second

        :param received_kbps: The received_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :type received_kbps: int
        """

        self._received_kbps = received_kbps

    @property
    def sent_kbps(self):
        """Gets the sent_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.

        Sent kilobytes-per-second

        :return: The sent_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :rtype: int
        """
        return self._sent_kbps

    @sent_kbps.setter
    def sent_kbps(self, sent_kbps):
        """Sets the sent_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.

        Sent kilobytes-per-second

        :param sent_kbps: The sent_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :type sent_kbps: int
        """

        self._sent_kbps = sent_kbps

    @property
    def start_ts(self):
        """Gets the start_ts of this GetNetworkWirelessUsageHistory200ResponseInner.

        The start time of the query range

        :return: The start_ts of this GetNetworkWirelessUsageHistory200ResponseInner.
        :rtype: datetime
        """
        return self._start_ts

    @start_ts.setter
    def start_ts(self, start_ts):
        """Sets the start_ts of this GetNetworkWirelessUsageHistory200ResponseInner.

        The start time of the query range

        :param start_ts: The start_ts of this GetNetworkWirelessUsageHistory200ResponseInner.
        :type start_ts: datetime
        """

        self._start_ts = start_ts

    @property
    def total_kbps(self):
        """Gets the total_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.

        Total usage in kilobytes-per-second

        :return: The total_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :rtype: int
        """
        return self._total_kbps

    @total_kbps.setter
    def total_kbps(self, total_kbps):
        """Sets the total_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.

        Total usage in kilobytes-per-second

        :param total_kbps: The total_kbps of this GetNetworkWirelessUsageHistory200ResponseInner.
        :type total_kbps: int
        """

        self._total_kbps = total_kbps
