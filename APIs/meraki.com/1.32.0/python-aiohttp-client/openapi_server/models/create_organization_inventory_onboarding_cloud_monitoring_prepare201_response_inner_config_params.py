# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_organization_inventory_onboarding_cloud_monitoring_prepare201_response_inner_config_params_tunnel import CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsTunnel
from openapi_server.models.create_organization_inventory_onboarding_cloud_monitoring_prepare201_response_inner_config_params_user import CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsUser
from openapi_server import util


class CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_static_ip: str=None, tunnel: CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsTunnel=None, user: CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsUser=None):
        """CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams - a model defined in OpenAPI

        :param cloud_static_ip: The cloud_static_ip of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :param tunnel: The tunnel of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :param user: The user of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        """
        self.openapi_types = {
            'cloud_static_ip': str,
            'tunnel': CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsTunnel,
            'user': CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsUser
        }

        self.attribute_map = {
            'cloud_static_ip': 'cloudStaticIp',
            'tunnel': 'tunnel',
            'user': 'user'
        }

        self._cloud_static_ip = cloud_static_ip
        self._tunnel = tunnel
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_static_ip(self):
        """Gets the cloud_static_ip of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.

        Static IP Address used to connect to the device

        :return: The cloud_static_ip of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :rtype: str
        """
        return self._cloud_static_ip

    @cloud_static_ip.setter
    def cloud_static_ip(self, cloud_static_ip):
        """Sets the cloud_static_ip of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.

        Static IP Address used to connect to the device

        :param cloud_static_ip: The cloud_static_ip of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :type cloud_static_ip: str
        """

        self._cloud_static_ip = cloud_static_ip

    @property
    def tunnel(self):
        """Gets the tunnel of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.


        :return: The tunnel of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :rtype: CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsTunnel
        """
        return self._tunnel

    @tunnel.setter
    def tunnel(self, tunnel):
        """Sets the tunnel of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.


        :param tunnel: The tunnel of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :type tunnel: CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsTunnel
        """

        self._tunnel = tunnel

    @property
    def user(self):
        """Gets the user of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.


        :return: The user of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :rtype: CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.


        :param user: The user of this CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams.
        :type user: CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParamsUser
        """

        self._user = user
