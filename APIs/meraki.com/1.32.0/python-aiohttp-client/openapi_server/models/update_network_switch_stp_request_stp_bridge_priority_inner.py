# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkSwitchStpRequestStpBridgePriorityInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stacks: List[str]=None, stp_priority: int=None, switch_profiles: List[str]=None, switches: List[str]=None):
        """UpdateNetworkSwitchStpRequestStpBridgePriorityInner - a model defined in OpenAPI

        :param stacks: The stacks of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :param stp_priority: The stp_priority of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :param switch_profiles: The switch_profiles of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :param switches: The switches of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        """
        self.openapi_types = {
            'stacks': List[str],
            'stp_priority': int,
            'switch_profiles': List[str],
            'switches': List[str]
        }

        self.attribute_map = {
            'stacks': 'stacks',
            'stp_priority': 'stpPriority',
            'switch_profiles': 'switchProfiles',
            'switches': 'switches'
        }

        self._stacks = stacks
        self._stp_priority = stp_priority
        self._switch_profiles = switch_profiles
        self._switches = switches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSwitchStpRequestStpBridgePriorityInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSwitchStp_request_stpBridgePriority_inner of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stacks(self):
        """Gets the stacks of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        List of stack IDs

        :return: The stacks of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :rtype: List[str]
        """
        return self._stacks

    @stacks.setter
    def stacks(self, stacks):
        """Sets the stacks of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        List of stack IDs

        :param stacks: The stacks of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :type stacks: List[str]
        """

        self._stacks = stacks

    @property
    def stp_priority(self):
        """Gets the stp_priority of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        STP priority for switch, stacks, or switch profiles

        :return: The stp_priority of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :rtype: int
        """
        return self._stp_priority

    @stp_priority.setter
    def stp_priority(self, stp_priority):
        """Sets the stp_priority of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        STP priority for switch, stacks, or switch profiles

        :param stp_priority: The stp_priority of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :type stp_priority: int
        """
        if stp_priority is None:
            raise ValueError("Invalid value for `stp_priority`, must not be `None`")

        self._stp_priority = stp_priority

    @property
    def switch_profiles(self):
        """Gets the switch_profiles of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        List of switch profile IDs

        :return: The switch_profiles of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :rtype: List[str]
        """
        return self._switch_profiles

    @switch_profiles.setter
    def switch_profiles(self, switch_profiles):
        """Sets the switch_profiles of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        List of switch profile IDs

        :param switch_profiles: The switch_profiles of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :type switch_profiles: List[str]
        """

        self._switch_profiles = switch_profiles

    @property
    def switches(self):
        """Gets the switches of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        List of switch serial numbers

        :return: The switches of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :rtype: List[str]
        """
        return self._switches

    @switches.setter
    def switches(self, switches):
        """Sets the switches of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.

        List of switch serial numbers

        :param switches: The switches of this UpdateNetworkSwitchStpRequestStpBridgePriorityInner.
        :type switches: List[str]
        """

        self._switches = switches
