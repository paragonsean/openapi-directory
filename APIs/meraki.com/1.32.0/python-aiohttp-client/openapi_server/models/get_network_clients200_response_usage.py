# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNetworkClients200ResponseUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recv: float=None, sent: float=None):
        """GetNetworkClients200ResponseUsage - a model defined in OpenAPI

        :param recv: The recv of this GetNetworkClients200ResponseUsage.
        :param sent: The sent of this GetNetworkClients200ResponseUsage.
        """
        self.openapi_types = {
            'recv': float,
            'sent': float
        }

        self.attribute_map = {
            'recv': 'recv',
            'sent': 'sent'
        }

        self._recv = recv
        self._sent = sent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkClients200ResponseUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkClients_200_response_usage of this GetNetworkClients200ResponseUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recv(self):
        """Gets the recv of this GetNetworkClients200ResponseUsage.

        Usage received by the client

        :return: The recv of this GetNetworkClients200ResponseUsage.
        :rtype: float
        """
        return self._recv

    @recv.setter
    def recv(self, recv):
        """Sets the recv of this GetNetworkClients200ResponseUsage.

        Usage received by the client

        :param recv: The recv of this GetNetworkClients200ResponseUsage.
        :type recv: float
        """

        self._recv = recv

    @property
    def sent(self):
        """Gets the sent of this GetNetworkClients200ResponseUsage.

        Usage sent by the client

        :return: The sent of this GetNetworkClients200ResponseUsage.
        :rtype: float
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this GetNetworkClients200ResponseUsage.

        Usage sent by the client

        :param sent: The sent of this GetNetworkClients200ResponseUsage.
        :type sent: float
        """

        self._sent = sent
