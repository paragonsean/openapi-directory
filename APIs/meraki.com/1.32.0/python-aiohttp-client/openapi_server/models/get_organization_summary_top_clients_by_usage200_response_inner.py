# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_summary_top_clients_by_usage200_response_inner_network import GetOrganizationSummaryTopClientsByUsage200ResponseInnerNetwork
from openapi_server.models.get_organization_summary_top_clients_by_usage200_response_inner_usage import GetOrganizationSummaryTopClientsByUsage200ResponseInnerUsage
from openapi_server import util


class GetOrganizationSummaryTopClientsByUsage200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, mac: str=None, name: str=None, network: GetOrganizationSummaryTopClientsByUsage200ResponseInnerNetwork=None, usage: GetOrganizationSummaryTopClientsByUsage200ResponseInnerUsage=None):
        """GetOrganizationSummaryTopClientsByUsage200ResponseInner - a model defined in OpenAPI

        :param id: The id of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :param mac: The mac of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :param name: The name of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :param network: The network of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :param usage: The usage of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        """
        self.openapi_types = {
            'id': str,
            'mac': str,
            'name': str,
            'network': GetOrganizationSummaryTopClientsByUsage200ResponseInnerNetwork,
            'usage': GetOrganizationSummaryTopClientsByUsage200ResponseInnerUsage
        }

        self.attribute_map = {
            'id': 'id',
            'mac': 'mac',
            'name': 'name',
            'network': 'network',
            'usage': 'usage'
        }

        self._id = id
        self._mac = mac
        self._name = name
        self._network = network
        self._usage = usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSummaryTopClientsByUsage200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSummaryTopClientsByUsage_200_response_inner of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.

        ID of client

        :return: The id of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.

        ID of client

        :param id: The id of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def mac(self):
        """Gets the mac of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.

        MAC address of client

        :return: The mac of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.

        MAC address of client

        :param mac: The mac of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def name(self):
        """Gets the name of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.

        Name of client

        :return: The name of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.

        Name of client

        :param name: The name of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.


        :return: The network of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :rtype: GetOrganizationSummaryTopClientsByUsage200ResponseInnerNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.


        :param network: The network of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :type network: GetOrganizationSummaryTopClientsByUsage200ResponseInnerNetwork
        """

        self._network = network

    @property
    def usage(self):
        """Gets the usage of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.


        :return: The usage of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :rtype: GetOrganizationSummaryTopClientsByUsage200ResponseInnerUsage
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.


        :param usage: The usage of this GetOrganizationSummaryTopClientsByUsage200ResponseInner.
        :type usage: GetOrganizationSummaryTopClientsByUsage200ResponseInnerUsage
        """

        self._usage = usage
