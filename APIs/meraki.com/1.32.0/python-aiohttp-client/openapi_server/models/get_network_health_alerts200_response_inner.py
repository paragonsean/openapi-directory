# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_health_alerts200_response_inner_scope import GetNetworkHealthAlerts200ResponseInnerScope
from openapi_server import util


class GetNetworkHealthAlerts200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, id: str=None, scope: GetNetworkHealthAlerts200ResponseInnerScope=None, severity: str=None, type: str=None):
        """GetNetworkHealthAlerts200ResponseInner - a model defined in OpenAPI

        :param category: The category of this GetNetworkHealthAlerts200ResponseInner.
        :param id: The id of this GetNetworkHealthAlerts200ResponseInner.
        :param scope: The scope of this GetNetworkHealthAlerts200ResponseInner.
        :param severity: The severity of this GetNetworkHealthAlerts200ResponseInner.
        :param type: The type of this GetNetworkHealthAlerts200ResponseInner.
        """
        self.openapi_types = {
            'category': str,
            'id': str,
            'scope': GetNetworkHealthAlerts200ResponseInnerScope,
            'severity': str,
            'type': str
        }

        self.attribute_map = {
            'category': 'category',
            'id': 'id',
            'scope': 'scope',
            'severity': 'severity',
            'type': 'type'
        }

        self._category = category
        self._id = id
        self._scope = scope
        self._severity = severity
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkHealthAlerts200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkHealthAlerts_200_response_inner of this GetNetworkHealthAlerts200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this GetNetworkHealthAlerts200ResponseInner.

        Category of the alert

        :return: The category of this GetNetworkHealthAlerts200ResponseInner.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GetNetworkHealthAlerts200ResponseInner.

        Category of the alert

        :param category: The category of this GetNetworkHealthAlerts200ResponseInner.
        :type category: str
        """

        self._category = category

    @property
    def id(self):
        """Gets the id of this GetNetworkHealthAlerts200ResponseInner.

        Alert identifier. Value can be empty

        :return: The id of this GetNetworkHealthAlerts200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetNetworkHealthAlerts200ResponseInner.

        Alert identifier. Value can be empty

        :param id: The id of this GetNetworkHealthAlerts200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def scope(self):
        """Gets the scope of this GetNetworkHealthAlerts200ResponseInner.


        :return: The scope of this GetNetworkHealthAlerts200ResponseInner.
        :rtype: GetNetworkHealthAlerts200ResponseInnerScope
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this GetNetworkHealthAlerts200ResponseInner.


        :param scope: The scope of this GetNetworkHealthAlerts200ResponseInner.
        :type scope: GetNetworkHealthAlerts200ResponseInnerScope
        """

        self._scope = scope

    @property
    def severity(self):
        """Gets the severity of this GetNetworkHealthAlerts200ResponseInner.

        Severity of the alert

        :return: The severity of this GetNetworkHealthAlerts200ResponseInner.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this GetNetworkHealthAlerts200ResponseInner.

        Severity of the alert

        :param severity: The severity of this GetNetworkHealthAlerts200ResponseInner.
        :type severity: str
        """
        allowed_values = ["error", "info", "warning"]  # noqa: E501
        if severity not in allowed_values:
            raise ValueError(
                "Invalid value for `severity` ({0}), must be one of {1}"
                .format(severity, allowed_values)
            )

        self._severity = severity

    @property
    def type(self):
        """Gets the type of this GetNetworkHealthAlerts200ResponseInner.

        Alert type

        :return: The type of this GetNetworkHealthAlerts200ResponseInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetNetworkHealthAlerts200ResponseInner.

        Alert type

        :param type: The type of this GetNetworkHealthAlerts200ResponseInner.
        :type type: str
        """

        self._type = type
