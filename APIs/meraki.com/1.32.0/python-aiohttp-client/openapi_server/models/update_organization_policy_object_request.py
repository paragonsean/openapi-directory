# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateOrganizationPolicyObjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cidr: str=None, fqdn: str=None, group_ids: List[int]=None, ip: str=None, mask: str=None, name: str=None):
        """UpdateOrganizationPolicyObjectRequest - a model defined in OpenAPI

        :param cidr: The cidr of this UpdateOrganizationPolicyObjectRequest.
        :param fqdn: The fqdn of this UpdateOrganizationPolicyObjectRequest.
        :param group_ids: The group_ids of this UpdateOrganizationPolicyObjectRequest.
        :param ip: The ip of this UpdateOrganizationPolicyObjectRequest.
        :param mask: The mask of this UpdateOrganizationPolicyObjectRequest.
        :param name: The name of this UpdateOrganizationPolicyObjectRequest.
        """
        self.openapi_types = {
            'cidr': str,
            'fqdn': str,
            'group_ids': List[int],
            'ip': str,
            'mask': str,
            'name': str
        }

        self.attribute_map = {
            'cidr': 'cidr',
            'fqdn': 'fqdn',
            'group_ids': 'groupIds',
            'ip': 'ip',
            'mask': 'mask',
            'name': 'name'
        }

        self._cidr = cidr
        self._fqdn = fqdn
        self._group_ids = group_ids
        self._ip = ip
        self._mask = mask
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOrganizationPolicyObjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateOrganizationPolicyObject_request of this UpdateOrganizationPolicyObjectRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cidr(self):
        """Gets the cidr of this UpdateOrganizationPolicyObjectRequest.

        CIDR Value of a policy object (e.g. 10.11.12.1/24\")

        :return: The cidr of this UpdateOrganizationPolicyObjectRequest.
        :rtype: str
        """
        return self._cidr

    @cidr.setter
    def cidr(self, cidr):
        """Sets the cidr of this UpdateOrganizationPolicyObjectRequest.

        CIDR Value of a policy object (e.g. 10.11.12.1/24\")

        :param cidr: The cidr of this UpdateOrganizationPolicyObjectRequest.
        :type cidr: str
        """

        self._cidr = cidr

    @property
    def fqdn(self):
        """Gets the fqdn of this UpdateOrganizationPolicyObjectRequest.

        Fully qualified domain name of policy object (e.g. \"example.com\")

        :return: The fqdn of this UpdateOrganizationPolicyObjectRequest.
        :rtype: str
        """
        return self._fqdn

    @fqdn.setter
    def fqdn(self, fqdn):
        """Sets the fqdn of this UpdateOrganizationPolicyObjectRequest.

        Fully qualified domain name of policy object (e.g. \"example.com\")

        :param fqdn: The fqdn of this UpdateOrganizationPolicyObjectRequest.
        :type fqdn: str
        """

        self._fqdn = fqdn

    @property
    def group_ids(self):
        """Gets the group_ids of this UpdateOrganizationPolicyObjectRequest.

        The IDs of policy object groups the policy object belongs to

        :return: The group_ids of this UpdateOrganizationPolicyObjectRequest.
        :rtype: List[int]
        """
        return self._group_ids

    @group_ids.setter
    def group_ids(self, group_ids):
        """Sets the group_ids of this UpdateOrganizationPolicyObjectRequest.

        The IDs of policy object groups the policy object belongs to

        :param group_ids: The group_ids of this UpdateOrganizationPolicyObjectRequest.
        :type group_ids: List[int]
        """

        self._group_ids = group_ids

    @property
    def ip(self):
        """Gets the ip of this UpdateOrganizationPolicyObjectRequest.

        IP Address of a policy object (e.g. \"1.2.3.4\")

        :return: The ip of this UpdateOrganizationPolicyObjectRequest.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this UpdateOrganizationPolicyObjectRequest.

        IP Address of a policy object (e.g. \"1.2.3.4\")

        :param ip: The ip of this UpdateOrganizationPolicyObjectRequest.
        :type ip: str
        """

        self._ip = ip

    @property
    def mask(self):
        """Gets the mask of this UpdateOrganizationPolicyObjectRequest.

        Mask of a policy object (e.g. \"255.255.0.0\")

        :return: The mask of this UpdateOrganizationPolicyObjectRequest.
        :rtype: str
        """
        return self._mask

    @mask.setter
    def mask(self, mask):
        """Sets the mask of this UpdateOrganizationPolicyObjectRequest.

        Mask of a policy object (e.g. \"255.255.0.0\")

        :param mask: The mask of this UpdateOrganizationPolicyObjectRequest.
        :type mask: str
        """

        self._mask = mask

    @property
    def name(self):
        """Gets the name of this UpdateOrganizationPolicyObjectRequest.

        Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)

        :return: The name of this UpdateOrganizationPolicyObjectRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateOrganizationPolicyObjectRequest.

        Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)

        :param name: The name of this UpdateOrganizationPolicyObjectRequest.
        :type name: str
        """

        self._name = name
