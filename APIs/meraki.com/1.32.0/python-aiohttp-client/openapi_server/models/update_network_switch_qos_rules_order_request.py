# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkSwitchQosRulesOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_ids: List[str]=None):
        """UpdateNetworkSwitchQosRulesOrderRequest - a model defined in OpenAPI

        :param rule_ids: The rule_ids of this UpdateNetworkSwitchQosRulesOrderRequest.
        """
        self.openapi_types = {
            'rule_ids': List[str]
        }

        self.attribute_map = {
            'rule_ids': 'ruleIds'
        }

        self._rule_ids = rule_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSwitchQosRulesOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSwitchQosRulesOrder_request of this UpdateNetworkSwitchQosRulesOrderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_ids(self):
        """Gets the rule_ids of this UpdateNetworkSwitchQosRulesOrderRequest.

        A list of quality of service rule IDs arranged in order in which they should be processed by the switch.

        :return: The rule_ids of this UpdateNetworkSwitchQosRulesOrderRequest.
        :rtype: List[str]
        """
        return self._rule_ids

    @rule_ids.setter
    def rule_ids(self, rule_ids):
        """Sets the rule_ids of this UpdateNetworkSwitchQosRulesOrderRequest.

        A list of quality of service rule IDs arranged in order in which they should be processed by the switch.

        :param rule_ids: The rule_ids of this UpdateNetworkSwitchQosRulesOrderRequest.
        :type rule_ids: List[str]
        """
        if rule_ids is None:
            raise ValueError("Invalid value for `rule_ids`, must not be `None`")

        self._rule_ids = rule_ids
