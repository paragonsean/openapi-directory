# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkCellularGatewayDhcpRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dhcp_lease_time: str=None, dns_custom_nameservers: List[str]=None, dns_nameservers: str=None):
        """UpdateNetworkCellularGatewayDhcpRequest - a model defined in OpenAPI

        :param dhcp_lease_time: The dhcp_lease_time of this UpdateNetworkCellularGatewayDhcpRequest.
        :param dns_custom_nameservers: The dns_custom_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.
        :param dns_nameservers: The dns_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.
        """
        self.openapi_types = {
            'dhcp_lease_time': str,
            'dns_custom_nameservers': List[str],
            'dns_nameservers': str
        }

        self.attribute_map = {
            'dhcp_lease_time': 'dhcpLeaseTime',
            'dns_custom_nameservers': 'dnsCustomNameservers',
            'dns_nameservers': 'dnsNameservers'
        }

        self._dhcp_lease_time = dhcp_lease_time
        self._dns_custom_nameservers = dns_custom_nameservers
        self._dns_nameservers = dns_nameservers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkCellularGatewayDhcpRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkCellularGatewayDhcp_request of this UpdateNetworkCellularGatewayDhcpRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dhcp_lease_time(self):
        """Gets the dhcp_lease_time of this UpdateNetworkCellularGatewayDhcpRequest.

        DHCP Lease time for all MG of the network. Possible values are '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.

        :return: The dhcp_lease_time of this UpdateNetworkCellularGatewayDhcpRequest.
        :rtype: str
        """
        return self._dhcp_lease_time

    @dhcp_lease_time.setter
    def dhcp_lease_time(self, dhcp_lease_time):
        """Sets the dhcp_lease_time of this UpdateNetworkCellularGatewayDhcpRequest.

        DHCP Lease time for all MG of the network. Possible values are '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.

        :param dhcp_lease_time: The dhcp_lease_time of this UpdateNetworkCellularGatewayDhcpRequest.
        :type dhcp_lease_time: str
        """

        self._dhcp_lease_time = dhcp_lease_time

    @property
    def dns_custom_nameservers(self):
        """Gets the dns_custom_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.

        list of fixed IPs representing the the DNS Name servers when the mode is 'custom'

        :return: The dns_custom_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.
        :rtype: List[str]
        """
        return self._dns_custom_nameservers

    @dns_custom_nameservers.setter
    def dns_custom_nameservers(self, dns_custom_nameservers):
        """Sets the dns_custom_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.

        list of fixed IPs representing the the DNS Name servers when the mode is 'custom'

        :param dns_custom_nameservers: The dns_custom_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.
        :type dns_custom_nameservers: List[str]
        """

        self._dns_custom_nameservers = dns_custom_nameservers

    @property
    def dns_nameservers(self):
        """Gets the dns_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.

        DNS name servers mode for all MG of the network. Possible values are: 'upstream_dns', 'google_dns', 'opendns', 'custom'.

        :return: The dns_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.
        :rtype: str
        """
        return self._dns_nameservers

    @dns_nameservers.setter
    def dns_nameservers(self, dns_nameservers):
        """Sets the dns_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.

        DNS name servers mode for all MG of the network. Possible values are: 'upstream_dns', 'google_dns', 'opendns', 'custom'.

        :param dns_nameservers: The dns_nameservers of this UpdateNetworkCellularGatewayDhcpRequest.
        :type dns_nameservers: str
        """

        self._dns_nameservers = dns_nameservers
