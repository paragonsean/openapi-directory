# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_network_health_alerts200_response_inner_scope_devices_inner_clients_inner import GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner
from openapi_server.models.get_network_health_alerts200_response_inner_scope_devices_inner_lldp import GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp
from openapi_server import util


class GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clients: List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner]=None, lldp: GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp=None, mac: str=None, name: str=None, product_type: str=None, serial: str=None, url: str=None):
        """GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner - a model defined in OpenAPI

        :param clients: The clients of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :param lldp: The lldp of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :param mac: The mac of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :param name: The name of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :param product_type: The product_type of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :param serial: The serial of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :param url: The url of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        """
        self.openapi_types = {
            'clients': List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner],
            'lldp': GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp,
            'mac': str,
            'name': str,
            'product_type': str,
            'serial': str,
            'url': str
        }

        self.attribute_map = {
            'clients': 'clients',
            'lldp': 'lldp',
            'mac': 'mac',
            'name': 'name',
            'product_type': 'productType',
            'serial': 'serial',
            'url': 'url'
        }

        self._clients = clients
        self._lldp = lldp
        self._mac = mac
        self._name = name
        self._product_type = product_type
        self._serial = serial
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNetworkHealthAlerts_200_response_inner_scope_devices_inner of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clients(self):
        """Gets the clients of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Clients related to the device

        :return: The clients of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner]
        """
        return self._clients

    @clients.setter
    def clients(self, clients):
        """Sets the clients of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Clients related to the device

        :param clients: The clients of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type clients: List[GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner]
        """

        self._clients = clients

    @property
    def lldp(self):
        """Gets the lldp of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.


        :return: The lldp of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp
        """
        return self._lldp

    @lldp.setter
    def lldp(self, lldp):
        """Sets the lldp of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.


        :param lldp: The lldp of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type lldp: GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp
        """

        self._lldp = lldp

    @property
    def mac(self):
        """Gets the mac of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        The mac address of the device

        :return: The mac of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        The mac address of the device

        :param mac: The mac of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def name(self):
        """Gets the name of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Name of the device

        :return: The name of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Name of the device

        :param name: The name of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type name: str
        """

        self._name = name

    @property
    def product_type(self):
        """Gets the product_type of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Product type of the device

        :return: The product_type of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Product type of the device

        :param product_type: The product_type of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def serial(self):
        """Gets the serial of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Serial number of the device

        :return: The serial of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        Serial number of the device

        :param serial: The serial of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def url(self):
        """Gets the url of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        URL to the device

        :return: The url of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.

        URL to the device

        :param url: The url of this GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.
        :type url: str
        """

        self._url = url
