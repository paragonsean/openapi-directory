# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_summary_top_appliances_by_utilization200_response_inner_network import GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork
from openapi_server.models.get_organization_summary_top_appliances_by_utilization200_response_inner_utilization import GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization
from openapi_server import util


class GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mac: str=None, model: str=None, name: str=None, network: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork=None, serial: str=None, utilization: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization=None):
        """GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner - a model defined in OpenAPI

        :param mac: The mac of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :param model: The model of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :param name: The name of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :param network: The network of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :param serial: The serial of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :param utilization: The utilization of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        """
        self.openapi_types = {
            'mac': str,
            'model': str,
            'name': str,
            'network': GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork,
            'serial': str,
            'utilization': GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization
        }

        self.attribute_map = {
            'mac': 'mac',
            'model': 'model',
            'name': 'name',
            'network': 'network',
            'serial': 'serial',
            'utilization': 'utilization'
        }

        self._mac = mac
        self._model = model
        self._name = name
        self._network = network
        self._serial = serial
        self._utilization = utilization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSummaryTopAppliancesByUtilization_200_response_inner of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mac(self):
        """Gets the mac of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Mac address of the appliance

        :return: The mac of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Mac address of the appliance

        :param mac: The mac of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def model(self):
        """Gets the model of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Model of the appliance

        :return: The model of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Model of the appliance

        :param model: The model of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :type model: str
        """

        self._model = model

    @property
    def name(self):
        """Gets the name of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Name of the appliance

        :return: The name of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Name of the appliance

        :param name: The name of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.


        :return: The network of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :rtype: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.


        :param network: The network of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :type network: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork
        """

        self._network = network

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Serial number of the appliance

        :return: The serial of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.

        Serial number of the appliance

        :param serial: The serial of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :type serial: str
        """

        self._serial = serial

    @property
    def utilization(self):
        """Gets the utilization of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.


        :return: The utilization of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :rtype: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization
        """
        return self._utilization

    @utilization.setter
    def utilization(self, utilization):
        """Sets the utilization of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.


        :param utilization: The utilization of this GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner.
        :type utilization: GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerUtilization
        """

        self._utilization = utilization
