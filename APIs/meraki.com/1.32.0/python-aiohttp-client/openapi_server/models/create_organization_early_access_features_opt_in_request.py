# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateOrganizationEarlyAccessFeaturesOptInRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit_scope_to_networks: List[str]=None, short_name: str=None):
        """CreateOrganizationEarlyAccessFeaturesOptInRequest - a model defined in OpenAPI

        :param limit_scope_to_networks: The limit_scope_to_networks of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        :param short_name: The short_name of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        """
        self.openapi_types = {
            'limit_scope_to_networks': List[str],
            'short_name': str
        }

        self.attribute_map = {
            'limit_scope_to_networks': 'limitScopeToNetworks',
            'short_name': 'shortName'
        }

        self._limit_scope_to_networks = limit_scope_to_networks
        self._short_name = short_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOrganizationEarlyAccessFeaturesOptInRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createOrganizationEarlyAccessFeaturesOptIn_request of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit_scope_to_networks(self):
        """Gets the limit_scope_to_networks of this CreateOrganizationEarlyAccessFeaturesOptInRequest.

        A list of network IDs to apply the opt-in to

        :return: The limit_scope_to_networks of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        :rtype: List[str]
        """
        return self._limit_scope_to_networks

    @limit_scope_to_networks.setter
    def limit_scope_to_networks(self, limit_scope_to_networks):
        """Sets the limit_scope_to_networks of this CreateOrganizationEarlyAccessFeaturesOptInRequest.

        A list of network IDs to apply the opt-in to

        :param limit_scope_to_networks: The limit_scope_to_networks of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        :type limit_scope_to_networks: List[str]
        """

        self._limit_scope_to_networks = limit_scope_to_networks

    @property
    def short_name(self):
        """Gets the short_name of this CreateOrganizationEarlyAccessFeaturesOptInRequest.

        Short name of the early access feature

        :return: The short_name of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this CreateOrganizationEarlyAccessFeaturesOptInRequest.

        Short name of the early access feature

        :param short_name: The short_name of this CreateOrganizationEarlyAccessFeaturesOptInRequest.
        :type short_name: str
        """
        if short_name is None:
            raise ValueError("Invalid value for `short_name`, must not be `None`")

        self._short_name = short_name
