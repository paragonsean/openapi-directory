# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_organization_switch_ports_by_switch200_response_inner_network import GetOrganizationSwitchPortsBySwitch200ResponseInnerNetwork
from openapi_server.models.get_organization_switch_ports_by_switch200_response_inner_ports_inner import GetOrganizationSwitchPortsBySwitch200ResponseInnerPortsInner
from openapi_server import util


class GetOrganizationSwitchPortsBySwitch200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mac: str=None, model: str=None, name: str=None, network: GetOrganizationSwitchPortsBySwitch200ResponseInnerNetwork=None, ports: List[GetOrganizationSwitchPortsBySwitch200ResponseInnerPortsInner]=None, serial: str=None):
        """GetOrganizationSwitchPortsBySwitch200ResponseInner - a model defined in OpenAPI

        :param mac: The mac of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :param model: The model of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :param name: The name of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :param network: The network of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :param ports: The ports of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :param serial: The serial of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        """
        self.openapi_types = {
            'mac': str,
            'model': str,
            'name': str,
            'network': GetOrganizationSwitchPortsBySwitch200ResponseInnerNetwork,
            'ports': List[GetOrganizationSwitchPortsBySwitch200ResponseInnerPortsInner],
            'serial': str
        }

        self.attribute_map = {
            'mac': 'mac',
            'model': 'model',
            'name': 'name',
            'network': 'network',
            'ports': 'ports',
            'serial': 'serial'
        }

        self._mac = mac
        self._model = model
        self._name = name
        self._network = network
        self._ports = ports
        self._serial = serial

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOrganizationSwitchPortsBySwitch200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOrganizationSwitchPortsBySwitch_200_response_inner of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mac(self):
        """Gets the mac of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        MAC address of the switch

        :return: The mac of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        MAC address of the switch

        :param mac: The mac of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :type mac: str
        """

        self._mac = mac

    @property
    def model(self):
        """Gets the model of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Model of the switch

        :return: The model of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Model of the switch

        :param model: The model of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :type model: str
        """

        self._model = model

    @property
    def name(self):
        """Gets the name of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Name of the switch

        :return: The name of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Name of the switch

        :param name: The name of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GetOrganizationSwitchPortsBySwitch200ResponseInner.


        :return: The network of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :rtype: GetOrganizationSwitchPortsBySwitch200ResponseInnerNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetOrganizationSwitchPortsBySwitch200ResponseInner.


        :param network: The network of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :type network: GetOrganizationSwitchPortsBySwitch200ResponseInnerNetwork
        """

        self._network = network

    @property
    def ports(self):
        """Gets the ports of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Ports belonging to the switch

        :return: The ports of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :rtype: List[GetOrganizationSwitchPortsBySwitch200ResponseInnerPortsInner]
        """
        return self._ports

    @ports.setter
    def ports(self, ports):
        """Sets the ports of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Ports belonging to the switch

        :param ports: The ports of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :type ports: List[GetOrganizationSwitchPortsBySwitch200ResponseInnerPortsInner]
        """

        self._ports = ports

    @property
    def serial(self):
        """Gets the serial of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Serial of the switch

        :return: The serial of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this GetOrganizationSwitchPortsBySwitch200ResponseInner.

        Serial of the switch

        :param serial: The serial of this GetOrganizationSwitchPortsBySwitch200ResponseInner.
        :type serial: str
        """

        self._serial = serial
