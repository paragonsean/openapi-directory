/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkInsightApplicationHealthByTime200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkInsightApplicationHealthByTime200ResponseInner {
  public static final String SERIALIZED_NAME_END_TS = "endTs";
  @SerializedName(SERIALIZED_NAME_END_TS)
  private OffsetDateTime endTs;

  public static final String SERIALIZED_NAME_LAN_GOODPUT = "lanGoodput";
  @SerializedName(SERIALIZED_NAME_LAN_GOODPUT)
  private Integer lanGoodput;

  public static final String SERIALIZED_NAME_LAN_LATENCY_MS = "lanLatencyMs";
  @SerializedName(SERIALIZED_NAME_LAN_LATENCY_MS)
  private Float lanLatencyMs;

  public static final String SERIALIZED_NAME_LAN_LOSS_PERCENT = "lanLossPercent";
  @SerializedName(SERIALIZED_NAME_LAN_LOSS_PERCENT)
  private Float lanLossPercent;

  public static final String SERIALIZED_NAME_NUM_CLIENTS = "numClients";
  @SerializedName(SERIALIZED_NAME_NUM_CLIENTS)
  private Integer numClients;

  public static final String SERIALIZED_NAME_RECV = "recv";
  @SerializedName(SERIALIZED_NAME_RECV)
  private Integer recv;

  public static final String SERIALIZED_NAME_RESPONSE_DURATION = "responseDuration";
  @SerializedName(SERIALIZED_NAME_RESPONSE_DURATION)
  private Integer responseDuration;

  public static final String SERIALIZED_NAME_SENT = "sent";
  @SerializedName(SERIALIZED_NAME_SENT)
  private Integer sent;

  public static final String SERIALIZED_NAME_START_TS = "startTs";
  @SerializedName(SERIALIZED_NAME_START_TS)
  private OffsetDateTime startTs;

  public static final String SERIALIZED_NAME_WAN_GOODPUT = "wanGoodput";
  @SerializedName(SERIALIZED_NAME_WAN_GOODPUT)
  private Integer wanGoodput;

  public static final String SERIALIZED_NAME_WAN_LATENCY_MS = "wanLatencyMs";
  @SerializedName(SERIALIZED_NAME_WAN_LATENCY_MS)
  private Float wanLatencyMs;

  public static final String SERIALIZED_NAME_WAN_LOSS_PERCENT = "wanLossPercent";
  @SerializedName(SERIALIZED_NAME_WAN_LOSS_PERCENT)
  private Float wanLossPercent;

  public GetNetworkInsightApplicationHealthByTime200ResponseInner() {
  }

  public GetNetworkInsightApplicationHealthByTime200ResponseInner endTs(OffsetDateTime endTs) {
    this.endTs = endTs;
    return this;
  }

  /**
   * The end time of the query range
   * @return endTs
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTs() {
    return endTs;
  }

  public void setEndTs(OffsetDateTime endTs) {
    this.endTs = endTs;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner lanGoodput(Integer lanGoodput) {
    this.lanGoodput = lanGoodput;
    return this;
  }

  /**
   * LAN goodput (Number of useful information bits delivered over a LAN per unit of time)
   * @return lanGoodput
   */
  @javax.annotation.Nullable
  public Integer getLanGoodput() {
    return lanGoodput;
  }

  public void setLanGoodput(Integer lanGoodput) {
    this.lanGoodput = lanGoodput;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner lanLatencyMs(Float lanLatencyMs) {
    this.lanLatencyMs = lanLatencyMs;
    return this;
  }

  /**
   * LAN latency in milliseconds
   * @return lanLatencyMs
   */
  @javax.annotation.Nullable
  public Float getLanLatencyMs() {
    return lanLatencyMs;
  }

  public void setLanLatencyMs(Float lanLatencyMs) {
    this.lanLatencyMs = lanLatencyMs;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner lanLossPercent(Float lanLossPercent) {
    this.lanLossPercent = lanLossPercent;
    return this;
  }

  /**
   * LAN loss percentage
   * @return lanLossPercent
   */
  @javax.annotation.Nullable
  public Float getLanLossPercent() {
    return lanLossPercent;
  }

  public void setLanLossPercent(Float lanLossPercent) {
    this.lanLossPercent = lanLossPercent;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner numClients(Integer numClients) {
    this.numClients = numClients;
    return this;
  }

  /**
   * Number of clients
   * @return numClients
   */
  @javax.annotation.Nullable
  public Integer getNumClients() {
    return numClients;
  }

  public void setNumClients(Integer numClients) {
    this.numClients = numClients;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner recv(Integer recv) {
    this.recv = recv;
    return this;
  }

  /**
   * Received kilobytes-per-second
   * @return recv
   */
  @javax.annotation.Nullable
  public Integer getRecv() {
    return recv;
  }

  public void setRecv(Integer recv) {
    this.recv = recv;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner responseDuration(Integer responseDuration) {
    this.responseDuration = responseDuration;
    return this;
  }

  /**
   * Duration of the response, in milliseconds
   * @return responseDuration
   */
  @javax.annotation.Nullable
  public Integer getResponseDuration() {
    return responseDuration;
  }

  public void setResponseDuration(Integer responseDuration) {
    this.responseDuration = responseDuration;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner sent(Integer sent) {
    this.sent = sent;
    return this;
  }

  /**
   * Sent kilobytes-per-second
   * @return sent
   */
  @javax.annotation.Nullable
  public Integer getSent() {
    return sent;
  }

  public void setSent(Integer sent) {
    this.sent = sent;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner startTs(OffsetDateTime startTs) {
    this.startTs = startTs;
    return this;
  }

  /**
   * The start time of the query range
   * @return startTs
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTs() {
    return startTs;
  }

  public void setStartTs(OffsetDateTime startTs) {
    this.startTs = startTs;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner wanGoodput(Integer wanGoodput) {
    this.wanGoodput = wanGoodput;
    return this;
  }

  /**
   * WAN goodput (Number of useful information bits delivered over a WAN per unit of time)
   * @return wanGoodput
   */
  @javax.annotation.Nullable
  public Integer getWanGoodput() {
    return wanGoodput;
  }

  public void setWanGoodput(Integer wanGoodput) {
    this.wanGoodput = wanGoodput;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner wanLatencyMs(Float wanLatencyMs) {
    this.wanLatencyMs = wanLatencyMs;
    return this;
  }

  /**
   * WAN latency in milliseconds
   * @return wanLatencyMs
   */
  @javax.annotation.Nullable
  public Float getWanLatencyMs() {
    return wanLatencyMs;
  }

  public void setWanLatencyMs(Float wanLatencyMs) {
    this.wanLatencyMs = wanLatencyMs;
  }


  public GetNetworkInsightApplicationHealthByTime200ResponseInner wanLossPercent(Float wanLossPercent) {
    this.wanLossPercent = wanLossPercent;
    return this;
  }

  /**
   * WAN loss percentage
   * @return wanLossPercent
   */
  @javax.annotation.Nullable
  public Float getWanLossPercent() {
    return wanLossPercent;
  }

  public void setWanLossPercent(Float wanLossPercent) {
    this.wanLossPercent = wanLossPercent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkInsightApplicationHealthByTime200ResponseInner getNetworkInsightApplicationHealthByTime200ResponseInner = (GetNetworkInsightApplicationHealthByTime200ResponseInner) o;
    return Objects.equals(this.endTs, getNetworkInsightApplicationHealthByTime200ResponseInner.endTs) &&
        Objects.equals(this.lanGoodput, getNetworkInsightApplicationHealthByTime200ResponseInner.lanGoodput) &&
        Objects.equals(this.lanLatencyMs, getNetworkInsightApplicationHealthByTime200ResponseInner.lanLatencyMs) &&
        Objects.equals(this.lanLossPercent, getNetworkInsightApplicationHealthByTime200ResponseInner.lanLossPercent) &&
        Objects.equals(this.numClients, getNetworkInsightApplicationHealthByTime200ResponseInner.numClients) &&
        Objects.equals(this.recv, getNetworkInsightApplicationHealthByTime200ResponseInner.recv) &&
        Objects.equals(this.responseDuration, getNetworkInsightApplicationHealthByTime200ResponseInner.responseDuration) &&
        Objects.equals(this.sent, getNetworkInsightApplicationHealthByTime200ResponseInner.sent) &&
        Objects.equals(this.startTs, getNetworkInsightApplicationHealthByTime200ResponseInner.startTs) &&
        Objects.equals(this.wanGoodput, getNetworkInsightApplicationHealthByTime200ResponseInner.wanGoodput) &&
        Objects.equals(this.wanLatencyMs, getNetworkInsightApplicationHealthByTime200ResponseInner.wanLatencyMs) &&
        Objects.equals(this.wanLossPercent, getNetworkInsightApplicationHealthByTime200ResponseInner.wanLossPercent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTs, lanGoodput, lanLatencyMs, lanLossPercent, numClients, recv, responseDuration, sent, startTs, wanGoodput, wanLatencyMs, wanLossPercent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkInsightApplicationHealthByTime200ResponseInner {\n");
    sb.append("    endTs: ").append(toIndentedString(endTs)).append("\n");
    sb.append("    lanGoodput: ").append(toIndentedString(lanGoodput)).append("\n");
    sb.append("    lanLatencyMs: ").append(toIndentedString(lanLatencyMs)).append("\n");
    sb.append("    lanLossPercent: ").append(toIndentedString(lanLossPercent)).append("\n");
    sb.append("    numClients: ").append(toIndentedString(numClients)).append("\n");
    sb.append("    recv: ").append(toIndentedString(recv)).append("\n");
    sb.append("    responseDuration: ").append(toIndentedString(responseDuration)).append("\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    startTs: ").append(toIndentedString(startTs)).append("\n");
    sb.append("    wanGoodput: ").append(toIndentedString(wanGoodput)).append("\n");
    sb.append("    wanLatencyMs: ").append(toIndentedString(wanLatencyMs)).append("\n");
    sb.append("    wanLossPercent: ").append(toIndentedString(wanLossPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endTs");
    openapiFields.add("lanGoodput");
    openapiFields.add("lanLatencyMs");
    openapiFields.add("lanLossPercent");
    openapiFields.add("numClients");
    openapiFields.add("recv");
    openapiFields.add("responseDuration");
    openapiFields.add("sent");
    openapiFields.add("startTs");
    openapiFields.add("wanGoodput");
    openapiFields.add("wanLatencyMs");
    openapiFields.add("wanLossPercent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkInsightApplicationHealthByTime200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkInsightApplicationHealthByTime200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkInsightApplicationHealthByTime200ResponseInner is not found in the empty JSON string", GetNetworkInsightApplicationHealthByTime200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkInsightApplicationHealthByTime200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkInsightApplicationHealthByTime200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkInsightApplicationHealthByTime200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkInsightApplicationHealthByTime200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkInsightApplicationHealthByTime200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkInsightApplicationHealthByTime200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkInsightApplicationHealthByTime200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkInsightApplicationHealthByTime200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkInsightApplicationHealthByTime200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkInsightApplicationHealthByTime200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkInsightApplicationHealthByTime200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkInsightApplicationHealthByTime200ResponseInner
   */
  public static GetNetworkInsightApplicationHealthByTime200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkInsightApplicationHealthByTime200ResponseInner.class);
  }

  /**
   * Convert an instance of GetNetworkInsightApplicationHealthByTime200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

