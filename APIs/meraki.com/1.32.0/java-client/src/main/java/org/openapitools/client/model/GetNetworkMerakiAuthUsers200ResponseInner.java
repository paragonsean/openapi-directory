/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkMerakiAuthUsers200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkMerakiAuthUsers200ResponseInner {
  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "accountType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private String accountType;

  public static final String SERIALIZED_NAME_AUTHORIZATIONS = "authorizations";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATIONS)
  private List<GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner> authorizations = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ADMIN = "isAdmin";
  @SerializedName(SERIALIZED_NAME_IS_ADMIN)
  private Boolean isAdmin;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GetNetworkMerakiAuthUsers200ResponseInner() {
  }

  public GetNetworkMerakiAuthUsers200ResponseInner accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

  /**
   * Authorization type for user.
   * @return accountType
   */
  @javax.annotation.Nullable
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  public GetNetworkMerakiAuthUsers200ResponseInner authorizations(List<GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner> authorizations) {
    this.authorizations = authorizations;
    return this;
  }

  public GetNetworkMerakiAuthUsers200ResponseInner addAuthorizationsItem(GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner authorizationsItem) {
    if (this.authorizations == null) {
      this.authorizations = new ArrayList<>();
    }
    this.authorizations.add(authorizationsItem);
    return this;
  }

  /**
   * User authorization info
   * @return authorizations
   */
  @javax.annotation.Nullable
  public List<GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner> getAuthorizations() {
    return authorizations;
  }

  public void setAuthorizations(List<GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner> authorizations) {
    this.authorizations = authorizations;
  }


  public GetNetworkMerakiAuthUsers200ResponseInner createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Creation time of the user
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetNetworkMerakiAuthUsers200ResponseInner email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Email address of the user
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public GetNetworkMerakiAuthUsers200ResponseInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Meraki auth user id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetNetworkMerakiAuthUsers200ResponseInner isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

  /**
   * Whether or not the user is a Dashboard administrator
   * @return isAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }


  public GetNetworkMerakiAuthUsers200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the user
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkMerakiAuthUsers200ResponseInner getNetworkMerakiAuthUsers200ResponseInner = (GetNetworkMerakiAuthUsers200ResponseInner) o;
    return Objects.equals(this.accountType, getNetworkMerakiAuthUsers200ResponseInner.accountType) &&
        Objects.equals(this.authorizations, getNetworkMerakiAuthUsers200ResponseInner.authorizations) &&
        Objects.equals(this.createdAt, getNetworkMerakiAuthUsers200ResponseInner.createdAt) &&
        Objects.equals(this.email, getNetworkMerakiAuthUsers200ResponseInner.email) &&
        Objects.equals(this.id, getNetworkMerakiAuthUsers200ResponseInner.id) &&
        Objects.equals(this.isAdmin, getNetworkMerakiAuthUsers200ResponseInner.isAdmin) &&
        Objects.equals(this.name, getNetworkMerakiAuthUsers200ResponseInner.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountType, authorizations, createdAt, email, id, isAdmin, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkMerakiAuthUsers200ResponseInner {\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    authorizations: ").append(toIndentedString(authorizations)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountType");
    openapiFields.add("authorizations");
    openapiFields.add("createdAt");
    openapiFields.add("email");
    openapiFields.add("id");
    openapiFields.add("isAdmin");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkMerakiAuthUsers200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkMerakiAuthUsers200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkMerakiAuthUsers200ResponseInner is not found in the empty JSON string", GetNetworkMerakiAuthUsers200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkMerakiAuthUsers200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkMerakiAuthUsers200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountType") != null && !jsonObj.get("accountType").isJsonNull()) && !jsonObj.get("accountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountType").toString()));
      }
      if (jsonObj.get("authorizations") != null && !jsonObj.get("authorizations").isJsonNull()) {
        JsonArray jsonArrayauthorizations = jsonObj.getAsJsonArray("authorizations");
        if (jsonArrayauthorizations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authorizations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authorizations` to be an array in the JSON string but got `%s`", jsonObj.get("authorizations").toString()));
          }

          // validate the optional field `authorizations` (array)
          for (int i = 0; i < jsonArrayauthorizations.size(); i++) {
            GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.validateJsonElement(jsonArrayauthorizations.get(i));
          };
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkMerakiAuthUsers200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkMerakiAuthUsers200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkMerakiAuthUsers200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkMerakiAuthUsers200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkMerakiAuthUsers200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkMerakiAuthUsers200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkMerakiAuthUsers200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkMerakiAuthUsers200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkMerakiAuthUsers200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkMerakiAuthUsers200ResponseInner
   */
  public static GetNetworkMerakiAuthUsers200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkMerakiAuthUsers200ResponseInner.class);
  }

  /**
   * Convert an instance of GetNetworkMerakiAuthUsers200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

