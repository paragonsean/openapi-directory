/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest {
  public static final String SERIALIZED_NAME_MAX_JITTER = "maxJitter";
  @SerializedName(SERIALIZED_NAME_MAX_JITTER)
  private Integer maxJitter;

  public static final String SERIALIZED_NAME_MAX_LATENCY = "maxLatency";
  @SerializedName(SERIALIZED_NAME_MAX_LATENCY)
  private Integer maxLatency;

  public static final String SERIALIZED_NAME_MAX_LOSS_PERCENTAGE = "maxLossPercentage";
  @SerializedName(SERIALIZED_NAME_MAX_LOSS_PERCENTAGE)
  private Integer maxLossPercentage;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest() {
  }

  public UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest maxJitter(Integer maxJitter) {
    this.maxJitter = maxJitter;
    return this;
  }

  /**
   * Maximum jitter in milliseconds
   * @return maxJitter
   */
  @javax.annotation.Nullable
  public Integer getMaxJitter() {
    return maxJitter;
  }

  public void setMaxJitter(Integer maxJitter) {
    this.maxJitter = maxJitter;
  }


  public UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest maxLatency(Integer maxLatency) {
    this.maxLatency = maxLatency;
    return this;
  }

  /**
   * Maximum latency in milliseconds
   * @return maxLatency
   */
  @javax.annotation.Nullable
  public Integer getMaxLatency() {
    return maxLatency;
  }

  public void setMaxLatency(Integer maxLatency) {
    this.maxLatency = maxLatency;
  }


  public UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest maxLossPercentage(Integer maxLossPercentage) {
    this.maxLossPercentage = maxLossPercentage;
    return this;
  }

  /**
   * Maximum percentage of packet loss
   * @return maxLossPercentage
   */
  @javax.annotation.Nullable
  public Integer getMaxLossPercentage() {
    return maxLossPercentage;
  }

  public void setMaxLossPercentage(Integer maxLossPercentage) {
    this.maxLossPercentage = maxLossPercentage;
  }


  public UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the custom performance class
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest updateNetworkApplianceTrafficShapingCustomPerformanceClassRequest = (UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest) o;
    return Objects.equals(this.maxJitter, updateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.maxJitter) &&
        Objects.equals(this.maxLatency, updateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.maxLatency) &&
        Objects.equals(this.maxLossPercentage, updateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.maxLossPercentage) &&
        Objects.equals(this.name, updateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxJitter, maxLatency, maxLossPercentage, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest {\n");
    sb.append("    maxJitter: ").append(toIndentedString(maxJitter)).append("\n");
    sb.append("    maxLatency: ").append(toIndentedString(maxLatency)).append("\n");
    sb.append("    maxLossPercentage: ").append(toIndentedString(maxLossPercentage)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxJitter");
    openapiFields.add("maxLatency");
    openapiFields.add("maxLossPercentage");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest is not found in the empty JSON string", UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest>() {
           @Override
           public void write(JsonWriter out, UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest
   */
  public static UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest.class);
  }

  /**
   * Convert an instance of UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

