/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkSmUsers200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkSmUsers200ResponseInner {
  public static final String SERIALIZED_NAME_AD_GROUPS = "adGroups";
  @SerializedName(SERIALIZED_NAME_AD_GROUPS)
  private List<String> adGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_ASM_GROUPS = "asmGroups";
  @SerializedName(SERIALIZED_NAME_ASM_GROUPS)
  private List<String> asmGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_AZURE_AD_GROUPS = "azureAdGroups";
  @SerializedName(SERIALIZED_NAME_AZURE_AD_GROUPS)
  private List<String> azureAdGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_HAS_IDENTITY_CERTIFICATE = "hasIdentityCertificate";
  @SerializedName(SERIALIZED_NAME_HAS_IDENTITY_CERTIFICATE)
  private Boolean hasIdentityCertificate;

  public static final String SERIALIZED_NAME_HAS_PASSWORD = "hasPassword";
  @SerializedName(SERIALIZED_NAME_HAS_PASSWORD)
  private Boolean hasPassword;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_EXTERNAL = "isExternal";
  @SerializedName(SERIALIZED_NAME_IS_EXTERNAL)
  private Boolean isExternal;

  public static final String SERIALIZED_NAME_SAML_GROUPS = "samlGroups";
  @SerializedName(SERIALIZED_NAME_SAML_GROUPS)
  private List<String> samlGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;

  public static final String SERIALIZED_NAME_USER_THUMBNAIL = "userThumbnail";
  @SerializedName(SERIALIZED_NAME_USER_THUMBNAIL)
  private String userThumbnail;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public GetNetworkSmUsers200ResponseInner() {
  }

  public GetNetworkSmUsers200ResponseInner adGroups(List<String> adGroups) {
    this.adGroups = adGroups;
    return this;
  }

  public GetNetworkSmUsers200ResponseInner addAdGroupsItem(String adGroupsItem) {
    if (this.adGroups == null) {
      this.adGroups = new ArrayList<>();
    }
    this.adGroups.add(adGroupsItem);
    return this;
  }

  /**
   * Active Directory Groups the user belongs to.
   * @return adGroups
   */
  @javax.annotation.Nullable
  public List<String> getAdGroups() {
    return adGroups;
  }

  public void setAdGroups(List<String> adGroups) {
    this.adGroups = adGroups;
  }


  public GetNetworkSmUsers200ResponseInner asmGroups(List<String> asmGroups) {
    this.asmGroups = asmGroups;
    return this;
  }

  public GetNetworkSmUsers200ResponseInner addAsmGroupsItem(String asmGroupsItem) {
    if (this.asmGroups == null) {
      this.asmGroups = new ArrayList<>();
    }
    this.asmGroups.add(asmGroupsItem);
    return this;
  }

  /**
   * Apple School Manager Groups the user belongs to.
   * @return asmGroups
   */
  @javax.annotation.Nullable
  public List<String> getAsmGroups() {
    return asmGroups;
  }

  public void setAsmGroups(List<String> asmGroups) {
    this.asmGroups = asmGroups;
  }


  public GetNetworkSmUsers200ResponseInner azureAdGroups(List<String> azureAdGroups) {
    this.azureAdGroups = azureAdGroups;
    return this;
  }

  public GetNetworkSmUsers200ResponseInner addAzureAdGroupsItem(String azureAdGroupsItem) {
    if (this.azureAdGroups == null) {
      this.azureAdGroups = new ArrayList<>();
    }
    this.azureAdGroups.add(azureAdGroupsItem);
    return this;
  }

  /**
   * Azure Active Directory Groups the user belongs to.
   * @return azureAdGroups
   */
  @javax.annotation.Nullable
  public List<String> getAzureAdGroups() {
    return azureAdGroups;
  }

  public void setAzureAdGroups(List<String> azureAdGroups) {
    this.azureAdGroups = azureAdGroups;
  }


  public GetNetworkSmUsers200ResponseInner displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The user display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GetNetworkSmUsers200ResponseInner email(String email) {
    this.email = email;
    return this;
  }

  /**
   * User email.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public GetNetworkSmUsers200ResponseInner fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * User full name.
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public GetNetworkSmUsers200ResponseInner hasIdentityCertificate(Boolean hasIdentityCertificate) {
    this.hasIdentityCertificate = hasIdentityCertificate;
    return this;
  }

  /**
   * A boolean indicating if the user has an associated identity certificate..
   * @return hasIdentityCertificate
   */
  @javax.annotation.Nullable
  public Boolean getHasIdentityCertificate() {
    return hasIdentityCertificate;
  }

  public void setHasIdentityCertificate(Boolean hasIdentityCertificate) {
    this.hasIdentityCertificate = hasIdentityCertificate;
  }


  public GetNetworkSmUsers200ResponseInner hasPassword(Boolean hasPassword) {
    this.hasPassword = hasPassword;
    return this;
  }

  /**
   * A boolean denoting if the user has a password associated with the record.
   * @return hasPassword
   */
  @javax.annotation.Nullable
  public Boolean getHasPassword() {
    return hasPassword;
  }

  public void setHasPassword(Boolean hasPassword) {
    this.hasPassword = hasPassword;
  }


  public GetNetworkSmUsers200ResponseInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The Meraki managed Id of the user record.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetNetworkSmUsers200ResponseInner isExternal(Boolean isExternal) {
    this.isExternal = isExternal;
    return this;
  }

  /**
   * Whether the user was created using an external integration, or via the Meraki Dashboard.
   * @return isExternal
   */
  @javax.annotation.Nullable
  public Boolean getIsExternal() {
    return isExternal;
  }

  public void setIsExternal(Boolean isExternal) {
    this.isExternal = isExternal;
  }


  public GetNetworkSmUsers200ResponseInner samlGroups(List<String> samlGroups) {
    this.samlGroups = samlGroups;
    return this;
  }

  public GetNetworkSmUsers200ResponseInner addSamlGroupsItem(String samlGroupsItem) {
    if (this.samlGroups == null) {
      this.samlGroups = new ArrayList<>();
    }
    this.samlGroups.add(samlGroupsItem);
    return this;
  }

  /**
   * SAML Groups the user belongs to.
   * @return samlGroups
   */
  @javax.annotation.Nullable
  public List<String> getSamlGroups() {
    return samlGroups;
  }

  public void setSamlGroups(List<String> samlGroups) {
    this.samlGroups = samlGroups;
  }


  public GetNetworkSmUsers200ResponseInner tags(String tags) {
    this.tags = tags;
    return this;
  }

  /**
   * The set of tags the user is scoped to.
   * @return tags
   */
  @javax.annotation.Nullable
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }


  public GetNetworkSmUsers200ResponseInner userThumbnail(String userThumbnail) {
    this.userThumbnail = userThumbnail;
    return this;
  }

  /**
   * The url where the users thumbnail is hosted.
   * @return userThumbnail
   */
  @javax.annotation.Nullable
  public String getUserThumbnail() {
    return userThumbnail;
  }

  public void setUserThumbnail(String userThumbnail) {
    this.userThumbnail = userThumbnail;
  }


  public GetNetworkSmUsers200ResponseInner username(String username) {
    this.username = username;
    return this;
  }

  /**
   * The users username.
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkSmUsers200ResponseInner getNetworkSmUsers200ResponseInner = (GetNetworkSmUsers200ResponseInner) o;
    return Objects.equals(this.adGroups, getNetworkSmUsers200ResponseInner.adGroups) &&
        Objects.equals(this.asmGroups, getNetworkSmUsers200ResponseInner.asmGroups) &&
        Objects.equals(this.azureAdGroups, getNetworkSmUsers200ResponseInner.azureAdGroups) &&
        Objects.equals(this.displayName, getNetworkSmUsers200ResponseInner.displayName) &&
        Objects.equals(this.email, getNetworkSmUsers200ResponseInner.email) &&
        Objects.equals(this.fullName, getNetworkSmUsers200ResponseInner.fullName) &&
        Objects.equals(this.hasIdentityCertificate, getNetworkSmUsers200ResponseInner.hasIdentityCertificate) &&
        Objects.equals(this.hasPassword, getNetworkSmUsers200ResponseInner.hasPassword) &&
        Objects.equals(this.id, getNetworkSmUsers200ResponseInner.id) &&
        Objects.equals(this.isExternal, getNetworkSmUsers200ResponseInner.isExternal) &&
        Objects.equals(this.samlGroups, getNetworkSmUsers200ResponseInner.samlGroups) &&
        Objects.equals(this.tags, getNetworkSmUsers200ResponseInner.tags) &&
        Objects.equals(this.userThumbnail, getNetworkSmUsers200ResponseInner.userThumbnail) &&
        Objects.equals(this.username, getNetworkSmUsers200ResponseInner.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adGroups, asmGroups, azureAdGroups, displayName, email, fullName, hasIdentityCertificate, hasPassword, id, isExternal, samlGroups, tags, userThumbnail, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkSmUsers200ResponseInner {\n");
    sb.append("    adGroups: ").append(toIndentedString(adGroups)).append("\n");
    sb.append("    asmGroups: ").append(toIndentedString(asmGroups)).append("\n");
    sb.append("    azureAdGroups: ").append(toIndentedString(azureAdGroups)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    hasIdentityCertificate: ").append(toIndentedString(hasIdentityCertificate)).append("\n");
    sb.append("    hasPassword: ").append(toIndentedString(hasPassword)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isExternal: ").append(toIndentedString(isExternal)).append("\n");
    sb.append("    samlGroups: ").append(toIndentedString(samlGroups)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    userThumbnail: ").append(toIndentedString(userThumbnail)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adGroups");
    openapiFields.add("asmGroups");
    openapiFields.add("azureAdGroups");
    openapiFields.add("displayName");
    openapiFields.add("email");
    openapiFields.add("fullName");
    openapiFields.add("hasIdentityCertificate");
    openapiFields.add("hasPassword");
    openapiFields.add("id");
    openapiFields.add("isExternal");
    openapiFields.add("samlGroups");
    openapiFields.add("tags");
    openapiFields.add("userThumbnail");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkSmUsers200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkSmUsers200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkSmUsers200ResponseInner is not found in the empty JSON string", GetNetworkSmUsers200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkSmUsers200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkSmUsers200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("adGroups") != null && !jsonObj.get("adGroups").isJsonNull() && !jsonObj.get("adGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `adGroups` to be an array in the JSON string but got `%s`", jsonObj.get("adGroups").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("asmGroups") != null && !jsonObj.get("asmGroups").isJsonNull() && !jsonObj.get("asmGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `asmGroups` to be an array in the JSON string but got `%s`", jsonObj.get("asmGroups").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("azureAdGroups") != null && !jsonObj.get("azureAdGroups").isJsonNull() && !jsonObj.get("azureAdGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `azureAdGroups` to be an array in the JSON string but got `%s`", jsonObj.get("azureAdGroups").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("samlGroups") != null && !jsonObj.get("samlGroups").isJsonNull() && !jsonObj.get("samlGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `samlGroups` to be an array in the JSON string but got `%s`", jsonObj.get("samlGroups").toString()));
      }
      if ((jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) && !jsonObj.get("tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("userThumbnail") != null && !jsonObj.get("userThumbnail").isJsonNull()) && !jsonObj.get("userThumbnail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userThumbnail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userThumbnail").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkSmUsers200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkSmUsers200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkSmUsers200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkSmUsers200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkSmUsers200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkSmUsers200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkSmUsers200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkSmUsers200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkSmUsers200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkSmUsers200ResponseInner
   */
  public static GetNetworkSmUsers200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkSmUsers200ResponseInner.class);
  }

  /**
   * Convert an instance of GetNetworkSmUsers200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

