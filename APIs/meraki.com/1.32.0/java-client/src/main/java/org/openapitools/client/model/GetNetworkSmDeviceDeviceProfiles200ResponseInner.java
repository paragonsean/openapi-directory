/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkSmDeviceDeviceProfiles200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkSmDeviceDeviceProfiles200ResponseInner {
  public static final String SERIALIZED_NAME_DEVICE_ID = "deviceId";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ENCRYPTED = "isEncrypted";
  @SerializedName(SERIALIZED_NAME_IS_ENCRYPTED)
  private Boolean isEncrypted;

  public static final String SERIALIZED_NAME_IS_MANAGED = "isManaged";
  @SerializedName(SERIALIZED_NAME_IS_MANAGED)
  private Boolean isManaged;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROFILE_DATA = "profileData";
  @SerializedName(SERIALIZED_NAME_PROFILE_DATA)
  private String profileData;

  public static final String SERIALIZED_NAME_PROFILE_IDENTIFIER = "profileIdentifier";
  @SerializedName(SERIALIZED_NAME_PROFILE_IDENTIFIER)
  private String profileIdentifier;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public GetNetworkSmDeviceDeviceProfiles200ResponseInner() {
  }

  public GetNetworkSmDeviceDeviceProfiles200ResponseInner deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * The Meraki managed device Id.
   * @return deviceId
   */
  @javax.annotation.Nullable
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The numerical Meraki Id of the profile.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner isEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
    return this;
  }

  /**
   * A boolean indicating if the profile is encrypted.
   * @return isEncrypted
   */
  @javax.annotation.Nullable
  public Boolean getIsEncrypted() {
    return isEncrypted;
  }

  public void setIsEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner isManaged(Boolean isManaged) {
    this.isManaged = isManaged;
    return this;
  }

  /**
   * Whether or not the profile is managed by Meraki.
   * @return isManaged
   */
  @javax.annotation.Nullable
  public Boolean getIsManaged() {
    return isManaged;
  }

  public void setIsManaged(Boolean isManaged) {
    this.isManaged = isManaged;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the profile.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner profileData(String profileData) {
    this.profileData = profileData;
    return this;
  }

  /**
   * A string containing a JSON object with the profile data.
   * @return profileData
   */
  @javax.annotation.Nullable
  public String getProfileData() {
    return profileData;
  }

  public void setProfileData(String profileData) {
    this.profileData = profileData;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner profileIdentifier(String profileIdentifier) {
    this.profileIdentifier = profileIdentifier;
    return this;
  }

  /**
   * The identifier of the profile.
   * @return profileIdentifier
   */
  @javax.annotation.Nullable
  public String getProfileIdentifier() {
    return profileIdentifier;
  }

  public void setProfileIdentifier(String profileIdentifier) {
    this.profileIdentifier = profileIdentifier;
  }


  public GetNetworkSmDeviceDeviceProfiles200ResponseInner version(String version) {
    this.version = version;
    return this;
  }

  /**
   * The verison of the profile.
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkSmDeviceDeviceProfiles200ResponseInner getNetworkSmDeviceDeviceProfiles200ResponseInner = (GetNetworkSmDeviceDeviceProfiles200ResponseInner) o;
    return Objects.equals(this.deviceId, getNetworkSmDeviceDeviceProfiles200ResponseInner.deviceId) &&
        Objects.equals(this.id, getNetworkSmDeviceDeviceProfiles200ResponseInner.id) &&
        Objects.equals(this.isEncrypted, getNetworkSmDeviceDeviceProfiles200ResponseInner.isEncrypted) &&
        Objects.equals(this.isManaged, getNetworkSmDeviceDeviceProfiles200ResponseInner.isManaged) &&
        Objects.equals(this.name, getNetworkSmDeviceDeviceProfiles200ResponseInner.name) &&
        Objects.equals(this.profileData, getNetworkSmDeviceDeviceProfiles200ResponseInner.profileData) &&
        Objects.equals(this.profileIdentifier, getNetworkSmDeviceDeviceProfiles200ResponseInner.profileIdentifier) &&
        Objects.equals(this.version, getNetworkSmDeviceDeviceProfiles200ResponseInner.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, id, isEncrypted, isManaged, name, profileData, profileIdentifier, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkSmDeviceDeviceProfiles200ResponseInner {\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isEncrypted: ").append(toIndentedString(isEncrypted)).append("\n");
    sb.append("    isManaged: ").append(toIndentedString(isManaged)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    profileData: ").append(toIndentedString(profileData)).append("\n");
    sb.append("    profileIdentifier: ").append(toIndentedString(profileIdentifier)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deviceId");
    openapiFields.add("id");
    openapiFields.add("isEncrypted");
    openapiFields.add("isManaged");
    openapiFields.add("name");
    openapiFields.add("profileData");
    openapiFields.add("profileIdentifier");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkSmDeviceDeviceProfiles200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkSmDeviceDeviceProfiles200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkSmDeviceDeviceProfiles200ResponseInner is not found in the empty JSON string", GetNetworkSmDeviceDeviceProfiles200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkSmDeviceDeviceProfiles200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkSmDeviceDeviceProfiles200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deviceId") != null && !jsonObj.get("deviceId").isJsonNull()) && !jsonObj.get("deviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceId").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("profileData") != null && !jsonObj.get("profileData").isJsonNull()) && !jsonObj.get("profileData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileData").toString()));
      }
      if ((jsonObj.get("profileIdentifier") != null && !jsonObj.get("profileIdentifier").isJsonNull()) && !jsonObj.get("profileIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileIdentifier").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkSmDeviceDeviceProfiles200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkSmDeviceDeviceProfiles200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkSmDeviceDeviceProfiles200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkSmDeviceDeviceProfiles200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkSmDeviceDeviceProfiles200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkSmDeviceDeviceProfiles200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkSmDeviceDeviceProfiles200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkSmDeviceDeviceProfiles200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkSmDeviceDeviceProfiles200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkSmDeviceDeviceProfiles200ResponseInner
   */
  public static GetNetworkSmDeviceDeviceProfiles200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkSmDeviceDeviceProfiles200ResponseInner.class);
  }

  /**
   * Convert an instance of GetNetworkSmDeviceDeviceProfiles200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

