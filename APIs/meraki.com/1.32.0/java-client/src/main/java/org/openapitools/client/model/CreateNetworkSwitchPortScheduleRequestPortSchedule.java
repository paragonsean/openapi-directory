/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingFriday;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingMonday;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingSaturday;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingSunday;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingThursday;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingTuesday;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestSchedulingWednesday;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *     The schedule for switch port scheduling. Schedules are applied to days of the week.     When it&#39;s empty, default schedule with all days of a week are configured.     Any unspecified day in the schedule is added as a default schedule configuration of the day. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateNetworkSwitchPortScheduleRequestPortSchedule {
  public static final String SERIALIZED_NAME_FRIDAY = "friday";
  @SerializedName(SERIALIZED_NAME_FRIDAY)
  private CreateNetworkGroupPolicyRequestSchedulingFriday friday;

  public static final String SERIALIZED_NAME_MONDAY = "monday";
  @SerializedName(SERIALIZED_NAME_MONDAY)
  private CreateNetworkGroupPolicyRequestSchedulingMonday monday;

  public static final String SERIALIZED_NAME_SATURDAY = "saturday";
  @SerializedName(SERIALIZED_NAME_SATURDAY)
  private CreateNetworkGroupPolicyRequestSchedulingSaturday saturday;

  public static final String SERIALIZED_NAME_SUNDAY = "sunday";
  @SerializedName(SERIALIZED_NAME_SUNDAY)
  private CreateNetworkGroupPolicyRequestSchedulingSunday sunday;

  public static final String SERIALIZED_NAME_THURSDAY = "thursday";
  @SerializedName(SERIALIZED_NAME_THURSDAY)
  private CreateNetworkGroupPolicyRequestSchedulingThursday thursday;

  public static final String SERIALIZED_NAME_TUESDAY = "tuesday";
  @SerializedName(SERIALIZED_NAME_TUESDAY)
  private CreateNetworkGroupPolicyRequestSchedulingTuesday tuesday;

  public static final String SERIALIZED_NAME_WEDNESDAY = "wednesday";
  @SerializedName(SERIALIZED_NAME_WEDNESDAY)
  private CreateNetworkGroupPolicyRequestSchedulingWednesday wednesday;

  public CreateNetworkSwitchPortScheduleRequestPortSchedule() {
  }

  public CreateNetworkSwitchPortScheduleRequestPortSchedule friday(CreateNetworkGroupPolicyRequestSchedulingFriday friday) {
    this.friday = friday;
    return this;
  }

  /**
   * Get friday
   * @return friday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingFriday getFriday() {
    return friday;
  }

  public void setFriday(CreateNetworkGroupPolicyRequestSchedulingFriday friday) {
    this.friday = friday;
  }


  public CreateNetworkSwitchPortScheduleRequestPortSchedule monday(CreateNetworkGroupPolicyRequestSchedulingMonday monday) {
    this.monday = monday;
    return this;
  }

  /**
   * Get monday
   * @return monday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingMonday getMonday() {
    return monday;
  }

  public void setMonday(CreateNetworkGroupPolicyRequestSchedulingMonday monday) {
    this.monday = monday;
  }


  public CreateNetworkSwitchPortScheduleRequestPortSchedule saturday(CreateNetworkGroupPolicyRequestSchedulingSaturday saturday) {
    this.saturday = saturday;
    return this;
  }

  /**
   * Get saturday
   * @return saturday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingSaturday getSaturday() {
    return saturday;
  }

  public void setSaturday(CreateNetworkGroupPolicyRequestSchedulingSaturday saturday) {
    this.saturday = saturday;
  }


  public CreateNetworkSwitchPortScheduleRequestPortSchedule sunday(CreateNetworkGroupPolicyRequestSchedulingSunday sunday) {
    this.sunday = sunday;
    return this;
  }

  /**
   * Get sunday
   * @return sunday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingSunday getSunday() {
    return sunday;
  }

  public void setSunday(CreateNetworkGroupPolicyRequestSchedulingSunday sunday) {
    this.sunday = sunday;
  }


  public CreateNetworkSwitchPortScheduleRequestPortSchedule thursday(CreateNetworkGroupPolicyRequestSchedulingThursday thursday) {
    this.thursday = thursday;
    return this;
  }

  /**
   * Get thursday
   * @return thursday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingThursday getThursday() {
    return thursday;
  }

  public void setThursday(CreateNetworkGroupPolicyRequestSchedulingThursday thursday) {
    this.thursday = thursday;
  }


  public CreateNetworkSwitchPortScheduleRequestPortSchedule tuesday(CreateNetworkGroupPolicyRequestSchedulingTuesday tuesday) {
    this.tuesday = tuesday;
    return this;
  }

  /**
   * Get tuesday
   * @return tuesday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingTuesday getTuesday() {
    return tuesday;
  }

  public void setTuesday(CreateNetworkGroupPolicyRequestSchedulingTuesday tuesday) {
    this.tuesday = tuesday;
  }


  public CreateNetworkSwitchPortScheduleRequestPortSchedule wednesday(CreateNetworkGroupPolicyRequestSchedulingWednesday wednesday) {
    this.wednesday = wednesday;
    return this;
  }

  /**
   * Get wednesday
   * @return wednesday
   */
  @javax.annotation.Nullable
  public CreateNetworkGroupPolicyRequestSchedulingWednesday getWednesday() {
    return wednesday;
  }

  public void setWednesday(CreateNetworkGroupPolicyRequestSchedulingWednesday wednesday) {
    this.wednesday = wednesday;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNetworkSwitchPortScheduleRequestPortSchedule createNetworkSwitchPortScheduleRequestPortSchedule = (CreateNetworkSwitchPortScheduleRequestPortSchedule) o;
    return Objects.equals(this.friday, createNetworkSwitchPortScheduleRequestPortSchedule.friday) &&
        Objects.equals(this.monday, createNetworkSwitchPortScheduleRequestPortSchedule.monday) &&
        Objects.equals(this.saturday, createNetworkSwitchPortScheduleRequestPortSchedule.saturday) &&
        Objects.equals(this.sunday, createNetworkSwitchPortScheduleRequestPortSchedule.sunday) &&
        Objects.equals(this.thursday, createNetworkSwitchPortScheduleRequestPortSchedule.thursday) &&
        Objects.equals(this.tuesday, createNetworkSwitchPortScheduleRequestPortSchedule.tuesday) &&
        Objects.equals(this.wednesday, createNetworkSwitchPortScheduleRequestPortSchedule.wednesday);
  }

  @Override
  public int hashCode() {
    return Objects.hash(friday, monday, saturday, sunday, thursday, tuesday, wednesday);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNetworkSwitchPortScheduleRequestPortSchedule {\n");
    sb.append("    friday: ").append(toIndentedString(friday)).append("\n");
    sb.append("    monday: ").append(toIndentedString(monday)).append("\n");
    sb.append("    saturday: ").append(toIndentedString(saturday)).append("\n");
    sb.append("    sunday: ").append(toIndentedString(sunday)).append("\n");
    sb.append("    thursday: ").append(toIndentedString(thursday)).append("\n");
    sb.append("    tuesday: ").append(toIndentedString(tuesday)).append("\n");
    sb.append("    wednesday: ").append(toIndentedString(wednesday)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("friday");
    openapiFields.add("monday");
    openapiFields.add("saturday");
    openapiFields.add("sunday");
    openapiFields.add("thursday");
    openapiFields.add("tuesday");
    openapiFields.add("wednesday");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateNetworkSwitchPortScheduleRequestPortSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateNetworkSwitchPortScheduleRequestPortSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateNetworkSwitchPortScheduleRequestPortSchedule is not found in the empty JSON string", CreateNetworkSwitchPortScheduleRequestPortSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateNetworkSwitchPortScheduleRequestPortSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateNetworkSwitchPortScheduleRequestPortSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `friday`
      if (jsonObj.get("friday") != null && !jsonObj.get("friday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingFriday.validateJsonElement(jsonObj.get("friday"));
      }
      // validate the optional field `monday`
      if (jsonObj.get("monday") != null && !jsonObj.get("monday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingMonday.validateJsonElement(jsonObj.get("monday"));
      }
      // validate the optional field `saturday`
      if (jsonObj.get("saturday") != null && !jsonObj.get("saturday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingSaturday.validateJsonElement(jsonObj.get("saturday"));
      }
      // validate the optional field `sunday`
      if (jsonObj.get("sunday") != null && !jsonObj.get("sunday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingSunday.validateJsonElement(jsonObj.get("sunday"));
      }
      // validate the optional field `thursday`
      if (jsonObj.get("thursday") != null && !jsonObj.get("thursday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingThursday.validateJsonElement(jsonObj.get("thursday"));
      }
      // validate the optional field `tuesday`
      if (jsonObj.get("tuesday") != null && !jsonObj.get("tuesday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingTuesday.validateJsonElement(jsonObj.get("tuesday"));
      }
      // validate the optional field `wednesday`
      if (jsonObj.get("wednesday") != null && !jsonObj.get("wednesday").isJsonNull()) {
        CreateNetworkGroupPolicyRequestSchedulingWednesday.validateJsonElement(jsonObj.get("wednesday"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateNetworkSwitchPortScheduleRequestPortSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateNetworkSwitchPortScheduleRequestPortSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateNetworkSwitchPortScheduleRequestPortSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateNetworkSwitchPortScheduleRequestPortSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateNetworkSwitchPortScheduleRequestPortSchedule>() {
           @Override
           public void write(JsonWriter out, CreateNetworkSwitchPortScheduleRequestPortSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateNetworkSwitchPortScheduleRequestPortSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateNetworkSwitchPortScheduleRequestPortSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateNetworkSwitchPortScheduleRequestPortSchedule
   * @throws IOException if the JSON string is invalid with respect to CreateNetworkSwitchPortScheduleRequestPortSchedule
   */
  public static CreateNetworkSwitchPortScheduleRequestPortSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateNetworkSwitchPortScheduleRequestPortSchedule.class);
  }

  /**
   * Convert an instance of CreateNetworkSwitchPortScheduleRequestPortSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

