/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Status of action batch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateOrganizationActionBatch201ResponseStatus {
  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Boolean completed;

  public static final String SERIALIZED_NAME_CREATED_RESOURCES = "createdResources";
  @SerializedName(SERIALIZED_NAME_CREATED_RESOURCES)
  private List<CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner> createdResources = new ArrayList<>();

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<String> errors = new ArrayList<>();

  public static final String SERIALIZED_NAME_FAILED = "failed";
  @SerializedName(SERIALIZED_NAME_FAILED)
  private Boolean failed;

  public CreateOrganizationActionBatch201ResponseStatus() {
  }

  public CreateOrganizationActionBatch201ResponseStatus completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

  /**
   * Flag describing whether all actions in the action batch have completed
   * @return completed
   */
  @javax.annotation.Nullable
  public Boolean getCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public CreateOrganizationActionBatch201ResponseStatus createdResources(List<CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner> createdResources) {
    this.createdResources = createdResources;
    return this;
  }

  public CreateOrganizationActionBatch201ResponseStatus addCreatedResourcesItem(CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner createdResourcesItem) {
    if (this.createdResources == null) {
      this.createdResources = new ArrayList<>();
    }
    this.createdResources.add(createdResourcesItem);
    return this;
  }

  /**
   * Resources created as a result of this action batch
   * @return createdResources
   */
  @javax.annotation.Nonnull
  public List<CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner> getCreatedResources() {
    return createdResources;
  }

  public void setCreatedResources(List<CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner> createdResources) {
    this.createdResources = createdResources;
  }


  public CreateOrganizationActionBatch201ResponseStatus errors(List<String> errors) {
    this.errors = errors;
    return this;
  }

  public CreateOrganizationActionBatch201ResponseStatus addErrorsItem(String errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * List of errors encountered when running actions in the action batch
   * @return errors
   */
  @javax.annotation.Nullable
  public List<String> getErrors() {
    return errors;
  }

  public void setErrors(List<String> errors) {
    this.errors = errors;
  }


  public CreateOrganizationActionBatch201ResponseStatus failed(Boolean failed) {
    this.failed = failed;
    return this;
  }

  /**
   * Flag describing whether any actions in the action batch failed
   * @return failed
   */
  @javax.annotation.Nullable
  public Boolean getFailed() {
    return failed;
  }

  public void setFailed(Boolean failed) {
    this.failed = failed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrganizationActionBatch201ResponseStatus createOrganizationActionBatch201ResponseStatus = (CreateOrganizationActionBatch201ResponseStatus) o;
    return Objects.equals(this.completed, createOrganizationActionBatch201ResponseStatus.completed) &&
        Objects.equals(this.createdResources, createOrganizationActionBatch201ResponseStatus.createdResources) &&
        Objects.equals(this.errors, createOrganizationActionBatch201ResponseStatus.errors) &&
        Objects.equals(this.failed, createOrganizationActionBatch201ResponseStatus.failed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completed, createdResources, errors, failed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrganizationActionBatch201ResponseStatus {\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    createdResources: ").append(toIndentedString(createdResources)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completed");
    openapiFields.add("createdResources");
    openapiFields.add("errors");
    openapiFields.add("failed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("createdResources");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateOrganizationActionBatch201ResponseStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateOrganizationActionBatch201ResponseStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateOrganizationActionBatch201ResponseStatus is not found in the empty JSON string", CreateOrganizationActionBatch201ResponseStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateOrganizationActionBatch201ResponseStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateOrganizationActionBatch201ResponseStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateOrganizationActionBatch201ResponseStatus.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("createdResources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdResources` to be an array in the JSON string but got `%s`", jsonObj.get("createdResources").toString()));
      }

      JsonArray jsonArraycreatedResources = jsonObj.getAsJsonArray("createdResources");
      // validate the required field `createdResources` (array)
      for (int i = 0; i < jsonArraycreatedResources.size(); i++) {
        CreateOrganizationActionBatch201ResponseStatusCreatedResourcesInner.validateJsonElement(jsonArraycreatedResources.get(i));
      };
      // ensure the optional json data is an array if present
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull() && !jsonObj.get("errors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateOrganizationActionBatch201ResponseStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateOrganizationActionBatch201ResponseStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateOrganizationActionBatch201ResponseStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateOrganizationActionBatch201ResponseStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateOrganizationActionBatch201ResponseStatus>() {
           @Override
           public void write(JsonWriter out, CreateOrganizationActionBatch201ResponseStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateOrganizationActionBatch201ResponseStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateOrganizationActionBatch201ResponseStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateOrganizationActionBatch201ResponseStatus
   * @throws IOException if the JSON string is invalid with respect to CreateOrganizationActionBatch201ResponseStatus
   */
  public static CreateOrganizationActionBatch201ResponseStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateOrganizationActionBatch201ResponseStatus.class);
  }

  /**
   * Convert an instance of CreateOrganizationActionBatch201ResponseStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

