/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination;
import org.openapitools.client.model.GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketEthernet;
import org.openapitools.client.model.GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketFields;
import org.openapitools.client.model.GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp;
import org.openapitools.client.model.GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketSource;
import org.openapitools.client.model.GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketUdp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Last packet the server received.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket {
  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination destination;

  public static final String SERIALIZED_NAME_ETHERNET = "ethernet";
  @SerializedName(SERIALIZED_NAME_ETHERNET)
  private GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketEthernet ethernet;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketFields fields;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp ip;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketSource source;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UDP = "udp";
  @SerializedName(SERIALIZED_NAME_UDP)
  private GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketUdp udp;

  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket() {
  }

  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket destination(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination getDestination() {
    return destination;
  }

  public void setDestination(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination destination) {
    this.destination = destination;
  }


  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket ethernet(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketEthernet ethernet) {
    this.ethernet = ethernet;
    return this;
  }

  /**
   * Get ethernet
   * @return ethernet
   */
  @javax.annotation.Nullable
  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketEthernet getEthernet() {
    return ethernet;
  }

  public void setEthernet(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketEthernet ethernet) {
    this.ethernet = ethernet;
  }


  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket fields(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketFields fields) {
    this.fields = fields;
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nullable
  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketFields getFields() {
    return fields;
  }

  public void setFields(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketFields fields) {
    this.fields = fields;
  }


  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket ip(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp ip) {
    this.ip = ip;
    return this;
  }

  /**
   * Get ip
   * @return ip
   */
  @javax.annotation.Nullable
  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp getIp() {
    return ip;
  }

  public void setIp(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp ip) {
    this.ip = ip;
  }


  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket source(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketSource source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketSource getSource() {
    return source;
  }

  public void setSource(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketSource source) {
    this.source = source;
  }


  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Packet type.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket udp(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketUdp udp) {
    this.udp = udp;
    return this;
  }

  /**
   * Get udp
   * @return udp
   */
  @javax.annotation.Nullable
  public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketUdp getUdp() {
    return udp;
  }

  public void setUdp(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketUdp udp) {
    this.udp = udp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket = (GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket) o;
    return Objects.equals(this.destination, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.destination) &&
        Objects.equals(this.ethernet, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.ethernet) &&
        Objects.equals(this.fields, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.fields) &&
        Objects.equals(this.ip, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.ip) &&
        Objects.equals(this.source, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.source) &&
        Objects.equals(this.type, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.type) &&
        Objects.equals(this.udp, getNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.udp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destination, ethernet, fields, ip, source, type, udp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket {\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    ethernet: ").append(toIndentedString(ethernet)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    udp: ").append(toIndentedString(udp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destination");
    openapiFields.add("ethernet");
    openapiFields.add("fields");
    openapiFields.add("ip");
    openapiFields.add("source");
    openapiFields.add("type");
    openapiFields.add("udp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket is not found in the empty JSON string", GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `destination`
      if (jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) {
        GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination.validateJsonElement(jsonObj.get("destination"));
      }
      // validate the optional field `ethernet`
      if (jsonObj.get("ethernet") != null && !jsonObj.get("ethernet").isJsonNull()) {
        GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketEthernet.validateJsonElement(jsonObj.get("ethernet"));
      }
      // validate the optional field `fields`
      if (jsonObj.get("fields") != null && !jsonObj.get("fields").isJsonNull()) {
        GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketFields.validateJsonElement(jsonObj.get("fields"));
      }
      // validate the optional field `ip`
      if (jsonObj.get("ip") != null && !jsonObj.get("ip").isJsonNull()) {
        GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp.validateJsonElement(jsonObj.get("ip"));
      }
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketSource.validateJsonElement(jsonObj.get("source"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `udp`
      if (jsonObj.get("udp") != null && !jsonObj.get("udp").isJsonNull()) {
        GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketUdp.validateJsonElement(jsonObj.get("udp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket>() {
           @Override
           public void write(JsonWriter out, GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket
   * @throws IOException if the JSON string is invalid with respect to GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket
   */
  public static GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket.class);
  }

  /**
   * Convert an instance of GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacket to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

