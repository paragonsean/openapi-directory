/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner {
  public static final String SERIALIZED_NAME_DOWNLOADED_AT = "downloadedAt";
  @SerializedName(SERIALIZED_NAME_DOWNLOADED_AT)
  private String downloadedAt;

  public static final String SERIALIZED_NAME_LAST_CONNECTED_AT = "lastConnectedAt";
  @SerializedName(SERIALIZED_NAME_LAST_CONNECTED_AT)
  private OffsetDateTime lastConnectedAt;

  public static final String SERIALIZED_NAME_SCEP_COMPLETED_AT = "scepCompletedAt";
  @SerializedName(SERIALIZED_NAME_SCEP_COMPLETED_AT)
  private OffsetDateTime scepCompletedAt;

  public static final String SERIALIZED_NAME_TRUSTED_ACCESS_CONFIG_ID = "trustedAccessConfigId";
  @SerializedName(SERIALIZED_NAME_TRUSTED_ACCESS_CONFIG_ID)
  private String trustedAccessConfigId;

  public GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner() {
  }

  public GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner downloadedAt(String downloadedAt) {
    this.downloadedAt = downloadedAt;
    return this;
  }

  /**
   * time that config was downloaded
   * @return downloadedAt
   */
  @javax.annotation.Nullable
  public String getDownloadedAt() {
    return downloadedAt;
  }

  public void setDownloadedAt(String downloadedAt) {
    this.downloadedAt = downloadedAt;
  }


  public GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner lastConnectedAt(OffsetDateTime lastConnectedAt) {
    this.lastConnectedAt = lastConnectedAt;
    return this;
  }

  /**
   * time of last connection
   * @return lastConnectedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastConnectedAt() {
    return lastConnectedAt;
  }

  public void setLastConnectedAt(OffsetDateTime lastConnectedAt) {
    this.lastConnectedAt = lastConnectedAt;
  }


  public GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner scepCompletedAt(OffsetDateTime scepCompletedAt) {
    this.scepCompletedAt = scepCompletedAt;
    return this;
  }

  /**
   * time that SCEP completed
   * @return scepCompletedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScepCompletedAt() {
    return scepCompletedAt;
  }

  public void setScepCompletedAt(OffsetDateTime scepCompletedAt) {
    this.scepCompletedAt = scepCompletedAt;
  }


  public GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner trustedAccessConfigId(String trustedAccessConfigId) {
    this.trustedAccessConfigId = trustedAccessConfigId;
    return this;
  }

  /**
   * config id
   * @return trustedAccessConfigId
   */
  @javax.annotation.Nullable
  public String getTrustedAccessConfigId() {
    return trustedAccessConfigId;
  }

  public void setTrustedAccessConfigId(String trustedAccessConfigId) {
    this.trustedAccessConfigId = trustedAccessConfigId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner getNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner = (GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner) o;
    return Objects.equals(this.downloadedAt, getNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.downloadedAt) &&
        Objects.equals(this.lastConnectedAt, getNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.lastConnectedAt) &&
        Objects.equals(this.scepCompletedAt, getNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.scepCompletedAt) &&
        Objects.equals(this.trustedAccessConfigId, getNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.trustedAccessConfigId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(downloadedAt, lastConnectedAt, scepCompletedAt, trustedAccessConfigId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner {\n");
    sb.append("    downloadedAt: ").append(toIndentedString(downloadedAt)).append("\n");
    sb.append("    lastConnectedAt: ").append(toIndentedString(lastConnectedAt)).append("\n");
    sb.append("    scepCompletedAt: ").append(toIndentedString(scepCompletedAt)).append("\n");
    sb.append("    trustedAccessConfigId: ").append(toIndentedString(trustedAccessConfigId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("downloadedAt");
    openapiFields.add("lastConnectedAt");
    openapiFields.add("scepCompletedAt");
    openapiFields.add("trustedAccessConfigId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner is not found in the empty JSON string", GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("downloadedAt") != null && !jsonObj.get("downloadedAt").isJsonNull()) && !jsonObj.get("downloadedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `downloadedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("downloadedAt").toString()));
      }
      if ((jsonObj.get("trustedAccessConfigId") != null && !jsonObj.get("trustedAccessConfigId").isJsonNull()) && !jsonObj.get("trustedAccessConfigId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustedAccessConfigId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustedAccessConfigId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner
   */
  public static GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner.class);
  }

  /**
   * Convert an instance of GetNetworkSmUserAccessDevices200ResponseInnerTrustedAccessConnectionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

