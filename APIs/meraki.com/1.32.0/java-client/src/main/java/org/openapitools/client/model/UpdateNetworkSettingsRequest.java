/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetNetworkSettings200ResponseSecurePort;
import org.openapitools.client.model.UpdateNetworkSettingsRequestLocalStatusPage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateNetworkSettingsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateNetworkSettingsRequest {
  public static final String SERIALIZED_NAME_LOCAL_STATUS_PAGE = "localStatusPage";
  @SerializedName(SERIALIZED_NAME_LOCAL_STATUS_PAGE)
  private UpdateNetworkSettingsRequestLocalStatusPage localStatusPage;

  public static final String SERIALIZED_NAME_LOCAL_STATUS_PAGE_ENABLED = "localStatusPageEnabled";
  @SerializedName(SERIALIZED_NAME_LOCAL_STATUS_PAGE_ENABLED)
  private Boolean localStatusPageEnabled;

  public static final String SERIALIZED_NAME_REMOTE_STATUS_PAGE_ENABLED = "remoteStatusPageEnabled";
  @SerializedName(SERIALIZED_NAME_REMOTE_STATUS_PAGE_ENABLED)
  private Boolean remoteStatusPageEnabled;

  public static final String SERIALIZED_NAME_SECURE_PORT = "securePort";
  @SerializedName(SERIALIZED_NAME_SECURE_PORT)
  private GetNetworkSettings200ResponseSecurePort securePort;

  public UpdateNetworkSettingsRequest() {
  }

  public UpdateNetworkSettingsRequest localStatusPage(UpdateNetworkSettingsRequestLocalStatusPage localStatusPage) {
    this.localStatusPage = localStatusPage;
    return this;
  }

  /**
   * Get localStatusPage
   * @return localStatusPage
   */
  @javax.annotation.Nullable
  public UpdateNetworkSettingsRequestLocalStatusPage getLocalStatusPage() {
    return localStatusPage;
  }

  public void setLocalStatusPage(UpdateNetworkSettingsRequestLocalStatusPage localStatusPage) {
    this.localStatusPage = localStatusPage;
  }


  public UpdateNetworkSettingsRequest localStatusPageEnabled(Boolean localStatusPageEnabled) {
    this.localStatusPageEnabled = localStatusPageEnabled;
    return this;
  }

  /**
   * Enables / disables the local device status pages (&lt;a target&#x3D;&#39;_blank&#39; href&#x3D;&#39;http://my.meraki.com/&#39;&gt;my.meraki.com, &lt;/a&gt;&lt;a target&#x3D;&#39;_blank&#39; href&#x3D;&#39;http://ap.meraki.com/&#39;&gt;ap.meraki.com, &lt;/a&gt;&lt;a target&#x3D;&#39;_blank&#39; href&#x3D;&#39;http://switch.meraki.com/&#39;&gt;switch.meraki.com, &lt;/a&gt;&lt;a target&#x3D;&#39;_blank&#39; href&#x3D;&#39;http://wired.meraki.com/&#39;&gt;wired.meraki.com&lt;/a&gt;). Optional (defaults to false)
   * @return localStatusPageEnabled
   */
  @javax.annotation.Nullable
  public Boolean getLocalStatusPageEnabled() {
    return localStatusPageEnabled;
  }

  public void setLocalStatusPageEnabled(Boolean localStatusPageEnabled) {
    this.localStatusPageEnabled = localStatusPageEnabled;
  }


  public UpdateNetworkSettingsRequest remoteStatusPageEnabled(Boolean remoteStatusPageEnabled) {
    this.remoteStatusPageEnabled = remoteStatusPageEnabled;
    return this;
  }

  /**
   * Enables / disables access to the device status page (&lt;a target&#x3D;&#39;_blank&#39;&gt;http://[device&#39;s LAN IP])&lt;/a&gt;. Optional. Can only be set if localStatusPageEnabled is set to true
   * @return remoteStatusPageEnabled
   */
  @javax.annotation.Nullable
  public Boolean getRemoteStatusPageEnabled() {
    return remoteStatusPageEnabled;
  }

  public void setRemoteStatusPageEnabled(Boolean remoteStatusPageEnabled) {
    this.remoteStatusPageEnabled = remoteStatusPageEnabled;
  }


  public UpdateNetworkSettingsRequest securePort(GetNetworkSettings200ResponseSecurePort securePort) {
    this.securePort = securePort;
    return this;
  }

  /**
   * Get securePort
   * @return securePort
   */
  @javax.annotation.Nullable
  public GetNetworkSettings200ResponseSecurePort getSecurePort() {
    return securePort;
  }

  public void setSecurePort(GetNetworkSettings200ResponseSecurePort securePort) {
    this.securePort = securePort;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNetworkSettingsRequest updateNetworkSettingsRequest = (UpdateNetworkSettingsRequest) o;
    return Objects.equals(this.localStatusPage, updateNetworkSettingsRequest.localStatusPage) &&
        Objects.equals(this.localStatusPageEnabled, updateNetworkSettingsRequest.localStatusPageEnabled) &&
        Objects.equals(this.remoteStatusPageEnabled, updateNetworkSettingsRequest.remoteStatusPageEnabled) &&
        Objects.equals(this.securePort, updateNetworkSettingsRequest.securePort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localStatusPage, localStatusPageEnabled, remoteStatusPageEnabled, securePort);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNetworkSettingsRequest {\n");
    sb.append("    localStatusPage: ").append(toIndentedString(localStatusPage)).append("\n");
    sb.append("    localStatusPageEnabled: ").append(toIndentedString(localStatusPageEnabled)).append("\n");
    sb.append("    remoteStatusPageEnabled: ").append(toIndentedString(remoteStatusPageEnabled)).append("\n");
    sb.append("    securePort: ").append(toIndentedString(securePort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("localStatusPage");
    openapiFields.add("localStatusPageEnabled");
    openapiFields.add("remoteStatusPageEnabled");
    openapiFields.add("securePort");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateNetworkSettingsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateNetworkSettingsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateNetworkSettingsRequest is not found in the empty JSON string", UpdateNetworkSettingsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateNetworkSettingsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateNetworkSettingsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `localStatusPage`
      if (jsonObj.get("localStatusPage") != null && !jsonObj.get("localStatusPage").isJsonNull()) {
        UpdateNetworkSettingsRequestLocalStatusPage.validateJsonElement(jsonObj.get("localStatusPage"));
      }
      // validate the optional field `securePort`
      if (jsonObj.get("securePort") != null && !jsonObj.get("securePort").isJsonNull()) {
        GetNetworkSettings200ResponseSecurePort.validateJsonElement(jsonObj.get("securePort"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateNetworkSettingsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateNetworkSettingsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateNetworkSettingsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateNetworkSettingsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateNetworkSettingsRequest>() {
           @Override
           public void write(JsonWriter out, UpdateNetworkSettingsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateNetworkSettingsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateNetworkSettingsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateNetworkSettingsRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateNetworkSettingsRequest
   */
  public static UpdateNetworkSettingsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateNetworkSettingsRequest.class);
  }

  /**
   * Convert an instance of UpdateNetworkSettingsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

