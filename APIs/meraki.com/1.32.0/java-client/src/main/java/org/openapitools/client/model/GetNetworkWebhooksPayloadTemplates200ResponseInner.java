/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkWebhooksPayloadTemplates200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkWebhooksPayloadTemplates200ResponseInner {
  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner> headers = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PAYLOAD_TEMPLATE_ID = "payloadTemplateId";
  @SerializedName(SERIALIZED_NAME_PAYLOAD_TEMPLATE_ID)
  private String payloadTemplateId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GetNetworkWebhooksPayloadTemplates200ResponseInner() {
  }

  public GetNetworkWebhooksPayloadTemplates200ResponseInner body(String body) {
    this.body = body;
    return this;
  }

  /**
   * The body of the payload template, in liquid template
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public GetNetworkWebhooksPayloadTemplates200ResponseInner headers(List<GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner> headers) {
    this.headers = headers;
    return this;
  }

  public GetNetworkWebhooksPayloadTemplates200ResponseInner addHeadersItem(GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner headersItem) {
    if (this.headers == null) {
      this.headers = new ArrayList<>();
    }
    this.headers.add(headersItem);
    return this;
  }

  /**
   * The payload template headers, will be rendered as a key-value pair in the webhook.
   * @return headers
   */
  @javax.annotation.Nullable
  public List<GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner> getHeaders() {
    return headers;
  }

  public void setHeaders(List<GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner> headers) {
    this.headers = headers;
  }


  public GetNetworkWebhooksPayloadTemplates200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the payload template
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetNetworkWebhooksPayloadTemplates200ResponseInner payloadTemplateId(String payloadTemplateId) {
    this.payloadTemplateId = payloadTemplateId;
    return this;
  }

  /**
   * Webhook payload template Id
   * @return payloadTemplateId
   */
  @javax.annotation.Nullable
  public String getPayloadTemplateId() {
    return payloadTemplateId;
  }

  public void setPayloadTemplateId(String payloadTemplateId) {
    this.payloadTemplateId = payloadTemplateId;
  }


  public GetNetworkWebhooksPayloadTemplates200ResponseInner type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the payload template
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkWebhooksPayloadTemplates200ResponseInner getNetworkWebhooksPayloadTemplates200ResponseInner = (GetNetworkWebhooksPayloadTemplates200ResponseInner) o;
    return Objects.equals(this.body, getNetworkWebhooksPayloadTemplates200ResponseInner.body) &&
        Objects.equals(this.headers, getNetworkWebhooksPayloadTemplates200ResponseInner.headers) &&
        Objects.equals(this.name, getNetworkWebhooksPayloadTemplates200ResponseInner.name) &&
        Objects.equals(this.payloadTemplateId, getNetworkWebhooksPayloadTemplates200ResponseInner.payloadTemplateId) &&
        Objects.equals(this.type, getNetworkWebhooksPayloadTemplates200ResponseInner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, headers, name, payloadTemplateId, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkWebhooksPayloadTemplates200ResponseInner {\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    payloadTemplateId: ").append(toIndentedString(payloadTemplateId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("body");
    openapiFields.add("headers");
    openapiFields.add("name");
    openapiFields.add("payloadTemplateId");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkWebhooksPayloadTemplates200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkWebhooksPayloadTemplates200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkWebhooksPayloadTemplates200ResponseInner is not found in the empty JSON string", GetNetworkWebhooksPayloadTemplates200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkWebhooksPayloadTemplates200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkWebhooksPayloadTemplates200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if (jsonObj.get("headers") != null && !jsonObj.get("headers").isJsonNull()) {
        JsonArray jsonArrayheaders = jsonObj.getAsJsonArray("headers");
        if (jsonArrayheaders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("headers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `headers` to be an array in the JSON string but got `%s`", jsonObj.get("headers").toString()));
          }

          // validate the optional field `headers` (array)
          for (int i = 0; i < jsonArrayheaders.size(); i++) {
            GetNetworkWebhooksPayloadTemplates200ResponseInnerHeadersInner.validateJsonElement(jsonArrayheaders.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("payloadTemplateId") != null && !jsonObj.get("payloadTemplateId").isJsonNull()) && !jsonObj.get("payloadTemplateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payloadTemplateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payloadTemplateId").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkWebhooksPayloadTemplates200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkWebhooksPayloadTemplates200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkWebhooksPayloadTemplates200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkWebhooksPayloadTemplates200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkWebhooksPayloadTemplates200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkWebhooksPayloadTemplates200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkWebhooksPayloadTemplates200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkWebhooksPayloadTemplates200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkWebhooksPayloadTemplates200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkWebhooksPayloadTemplates200ResponseInner
   */
  public static GetNetworkWebhooksPayloadTemplates200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkWebhooksPayloadTemplates200ResponseInner.class);
  }

  /**
   * Convert an instance of GetNetworkWebhooksPayloadTemplates200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

